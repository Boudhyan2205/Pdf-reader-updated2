//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package textshaping ;import (_fg "github.com/unidoc/garabic";_g "golang.org/x/text/unicode/bidi";_f "strings";);

// ArabicShape returns shaped arabic glyphs string.
func ArabicShape (text string )(string ,error ){_fgg :=_g .Paragraph {};_fgg .SetString (text );_b ,_ce :=_fgg .Order ();if _ce !=nil {return "",_ce ;};for _ge :=0;_ge < _b .NumRuns ();_ge ++{_ca :=_b .Run (_ge );_fc :=_ca .String ();if _ca .Direction ()==_g .RightToLeft {var (_d =_fg .Shape (_fc );
_e =[]rune (_d );_cc =make ([]rune ,len (_e )););_fd :=0;for _ga :=len (_e )-1;_ga >=0;_ga --{_cc [_fd ]=_e [_ga ];_fd ++;};_fc =string (_cc );text =_f .Replace (text ,_f .TrimSpace (_ca .String ()),_fc ,1);};};return text ,nil ;};