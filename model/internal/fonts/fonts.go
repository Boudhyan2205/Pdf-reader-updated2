//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_e "bytes";_bc "encoding/binary";_aa "errors";_c "fmt";_ae "github.com/unidoc/unipdf/v3/common";_ga "github.com/unidoc/unipdf/v3/core";_dd "github.com/unidoc/unipdf/v3/internal/cmap";_bcg "github.com/unidoc/unipdf/v3/internal/textencoding";
_g "golang.org/x/xerrors";_ab "io";_bd "os";_b "regexp";_d "sort";_cg "strings";_f "sync";);func (_bbff *ttfParser )readByte ()(_cabf uint8 ){_bc .Read (_bbff ._fgbg ,_bc .BigEndian ,&_cabf );return _cabf ;};type StdFontName string ;type Descriptor struct{Name StdFontName ;
Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_fd ,_ed :=_ddf .read (name );
if !_ed {return StdFont {},false ;};return _fd (),true ;};var _gfe *RuneCharSafeMap ;var _ddc _f .Once ;var _add =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _bcg .TextEncoder )StdFont {var _fgd rune =0xA0;if _ ,_fda :=metrics .Read (_fgd );!_fda {_ba ,_ :=metrics .Read (0x20);metrics .Write (_fgd ,_ba );};return StdFont {_fg :desc ,_ge :metrics ,_deg :encoder };
};var _ Font =StdFont {};func (_cbfb *ttfParser )ParseMaxp ()error {if _dced :=_cbfb .Seek ("\u006d\u0061\u0078\u0070");_dced !=nil {return _dced ;};_cbfb .Skip (4);_cbfb ._gaac =_cbfb .ReadUShort ();return nil ;};func _baab ()StdFont {_adg .Do (_dee );
_eeg :=Descriptor {Name :TimesRomanName ,Family :_cbf ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};return NewStdFont (_eeg ,_fe );
};func IsStdFont (name StdFontName )bool {_ ,_cf :=_ddf .read (name );return _cf };var _fe *RuneCharSafeMap ;func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_gfdb :=_ddf .read (name );_gfdb {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_ddf .write (name ,fnc );for _ ,_bb :=range aliases {RegisterStdFont (_bb ,fnc );};};func (_cc *TtfType )MakeToUnicode ()*_dd .CMap {_fad :=make (map[_dd .CharCode ]rune );if len (_cc .GlyphNames )==0{return _dd .NewToUnicodeCMap (_fad );};for _deeb ,_ceg :=range _cc .Chars {_ggae :=_dd .CharCode (_deeb );
_bdgg :=_cc .GlyphNames [_ceg ];_abcb ,_dba :=_bcg .GlyphToRune (_bdgg );if !_dba {_ae .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_deeb ,_bdgg );
_abcb =_bcg .MissingCodeRune ;};_fad [_ggae ]=_abcb ;};return _dd .NewToUnicodeCMap (_fad );};func (_aad StdFont )GetMetricsTable ()*RuneCharSafeMap {return _aad ._ge };const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);var _adg _f .Once ;
func (_bde StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_fca ,_ce :=_bde ._ge .Read (r );return _fca ,_ce ;};func (_fc CharMetrics )String ()string {return _c .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_fc .Wx ,_fc .Wy );
};var _bcgf =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func _ea ()StdFont {_ddc .Do (_dg );_fbg :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_fbg ,_gfe );};func (_ddb *ttfParser )ParseName ()error {if _cfa :=_ddb .Seek ("\u006e\u0061\u006d\u0065");_cfa !=nil {return _cfa ;};_ffeg ,_ :=_ddb ._fgbg .Seek (0,_ab .SeekCurrent );_ddb ._dcf .PostScriptName ="";_ddb .Skip (2);_gfea :=_ddb .ReadUShort ();
_edf :=_ddb .ReadUShort ();for _cbdg :=uint16 (0);_cbdg < _gfea &&_ddb ._dcf .PostScriptName =="";_cbdg ++{_ddb .Skip (3*2);_afc :=_ddb .ReadUShort ();_dge :=_ddb .ReadUShort ();_dae :=_ddb .ReadUShort ();if _afc ==6{_ddb ._fgbg .Seek (_ffeg +int64 (_edf )+int64 (_dae ),_ab .SeekStart );
_fcag ,_cbc :=_ddb .ReadStr (int (_dge ));if _cbc !=nil {return _cbc ;};_fcag =_cg .Replace (_fcag ,"\u0000","",-1);_gec ,_cbc :=_b .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _cbc !=nil {return _cbc ;
};_ddb ._dcf .PostScriptName =_gec .ReplaceAllString (_fcag ,"");};};if _ddb ._dcf .PostScriptName ==""{_ae .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_ecf *ttfParser )ReadShort ()(_geea int16 ){_bc .Read (_ecf ._fgbg ,_bc .BigEndian ,&_geea );return _geea ;};func (_gfc *ttfParser )ParseOS2 ()error {if _aafd :=_gfc .Seek ("\u004f\u0053\u002f\u0032");_aafd !=nil {return _aafd ;};
_abaf :=_gfc .ReadUShort ();_gfc .Skip (4*2);_gfc .Skip (11*2+10+4*4+4);_cbdc :=_gfc .ReadUShort ();_gfc ._dcf .Bold =(_cbdc &32)!=0;_gfc .Skip (2*2);_gfc ._dcf .TypoAscender =_gfc .ReadShort ();_gfc ._dcf .TypoDescender =_gfc .ReadShort ();if _abaf >=2{_gfc .Skip (3*2+2*4+2);
_gfc ._dcf .CapHeight =_gfc .ReadShort ();}else {_gfc ._dcf .CapHeight =0;};return nil ;};func (_eeaa *ttfParser )Skip (n int ){_eeaa ._fgbg .Seek (int64 (n ),_ab .SeekCurrent )};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;
ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};var _acf *RuneCharSafeMap ;
const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););type CharMetrics struct{Wx float64 ;Wy float64 ;};func (_ead *ttfParser )Read32Fixed ()float64 {_dbfb :=float64 (_ead .ReadShort ());
_adga :=float64 (_ead .ReadUShort ())/65536.0;return _dbfb +_adga ;};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););func init (){RegisterStdFont (CourierName ,_bca ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_aeb ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_cef ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_aag ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func (_agf *RuneCharSafeMap )Range (f func (_fa rune ,_gg CharMetrics )(_gc bool )){_agf ._gf .RLock ();
defer _agf ._gf .RUnlock ();for _fb ,_gfb :=range _agf ._cd {if f (_fb ,_gfb ){break ;};};};func (_cab *ttfParser )parseCmapSubtable31 (_acff int64 )error {_dcc :=make ([]rune ,0,8);_ada :=make ([]rune ,0,8);_cbfa :=make ([]int16 ,0,8);_afg :=make ([]uint16 ,0,8);
_cab ._dcf .Chars =make (map[rune ]GID );_cab ._fgbg .Seek (int64 (_cab ._fbgd ["\u0063\u006d\u0061\u0070"])+_acff ,_ab .SeekStart );_ceb :=_cab .ReadUShort ();if _ceb !=4{return _g .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_ceb ,_ga .ErrNotSupported );
};_cab .Skip (2*2);_ffa :=int (_cab .ReadUShort ()/2);_cab .Skip (3*2);for _cge :=0;_cge < _ffa ;_cge ++{_ada =append (_ada ,rune (_cab .ReadUShort ()));};_cab .Skip (2);for _fgc :=0;_fgc < _ffa ;_fgc ++{_dcc =append (_dcc ,rune (_cab .ReadUShort ()));
};for _ef :=0;_ef < _ffa ;_ef ++{_cbfa =append (_cbfa ,_cab .ReadShort ());};_cga ,_ :=_cab ._fgbg .Seek (int64 (0),_ab .SeekCurrent );for _deb :=0;_deb < _ffa ;_deb ++{_afg =append (_afg ,_cab .ReadUShort ());};for _eea :=0;_eea < _ffa ;_eea ++{_bce :=_dcc [_eea ];
_fae :=_ada [_eea ];_cbdd :=_cbfa [_eea ];_dccg :=_afg [_eea ];if _dccg > 0{_cab ._fgbg .Seek (_cga +2*int64 (_eea )+int64 (_dccg ),_ab .SeekStart );};for _fac :=_bce ;_fac <=_fae ;_fac ++{if _fac ==0xFFFF{break ;};var _gbb int32 ;if _dccg > 0{_gbb =int32 (_cab .ReadUShort ());
if _gbb > 0{_gbb +=int32 (_cbdd );};}else {_gbb =_fac +int32 (_cbdd );};if _gbb >=65536{_gbb -=65536;};if _gbb > 0{_cab ._dcf .Chars [_fac ]=GID (_gbb );};};};return nil ;};var _dbe *RuneCharSafeMap ;var _ade =&RuneCharSafeMap {_cd :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func (_aaf *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_aaf ._gf .Lock ();defer _aaf ._gf .Unlock ();_aaf ._cd [b ]=r ;};type fontMap struct{_f .Mutex ;_aca map[StdFontName ]func ()StdFont ;};type ttfParser struct{_dcf TtfType ;_fgbg _ab .ReadSeeker ;
_fbgd map[string ]uint32 ;_cffa uint16 ;_gaac uint16 ;};var _abd *RuneCharSafeMap ;func _aff ()StdFont {_adg .Do (_dee );_bdcg :=Descriptor {Name :TimesBoldName ,Family :_cbf ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_bdcg ,_dda );};func (_fee *ttfParser )ParseHmtx ()error {if _bgc :=_fee .Seek ("\u0068\u006d\u0074\u0078");_bgc !=nil {return _bgc ;};_fee ._dcf .Widths =make ([]uint16 ,0,8);for _gfeg :=uint16 (0);_gfeg < _fee ._cffa ;_gfeg ++{_fee ._dcf .Widths =append (_fee ._dcf .Widths ,_fee .ReadUShort ());
_fee .Skip (2);};if _fee ._cffa < _fee ._gaac &&_fee ._cffa > 0{_gcdb :=_fee ._dcf .Widths [_fee ._cffa -1];for _gba :=_fee ._cffa ;_gba < _fee ._gaac ;_gba ++{_fee ._dcf .Widths =append (_fee ._dcf .Widths ,_gcdb );};};return nil ;};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_cd :make (map[rune ]CharMetrics ,length )};
};func init (){RegisterStdFont (HelveticaName ,_eda ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_ea ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_ad ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (HelveticaBoldObliqueName ,_bge ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};func NewFontFile2FromPdfObject (obj _ga .PdfObject )(TtfType ,error ){obj =_ga .TraceToDirectObject (obj );_dce ,_bcf :=obj .(*_ga .PdfObjectStream );
if !_bcf {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );return TtfType {},_ga .ErrTypeError ;
};_dgf ,_bfg :=_ga .DecodeStream (_dce );if _bfg !=nil {return TtfType {},_bfg ;};_bee :=ttfParser {_fgbg :_e .NewReader (_dgf )};return _bee .Parse ();};func _aag ()StdFont {_gdb .Do (_fcb );_defb :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_defb ,_cdf );};func _bcga ()StdFont {_gcd :=_bcg .NewSymbolEncoder ();_cb :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_cb ,_ade ,_gcd );};func _fcb (){const _dbc =600;_dbe =MakeRuneCharSafeMap (len (_dc ));for _ ,_bef :=range _dc {_dbe .Write (_bef ,CharMetrics {Wx :_dbc });};_cdb =_dbe .Copy ();_cdf =_dbe .Copy ();_abc =_dbe .Copy ();};
var _dda *RuneCharSafeMap ;var _cff =&RuneCharSafeMap {_cd :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func (_gca *TtfType )NewEncoder ()_bcg .TextEncoder {return _bcg .NewTrueTypeFontEncoder (_gca .Chars )};var _abe *RuneCharSafeMap ;type FontWeight int ;func (_aagf *ttfParser )parseCmapSubtable10 (_cfec int64 )error {if _aagf ._dcf .Chars ==nil {_aagf ._dcf .Chars =make (map[rune ]GID );
};_aagf ._fgbg .Seek (int64 (_aagf ._fbgd ["\u0063\u006d\u0061\u0070"])+_cfec ,_ab .SeekStart );var _cgd ,_cbdf uint32 ;_egaf :=_aagf .ReadUShort ();if _egaf < 8{_cgd =uint32 (_aagf .ReadUShort ());_cbdf =uint32 (_aagf .ReadUShort ());}else {_aagf .ReadUShort ();
_cgd =_aagf .ReadULong ();_cbdf =_aagf .ReadULong ();};_ae .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_egaf ,_cgd ,_cbdf );
if _egaf !=0{return _aa .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_aec ,_cad :=_aagf .ReadStr (256);
if _cad !=nil {return _cad ;};_cba :=[]byte (_aec );for _cce ,_fgcf :=range _cba {_aagf ._dcf .Chars [rune (_cce )]=GID (_fgcf );if _fgcf !=0{_c .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_cce ,_fgcf ,rune (_fgcf ));
};};return nil ;};func (_aecf *ttfParser )parseCmapFormat12 ()error {_gbd :=_aecf .ReadULong ();_ae .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_aecf ._dcf .String (),_gbd );
for _cfed :=uint32 (0);_cfed < _gbd ;_cfed ++{_dfc :=_aecf .ReadULong ();_bbgc :=_aecf .ReadULong ();_ffac :=_aecf .ReadULong ();if _dfc > 0x0010FFFF||(0xD800<=_dfc &&_dfc <=0xDFFF){return _aa .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _bbgc < _dfc ||_bbgc > 0x0010FFFF||(0xD800<=_bbgc &&_bbgc <=0xDFFF){return _aa .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _bcbc :=_dfc ;_bcbc <=_bbgc ;
_bcbc ++{if _bcbc > 0x10FFFF{_ae .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_aecf ._dcf .Chars [rune (_bcbc )]=GID (_ffac );_ffac ++;};};return nil ;};func (_fcf StdFont )Descriptor ()Descriptor {return _fcf ._fg };func TtfParse (r _ab .ReadSeeker )(TtfType ,error ){_aba :=&ttfParser {_fgbg :r };return _aba .Parse ()};func init (){RegisterStdFont (SymbolName ,_bcga ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_dea );};func _eda ()StdFont {_ddc .Do (_dg );_bf :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_bf ,_abd );};var _cefg =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_cde *ttfParser )ReadULong ()(_ebed uint32 ){_bc .Read (_cde ._fgbg ,_bc .BigEndian ,&_ebed );return _ebed ;};func (_bac StdFont )Encoder ()_bcg .TextEncoder {return _bac ._deg };func _bca ()StdFont {_gdb .Do (_fcb );_gga :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_gga ,_dbe );};func init (){RegisterStdFont (TimesRomanName ,_baab ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_aff ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_bcb ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_fgf ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _ee =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_bbe *TtfType )MakeEncoder ()(_bcg .SimpleEncoder ,error ){_fcd :=make (map[_bcg .CharCode ]GlyphName );for _faac :=_bcg .CharCode (0);_faac <=256;_faac ++{_ec :=rune (_faac );_fdg ,_bdg :=_bbe .Chars [_ec ];if !_bdg {continue ;};var _bfd GlyphName ;
if int (_fdg )>=0&&int (_fdg )< len (_bbe .GlyphNames ){_bfd =_bbe .GlyphNames [_fdg ];}else {_ggac :=rune (_fdg );if _df ,_dgd :=_bcg .RuneToGlyph (_ggac );_dgd {_bfd =_df ;};};if _bfd !=""{_fcd [_faac ]=_bfd ;};};if len (_fcd )==0{_ae .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_bbe ,_bbe .Chars );
};return _bcg .NewCustomSimpleTextEncoder (_fcd ,nil );};func TtfParseFile (fileStr string )(TtfType ,error ){_egd ,_bfc :=_bd .Open (fileStr );if _bfc !=nil {return TtfType {},_bfc ;};defer _egd .Close ();return TtfParse (_egd );};func (_aeg *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_aeg ._gf .RLock ();
defer _aeg ._gf .RUnlock ();_bcd ,_af :=_aeg ._cd [b ];return _bcd ,_af ;};func (_ff *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_ag :=MakeRuneCharSafeMap (_ff .Length ());_ff .Range (func (_ac rune ,_bdf CharMetrics )(_age bool ){_ag ._cd [_ac ]=_bdf ;
return false });return _ag ;};func (_bcde *ttfParser )ParseComponents ()error {if _bcag :=_bcde .ParseHead ();_bcag !=nil {return _bcag ;};if _dgc :=_bcde .ParseHhea ();_dgc !=nil {return _dgc ;};if _bfe :=_bcde .ParseMaxp ();_bfe !=nil {return _bfe ;};
if _edb :=_bcde .ParseHmtx ();_edb !=nil {return _edb ;};if _ ,_bdfe :=_bcde ._fbgd ["\u006e\u0061\u006d\u0065"];_bdfe {if _edbf :=_bcde .ParseName ();_edbf !=nil {return _edbf ;};};if _ ,_eac :=_bcde ._fbgd ["\u004f\u0053\u002f\u0032"];_eac {if _abb :=_bcde .ParseOS2 ();
_abb !=nil {return _abb ;};};if _ ,_ddag :=_bcde ._fbgd ["\u0070\u006f\u0073\u0074"];_ddag {if _dbg :=_bcde .ParsePost ();_dbg !=nil {return _dbg ;};};if _ ,_defa :=_bcde ._fbgd ["\u0063\u006d\u0061\u0070"];_defa {if _bff :=_bcde .ParseCmap ();_bff !=nil {return _bff ;
};};return nil ;};var _gac =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_dbb *ttfParser )parseCmapFormat6 ()error {_face :=int (_dbb .ReadUShort ());_gcc :=int (_dbb .ReadUShort ());_ae .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_dbb ._dcf .String (),_face ,_gcc );
for _feg :=0;_feg < _gcc ;_feg ++{_fadc :=GID (_dbb .ReadUShort ());_dbb ._dcf .Chars [rune (_feg +_face )]=_fadc ;};return nil ;};type GID =_bcg .GID ;func (_edg *ttfParser )Parse ()(TtfType ,error ){_cdfc ,_fdf :=_edg .ReadStr (4);if _fdf !=nil {return TtfType {},_fdf ;
};if _cdfc =="\u004f\u0054\u0054\u004f"{return TtfType {},_g .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_ga .ErrNotSupported );
};if _cdfc !="\u0000\u0001\u0000\u0000"&&_cdfc !="\u0074\u0072\u0075\u0065"{_ae .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_cdfc );
};_geg :=int (_edg .ReadUShort ());_edg .Skip (3*2);_edg ._fbgd =make (map[string ]uint32 );var _eaf string ;for _fcg :=0;_fcg < _geg ;_fcg ++{_eaf ,_fdf =_edg .ReadStr (4);if _fdf !=nil {return TtfType {},_fdf ;};_edg .Skip (4);_fcfe :=_edg .ReadULong ();
_edg .Skip (4);_edg ._fbgd [_eaf ]=_fcfe ;};_ae .Log .Trace (_ffb (_edg ._fbgd ));if _fdf =_edg .ParseComponents ();_fdf !=nil {return TtfType {},_fdf ;};return _edg ._dcf ,nil ;};func (_bdge *ttfParser )ReadSByte ()(_eaab int8 ){_bc .Read (_bdge ._fgbg ,_bc .BigEndian ,&_eaab );
return _eaab ;};func (_cbd *ttfParser )ParseHead ()error {if _ffe :=_cbd .Seek ("\u0068\u0065\u0061\u0064");_ffe !=nil {return _ffe ;};_cbd .Skip (3*4);_acaa :=_cbd .ReadULong ();if _acaa !=0x5F0F3CF5{_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_cbd );
};_cbd .Skip (2);_cbd ._dcf .UnitsPerEm =_cbd .ReadUShort ();_cbd .Skip (2*8);_cbd ._dcf .Xmin =_cbd .ReadShort ();_cbd ._dcf .Ymin =_cbd .ReadShort ();_cbd ._dcf .Xmax =_cbd .ReadShort ();_cbd ._dcf .Ymax =_cbd .ReadShort ();return nil ;};type StdFont struct{_fg Descriptor ;
_ge *RuneCharSafeMap ;_deg _bcg .TextEncoder ;};func (_geb *ttfParser )ParseCmap ()error {var _ecd int64 ;if _dcb :=_geb .Seek ("\u0063\u006d\u0061\u0070");_dcb !=nil {return _dcb ;};_ae .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_geb .ReadUShort ();
_bcc :=int (_geb .ReadUShort ());_ggc :=int64 (0);_fdb :=int64 (0);_gcdg :=int64 (0);for _ebe :=0;_ebe < _bcc ;_ebe ++{_bdb :=_geb .ReadUShort ();_gdbf :=_geb .ReadUShort ();_ecd =int64 (_geb .ReadULong ());if _bdb ==3&&_gdbf ==1{_fdb =_ecd ;}else if _bdb ==3&&_gdbf ==10{_gcdg =_ecd ;
}else if _bdb ==1&&_gdbf ==0{_ggc =_ecd ;};};if _ggc !=0{if _bbg :=_geb .parseCmapVersion (_ggc );_bbg !=nil {return _bbg ;};};if _fdb !=0{if _daf :=_geb .parseCmapSubtable31 (_fdb );_daf !=nil {return _daf ;};};if _gcdg !=0{if _cbe :=_geb .parseCmapVersion (_gcdg );
_cbe !=nil {return _cbe ;};};if _fdb ==0&&_ggc ==0&&_gcdg ==0{_ae .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func (_cae *ttfParser )parseCmapVersion (_edc int64 )error {_ae .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_edc );if _cae ._dcf .Chars ==nil {_cae ._dcf .Chars =make (map[rune ]GID );
};_cae ._fgbg .Seek (int64 (_cae ._fbgd ["\u0063\u006d\u0061\u0070"])+_edc ,_ab .SeekStart );var _edcd ,_befb uint32 ;_dbf :=_cae .ReadUShort ();if _dbf < 8{_edcd =uint32 (_cae .ReadUShort ());_befb =uint32 (_cae .ReadUShort ());}else {_cae .ReadUShort ();
_edcd =_cae .ReadULong ();_befb =_cae .ReadULong ();};_ae .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_dbf ,_edcd ,_befb );
switch _dbf {case 0:return _cae .parseCmapFormat0 ();case 6:return _cae .parseCmapFormat6 ();case 12:return _cae .parseCmapFormat12 ();default:_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_dbf );
return nil ;};};func (_bfa *ttfParser )Seek (tag string )error {_dacf ,_acaf :=_bfa ._fbgd [tag ];if !_acaf {return _c .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_bfa ._fgbg .Seek (int64 (_dacf ),_ab .SeekStart );
return nil ;};func (_cdfb *ttfParser )ReadStr (length int )(string ,error ){_egdb :=make ([]byte ,length );_gege ,_bae :=_cdfb ._fgbg .Read (_egdb );if _bae !=nil {return "",_bae ;}else if _gege !=length {return "",_c .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_egdb ),nil ;};var _ebg =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_beb *ttfParser )ParseHhea ()error {if _dgdf :=_beb .Seek ("\u0068\u0068\u0065\u0061");_dgdf !=nil {return _dgdf ;};_beb .Skip (4+15*2);_beb ._cffa =_beb .ReadUShort ();return nil ;};func (_eaa *TtfType )String ()string {return _c .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_eaa .PostScriptName ,_eaa .UnitsPerEm ,_eaa .Bold ,_eaa .ItalicAngle ,_eaa .CapHeight ,len (_eaa .Chars ),len (_eaa .GlyphNames ));
};func _cef ()StdFont {_gdb .Do (_fcb );_agd :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_agd ,_abc );};var _abc *RuneCharSafeMap ;func _ffb (_abag map[string ]uint32 )string {var _dfe []string ;for _acc :=range _abag {_dfe =append (_dfe ,_acc );};_d .Slice (_dfe ,func (_aab ,_cgc int )bool {return _abag [_dfe [_aab ]]< _abag [_dfe [_cgc ]]});
_fbc :=[]string {_c .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_abag ))};for _ ,_dgff :=range _dfe {_fbc =append (_fbc ,_c .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_dgff ,_abag [_dgff ]));
};return _cg .Join (_fbc ,"\u000a");};func (_cdfcd *ttfParser )parseCmapFormat0 ()error {_fcfb ,_cbda :=_cdfcd .ReadStr (256);if _cbda !=nil {return _cbda ;};_bfed :=[]byte (_fcfb );_ae .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_cdfcd ._dcf .String (),_fcfb ,_bfed );
for _gag ,_abeb :=range _bfed {_cdfcd ._dcf .Chars [rune (_gag )]=GID (_abeb );};return nil ;};func (_afe StdFont )Name ()string {return string (_afe ._fg .Name )};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");
);type RuneCharSafeMap struct{_cd map[rune ]CharMetrics ;_gf _f .RWMutex ;};var _cdf *RuneCharSafeMap ;func _bcb ()StdFont {_adg .Do (_dee );_bab :=Descriptor {Name :TimesItalicName ,Family :_cbf ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_bab ,_abe );};var _cfeb =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
func _fgf ()StdFont {_adg .Do (_dee );_cfe :=Descriptor {Name :TimesBoldItalicName ,Family :_cbf ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_cfe ,_gde );};func (_cag *ttfParser )ParsePost ()error {if _abee :=_cag .Seek ("\u0070\u006f\u0073\u0074");_abee !=nil {return _abee ;};_eegc :=_cag .Read32Fixed ();_cag ._dcf .ItalicAngle =_cag .Read32Fixed ();_cag ._dcf .UnderlinePosition =_cag .ReadShort ();
_cag ._dcf .UnderlineThickness =_cag .ReadShort ();_cag ._dcf .IsFixedPitch =_cag .ReadULong ()!=0;_cag .ReadULong ();_cag .ReadULong ();_cag .ReadULong ();_cag .ReadULong ();_ae .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_eegc );
switch _eegc {case 1.0:_cag ._dcf .GlyphNames =_cfeb ;case 2.0:_bgg :=int (_cag .ReadUShort ());_abaa :=make ([]int ,_bgg );_cag ._dcf .GlyphNames =make ([]GlyphName ,_bgg );_cdd :=-1;for _bffd :=0;_bffd < _bgg ;_bffd ++{_ggb :=int (_cag .ReadUShort ());
_abaa [_bffd ]=_ggb ;if _ggb <=0x7fff&&_ggb > _cdd {_cdd =_ggb ;};};var _cgag []GlyphName ;if _cdd >=len (_cfeb ){_cgag =make ([]GlyphName ,_cdd -len (_cfeb )+1);for _adab :=0;_adab < _cdd -len (_cfeb )+1;_adab ++{_fef :=int (_cag .readByte ());_gbg ,_agca :=_cag .ReadStr (_fef );
if _agca !=nil {return _agca ;};_cgag [_adab ]=GlyphName (_gbg );};};for _gee :=0;_gee < _bgg ;_gee ++{_bga :=_abaa [_gee ];if _bga < len (_cfeb ){_cag ._dcf .GlyphNames [_gee ]=_cfeb [_bga ];}else if _bga >=len (_cfeb )&&_bga <=32767{_cag ._dcf .GlyphNames [_gee ]=_cgag [_bga -len (_cfeb )];
}else {_cag ._dcf .GlyphNames [_gee ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_ddcb :=make ([]int ,_cag ._gaac );for _fdag :=0;_fdag < len (_ddcb );_fdag ++{_agfg :=int (_cag .ReadSByte ());_ddcb [_fdag ]=_fdag +1+_agfg ;
};_cag ._dcf .GlyphNames =make ([]GlyphName ,len (_ddcb ));for _fde :=0;_fde < len (_cag ._dcf .GlyphNames );_fde ++{_afb :=_cfeb [_ddcb [_fde ]];_cag ._dcf .GlyphNames [_fde ]=_afb ;};case 3.0:_ae .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_ae .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_eegc );};return nil ;};func (_gfd *fontMap )read (_gaa StdFontName )(func ()StdFont ,bool ){_gfd .Lock ();
defer _gfd .Unlock ();_agc ,_agef :=_gfd ._aca [_gaa ];return _agc ,_agef ;};const (_cbf ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");
TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func _dea ()StdFont {_ddff :=_bcg .NewZapfDingbatsEncoder ();
_gaaa :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};return NewStdFontWithEncoding (_gaaa ,_cff ,_ddff );
};func _dee (){_fe =MakeRuneCharSafeMap (len (_dc ));_dda =MakeRuneCharSafeMap (len (_dc ));_gde =MakeRuneCharSafeMap (len (_dc ));_abe =MakeRuneCharSafeMap (len (_dc ));for _fgb ,_ffd :=range _dc {_fe .Write (_ffd ,CharMetrics {Wx :float64 (_add [_fgb ])});
_dda .Write (_ffd ,CharMetrics {Wx :float64 (_ebg [_fgb ])});_gde .Write (_ffd ,CharMetrics {Wx :float64 (_gac [_fgb ])});_abe .Write (_ffd ,CharMetrics {Wx :float64 (_cefg [_fgb ])});};};var _gde *RuneCharSafeMap ;var _dc =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
var _cdb *RuneCharSafeMap ;var _gdb _f .Once ;func (_dgcf *ttfParser )ReadUShort ()(_gagf uint16 ){_bc .Read (_dgcf ._fgbg ,_bc .BigEndian ,&_gagf );return _gagf ;};func _aeb ()StdFont {_gdb .Do (_fcb );_db :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_db ,_cdb );};var _dac *RuneCharSafeMap ;func (_bgf StdFont )ToPdfObject ()_ga .PdfObject {_gb :=_ga .MakeDict ();_gb .Set ("\u0054\u0079\u0070\u0065",_ga .MakeName ("\u0046\u006f\u006e\u0074"));_gb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ga .MakeName ("\u0054\u0079\u0070e\u0031"));
_gb .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_ga .MakeName (_bgf .Name ()));_gb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bgf ._deg .ToPdfObject ());return _ga .MakeIndirectObject (_gb );};var _ddf =&fontMap {_aca :make (map[StdFontName ]func ()StdFont )};
func (_ca *fontMap )write (_aac StdFontName ,_de func ()StdFont ){_ca .Lock ();defer _ca .Unlock ();_ca ._aca [_aac ]=_de ;};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_bcg .NewStandardEncoder ());
};type GlyphName =_bcg .GlyphName ;func _dg (){_abd =MakeRuneCharSafeMap (len (_dc ));_gfe =MakeRuneCharSafeMap (len (_dc ));for _da ,_eg :=range _dc {_abd .Write (_eg ,CharMetrics {Wx :float64 (_bcgf [_da ])});_gfe .Write (_eg ,CharMetrics {Wx :float64 (_ee [_da ])});
};_dac =_abd .Copy ();_acf =_gfe .Copy ();};func (_faa *RuneCharSafeMap )Length ()int {_faa ._gf .RLock ();defer _faa ._gf .RUnlock ();return len (_faa ._cd );};func _bge ()StdFont {_ddc .Do (_dg );_bbf :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_bbf ,_acf );};func _ad ()StdFont {_ddc .Do (_dg );_abg :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_abg ,_dac );};type Font interface{Encoder ()_bcg .TextEncoder ;GetRuneMetrics (_bdc rune )(CharMetrics ,bool );};