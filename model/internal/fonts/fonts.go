//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_dd "bytes";_gg "encoding/binary";_db "errors";_c "fmt";_ed "github.com/unidoc/unipdf/v3/common";_edd "github.com/unidoc/unipdf/v3/core";_ec "github.com/unidoc/unipdf/v3/internal/cmap";_ac "github.com/unidoc/unipdf/v3/internal/textencoding";
_f "io";_e "os";_cg "regexp";_d "sort";_b "strings";_a "sync";);func _fgc (){_cbd =MakeRuneCharSafeMap (len (_bgb ));_ced =MakeRuneCharSafeMap (len (_bgb ));_gdd =MakeRuneCharSafeMap (len (_bgb ));_eca =MakeRuneCharSafeMap (len (_bgb ));for _ffd ,_dgd :=range _bgb {_cbd .Write (_dgd ,CharMetrics {Wx :float64 (_aaeaa [_ffd ])});
_ced .Write (_dgd ,CharMetrics {Wx :float64 (_bef [_ffd ])});_gdd .Write (_dgd ,CharMetrics {Wx :float64 (_ffc [_ffd ])});_eca .Write (_dgd ,CharMetrics {Wx :float64 (_bdd [_ffd ])});};};var _ced *RuneCharSafeMap ;func (_gb *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_cf :=MakeRuneCharSafeMap (_gb .Length ());
_gb .Range (func (_df rune ,_bf CharMetrics )(_eb bool ){_cf ._ea [_df ]=_bf ;return false });return _cf ;};var _ Font =StdFont {};func (_fcef *ttfParser )ParseMaxp ()error {if _ecdd :=_fcef .Seek ("\u006d\u0061\u0078\u0070");_ecdd !=nil {return _ecdd ;
};_fcef .Skip (4);_fcef ._dge =_fcef .ReadUShort ();return nil ;};func (_de *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_de ._cc .RLock ();defer _de ._cc .RUnlock ();_ab ,_cb :=_de ._ea [b ];return _ab ,_cb ;};type GID =_ac .GID ;var _add =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_ebbg *ttfParser )ParseComponents ()error {if _afeb :=_ebbg .ParseHead ();_afeb !=nil {return _afeb ;};if _bbf :=_ebbg .ParseHhea ();_bbf !=nil {return _bbf ;};if _dfg :=_ebbg .ParseMaxp ();_dfg !=nil {return _dfg ;};if _ege :=_ebbg .ParseHmtx ();
_ege !=nil {return _ege ;};if _ ,_aef :=_ebbg ._dbb ["\u006e\u0061\u006d\u0065"];_aef {if _ccf :=_ebbg .ParseName ();_ccf !=nil {return _ccf ;};};if _ ,_gbd :=_ebbg ._dbb ["\u004f\u0053\u002f\u0032"];_gbd {if _eag :=_ebbg .ParseOS2 ();_eag !=nil {return _eag ;
};};if _ ,_ddg :=_ebbg ._dbb ["\u0070\u006f\u0073\u0074"];_ddg {if _ecag :=_ebbg .ParsePost ();_ecag !=nil {return _ecag ;};};if _ ,_cgd :=_ebbg ._dbb ["\u0063\u006d\u0061\u0070"];_cgd {if _fbe :=_ebbg .ParseCmap ();_fbe !=nil {return _fbe ;};};return nil ;
};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_ce :=_fcd .read (name );_ce {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_fcd .write (name ,fnc );for _ ,_da :=range aliases {RegisterStdFont (_da ,fnc );};};var _afb *RuneCharSafeMap ;var _ad *RuneCharSafeMap ;func (_addf *ttfParser )ReadStr (length int )(string ,error ){_bdfd :=make ([]byte ,length );_gddf ,_beab :=_addf ._dbgf .Read (_bdfd );
if _beab !=nil {return "",_beab ;}else if _gddf !=length {return "",_c .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );};return string (_bdfd ),nil ;};
func (_gedf *ttfParser )ReadSByte ()(_caa int8 ){_gg .Read (_gedf ._dbgf ,_gg .BigEndian ,&_caa );return _caa ;};var _fde *RuneCharSafeMap ;func IsStdFont (name StdFontName )bool {_ ,_aec :=_fcd .read (name );return _aec };func (_eage *ttfParser )ReadUShort ()(_gabf uint16 ){_gg .Read (_eage ._dbgf ,_gg .BigEndian ,&_gabf );
return _gabf ;};func (_ddb *ttfParser )ParseName ()error {if _feb :=_ddb .Seek ("\u006e\u0061\u006d\u0065");_feb !=nil {return _feb ;};_fdea ,_ :=_ddb ._dbgf .Seek (0,_f .SeekCurrent );_ddb ._abg .PostScriptName ="";_ddb .Skip (2);_aebc :=_ddb .ReadUShort ();
_cega :=_ddb .ReadUShort ();for _cag :=uint16 (0);_cag < _aebc &&_ddb ._abg .PostScriptName =="";_cag ++{_ddb .Skip (3*2);_bbfb :=_ddb .ReadUShort ();_bca :=_ddb .ReadUShort ();_dcf :=_ddb .ReadUShort ();if _bbfb ==6{_ddb ._dbgf .Seek (_fdea +int64 (_cega )+int64 (_dcf ),_f .SeekStart );
_bcff ,_cef :=_ddb .ReadStr (int (_bca ));if _cef !=nil {return _cef ;};_bcff =_b .Replace (_bcff ,"\u0000","",-1);_bdg ,_cef :=_cg .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _cef !=nil {return _cef ;
};_ddb ._abg .PostScriptName =_bdg .ReplaceAllString (_bcff ,"");};};if _ddb ._abg .PostScriptName ==""{_ed .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};type StdFont struct{_aee Descriptor ;_edf *RuneCharSafeMap ;_efa _ac .TextEncoder ;};type fontMap struct{_a .Mutex ;_ecd map[StdFontName ]func ()StdFont ;};var _bef =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
type RuneCharSafeMap struct{_ea map[rune ]CharMetrics ;_cc _a .RWMutex ;};var _ffc =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_agc StdFont )GetMetricsTable ()*RuneCharSafeMap {return _agc ._edf };func (_aa CharMetrics )String ()string {return _c .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_aa .Wx ,_aa .Wy );};var _cd *RuneCharSafeMap ;var _agb *RuneCharSafeMap ;
func _fb ()StdFont {_gab .Do (_gd );_ggd :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_ggd ,_cd );};func (_eff *ttfParser )parseTTC ()(TtfType ,error ){_eff .Skip (2*2);_ebf :=_eff .ReadULong ();if _ebf < 1{return TtfType {},_db .New ("N\u006f \u0066\u006f\u006e\u0074\u0073\u0020\u0069\u006e \u0054\u0054\u0043\u0020fi\u006c\u0065");
};_faa :=_eff .ReadULong ();_ ,_aeea :=_eff ._dbgf .Seek (int64 (_faa ),_f .SeekStart );if _aeea !=nil {return TtfType {},_aeea ;};return _eff .Parse ();};func (_aag *ttfParser )parseCmapSubtable10 (_aed int64 )error {if _aag ._abg .Chars ==nil {_aag ._abg .Chars =make (map[rune ]GID );
};_aag ._dbgf .Seek (int64 (_aag ._dbb ["\u0063\u006d\u0061\u0070"])+_aed ,_f .SeekStart );var _afc ,_gede uint32 ;_bbge :=_aag .ReadUShort ();if _bbge < 8{_afc =uint32 (_aag .ReadUShort ());_gede =uint32 (_aag .ReadUShort ());}else {_aag .ReadUShort ();
_afc =_aag .ReadULong ();_gede =_aag .ReadULong ();};_ed .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_bbge ,_afc ,_gede );
if _bbge !=0{return _db .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dgc ,_dacd :=_aag .ReadStr (256);
if _dacd !=nil {return _dacd ;};_gca :=[]byte (_dgc );for _fbad ,_cdb :=range _gca {_aag ._abg .Chars [rune (_fbad )]=GID (_cdb );if _cdb !=0{_c .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_fbad ,_cdb ,rune (_cdb ));
};};return nil ;};func (_bgbg *ttfParser )parseCmapSubtable31 (_dgdg int64 )error {_aafg :=make ([]rune ,0,8);_dbc :=make ([]rune ,0,8);_afeg :=make ([]int16 ,0,8);_fdab :=make ([]uint16 ,0,8);_bgbg ._abg .Chars =make (map[rune ]GID );_bgbg ._dbgf .Seek (int64 (_bgbg ._dbb ["\u0063\u006d\u0061\u0070"])+_dgdg ,_f .SeekStart );
_bag :=_bgbg .ReadUShort ();if _bag !=4{_ed .Log .Debug ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_bag );
return nil ;};_bgbg .Skip (2*2);_gdff :=int (_bgbg .ReadUShort ()/2);_bgbg .Skip (3*2);for _ccfd :=0;_ccfd < _gdff ;_ccfd ++{_dbc =append (_dbc ,rune (_bgbg .ReadUShort ()));};_bgbg .Skip (2);for _fegf :=0;_fegf < _gdff ;_fegf ++{_aafg =append (_aafg ,rune (_bgbg .ReadUShort ()));
};for _fba :=0;_fba < _gdff ;_fba ++{_afeg =append (_afeg ,_bgbg .ReadShort ());};_fgb ,_ :=_bgbg ._dbgf .Seek (int64 (0),_f .SeekCurrent );for _dgeb :=0;_dgeb < _gdff ;_dgeb ++{_fdab =append (_fdab ,_bgbg .ReadUShort ());};for _bdf :=0;_bdf < _gdff ;_bdf ++{_caf :=_aafg [_bdf ];
_adfa :=_dbc [_bdf ];_fegg :=_afeg [_bdf ];_cdc :=_fdab [_bdf ];if _cdc > 0{_bgbg ._dbgf .Seek (_fgb +2*int64 (_bdf )+int64 (_cdc ),_f .SeekStart );};for _dfa :=_caf ;_dfa <=_adfa ;_dfa ++{if _dfa ==0xFFFF{break ;};var _ecb int32 ;if _cdc > 0{_ecb =int32 (_bgbg .ReadUShort ());
if _ecb > 0{_ecb +=int32 (_fegg );};}else {_ecb =_dfa +int32 (_fegg );};if _ecb >=65536{_ecb -=65536;};if _ecb > 0{_bgbg ._abg .Chars [_dfa ]=GID (_ecb );};};};return nil ;};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;
IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func init (){RegisterStdFont (CourierName ,_fb ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_ge ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_abe ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_afd ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func (_eaf StdFont )ToPdfObject ()_edd .PdfObject {_acc :=_edd .MakeDict ();_acc .Set ("\u0054\u0079\u0070\u0065",_edd .MakeName ("\u0046\u006f\u006e\u0074"));
_acc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_edd .MakeName ("\u0054\u0079\u0070e\u0031"));_acc .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_edd .MakeName (_eaf .Name ()));_acc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_eaf ._efa .ToPdfObject ());
return _edd .MakeIndirectObject (_acc );};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_ea :make (map[rune ]CharMetrics ,length )};
};func _ge ()StdFont {_gab .Do (_gd );_dc :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_dc ,_cfg );};func (_cgb StdFont )Encoder ()_ac .TextEncoder {return _cgb ._efa };func NewFontFile2FromPdfObject (obj _edd .PdfObject )(TtfType ,error ){obj =_edd .TraceToDirectObject (obj );_cge ,_bad :=obj .(*_edd .PdfObjectStream );
if !_bad {_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );return TtfType {},_edd .ErrTypeError ;
};_gff ,_bcf :=_edd .DecodeStream (_cge );if _bcf !=nil {return TtfType {},_bcf ;};_dag :=ttfParser {_dbgf :_dd .NewReader (_gff )};return _dag .Parse ();};var _eaef =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func (_ef *RuneCharSafeMap )Length ()int {_ef ._cc .RLock ();defer _ef ._cc .RUnlock ();return len (_ef ._ea );};type Font interface{Encoder ()_ac .TextEncoder ;GetRuneMetrics (_gge rune )(CharMetrics ,bool );};func (_cbe *ttfParser )parseCmapFormat6 ()error {_gdg :=int (_cbe .ReadUShort ());
_edda :=int (_cbe .ReadUShort ());_ed .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_cbe ._abg .String (),_gdg ,_edda );
for _cfbb :=0;_cfbb < _edda ;_cfbb ++{_dee :=GID (_cbe .ReadUShort ());_cbe ._abg .Chars [rune (_cfbb +_gdg )]=_dee ;};return nil ;};func _bddb (_gfff map[string ]uint32 )string {var _efd []string ;for _dgf :=range _gfff {_efd =append (_efd ,_dgf );};_d .Slice (_efd ,func (_fbc ,_cgec int )bool {return _gfff [_efd [_fbc ]]< _gfff [_efd [_cgec ]]});
_fgf :=[]string {_c .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_gfff ))};for _ ,_fdff :=range _efd {_fgf =append (_fgf ,_c .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_fdff ,_gfff [_fdff ]));
};return _b .Join (_fgf ,"\u000a");};func init (){RegisterStdFont (HelveticaName ,_ged ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_dac ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_fbd ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (HelveticaBoldObliqueName ,_ebb ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};var _cbd *RuneCharSafeMap ;type ttfParser struct{_abg TtfType ;_dbgf _f .ReadSeeker ;_dbb map[string ]uint32 ;_edc uint16 ;
_dge uint16 ;};func (_egb *ttfParser )parseCmapFormat12 ()error {_cfa :=_egb .ReadULong ();_ed .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_egb ._abg .String (),_cfa );
for _acgb :=uint32 (0);_acgb < _cfa ;_acgb ++{_aaef :=_egb .ReadULong ();_cdef :=_egb .ReadULong ();_bgd :=_egb .ReadULong ();if _aaef > 0x0010FFFF||(0xD800<=_aaef &&_aaef <=0xDFFF){return _db .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _cdef < _aaef ||_cdef > 0x0010FFFF||(0xD800<=_cdef &&_cdef <=0xDFFF){return _db .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _ceb :=_aaef ;_ceb <=_cdef ;
_ceb ++{if _ceb > 0x10FFFF{_ed .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_egb ._abg .Chars [rune (_ceb )]=GID (_bgd );_bgd ++;};};return nil ;};func (_cga *ttfParser )Parse ()(TtfType ,error ){_bbc ,_agf :=_cga .ReadStr (4);if _agf !=nil {return TtfType {},_agf ;};if _bbc =="\u0074\u0074\u0063\u0066"{return _cga .parseTTC ();
}else if _bbc !="\u0000\u0001\u0000\u0000"&&_bbc !="\u0074\u0072\u0075\u0065"{_ed .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_bbc );
};_cca :=int (_cga .ReadUShort ());_cga .Skip (3*2);_cga ._dbb =make (map[string ]uint32 );var _eddd string ;for _fade :=0;_fade < _cca ;_fade ++{_eddd ,_agf =_cga .ReadStr (4);if _agf !=nil {return TtfType {},_agf ;};_cga .Skip (4);_aac :=_cga .ReadULong ();
_cga .Skip (4);_cga ._dbb [_eddd ]=_aac ;};_ed .Log .Trace (_bddb (_cga ._dbb ));if _agf =_cga .ParseComponents ();_agf !=nil {return TtfType {},_agf ;};return _cga ._abg ,nil ;};var _cgbe _a .Once ;var _eca *RuneCharSafeMap ;func _eddc ()StdFont {_fcg .Do (_fgc );
_aaa :=Descriptor {Name :TimesRomanName ,Family :_fg ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};return NewStdFont (_aaa ,_cbd );
};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_ac .NewStandardEncoder ());};const (_fg ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");
TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
);func _aaea ()StdFont {_eacg :=_ac .NewSymbolEncoder ();_gef :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_gef ,_bea ,_eacg );};var _cfg *RuneCharSafeMap ;func (_cbcf *ttfParser )ReadULong ()(_bee uint32 ){_gg .Read (_cbcf ._dbgf ,_gg .BigEndian ,&_bee );return _bee ;};func (_dbce *ttfParser )parseCmapFormat0 ()error {_ebff ,_dddg :=_dbce .ReadStr (256);
if _dddg !=nil {return _dddg ;};_ccb :=[]byte (_ebff );_ed .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_dbce ._abg .String (),_ebff ,_ccb );
for _cbcg ,_bae :=range _ccb {_dbce ._abg .Chars [rune (_cbcg )]=GID (_bae );};return nil ;};func init (){RegisterStdFont (SymbolName ,_aaea ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_dad );};func (_acg StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_fe ,_bg :=_acg ._edf .Read (r );return _fe ,_bg ;};func (_ddd *ttfParser )ParseHmtx ()error {if _agd :=_ddd .Seek ("\u0068\u006d\u0074\u0078");
_agd !=nil {return _agd ;};_ddd ._abg .Widths =make ([]uint16 ,0,8);for _gac :=uint16 (0);_gac < _ddd ._edc ;_gac ++{_ddd ._abg .Widths =append (_ddd ._abg .Widths ,_ddd .ReadUShort ());_ddd .Skip (2);};if _ddd ._edc < _ddd ._dge &&_ddd ._edc > 0{_fea :=_ddd ._abg .Widths [_ddd ._edc -1];
for _adg :=_ddd ._edc ;_adg < _ddd ._dge ;_adg ++{_ddd ._abg .Widths =append (_ddd ._abg .Widths ,_fea );};};return nil ;};func (_deg *fontMap )read (_fc StdFontName )(func ()StdFont ,bool ){_deg .Lock ();defer _deg .Unlock ();_cff ,_aaf :=_deg ._ecd [_fc ];
return _cff ,_aaf ;};var _fcg _a .Once ;func (_cagc *ttfParser )readByte ()(_agcb uint8 ){_gg .Read (_cagc ._dbgf ,_gg .BigEndian ,&_agcb );return _agcb ;};func init (){RegisterStdFont (TimesRomanName ,_eddc ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_gfd ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_dg ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_bbg ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_ee StdFont )Name ()string {return string (_ee ._aee .Name )};func (_fee *TtfType )MakeEncoder ()(_ac .SimpleEncoder ,error ){_cdeg :=make (map[_ac .CharCode ]GlyphName );for _gfe :=_ac .CharCode (0);_gfe <=256;_gfe ++{_adf :=rune (_gfe );_fbdf ,_fda :=_fee .Chars [_adf ];
if !_fda {continue ;};var _fdf GlyphName ;if int (_fbdf )>=0&&int (_fbdf )< len (_fee .GlyphNames ){_fdf =_fee .GlyphNames [_fbdf ];}else {_dda :=rune (_fbdf );if _eef ,_ead :=_ac .RuneToGlyph (_dda );_ead {_fdf =_eef ;};};if _fdf !=""{_cdeg [_gfe ]=_fdf ;
};};if len (_cdeg )==0{_ed .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_fee ,_fee .Chars );
};return _ac .NewCustomSimpleTextEncoder (_cdeg ,nil );};func TtfParseFile (fileStr string )(TtfType ,error ){_ffe ,_eaee :=_e .Open (fileStr );if _eaee !=nil {return TtfType {},_eaee ;};defer _ffe .Close ();return TtfParse (_ffe );};func _dg ()StdFont {_fcg .Do (_fgc );
_ebe :=Descriptor {Name :TimesItalicName ,Family :_fg ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};return NewStdFont (_ebe ,_eca );
};func (_eafd *ttfParser )Skip (n int ){_eafd ._dbgf .Seek (int64 (n ),_f .SeekCurrent )};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;
BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};var _bdd =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func _gd (){const _eac =600;_cd =MakeRuneCharSafeMap (len (_bgb ));for _ ,_aae :=range _bgb {_cd .Write (_aae ,CharMetrics {Wx :_eac });};_cfg =_cd .Copy ();_ad =_cd .Copy ();_afb =_cd .Copy ();};var _gdc *RuneCharSafeMap ;func (_geff *ttfParser )ParseOS2 ()error {if _cce :=_geff .Seek ("\u004f\u0053\u002f\u0032");
_cce !=nil {return _cce ;};_dgdf :=_geff .ReadUShort ();_geff .Skip (4*2);_geff .Skip (11*2+10+4*4+4);_dgce :=_geff .ReadUShort ();_geff ._abg .Bold =(_dgce &32)!=0;_geff .Skip (2*2);_geff ._abg .TypoAscender =_geff .ReadShort ();_geff ._abg .TypoDescender =_geff .ReadShort ();
if _dgdf >=2{_geff .Skip (3*2+2*4+2);_geff ._abg .CapHeight =_geff .ReadShort ();}else {_geff ._abg .CapHeight =0;};return nil ;};func (_cbag *ttfParser )Seek (tag string )error {_deb ,_agde :=_cbag ._dbb [tag ];if !_agde {return _c .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_cbag ._dbgf .Seek (int64 (_deb ),_f .SeekStart );return nil ;};func _gfd ()StdFont {_fcg .Do (_fgc );_dea :=Descriptor {Name :TimesBoldName ,Family :_fg ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_dea ,_ced );};var _fcd =&fontMap {_ecd :make (map[StdFontName ]func ()StdFont )};func _dad ()StdFont {_cfb :=_ac .NewZapfDingbatsEncoder ();_gde :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_gde ,_daa ,_cfb );};var _gdd *RuneCharSafeMap ;type FontWeight int ;var _bgb =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func _ged ()StdFont {_cgbe .Do (_dbg );_gdf :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_gdf ,_fd );};func (_bgda *ttfParser )ReadShort ()(_aegd int16 ){_gg .Read (_bgda ._dbgf ,_gg .BigEndian ,&_aegd );return _aegd ;};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");
HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);func (_aeg *ttfParser )ParseCmap ()error {var _gcf int64 ;if _ddgc :=_aeg .Seek ("\u0063\u006d\u0061\u0070");_ddgc !=nil {return _ddgc ;};_aeg .ReadUShort ();_ega :=int (_aeg .ReadUShort ());_ceg :=int64 (0);_cdd :=int64 (0);_aecc :=int64 (0);for _daca :=0;
_daca < _ega ;_daca ++{_cbde :=_aeg .ReadUShort ();_fed :=_aeg .ReadUShort ();_gcf =int64 (_aeg .ReadULong ());if _cbde ==3&&_fed ==1{_cdd =_gcf ;}else if _cbde ==3&&_fed ==10{_aecc =_gcf ;}else if _cbde ==1&&_fed ==0{_ceg =_gcf ;};};if _ceg !=0{if _gefb :=_aeg .parseCmapVersion (_ceg );
_gefb !=nil {return _gefb ;};};if _cdd !=0{if _cba :=_aeg .parseCmapSubtable31 (_cdd );_cba !=nil {return _cba ;};};if _aecc !=0{if _fedc :=_aeg .parseCmapVersion (_aecc );_fedc !=nil {return _fedc ;};};if _cdd ==0&&_ceg ==0&&_aecc ==0{_ed .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func (_cbc StdFont )Descriptor ()Descriptor {return _cbc ._aee };var _fd *RuneCharSafeMap ;func _afd ()StdFont {_gab .Do (_gd );_ecdb :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_ecdb ,_ad );};func _abe ()StdFont {_gab .Do (_gd );_bgba :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_bgba ,_afb );};func _dac ()StdFont {_cgbe .Do (_dbg );_bgg :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_bgg ,_fde );};func TtfParse (r _f .ReadSeeker )(TtfType ,error ){_aea :=&ttfParser {_dbgf :r };return _aea .Parse ()};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _ac .TextEncoder )StdFont {var _gf rune =0xA0;
if _ ,_cae :=metrics .Read (_gf );!_cae {_bd ,_ :=metrics .Read (0x20);metrics .Write (_gf ,_bd );};return StdFont {_aee :desc ,_edf :metrics ,_efa :encoder };};func (_gbg *ttfParser )parseCmapVersion (_gdda int64 )error {_ed .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_gdda );
if _gbg ._abg .Chars ==nil {_gbg ._abg .Chars =make (map[rune ]GID );};_gbg ._dbgf .Seek (int64 (_gbg ._dbb ["\u0063\u006d\u0061\u0070"])+_gdda ,_f .SeekStart );var _dgg ,_dbgd uint32 ;_gfc :=_gbg .ReadUShort ();if _gfc < 8{_dgg =uint32 (_gbg .ReadUShort ());
_dbgd =uint32 (_gbg .ReadUShort ());}else {_gbg .ReadUShort ();_dgg =_gbg .ReadULong ();_dbgd =_gbg .ReadULong ();};_ed .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_gfc ,_dgg ,_dbgd );
switch _gfc {case 0:return _gbg .parseCmapFormat0 ();case 6:return _gbg .parseCmapFormat6 ();case 12:return _gbg .parseCmapFormat12 ();default:_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_gfc );
return nil ;};};type CharMetrics struct{Wx float64 ;Wy float64 ;};var _bea =&RuneCharSafeMap {_ea :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func NewStdFontByName (name StdFontName )(StdFont ,bool ){_af ,_fa :=_fcd .read (name );if !_fa {return StdFont {},false ;};return _af (),true ;};func _bbg ()StdFont {_fcg .Do (_fgc );_cde :=Descriptor {Name :TimesBoldItalicName ,Family :_fg ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_cde ,_gdd );};func (_bc *TtfType )String ()string {return _c .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_bc .PostScriptName ,_bc .UnitsPerEm ,_bc .Bold ,_bc .ItalicAngle ,_bc .CapHeight ,len (_bc .Chars ),len (_bc .GlyphNames ));
};func (_cgdg *ttfParser )ParsePost ()error {if _fedb :=_cgdg .Seek ("\u0070\u006f\u0073\u0074");_fedb !=nil {return _fedb ;};_degf :=_cgdg .Read32Fixed ();_cgdg ._abg .ItalicAngle =_cgdg .Read32Fixed ();_cgdg ._abg .UnderlinePosition =_cgdg .ReadShort ();
_cgdg ._abg .UnderlineThickness =_cgdg .ReadShort ();_cgdg ._abg .IsFixedPitch =_cgdg .ReadULong ()!=0;_cgdg .ReadULong ();_cgdg .ReadULong ();_cgdg .ReadULong ();_cgdg .ReadULong ();_ed .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_degf );
switch _degf {case 1.0:_cgdg ._abg .GlyphNames =_cbab ;case 2.0:_egc :=int (_cgdg .ReadUShort ());_gfeb :=make ([]int ,_egc );_cgdg ._abg .GlyphNames =make ([]GlyphName ,_egc );_fga :=-1;for _bga :=0;_bga < _egc ;_bga ++{_ccc :=int (_cgdg .ReadUShort ());
_gfeb [_bga ]=_ccc ;if _ccc <=0x7fff&&_ccc > _fga {_fga =_ccc ;};};var _bce []GlyphName ;if _fga >=len (_cbab ){_bce =make ([]GlyphName ,_fga -len (_cbab )+1);for _def :=0;_def < _fga -len (_cbab )+1;_def ++{_becf :=int (_cgdg .readByte ());_bge ,_edb :=_cgdg .ReadStr (_becf );
if _edb !=nil {return _edb ;};_bce [_def ]=GlyphName (_bge );};};for _gcb :=0;_gcb < _egc ;_gcb ++{_ccfdg :=_gfeb [_gcb ];if _ccfdg < len (_cbab ){_cgdg ._abg .GlyphNames [_gcb ]=_cbab [_ccfdg ];}else if _ccfdg >=len (_cbab )&&_ccfdg <=32767{_cgdg ._abg .GlyphNames [_gcb ]=_bce [_ccfdg -len (_cbab )];
}else {_cgdg ._abg .GlyphNames [_gcb ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_bcad :=make ([]int ,_cgdg ._dge );for _dace :=0;_dace < len (_bcad );_dace ++{_gdeg :=int (_cgdg .ReadSByte ());_bcad [_dace ]=_dace +1+_gdeg ;
};_cgdg ._abg .GlyphNames =make ([]GlyphName ,len (_bcad ));for _fbg :=0;_fbg < len (_cgdg ._abg .GlyphNames );_fbg ++{_gcaa :=_cbab [_bcad [_fbg ]];_cgdg ._abg .GlyphNames [_fbg ]=_gcaa ;};case 3.0:_ed .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_ed .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_degf );};return nil ;};func (_bfe *TtfType )NewEncoder ()_ac .TextEncoder {return _ac .NewTrueTypeFontEncoder (_bfe .Chars )};
func _fbd ()StdFont {_cgbe .Do (_dbg );_dcg :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_dcg ,_agb );};func (_bcd *ttfParser )Read32Fixed ()float64 {_cgadb :=float64 (_bcd .ReadShort ());_fgfg :=float64 (_bcd .ReadUShort ())/65536.0;return _cgadb +_fgfg ;};func (_ag *fontMap )write (_ca StdFontName ,_eae func ()StdFont ){_ag .Lock ();
defer _ag .Unlock ();_ag ._ecd [_ca ]=_eae ;};func (_ecf *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_ecf ._cc .Lock ();defer _ecf ._cc .Unlock ();_ecf ._ea [b ]=r ;};type StdFontName string ;func (_fdag *TtfType )MakeToUnicode ()*_ec .CMap {_baa :=make (map[_ec .CharCode ]rune );
if len (_fdag .GlyphNames )==0{for _bbgc :=range _fdag .Chars {_baa [_ec .CharCode (_bbgc )]=_bbgc ;};return _ec .NewToUnicodeCMap (_baa );};for _edfe ,_deaf :=range _fdag .Chars {_dcgg :=_ec .CharCode (_edfe );_dce :=_fdag .GlyphNames [_deaf ];_gddc ,_cfe :=_ac .GlyphToRune (_dce );
if !_cfe {_ed .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_edfe ,_dce );_gddc =_ac .MissingCodeRune ;};_baa [_dcgg ]=_gddc ;
};return _ec .NewToUnicodeCMap (_baa );};var _gab _a .Once ;type GlyphName =_ac .GlyphName ;func (_fcf *ttfParser )ParseHead ()error {if _fdagb :=_fcf .Seek ("\u0068\u0065\u0061\u0064");_fdagb !=nil {return _fdagb ;};_fcf .Skip (3*4);_feg :=_fcf .ReadULong ();
if _feg !=0x5F0F3CF5{_ed .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_fcf );
};_fcf .Skip (2);_fcf ._abg .UnitsPerEm =_fcf .ReadUShort ();_fcf .Skip (2*8);_fcf ._abg .Xmin =_fcf .ReadShort ();_fcf ._abg .Ymin =_fcf .ReadShort ();_fcf ._abg .Xmax =_fcf .ReadShort ();_fcf ._abg .Ymax =_fcf .ReadShort ();return nil ;};var _aaeaa =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
var _daa =&RuneCharSafeMap {_ea :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
var _cbab =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
func (_ecac *ttfParser )ParseHhea ()error {if _ecfc :=_ecac .Seek ("\u0068\u0068\u0065\u0061");_ecfc !=nil {return _ecfc ;};_ecac .Skip (4+15*2);_ecac ._edc =_ecac .ReadUShort ();return nil ;};func _ebb ()StdFont {_cgbe .Do (_dbg );_fad :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_fad ,_gdc );};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););func (_ae *RuneCharSafeMap )Range (f func (_eg rune ,_be CharMetrics )(_ba bool )){_ae ._cc .RLock ();defer _ae ._cc .RUnlock ();
for _eddg ,_ecfe :=range _ae ._ea {if f (_eddg ,_ecfe ){break ;};};};func _dbg (){_fd =MakeRuneCharSafeMap (len (_bgb ));_fde =MakeRuneCharSafeMap (len (_bgb ));for _ace ,_gfb :=range _bgb {_fd .Write (_gfb ,CharMetrics {Wx :float64 (_eaef [_ace ])});_fde .Write (_gfb ,CharMetrics {Wx :float64 (_add [_ace ])});
};_agb =_fd .Copy ();_gdc =_fde .Copy ();};