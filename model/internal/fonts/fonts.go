//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_ge "bytes";_gc "encoding/binary";_fd "errors";_g "fmt";_dab "github.com/unidoc/unipdf/v3/common";_e "github.com/unidoc/unipdf/v3/core";_abd "github.com/unidoc/unipdf/v3/internal/cmap";_da "github.com/unidoc/unipdf/v3/internal/textencoding";
_ab "golang.org/x/xerrors";_gf "io";_d "os";_a "regexp";_fa "sort";_f "strings";_b "sync";);func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_da .NewStandardEncoder ());};func (_cadg *ttfParser )ReadSByte ()(_ceca int8 ){_gc .Read (_cadg ._ebc ,_gc .BigEndian ,&_ceca );
return _ceca ;};func (_bec StdFont )GetMetricsTable ()*RuneCharSafeMap {return _bec ._acd };func (_dcg *ttfParser )ParseHead ()error {if _efeb :=_dcg .Seek ("\u0068\u0065\u0061\u0064");_efeb !=nil {return _efeb ;};_dcg .Skip (3*4);_bba :=_dcg .ReadULong ();
if _bba !=0x5F0F3CF5{_dab .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_dcg );
};_dcg .Skip (2);_dcg ._agac .UnitsPerEm =_dcg .ReadUShort ();_dcg .Skip (2*8);_dcg ._agac .Xmin =_dcg .ReadShort ();_dcg ._agac .Ymin =_dcg .ReadShort ();_dcg ._agac .Xmax =_dcg .ReadShort ();_dcg ._agac .Ymax =_dcg .ReadShort ();return nil ;};var _gcdb =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
type GID =_da .GID ;var _eda =&RuneCharSafeMap {_ce :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func NewStdFontByName (name StdFontName )(StdFont ,bool ){_gab ,_aca :=_bcb .read (name );if !_aca {return StdFont {},false ;};return _gab (),true ;};func _eaf (){_gcbf =MakeRuneCharSafeMap (len (_cd ));_egf =MakeRuneCharSafeMap (len (_cd ));_egb =MakeRuneCharSafeMap (len (_cd ));
_abe =MakeRuneCharSafeMap (len (_cd ));for _cfb ,_cede :=range _cd {_gcbf .Write (_cede ,CharMetrics {Wx :float64 (_cgc [_cfb ])});_egf .Write (_cede ,CharMetrics {Wx :float64 (_gfb [_cfb ])});_egb .Write (_cede ,CharMetrics {Wx :float64 (_cbb [_cfb ])});
_abe .Write (_cede ,CharMetrics {Wx :float64 (_gfd [_cfb ])});};};func (_ccab *ttfParser )parseCmapSubtable10 (_aaf int64 )error {if _ccab ._agac .Chars ==nil {_ccab ._agac .Chars =make (map[rune ]GID );};_ccab ._ebc .Seek (int64 (_ccab ._eae ["\u0063\u006d\u0061\u0070"])+_aaf ,_gf .SeekStart );
var _fefc ,_fcd uint32 ;_fcgf :=_ccab .ReadUShort ();if _fcgf < 8{_fefc =uint32 (_ccab .ReadUShort ());_fcd =uint32 (_ccab .ReadUShort ());}else {_ccab .ReadUShort ();_fefc =_ccab .ReadULong ();_fcd =_ccab .ReadULong ();};_dab .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_fcgf ,_fefc ,_fcd );
if _fcgf !=0{return _fd .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fb ,_aae :=_ccab .ReadStr (256);if _aae !=nil {return _aae ;
};_eacg :=[]byte (_fb );for _afa ,_gfgd :=range _eacg {_ccab ._agac .Chars [rune (_afa )]=GID (_gfgd );if _gfgd !=0{_g .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_afa ,_gfgd ,rune (_gfgd ));
};};return nil ;};var _cae =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func (_bc *fontMap )read (_ec StdFontName )(func ()StdFont ,bool ){_bc .Lock ();
defer _bc .Unlock ();_fg ,_gd :=_bc ._ea [_ec ];return _fg ,_gd ;};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");
HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);func (_cba *ttfParser )parseCmapFormat6 ()error {_bbgg :=int (_cba .ReadUShort ());_acc :=int (_cba .ReadUShort ());_dab .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_cba ._agac .String (),_bbgg ,_acc );
for _fdc :=0;_fdc < _acc ;_fdc ++{_agab :=GID (_cba .ReadUShort ());_cba ._agac .Chars [rune (_fdc +_bbgg )]=_agab ;};return nil ;};func (_cf *RuneCharSafeMap )Length ()int {_cf ._gca .RLock ();defer _cf ._gca .RUnlock ();return len (_cf ._ce );};func _afc ()StdFont {_aba .Do (_gda );
_eac :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};return NewStdFont (_eac ,_ed );
};var _eaca *RuneCharSafeMap ;var _df =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
type StdFontName string ;type StdFont struct{_bed Descriptor ;_acd *RuneCharSafeMap ;_fe _da .TextEncoder ;};func NewFontFile2FromPdfObject (obj _e .PdfObject )(TtfType ,error ){obj =_e .TraceToDirectObject (obj );_efcf ,_ceb :=obj .(*_e .PdfObjectStream );
if !_ceb {_dab .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );return TtfType {},_e .ErrTypeError ;
};_gdd ,_fcb :=_e .DecodeStream (_efcf );if _fcb !=nil {return TtfType {},_fcb ;};_dcbe :=ttfParser {_ebc :_ge .NewReader (_gdd )};return _dcbe .Parse ();};var _fge _b .Once ;func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_efe :=_bcb .read (name );
_efe {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));};_bcb .write (name ,fnc );for _ ,_ca :=range aliases {RegisterStdFont (_ca ,fnc );};};var _abe *RuneCharSafeMap ;
const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);var _cd =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func TtfParse (r _gf .ReadSeeker )(TtfType ,error ){_bcbd :=&ttfParser {_ebc :r };return _bcbd .Parse ()};func TtfParseFile (fileStr string )(TtfType ,error ){_bde ,_bda :=_d .Open (fileStr );if _bda !=nil {return TtfType {},_bda ;};defer _bde .Close ();
return TtfParse (_bde );};var _cad *RuneCharSafeMap ;var _aba _b .Once ;func _eadd ()StdFont {_ad .Do (_eaf );_aag :=Descriptor {Name :TimesBoldName ,Family :_gac ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_aag ,_egf );};func init (){RegisterStdFont (CourierName ,_afc ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");RegisterStdFont (CourierBoldName ,_agc ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (CourierObliqueName ,_ggd ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");RegisterStdFont (CourierBoldObliqueName ,_cg ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_dg StdFont )Name ()string {return string (_dg ._bed .Name )};func (_ded *ttfParser )Parse ()(TtfType ,error ){_gbdb ,_cee :=_ded .ReadStr (4);if _cee !=nil {return TtfType {},_cee ;};if _gbdb =="\u004f\u0054\u0054\u004f"{return TtfType {},_ab .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_e .ErrNotSupported );
};if _gbdb !="\u0000\u0001\u0000\u0000"&&_gbdb !="\u0074\u0072\u0075\u0065"{_dab .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_gbdb );
};_dec :=int (_ded .ReadUShort ());_ded .Skip (3*2);_ded ._eae =make (map[string ]uint32 );var _dbg string ;for _bbfd :=0;_bbfd < _dec ;_bbfd ++{_dbg ,_cee =_ded .ReadStr (4);if _cee !=nil {return TtfType {},_cee ;};_ded .Skip (4);_eefe :=_ded .ReadULong ();
_ded .Skip (4);_ded ._eae [_dbg ]=_eefe ;};_dab .Log .Trace (_fgb (_ded ._eae ));if _cee =_ded .ParseComponents ();_cee !=nil {return TtfType {},_cee ;};return _ded ._agac ,nil ;};var _dcb *RuneCharSafeMap ;type Descriptor struct{Name StdFontName ;Family string ;
Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};var _bd *RuneCharSafeMap ;func (_ba StdFont )Descriptor ()Descriptor {return _ba ._bed };
func (_fea *ttfParser )parseCmapVersion (_gacb int64 )error {_dab .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_gacb );if _fea ._agac .Chars ==nil {_fea ._agac .Chars =make (map[rune ]GID );
};_fea ._ebc .Seek (int64 (_fea ._eae ["\u0063\u006d\u0061\u0070"])+_gacb ,_gf .SeekStart );var _eecg ,_gdage uint32 ;_feb :=_fea .ReadUShort ();if _feb < 8{_eecg =uint32 (_fea .ReadUShort ());_gdage =uint32 (_fea .ReadUShort ());}else {_fea .ReadUShort ();
_eecg =_fea .ReadULong ();_gdage =_fea .ReadULong ();};_dab .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_feb ,_eecg ,_gdage );
switch _feb {case 0:return _fea .parseCmapFormat0 ();case 6:return _fea .parseCmapFormat6 ();case 12:return _fea .parseCmapFormat12 ();default:_dab .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_feb );
return nil ;};};func _ecf ()StdFont {_ad .Do (_eaf );_ffgd :=Descriptor {Name :TimesBoldItalicName ,Family :_gac ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_ffgd ,_egb );};var _fdf *RuneCharSafeMap ;func (_feab *ttfParser )Seek (tag string )error {_ffe ,_gdf :=_feab ._eae [tag ];if !_gdf {return _g .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_feab ._ebc .Seek (int64 (_ffe ),_gf .SeekStart );return nil ;};func (_dbc *ttfParser )ReadULong ()(_bfd uint32 ){_gc .Read (_dbc ._ebc ,_gc .BigEndian ,&_bfd );return _bfd ;};func init (){RegisterStdFont (HelveticaName ,_dga ,"\u0041\u0072\u0069a\u006c");
RegisterStdFont (HelveticaBoldName ,_gbd ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_fdbd ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_eec ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func _aab ()StdFont {_gfg :=_da .NewZapfDingbatsEncoder ();_dff :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_dff ,_eda ,_gfg );};type fontMap struct{_b .Mutex ;_ea map[StdFontName ]func ()StdFont ;};type ttfParser struct{_agac TtfType ;_ebc _gf .ReadSeeker ;_eae map[string ]uint32 ;_ccg uint16 ;_age uint16 ;};func (_facg *ttfParser )ReadShort ()(_faa int16 ){_gc .Read (_facg ._ebc ,_gc .BigEndian ,&_faa );
return _faa ;};func (_fc *fontMap )write (_gcb StdFontName ,_ega func ()StdFont ){_fc .Lock ();defer _fc .Unlock ();_fc ._ea [_gcb ]=_ega ;};func _agc ()StdFont {_aba .Do (_gda );_bgd :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_bgd ,_afd );};func (_eace *ttfParser )ParseMaxp ()error {if _gaf :=_eace .Seek ("\u006d\u0061\u0078\u0070");_gaf !=nil {return _gaf ;};_eace .Skip (4);_eace ._age =_eace .ReadUShort ();return nil ;};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_ce :make (map[rune ]CharMetrics ,length )};
};type Font interface{Encoder ()_da .TextEncoder ;GetRuneMetrics (_bb rune )(CharMetrics ,bool );};var _egf *RuneCharSafeMap ;var _gfb =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func _eec ()StdFont {_fge .Do (_ae );_edd :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_edd ,_bd );};func (_fef *ttfParser )ParseHmtx ()error {if _gfe :=_fef .Seek ("\u0068\u006d\u0074\u0078");_gfe !=nil {return _gfe ;};_fef ._agac .Widths =make ([]uint16 ,0,8);for _bege :=uint16 (0);_bege < _fef ._ccg ;_bege ++{_fef ._agac .Widths =append (_fef ._agac .Widths ,_fef .ReadUShort ());
_fef .Skip (2);};if _fef ._ccg < _fef ._age &&_fef ._ccg > 0{_bdad :=_fef ._agac .Widths [_fef ._ccg -1];for _ageg :=_fef ._ccg ;_ageg < _fef ._age ;_ageg ++{_fef ._agac .Widths =append (_fef ._agac .Widths ,_bdad );};};return nil ;};func init (){RegisterStdFont (SymbolName ,_cgd ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_aab );};var _bcb =&fontMap {_ea :make (map[StdFontName ]func ()StdFont )};func (_bbb *TtfType )MakeEncoder ()(_da .SimpleEncoder ,error ){_gcd :=make (map[_da .CharCode ]GlyphName );for _abdg :=_da .CharCode (0);_abdg <=256;
_abdg ++{_eegc :=rune (_abdg );_cadc ,_bfc :=_bbb .Chars [_eegc ];if !_bfc {continue ;};var _dcd GlyphName ;if int (_cadc )>=0&&int (_cadc )< len (_bbb .GlyphNames ){_dcd =_bbb .GlyphNames [_cadc ];}else {_aga :=rune (_cadc );if _efb ,_bdb :=_da .RuneToGlyph (_aga );
_bdb {_dcd =_efb ;};};if _dcd !=""{_gcd [_abdg ]=_dcd ;};};if len (_gcd )==0{_dab .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_bbb ,_bbb .Chars );
};return _da .NewCustomSimpleTextEncoder (_gcd ,nil );};func _fgb (_ccf map[string ]uint32 )string {var _ccgc []string ;for _bce :=range _ccf {_ccgc =append (_ccgc ,_bce );};_fa .Slice (_ccgc ,func (_edb ,_fcg int )bool {return _ccf [_ccgc [_edb ]]< _ccf [_ccgc [_fcg ]]});
_cca :=[]string {_g .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_ccf ))};for _ ,_ebe :=range _ccgc {_cca =append (_cca ,_g .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_ebe ,_ccf [_ebe ]));
};return _f .Join (_cca ,"\u000a");};var _edda =&RuneCharSafeMap {_ce :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func (_agf *ttfParser )parseCmapFormat0 ()error {_gfgb ,_ecd :=_agf .ReadStr (256);if _ecd !=nil {return _ecd ;};_bfa :=[]byte (_gfgb );_dab .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_agf ._agac .String (),_gfgb ,_bfa );
for _agb ,_acde :=range _bfa {_agf ._agac .Chars [rune (_agb )]=GID (_acde );};return nil ;};func init (){RegisterStdFont (TimesRomanName ,_cbd ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_eadd ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_cdf ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_ecf ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_bgda *TtfType )String ()string {return _g .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_bgda .PostScriptName ,_bgda .UnitsPerEm ,_bgda .Bold ,_bgda .ItalicAngle ,_bgda .CapHeight ,len (_bgda .Chars ),len (_bgda .GlyphNames ));
};func (_acdd *ttfParser )parseCmapFormat12 ()error {_fde :=_acdd .ReadULong ();_dab .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_acdd ._agac .String (),_fde );
for _cbf :=uint32 (0);_cbf < _fde ;_cbf ++{_caf :=_acdd .ReadULong ();_cgf :=_acdd .ReadULong ();_acga :=_acdd .ReadULong ();if _caf > 0x0010FFFF||(0xD800<=_caf &&_caf <=0xDFFF){return _fd .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _cgf < _caf ||_cgf > 0x0010FFFF||(0xD800<=_cgf &&_cgf <=0xDFFF){return _fd .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _abbd :=_caf ;_abbd <=_cgf ;
_abbd ++{if _abbd > 0x10FFFF{_dab .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_acdd ._agac .Chars [rune (_abbd )]=GID (_acga );_acga ++;};};return nil ;};var _egb *RuneCharSafeMap ;func _ae (){_dcb =MakeRuneCharSafeMap (len (_cd ));_fdf =MakeRuneCharSafeMap (len (_cd ));for _efa ,_edf :=range _cd {_dcb .Write (_edf ,CharMetrics {Wx :float64 (_df [_efa ])});
_fdf .Write (_edf ,CharMetrics {Wx :float64 (_cae [_efa ])});};_eaca =_dcb .Copy ();_bd =_fdf .Copy ();};var _ Font =StdFont {};func (_caa *ttfParser )ReadUShort ()(_gag uint16 ){_gc .Read (_caa ._ebc ,_gc .BigEndian ,&_gag );return _gag ;};var _afd *RuneCharSafeMap ;
var _ed *RuneCharSafeMap ;func _gbd ()StdFont {_fge .Do (_ae );_fac :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_fac ,_fdf );};func (_bbba *ttfParser )ParseName ()error {if _bcgb :=_bbba .Seek ("\u006e\u0061\u006d\u0065");_bcgb !=nil {return _bcgb ;};_cec ,_ :=_bbba ._ebc .Seek (0,_gf .SeekCurrent );_bbba ._agac .PostScriptName ="";_bbba .Skip (2);
_dca :=_bbba .ReadUShort ();_befb :=_bbba .ReadUShort ();for _bbbad :=uint16 (0);_bbbad < _dca &&_bbba ._agac .PostScriptName =="";_bbbad ++{_bbba .Skip (3*2);_cff :=_bbba .ReadUShort ();_cfg :=_bbba .ReadUShort ();_bgab :=_bbba .ReadUShort ();if _cff ==6{_bbba ._ebc .Seek (_cec +int64 (_befb )+int64 (_bgab ),_gf .SeekStart );
_eea ,_ceba :=_bbba .ReadStr (int (_cfg ));if _ceba !=nil {return _ceba ;};_eea =_f .Replace (_eea ,"\u0000","",-1);_ceda ,_ceba :=_a .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _ceba !=nil {return _ceba ;
};_bbba ._agac .PostScriptName =_ceda .ReplaceAllString (_eea ,"");};};if _bbba ._agac .PostScriptName ==""{_dab .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_bbbg *ttfParser )ParseOS2 ()error {if _agd :=_bbbg .Seek ("\u004f\u0053\u002f\u0032");_agd !=nil {return _agd ;};_gaa :=_bbbg .ReadUShort ();_bbbg .Skip (4*2);_bbbg .Skip (11*2+10+4*4+4);_bdd :=_bbbg .ReadUShort ();_bbbg ._agac .Bold =(_bdd &32)!=0;
_bbbg .Skip (2*2);_bbbg ._agac .TypoAscender =_bbbg .ReadShort ();_bbbg ._agac .TypoDescender =_bbbg .ReadShort ();if _gaa >=2{_bbbg .Skip (3*2+2*4+2);_bbbg ._agac .CapHeight =_bbbg .ReadShort ();}else {_bbbg ._agac .CapHeight =0;};return nil ;};func (_fda *TtfType )MakeToUnicode ()*_abd .CMap {_fab :=make (map[_abd .CharCode ]rune );
if len (_fda .GlyphNames )==0{return _abd .NewToUnicodeCMap (_fab );};for _bga ,_abb :=range _fda .Chars {_bgeb :=_abd .CharCode (_bga );_edg :=_fda .GlyphNames [_abb ];_ece ,_gdag :=_da .GlyphToRune (_edg );if !_gdag {_dab .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_bga ,_edg );
_ece =_da .MissingCodeRune ;};_fab [_bgeb ]=_ece ;};return _abd .NewToUnicodeCMap (_fab );};func (_cc CharMetrics )String ()string {return _g .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_cc .Wx ,_cc .Wy );};var _ege *RuneCharSafeMap ;
func (_egff *ttfParser )ParseHhea ()error {if _fabb :=_egff .Seek ("\u0068\u0068\u0065\u0061");_fabb !=nil {return _fabb ;};_egff .Skip (4+15*2);_egff ._ccg =_egff .ReadUShort ();return nil ;};func _cdf ()StdFont {_ad .Do (_eaf );_gga :=Descriptor {Name :TimesItalicName ,Family :_gac ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_gga ,_abe );};type FontWeight int ;func _cg ()StdFont {_aba .Do (_gda );_dac :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_dac ,_cad );};type GlyphName =_da .GlyphName ;func (_eg *RuneCharSafeMap )Range (f func (_abf rune ,_efc CharMetrics )(_gg bool )){_eg ._gca .RLock ();defer _eg ._gca .RUnlock ();for _af ,_bg :=range _eg ._ce {if f (_af ,_bg ){break ;
};};};type CharMetrics struct{Wx float64 ;Wy float64 ;};const (_gac ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");
TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););var _cgc =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func _cgd ()StdFont {_bef :=_da .NewSymbolEncoder ();_eeg :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_eeg ,_edda ,_bef );};func (_bf *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_ga :=MakeRuneCharSafeMap (_bf .Length ());_bf .Range (func (_be rune ,_gb CharMetrics )(_ac bool ){_ga ._ce [_be ]=_gb ;return false });return _ga ;
};var _cbb =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _da .TextEncoder )StdFont {var _bbe rune =0xA0;if _ ,_cbg :=metrics .Read (_bbe );!_cbg {_fdb ,_ :=metrics .Read (0x20);metrics .Write (_bbe ,_fdb );};return StdFont {_bed :desc ,_acd :metrics ,_fe :encoder };
};func (_beg *ttfParser )ParseComponents ()error {if _dd :=_beg .ParseHead ();_dd !=nil {return _dd ;};if _fed :=_beg .ParseHhea ();_fed !=nil {return _fed ;};if _gfbg :=_beg .ParseMaxp ();_gfbg !=nil {return _gfbg ;};if _acf :=_beg .ParseHmtx ();_acf !=nil {return _acf ;
};if _ ,_bedf :=_beg ._eae ["\u006e\u0061\u006d\u0065"];_bedf {if _cac :=_beg .ParseName ();_cac !=nil {return _cac ;};};if _ ,_cbdd :=_beg ._eae ["\u004f\u0053\u002f\u0032"];_cbdd {if _gdb :=_beg .ParseOS2 ();_gdb !=nil {return _gdb ;};};if _ ,_cab :=_beg ._eae ["\u0070\u006f\u0073\u0074"];
_cab {if _aad :=_beg .ParsePost ();_aad !=nil {return _aad ;};};if _ ,_deg :=_beg ._eae ["\u0063\u006d\u0061\u0070"];_deg {if _bced :=_beg .ParseCmap ();_bced !=nil {return _bced ;};};return nil ;};func (_eged *ttfParser )Skip (n int ){_eged ._ebc .Seek (int64 (n ),_gf .SeekCurrent )};
func IsStdFont (name StdFontName )bool {_ ,_eef :=_bcb .read (name );return _eef };func (_dad *ttfParser )Read32Fixed ()float64 {_gdg :=float64 (_dad .ReadShort ());_dbgb :=float64 (_dad .ReadUShort ())/65536.0;return _gdg +_dbgb ;};var _gcbf *RuneCharSafeMap ;
func _fdbd ()StdFont {_fge .Do (_ae );_geg :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_geg ,_eaca );};func (_eb StdFont )ToPdfObject ()_e .PdfObject {_bcd :=_e .MakeDict ();_bcd .Set ("\u0054\u0079\u0070\u0065",_e .MakeName ("\u0046\u006f\u006e\u0074"));_bcd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_e .MakeName ("\u0054\u0079\u0070e\u0031"));
_bcd .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_e .MakeName (_eb .Name ()));_bcd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_eb ._fe .ToPdfObject ());return _e .MakeIndirectObject (_bcd );};func _ggd ()StdFont {_aba .Do (_gda );
_aa :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};return NewStdFont (_aa ,_ege );
};func (_gce *TtfType )NewEncoder ()_da .TextEncoder {return _da .NewTrueTypeFontEncoder (_gce .Chars )};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");
CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);func _gda (){const _dbe =600;_ed =MakeRuneCharSafeMap (len (_cd ));for _ ,_ffc :=range _cd {_ed .Write (_ffc ,CharMetrics {Wx :_dbe });};_afd =_ed .Copy ();_cad =_ed .Copy ();_ege =_ed .Copy ();};func (_dc StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_bge ,_bee :=_dc ._acd .Read (r );
return _bge ,_bee ;};func (_cbgd *ttfParser )ParsePost ()error {if _aec :=_cbgd .Seek ("\u0070\u006f\u0073\u0074");_aec !=nil {return _aec ;};_faca :=_cbgd .Read32Fixed ();_cbgd ._agac .ItalicAngle =_cbgd .Read32Fixed ();_cbgd ._agac .UnderlinePosition =_cbgd .ReadShort ();
_cbgd ._agac .UnderlineThickness =_cbgd .ReadShort ();_cbgd ._agac .IsFixedPitch =_cbgd .ReadULong ()!=0;_cbgd .ReadULong ();_cbgd .ReadULong ();_cbgd .ReadULong ();_cbgd .ReadULong ();_dab .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_faca );
switch _faca {case 1.0:_cbgd ._agac .GlyphNames =_gcdb ;case 2.0:_bad :=int (_cbgd .ReadUShort ());_cbac :=make ([]int ,_bad );_cbgd ._agac .GlyphNames =make ([]GlyphName ,_bad );_eafe :=-1;for _fba :=0;_fba < _bad ;_fba ++{_fbd :=int (_cbgd .ReadUShort ());
_cbac [_fba ]=_fbd ;if _fbd <=0x7fff&&_fbd > _eafe {_eafe =_fbd ;};};var _bddg []GlyphName ;if _eafe >=len (_gcdb ){_bddg =make ([]GlyphName ,_eafe -len (_gcdb )+1);for _ffa :=0;_ffa < _eafe -len (_gcdb )+1;_ffa ++{_cag :=int (_cbgd .readByte ());_cdb ,_aee :=_cbgd .ReadStr (_cag );
if _aee !=nil {return _aee ;};_bddg [_ffa ]=GlyphName (_cdb );};};for _bfe :=0;_bfe < _bad ;_bfe ++{_cgff :=_cbac [_bfe ];if _cgff < len (_gcdb ){_cbgd ._agac .GlyphNames [_bfe ]=_gcdb [_cgff ];}else if _cgff >=len (_gcdb )&&_cgff <=32767{_cbgd ._agac .GlyphNames [_bfe ]=_bddg [_cgff -len (_gcdb )];
}else {_cbgd ._agac .GlyphNames [_bfe ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_ecda :=make ([]int ,_cbgd ._age );for _egc :=0;_egc < len (_ecda );_egc ++{_daf :=int (_cbgd .ReadSByte ());_ecda [_egc ]=_egc +1+_daf ;
};_cbgd ._agac .GlyphNames =make ([]GlyphName ,len (_ecda ));for _dgf :=0;_dgf < len (_cbgd ._agac .GlyphNames );_dgf ++{_ecg :=_gcdb [_ecda [_dgf ]];_cbgd ._agac .GlyphNames [_dgf ]=_ecg ;};case 3.0:_dab .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_dab .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_faca );};return nil ;};func (_eaa *ttfParser )readByte ()(_gega uint8 ){_gc .Read (_eaa ._ebc ,_gc .BigEndian ,&_gega );
return _gega ;};var _ad _b .Once ;func (_ee *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_ee ._gca .Lock ();defer _ee ._gca .Unlock ();_ee ._ce [b ]=r ;};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;
IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};type RuneCharSafeMap struct{_ce map[rune ]CharMetrics ;
_gca _b .RWMutex ;};func (_ag StdFont )Encoder ()_da .TextEncoder {return _ag ._fe };func (_bcg *ttfParser )ParseCmap ()error {var _dgd int64 ;if _bcbg :=_bcg .Seek ("\u0063\u006d\u0061\u0070");_bcbg !=nil {return _bcbg ;};_dab .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");
_bcg .ReadUShort ();_acfd :=int (_bcg .ReadUShort ());_cacf :=int64 (0);_cbdf :=int64 (0);_aagc :=int64 (0);for _agee :=0;_agee < _acfd ;_agee ++{_def :=_bcg .ReadUShort ();_cada :=_bcg .ReadUShort ();_dgd =int64 (_bcg .ReadULong ());if _def ==3&&_cada ==1{_cbdf =_dgd ;
}else if _def ==3&&_cada ==10{_aagc =_dgd ;}else if _def ==1&&_cada ==0{_cacf =_dgd ;};};if _cacf !=0{if _gbde :=_bcg .parseCmapVersion (_cacf );_gbde !=nil {return _gbde ;};};if _cbdf !=0{if _aadf :=_bcg .parseCmapSubtable31 (_cbdf );_aadf !=nil {return _aadf ;
};};if _aagc !=0{if _edc :=_bcg .parseCmapVersion (_aagc );_edc !=nil {return _edc ;};};if _cbdf ==0&&_cacf ==0&&_aagc ==0{_dab .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func (_ced *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_ced ._gca .RLock ();defer _ced ._gca .RUnlock ();_bbf ,_ef :=_ced ._ce [b ];return _bbf ,_ef ;};func (_cea *ttfParser )parseCmapSubtable31 (_fgd int64 )error {_ddf :=make ([]rune ,0,8);
_aagf :=make ([]rune ,0,8);_egbc :=make ([]int16 ,0,8);_fec :=make ([]uint16 ,0,8);_cea ._agac .Chars =make (map[rune ]GID );_cea ._ebc .Seek (int64 (_cea ._eae ["\u0063\u006d\u0061\u0070"])+_fgd ,_gf .SeekStart );_eaeb :=_cea .ReadUShort ();if _eaeb !=4{return _ab .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_eaeb ,_e .ErrNotSupported );
};_cea .Skip (2*2);_dfg :=int (_cea .ReadUShort ()/2);_cea .Skip (3*2);for _cef :=0;_cef < _dfg ;_cef ++{_aagf =append (_aagf ,rune (_cea .ReadUShort ()));};_cea .Skip (2);for _edad :=0;_edad < _dfg ;_edad ++{_ddf =append (_ddf ,rune (_cea .ReadUShort ()));
};for _ebf :=0;_ebf < _dfg ;_ebf ++{_egbc =append (_egbc ,_cea .ReadShort ());};_acff ,_ :=_cea ._ebc .Seek (int64 (0),_gf .SeekCurrent );for _fdfe :=0;_fdfe < _dfg ;_fdfe ++{_fec =append (_fec ,_cea .ReadUShort ());};for _edga :=0;_edga < _dfg ;_edga ++{_dabb :=_ddf [_edga ];
_bcf :=_aagf [_edga ];_bfca :=_egbc [_edga ];_acb :=_fec [_edga ];if _acb > 0{_cea ._ebc .Seek (_acff +2*int64 (_edga )+int64 (_acb ),_gf .SeekStart );};for _eefb :=_dabb ;_eefb <=_bcf ;_eefb ++{if _eefb ==0xFFFF{break ;};var _bab int32 ;if _acb > 0{_bab =int32 (_cea .ReadUShort ());
if _bab > 0{_bab +=int32 (_bfca );};}else {_bab =_eefb +int32 (_bfca );};if _bab >=65536{_bab -=65536;};if _bab > 0{_cea ._agac .Chars [_eefb ]=GID (_bab );};};};return nil ;};func _cbd ()StdFont {_ad .Do (_eaf );_ebd :=Descriptor {Name :TimesRomanName ,Family :_gac ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_ebd ,_gcbf );};func _dga ()StdFont {_fge .Do (_ae );_eag :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_eag ,_dcb );};var _gfd =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_fcde *ttfParser )ReadStr (length int )(string ,error ){_ebdb :=make ([]byte ,length );_aaeg ,_cadca :=_fcde ._ebc .Read (_ebdb );if _cadca !=nil {return "",_cadca ;}else if _aaeg !=length {return "",_g .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_ebdb ),nil ;};