//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_bb "bytes";_fg "encoding/binary";_e "errors";_d "fmt";_ag "github.com/unidoc/unipdf/v3/common";_ec "github.com/unidoc/unipdf/v3/core";_ad "github.com/unidoc/unipdf/v3/internal/cmap";_de "github.com/unidoc/unipdf/v3/internal/textencoding";
_g "io";_bg "os";_c "regexp";_f "sort";_a "strings";_fc "sync";);func TtfParse (r _g .ReadSeeker )(TtfType ,error ){_acde :=&ttfParser {_acfc :r };return _acde .Parse ()};func (_fdc *ttfParser )ReadSByte ()(_bdb int8 ){_fg .Read (_fdc ._acfc ,_fg .BigEndian ,&_bdb );
return _bdb ;};func (_dba StdFont )GetMetricsTable ()*RuneCharSafeMap {return _dba ._faf };func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_de .NewStandardEncoder ());};var _bag *RuneCharSafeMap ;
type fontMap struct{_fc .Mutex ;_ab map[StdFontName ]func ()StdFont ;};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;
StemV float64 ;StemH float64 ;};func (_gfb *ttfParser )ParseCmap ()error {var _aab int64 ;if _afd :=_gfb .Seek ("\u0063\u006d\u0061\u0070");_afd !=nil {return _afd ;};_gfb .ReadUShort ();_cbf :=int (_gfb .ReadUShort ());_cda :=int64 (0);_ddd :=int64 (0);
_fee :=int64 (0);for _fea :=0;_fea < _cbf ;_fea ++{_ggd :=_gfb .ReadUShort ();_ggg :=_gfb .ReadUShort ();_aab =int64 (_gfb .ReadULong ());if _ggd ==3&&_ggg ==1{_ddd =_aab ;}else if _ggd ==3&&_ggg ==10{_fee =_aab ;}else if _ggd ==1&&_ggg ==0{_cda =_aab ;
};};if _cda !=0{if _efde :=_gfb .parseCmapVersion (_cda );_efde !=nil {return _efde ;};};if _ddd !=0{if _eaa :=_gfb .parseCmapSubtable31 (_ddd );_eaa !=nil {return _eaa ;};};if _fee !=0{if _cfg :=_gfb .parseCmapVersion (_fee );_cfg !=nil {return _cfg ;
};};if _ddd ==0&&_cda ==0&&_fee ==0{_ag .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func _cfc (){const _cg =600;_ece =MakeRuneCharSafeMap (len (_eb ));for _ ,_adf :=range _eb {_ece .Write (_adf ,CharMetrics {Wx :_cg });};_fbc =_ece .Copy ();_dgf =_ece .Copy ();_ccgg =_ece .Copy ();};func (_aba *TtfType )MakeEncoder ()(_de .SimpleEncoder ,error ){_dc :=make (map[_de .CharCode ]GlyphName );
for _gba :=_de .CharCode (0);_gba <=256;_gba ++{_ged :=rune (_gba );_bea ,_fag :=_aba .Chars [_ged ];if !_fag {continue ;};var _egb GlyphName ;if int (_bea )>=0&&int (_bea )< len (_aba .GlyphNames ){_egb =_aba .GlyphNames [_bea ];}else {_ebcb :=rune (_bea );
if _fge ,_edf :=_de .RuneToGlyph (_ebcb );_edf {_egb =_fge ;};};if _egb !=""{_dc [_gba ]=_egb ;};};if len (_dc )==0{_ag .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_aba ,_aba .Chars );
};return _de .NewCustomSimpleTextEncoder (_dc ,nil );};func (_gead *ttfParser )ReadShort ()(_aae int16 ){_fg .Read (_gead ._acfc ,_fg .BigEndian ,&_aae );return _aae ;};func (_dccg *ttfParser )ReadUShort ()(_fdbe uint16 ){_fg .Read (_dccg ._acfc ,_fg .BigEndian ,&_fdbe );
return _fdbe ;};var _gfa =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
var _fe *RuneCharSafeMap ;type ttfParser struct{_ggf TtfType ;_acfc _g .ReadSeeker ;_cec map[string ]uint32 ;_ggaa uint16 ;_dcf uint16 ;};var _ead =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
var _ded _fc .Once ;func (_bc *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_bc ._bgb .Lock ();defer _bc ._bgb .Unlock ();_bc ._fa [b ]=r ;};type Font interface{Encoder ()_de .TextEncoder ;GetRuneMetrics (_gc rune )(CharMetrics ,bool );};func (_eae *ttfParser )Read32Fixed ()float64 {_dedd :=float64 (_eae .ReadShort ());
_adb :=float64 (_eae .ReadUShort ())/65536.0;return _dedd +_adb ;};func (_face *ttfParser )ParseMaxp ()error {if _ffg :=_face .Seek ("\u006d\u0061\u0078\u0070");_ffg !=nil {return _ffg ;};_face .Skip (4);_face ._dcf =_face .ReadUShort ();return nil ;};
func _bbd ()StdFont {_ded .Do (_cfc );_adgb :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_adgb ,_dgf );};func (_bga StdFont )Name ()string {return string (_bga ._efd .Name )};func TtfParseFile (fileStr string )(TtfType ,error ){_edfb ,_cbb :=_bg .Open (fileStr );if _cbb !=nil {return TtfType {},_cbb ;};defer _edfb .Close ();
return TtfParse (_edfb );};type StdFontName string ;type StdFont struct{_efd Descriptor ;_faf *RuneCharSafeMap ;_cae _de .TextEncoder ;};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");
CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);func (_ff StdFont )Encoder ()_de .TextEncoder {return _ff ._cae };func _dge ()StdFont {_ded .Do (_cfc );_cdf :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_cdf ,_fbc );};func (_dd *fontMap )read (_def StdFontName )(func ()StdFont ,bool ){_dd .Lock ();defer _dd .Unlock ();_fb ,_ca :=_dd ._ab [_def ];return _fb ,_ca ;};func (_ddf *ttfParser )Parse ()(TtfType ,error ){_gea ,_bce :=_ddf .ReadStr (4);
if _bce !=nil {return TtfType {},_bce ;};if _gea =="\u0074\u0074\u0063\u0066"{return _ddf .parseTTC ();}else if _gea !="\u0000\u0001\u0000\u0000"&&_gea !="\u0074\u0072\u0075\u0065"{_ag .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_gea );
};_acc :=int (_ddf .ReadUShort ());_ddf .Skip (3*2);_ddf ._cec =make (map[string ]uint32 );var _ffb string ;for _dfcb :=0;_dfcb < _acc ;_dfcb ++{_ffb ,_bce =_ddf .ReadStr (4);if _bce !=nil {return TtfType {},_bce ;};_ddf .Skip (4);_egcd :=_ddf .ReadULong ();
_ddf .Skip (4);_ddf ._cec [_ffb ]=_egcd ;};_ag .Log .Trace (_ddc (_ddf ._cec ));if _bce =_ddf .ParseComponents ();_bce !=nil {return TtfType {},_bce ;};return _ddf ._ggf ,nil ;};var _gcd *RuneCharSafeMap ;func init (){RegisterStdFont (CourierName ,_fgf ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_dge ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_fgc ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_bbd ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");
);var _edb *RuneCharSafeMap ;var _ccgg *RuneCharSafeMap ;func _cb ()StdFont {_edd :=_de .NewSymbolEncoder ();_dga :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_dga ,_adab ,_edd );};func (_afec *ttfParser )ParsePost ()error {if _bab :=_afec .Seek ("\u0070\u006f\u0073\u0074");_bab !=nil {return _bab ;};_cag :=_afec .Read32Fixed ();_afec ._ggf .ItalicAngle =_afec .Read32Fixed ();_afec ._ggf .UnderlinePosition =_afec .ReadShort ();
_afec ._ggf .UnderlineThickness =_afec .ReadShort ();_afec ._ggf .IsFixedPitch =_afec .ReadULong ()!=0;_afec .ReadULong ();_afec .ReadULong ();_afec .ReadULong ();_afec .ReadULong ();_ag .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_cag );
switch _cag {case 1.0:_afec ._ggf .GlyphNames =_bgf ;case 2.0:_ccad :=int (_afec .ReadUShort ());_fgff :=make ([]int ,_ccad );_afec ._ggf .GlyphNames =make ([]GlyphName ,_ccad );_egf :=-1;for _efaf :=0;_efaf < _ccad ;_efaf ++{_abb :=int (_afec .ReadUShort ());
_fgff [_efaf ]=_abb ;if _abb <=0x7fff&&_abb > _egf {_egf =_abb ;};};var _babg []GlyphName ;if _egf >=len (_bgf ){_babg =make ([]GlyphName ,_egf -len (_bgf )+1);for _ebe :=0;_ebe < _egf -len (_bgf )+1;_ebe ++{_bca :=int (_afec .readByte ());_fca ,_bbae :=_afec .ReadStr (_bca );
if _bbae !=nil {return _bbae ;};_babg [_ebe ]=GlyphName (_fca );};};for _aea :=0;_aea < _ccad ;_aea ++{_edc :=_fgff [_aea ];if _edc < len (_bgf ){_afec ._ggf .GlyphNames [_aea ]=_bgf [_edc ];}else if _edc >=len (_bgf )&&_edc <=32767{_afec ._ggf .GlyphNames [_aea ]=_babg [_edc -len (_bgf )];
}else {_afec ._ggf .GlyphNames [_aea ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_abbd :=make ([]int ,_afec ._dcf );for _edce :=0;_edce < len (_abbd );_edce ++{_geac :=int (_afec .ReadSByte ());_abbd [_edce ]=_edce +1+_geac ;
};_afec ._ggf .GlyphNames =make ([]GlyphName ,len (_abbd ));for _bge :=0;_bge < len (_afec ._ggf .GlyphNames );_bge ++{_cde :=_bgf [_abbd [_bge ]];_afec ._ggf .GlyphNames [_bge ]=_cde ;};case 3.0:_ag .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_ag .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_cag );};return nil ;};func (_fff *ttfParser )ParseName ()error {if _ddb :=_fff .Seek ("\u006e\u0061\u006d\u0065");
_ddb !=nil {return _ddb ;};_ade ,_ :=_fff ._acfc .Seek (0,_g .SeekCurrent );_fff ._ggf .PostScriptName ="";_fff .Skip (2);_bda :=_fff .ReadUShort ();_dgfe :=_fff .ReadUShort ();for _ecdd :=uint16 (0);_ecdd < _bda &&_fff ._ggf .PostScriptName =="";_ecdd ++{_fff .Skip (3*2);
_cfd :=_fff .ReadUShort ();_gag :=_fff .ReadUShort ();_bfg :=_fff .ReadUShort ();if _cfd ==6{_fff ._acfc .Seek (_ade +int64 (_dgfe )+int64 (_bfg ),_g .SeekStart );_cdfg ,_fbe :=_fff .ReadStr (int (_gag ));if _fbe !=nil {return _fbe ;};_cdfg =_a .Replace (_cdfg ,"\u0000","",-1);
_ceag ,_fbe :=_c .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _fbe !=nil {return _fbe ;};_fff ._ggf .PostScriptName =_ceag .ReplaceAllString (_cdfg ,"");};};if _fff ._ggf .PostScriptName ==""{_ag .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_gdb *fontMap )write (_bf StdFontName ,_abe func ()StdFont ){_gdb .Lock ();defer _gdb .Unlock ();_gdb ._ab [_bf ]=_abe ;};func (_ecg *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_ecg ._bgb .RLock ();defer _ecg ._bgb .RUnlock ();
_af ,_deb :=_ecg ._fa [b ];return _af ,_deb ;};type GlyphName =_de .GlyphName ;func _gg (){_cacb =MakeRuneCharSafeMap (len (_eb ));_eg =MakeRuneCharSafeMap (len (_eb ));for _aec ,_fgcc :=range _eb {_cacb .Write (_fgcc ,CharMetrics {Wx :float64 (_abee [_aec ])});
_eg .Write (_fgcc ,CharMetrics {Wx :float64 (_bbab [_aec ])});};_gcd =_cacb .Copy ();_edb =_eg .Copy ();};func (_caf *ttfParser )parseCmapFormat6 ()error {_aefg :=int (_caf .ReadUShort ());_gfgcb :=int (_caf .ReadUShort ());_ag .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_caf ._ggf .String (),_aefg ,_gfgcb );
for _eef :=0;_eef < _gfgcb ;_eef ++{_efef :=GID (_caf .ReadUShort ());_caf ._ggf .Chars [rune (_eef +_aefg )]=_efef ;};return nil ;};func init (){RegisterStdFont (HelveticaName ,_cac ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_ebc ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (HelveticaObliqueName ,_ed ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_aac ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;
Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_fga ,_ef :=_ae .read (name );if !_ef {return StdFont {},false ;};return _fga (),true ;};var _gae =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func _dda ()StdFont {_ggc .Do (_baf );_gee :=Descriptor {Name :TimesBoldItalicName ,Family :_aaad ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_gee ,_bag );};var _dgf *RuneCharSafeMap ;func (_aa *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_ga :=MakeRuneCharSafeMap (_aa .Length ());_aa .Range (func (_cd rune ,_cfe CharMetrics )(_db bool ){_ga ._fa [_cd ]=_cfe ;return false });
return _ga ;};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _de .TextEncoder )StdFont {var _aag rune =0xA0;if _ ,_ac :=metrics .Read (_aag );!_ac {_bbb ,_ :=metrics .Read (0x20);metrics .Write (_aag ,_bbb );};return StdFont {_efd :desc ,_faf :metrics ,_cae :encoder };
};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););func _baf (){_daa =MakeRuneCharSafeMap (len (_eb ));_gdd =MakeRuneCharSafeMap (len (_eb ));_bag =MakeRuneCharSafeMap (len (_eb ));
_fe =MakeRuneCharSafeMap (len (_eb ));for _eeg ,_aca :=range _eb {_daa .Write (_aca ,CharMetrics {Wx :float64 (_ead [_eeg ])});_gdd .Write (_aca ,CharMetrics {Wx :float64 (_gae [_eeg ])});_bag .Write (_aca ,CharMetrics {Wx :float64 (_gfa [_eeg ])});_fe .Write (_aca ,CharMetrics {Wx :float64 (_gfg [_eeg ])});
};};func _cac ()StdFont {_cff .Do (_gg );_bba :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_bba ,_cacb );};func _fgf ()StdFont {_ded .Do (_cfc );_acf :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_acf ,_ece );};func (_edg *ttfParser )ParseHead ()error {if _ccae :=_edg .Seek ("\u0068\u0065\u0061\u0064");_ccae !=nil {return _ccae ;};_edg .Skip (3*4);_cdd :=_edg .ReadULong ();if _cdd !=0x5F0F3CF5{_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_edg );
};_edg .Skip (2);_edg ._ggf .UnitsPerEm =_edg .ReadUShort ();_edg .Skip (2*8);_edg ._ggf .Xmin =_edg .ReadShort ();_edg ._ggf .Ymin =_edg .ReadShort ();_edg ._ggf .Xmax =_edg .ReadShort ();_edg ._ggf .Ymax =_edg .ReadShort ();return nil ;};func (_ceg *ttfParser )ParseOS2 ()error {if _ffgf :=_ceg .Seek ("\u004f\u0053\u002f\u0032");
_ffgf !=nil {return _ffgf ;};_ggga :=_ceg .ReadUShort ();_ceg .Skip (4*2);_ceg .Skip (11*2+10+4*4+4);_cffg :=_ceg .ReadUShort ();_ceg ._ggf .Bold =(_cffg &32)!=0;_ceg .Skip (2*2);_ceg ._ggf .TypoAscender =_ceg .ReadShort ();_ceg ._ggf .TypoDescender =_ceg .ReadShort ();
if _ggga >=2{_ceg .Skip (3*2+2*4+2);_ceg ._ggf .CapHeight =_ceg .ReadShort ();}else {_ceg ._ggf .CapHeight =0;};return nil ;};func init (){RegisterStdFont (SymbolName ,_cb ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_cgc );};func (_ea StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_bgac ,_gceg :=_ea ._faf .Read (r );return _bgac ,_gceg ;};func _fgc ()StdFont {_ded .Do (_cfc );_fcbf :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_fcbf ,_ccgg );};func (_acd *TtfType )MakeToUnicode ()*_ad .CMap {_fbf :=make (map[_ad .CharCode ]rune );if len (_acd .GlyphNames )==0{for _gdg :=range _acd .Chars {_fbf [_ad .CharCode (_gdg )]=_gdg ;};return _ad .NewToUnicodeCMap (_fbf );
};for _bd ,_fdg :=range _acd .Chars {_dfc :=_ad .CharCode (_bd );_dede :=_acd .GlyphNames [_fdg ];_eaf ,_gga :=_de .GlyphToRune (_dede );if !_gga {_ag .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_bd ,_dede );
_eaf =_de .MissingCodeRune ;};_fbf [_dfc ]=_eaf ;};return _ad .NewToUnicodeCMap (_fbf );};func (_ada *RuneCharSafeMap )Length ()int {_ada ._bgb .RLock ();defer _ada ._bgb .RUnlock ();return len (_ada ._fa );};type GID =_de .GID ;func init (){RegisterStdFont (TimesRomanName ,_dgef ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_adff ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_bae ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_dda ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_gfae *ttfParser )parseCmapFormat0 ()error {_fcd ,_aeg :=_gfae .ReadStr (256);if _aeg !=nil {return _aeg ;};_ffe :=[]byte (_fcd );_ag .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_gfae ._ggf .String (),_fcd ,_ffe );
for _geg ,_beg :=range _ffe {_gfae ._ggf .Chars [rune (_geg )]=GID (_beg );};return nil ;};func _bae ()StdFont {_ggc .Do (_baf );_fdb :=Descriptor {Name :TimesItalicName ,Family :_aaad ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_fdb ,_fe );};func (_gbbe *ttfParser )ReadULong ()(_egg uint32 ){_fg .Read (_gbbe ._acfc ,_fg .BigEndian ,&_egg );return _egg ;};func (_aga *ttfParser )parseCmapFormat12 ()error {_cee :=_aga .ReadULong ();_ag .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_aga ._ggf .String (),_cee );
for _cad :=uint32 (0);_cad < _cee ;_cad ++{_facb :=_aga .ReadULong ();_ggab :=_aga .ReadULong ();_gegf :=_aga .ReadULong ();if _facb > 0x0010FFFF||(0xD800<=_facb &&_facb <=0xDFFF){return _e .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _ggab < _facb ||_ggab > 0x0010FFFF||(0xD800<=_ggab &&_ggab <=0xDFFF){return _e .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _eca :=_facb ;_eca <=_ggab ;
_eca ++{if _eca > 0x10FFFF{_ag .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_aga ._ggf .Chars [rune (_eca )]=GID (_gegf );_gegf ++;};};return nil ;};var _ggc _fc .Once ;func (_gbb *ttfParser )parseTTC ()(TtfType ,error ){_gbb .Skip (2*2);_eafg :=_gbb .ReadULong ();if _eafg < 1{return TtfType {},_e .New ("N\u006f \u0066\u006f\u006e\u0074\u0073\u0020\u0069\u006e \u0054\u0054\u0043\u0020fi\u006c\u0065");
};_ecgc :=_gbb .ReadULong ();_ ,_dab :=_gbb ._acfc .Seek (int64 (_ecgc ),_g .SeekStart );if _dab !=nil {return TtfType {},_dab ;};return _gbb .Parse ();};func (_egd *TtfType )NewEncoder ()_de .TextEncoder {return _de .NewTrueTypeFontEncoder (_egd .Chars )};
var _gdd *RuneCharSafeMap ;func (_cce *TtfType )String ()string {return _d .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_cce .PostScriptName ,_cce .UnitsPerEm ,_cce .Bold ,_cce .ItalicAngle ,_cce .CapHeight ,len (_cce .Chars ),len (_cce .GlyphNames ));
};func IsStdFont (name StdFontName )bool {_ ,_fcb :=_ae .read (name );return _fcb };var _eg *RuneCharSafeMap ;func (_egba *ttfParser )ParseHmtx ()error {if _eafgg :=_egba .Seek ("\u0068\u006d\u0074\u0078");_eafgg !=nil {return _eafgg ;};_egba ._ggf .Widths =make ([]uint16 ,0,8);
for _cbg :=uint16 (0);_cbg < _egba ._ggaa ;_cbg ++{_egba ._ggf .Widths =append (_egba ._ggf .Widths ,_egba .ReadUShort ());_egba .Skip (2);};if _egba ._ggaa < _egba ._dcf &&_egba ._ggaa > 0{_afg :=_egba ._ggf .Widths [_egba ._ggaa -1];for _gafd :=_egba ._ggaa ;
_gafd < _egba ._dcf ;_gafd ++{_egba ._ggf .Widths =append (_egba ._ggf .Widths ,_afg );};};return nil ;};var _abee =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func (_dfb *ttfParser )Seek (tag string )error {_agab ,_bcb :=_dfb ._cec [tag ];if !_bcb {return _d .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_dfb ._acfc .Seek (int64 (_agab ),_g .SeekStart );
return nil ;};var _ae =&fontMap {_ab :make (map[StdFontName ]func ()StdFont )};const (_aaad ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");
TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func _ddc (_gdbg map[string ]uint32 )string {var _bbdb []string ;
for _aeb :=range _gdbg {_bbdb =append (_bbdb ,_aeb );};_f .Slice (_bbdb ,func (_efb ,_acca int )bool {return _gdbg [_bbdb [_efb ]]< _gdbg [_bbdb [_acca ]]});_ceb :=[]string {_d .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_gdbg ))};
for _ ,_ccgc :=range _bbdb {_ceb =append (_ceb ,_d .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_ccgc ,_gdbg [_ccgc ]));};return _a .Join (_ceb ,"\u000a");};var _ Font =StdFont {};func _ebc ()StdFont {_cff .Do (_gg );_gaf :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_gaf ,_eg );};var _cff _fc .Once ;func NewFontFile2FromPdfObject (obj _ec .PdfObject )(TtfType ,error ){obj =_ec .TraceToDirectObject (obj );_egc ,_adfe :=obj .(*_ec .PdfObjectStream );if !_adfe {_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_ec .ErrTypeError ;};_bdd ,_gcg :=_ec .DecodeStream (_egc );if _gcg !=nil {return TtfType {},_gcg ;};_dcc :=ttfParser {_acfc :_bb .NewReader (_bdd )};return _dcc .Parse ();};var _cacb *RuneCharSafeMap ;func _adff ()StdFont {_ggc .Do (_baf );
_dgefg :=Descriptor {Name :TimesBoldName ,Family :_aaad ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};return NewStdFont (_dgefg ,_gdd );
};func (_cba *ttfParser )Skip (n int ){_cba ._acfc .Seek (int64 (n ),_g .SeekCurrent )};func (_dbde *ttfParser )readByte ()(_bbba uint8 ){_fg .Read (_dbde ._acfc ,_fg .BigEndian ,&_bbba );return _bbba ;};var _adab =&RuneCharSafeMap {_fa :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func (_efc StdFont )ToPdfObject ()_ec .PdfObject {_beb :=_ec .MakeDict ();_beb .Set ("\u0054\u0079\u0070\u0065",_ec .MakeName ("\u0046\u006f\u006e\u0074"));_beb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ec .MakeName ("\u0054\u0079\u0070e\u0031"));
_beb .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_ec .MakeName (_efc .Name ()));_beb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_efc ._cae .ToPdfObject ());return _ec .MakeIndirectObject (_beb );};var _bgf =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
var _ece *RuneCharSafeMap ;func (_bee *ttfParser )ParseComponents ()error {if _ccf :=_bee .ParseHead ();_ccf !=nil {return _ccf ;};if _afe :=_bee .ParseHhea ();_afe !=nil {return _afe ;};if _ede :=_bee .ParseMaxp ();_ede !=nil {return _ede ;};if _beab :=_bee .ParseHmtx ();
_beab !=nil {return _beab ;};if _ ,_ggag :=_bee ._cec ["\u006e\u0061\u006d\u0065"];_ggag {if _cca :=_bee .ParseName ();_cca !=nil {return _cca ;};};if _ ,_gff :=_bee ._cec ["\u004f\u0053\u002f\u0032"];_gff {if _cgcc :=_bee .ParseOS2 ();_cgcc !=nil {return _cgcc ;
};};if _ ,_eddb :=_bee ._cec ["\u0070\u006f\u0073\u0074"];_eddb {if _aagb :=_bee .ParsePost ();_aagb !=nil {return _aagb ;};};if _ ,_dbec :=_bee ._cec ["\u0063\u006d\u0061\u0070"];_dbec {if _gfaf :=_bee .ParseCmap ();_gfaf !=nil {return _gfaf ;};};return nil ;
};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_fa :make (map[rune ]CharMetrics ,length )};};func (_ceab *ttfParser )parseCmapVersion (_edbb int64 )error {_ag .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_edbb );
if _ceab ._ggf .Chars ==nil {_ceab ._ggf .Chars =make (map[rune ]GID );};_ceab ._acfc .Seek (int64 (_ceab ._cec ["\u0063\u006d\u0061\u0070"])+_edbb ,_g .SeekStart );var _agf ,_geee uint32 ;_age :=_ceab .ReadUShort ();if _age < 8{_agf =uint32 (_ceab .ReadUShort ());
_geee =uint32 (_ceab .ReadUShort ());}else {_ceab .ReadUShort ();_agf =_ceab .ReadULong ();_geee =_ceab .ReadULong ();};_ag .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_age ,_agf ,_geee );
switch _age {case 0:return _ceab .parseCmapFormat0 ();case 6:return _ceab .parseCmapFormat6 ();case 12:return _ceab .parseCmapFormat12 ();default:_ag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_age );
return nil ;};};func (_aebe *ttfParser )parseCmapSubtable10 (_cecg int64 )error {if _aebe ._ggf .Chars ==nil {_aebe ._ggf .Chars =make (map[rune ]GID );};_aebe ._acfc .Seek (int64 (_aebe ._cec ["\u0063\u006d\u0061\u0070"])+_cecg ,_g .SeekStart );var _edfd ,_cdb uint32 ;
_cfca :=_aebe .ReadUShort ();if _cfca < 8{_edfd =uint32 (_aebe .ReadUShort ());_cdb =uint32 (_aebe .ReadUShort ());}else {_aebe .ReadUShort ();_edfd =_aebe .ReadULong ();_cdb =_aebe .ReadULong ();};_ag .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_cfca ,_edfd ,_cdb );
if _cfca !=0{return _e .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_efa ,_dbd :=_aebe .ReadStr (256);if _dbd !=nil {return _dbd ;
};_gbg :=[]byte (_efa );for _dbcc ,_ced :=range _gbg {_aebe ._ggf .Chars [rune (_dbcc )]=GID (_ced );if _ced !=0{_d .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_dbcc ,_ced ,rune (_ced ));
};};return nil ;};func (_ccag *ttfParser )parseCmapSubtable31 (_fad int64 )error {_bgc :=make ([]rune ,0,8);_ddg :=make ([]rune ,0,8);_ccc :=make ([]int16 ,0,8);_cea :=make ([]uint16 ,0,8);_ccag ._ggf .Chars =make (map[rune ]GID );_ccag ._acfc .Seek (int64 (_ccag ._cec ["\u0063\u006d\u0061\u0070"])+_fad ,_g .SeekStart );
_gddd :=_ccag .ReadUShort ();if _gddd !=4{_ag .Log .Debug ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_gddd );
return nil ;};_ccag .Skip (2*2);_eec :=int (_ccag .ReadUShort ()/2);_ccag .Skip (3*2);for _agc :=0;_agc < _eec ;_agc ++{_ddg =append (_ddg ,rune (_ccag .ReadUShort ()));};_ccag .Skip (2);for _aef :=0;_aef < _eec ;_aef ++{_bgc =append (_bgc ,rune (_ccag .ReadUShort ()));
};for _edfg :=0;_edfg < _eec ;_edfg ++{_ccc =append (_ccc ,_ccag .ReadShort ());};_caef ,_ :=_ccag ._acfc .Seek (int64 (0),_g .SeekCurrent );for _defc :=0;_defc < _eec ;_defc ++{_cea =append (_cea ,_ccag .ReadUShort ());};for _ecd :=0;_ecd < _eec ;_ecd ++{_bfc :=_bgc [_ecd ];
_gfgc :=_ddg [_ecd ];_dgad :=_ccc [_ecd ];_abea :=_cea [_ecd ];if _abea > 0{_ccag ._acfc .Seek (_caef +2*int64 (_ecd )+int64 (_abea ),_g .SeekStart );};for _edgg :=_bfc ;_edgg <=_gfgc ;_edgg ++{if _edgg ==0xFFFF{break ;};var _dbc int32 ;if _abea > 0{_dbc =int32 (_ccag .ReadUShort ());
if _dbc > 0{_dbc +=int32 (_dgad );};}else {_dbc =_edgg +int32 (_dgad );};if _dbc >=65536{_dbc -=65536;};if _dbc > 0{_ccag ._ggf .Chars [_edgg ]=GID (_dbc );};};};return nil ;};var _gfg =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
var _daa *RuneCharSafeMap ;func (_fdad *ttfParser )ReadStr (length int )(string ,error ){_abg :=make ([]byte ,length );_bcg ,_dgc :=_fdad ._acfc .Read (_abg );if _dgc !=nil {return "",_dgc ;}else if _bcg !=length {return "",_d .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_abg ),nil ;};type RuneCharSafeMap struct{_fa map[rune ]CharMetrics ;_bgb _fc .RWMutex ;};func _dgef ()StdFont {_ggc .Do (_baf );_efe :=Descriptor {Name :TimesRomanName ,Family :_aaad ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_efe ,_daa );};func _aac ()StdFont {_cff .Do (_gg );_eee :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_eee ,_edb );};type CharMetrics struct{Wx float64 ;Wy float64 ;};func _ed ()StdFont {_cff .Do (_gg );_gf :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_gf ,_gcd );};func _cgc ()StdFont {_df :=_de .NewZapfDingbatsEncoder ();_fda :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_fda ,_ebf ,_df );};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);var _fbc *RuneCharSafeMap ;func (_dcfg *ttfParser )ParseHhea ()error {if _abf :=_dcfg .Seek ("\u0068\u0068\u0065\u0061");_abf !=nil {return _abf ;
};_dcfg .Skip (4+15*2);_dcfg ._ggaa =_dcfg .ReadUShort ();return nil ;};var _ebf =&RuneCharSafeMap {_fa :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
var _bbab =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_gd *RuneCharSafeMap )Range (f func (_gb rune ,_gce CharMetrics )(_be bool )){_gd ._bgb .RLock ();defer _gd ._bgb .RUnlock ();for _da ,_ge :=range _gd ._fa {if f (_da ,_ge ){break ;};};};type FontWeight int ;func (_cf CharMetrics )String ()string {return _d .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_cf .Wx ,_cf .Wy );
};func (_ccg StdFont )Descriptor ()Descriptor {return _ccg ._efd };var _eb =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_cc :=_ae .read (name );_cc {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_ae .write (name ,fnc );for _ ,_ce :=range aliases {RegisterStdFont (_ce ,fnc );};};