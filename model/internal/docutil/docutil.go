//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package docutil ;import (_c "errors";_g "fmt";_a "github.com/unidoc/unipdf/v3/common";_cf "github.com/unidoc/unipdf/v3/core";_cff "github.com/unidoc/unipdf/v3/internal/xmp";);func (_bgg *Document )AddStream (stream *_cf .PdfObjectStream ){for _ ,_cag :=range _bgg .Objects {if _cag ==stream {return ;
};};_bgg .Objects =append (_bgg .Objects ,stream );};func (_bf *Catalog )NewOutputIntents ()*OutputIntents {return &OutputIntents {_gga :_bf ._fa }};func (_abf Page )GetContents ()([]Content ,bool ){_efb ,_ecc :=_cf .GetArray (_abf .Object .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));
if !_ecc {return nil ,false ;};_fed :=make ([]Content ,_efb .Len ());for _egf ,_fbe :=range _efb .Elements (){_fed [_egf ]=Content {Object :_fbe };};return _fed ,true ;};type Page struct{_fbgf int ;Object *_cf .PdfObjectDictionary ;_fad *Document ;};func (_acg Content )GetData ()([]byte ,error ){_gfg ,_bge :=_cf .GetStream (_acg .Object );
if !_bge {return nil ,nil ;};_gef ,_bgc :=_cf .NewEncoderFromStream (_gfg );if _bgc !=nil {return nil ,_bgc ;};_fcf ,_bgc :=_gef .DecodeStream (_gfg );if _bgc !=nil {return nil ,_bgc ;};return _fcf ,nil ;};func (_ba *OutputIntents )Get (i int )(OutputIntent ,bool ){if _ba ._cge ==nil {return OutputIntent {},false ;
};if i >=_ba ._cge .Len (){return OutputIntent {},false ;};_ab :=_ba ._cge .Get (i );_gfa ,_fceb :=_cf .GetIndirect (_ab );if !_fceb {_fbg ,_ggcd :=_cf .GetDict (_ab );return OutputIntent {Object :_fbg },_ggcd ;};_bee ,_dde :=_cf .GetDict (_gfa .PdfObject );
return OutputIntent {Object :_bee },_dde ;};func (_bd *Document )FindCatalog ()(*Catalog ,bool ){var _aag *_cf .PdfObjectDictionary ;for _ ,_ac :=range _bd .Objects {_ef ,_aea :=_cf .GetDict (_ac );if !_aea {continue ;};if _eed ,_def :=_cf .GetName (_ef .Get ("\u0054\u0079\u0070\u0065"));
_def &&*_eed =="\u0043a\u0074\u0061\u006c\u006f\u0067"{_aag =_ef ;break ;};};if _aag ==nil {return nil ,false ;};return &Catalog {Object :_aag ,_fa :_bd },true ;};type OutputIntents struct{_cge *_cf .PdfObjectArray ;_gga *Document ;_fe *_cf .PdfIndirectObject ;
};func (_egd *Page )Number ()int {return _egd ._fbgf };type Document struct{ID [2]string ;Version _cf .Version ;Objects []_cf .PdfObject ;Info _cf .PdfObject ;Crypt *_cf .PdfCrypt ;UseHashBasedID bool ;};func (_bgd Page )GetResourcesXObject ()(*_cf .PdfObjectDictionary ,bool ){_abd ,_aab :=_bgd .GetResources ();
if !_aab {return nil ,false ;};return _cf .GetDict (_abd .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));};func (_ee *Catalog )SetOutputIntents (outputIntents *OutputIntents ){if _cga :=_ee .Object .Get ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073");
_cga !=nil {for _eeg ,_df :=range _ee ._fa .Objects {if _df ==_cga {if outputIntents ._fe ==_cga {return ;};_ee ._fa .Objects =append (_ee ._fa .Objects [:_eeg ],_ee ._fa .Objects [_eeg +1:]...);break ;};};};_da :=outputIntents ._fe ;if _da ==nil {_da =_cf .MakeIndirectObject (outputIntents ._cge );
};_ee .Object .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_da );_ee ._fa .Objects =append (_ee ._fa .Objects ,_da );};func (_ca *Catalog )GetOutputIntents ()(*OutputIntents ,bool ){_be :=_ca .Object .Get ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073");
if _be ==nil {return nil ,false ;};_ag ,_af :=_cf .GetIndirect (_be );if !_af {return nil ,false ;};_ggc ,_dc :=_cf .GetArray (_ag .PdfObject );if !_dc {return nil ,false ;};return &OutputIntents {_fe :_ag ,_cge :_ggc ,_gga :_ca ._fa },true ;};func (_fce *OutputIntents )Len ()int {return _fce ._cge .Len ()};
func (_gf *Catalog )SetMetadata (meta _cff .Metadata )error {_aeb ,_cg :=meta .MarshalXMP ();if _cg !=nil {return _cg ;};_de ,_cg :=_cf .MakeStream (_aeb ,nil );if _cg !=nil {return _cg ;};_de .Set ("\u0054\u0079\u0070\u0065",_cf .MakeName ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"));
_de .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cf .MakeName ("\u0058\u004d\u004c"));_gf .Object .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_de );_gf ._fa .Objects =append (_gf ._fa .Objects ,_de );return nil ;};type OutputIntent struct{Object *_cf .PdfObjectDictionary ;
};func (_dab Page )GetResources ()(*_cf .PdfObjectDictionary ,bool ){return _cf .GetDict (_dab .Object .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));};type ImageSMask struct{Image *Image ;Stream *_cf .PdfObjectStream ;};func (_d *Catalog )SetVersion (){_d .Object .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_cf .MakeName (_g .Sprintf ("\u0025\u0064\u002e%\u0064",_d ._fa .Version .Major ,_d ._fa .Version .Minor )));
};func (_eca Page )FindXObjectImages ()([]*Image ,error ){_gccf ,_dbc :=_eca .GetResourcesXObject ();if !_dbc {return nil ,nil ;};var _gaf []*Image ;var _dg error ;_afb :=map[*_cf .PdfObjectStream ]int {};_gac :=map[*_cf .PdfObjectStream ]struct{}{};var _aad int ;
for _ ,_ggb :=range _gccf .Keys (){_eb ,_geb :=_cf .GetStream (_gccf .Get (_ggb ));if !_geb {continue ;};if _ ,_dea :=_afb [_eb ];_dea {continue ;};_abe ,_gccg :=_cf .GetName (_eb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_gccg ||_abe .String ()!="\u0049\u006d\u0061g\u0065"{continue ;
};_aadf :=Image {BitsPerComponent :8,Stream :_eb ,Name :string (_ggb )};if _aadf .Colorspace ,_dg =_gff (_eb .PdfObjectDictionary .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_dg !=nil {_a .Log .Error ("\u0045\u0072\u0072\u006f\u0072\u0020\u0064\u0065\u0074\u0065r\u006d\u0069\u006e\u0065\u0020\u0063\u006fl\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u0025\u0073",_dg );
continue ;};if _aca ,_aef :=_cf .GetIntVal (_eb .PdfObjectDictionary .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_aef {_aadf .BitsPerComponent =_aca ;};if _bgf ,_dcad :=_cf .GetIntVal (_eb .PdfObjectDictionary .Get ("\u0057\u0069\u0064t\u0068"));
_dcad {_aadf .Width =_bgf ;};if _defd ,_ce :=_cf .GetIntVal (_eb .PdfObjectDictionary .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_ce {_aadf .Height =_defd ;};if _cb ,_eff :=_cf .GetStream (_eb .Get ("\u0053\u004d\u0061s\u006b"));_eff {_aadf .SMask =&ImageSMask {Image :&_aadf ,Stream :_cb };
_gac [_cb ]=struct{}{};};switch _aadf .Colorspace {case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":_aadf .ColorComponents =3;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":_aadf .ColorComponents =1;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":_aadf .ColorComponents =4;
default:_aadf .ColorComponents =-1;};_afb [_eb ]=_aad ;_gaf =append (_gaf ,&_aadf );_aad ++;};var _ffa []int ;for _ ,_ecag :=range _gaf {if _ecag .SMask !=nil {_fdf ,_fgb :=_afb [_ecag .SMask .Stream ];if _fgb {_ffa =append (_ffa ,_fdf );};};};_feg :=make ([]*Image ,len (_gaf )-len (_ffa ));
_aad =0;_dad :for _bc ,_fba :=range _gaf {for _ ,_aee :=range _ffa {if _bc ==_aee {continue _dad ;};};_feg [_aad ]=_fba ;_aad ++;};return _gaf ,nil ;};type Content struct{Object _cf .PdfObject ;};func (_gg *Catalog )GetPages ()([]Page ,bool ){_aa ,_ae :=_cf .GetDict (_gg .Object .Get ("\u0050\u0061\u0067e\u0073"));
if !_ae {return nil ,false ;};_dd ,_b :=_cf .GetArray (_aa .Get ("\u004b\u0069\u0064\u0073"));if !_b {return nil ,false ;};_fb :=make ([]Page ,_dd .Len ());for _ad ,_bb :=range _dd .Elements (){_fc ,_e :=_cf .GetDict (_bb );if !_e {continue ;};_fb [_ad ]=Page {Object :_fc ,_fbgf :_ad +1,_fad :_gg ._fa };
};return _fb ,true ;};func _gff (_baa _cf .PdfObject )(_cf .PdfObjectName ,error ){var _dca *_cf .PdfObjectName ;var _cgb *_cf .PdfObjectArray ;if _eeb ,_defb :=_baa .(*_cf .PdfIndirectObject );_defb {if _ff ,_fg :=_eeb .PdfObject .(*_cf .PdfObjectArray );
_fg {_cgb =_ff ;}else if _aagc ,_bfe :=_eeb .PdfObject .(*_cf .PdfObjectName );_bfe {_dca =_aagc ;};}else if _gge ,_eg :=_baa .(*_cf .PdfObjectArray );_eg {_cgb =_gge ;}else if _ed ,_ea :=_baa .(*_cf .PdfObjectName );_ea {_dca =_ed ;};if _dca !=nil {switch *_dca {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_dca ,nil ;
case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_dca ,nil ;};};if _cgb !=nil &&_cgb .Len ()> 0{if _gd ,_gcc :=_cgb .Get (0).(*_cf .PdfObjectName );_gcc {switch *_gd {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _cgb .Len ()==1{return *_gd ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_gd ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_gd ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_gd ,nil ;};};};return "",nil ;};func (_bba *OutputIntents )Add (oi _cf .PdfObject )error {_ec ,_fd :=oi .(*_cf .PdfObjectDictionary );if !_fd {return _c .New ("\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006et\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0061\u006e\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if _ga ,_dff :=_cf .GetStream (_ec .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));_dff {_bba ._gga .Objects =append (_bba ._gga .Objects ,_ga );};_cc ,_aga :=oi .(*_cf .PdfIndirectObject );
if !_aga {_cc =_cf .MakeIndirectObject (oi );};if _bba ._cge ==nil {_bba ._cge =_cf .MakeArray (_cc );}else {_bba ._cge .Append (_cc );};_bba ._gga .Objects =append (_bba ._gga .Objects ,_cc );return nil ;};func (_gb *Document )AddIndirectObject (indirect *_cf .PdfIndirectObject ){for _ ,_cd :=range _gb .Objects {if _cd ==indirect {return ;
};};_gb .Objects =append (_gb .Objects ,indirect );};type Image struct{Name string ;Width int ;Height int ;Colorspace _cf .PdfObjectName ;ColorComponents int ;BitsPerComponent int ;SMask *ImageSMask ;Stream *_cf .PdfObjectStream ;};func (_abg *Document )GetPages ()([]Page ,bool ){_ccf ,_bbaa :=_abg .FindCatalog ();
if !_bbaa {return nil ,false ;};return _ccf .GetPages ();};func (_bg *Catalog )HasMetadata ()bool {_db :=_bg .Object .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _db !=nil ;};type Catalog struct{Object *_cf .PdfObjectDictionary ;_fa *Document ;
};