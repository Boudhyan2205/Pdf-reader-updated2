//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package docutil ;import (_f "errors";_be "fmt";_g "github.com/unidoc/unipdf/v3/common";_c "github.com/unidoc/unipdf/v3/core";);func (_cdf *Catalog )GetOutputIntents ()(*OutputIntents ,bool ){_ccgc :=_cdf .Object .Get ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073");
if _ccgc ==nil {return nil ,false ;};_ed ,_bega :=_c .GetIndirect (_ccgc );if !_bega {return nil ,false ;};_cf ,_edf :=_c .GetArray (_ed .PdfObject );if !_edf {return nil ,false ;};return &OutputIntents {_df :_ed ,_ca :_cf ,_gg :_cdf ._cg },true ;};func (_bff *Content )SetData (data []byte )error {_cdfc ,_agcc :=_c .MakeStream (data ,_c .NewFlateEncoder ());
if _agcc !=nil {return _agcc ;};_gfc ,_ggec :=_c .GetArray (_bff ._gca .Object .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_ggec &&_bff ._fadg ==0{_bff ._gca .Object .Set ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cdfc );}else {if _agcc =_gfc .Set (_bff ._fadg ,_cdfc );
_agcc !=nil {return _agcc ;};};_bff ._gca ._ggf .Objects =append (_bff ._gca ._ggf .Objects ,_cdfc );return nil ;};func (_ddb *Page )Number ()int {return _ddb ._gbg };func (_dda Page )GetResources ()(*_c .PdfObjectDictionary ,bool ){return _c .GetDict (_dda .Object .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));
};func (_fdad Content )GetData ()([]byte ,error ){_cb ,_ged :=_c .NewEncoderFromStream (_fdad .Stream );if _ged !=nil {return nil ,_ged ;};_ffdd ,_ged :=_cb .DecodeStream (_fdad .Stream );if _ged !=nil {return nil ,_ged ;};return _ffdd ,nil ;};type OutputIntent struct{Object *_c .PdfObjectDictionary ;
};func (_bgf *Document )FindCatalog ()(*Catalog ,bool ){var _dea *_c .PdfObjectDictionary ;for _ ,_bgb :=range _bgf .Objects {_gb ,_aee :=_c .GetDict (_bgb );if !_aee {continue ;};if _ga ,_bce :=_c .GetName (_gb .Get ("\u0054\u0079\u0070\u0065"));_bce &&*_ga =="\u0043a\u0074\u0061\u006c\u006f\u0067"{_dea =_gb ;
break ;};};if _dea ==nil {return nil ,false ;};return &Catalog {Object :_dea ,_cg :_bgf },true ;};type Page struct{_gbg int ;Object *_c .PdfObjectDictionary ;_ggf *Document ;};func _edfa (_cad _c .PdfObject )(_c .PdfObjectName ,error ){var _fed *_c .PdfObjectName ;
var _abg *_c .PdfObjectArray ;if _daa ,_agc :=_cad .(*_c .PdfIndirectObject );_agc {if _fc ,_ffa :=_daa .PdfObject .(*_c .PdfObjectArray );_ffa {_abg =_fc ;}else if _bba ,_fbe :=_daa .PdfObject .(*_c .PdfObjectName );_fbe {_fed =_bba ;};}else if _dbc ,_gge :=_cad .(*_c .PdfObjectArray );
_gge {_abg =_dbc ;}else if _gdg ,_bdb :=_cad .(*_c .PdfObjectName );_bdb {_fed =_gdg ;};if _fed !=nil {switch *_fed {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_fed ,nil ;
case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_fed ,nil ;};};if _abg !=nil &&_abg .Len ()> 0{if _efa ,_bbb :=_abg .Get (0).(*_c .PdfObjectName );_bbb {switch *_efa {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _abg .Len ()==1{return *_efa ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_efa ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_efa ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_efa ,nil ;};};};return "",nil ;};func (_ef *Catalog )HasMetadata ()bool {_beg :=_ef .Object .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
return _beg !=nil ;};func (_faf *OutputIntents )Len ()int {return _faf ._ca .Len ()};func (_e *Catalog )GetPages ()([]Page ,bool ){_cd ,_fa :=_c .GetDict (_e .Object .Get ("\u0050\u0061\u0067e\u0073"));if !_fa {return nil ,false ;};_ff ,_bf :=_c .GetArray (_cd .Get ("\u004b\u0069\u0064\u0073"));
if !_bf {return nil ,false ;};_a :=make ([]Page ,_ff .Len ());for _ce ,_bg :=range _ff .Elements (){_cgf ,_bd :=_c .GetDict (_bg );if !_bd {continue ;};_a [_ce ]=Page {Object :_cgf ,_gbg :_ce +1,_ggf :_e ._cg };};return _a ,true ;};func (_fafb *Document )AddStream (stream *_c .PdfObjectStream ){for _ ,_egf :=range _fafb .Objects {if _egf ==stream {return ;
};};_fafb .Objects =append (_fafb .Objects ,stream );};func (_d *Catalog )SetMetadata (data []byte )error {_gd ,_efc :=_c .MakeStream (data ,nil );if _efc !=nil {return _efc ;};_gd .Set ("\u0054\u0079\u0070\u0065",_c .MakeName ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"));
_gd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_c .MakeName ("\u0058\u004d\u004c"));_d .Object .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gd );_d ._cg .Objects =append (_d ._cg .Objects ,_gd );return nil ;};func (_egc *OutputIntents )Add (oi _c .PdfObject )error {_eff ,_ge :=oi .(*_c .PdfObjectDictionary );
if !_ge {return _f .New ("\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006et\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0061\u006e\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if _fda ,_ae :=_c .GetStream (_eff .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));_ae {_egc ._gg .Objects =append (_egc ._gg .Objects ,_fda );};_db ,_bc :=oi .(*_c .PdfIndirectObject );if !_bc {_db =_c .MakeIndirectObject (oi );
};if _egc ._ca ==nil {_egc ._ca =_c .MakeArray (_db );}else {_egc ._ca .Append (_db );};_egc ._gg .Objects =append (_egc ._gg .Objects ,_db );return nil ;};type Content struct{Stream *_c .PdfObjectStream ;_fadg int ;_gca Page ;};func (_bege Page )FindXObjectForms ()[]*_c .PdfObjectStream {_edd ,_eef :=_bege .GetResourcesXObject ();
if !_eef {return nil ;};_feg :=map[*_c .PdfObjectStream ]struct{}{};var _bca func (_gfg *_c .PdfObjectDictionary ,_gcf map[*_c .PdfObjectStream ]struct{});_bca =func (_fbb *_c .PdfObjectDictionary ,_daab map[*_c .PdfObjectStream ]struct{}){for _ ,_cag :=range _fbb .Keys (){_ec ,_cab :=_c .GetStream (_fbb .Get (_cag ));
if !_cab {continue ;};if _ ,_cfe :=_daab [_ec ];_cfe {continue ;};_eb ,_cgb :=_c .GetName (_ec .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_cgb ||_eb .String ()!="\u0046\u006f\u0072\u006d"{continue ;};_daab [_ec ]=struct{}{};_abe ,_cgb :=_c .GetDict (_ec .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));
if !_cgb {continue ;};_fac ,_fad :=_c .GetDict (_abe .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));if _fad {_bca (_fac ,_daab );};};};_bca (_edd ,_feg );var _efde []*_c .PdfObjectStream ;for _fcg :=range _feg {_efde =append (_efde ,_fcg );};return _efde ;
};type Image struct{Name string ;Width int ;Height int ;Colorspace _c .PdfObjectName ;ColorComponents int ;BitsPerComponent int ;SMask *ImageSMask ;Stream *_c .PdfObjectStream ;};func (_cca *Catalog )NewOutputIntents ()*OutputIntents {return &OutputIntents {_gg :_cca ._cg }};
func (_cde *Catalog )GetMarkInfo ()(*_c .PdfObjectDictionary ,bool ){_fd ,_gf :=_c .GetDict (_cde .Object .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f"));return _fd ,_gf ;};func (_fabb *Catalog )SetOutputIntents (outputIntents *OutputIntents ){if _gcg :=_fabb .Object .Get ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073");
_gcg !=nil {for _fb ,_eg :=range _fabb ._cg .Objects {if _eg ==_gcg {if outputIntents ._df ==_gcg {return ;};_fabb ._cg .Objects =append (_fabb ._cg .Objects [:_fb ],_fabb ._cg .Objects [_fb +1:]...);break ;};};};_ab :=outputIntents ._df ;if _ab ==nil {_ab =_c .MakeIndirectObject (outputIntents ._ca );
};_fabb .Object .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_ab );_fabb ._cg .Objects =append (_fabb ._cg .Objects ,_ab );};func (_dd *OutputIntents )Get (i int )(OutputIntent ,bool ){if _dd ._ca ==nil {return OutputIntent {},false ;
};if i >=_dd ._ca .Len (){return OutputIntent {},false ;};_ffe :=_dd ._ca .Get (i );_ag ,_de :=_c .GetIndirect (_ffe );if !_de {_ccc ,_ea :=_c .GetDict (_ffe );return OutputIntent {Object :_ccc },_ea ;};_ggc ,_fde :=_c .GetDict (_ag .PdfObject );return OutputIntent {Object :_ggc },_fde ;
};func (_cc *Catalog )GetMetadata ()(*_c .PdfObjectStream ,bool ){_ccg ,_fab :=_c .GetStream (_cc .Object .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"));return _ccg ,_fab ;};type OutputIntents struct{_ca *_c .PdfObjectArray ;_gg *Document ;
_df *_c .PdfIndirectObject ;};type Document struct{ID [2]string ;Version _c .Version ;Objects []_c .PdfObject ;Info _c .PdfObject ;Crypt *_c .PdfCrypt ;UseHashBasedID bool ;};func (_cac Page )GetResourcesXObject ()(*_c .PdfObjectDictionary ,bool ){_bfd ,_deg :=_cac .GetResources ();
if !_deg {return nil ,false ;};return _c .GetDict (_bfd .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));};func (_ege Page )GetContents ()([]Content ,bool ){_ffed ,_cgc :=_c .GetArray (_ege .Object .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));
if !_cgc {_dbd ,_fbf :=_c .GetStream (_ege .Object .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_fbf {return nil ,false ;};return []Content {{Stream :_dbd ,_gca :_ege ,_fadg :0}},true ;};_dae :=make ([]Content ,_ffed .Len ());for _bec ,_gcb :=range _ffed .Elements (){_aa ,_geb :=_c .GetStream (_gcb );
if !_geb {continue ;};_dae [_bec ]=Content {Stream :_aa ,_gca :_ege ,_fadg :_bec };};return _dae ,true ;};func (_beb *Catalog )SetVersion (){_beb .Object .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_c .MakeName (_be .Sprintf ("\u0025\u0064\u002e%\u0064",_beb ._cg .Version .Major ,_beb ._cg .Version .Minor )));
};func (_bfg *Document )GetPages ()([]Page ,bool ){_fe ,_ffef :=_bfg .FindCatalog ();if !_ffef {return nil ,false ;};return _fe .GetPages ();};func (_eda Page )FindXObjectImages ()([]*Image ,error ){_bebd ,_ad :=_eda .GetResourcesXObject ();if !_ad {return nil ,nil ;
};var _gcbd []*Image ;var _aag error ;_ddf :=map[*_c .PdfObjectStream ]int {};_gae :=map[*_c .PdfObjectStream ]struct{}{};var _efd int ;for _ ,_fg :=range _bebd .Keys (){_aage ,_bgd :=_c .GetStream (_bebd .Get (_fg ));if !_bgd {continue ;};if _ ,_edc :=_ddf [_aage ];
_edc {continue ;};_cdd ,_ffd :=_c .GetName (_aage .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_ffd ||_cdd .String ()!="\u0049\u006d\u0061g\u0065"{continue ;};_ead :=Image {BitsPerComponent :8,Stream :_aage ,Name :string (_fg )};if _ead .Colorspace ,_aag =_edfa (_aage .PdfObjectDictionary .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_aag !=nil {_g .Log .Error ("\u0045\u0072\u0072\u006f\u0072\u0020\u0064\u0065\u0074\u0065r\u006d\u0069\u006e\u0065\u0020\u0063\u006fl\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u0025\u0073",_aag );continue ;};if _ggfd ,_cdfa :=_c .GetIntVal (_aage .PdfObjectDictionary .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));
_cdfa {_ead .BitsPerComponent =_ggfd ;};if _cace ,_cef :=_c .GetIntVal (_aage .PdfObjectDictionary .Get ("\u0057\u0069\u0064t\u0068"));_cef {_ead .Width =_cace ;};if _deb ,_cdg :=_c .GetIntVal (_aage .PdfObjectDictionary .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_cdg {_ead .Height =_deb ;};if _gfe ,_deaf :=_c .GetStream (_aage .Get ("\u0053\u004d\u0061s\u006b"));_deaf {_ead .SMask =&ImageSMask {Image :&_ead ,Stream :_gfe };_gae [_gfe ]=struct{}{};};switch _ead .Colorspace {case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":_ead .ColorComponents =3;
case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":_ead .ColorComponents =1;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":_ead .ColorComponents =4;default:_ead .ColorComponents =-1;};_ddf [_aage ]=_efd ;_gcbd =append (_gcbd ,&_ead );
_efd ++;};var _gbgd []int ;for _ ,_dgd :=range _gcbd {if _dgd .SMask !=nil {_agb ,_ddc :=_ddf [_dgd .SMask .Stream ];if _ddc {_gbgd =append (_gbgd ,_agb );};};};_cga :=make ([]*Image ,len (_gcbd )-len (_gbgd ));_efd =0;_eag :for _adf ,_gbd :=range _gcbd {for _ ,_efb :=range _gbgd {if _adf ==_efb {continue _eag ;
};};_cga [_efd ]=_gbd ;_efd ++;};return _gcbd ,nil ;};type ImageSMask struct{Image *Image ;Stream *_c .PdfObjectStream ;};func (_aeeb *Document )AddIndirectObject (indirect *_c .PdfIndirectObject ){for _ ,_bb :=range _aeeb .Objects {if _bb ==indirect {return ;
};};_aeeb .Objects =append (_aeeb .Objects ,indirect );};func (_gc *Catalog )SetMarkInfo (mi _c .PdfObject ){_da :=_c .MakeIndirectObject (mi );_gc .Object .Set ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f",_da );_gc ._cg .Objects =append (_gc ._cg .Objects ,_da );
};type Catalog struct{Object *_c .PdfObjectDictionary ;_cg *Document ;};