//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_e "bufio";_ffc "bytes";_fc "crypto/md5";_eg "crypto/rand";_gd "crypto/sha1";_bgc "crypto/x509";_ff "encoding/binary";_g "encoding/hex";_ca "errors";_f "fmt";_ag "github.com/unidoc/pkcs7";_fa "github.com/unidoc/unipdf/v3/common";
_ab "github.com/unidoc/unipdf/v3/core";_d "github.com/unidoc/unipdf/v3/core/security";_dd "github.com/unidoc/unipdf/v3/core/security/crypt";_egc "github.com/unidoc/unipdf/v3/internal/cmap";_cac "github.com/unidoc/unipdf/v3/internal/imageutil";_age "github.com/unidoc/unipdf/v3/internal/license";
_fdc "github.com/unidoc/unipdf/v3/internal/sampling";_dc "github.com/unidoc/unipdf/v3/internal/textencoding";_cedb "github.com/unidoc/unipdf/v3/internal/timeutils";_da "github.com/unidoc/unipdf/v3/internal/transform";_be "github.com/unidoc/unipdf/v3/model/internal/docutil";
_bc "github.com/unidoc/unipdf/v3/model/internal/fonts";_fe "github.com/unidoc/unipdf/v3/model/sigutil";_bga "github.com/unidoc/unipdf/v3/ps";_gb "github.com/unidoc/unitype";_cg "golang.org/x/xerrors";_cc "hash";_ga "image";_ce "image/color";_ "image/gif";
_ "image/png";_fb "io";_fd "io/ioutil";_ced "math";_a "math/rand";_ac "os";_fg "regexp";_edg "sort";_fcg "strconv";_af "strings";_c "sync";_bg "time";_ed "unicode";_ccc "unicode/utf8";);var _cecab =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_bdge *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_ddba :=_fdc .NewReader (img .getBase ());_gfgc :=_cac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_fcfd :=_fdc .NewWriter (_gfgc );
_bdfb :=_ced .Pow (2,float64 (img .BitsPerComponent ))-1;_baedb :=make ([]uint32 ,3);var (_cdecg uint32 ;ANorm ,X ,Y ,Z ,_dccd ,_ebdbc ,_bbgf float64 ;_feaa error ;);for {_cdecg ,_feaa =_ddba .ReadSample ();if _feaa ==_fb .EOF {break ;}else if _feaa !=nil {return img ,_feaa ;
};ANorm =float64 (_cdecg )/_bdfb ;X =_bdge .WhitePoint [0]*_ced .Pow (ANorm ,_bdge .Gamma );Y =_bdge .WhitePoint [1]*_ced .Pow (ANorm ,_bdge .Gamma );Z =_bdge .WhitePoint [2]*_ced .Pow (ANorm ,_bdge .Gamma );_dccd =3.240479*X +-1.537150*Y +-0.498535*Z ;
_ebdbc =-0.969256*X +1.875992*Y +0.041556*Z ;_bbgf =0.055648*X +-0.204043*Y +1.057311*Z ;_dccd =_ced .Min (_ced .Max (_dccd ,0),1.0);_ebdbc =_ced .Min (_ced .Max (_ebdbc ,0),1.0);_bbgf =_ced .Min (_ced .Max (_bbgf ,0),1.0);_baedb [0]=uint32 (_dccd *_bdfb );
_baedb [1]=uint32 (_ebdbc *_bdfb );_baedb [2]=uint32 (_bbgf *_bdfb );if _feaa =_fcfd .WriteSamples (_baedb );_feaa !=nil {return img ,_feaa ;};};return _bgbec (&_gfgc ),nil ;};func _gbbad (_fdbb *_ab .PdfObjectDictionary )bool {for _ ,_bdgaa :=range _fdbb .Keys (){if _ ,_dcafb :=_fcdb [_bdgaa .String ()];
_dcafb {return true ;};};return false ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _d .Permissions ;Algorithm EncryptionAlgorithm ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_cbca *LTV )Enable (sig *PdfSignature ,extraCerts []*_bgc .Certificate )error {if _cggbe :=_cbca .validateSig (sig );_cggbe !=nil {return _cggbe ;};_bacfb ,_dcdge :=_cbca .generateVRIKey (sig );if _dcdge !=nil {return _dcdge ;};if _ ,_ccfg :=_cbca ._gcdc .VRI [_bacfb ];
_ccfg &&_cbca .SkipExisting {return nil ;};_decdff ,_dcdge :=sig .GetCerts ();if _dcdge !=nil {return _dcdge ;};return _cbca .enable (_decdff ,extraCerts ,_bacfb );};func (_cfeab *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _cfeab ._gcabf .GetCrypter ()!=nil &&!_cfeab ._gcabf .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cgaaeb :=_cfeab ._bgffe ;_ggagc :=_cgaaeb .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _ggagc ==nil {return nil ,nil ;};_fa .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_affed :=_ab .ResolveReference (_ggagc );
_fa .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_affed );if _ebdfc :=_ab .IsNullObject (_affed );_ebdfc {_fa .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_fdecc ,_ccbagf :=_affed .(*_ab .PdfIndirectObject );if !_ccbagf {if _ ,_gabd :=_ab .GetDict (_affed );!_gabd {_fa .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_fa .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_fdecc =_ab .MakeIndirectObject (_affed );};_edef ,_ccbagf :=_fdecc .PdfObject .(*_ab .PdfObjectDictionary );if !_ccbagf {return nil ,_ca .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_fa .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_edef );_cebed ,_ ,_cdad :=_cfeab .buildOutlineTree (_fdecc ,nil ,nil ,nil );if _cdad !=nil {return nil ,_cdad ;};_fa .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_cebed );
return _cebed ,nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_fbe :=NewPdfAction ();_cgf :=&PdfActionURI {};_cgf .PdfAction =_fbe ;_fbe .SetContext (_cgf );return _cgf ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_bdggg :=&PdfOutlineItem {_fdbca :_ab .MakeIndirectObject (_ab .MakeDict ())};_bdggg ._caad =_bdggg ;return _bdggg ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_ccaa *LTV )EnableByName (name string ,extraCerts []*_bgc .Certificate )error {_caeba :=_ccaa ._fafcc ._egeg .AcroForm ;for _ ,_adafb :=range _caeba .AllFields (){_bbba ,_ :=_adafb .GetContext ().(*PdfFieldSignature );if _bbba ==nil {continue ;};
if _acadf :=_bbba .PartialName ();_acadf !=name {continue ;};return _ccaa .Enable (_bbba .V ,extraCerts );};return nil ;};

// DetailedPdfReader is a wrapper over PdfReader that is used for detailed document read standard validation.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type DetailedPdfReader struct{*PdfReader ;_ffacg _ab .ParserMetadata ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_ecfba *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_ecfba .NumInputs {_fa .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_ca .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _ecfba ._fabfe ==nil {_ggbde :=_ecfba .processSamples ();if _ggbde !=nil {return nil ,_ggbde ;};};_bcdcf :=_ecfba .Encode ;if _bcdcf ==nil {_bcdcf =[]float64 {};
for _dcebgd :=0;_dcebgd < len (_ecfba .Size );_dcebgd ++{_bcdcf =append (_bcdcf ,0);_bcdcf =append (_bcdcf ,float64 (_ecfba .Size [_dcebgd ]-1));};};_bfgb :=_ecfba .Decode ;if _bfgb ==nil {_bfgb =_ecfba .Range ;};_eede :=make ([]int ,len (x ));for _agdb :=0;
_agdb < len (x );_agdb ++{_eggd :=x [_agdb ];_fbfba :=_ced .Min (_ced .Max (_eggd ,_ecfba .Domain [2*_agdb ]),_ecfba .Domain [2*_agdb +1]);_afbbb :=_cac .LinearInterpolate (_fbfba ,_ecfba .Domain [2*_agdb ],_ecfba .Domain [2*_agdb +1],_bcdcf [2*_agdb ],_bcdcf [2*_agdb +1]);
_bgab :=_ced .Min (_ced .Max (_afbbb ,0),float64 (_ecfba .Size [_agdb ]-1));_bcedaf :=int (_ced .Floor (_bgab +0.5));if _bcedaf < 0{_bcedaf =0;}else if _bcedaf > _ecfba .Size [_agdb ]{_bcedaf =_ecfba .Size [_agdb ]-1;};_eede [_agdb ]=_bcedaf ;};_caea :=_eede [0];
for _gedf :=1;_gedf < _ecfba .NumInputs ;_gedf ++{_ggaf :=_eede [_gedf ];for _dgcgf :=0;_dgcgf < _gedf ;_dgcgf ++{_ggaf *=_ecfba .Size [_dgcgf ];};_caea +=_ggaf ;};_caea *=_ecfba .NumOutputs ;var _gdada []float64 ;for _ebba :=0;_ebba < _ecfba .NumOutputs ;
_ebba ++{_bfcd :=_caea +_ebba ;if _bfcd >=len (_ecfba ._fabfe ){_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_fcda :=_ecfba ._fabfe [_bfcd ];_adgad :=_cac .LinearInterpolate (float64 (_fcda ),0,_ced .Pow (2,float64 (_ecfba .BitsPerSample )),_bfgb [2*_ebba ],_bfgb [2*_ebba +1]);_dfccg :=_ced .Min (_ced .Max (_adgad ,_ecfba .Range [2*_ebba ]),_ecfba .Range [2*_ebba +1]);
_gdada =append (_gdada ,_dfccg );};return _gdada ,nil ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_cggf *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_ceee ,_def :=color .(*PdfColorCalRGB );if !_def {_fa .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bccc :=_ceee .A ();_dgcb :=_ceee .B ();_acba :=_ceee .C ();X :=_cggf .Matrix [0]*_ced .Pow (_bccc ,_cggf .Gamma [0])+_cggf .Matrix [3]*_ced .Pow (_dgcb ,_cggf .Gamma [1])+_cggf .Matrix [6]*_ced .Pow (_acba ,_cggf .Gamma [2]);
Y :=_cggf .Matrix [1]*_ced .Pow (_bccc ,_cggf .Gamma [0])+_cggf .Matrix [4]*_ced .Pow (_dgcb ,_cggf .Gamma [1])+_cggf .Matrix [7]*_ced .Pow (_acba ,_cggf .Gamma [2]);Z :=_cggf .Matrix [2]*_ced .Pow (_bccc ,_cggf .Gamma [0])+_cggf .Matrix [5]*_ced .Pow (_dgcb ,_cggf .Gamma [1])+_cggf .Matrix [8]*_ced .Pow (_acba ,_cggf .Gamma [2]);
_ffdcd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_edde :=-0.969256*X +1.875992*Y +0.041556*Z ;_ddae :=0.055648*X +-0.204043*Y +1.057311*Z ;_ffdcd =_ced .Min (_ced .Max (_ffdcd ,0),1.0);_edde =_ced .Min (_ced .Max (_edde ,0),1.0);_ddae =_ced .Min (_ced .Max (_ddae ,0),1.0);
return NewPdfColorDeviceRGB (_ffdcd ,_edde ,_ddae ),nil ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_ebc *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_cffde :=0.3*_ebc .R ()+0.59*_ebc .G ()+0.11*_ebc .B ();_cffde =_ced .Min (_ced .Max (_cffde ,0.0),1.0);return NewPdfColorDeviceGray (_cffde );};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_cefc :=NewPdfAnnotation ();_ccdg :=&PdfAnnotationMovie {};_ccdg .PdfAnnotation =_cefc ;_cefc .SetContext (_ccdg );return _ccdg ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_cacgfd *Image )ToJBIG2Image ()(*_ab .JBIG2Image ,error ){_bgbbe ,_egggb :=_cacgfd .ToGoImage ();if _egggb !=nil {return nil ,_egggb ;};return _ab .GoImageToJBIG2 (_bgbbe ,_ab .JB2ImageAutoThreshold );};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_acad *PdfColorspaceDeviceN )ToPdfObject ()_ab .PdfObject {_bad :=_ab .MakeArray (_ab .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_bad .Append (_acad .ColorantNames );_bad .Append (_acad .AlternateSpace .ToPdfObject ());_bad .Append (_acad .TintTransform .ToPdfObject ());
if _acad .Attributes !=nil {_bad .Append (_acad .Attributes .ToPdfObject ());};if _acad ._feee !=nil {_acad ._feee .PdfObject =_bad ;return _acad ._feee ;};return _bad ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_fcdg *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _fcdg .Alternate ==nil {_fa .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _fcdg .N ==1{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_efba :=NewPdfColorspaceDeviceGray ();return _efba .ImageToRGB (img );}else if _fcdg .N ==3{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _fcdg .N ==4{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_afeg :=NewPdfColorspaceDeviceCMYK ();return _afeg .ImageToRGB (img );}else {return img ,_ca .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_fa .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_fcdg );
_abcb ,_eedg :=_fcdg .Alternate .ImageToRGB (img );_fa .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_fa .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_abcb );
return _abcb ,_eedg ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// IsPush returns true if the button field represents a push button, false otherwise.
func (_acee *PdfFieldButton )IsPush ()bool {return _acee .GetType ()==ButtonTypePush };

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_dfcg :=&PdfColorspaceCalRGB {};_dfcg .BlackPoint =[]float64 {0.0,0.0,0.0};_dfcg .Gamma =[]float64 {1.0,1.0,1.0};_dfcg .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _dfcg ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};func (_abeea *PdfReader )loadAnnotations (_fdabb _ab .PdfObject )([]*PdfAnnotation ,error ){_gfdgd ,_cbgc :=_ab .GetArray (_fdabb );if !_cbgc {return nil ,_f .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _gacfa []*PdfAnnotation ;for _ ,_ffbf :=range _gfdgd .Elements (){_ffbf =_ab .ResolveReference (_ffbf );if _ ,_deafe :=_ffbf .(*_ab .PdfObjectNull );_deafe {continue ;};_aggcba ,_fecac :=_ffbf .(*_ab .PdfObjectDictionary );_bacaa ,_agdgc :=_ffbf .(*_ab .PdfIndirectObject );
if _fecac {_bacaa =&_ab .PdfIndirectObject {};_bacaa .PdfObject =_aggcba ;}else {if !_agdgc {return nil ,_f .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_adfef ,_dabe :=_abeea .newPdfAnnotationFromIndirectObject (_bacaa );if _dabe !=nil {return nil ,_dabe ;};switch _gcfda :=_adfef .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_acdca :=range _abeea .AcroForm .AllFields (){if _acdca ._ggde ==_gcfda .Parent {_gcfda ._beb =_acdca ;
break ;};};};if _adfef !=nil {_gacfa =append (_gacfa ,_adfef );};};return _gacfa ,nil ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_eagccf *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _baeea []*PdfField ;if _eagccf .AcroForm !=nil {_baeea =_eagccf .AcroForm .AllFields ();};_efddc :=make (map[*PdfField ]struct{},len (_baeea ));for _ ,_agdfd :=range _baeea {_efddc [_agdfd ]=struct{}{};
};for _ ,_fgfeb :=range _eagccf .PageList {_bbffd ,_febd :=_fgfeb .GetAnnotations ();if _febd !=nil {return false ,_febd ;};for _ ,_dggc :=range _bbffd {_deefge ,_eegdd :=_dggc .GetContext ().(*PdfAnnotationWidget );if !_eegdd {continue ;};_fgffe :=_deefge .Field ();
if _fgffe ==nil {return true ,nil ;};if _ ,_edbdf :=_efddc [_fgffe ];!_edbdf {return true ,nil ;};};};return false ,nil ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_ab .PdfObjectDictionary )(*PdfPageResources ,error ){_edafg :=NewPdfPageResources ();if _ccdc :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_ccdc !=nil {_edafg .ExtGState =_ccdc ;};if _aeefd :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_aeefd !=nil &&!_ab .IsNullObject (_aeefd ){_edafg .ColorSpace =_aeefd ;};if _ecbdg :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_ecbdg !=nil {_edafg .Pattern =_ecbdg ;};if _dafeg :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_dafeg !=nil {_edafg .Shading =_dafeg ;
};if _ffgfg :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_ffgfg !=nil {_edafg .XObject =_ffgfg ;};if _cggde :=_ab .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_cggde !=nil {_edafg .Font =_cggde ;};if _fgec :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_fgec !=nil {_edafg .ProcSet =_fgec ;};if _fdgage :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_fdgage !=nil {_edafg .Properties =_fdgage ;};return _edafg ,nil ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _ab .PdfObject ;MK _ab .PdfObject ;A _ab .PdfObject ;AA _ab .PdfObject ;};func (_fcdgc *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};var _dgedc =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_fdd :=NewPdfAction ();_fge :=&PdfActionGoTo {};_fge .PdfAction =_fdd ;_fdd .SetContext (_fge );return _fge ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_ccggb *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_dcbed ,_ ,_fgff :=_ccggb .CharcodesToUnicodeWithStats (_ccggb .BytesToCharcodes (data ));_begbf :=_dc .ExpandLigatures (_dcbed );return _begbf ,_ccc .RuneCountInString (_begbf ),_fgff ;
};func _efffa ()string {_dfdbc .Lock ();defer _dfdbc .Unlock ();return _ebafe };

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;func (_fgde *PdfReader )newPdfFieldFromIndirectObject (_gbcf *_ab .PdfIndirectObject ,_bdcd *PdfField )(*PdfField ,error ){if _baedbe ,_agdc :=_fgde ._ebda .GetModelFromPrimitive (_gbcf ).(*PdfField );_agdc {return _baedbe ,nil ;
};_bddee ,_dadd :=_ab .GetDict (_gbcf );if !_dadd {return nil ,_f .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ceebg :=NewPdfField ();_ceebg ._ggde =_gbcf ;_ceebg ._ggde .PdfObject =_bddee ;if _gaaf ,_dfcc :=_ab .GetName (_bddee .Get ("\u0046\u0054"));_dfcc {_ceebg .FT =_gaaf ;};if _bdcd !=nil {_ceebg .Parent =_bdcd ;};_ceebg .T ,_ =_bddee .Get ("\u0054").(*_ab .PdfObjectString );
_ceebg .TU ,_ =_bddee .Get ("\u0054\u0055").(*_ab .PdfObjectString );_ceebg .TM ,_ =_bddee .Get ("\u0054\u004d").(*_ab .PdfObjectString );_ceebg .Ff ,_ =_bddee .Get ("\u0046\u0066").(*_ab .PdfObjectInteger );_ceebg .V =_bddee .Get ("\u0056");_ceebg .DV =_bddee .Get ("\u0044\u0056");
_ceebg .AA =_bddee .Get ("\u0041\u0041");_fddag :=_ceebg .FT ;if _fddag ==nil &&_bdcd !=nil {_fddag =_bdcd .FT ;};if _fddag !=nil {switch *_fddag {case "\u0054\u0078":_ecag ,_eegb :=_eaaga (_bddee );if _eegb !=nil {return nil ,_eegb ;};_ecag .PdfField =_ceebg ;
_ceebg ._ggfg =_ecag ;case "\u0043\u0068":_deabc ,_fdded :=_egfdc (_bddee );if _fdded !=nil {return nil ,_fdded ;};_deabc .PdfField =_ceebg ;_ceebg ._ggfg =_deabc ;case "\u0042\u0074\u006e":_ebdd ,_egbb :=_cbgfd (_bddee );if _egbb !=nil {return nil ,_egbb ;
};_ebdd .PdfField =_ceebg ;_ceebg ._ggfg =_ebdd ;case "\u0053\u0069\u0067":_edcc ,_afde :=_fgde .newPdfFieldSignatureFromDict (_bddee );if _afde !=nil {return nil ,_afde ;};_edcc .PdfField =_ceebg ;_ceebg ._ggfg =_edcc ;default:_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_ceebg .FT );
return nil ,_ca .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _gefa ,_efca :=_ab .GetName (_bddee .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_efca {if *_gefa =="\u0057\u0069\u0064\u0067\u0065\u0074"{_eebf ,_cade :=_fgde .newPdfAnnotationFromIndirectObject (_gbcf );
if _cade !=nil {return nil ,_cade ;};_dbbe ,_bbcg :=_eebf .GetContext ().(*PdfAnnotationWidget );if !_bbcg {return nil ,_ca .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");
};_dbbe ._beb =_ceebg ;_dbbe .Parent =_ceebg ._ggde ;_ceebg .Annotations =append (_ceebg .Annotations ,_dbbe );return _ceebg ,nil ;};};_fbdcb :=true ;if _ecad ,_gccfa :=_ab .GetArray (_bddee .Get ("\u004b\u0069\u0064\u0073"));_gccfa {_ebdg :=make ([]*_ab .PdfIndirectObject ,0,_ecad .Len ());
for _ ,_gdfb :=range _ecad .Elements (){_gbfea ,_dedgg :=_ab .GetIndirect (_gdfb );if !_dedgg {_bbef ,_eddb :=_ab .GetStream (_gdfb );if _eddb &&_bbef .PdfObjectDictionary !=nil {_ebdde ,_ccaf :=_ab .GetNameVal (_bbef .Get ("\u0054\u0079\u0070\u0065"));
if _ccaf &&_ebdde =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_fa .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_ca .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_deca ,_abbd :=_ab .GetDict (_gbfea );
if !_abbd {return nil ,ErrTypeCheck ;};if _fbdcb {_fbdcb =!_gbbad (_deca );};_ebdg =append (_ebdg ,_gbfea );};for _ ,_badbc :=range _ebdg {if _fbdcb {_cfbc ,_afed :=_fgde .newPdfAnnotationFromIndirectObject (_badbc );if _afed !=nil {_fa .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_afed );
return nil ,_afed ;};_fefef ,_gagb :=_cfbc ._aeb .(*PdfAnnotationWidget );if !_gagb {return nil ,ErrTypeCheck ;};_fefef ._beb =_ceebg ;_ceebg .Annotations =append (_ceebg .Annotations ,_fefef );}else {_bggdfa ,_ecgaf :=_fgde .newPdfFieldFromIndirectObject (_badbc ,_ceebg );
if _ecgaf !=nil {_fa .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_ecgaf );return nil ,_ecgaf ;};_ceebg .Kids =append (_ceebg .Kids ,_bggdfa );
};};};return _ceebg ,nil ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_egba FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_egba .Mask ()&^fl .Mask ())};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_bddgee *PdfOutline )ToPdfObject ()_ab .PdfObject {_eaea :=_bddgee ._dbef ;_gdfd :=_eaea .PdfObject .(*_ab .PdfObjectDictionary );_gdfd .Set ("\u0054\u0079\u0070\u0065",_ab .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _bddgee .First !=nil {_gdfd .Set ("\u0046\u0069\u0072s\u0074",_bddgee .First .ToPdfObject ());
};if _bddgee .Last !=nil {_gdfd .Set ("\u004c\u0061\u0073\u0074",_bddgee .Last .GetContext ().GetContainingPdfObject ());};if _bddgee .Parent !=nil {_gdfd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bddgee .Parent .GetContext ().GetContainingPdfObject ());
};if _bddgee .Count !=nil {_gdfd .Set ("\u0043\u006f\u0075n\u0074",_ab .MakeInteger (*_bddgee .Count ));};return _eaea ;};func (_aeadba *PdfSignature )extractChainFromCert ()([]*_bgc .Certificate ,error ){var _ccfff *_ab .PdfObjectArray ;switch _ggccc :=_aeadba .Cert .(type ){case *_ab .PdfObjectString :_ccfff =_ab .MakeArray (_ggccc );
case *_ab .PdfObjectArray :_ccfff =_ggccc ;default:return nil ,_f .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_ggccc );
};var _dadcc _ffc .Buffer ;for _ ,_egfgb :=range _ccfff .Elements (){_addb ,_daedb :=_ab .GetString (_egfgb );if !_daedb {return nil ,_f .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_egfgb );
};if _ ,_gegbd :=_dadcc .Write (_addb .Bytes ());_gegbd !=nil {return nil ,_gegbd ;};};return _bgc .ParseCertificates (_dadcc .Bytes ());};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_edfa *XObjectImage )ToImage ()(*Image ,error ){_gddba :=&Image {};if _edfa .Height ==nil {return nil ,_ca .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_gddba .Height =*_edfa .Height ;if _edfa .Width ==nil {return nil ,_ca .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_gddba .Width =*_edfa .Width ;if _edfa .BitsPerComponent ==nil {switch _edfa .Filter .(type ){case *_ab .CCITTFaxEncoder ,*_ab .JBIG2Encoder :_gddba .BitsPerComponent =1;
case *_ab .LZWEncoder ,*_ab .RunLengthEncoder :_gddba .BitsPerComponent =8;default:return nil ,_ca .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_gddba .BitsPerComponent =*_edfa .BitsPerComponent ;};_gddba .ColorComponents =_edfa .ColorSpace .GetNumComponents ();_edfa ._fdfdc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ab .MakeInteger (int64 (_gddba .ColorComponents )));
_caae ,_abga :=_ab .DecodeStream (_edfa ._fdfdc );if _abga !=nil {return nil ,_abga ;};_gddba .Data =_caae ;if _edfa .Decode !=nil {_bbcc ,_befee :=_edfa .Decode .(*_ab .PdfObjectArray );if !_befee {_fa .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_ca .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_faab ,_ccdbef :=_bbcc .ToFloat64Array ();if _ccdbef !=nil {return nil ,_ccdbef ;};_gddba ._aaefg =_faab ;};return _gddba ,nil ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_dfdb *PdfOutputIntent )ParsePdfObject (object _ab .PdfObject )error {_ffdfd ,_cfaed :=object .(*_ab .PdfObjectDictionary );if !_cfaed {_dafa ,_dcced :=_ab .GetIndirect (object );if !_dcced {_fa .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _ca .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_ffdfd ,_dcced =_dafa .PdfObject .(*_ab .PdfObjectDictionary );if !_dcced {_fa .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _ca .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};};_dfdb ._gaabg =_ffdfd ;_dfdb .Type ,_ =_ffdfd .GetString ("\u0054\u0079\u0070\u0065");_efddb ,_cfaed :=_ffdfd .GetString ("\u0053");if _cfaed {switch _efddb {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_dfdb .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_dfdb .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_dfdb .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_dfdb .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_dfdb .S =PdfOutputIntentTypeX ;
};};_dfdb .OutputCondition ,_ =_ffdfd .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_dfdb .OutputConditionIdentifier ,_ =_ffdfd .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_dfdb .RegistryName ,_ =_ffdfd .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_dfdb .Info ,_ =_ffdfd .GetString ("\u0049\u006e\u0066\u006f");if _fgbcd ,_cafdc :=_ab .GetStream (_ffdfd .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_cafdc {_dfdb .ColorComponents ,_ =_ab .GetIntVal (_fgbcd .Get ("\u004e"));_cfbba ,_ggee :=_ab .DecodeStream (_fgbcd );if _ggee !=nil {return _ggee ;};_dfdb .DestOutputProfile =_cfbba ;};return nil ;};func (_gafcc *PdfReader )lookupPageByObject (_cceb _ab .PdfObject )(*PdfPage ,error ){return nil ,_ca .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};func (_fgc *PdfReader )newPdfActionFromIndirectObject (_adga *_ab .PdfIndirectObject )(*PdfAction ,error ){_cag ,_fdf :=_adga .PdfObject .(*_ab .PdfObjectDictionary );if !_fdf {return nil ,_f .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_fgc ._ebda .GetModelFromPrimitive (_cag );model !=nil {_add ,_gdag :=model .(*PdfAction );if !_gdag {return nil ,_f .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _add ,nil ;};_bcf :=&PdfAction {};_bcf ._cef =_adga ;_fgc ._ebda .Register (_cag ,_bcf );if _gef :=_cag .Get ("\u0054\u0079\u0070\u0065");_gef !=nil {_gbf ,_aeg :=_gef .(*_ab .PdfObjectName );if !_aeg {_fa .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gef );
}else {if *_gbf !="\u0041\u0063\u0074\u0069\u006f\u006e"{_fa .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_gbf );
};_bcf .Type =_gbf ;};};if _daa :=_cag .Get ("\u004e\u0065\u0078\u0074");_daa !=nil {_bcf .Next =_daa ;};if _faeg :=_cag .Get ("\u0053");_faeg !=nil {_bcf .S =_faeg ;};_bb ,_bda :=_bcf .S .(*_ab .PdfObjectName );if !_bda {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bcf .S );
return nil ,_f .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bcf .S );};_gdcd :=PdfActionType (_bb .String ());
switch _gdcd {case ActionTypeGoTo :_bge ,_dfe :=_fgc .newPdfActionGotoFromDict (_cag );if _dfe !=nil {return nil ,_dfe ;};_bge .PdfAction =_bcf ;_bcf ._ad =_bge ;return _bcf ,nil ;case ActionTypeGoToR :_cedc ,_ddf :=_fgc .newPdfActionGotoRFromDict (_cag );
if _ddf !=nil {return nil ,_ddf ;};_cedc .PdfAction =_bcf ;_bcf ._ad =_cedc ;return _bcf ,nil ;case ActionTypeGoToE :_bba ,_dce :=_fgc .newPdfActionGotoEFromDict (_cag );if _dce !=nil {return nil ,_dce ;};_bba .PdfAction =_bcf ;_bcf ._ad =_bba ;return _bcf ,nil ;
case ActionTypeLaunch :_cabc ,_bfea :=_fgc .newPdfActionLaunchFromDict (_cag );if _bfea !=nil {return nil ,_bfea ;};_cabc .PdfAction =_bcf ;_bcf ._ad =_cabc ;return _bcf ,nil ;case ActionTypeThread :_aa ,_gfab :=_fgc .newPdfActionThreadFromDict (_cag );
if _gfab !=nil {return nil ,_gfab ;};_aa .PdfAction =_bcf ;_bcf ._ad =_aa ;return _bcf ,nil ;case ActionTypeURI :_aee ,_fdfb :=_fgc .newPdfActionURIFromDict (_cag );if _fdfb !=nil {return nil ,_fdfb ;};_aee .PdfAction =_bcf ;_bcf ._ad =_aee ;return _bcf ,nil ;
case ActionTypeSound :_dbb ,_cce :=_fgc .newPdfActionSoundFromDict (_cag );if _cce !=nil {return nil ,_cce ;};_dbb .PdfAction =_bcf ;_bcf ._ad =_dbb ;return _bcf ,nil ;case ActionTypeMovie :_caca ,_fgd :=_fgc .newPdfActionMovieFromDict (_cag );if _fgd !=nil {return nil ,_fgd ;
};_caca .PdfAction =_bcf ;_bcf ._ad =_caca ;return _bcf ,nil ;case ActionTypeHide :_cafc ,_bbaa :=_fgc .newPdfActionHideFromDict (_cag );if _bbaa !=nil {return nil ,_bbaa ;};_cafc .PdfAction =_bcf ;_bcf ._ad =_cafc ;return _bcf ,nil ;case ActionTypeNamed :_fggf ,_cff :=_fgc .newPdfActionNamedFromDict (_cag );
if _cff !=nil {return nil ,_cff ;};_fggf .PdfAction =_bcf ;_bcf ._ad =_fggf ;return _bcf ,nil ;case ActionTypeSubmitForm :_dda ,_fca :=_fgc .newPdfActionSubmitFormFromDict (_cag );if _fca !=nil {return nil ,_fca ;};_dda .PdfAction =_bcf ;_bcf ._ad =_dda ;
return _bcf ,nil ;case ActionTypeResetForm :_bbb ,_acg :=_fgc .newPdfActionResetFormFromDict (_cag );if _acg !=nil {return nil ,_acg ;};_bbb .PdfAction =_bcf ;_bcf ._ad =_bbb ;return _bcf ,nil ;case ActionTypeImportData :_ffd ,_gfb :=_fgc .newPdfActionImportDataFromDict (_cag );
if _gfb !=nil {return nil ,_gfb ;};_ffd .PdfAction =_bcf ;_bcf ._ad =_ffd ;return _bcf ,nil ;case ActionTypeSetOCGState :_bde ,_dcf :=_fgc .newPdfActionSetOCGStateFromDict (_cag );if _dcf !=nil {return nil ,_dcf ;};_bde .PdfAction =_bcf ;_bcf ._ad =_bde ;
return _bcf ,nil ;case ActionTypeRendition :_egcd ,_efbd :=_fgc .newPdfActionRenditionFromDict (_cag );if _efbd !=nil {return nil ,_efbd ;};_egcd .PdfAction =_bcf ;_bcf ._ad =_egcd ;return _bcf ,nil ;case ActionTypeTrans :_ecbg ,_bdg :=_fgc .newPdfActionTransFromDict (_cag );
if _bdg !=nil {return nil ,_bdg ;};_ecbg .PdfAction =_bcf ;_bcf ._ad =_ecbg ;return _bcf ,nil ;case ActionTypeGoTo3DView :_edad ,_beaa :=_fgc .newPdfActionGoTo3DViewFromDict (_cag );if _beaa !=nil {return nil ,_beaa ;};_edad .PdfAction =_bcf ;_bcf ._ad =_edad ;
return _bcf ,nil ;case ActionTypeJavaScript :_bff ,_dcef :=_fgc .newPdfActionJavaScriptFromDict (_cag );if _dcef !=nil {return nil ,_dcef ;};_bff .PdfAction =_bcf ;_bcf ._ad =_bff ;return _bcf ,nil ;};_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_gdcd );
return nil ,nil ;};var (CourierName =_bc .CourierName ;CourierBoldName =_bc .CourierBoldName ;CourierObliqueName =_bc .CourierObliqueName ;CourierBoldObliqueName =_bc .CourierBoldObliqueName ;HelveticaName =_bc .HelveticaName ;HelveticaBoldName =_bc .HelveticaBoldName ;
HelveticaObliqueName =_bc .HelveticaObliqueName ;HelveticaBoldObliqueName =_bc .HelveticaBoldObliqueName ;SymbolName =_bc .SymbolName ;ZapfDingbatsName =_bc .ZapfDingbatsName ;TimesRomanName =_bc .TimesRomanName ;TimesBoldName =_bc .TimesBoldName ;TimesItalicName =_bc .TimesItalicName ;
TimesBoldItalicName =_bc .TimesBoldItalicName ;);

// ColorToRGB converts a CalGray color to an RGB color.
func (_bgfb *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_abad ,_gbac :=color .(*PdfColorCalGray );if !_gbac {_fa .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_abad .Val ();X :=_bgfb .WhitePoint [0]*_ced .Pow (ANorm ,_bgfb .Gamma );Y :=_bgfb .WhitePoint [1]*_ced .Pow (ANorm ,_bgfb .Gamma );
Z :=_bgfb .WhitePoint [2]*_ced .Pow (ANorm ,_bgfb .Gamma );_bfdf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gdee :=-0.969256*X +1.875992*Y +0.041556*Z ;_cgbbg :=0.055648*X +-0.204043*Y +1.057311*Z ;_bfdf =_ced .Min (_ced .Max (_bfdf ,0),1.0);_gdee =_ced .Min (_ced .Max (_gdee ,0),1.0);
_cgbbg =_ced .Min (_ced .Max (_cgbbg ,0),1.0);return NewPdfColorDeviceRGB (_bfdf ,_gdee ,_cgbbg ),nil ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _ab .PdfObject ;LE _ab .PdfObject ;BS _ab .PdfObject ;IC _ab .PdfObject ;BE _ab .PdfObject ;IT _ab .PdfObject ;Measure _ab .PdfObject ;};func (_beacf *PdfReader )newPdfSignatureFromIndirect (_gddaf *_ab .PdfIndirectObject )(*PdfSignature ,error ){_dcgaa ,_bbced :=_gddaf .PdfObject .(*_ab .PdfObjectDictionary );
if !_bbced {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _eacbg ,_cdbg :=_beacf ._ebda .GetModelFromPrimitive (_gddaf ).(*PdfSignature );_cdbg {return _eacbg ,nil ;};_gdbad :=&PdfSignature {};_gdbad ._eacgg =_gddaf ;_gdbad .Type ,_ =_ab .GetName (_dcgaa .Get ("\u0054\u0079\u0070\u0065"));
_gdbad .Filter ,_bbced =_ab .GetName (_dcgaa .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_bbced {_fa .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_gdbad .SubFilter ,_ =_ab .GetName (_dcgaa .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_gdbad .Contents ,_bbced =_ab .GetString (_dcgaa .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_bbced {_fa .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_gdbad .Cert =_dcgaa .Get ("\u0043\u0065\u0072\u0074");_gdbad .ByteRange ,_ =_ab .GetArray (_dcgaa .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_gdbad .Reference ,_ =_ab .GetArray (_dcgaa .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));
_gdbad .Changes ,_ =_ab .GetArray (_dcgaa .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_gdbad .Name ,_ =_ab .GetString (_dcgaa .Get ("\u004e\u0061\u006d\u0065"));_gdbad .M ,_ =_ab .GetString (_dcgaa .Get ("\u004d"));_gdbad .Location ,_ =_ab .GetString (_dcgaa .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_gdbad .Reason ,_ =_ab .GetString (_dcgaa .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_gdbad .ContactInfo ,_ =_ab .GetString (_dcgaa .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_gdbad .R ,_ =_ab .GetInt (_dcgaa .Get ("\u0052"));
_gdbad .V ,_ =_ab .GetInt (_dcgaa .Get ("\u0056"));_gdbad .PropBuild ,_ =_ab .GetDict (_dcgaa .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_gdbad .PropAuthTime ,_ =_ab .GetInt (_dcgaa .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_gdbad .PropAuthType ,_ =_ab .GetName (_dcgaa .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _gdbad ,nil ;};

// M returns the value of the magenta component of the color.
func (_ddfd *PdfColorDeviceCMYK )M ()float64 {return _ddfd [1]};

// ToPdfObject implements interface PdfModel.
func (_bgaa *PdfAnnotationStamp )ToPdfObject ()_ab .PdfObject {_bgaa .PdfAnnotation .ToPdfObject ();_bcd :=_bgaa ._ddg ;_fcgdb :=_bcd .PdfObject .(*_ab .PdfObjectDictionary );_bgaa .PdfAnnotationMarkup .appendToPdfDictionary (_fcgdb );_fcgdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0053\u0074\u0061m\u0070"));
_fcgdb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bgaa .Name );return _bcd ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_gbbaa FieldFlag )Has (fl FieldFlag )bool {return (_gbbaa .Mask ()&fl .Mask ())> 0};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_ab .PdfObjectArray ;Domain *_ab .PdfObjectArray ;Function []PdfFunction ;Extend *_ab .PdfObjectArray ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_cecd *PdfWriter )GetPdfVersion ()string {return _cecd .getPdfVersion ()};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_cdg :=NewPdfAnnotation ();_gdad :=&PdfAnnotationPrinterMark {};_gdad .PdfAnnotation =_cdg ;_cdg .SetContext (_gdad );return _gdad ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_cgab *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_cgab .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_cgab ._ebe =acroForm ;};func _caeea ()*modelManager {_fbgab :=modelManager {};_fbgab ._eagag =map[PdfModel ]_ab .PdfObject {};
_fbgab ._abecg =map[_ab .PdfObject ]PdfModel {};return &_fbgab ;};func _aefea (_fdafb _ab .PdfObject )(string ,error ){_fdafb =_ab .TraceToDirectObject (_fdafb );switch _bafcg :=_fdafb .(type ){case *_ab .PdfObjectString :return _bafcg .Str (),nil ;case *_ab .PdfObjectStream :_cafba ,_fbgga :=_ab .DecodeStream (_bafcg );
if _fbgga !=nil {return "",_fbgga ;};return string (_cafba ),nil ;};return "",_f .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_fdafb );
};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_afa *PdfAnnotationWidget )Field ()*PdfField {return _afa ._beb };

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_gfaf *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_ab .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccaeb ,_efea :=_ab .GetNumbersAsFloat (objects );
if _efea !=nil {return nil ,_efea ;};return _gfaf .ColorFromFloats (_ccaeb );};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_faddc DefaultImageHandler )NewImageFromGoImage (goimg _ga .Image )(*Image ,error ){_egfagg ,_gbdfd :=_cac .FromGoImage (goimg );if _gbdfd !=nil {return nil ,_gbdfd ;};_bcgf :=_bgbec (_egfagg .Base ());return &_bcgf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ecba *PdfAnnotationTrapNet )ToPdfObject ()_ab .PdfObject {_ecba .PdfAnnotation .ToPdfObject ();_ccba :=_ecba ._ddg ;_gbab :=_ccba .PdfObject .(*_ab .PdfObjectDictionary );_gbab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _ccba ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_ccacb *Image )GetSamples ()[]uint32 {_eagce :=_fdc .ResampleBytes (_ccacb .Data ,int (_ccacb .BitsPerComponent ));if _ccacb .BitsPerComponent < 8{_eagce =_ccacb .samplesTrimPadding (_eagce );};_ebgb :=int (_ccacb .Width )*int (_ccacb .Height )*_ccacb .ColorComponents ;
if len (_eagce )< _ebgb {_fa .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_eagce ),_ebgb );
return _eagce ;}else if len (_eagce )> _ebgb {_fa .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_eagce ),_ebgb );
_eagce =_eagce [:_ebgb ];};return _eagce ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_fgdec *PdfSignature )bool ;Validate (_cfdbf *PdfSignature ,_cdga Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_cegdf *PdfSignature )(Hasher ,error );Sign (_aege *PdfSignature ,_cecga Hasher )error ;};func _acdad (_efadb _ab .PdfObject )(*PdfColorspaceCalRGB ,error ){_ccff :=NewPdfColorspaceCalRGB ();if _cbfb ,_fbbf :=_efadb .(*_ab .PdfIndirectObject );
_fbbf {_ccff ._afffg =_cbfb ;};_efadb =_ab .TraceToDirectObject (_efadb );_afbeg ,_deda :=_efadb .(*_ab .PdfObjectArray );if !_deda {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _afbeg .Len ()!=2{return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_efadb =_ab .TraceToDirectObject (_afbeg .Get (0));_ecfa ,_deda :=_efadb .(*_ab .PdfObjectName );if !_deda {return nil ,_f .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_ecfa !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_f .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_efadb =_ab .TraceToDirectObject (_afbeg .Get (1));
_ede ,_deda :=_efadb .(*_ab .PdfObjectDictionary );if !_deda {return nil ,_f .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_efadb =_ede .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_efadb =_ab .TraceToDirectObject (_efadb );_dcgc ,_deda :=_efadb .(*_ab .PdfObjectArray );if !_deda {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _dcgc .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bcbc ,_gabc :=_dcgc .GetAsFloat64Slice ();
if _gabc !=nil {return nil ,_gabc ;};_ccff .WhitePoint =_bcbc ;_efadb =_ede .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _efadb !=nil {_efadb =_ab .TraceToDirectObject (_efadb );_cabf ,_fcbc :=_efadb .(*_ab .PdfObjectArray );
if !_fcbc {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _cabf .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_ecbfg ,_faac :=_cabf .GetAsFloat64Slice ();if _faac !=nil {return nil ,_faac ;};_ccff .BlackPoint =_ecbfg ;};_efadb =_ede .Get ("\u0047\u0061\u006dm\u0061");if _efadb !=nil {_efadb =_ab .TraceToDirectObject (_efadb );_ccg ,_bcdg :=_efadb .(*_ab .PdfObjectArray );
if !_bcdg {return nil ,_f .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _ccg .Len ()!=3{return nil ,_f .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_bafa ,_ceeb :=_ccg .GetAsFloat64Slice ();if _ceeb !=nil {return nil ,_ceeb ;};_ccff .Gamma =_bafa ;};_efadb =_ede .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _efadb !=nil {_efadb =_ab .TraceToDirectObject (_efadb );_aafb ,_geaf :=_efadb .(*_ab .PdfObjectArray );
if !_geaf {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _aafb .Len ()!=9{_fa .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_aafb .String ());
return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_gcaa ,_bdbc :=_aafb .GetAsFloat64Slice ();if _bdbc !=nil {return nil ,_bdbc ;
};_ccff .Matrix =_gcaa ;};return _ccff ,nil ;};func (_dcd *PdfReader )newPdfActionNamedFromDict (_cgg *_ab .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_cgg .Get ("\u004e")},nil ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_dbdfad []byte ;_aaefg []float64 ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_bdaag *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_acaeg pdfFontSimple )GetRuneMetrics (r rune )(_bc .CharMetrics ,bool ){if _acaeg ._accf !=nil {_eabae ,_baac :=_acaeg ._accf .Read (r );if _baac {return _eabae ,true ;};};_agfe :=_acaeg .Encoder ();if _agfe ==nil {_fa .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_acaeg );
return _bc .CharMetrics {},false ;};_gaafa ,_eaaea :=_agfe .RuneToCharcode (r );if !_eaaea {if r !=' '{_fa .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_acaeg );
};return _bc .CharMetrics {},false ;};_fegc ,_deeb :=_acaeg .GetCharMetrics (_gaafa );return _fegc ,_deeb ;};

// ToPdfObject returns a stream object.
func (_gcbd *XObjectImage )ToPdfObject ()_ab .PdfObject {_fabfcb :=_gcbd ._fdfdc ;_caeee :=_fabfcb .PdfObjectDictionary ;if _gcbd .Filter !=nil {_caeee =_gcbd .Filter .MakeStreamDict ();_fabfcb .PdfObjectDictionary =_caeee ;};_caeee .Set ("\u0054\u0079\u0070\u0065",_ab .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_caeee .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0049\u006d\u0061g\u0065"));_caeee .Set ("\u0057\u0069\u0064t\u0068",_ab .MakeInteger (*(_gcbd .Width )));_caeee .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ab .MakeInteger (*(_gcbd .Height )));
if _gcbd .BitsPerComponent !=nil {_caeee .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ab .MakeInteger (*(_gcbd .BitsPerComponent )));};if _gcbd .ColorSpace !=nil {_caeee .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_gcbd .ColorSpace .ToPdfObject ());
};_caeee .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_gcbd .Intent );_caeee .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_gcbd .ImageMask );_caeee .SetIfNotNil ("\u004d\u0061\u0073\u006b",_gcbd .Mask );_abcad :=_caeee .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _gcbd .Decode ==nil &&_abcad {_caeee .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _gcbd .Decode !=nil {_caeee .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gcbd .Decode );};_caeee .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_gcbd .Interpolate );
_caeee .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_gcbd .Alternatives );_caeee .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_gcbd .SMask );_caeee .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_gcbd .SMaskInData );
_caeee .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_gcbd .Matte );_caeee .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gcbd .Name );_caeee .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gcbd .StructParent );_caeee .SetIfNotNil ("\u0049\u0044",_gcbd .ID );
_caeee .SetIfNotNil ("\u004f\u0050\u0049",_gcbd .OPI );_caeee .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gcbd .Metadata );_caeee .SetIfNotNil ("\u004f\u0043",_gcbd .OC );_caeee .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ab .MakeInteger (int64 (len (_gcbd .Stream ))));
_fabfcb .Stream =_gcbd .Stream ;return _fabfcb ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_cgbda *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _bgbe []float64 ;for _gfbe :=0;_gfbe < _cgbda .GetNumComponents ();_gfbe ++{_bgbe =append (_bgbe ,0.0,1.0);};return _bgbe ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_dcce *PdfAcroForm ,_cbba *PdfField ,_fadb *PdfAnnotationWidget )(*_ab .PdfObjectDictionary ,error );};

// Height returns the height of `rect`.
func (_ggedg *PdfRectangle )Height ()float64 {return _ced .Abs (_ggedg .Ury -_ggedg .Lly )};

// ToPdfObject implements interface PdfModel.
func (_fade *PdfAnnotationFreeText )ToPdfObject ()_ab .PdfObject {_fade .PdfAnnotation .ToPdfObject ();_egdg :=_fade ._ddg ;_gbbg :=_egdg .PdfObject .(*_ab .PdfObjectDictionary );_fade .PdfAnnotationMarkup .appendToPdfDictionary (_gbbg );_gbbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_gbbg .SetIfNotNil ("\u0044\u0041",_fade .DA );_gbbg .SetIfNotNil ("\u0051",_fade .Q );_gbbg .SetIfNotNil ("\u0052\u0043",_fade .RC );_gbbg .SetIfNotNil ("\u0044\u0053",_fade .DS );_gbbg .SetIfNotNil ("\u0043\u004c",_fade .CL );_gbbg .SetIfNotNil ("\u0049\u0054",_fade .IT );
_gbbg .SetIfNotNil ("\u0042\u0045",_fade .BE );_gbbg .SetIfNotNil ("\u0052\u0044",_fade .RD );_gbbg .SetIfNotNil ("\u0042\u0053",_fade .BS );_gbbg .SetIfNotNil ("\u004c\u0045",_fade .LE );return _egdg ;};type pdfFontType3 struct{fontCommon ;_cgac *_ab .PdfIndirectObject ;


// These fields are specific to Type 3 fonts.
CharProcs _ab .PdfObject ;Encoding _ab .PdfObject ;FontBBox _ab .PdfObject ;FontMatrix _ab .PdfObject ;FirstChar _ab .PdfObject ;LastChar _ab .PdfObject ;Widths _ab .PdfObject ;Resources _ab .PdfObject ;_cgbdd map[_dc .CharCode ]float64 ;_cebbg _dc .TextEncoder ;
};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_egbe *PdfColorspaceLab )ToPdfObject ()_ab .PdfObject {_gfbg :=_ab .MakeArray ();_gfbg .Append (_ab .MakeName ("\u004c\u0061\u0062"));_ecgb :=_ab .MakeDict ();if _egbe .WhitePoint !=nil {_cdfg :=_ab .MakeArray (_ab .MakeFloat (_egbe .WhitePoint [0]),_ab .MakeFloat (_egbe .WhitePoint [1]),_ab .MakeFloat (_egbe .WhitePoint [2]));
_ecgb .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cdfg );}else {_fa .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _egbe .BlackPoint !=nil {_gbgg :=_ab .MakeArray (_ab .MakeFloat (_egbe .BlackPoint [0]),_ab .MakeFloat (_egbe .BlackPoint [1]),_ab .MakeFloat (_egbe .BlackPoint [2]));_ecgb .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gbgg );
};if _egbe .Range !=nil {_deeg :=_ab .MakeArray (_ab .MakeFloat (_egbe .Range [0]),_ab .MakeFloat (_egbe .Range [1]),_ab .MakeFloat (_egbe .Range [2]),_ab .MakeFloat (_egbe .Range [3]));_ecgb .Set ("\u0052\u0061\u006eg\u0065",_deeg );};_gfbg .Append (_ecgb );
if _egbe ._aaeb !=nil {_egbe ._aaeb .PdfObject =_gfbg ;return _egbe ._aaeb ;};return _gfbg ;};func (_ccggd *PdfFunctionType0 )processSamples ()error {_bgabg :=_fdc .ResampleBytes (_ccggd ._bgbbf ,_ccggd .BitsPerSample );_ccggd ._fabfe =_bgabg ;return nil ;
};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_edegeb *XObjectImage )GetContainingPdfObject ()_ab .PdfObject {return _edegeb ._fdfdc };func (_ceea *PdfReader )newPdfAnnotationPolygonFromDict (_aed *_ab .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_cdgb :=PdfAnnotationPolygon {};_bbafg ,_fgfe :=_ceea .newPdfAnnotationMarkupFromDict (_aed );
if _fgfe !=nil {return nil ,_fgfe ;};_cdgb .PdfAnnotationMarkup =_bbafg ;_cdgb .Vertices =_aed .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_cdgb .LE =_aed .Get ("\u004c\u0045");_cdgb .BS =_aed .Get ("\u0042\u0053");_cdgb .IC =_aed .Get ("\u0049\u0043");
_cdgb .BE =_aed .Get ("\u0042\u0045");_cdgb .IT =_aed .Get ("\u0049\u0054");_cdgb .Measure =_aed .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_cdgb ,nil ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_cegd *Outline )ToPdfObject ()_ab .PdfObject {return _cegd .ToPdfOutline ().ToPdfObject ()};

// ToPdfObject implements interface PdfModel.
func (_cebe *PdfAnnotationSquiggly )ToPdfObject ()_ab .PdfObject {_cebe .PdfAnnotation .ToPdfObject ();_cfca :=_cebe ._ddg ;_faff :=_cfca .PdfObject .(*_ab .PdfObjectDictionary );_cebe .PdfAnnotationMarkup .appendToPdfDictionary (_faff );_faff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_faff .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cebe .QuadPoints );return _cfca ;};func (_geffa *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};func (_ceg *PdfReader )newPdfActionGoTo3DViewFromDict (_aec *_ab .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_aec .Get ("\u0054\u0041"),V :_aec .Get ("\u0056")},nil ;
};func (_gfbde *PdfWriter )setDocInfo (_ddgeg _ab .PdfObject ){if _gfbde .hasObject (_gfbde ._bfedb ){delete (_gfbde ._cgdbbd ,_gfbde ._bfedb );delete (_gfbde ._abgeb ,_gfbde ._bfedb );for _ddfff ,_dfda :=range _gfbde ._acgcfc {if _dfda ==_gfbde ._bfedb {copy (_gfbde ._acgcfc [_ddfff :],_gfbde ._acgcfc [_ddfff +1:]);
_gfbde ._acgcfc [len (_gfbde ._acgcfc )-1]=nil ;_gfbde ._acgcfc =_gfbde ._acgcfc [:len (_gfbde ._acgcfc )-1];break ;};};};_aagcc :=_ab .PdfIndirectObject {};_aagcc .PdfObject =_ddgeg ;_gfbde ._bfedb =&_aagcc ;_gfbde .addObject (&_aagcc );};

// ToPdfObject implements interface PdfModel.
func (_eff *PdfAnnotationWidget )ToPdfObject ()_ab .PdfObject {_eff .PdfAnnotation .ToPdfObject ();_acac :=_eff ._ddg ;_fbac :=_acac .PdfObject .(*_ab .PdfObjectDictionary );if _eff ._gdab {return _acac ;};_eff ._gdab =true ;_fbac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_fbac .SetIfNotNil ("\u0048",_eff .H );_fbac .SetIfNotNil ("\u004d\u004b",_eff .MK );_fbac .SetIfNotNil ("\u0041",_eff .A );_fbac .SetIfNotNil ("\u0041\u0041",_eff .AA );_fbac .SetIfNotNil ("\u0042\u0053",_eff .BS );_fcadb :=_eff .Parent ;if _eff ._beb !=nil {if _eff ._beb ._ggde ==_eff ._ddg {_eff ._beb .ToPdfObject ();
};_fcadb =_eff ._beb .GetContainingPdfObject ();};if _fcadb !=_acac {_fbac .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fcadb );};_eff ._gdab =false ;return _acac ;};func (_cceea *pdfFontSimple )getFontEncoding ()(_fbabc string ,_fccb map[_dc .CharCode ]_dc .GlyphName ,_cbadg error ){_fbabc ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _agde ,_afba :=_adbf [_cceea ._egceb ];_afba {_fbabc =_agde ;}else if _cceea .fontFlags ()&_dcfbe !=0{for _afgg ,_agbae :=range _adbf {if _af .Contains (_cceea ._egceb ,_afgg ){_fbabc =_agbae ;break ;};};};if _cceea .Encoding ==nil {return _fbabc ,nil ,nil ;
};switch _bfca :=_cceea .Encoding .(type ){case *_ab .PdfObjectName :return string (*_bfca ),nil ,nil ;case *_ab .PdfObjectDictionary :_daea ,_fdbbd :=_ab .GetName (_bfca .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _fdbbd {_fbabc =_daea .String ();
};if _gddga :=_bfca .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_gddga !=nil {_ffdda ,_abfd :=_ab .GetArray (_gddga );if !_abfd {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_bfca ,_bfca .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_ab .ErrTypeError ;};_fccb ,_cbadg =_dc .FromFontDifferences (_ffdda );};return _fbabc ,_fccb ,_cbadg ;default:_fa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_cceea .Encoding ,_cceea .Encoding );
return "",nil ,_ab .ErrTypeError ;};};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ab .PdfObject ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_cbdcd *PdfPageResources )SetXObjectByName (keyName _ab .PdfObjectName ,stream *_ab .PdfObjectStream )error {if _cbdcd .XObject ==nil {_cbdcd .XObject =_ab .MakeDict ();};_abfbg :=_ab .TraceToDirectObject (_cbdcd .XObject );_ffecf ,_dfdg :=_abfbg .(*_ab .PdfObjectDictionary );
if !_dfdg {_fa .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_cbdcd .XObject ,_abfbg );return _ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ffecf .Set (keyName ,stream );return nil ;};func _cfcg (_fecc *_ab .PdfObjectStream )(*PdfFunctionType0 ,error ){_gegfg :=&PdfFunctionType0 {};_gegfg ._fagf =_fecc ;_cfgab :=_fecc .PdfObjectDictionary ;_agaef ,_egdb :=_ab .TraceToDirectObject (_cfgab .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ab .PdfObjectArray );
if !_egdb {_fa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _agaef .Len ()< 0||_agaef .Len ()%2!=0{_fa .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ca .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_gegfg .NumInputs =_agaef .Len ()/2;_ecdg ,_fecfd :=_agaef .ToFloat64Array ();if _fecfd !=nil {return nil ,_fecfd ;};_gegfg .Domain =_ecdg ;_agaef ,_egdb =_ab .TraceToDirectObject (_cfgab .Get ("\u0052\u0061\u006eg\u0065")).(*_ab .PdfObjectArray );if !_egdb {_fa .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _agaef .Len ()< 0||_agaef .Len ()%2!=0{return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gegfg .NumOutputs =_agaef .Len ()/2;_gaca ,_fecfd :=_agaef .ToFloat64Array ();if _fecfd !=nil {return nil ,_fecfd ;};_gegfg .Range =_gaca ;_agaef ,_egdb =_ab .TraceToDirectObject (_cfgab .Get ("\u0053\u0069\u007a\u0065")).(*_ab .PdfObjectArray );if !_egdb {_fa .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_acebf ,_fecfd :=_agaef .ToIntegerArray ();
if _fecfd !=nil {return nil ,_fecfd ;};if len (_acebf )!=_gegfg .NumInputs {_fa .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gegfg .Size =_acebf ;_ddaee ,_egdb :=_ab .TraceToDirectObject (_cfgab .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_ab .PdfObjectInteger );
if !_egdb {_fa .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_ddaee !=1&&*_ddaee !=2&&*_ddaee !=4&&*_ddaee !=8&&*_ddaee !=12&&*_ddaee !=16&&*_ddaee !=24&&*_ddaee !=32{_fa .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_ddaee );
return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gegfg .BitsPerSample =int (*_ddaee );_gegfg .Order =1;_aceea ,_egdb :=_ab .TraceToDirectObject (_cfgab .Get ("\u004f\u0072\u0064e\u0072")).(*_ab .PdfObjectInteger );
if _egdb {if *_aceea !=1&&*_aceea !=3{_fa .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_aceea );return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gegfg .Order =int (*_aceea );
};_agaef ,_egdb =_ab .TraceToDirectObject (_cfgab .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_ab .PdfObjectArray );if _egdb {_gceg ,_cgaae :=_agaef .ToFloat64Array ();if _cgaae !=nil {return nil ,_cgaae ;};_gegfg .Encode =_gceg ;};_agaef ,_egdb =_ab .TraceToDirectObject (_cfgab .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_ab .PdfObjectArray );
if _egdb {_dbdfa ,_bcfee :=_agaef .ToFloat64Array ();if _bcfee !=nil {return nil ,_bcfee ;};_gegfg .Decode =_dbdfa ;};_caef ,_fecfd :=_ab .DecodeStream (_fecc );if _fecfd !=nil {return nil ,_fecfd ;};_gegfg ._bgbbf =_caef ;return _gegfg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gge *PdfActionSetOCGState )ToPdfObject ()_ab .PdfObject {_gge .PdfAction .ToPdfObject ();_caf :=_gge ._cef ;_abd :=_caf .PdfObject .(*_ab .PdfObjectDictionary );_abd .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeSetOCGState )));_abd .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_gge .State );
_abd .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_gge .PreserveRB );return _caf ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_cefde *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecdfe :=vals [0];if _ecdfe < 0.0||_ecdfe > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_aageb :=vals [1];if _aageb < 0.0||_aageb > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fee :=vals [2];if _fee < 0.0||_fee > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_acabg :=vals [3];if _acabg < 0.0||_acabg > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcfce :=NewPdfColorDeviceCMYK (_ecdfe ,_aageb ,_fee ,_acabg );return _dcfce ,nil ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _ab .PdfObject ;BS _ab .PdfObject ;LE _ab .PdfObject ;IC _ab .PdfObject ;LL _ab .PdfObject ;LLE _ab .PdfObject ;Cap _ab .PdfObject ;IT _ab .PdfObject ;LLO _ab .PdfObject ;CP _ab .PdfObject ;
Measure _ab .PdfObject ;CO _ab .PdfObject ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_adgbb *pdfFontSimple )SetEncoder (encoder _dc .TextEncoder ){_adgbb ._ebfag =encoder };func _ddbc (_bgac _ab .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_afge :=&PdfColorspaceDeviceNAttributes {};var _eeca *_ab .PdfObjectDictionary ;switch _fcaa :=_bgac .(type ){case *_ab .PdfIndirectObject :_afge ._eafc =_fcaa ;
var _cbgbd bool ;_eeca ,_cbgbd =_fcaa .PdfObject .(*_ab .PdfObjectDictionary );if !_cbgbd {_fa .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ca .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_ab .PdfObjectDictionary :_eeca =_fcaa ;case *_ab .PdfObjectReference :_afddd :=_fcaa .Resolve ();return _ddbc (_afddd );default:_fa .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ca .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eccc :=_eeca .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_eccc !=nil {_eaggg ,_fcdfg :=_ab .TraceToDirectObject (_eccc ).(*_ab .PdfObjectName );if !_fcdfg {_fa .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_ca .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_afge .Subtype =_eaggg ;};if _fafea :=_eeca .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_fafea !=nil {_afge .Colorants =_fafea ;};if _eeac :=_eeca .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_eeac !=nil {_afge .Process =_eeac ;};if _bded :=_eeca .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_bded !=nil {_afge .MixingHints =_bded ;};return _afge ,nil ;};func _agfdc (_ecage _ab .PdfObject )(map[_dc .CharCode ]float64 ,error ){if _ecage ==nil {return nil ,nil ;
};_gcfab ,_bgbce :=_ab .GetArray (_ecage );if !_bgbce {return nil ,nil ;};_gdbb :=map[_dc .CharCode ]float64 {};_bdbba :=_gcfab .Len ();for _bgcdc :=0;_bgcdc < _bdbba -1;_bgcdc ++{_cdaa :=_ab .TraceToDirectObject (_gcfab .Get (_bgcdc ));_ecdbb ,_gfgb :=_ab .GetIntVal (_cdaa );
if !_gfgb {return nil ,_f .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_bgcdc ,_cdaa );};_bgcdc ++;if _bgcdc > _bdbba -1{return nil ,_f .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_gcfab );
};_eegf :=_ab .TraceToDirectObject (_gcfab .Get (_bgcdc ));switch _eegf .(type ){case *_ab .PdfObjectArray :_agegf ,_ :=_ab .GetArray (_eegf );if _dbff ,_dgdg :=_agegf .ToFloat64Array ();_dgdg ==nil {for _fbdaa :=0;_fbdaa < len (_dbff );_fbdaa ++{_gdbb [_dc .CharCode (_ecdbb +_fbdaa )]=_dbff [_fbdaa ];
};}else {return nil ,_f .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_bgcdc ,_eegf );};case *_ab .PdfObjectInteger :_fgef ,_fdaff :=_ab .GetIntVal (_eegf );
if !_fdaff {return nil ,_f .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_bgcdc ,_eegf );};_bgcdc ++;if _bgcdc > _bdbba -1{return nil ,_f .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_gcfab );
};_aadf :=_gcfab .Get (_bgcdc );_cgeae ,_eagfd :=_ab .GetNumberAsFloat (_aadf );if _eagfd !=nil {return nil ,_f .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_bgcdc ,_aadf );
};for _fdaa :=_ecdbb ;_fdaa <=_fgef ;_fdaa ++{_gdbb [_dc .CharCode (_fdaa )]=_cgeae ;};default:return nil ,_f .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_bgcdc ,_eegf );
};};return _gdbb ,nil ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};func (_bfdd *PdfReader )resolveReference (_fddccf *_ab .PdfObjectReference )(_ab .PdfObject ,bool ,error ){_ggbbf ,_ceege :=_bfdd ._gcabf .ObjCache [int (_fddccf .ObjectNumber )];
if !_ceege {_fa .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_fddccf );_fbdb ,_efgbge :=_bfdd ._gcabf .LookupByReference (*_fddccf );if _efgbge !=nil {return nil ,false ,_efgbge ;};
_bfdd ._gcabf .ObjCache [int (_fddccf .ObjectNumber )]=_fbdb ;return _fbdb ,false ,nil ;};return _ggbbf ,true ,nil ;};func _bdgf (_cfbe []byte )bool {if len (_cfbe )< 4{return true ;};for _dgggd :=range _cfbe [:4]{_gecb :=rune (_dgggd );if !_ed .Is (_ed .ASCII_Hex_Digit ,_gecb )&&!_ed .IsSpace (_gecb ){return true ;
};};return false ;};

// ToPdfObject implements interface PdfModel.
func (_feg *PdfAnnotationHighlight )ToPdfObject ()_ab .PdfObject {_feg .PdfAnnotation .ToPdfObject ();_cefe :=_feg ._ddg ;_gddb :=_cefe .PdfObject .(*_ab .PdfObjectDictionary );_feg .PdfAnnotationMarkup .appendToPdfDictionary (_gddb );_gddb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_gddb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_feg .QuadPoints );return _cefe ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_daga *PdfField )SetContext (ctx PdfModel ){_daga ._ggfg =ctx };func _feab (_gbae *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_gbae }};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _ab .PdfObject ;Movie _ab .PdfObject ;A _ab .PdfObject ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_ecddb *PdfPattern )IsTiling ()bool {return _ecddb .PatternType ==1};func (_cbdd *PdfWriter )mapObjectStreams (_cceee bool )(map[_ab .PdfObject ]bool ,bool ){_afgbf :=make (map[_ab .PdfObject ]bool );for _ ,_egbcf :=range _cbdd ._acgcfc {if _bgaca ,_fdgdga :=_egbcf .(*_ab .PdfObjectStreams );
_fdgdga {_cceee =true ;for _ ,_eggge :=range _bgaca .Elements (){_afgbf [_eggge ]=true ;if _ccdga ,_fgbfc :=_eggge .(*_ab .PdfIndirectObject );_fgbfc {_afgbf [_ccdga .PdfObject ]=true ;};};};};return _afgbf ,_cceee ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_accaa *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ca .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_gbgc ,_cbf :=_cac .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._dbdfad ,img ._aaefg );if _cbf !=nil {return img ,_cbf ;};_acff ,_cbf :=_cac .NRGBAConverter .Convert (_gbgc );if _cbf !=nil {return img ,_cbf ;
};_bffb :=_bgbec (_acff .Base ());_fa .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_fa .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_fa .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_bffb .Data );
_fa .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_bffb );return _bffb ,nil ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_eb :=NewPdfAction ();_cb :=&PdfActionMovie {};_cb .PdfAction =_eb ;_eb .SetContext (_cb );return _cb ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_feea *PdfFontDescriptor )ToPdfObject ()_ab .PdfObject {_eebc :=_ab .MakeDict ();if _feea ._fgggc ==nil {_feea ._fgggc =&_ab .PdfIndirectObject {};};_feea ._fgggc .PdfObject =_eebc ;_eebc .Set ("\u0054\u0079\u0070\u0065",_ab .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _feea .FontName !=nil {_eebc .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_feea .FontName );};if _feea .FontFamily !=nil {_eebc .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_feea .FontFamily );};if _feea .FontStretch !=nil {_eebc .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_feea .FontStretch );
};if _feea .FontWeight !=nil {_eebc .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_feea .FontWeight );};if _feea .Flags !=nil {_eebc .Set ("\u0046\u006c\u0061g\u0073",_feea .Flags );};if _feea .FontBBox !=nil {_eebc .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_feea .FontBBox );
};if _feea .ItalicAngle !=nil {_eebc .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_feea .ItalicAngle );};if _feea .Ascent !=nil {_eebc .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_feea .Ascent );};if _feea .Descent !=nil {_eebc .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_feea .Descent );
};if _feea .Leading !=nil {_eebc .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_feea .Leading );};if _feea .CapHeight !=nil {_eebc .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_feea .CapHeight );};if _feea .XHeight !=nil {_eebc .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_feea .XHeight );
};if _feea .StemV !=nil {_eebc .Set ("\u0053\u0074\u0065m\u0056",_feea .StemV );};if _feea .StemH !=nil {_eebc .Set ("\u0053\u0074\u0065m\u0048",_feea .StemH );};if _feea .AvgWidth !=nil {_eebc .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_feea .AvgWidth );
};if _feea .MaxWidth !=nil {_eebc .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_feea .MaxWidth );};if _feea .MissingWidth !=nil {_eebc .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_feea .MissingWidth );};if _feea .FontFile !=nil {_eebc .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_feea .FontFile );
};if _feea .FontFile2 !=nil {_eebc .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_feea .FontFile2 );};if _feea .FontFile3 !=nil {_eebc .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_feea .FontFile3 );};if _feea .CharSet !=nil {_eebc .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_feea .CharSet );
};if _feea .Style !=nil {_eebc .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_feea .FontName );};if _feea .Lang !=nil {_eebc .Set ("\u004c\u0061\u006e\u0067",_feea .Lang );};if _feea .FD !=nil {_eebc .Set ("\u0046\u0044",_feea .FD );};if _feea .CIDSet !=nil {_eebc .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_feea .CIDSet );
};return _feea ._fgggc ;};func (_gaf *PdfReader )newPdfAnnotationCircleFromDict (_begb *_ab .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_adfa :=PdfAnnotationCircle {};_cee ,_gage :=_gaf .newPdfAnnotationMarkupFromDict (_begb );if _gage !=nil {return nil ,_gage ;
};_adfa .PdfAnnotationMarkup =_cee ;_adfa .BS =_begb .Get ("\u0042\u0053");_adfa .IC =_begb .Get ("\u0049\u0043");_adfa .BE =_begb .Get ("\u0042\u0045");_adfa .RD =_begb .Get ("\u0052\u0044");return &_adfa ,nil ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_cbgf :=NewPdfAnnotation ();_gag :=&PdfAnnotationSound {};_gag .PdfAnnotation =_cbgf ;_gag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbgf .SetContext (_gag );return _gag ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_eegfd *PdfWriter )SetDocInfo (info *PdfInfo ){_eegfd .setDocInfo (info .ToPdfObject ())};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_gcg :=NewPdfAnnotation ();_dab :=&PdfAnnotationScreen {};_dab .PdfAnnotation =_gcg ;_gcg .SetContext (_dab );return _dab ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_gaabg :_ab .MakeDict ()};
};func (_bbbb *PdfReader )newPdfActionGotoFromDict (_dg *_ab .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_dg .Get ("\u0044")},nil ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_dfdbc .Lock ();defer _dfdbc .Unlock ();_acacbb =author };

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_eabec ,_aagce :=_cedb .ParsePdfTime (dateStr );if _aagce !=nil {return PdfDate {},_aagce ;};return NewPdfDateFromTime (_eabec );};func (_gagdb *PdfWriter )copyObject (_gecfb _ab .PdfObject ,_aabee map[_ab .PdfObject ]_ab .PdfObject ,_decfdb map[_ab .PdfObject ]struct{},_gagff bool )_ab .PdfObject {_accdf :=!_gagdb ._cbeff &&_decfdb !=nil ;
if _cdgag ,_abfec :=_aabee [_gecfb ];_abfec {if _accdf &&!_gagff {delete (_decfdb ,_gecfb );};return _cdgag ;};_dbee :=_gecfb ;switch _ccead :=_gecfb .(type ){case *_ab .PdfObjectArray :_ffcc :=_ab .MakeArray ();_dbee =_ffcc ;_aabee [_gecfb ]=_dbee ;for _ ,_adgef :=range _ccead .Elements (){_ffcc .Append (_gagdb .copyObject (_adgef ,_aabee ,_decfdb ,_gagff ));
};case *_ab .PdfObjectStreams :_cgdfc :=&_ab .PdfObjectStreams {PdfObjectReference :_ccead .PdfObjectReference };_dbee =_cgdfc ;_aabee [_gecfb ]=_dbee ;for _ ,_daega :=range _ccead .Elements (){_cgdfc .Append (_gagdb .copyObject (_daega ,_aabee ,_decfdb ,_gagff ));
};case *_ab .PdfObjectStream :_eebgg :=&_ab .PdfObjectStream {Stream :_ccead .Stream ,PdfObjectReference :_ccead .PdfObjectReference };_dbee =_eebgg ;_aabee [_gecfb ]=_dbee ;_eebgg .PdfObjectDictionary =_gagdb .copyObject (_ccead .PdfObjectDictionary ,_aabee ,_decfdb ,_gagff ).(*_ab .PdfObjectDictionary );
case *_ab .PdfObjectDictionary :var _ecab bool ;if _accdf &&!_gagff {if _bdbdd ,_ :=_ab .GetNameVal (_ccead .Get ("\u0054\u0079\u0070\u0065"));_bdbdd =="\u0050\u0061\u0067\u0065"{_ ,_aeafe :=_gagdb ._dcdcd [_ccead ];_gagff =!_aeafe ;_ecab =_gagff ;};};
_dafbe :=_ab .MakeDict ();_dbee =_dafbe ;_aabee [_gecfb ]=_dbee ;for _ ,_beecf :=range _ccead .Keys (){_dafbe .Set (_beecf ,_gagdb .copyObject (_ccead .Get (_beecf ),_aabee ,_decfdb ,_gagff ));};if _ecab {_dbee =_ab .MakeNull ();_gagff =false ;};case *_ab .PdfIndirectObject :_fgfcf :=&_ab .PdfIndirectObject {PdfObjectReference :_ccead .PdfObjectReference };
_dbee =_fgfcf ;_aabee [_gecfb ]=_dbee ;_fgfcf .PdfObject =_gagdb .copyObject (_ccead .PdfObject ,_aabee ,_decfdb ,_gagff );case *_ab .PdfObjectString :_bgfa :=*_ccead ;_dbee =&_bgfa ;_aabee [_gecfb ]=_dbee ;case *_ab .PdfObjectName :_acggd :=*_ccead ;_dbee =&_acggd ;
_aabee [_gecfb ]=_dbee ;case *_ab .PdfObjectNull :_dbee =_ab .MakeNull ();_aabee [_gecfb ]=_dbee ;case *_ab .PdfObjectInteger :_cdfb :=*_ccead ;_dbee =&_cdfb ;_aabee [_gecfb ]=_dbee ;case *_ab .PdfObjectReference :_bcgg :=*_ccead ;_dbee =&_bcgg ;_aabee [_gecfb ]=_dbee ;
case *_ab .PdfObjectFloat :_cbacfg :=*_ccead ;_dbee =&_cbacfg ;_aabee [_gecfb ]=_dbee ;case *_ab .PdfObjectBool :_fgfec :=*_ccead ;_dbee =&_fgfec ;_aabee [_gecfb ]=_dbee ;case *pdfSignDictionary :_fgafc :=&pdfSignDictionary {PdfObjectDictionary :_ab .MakeDict (),_decg :_ccead ._decg ,_ecefgb :_ccead ._ecefgb };
_dbee =_fgafc ;_aabee [_gecfb ]=_dbee ;for _ ,_fafdaa :=range _ccead .Keys (){_fgafc .Set (_fafdaa ,_gagdb .copyObject (_ccead .Get (_fafdaa ),_aabee ,_decfdb ,_gagff ));};default:_fa .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_gecfb );
};if _accdf &&_gagff {_decfdb [_gecfb ]=struct{}{};};return _dbee ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_ab .PdfObjectInteger ;BitsPerComponent *_ab .PdfObjectInteger ;BitsPerFlag *_ab .PdfObjectInteger ;Decode *_ab .PdfObjectArray ;Function []PdfFunction ;};func (_gdagb *PdfReader )newPdfAnnotationProjectionFromDict (_cedd *_ab .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_bgfd :=&PdfAnnotationProjection {};
_cfgd ,_aeef :=_gdagb .newPdfAnnotationMarkupFromDict (_cedd );if _aeef !=nil {return nil ,_aeef ;};_bgfd .PdfAnnotationMarkup =_cfgd ;return _bgfd ,nil ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_afdbb *PdfPage )AddContentStreamByString (contentStr string )error {_dfacd ,_edffc :=_ab .MakeStream ([]byte (contentStr ),_ab .NewFlateEncoder ());if _edffc !=nil {return _edffc ;};if _afdbb .Contents ==nil {_afdbb .Contents =_dfacd ;}else {_fbaff :=_ab .TraceToDirectObject (_afdbb .Contents );
_gdbbb ,_debc :=_fbaff .(*_ab .PdfObjectArray );if !_debc {_gdbbb =_ab .MakeArray (_fbaff );};_gdbbb .Append (_dfacd );_afdbb .Contents =_gdbbb ;};return nil ;};var (_dfdbc _c .Mutex ;_acacbb ="";_gagc _bg .Time ;_bgcfag ="";_gada ="";_egegca _bg .Time ;
_ffaff ="";_ebafe ="";_gffeb ="";);

// GetNumComponents returns the number of color components (1 for CalGray).
func (_fgfg *PdfColorCalGray )GetNumComponents ()int {return 1};func _dfbab ()_bg .Time {_dfdbc .Lock ();defer _dfdbc .Unlock ();return _gagc };

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_cedbg :=&PdfAnnotation {};_cedbg ._ddg =_ab .MakeIndirectObject (_ab .MakeDict ());return _cedbg ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_eeea *XObjectForm )SetContentStream (content []byte ,encoder _ab .StreamEncoder )error {_daba :=content ;if encoder ==nil {if _eeea .Filter !=nil {encoder =_eeea .Filter ;}else {encoder =_ab .NewRawEncoder ();};};_dabcfg ,_dbfg :=encoder .EncodeBytes (_daba );
if _dbfg !=nil {return _dbfg ;};_daba =_dabcfg ;_eeea .Stream =_daba ;_eeea .Filter =encoder ;return nil ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_agfeb *PdfPageResources )AddExtGState (gsName _ab .PdfObjectName ,gsDict _ab .PdfObject )error {if _agfeb .ExtGState ==nil {_agfeb .ExtGState =_ab .MakeDict ();};_efefb :=_agfeb .ExtGState ;_egaaa ,_gffd :=_ab .TraceToDirectObject (_efefb ).(*_ab .PdfObjectDictionary );
if !_gffd {_fa .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_efefb ,_ab .TraceToDirectObject (_efefb ));
return _ab .ErrTypeError ;};_egaaa .Set (gsName ,gsDict );return nil ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };func (_bafc *LTV )getCRLs (_efgfb []*_bgc .Certificate )([][]byte ,error ){_dbbfb :=make ([][]byte ,0,len (_efgfb ));for _ ,_ddgb :=range _efgfb {for _ ,_gcdbd :=range _ddgb .CRLDistributionPoints {if _bafc .CertClient .IsCA (_ddgb ){continue ;
};_dcgcc ,_cfebg :=_bafc .CRLClient .MakeRequest (_gcdbd ,_ddgb );if _cfebg !=nil {_fa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_cfebg );continue ;
};_dbbfb =append (_dbbfb ,_dcgcc );};};return _dbbfb ,nil ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_ddbg *PdfPage )Size ()(float64 ,float64 ,error ){_bccfc ,_acegg :=_ddbg .GetMediaBox ();if _acegg !=nil {return 0,0,_acegg ;};_gdaff ,_fbcd :=_bccfc .Width (),_bccfc .Height ();if _gfgfc :=_ddbg .Rotate ;_gfgfc !=nil &&*_gfgfc %360!=0&&*_gfgfc %90==0{if _dcda :=(360+*_gfgfc %360)%360;
_dcda ==90||_dcda ==270{_gdaff ,_fbcd =_fbcd ,_gdaff ;};};return _gdaff ,_fbcd ,nil ;};func (_adfc fontCommon )asPdfObjectDictionary (_bccd string )*_ab .PdfObjectDictionary {if _bccd !=""&&_adfc ._gcab !=""&&_bccd !=_adfc ._gcab {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_bccd ,_adfc );
}else if _bccd ==""&&_adfc ._gcab ==""{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_adfc );
}else if _adfc ._gcab ==""{_adfc ._gcab =_bccd ;};_cdfc :=_ab .MakeDict ();_cdfc .Set ("\u0054\u0079\u0070\u0065",_ab .MakeName ("\u0046\u006f\u006e\u0074"));_cdfc .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_ab .MakeName (_adfc ._egceb ));
_cdfc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName (_adfc ._gcab ));if _adfc ._dfaf !=nil {_cdfc .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_adfc ._dfaf .ToPdfObject ());};if _adfc ._gded !=nil {_cdfc .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_adfc ._gded );
}else if _adfc ._eefee !=nil {_bebd ,_bacgf :=_adfc ._eefee .Stream ();if _bacgf !=nil {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_bacgf );
}else {_cdfc .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_bebd );};};return _cdfc ;};func (_deecf *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _deecf ._dfaf };func (_cdcb *PdfReader )newPdfAcroFormFromDict (_edffa *_ab .PdfIndirectObject ,_eadbga *_ab .PdfObjectDictionary )(*PdfAcroForm ,error ){_cfdbef :=NewPdfAcroForm ();
if _edffa !=nil {_cfdbef ._ebcbd =_edffa ;_edffa .PdfObject =_ab .MakeDict ();};if _ceec :=_eadbga .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_ceec !=nil {_aced ,_bfcg :=_ab .GetArray (_ceec );if !_bfcg {return nil ,_f .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_ceec );
};var _cabg []*PdfField ;for _ ,_fedd :=range _aced .Elements (){_bbce ,_gbfac :=_ab .GetIndirect (_fedd );if !_gbfac {if _ ,_gbgga :=_fedd .(*_ab .PdfObjectNull );_gbgga {_fa .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_fa .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_fedd );
return nil ,_f .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bceb ,_eegbag :=_cdcb .newPdfFieldFromIndirectObject (_bbce ,nil );
if _eegbag !=nil {return nil ,_eegbag ;};_fa .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_bceb );_cabg =append (_cabg ,_bceb );};_cfdbef .Fields =&_cabg ;};if _fcbag :=_eadbga .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_fcbag !=nil {_fcdea ,_acbd :=_ab .GetBool (_fcbag );if _acbd {_cfdbef .NeedAppearances =_fcdea ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_fcbag );
};};if _bacge :=_eadbga .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_bacge !=nil {_eacd ,_ddde :=_ab .GetInt (_bacge );if _ddde {_cfdbef .SigFlags =_eacd ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bacge );
};};if _aacfg :=_eadbga .Get ("\u0043\u004f");_aacfg !=nil {_ecce ,_begaf :=_ab .GetArray (_aacfg );if _begaf {_cfdbef .CO =_ecce ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_aacfg );
};};if _fbcc :=_eadbga .Get ("\u0044\u0052");_fbcc !=nil {if _fabca ,_aeeag :=_ab .GetDict (_fbcc );_aeeag {_fbgc ,_fabfc :=NewPdfPageResourcesFromDict (_fabca );if _fabfc !=nil {_fa .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_fabfc );
return nil ,_fabfc ;};_cfdbef .DR =_fbgc ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fbcc );};};if _cccg :=_eadbga .Get ("\u0044\u0041");
_cccg !=nil {_cegbd ,_fddg :=_ab .GetString (_cccg );if _fddg {_cfdbef .DA =_cegbd ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_cccg );
};};if _aefag :=_eadbga .Get ("\u0051");_aefag !=nil {_dgfdaa ,_fbaba :=_ab .GetInt (_aefag );if _fbaba {_cfdbef .Q =_dgfdaa ;}else {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_aefag );
};};if _egbbg :=_eadbga .Get ("\u0058\u0046\u0041");_egbbg !=nil {_cfdbef .XFA =_egbbg ;};_cfdbef .ToPdfObject ();return _cfdbef ,nil ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_agfbe *PdfField )IsTerminal ()bool {return len (_agfbe .Kids )==0};

// ToPdfObject implements interface PdfModel.
func (_bfee *PdfAnnotationCircle )ToPdfObject ()_ab .PdfObject {_bfee .PdfAnnotation .ToPdfObject ();_deac :=_bfee ._ddg ;_agfb :=_deac .PdfObject .(*_ab .PdfObjectDictionary );_bfee .PdfAnnotationMarkup .appendToPdfDictionary (_agfb );_agfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_agfb .SetIfNotNil ("\u0042\u0053",_bfee .BS );_agfb .SetIfNotNil ("\u0049\u0043",_bfee .IC );_agfb .SetIfNotNil ("\u0042\u0045",_bfee .BE );_agfb .SetIfNotNil ("\u0052\u0044",_bfee .RD );return _deac ;};var _bagb =false ;

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_ddgcb *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_ddgcb .Base .GetNumComponents ();_aab :=int (vals [0])*N ;
if _aab < 0||(_aab +N -1)>=len (_ddgcb ._dfcdc ){return nil ,_ca .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_eaca :=_ddgcb ._dfcdc [_aab :_aab +N ];var _bffbc []float64 ;for _ ,_ccfd :=range _eaca {_bffbc =append (_bffbc ,float64 (_ccfd )/255.0);
};_dbaaf ,_bag :=_ddgcb .Base .ColorFromFloats (_bffbc );if _bag !=nil {return nil ,_bag ;};return _dbaaf ,nil ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_dbg :=NewPdfAnnotation ();_gbfg :=&PdfAnnotationRedact {};_gbfg .PdfAnnotation =_dbg ;_gbfg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dbg .SetContext (_gbfg );return _gbfg ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _ab .PdfObject ;LE _ab .PdfObject ;BS _ab .PdfObject ;IC _ab .PdfObject ;BE _ab .PdfObject ;IT _ab .PdfObject ;Measure _ab .PdfObject ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_aga :=NewPdfAnnotation ();_dae :=&PdfAnnotationLine {};_dae .PdfAnnotation =_aga ;_dae .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aga .SetContext (_dae );return _dae ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_bcee *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_ab .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcbe ,_egfgg :=_ab .GetNumbersAsFloat (objects );
if _egfgg !=nil {return nil ,_egfgg ;};return _bcee .ColorFromFloats (_fcbe );};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_efc :=NewPdfAnnotation ();_fafb :=&PdfAnnotationStamp {};_fafb .PdfAnnotation =_efc ;_fafb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efc .SetContext (_fafb );return _fafb ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_fcace *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _fcace .fill (provider ,appGen );};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_dgede *PdfColorspaceSpecialIndexed )ToPdfObject ()_ab .PdfObject {_ccffc :=_ab .MakeArray (_ab .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_ccffc .Append (_dgede .Base .ToPdfObject ());_ccffc .Append (_ab .MakeInteger (int64 (_dgede .HiVal )));
_ccffc .Append (_dgede .Lookup );if _dgede ._abde !=nil {_dgede ._abde .PdfObject =_ccffc ;return _dgede ._abde ;};return _ccffc ;};

// PdfVersion returns version of the PDF file.
func (_adbba *PdfReader )PdfVersion ()_ab .Version {return _adbba ._gcabf .PdfVersion ()};func (_gcf *PdfReader )newPdfAnnotationStrikeOut (_bdfe *_ab .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_ffgf :=PdfAnnotationStrikeOut {};_fdde ,_gac :=_gcf .newPdfAnnotationMarkupFromDict (_bdfe );
if _gac !=nil {return nil ,_gac ;};_ffgf .PdfAnnotationMarkup =_fdde ;_ffgf .QuadPoints =_bdfe .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ffgf ,nil ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_eagbd *PdfPage )SetContentStreams (cStreams []string ,encoder _ab .StreamEncoder )error {if len (cStreams )==0{_eagbd .Contents =nil ;return nil ;};if encoder ==nil {encoder =_ab .NewRawEncoder ();};var _geed []*_ab .PdfObjectStream ;for _ ,_bcba :=range cStreams {_bagf :=&_ab .PdfObjectStream {};
_aecf :=encoder .MakeStreamDict ();_daeaf ,_gdcf :=encoder .EncodeBytes ([]byte (_bcba ));if _gdcf !=nil {return _gdcf ;};_aecf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ab .MakeInteger (int64 (len (_daeaf ))));_bagf .PdfObjectDictionary =_aecf ;_bagf .Stream =_daeaf ;
_geed =append (_geed ,_bagf );};if len (_geed )==1{_eagbd .Contents =_geed [0];}else {_gacb :=_ab .MakeArray ();for _ ,_ccddb :=range _geed {_gacb .Append (_ccddb );};_eagbd .Contents =_gacb ;};return nil ;};

// A returns the value of the A component of the color.
func (_ddcd *PdfColorLab )A ()float64 {return _ddcd [1]};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_bcgeb *PdfPageResources )GetXObjectByName (keyName _ab .PdfObjectName )(*_ab .PdfObjectStream ,XObjectType ){if _bcgeb .XObject ==nil {return nil ,XObjectTypeUndefined ;};_cedf ,_adgc :=_ab .TraceToDirectObject (_bcgeb .XObject ).(*_ab .PdfObjectDictionary );
if !_adgc {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ab .TraceToDirectObject (_bcgeb .XObject ));
return nil ,XObjectTypeUndefined ;};if _gcdcd :=_cedf .Get (keyName );_gcdcd !=nil {_fcfbb ,_cfcdb :=_ab .GetStream (_gcdcd );if !_cfcdb {_fa .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_gcdcd );
return nil ,XObjectTypeUndefined ;};_cfbbc :=_fcfbb .PdfObjectDictionary ;_bdcdd ,_cfcdb :=_ab .TraceToDirectObject (_cfbbc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_ab .PdfObjectName );if !_cfcdb {_fa .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_cfbbc .String ());
return nil ,XObjectTypeUndefined ;};if *_bdcdd =="\u0049\u006d\u0061g\u0065"{return _fcfbb ,XObjectTypeImage ;}else if *_bdcdd =="\u0046\u006f\u0072\u006d"{return _fcfbb ,XObjectTypeForm ;}else if *_bdcdd =="\u0050\u0053"{return _fcfbb ,XObjectTypePS ;
}else {_fa .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_bdcdd );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_fcbcb *PdfPage )GetPageAsIndirectObject ()*_ab .PdfIndirectObject {return _fcbcb ._agafe };

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_df :=NewPdfAction ();_cd :=&PdfActionGoToR {};_cd .PdfAction =_df ;_df .SetContext (_cd );return _cd ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_eef :=NewPdfAction ();_cda :=&PdfActionGoTo3DView {};_cda .PdfAction =_eef ;_eef .SetContext (_cda );return _cda ;};func (_aace *PdfReader )newPdfAnnotationFreeTextFromDict (_ffca *_ab .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_dbcc :=PdfAnnotationFreeText {};
_afadc ,_aegf :=_aace .newPdfAnnotationMarkupFromDict (_ffca );if _aegf !=nil {return nil ,_aegf ;};_dbcc .PdfAnnotationMarkup =_afadc ;_dbcc .DA =_ffca .Get ("\u0044\u0041");_dbcc .Q =_ffca .Get ("\u0051");_dbcc .RC =_ffca .Get ("\u0052\u0043");_dbcc .DS =_ffca .Get ("\u0044\u0053");
_dbcc .CL =_ffca .Get ("\u0043\u004c");_dbcc .IT =_ffca .Get ("\u0049\u0054");_dbcc .BE =_ffca .Get ("\u0042\u0045");_dbcc .RD =_ffca .Get ("\u0052\u0044");_dbcc .BS =_ffca .Get ("\u0042\u0053");_dbcc .LE =_ffca .Get ("\u004c\u0045");return &_dbcc ,nil ;
};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_fbacgg :=&XObjectForm {};_aadda :=&_ab .PdfObjectStream {};_aadda .PdfObjectDictionary =_ab .MakeDict ();_fbacgg ._bedc =_aadda ;return _fbacgg ;};

// ToPdfObject implements interface PdfModel.
func (_gfgf *PdfActionSubmitForm )ToPdfObject ()_ab .PdfObject {_gfgf .PdfAction .ToPdfObject ();_fbf :=_gfgf ._cef ;_agc :=_fbf .PdfObject .(*_ab .PdfObjectDictionary );_agc .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeSubmitForm )));if _gfgf .F !=nil {_agc .Set ("\u0046",_gfgf .F .ToPdfObject ());
};_agc .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_gfgf .Fields );_agc .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_gfgf .Flags );return _fbf ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _ab .PdfObject ;AN _ab .PdfObject ;OP _ab .PdfObject ;JS _ab .PdfObject ;};func (_faafe *PdfWriter )writeXRefStreams (_cbabd int ,_bcegd int64 )error {_daggb :=_cbabd +1;_faafe ._daaee [_daggb ]=crossReference {Type :1,ObjectNumber :_daggb ,Offset :_bcegd };
_cabe :=_ffc .NewBuffer (nil );_gaad :=_ab .MakeArray ();for _befa :=0;_befa <=_cbabd ;{for ;_befa <=_cbabd ;_befa ++{_daaaa ,_dacdd :=_faafe ._daaee [_befa ];if _dacdd &&(!_faafe ._cbeff ||_faafe ._cbeff &&(_daaaa .Type ==1&&_daaaa .Offset >=_faafe ._dbaac ||_daaaa .Type ==0)){break ;
};};var _eccbg int ;for _eccbg =_befa +1;_eccbg <=_cbabd ;_eccbg ++{_bacba ,_adffb :=_faafe ._daaee [_eccbg ];if _adffb &&(!_faafe ._cbeff ||_faafe ._cbeff &&(_bacba .Type ==1&&_bacba .Offset > _faafe ._dbaac )){continue ;};break ;};_gaad .Append (_ab .MakeInteger (int64 (_befa )),_ab .MakeInteger (int64 (_eccbg -_befa )));
for _adbgc :=_befa ;_adbgc < _eccbg ;_adbgc ++{_ceaa :=_faafe ._daaee [_adbgc ];switch _ceaa .Type {case 0:_ff .Write (_cabe ,_ff .BigEndian ,byte (0));_ff .Write (_cabe ,_ff .BigEndian ,uint32 (0));_ff .Write (_cabe ,_ff .BigEndian ,uint16 (0xFFFF));case 1:_ff .Write (_cabe ,_ff .BigEndian ,byte (1));
_ff .Write (_cabe ,_ff .BigEndian ,uint32 (_ceaa .Offset ));_ff .Write (_cabe ,_ff .BigEndian ,uint16 (_ceaa .Generation ));case 2:_ff .Write (_cabe ,_ff .BigEndian ,byte (2));_ff .Write (_cabe ,_ff .BigEndian ,uint32 (_ceaa .ObjectNumber ));_ff .Write (_cabe ,_ff .BigEndian ,uint16 (_ceaa .Index ));
};};_befa =_eccbg +1;};_cbcab ,_dggcb :=_ab .MakeStream (_cabe .Bytes (),_ab .NewFlateEncoder ());if _dggcb !=nil {return _dggcb ;};_cbcab .ObjectNumber =int64 (_daggb );_cbcab .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_ab .MakeName ("\u0058\u0052\u0065\u0066"));
_cbcab .PdfObjectDictionary .Set ("\u0057",_ab .MakeArray (_ab .MakeInteger (1),_ab .MakeInteger (4),_ab .MakeInteger (2)));_cbcab .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_gaad );_cbcab .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_ab .MakeInteger (int64 (_daggb +1)));
_cbcab .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_faafe ._bfedb );_cbcab .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_faafe ._eefb );if _faafe ._cbeff &&_faafe ._ebcdbb > 0{_cbcab .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_ab .MakeInteger (_faafe ._ebcdbb ));
};if _faafe ._ggfge !=nil {_cbcab .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_faafe ._faaaf );};if _faafe ._gbabcf !=nil {_fa .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_faafe ._gbabcf );_cbcab .Set ("\u0049\u0044",_faafe ._gbabcf );};_faafe .writeObject (int (_cbcab .ObjectNumber ),_cbcab );
return nil ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_cgcbe *PdfReader )Inspect ()(map[string ]int ,error ){return _cgcbe ._gcabf .Inspect ()};func (_bgaf *PdfWriter )copyObjects (){_ggdf :=make (map[_ab .PdfObject ]_ab .PdfObject );_gbdbg :=make ([]_ab .PdfObject ,0,len (_bgaf ._acgcfc ));_ddgded :=make (map[_ab .PdfObject ]struct{},len (_bgaf ._acgcfc ));
_dacce :=make (map[_ab .PdfObject ]struct{});for _ ,_acbdf :=range _bgaf ._acgcfc {_dcfdfa :=_bgaf .copyObject (_acbdf ,_ggdf ,_dacce ,false );if _ ,_bdbg :=_dacce [_acbdf ];_bdbg {continue ;};_gbdbg =append (_gbdbg ,_dcfdfa );_ddgded [_dcfdfa ]=struct{}{};
};_bgaf ._acgcfc =_gbdbg ;_bgaf ._cgdbbd =_ddgded ;_bgaf ._bfedb =_bgaf .copyObject (_bgaf ._bfedb ,_ggdf ,nil ,false ).(*_ab .PdfIndirectObject );_bgaf ._eefb =_bgaf .copyObject (_bgaf ._eefb ,_ggdf ,nil ,false ).(*_ab .PdfIndirectObject );if _bgaf ._faaaf !=nil {_bgaf ._faaaf =_bgaf .copyObject (_bgaf ._faaaf ,_ggdf ,nil ,false ).(*_ab .PdfIndirectObject );
};if _bgaf ._cbeff {_gbbcg :=make (map[_ab .PdfObject ]int64 );for _bcgaa ,_dbcfb :=range _bgaf ._fgggfa {if _acdde ,_dbdbg :=_ggdf [_bcgaa ];_dbdbg {_gbbcg [_acdde ]=_dbcfb ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_bgaf ._fgggfa =_gbbcg ;};};func (_ead *PdfReader )newPdfActionThreadFromDict (_efab *_ab .PdfObjectDictionary )(*PdfActionThread ,error ){_ebae ,_fef :=_ecdc (_efab .Get ("\u0046"));if _fef !=nil {return nil ,_fef ;};return &PdfActionThread {D :_efab .Get ("\u0044"),B :_efab .Get ("\u0042"),F :_ebae },nil ;
};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _ab .PdfObject ;MK _ab .PdfObject ;A _ab .PdfObject ;AA _ab .PdfObject ;BS _ab .PdfObject ;Parent _ab .PdfObject ;_beb *PdfField ;_gdab bool ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// ToPdfObject implements interface PdfModel.
func (_edd *PdfAnnotationPolygon )ToPdfObject ()_ab .PdfObject {_edd .PdfAnnotation .ToPdfObject ();_dbag :=_edd ._ddg ;_fgcf :=_dbag .PdfObject .(*_ab .PdfObjectDictionary );_edd .PdfAnnotationMarkup .appendToPdfDictionary (_fgcf );_fgcf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_fgcf .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_edd .Vertices );_fgcf .SetIfNotNil ("\u004c\u0045",_edd .LE );_fgcf .SetIfNotNil ("\u0042\u0053",_edd .BS );_fgcf .SetIfNotNil ("\u0049\u0043",_edd .IC );_fgcf .SetIfNotNil ("\u0042\u0045",_edd .BE );
_fgcf .SetIfNotNil ("\u0049\u0054",_edd .IT );_fgcf .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_edd .Measure );return _dbag ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_gabad *PdfField )GetContext ()PdfModel {return _gabad ._ggfg };var _ pdfFont =(*pdfFontType3 )(nil );

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _ab .PdfObject ;B _ab .PdfObject ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_ab .PdfObject ;};func _gabcb (_gaabe *[]*PdfField ,_afbdfe FieldFilterFunc ,_bffaa bool )[]*PdfField {if _gaabe ==nil {return nil ;};_eegea :=*_gaabe ;if len (*_gaabe )==0{return nil ;
};_gcfbg :=_eegea [:0];if _afbdfe ==nil {_afbdfe =func (*PdfField )bool {return true };};var _dfcfd []*PdfField ;for _ ,_dbcf :=range _eegea {_dbbdb :=_afbdfe (_dbcf );if _dbbdb {_dfcfd =append (_dfcfd ,_dbcf );if len (_dbcf .Kids )> 0{_dfcfd =append (_dfcfd ,_gabcb (&_dbcf .Kids ,_afbdfe ,_bffaa )...);
};};if !_bffaa ||!_dbbdb ||len (_dbcf .Kids )> 0{_gcfbg =append (_gcfbg ,_dbcf );};};*_gaabe =_gcfbg ;return _dfcfd ;};func (_bbbe *PdfReader )newPdfAnnotationMarkupFromDict (_ccbb *_ab .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_feb :=&PdfAnnotationMarkup {};
if _gfd :=_ccbb .Get ("\u0054");_gfd !=nil {_feb .T =_gfd ;};if _fedc :=_ccbb .Get ("\u0050\u006f\u0070u\u0070");_fedc !=nil {_gead ,_bgcb :=_fedc .(*_ab .PdfIndirectObject );if !_bgcb {if _ ,_fggg :=_fedc .(*_ab .PdfObjectNull );!_fggg {return nil ,_ca .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_dfgc ,_fbbd :=_bbbe .newPdfAnnotationFromIndirectObject (_gead );if _fbbd !=nil {return nil ,_fbbd ;};if _dfgc !=nil {_cdebb ,_caa :=_dfgc ._aeb .(*PdfAnnotationPopup );if !_caa {return nil ,_ca .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_feb .Popup =_cdebb ;};};};if _gbge :=_ccbb .Get ("\u0043\u0041");_gbge !=nil {_feb .CA =_gbge ;};if _aac :=_ccbb .Get ("\u0052\u0043");_aac !=nil {_feb .RC =_aac ;};if _cbeb :=_ccbb .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_cbeb !=nil {_feb .CreationDate =_cbeb ;};if _dac :=_ccbb .Get ("\u0049\u0052\u0054");_dac !=nil {_feb .IRT =_dac ;};if _bfeb :=_ccbb .Get ("\u0053\u0075\u0062\u006a");_bfeb !=nil {_feb .Subj =_bfeb ;};if _cfef :=_ccbb .Get ("\u0052\u0054");_cfef !=nil {_feb .RT =_cfef ;
};if _fgb :=_ccbb .Get ("\u0049\u0054");_fgb !=nil {_feb .IT =_fgb ;};if _dge :=_ccbb .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_dge !=nil {_feb .ExData =_dge ;};return _feb ,nil ;};func (_acab *PdfReader )newPdfAnnotationTextFromDict (_gcgf *_ab .PdfObjectDictionary )(*PdfAnnotationText ,error ){_afbg :=PdfAnnotationText {};
_fcd ,_bdaa :=_acab .newPdfAnnotationMarkupFromDict (_gcgf );if _bdaa !=nil {return nil ,_bdaa ;};_afbg .PdfAnnotationMarkup =_fcd ;_afbg .Open =_gcgf .Get ("\u004f\u0070\u0065\u006e");_afbg .Name =_gcgf .Get ("\u004e\u0061\u006d\u0065");_afbg .State =_gcgf .Get ("\u0053\u0074\u0061t\u0065");
_afbg .StateModel =_gcgf .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_afbg ,nil ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_gga :=NewPdfAnnotation ();_bce :=&PdfAnnotationInk {};_bce .PdfAnnotation =_gga ;_bce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gga .SetContext (_bce );return _bce ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_eafcf :_ab .MakeIndirectObject (_ab .MakeDict ()),VRI :map[string ]*VRI {}};};func (_egdf *PdfReader )newPdfAnnotationSoundFromDict (_gdgb *_ab .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_gcdb :=PdfAnnotationSound {};
_gca ,_eabc :=_egdf .newPdfAnnotationMarkupFromDict (_gdgb );if _eabc !=nil {return nil ,_eabc ;};_gcdb .PdfAnnotationMarkup =_gca ;_gcdb .Name =_gdgb .Get ("\u004e\u0061\u006d\u0065");_gcdb .Sound =_gdgb .Get ("\u0053\u006f\u0075n\u0064");return &_gcdb ,nil ;
};

// ToPdfObject implements interface PdfModel.
func (_gdf *PdfAnnotationSquare )ToPdfObject ()_ab .PdfObject {_gdf .PdfAnnotation .ToPdfObject ();_afd :=_gdf ._ddg ;_edb :=_afd .PdfObject .(*_ab .PdfObjectDictionary );if _gdf .PdfAnnotationMarkup !=nil {_gdf .PdfAnnotationMarkup .appendToPdfDictionary (_edb );
};_edb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_edb .SetIfNotNil ("\u0042\u0053",_gdf .BS );_edb .SetIfNotNil ("\u0049\u0043",_gdf .IC );_edb .SetIfNotNil ("\u0042\u0045",_gdf .BE );
_edb .SetIfNotNil ("\u0052\u0044",_gdf .RD );return _afd ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_adfgb *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// GetContentStream returns the pattern cell's content stream
func (_bebcg *PdfTilingPattern )GetContentStream ()([]byte ,error ){_cabge ,_ ,_ceaebc :=_bebcg .GetContentStreamWithEncoder ();return _cabge ,_ceaebc ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _fb .ReadSeeker )(*PdfReader ,error ){const _gadf ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _eagcc (rs ,&ReaderOpts {LazyLoad :true },false ,_gadf );
};

// ToPdfObject returns the PDF representation of the function.
func (_cffe *PdfFunctionType0 )ToPdfObject ()_ab .PdfObject {if _cffe ._fagf ==nil {_cffe ._fagf =&_ab .PdfObjectStream {};};_gdfbe :=_ab .MakeDict ();_gdfbe .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ab .MakeInteger (0));
_gagac :=&_ab .PdfObjectArray {};for _ ,_gbbgf :=range _cffe .Domain {_gagac .Append (_ab .MakeFloat (_gbbgf ));};_gdfbe .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gagac );_gcaeg :=&_ab .PdfObjectArray {};for _ ,_gfgdb :=range _cffe .Range {_gcaeg .Append (_ab .MakeFloat (_gfgdb ));
};_gdfbe .Set ("\u0052\u0061\u006eg\u0065",_gcaeg );_cdbf :=&_ab .PdfObjectArray {};for _ ,_gccb :=range _cffe .Size {_cdbf .Append (_ab .MakeInteger (int64 (_gccb )));};_gdfbe .Set ("\u0053\u0069\u007a\u0065",_cdbf );_gdfbe .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_ab .MakeInteger (int64 (_cffe .BitsPerSample )));
if _cffe .Order !=1{_gdfbe .Set ("\u004f\u0072\u0064e\u0072",_ab .MakeInteger (int64 (_cffe .Order )));};_gdfbe .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ab .MakeInteger (int64 (len (_cffe ._bgbbf ))));_cffe ._fagf .Stream =_cffe ._bgbbf ;_cffe ._fagf .PdfObjectDictionary =_gdfbe ;
return _cffe ._fagf ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_afgdf *PdfPattern )SetContext (ctx PdfModel ){_afgdf ._dgbge =ctx };

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_cbga *PdfPageResources )GetFontByName (keyName _ab .PdfObjectName )(_ab .PdfObject ,bool ){if _cbga .Font ==nil {return nil ,false ;};_ccdbe ,_agabf :=_ab .TraceToDirectObject (_cbga .Font ).(*_ab .PdfObjectDictionary );if !_agabf {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ab .TraceToDirectObject (_cbga .Font ));
return nil ,false ;};if _dcbce :=_ccdbe .Get (keyName );_dcbce !=nil {return _dcbce ,true ;};return nil ,false ;};func _ddaeed (_aagbg *_ab .PdfObjectArray )(float64 ,error ){_cabfe ,_eabfc :=_aagbg .ToFloat64Array ();if _eabfc !=nil {_fa .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aagbg ,_eabfc );
};switch len (_cabfe ){case 1:return _cabfe [0],nil ;case 3:_caggf :=PdfColorspaceDeviceRGB {};_aebga ,_gbabd :=_caggf .ColorFromFloats (_cabfe );if _gbabd !=nil {return 0.0,_gbabd ;};return _aebga .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_fgabb :=PdfColorspaceDeviceCMYK {};
_aafgc ,_bcgdb :=_fgabb .ColorFromFloats (_cabfe );if _bcgdb !=nil {return 0.0,_bcgdb ;};_bcbae ,_bcgdb :=_fgabb .ColorToRGB (_aafgc .(*PdfColorDeviceCMYK ));if _bcgdb !=nil {return 0.0,_bcgdb ;};return _bcbae .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_eabfc =_ca .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_fa .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aagbg ,_eabfc );
return 0.0,_eabfc ;};func (_dbdb *DSS )generateHashMaps ()error {_bfdfg ,_cgdb :=_dbdb .generateHashMap (_dbdb .Certs );if _cgdb !=nil {return _cgdb ;};_afgd ,_cgdb :=_dbdb .generateHashMap (_dbdb .OCSPs );if _cgdb !=nil {return _cgdb ;};_fcgda ,_cgdb :=_dbdb .generateHashMap (_dbdb .CRLs );
if _cgdb !=nil {return _cgdb ;};_dbdb ._fedaa =_bfdfg ;_dbdb ._aaag =_afgd ;_dbdb ._addfa =_fcgda ;return nil ;};func _cfgdc (_fadfbga []*_ab .PdfObjectStream )*_ab .PdfObjectArray {if len (_fadfbga )==0{return nil ;};_fdgec :=make ([]_ab .PdfObject ,0,len (_fadfbga ));
for _ ,_eaadc :=range _fadfbga {_fdgec =append (_fdgec ,_eaadc );};return _ab .MakeArray (_fdgec ...);};

// Items returns all children outline items.
func (_deaaa *Outline )Items ()[]*OutlineItem {return _deaaa .Entries };

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_bfgfc *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _bfgfc .RunesToCharcodeBytes ([]rune (str ));};

// SetShadingByName sets a shading resource specified by keyName.
func (_abea *PdfPageResources )SetShadingByName (keyName _ab .PdfObjectName ,shadingObj _ab .PdfObject )error {if _abea .Shading ==nil {_abea .Shading =_ab .MakeDict ();};_cggae ,_eacb :=_abea .Shading .(*_ab .PdfObjectDictionary );if !_eacb {return _ab .ErrTypeError ;
};_cggae .Set (keyName ,shadingObj );return nil ;};func _dcfcb (_cebeg _ab .PdfObject )(*PdfFontDescriptor ,error ){_cfgc :=&PdfFontDescriptor {};_cebeg =_ab .ResolveReference (_cebeg );if _dfff ,_bead :=_cebeg .(*_ab .PdfIndirectObject );_bead {_cfgc ._fgggc =_dfff ;
_cebeg =_dfff .PdfObject ;};_begbd ,_cbdae :=_ab .GetDict (_cebeg );if !_cbdae {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cebeg );
return nil ,_ab .ErrTypeError ;};if _gabb :=_begbd .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_gabb !=nil {_cfgc .FontName =_gabb ;}else {_fa .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_fcbca ,_ :=_ab .GetName (_cfgc .FontName );if _cceaa :=_begbd .Get ("\u0054\u0079\u0070\u0065");_cceaa !=nil {_baee ,_ffdd :=_cceaa .(*_ab .PdfObjectName );if !_ffdd ||string (*_baee )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_fa .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_cceaa ,_fcbca ,_cfgc .FontName );
};}else {_fa .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_fcbca ,_cfgc .FontName );
};_cfgc .FontFamily =_begbd .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_cfgc .FontStretch =_begbd .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_cfgc .FontWeight =_begbd .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_cfgc .Flags =_begbd .Get ("\u0046\u006c\u0061g\u0073");_cfgc .FontBBox =_begbd .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_cfgc .ItalicAngle =_begbd .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_cfgc .Ascent =_begbd .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_cfgc .Descent =_begbd .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_cfgc .Leading =_begbd .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_cfgc .CapHeight =_begbd .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_cfgc .XHeight =_begbd .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_cfgc .StemV =_begbd .Get ("\u0053\u0074\u0065m\u0056");_cfgc .StemH =_begbd .Get ("\u0053\u0074\u0065m\u0048");_cfgc .AvgWidth =_begbd .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_cfgc .MaxWidth =_begbd .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_cfgc .MissingWidth =_begbd .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_cfgc .FontFile =_begbd .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_cfgc .FontFile2 =_begbd .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_cfgc .FontFile3 =_begbd .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_cfgc .CharSet =_begbd .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_cfgc .Style =_begbd .Get ("\u0053\u0074\u0079l\u0065");_cfgc .Lang =_begbd .Get ("\u004c\u0061\u006e\u0067");
_cfgc .FD =_begbd .Get ("\u0046\u0044");_cfgc .CIDSet =_begbd .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _cfgc .Flags !=nil {if _eeef ,_gegg :=_ab .GetIntVal (_cfgc .Flags );_gegg {_cfgc ._badbd =_eeef ;};};if _cfgc .MissingWidth !=nil {if _gebf ,_bcegc :=_ab .GetNumberAsFloat (_cfgc .MissingWidth );
_bcegc ==nil {_cfgc ._dgffc =_gebf ;};};if _cfgc .FontFile !=nil {_ggbda ,_cadc :=_cgccb (_cfgc .FontFile );if _cadc !=nil {return _cfgc ,_cadc ;};_fa .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_ggbda );_cfgc .fontFile =_ggbda ;
};if _cfgc .FontFile2 !=nil {_bcfefg ,_edcf :=_bc .NewFontFile2FromPdfObject (_cfgc .FontFile2 );if _edcf !=nil {return _cfgc ,_edcf ;};_fa .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_bcfefg .String ());_cfgc ._cfga =&_bcfefg ;
};return _cfgc ,nil ;};

// WriteToFile writes the output PDF to file.
func (_eebfg *PdfWriter )WriteToFile (outputFilePath string )error {_ggbgae ,_bddf :=_ac .Create (outputFilePath );if _bddf !=nil {return _bddf ;};defer _ggbgae .Close ();return _eebfg .Write (_ggbgae );};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _bg .Time ){_dfdbc .Lock ();defer _dfdbc .Unlock ();_gagc =creationDate ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";
);

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_ddc :=NewPdfAction ();_gbe :=&PdfActionLaunch {};_gbe .PdfAction =_ddc ;_ddc .SetContext (_gbe );return _gbe ;};func (_acdc *PdfReader )newPdfActionHideFromDict (_dcg *_ab .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_dcg .Get ("\u0054"),H :_dcg .Get ("\u0048")},nil ;
};

// ToPdfObject implements interface PdfModel.
func (_bceg *PdfAnnotationRedact )ToPdfObject ()_ab .PdfObject {_bceg .PdfAnnotation .ToPdfObject ();_aeea :=_bceg ._ddg ;_fcce :=_aeea .PdfObject .(*_ab .PdfObjectDictionary );_bceg .PdfAnnotationMarkup .appendToPdfDictionary (_fcce );_fcce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_fcce .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bceg .QuadPoints );_fcce .SetIfNotNil ("\u0049\u0043",_bceg .IC );_fcce .SetIfNotNil ("\u0052\u004f",_bceg .RO );_fcce .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_bceg .OverlayText );
_fcce .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_bceg .Repeat );_fcce .SetIfNotNil ("\u0044\u0041",_bceg .DA );_fcce .SetIfNotNil ("\u0051",_bceg .Q );return _aeea ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_gabf *PdfFont )GetCharMetrics (code _dc .CharCode )(CharMetrics ,bool ){var _fbbdda _bc .CharMetrics ;switch _gagad :=_gabf ._cgdec .(type ){case *pdfFontSimple :if _bdaec ,_fbaa :=_gagad .GetCharMetrics (code );_fbaa {return _bdaec ,_fbaa ;};case *pdfFontType0 :if _aabc ,_fafg :=_gagad .GetCharMetrics (code );
_fafg {return _aabc ,_fafg ;};case *pdfCIDFontType0 :if _degag ,_deeff :=_gagad .GetCharMetrics (code );_deeff {return _degag ,_deeff ;};case *pdfCIDFontType2 :if _agbc ,_cfbb :=_gagad .GetCharMetrics (code );_cfbb {return _agbc ,_cfbb ;};case *pdfFontType3 :if _gagadg ,_beac :=_gagad .GetCharMetrics (code );
_beac {return _gagadg ,_beac ;};default:_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_gabf ._cgdec );
return _fbbdda ,false ;};if _efbdf ,_afdc :=_gabf .GetFontDescriptor ();_afdc ==nil &&_efbdf !=nil {return _bc .CharMetrics {Wx :_efbdf ._dgffc },true ;};_fa .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_gabf );
return _fbbdda ,false ;};func (_beff *PdfField )inherit (_dgbg func (*PdfField )bool )(bool ,error ){_efeg :=map[*PdfField ]bool {};_aaab :=false ;_bddcc :=_beff ;for _bddcc !=nil {if _ ,_gaac :=_efeg [_bddcc ];_gaac {return false ,_ca .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");
};_ggcf :=_dgbg (_bddcc );if _ggcf {_aaab =true ;break ;};_efeg [_bddcc ]=true ;_bddcc =_bddcc .Parent ;};return _aaab ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_eabag *PdfColorspaceDeviceCMYK )ToPdfObject ()_ab .PdfObject {return _ab .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// B returns the value of the blue component of the color.
func (_fdaf *PdfColorDeviceRGB )B ()float64 {return _fdaf [2]};

// String implements interface PdfObject.
func (_ge *PdfAction )String ()string {_ccf ,_fgg :=_ge .ToPdfObject ().(*_ab .PdfIndirectObject );if _fgg {return _f .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ge ._ad ,_ccf .PdfObject .String ());};return "";};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_dbef *_ab .PdfIndirectObject ;};

// HasFontByName checks if has font resource by name.
func (_dgece *PdfPage )HasFontByName (name _ab .PdfObjectName )bool {_gcbb ,_fcaee :=_dgece .Resources .Font .(*_ab .PdfObjectDictionary );if !_fcaee {return false ;};if _bfgef :=_gcbb .Get (name );_bfgef !=nil {return true ;};return false ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_fgcd *PdfField )GetContainingPdfObject ()_ab .PdfObject {return _fgcd ._ggde };

// ToPdfObject implements interface PdfModel.
func (_ea *PdfActionSound )ToPdfObject ()_ab .PdfObject {_ea .PdfAction .ToPdfObject ();_eda :=_ea ._cef ;_cefa :=_eda .PdfObject .(*_ab .PdfObjectDictionary );_cefa .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeSound )));_cefa .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ea .Sound );
_cefa .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_ea .Volume );_cefa .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_ea .Synchronous );_cefa .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ea .Repeat );_cefa .SetIfNotNil ("\u004d\u0069\u0078",_ea .Mix );
return _eda ;};

// ImageToRGB convert an indexed image to RGB.
func (_fbbg *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_fbbg .Base .GetNumComponents ();if N < 1{return Image {},_f .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_cfae :=_cac .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._dbdfad ,img ._aaefg );_gdeg :=_fdc .NewReader (img .getBase ());_fdcf :=_fdc .NewWriter (_cfae );var (_dcfa uint32 ;_ddfga int ;_cfdf error ;);for {_dcfa ,_cfdf =_gdeg .ReadSample ();
if _cfdf ==_fb .EOF {break ;}else if _cfdf !=nil {return img ,_cfdf ;};_ddfga =int (_dcfa );_fa .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_ddfga ,N ,len (_fbbg ._dfcdc ));
if (_ddfga +1)*N > len (_fbbg ._dfcdc ){_ddfga =len (_fbbg ._dfcdc )/N -1;_fa .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_ddfga );if _ddfga < 0{_fa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _eca :=_ddfga *N ;_eca < (_ddfga +1)*N ;_eca ++{if _cfdf =_fdcf .WriteSample (uint32 (_fbbg ._dfcdc [_eca ]));_cfdf !=nil {return img ,_cfdf ;};};};return _fbbg .Base .ImageToRGB (_bgbec (&_cfae ));};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_cfbfe :=&PdfPageResources {};_cfbfe ._edege =_ab .MakeDict ();return _cfbfe ;};func (_fgccc *PdfWriter )checkLicense ()error {_dbcbga :=_age .GetLicenseKey ();if (_dbcbga ==nil ||!_dbcbga .IsLicensed ())&&!_bagb {_f .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_f .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ca .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_ab .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_ab .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_ab .PdfObjectBool ;_begcg PdfModel ;_edbbg _ab .PdfObject ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_fgedc int ,_efga *PdfPage );

// DecodeArray returns the component range values for the Indexed colorspace.
func (_cbgfc *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_cbgfc .HiVal )};};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_aegag *PdfColorspaceICCBased )ToPdfObject ()_ab .PdfObject {_adag :=&_ab .PdfObjectArray {};_adag .Append (_ab .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _ffcb *_ab .PdfObjectStream ;if _aegag ._cfcd !=nil {_ffcb =_aegag ._cfcd ;
}else {_ffcb =&_ab .PdfObjectStream {};};_faad :=_ab .MakeDict ();_faad .Set ("\u004e",_ab .MakeInteger (int64 (_aegag .N )));if _aegag .Alternate !=nil {_faad .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_aegag .Alternate .ToPdfObject ());};if _aegag .Metadata !=nil {_faad .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_aegag .Metadata );
};if _aegag .Range !=nil {var _dcbb []_ab .PdfObject ;for _ ,_bcacf :=range _aegag .Range {_dcbb =append (_dcbb ,_ab .MakeFloat (_bcacf ));};_faad .Set ("\u0052\u0061\u006eg\u0065",_ab .MakeArray (_dcbb ...));};_faad .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ab .MakeInteger (int64 (len (_aegag .Data ))));
_ffcb .Stream =_aegag .Data ;_ffcb .PdfObjectDictionary =_faad ;_adag .Append (_ffcb );if _aegag ._gefff !=nil {_aegag ._gefff .PdfObject =_adag ;return _aegag ._gefff ;};return _adag ;};

// ToPdfObject implements interface PdfModel.
func (_ageb *PdfAction )ToPdfObject ()_ab .PdfObject {_fba :=_ageb ._cef ;_ccd :=_fba .PdfObject .(*_ab .PdfObjectDictionary );_ccd .Clear ();_ccd .Set ("\u0054\u0079\u0070\u0065",_ab .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_ccd .SetIfNotNil ("\u0053",_ageb .S );
_ccd .SetIfNotNil ("\u004e\u0065\u0078\u0074",_ageb .Next );return _fba ;};func _dcfb (_gbgea *_ab .PdfIndirectObject ,_agd *_ab .PdfObjectDictionary )(*DSS ,error ){if _gbgea ==nil {_gbgea =_ab .MakeIndirectObject (nil );};_gbgea .PdfObject =_ab .MakeDict ();
_ecbc :=map[string ]*VRI {};if _bbge ,_cefcf :=_ab .GetDict (_agd .Get ("\u0056\u0052\u0049"));_cefcf {for _ ,_adfaf :=range _bbge .Keys (){if _ccgf ,_bggec :=_ab .GetDict (_bbge .Get (_adfaf ));_bggec {_ecbc [_af .ToUpper (_adfaf .String ())]=_gdade (_ccgf );
};};};return &DSS {Certs :_daeeg (_agd .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_daeeg (_agd .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_daeeg (_agd .Get ("\u0043\u0052\u004c\u0073")),VRI :_ecbc ,_eafcf :_gbgea },nil ;};func (_cbebe *PdfReader )loadAction (_efg _ab .PdfObject )(*PdfAction ,error ){if _cbb ,_baecb :=_ab .GetIndirect (_efg );
_baecb {_ccdgb ,_aega :=_cbebe .newPdfActionFromIndirectObject (_cbb );if _aega !=nil {return nil ,_aega ;};return _ccdgb ,nil ;}else if !_ab .IsNullObject (_efg ){return nil ,_ca .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_ggfg PdfModel ;_ggde *_ab .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_ab .PdfObjectName ;T *_ab .PdfObjectString ;TU *_ab .PdfObjectString ;TM *_ab .PdfObjectString ;Ff *_ab .PdfObjectInteger ;
V _ab .PdfObject ;DV _ab .PdfObject ;AA _ab .PdfObject ;};func (_acda *PdfReader )newPdfActionSubmitFormFromDict (_dea *_ab .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_cbg ,_bgag :=_ecdc (_dea .Get ("\u0046"));if _bgag !=nil {return nil ,_bgag ;
};return &PdfActionSubmitForm {F :_cbg ,Fields :_dea .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dea .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// ToPdfObject implements interface PdfModel.
func (_gdgg *PdfActionTrans )ToPdfObject ()_ab .PdfObject {_gdgg .PdfAction .ToPdfObject ();_bac :=_gdgg ._cef ;_dbf :=_bac .PdfObject .(*_ab .PdfObjectDictionary );_dbf .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeTrans )));_dbf .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gdgg .Trans );
return _bac ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ecced *PdfShadingType6 )ToPdfObject ()_ab .PdfObject {_ecced .PdfShading .ToPdfObject ();_aeadb ,_ccgdf :=_ecced .getShadingDict ();if _ccgdf !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ecced .BitsPerCoordinate !=nil {_aeadb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ecced .BitsPerCoordinate );};if _ecced .BitsPerComponent !=nil {_aeadb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ecced .BitsPerComponent );
};if _ecced .BitsPerFlag !=nil {_aeadb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ecced .BitsPerFlag );};if _ecced .Decode !=nil {_aeadb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ecced .Decode );};if _ecced .Function !=nil {if len (_ecced .Function )==1{_aeadb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ecced .Function [0].ToPdfObject ());
}else {_bacbf :=_ab .MakeArray ();for _ ,_aedca :=range _ecced .Function {_bacbf .Append (_aedca .ToPdfObject ());};_aeadb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bacbf );};};return _ecced ._edbbg ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bbbcf *PdfColorspaceDeviceGray )ToPdfObject ()_ab .PdfObject {return _ab .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_ggd :=NewPdfAnnotation ();_fcgd :=&PdfAnnotationPolygon {};_fcgd .PdfAnnotation =_ggd ;_fcgd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggd .SetContext (_fcgd );return _fcgd ;};func _gfadf (_efcae _ab .PdfObject )(*PdfFunctionType3 ,error ){_ggcb :=&PdfFunctionType3 {};
var _beecd *_ab .PdfObjectDictionary ;if _bgddfc ,_dbgg :=_efcae .(*_ab .PdfIndirectObject );_dbgg {_ecadb ,_gefcgc :=_bgddfc .PdfObject .(*_ab .PdfObjectDictionary );if !_gefcgc {return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ggcb ._gbfaa =_bgddfc ;_beecd =_ecadb ;}else if _effa ,_bcgc :=_efcae .(*_ab .PdfObjectDictionary );_bcgc {_beecd =_effa ;}else {return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_caddd ,_dfba :=_ab .TraceToDirectObject (_beecd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ab .PdfObjectArray );
if !_dfba {_fa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _caddd .Len ()!=2{_fa .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ca .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_degde ,_dbab :=_caddd .ToFloat64Array ();
if _dbab !=nil {return nil ,_dbab ;};_ggcb .Domain =_degde ;_caddd ,_dfba =_ab .TraceToDirectObject (_beecd .Get ("\u0052\u0061\u006eg\u0065")).(*_ab .PdfObjectArray );if _dfba {if _caddd .Len ()< 0||_caddd .Len ()%2!=0{return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ffdaa ,_afcff :=_caddd .ToFloat64Array ();if _afcff !=nil {return nil ,_afcff ;};_ggcb .Range =_ffdaa ;};_caddd ,_dfba =_ab .TraceToDirectObject (_beecd .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_ab .PdfObjectArray );if !_dfba {_fa .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ggcb .Functions =[]PdfFunction {};
for _ ,_bggca :=range _caddd .Elements (){_fcdee ,_bafdaa :=_cbacf (_bggca );if _bafdaa !=nil {return nil ,_bafdaa ;};_ggcb .Functions =append (_ggcb .Functions ,_fcdee );};_caddd ,_dfba =_ab .TraceToDirectObject (_beecd .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_ab .PdfObjectArray );
if !_dfba {_fa .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_gdfc ,_dbab :=_caddd .ToFloat64Array ();if _dbab !=nil {return nil ,_dbab ;};_ggcb .Bounds =_gdfc ;if len (_ggcb .Bounds )!=len (_ggcb .Functions )-1{_fa .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_ggcb .Bounds ),len (_ggcb .Functions ));
return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_caddd ,_dfba =_ab .TraceToDirectObject (_beecd .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_ab .PdfObjectArray );if !_dfba {_fa .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dedc ,_dbab :=_caddd .ToFloat64Array ();
if _dbab !=nil {return nil ,_dbab ;};_ggcb .Encode =_dedc ;if len (_ggcb .Encode )!=2*len (_ggcb .Functions ){_fa .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_ggcb .Encode ),len (_ggcb .Functions ));
return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _ggcb ,nil ;};

// ToInteger convert to an integer format.
func (_bacgd *PdfColorLab )ToInteger (bits int )[3]uint32 {_cfee :=_ced .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cfee *_bacgd .L ()),uint32 (_cfee *_bacgd .A ()),uint32 (_cfee *_bacgd .B ())};};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_bffe ,_gbgfa :=_dbfe (basefont );if _gbgfa !=nil {return nil ,_gbgfa ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_bffe ._ebfag =_dc .NewWinAnsiEncoder ();};return &PdfFont {_cgdec :&_bffe },nil ;
};

// GetPage returns the PdfPage model for the specified page number.
func (_ebgcb *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _ebgcb ._gcabf .GetCrypter ()!=nil &&!_ebgcb ._gcabf .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_ebgcb ._ffbe )< pageNumber {return nil ,_ca .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_efeac :=pageNumber -1;if _efeac < 0{return nil ,_f .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_bcfg :=_ebgcb .PageList [_efeac ];
return _bcfg ,nil ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _ab .PdfObject ;ColorSpace _ab .PdfObject ;Pattern _ab .PdfObject ;Shading _ab .PdfObject ;XObject _ab .PdfObject ;Font _ab .PdfObject ;ProcSet _ab .PdfObject ;Properties _ab .PdfObject ;_edege *_ab .PdfObjectDictionary ;
_degg *PdfPageResourcesColorspaces ;};func _feddc ()_bg .Time {_dfdbc .Lock ();defer _dfdbc .Unlock ();return _egegca };

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_ddega *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};func _gabg (_bgda *_ab .PdfObjectDictionary ,_egfb *fontCommon )(*pdfCIDFontType2 ,error ){if _egfb ._gcab !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_fa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_egfb );
return nil ,_ab .ErrRangeError ;};_cdfga :=_daege (_egfb );_gbaa ,_caeb :=_ab .GetDict (_bgda .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_caeb {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_egfb );
return nil ,ErrRequiredAttributeMissing ;};_cdfga .CIDSystemInfo =_gbaa ;_cdfga .DW =_bgda .Get ("\u0044\u0057");_cdfga .W =_bgda .Get ("\u0057");_cdfga .DW2 =_bgda .Get ("\u0044\u0057\u0032");_cdfga .W2 =_bgda .Get ("\u0057\u0032");_cdfga .CIDToGIDMap =_bgda .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_cdfga ._gegdd =1000.0;if _geafa ,_edfe :=_ab .GetNumberAsFloat (_cdfga .DW );_edfe ==nil {_cdfga ._gegdd =_geafa ;};_dbccd ,_eacc :=_agfdc (_cdfga .W );if _eacc !=nil {return nil ,_eacc ;};if _dbccd ==nil {_dbccd =map[_dc .CharCode ]float64 {};};_cdfga ._fgdee =_dbccd ;
return _cdfga ,nil ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_efcd :=&XObjectImage {};_ggaac :=&_ab .PdfObjectStream {};_ggaac .PdfObjectDictionary =_ab .MakeDict ();_efcd ._fdfdc =_ggaac ;return _efcd ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _ab .PdfObject ;T _ab .PdfObject ;Operation _ab .PdfObject ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ab .PdfObject ;};const (_abdd =0x00001;_ddgde =0x00002;_dcfbe =0x00004;_deefg =0x00008;_gabaf =0x00020;_ecbba =0x00040;_cbfg =0x10000;_efee =0x20000;_aecea =0x40000;);
var _adbf =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};
func (_ecccg PdfFont )actualFont ()pdfFont {if _ecccg ._cgdec ==nil {_fa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ecccg );
};return _ecccg ._cgdec ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_cgbc *PdfReader )Decrypt (password []byte )(bool ,error ){_cfbaa ,_caeaf :=_cgbc ._gcabf .Decrypt (password );if _caeaf !=nil {return false ,_caeaf ;};if !_cfbaa {return false ,nil ;};_caeaf =_cgbc .loadStructure ();if _caeaf !=nil {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_caeaf );
return false ,_caeaf ;};return true ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_dbcfd *PdfFunctionType3 )ToPdfObject ()_ab .PdfObject {_daeac :=_ab .MakeDict ();_daeac .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ab .MakeInteger (3));_dcfgdf :=&_ab .PdfObjectArray {};for _ ,_aeeeb :=range _dbcfd .Domain {_dcfgdf .Append (_ab .MakeFloat (_aeeeb ));
};_daeac .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dcfgdf );if _dbcfd .Range !=nil {_acbag :=&_ab .PdfObjectArray {};for _ ,_cfea :=range _dbcfd .Range {_acbag .Append (_ab .MakeFloat (_cfea ));};_daeac .Set ("\u0052\u0061\u006eg\u0065",_acbag );};
if _dbcfd .Functions !=nil {_efdag :=&_ab .PdfObjectArray {};for _ ,_bfdcc :=range _dbcfd .Functions {_efdag .Append (_bfdcc .ToPdfObject ());};_daeac .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_efdag );};if _dbcfd .Bounds !=nil {_addea :=&_ab .PdfObjectArray {};
for _ ,_abfc :=range _dbcfd .Bounds {_addea .Append (_ab .MakeFloat (_abfc ));};_daeac .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_addea );};if _dbcfd .Encode !=nil {_efacd :=&_ab .PdfObjectArray {};for _ ,_gbegg :=range _dbcfd .Encode {_efacd .Append (_ab .MakeFloat (_gbegg ));
};_daeac .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_efacd );};if _dbcfd ._gbfaa !=nil {_dbcfd ._gbfaa .PdfObject =_daeac ;return _dbcfd ._gbfaa ;};return _daeac ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_ebce *Image )GetParamsDict ()*_ab .PdfObjectDictionary {_dcgfa :=_ab .MakeDict ();_dcgfa .Set ("\u0057\u0069\u0064t\u0068",_ab .MakeInteger (_ebce .Width ));_dcgfa .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ab .MakeInteger (_ebce .Height ));_dcgfa .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ab .MakeInteger (int64 (_ebce .ColorComponents )));
_dcgfa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ab .MakeInteger (_ebce .BitsPerComponent ));return _dcgfa ;};

// String returns the name of the colorspace (DeviceN).
func (_babf *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_cabcf *Image )AlphaMap (mapFunc AlphaMapFunc ){for _bgegf ,_gfcb :=range _cabcf ._dbdfad {_cabcf ._dbdfad [_bgegf ]=mapFunc (_gfcb );};};

// ToPdfObject implements interface PdfModel.
func (_eab *PdfActionJavaScript )ToPdfObject ()_ab .PdfObject {_eab .PdfAction .ToPdfObject ();_eefe :=_eab ._cef ;_dbc :=_eefe .PdfObject .(*_ab .PdfObjectDictionary );_dbc .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeJavaScript )));_dbc .SetIfNotNil ("\u004a\u0053",_eab .JS );
return _eefe ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_gfcbb *XObjectImage )SetFilter (encoder _ab .StreamEncoder )error {_eddde :=_gfcbb .Stream ;_ggbdf ,_fdbad :=_gfcbb .Filter .DecodeBytes (_eddde );if _fdbad !=nil {return _fdbad ;};_gfcbb .Filter =encoder ;encoder .UpdateParams (_gfcbb .getParamsDict ());
_eddde ,_fdbad =encoder .EncodeBytes (_ggbdf );if _fdbad !=nil {return _fdbad ;};_gfcbb .Stream =_eddde ;return nil ;};func (_dca *PdfAppender )updateObjectsDeep (_gaba _ab .PdfObject ,_bdac map[_ab .PdfObject ]struct{}){if _bdac ==nil {_bdac =map[_ab .PdfObject ]struct{}{};
};if _ ,_bfeab :=_bdac [_gaba ];_bfeab ||_gaba ==nil {return ;};_bdac [_gaba ]=struct{}{};_agce :=_ab .ResolveReferencesDeep (_gaba ,_dca ._adfd );if _agce !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agce );};switch _dedg :=_gaba .(type ){case *_ab .PdfIndirectObject :switch {case _dedg .GetParser ()==_dca ._egeg ._gcabf :return ;
case _dedg .GetParser ()==_dca .Reader ._gcabf :_cafa ,_ :=_dca ._egeg .GetIndirectObjectByNumber (int (_dedg .ObjectNumber ));_ebf ,_fggc :=_cafa .(*_ab .PdfIndirectObject );if _fggc &&_ebf !=nil {if _ebf .PdfObject !=_dedg .PdfObject &&_ebf .PdfObject .WriteString ()!=_dedg .PdfObject .WriteString (){_dca .addNewObject (_gaba );
_dca ._fddbc [_gaba ]=_dedg .ObjectNumber ;};};default:_dca .addNewObject (_gaba );};_dca .updateObjectsDeep (_dedg .PdfObject ,_bdac );case *_ab .PdfObjectArray :for _ ,_cbbb :=range _dedg .Elements (){_dca .updateObjectsDeep (_cbbb ,_bdac );};case *_ab .PdfObjectDictionary :for _ ,_bcde :=range _dedg .Keys (){_dca .updateObjectsDeep (_dedg .Get (_bcde ),_bdac );
};case *_ab .PdfObjectStreams :if _dedg .GetParser ()!=_dca ._egeg ._gcabf {for _ ,_dfcd :=range _dedg .Elements (){_dca .updateObjectsDeep (_dfcd ,_bdac );};};case *_ab .PdfObjectStream :switch {case _dedg .GetParser ()==_dca ._egeg ._gcabf :return ;case _dedg .GetParser ()==_dca .Reader ._gcabf :if _gagf ,_cgfgd :=_dca ._egeg ._gcabf .LookupByReference (_dedg .PdfObjectReference );
_cgfgd ==nil {var _ggab bool ;if _befg ,_eaga :=_ab .GetStream (_gagf );_eaga &&_ffc .Equal (_befg .Stream ,_dedg .Stream ){_ggab =true ;};if _fcae ,_efag :=_ab .GetDict (_gagf );_ggab &&_efag {_ggab =_fcae .WriteString ()==_dedg .PdfObjectDictionary .WriteString ();
};if _ggab {return ;};};if _dedg .ObjectNumber !=0{_dca ._fddbc [_gaba ]=_dedg .ObjectNumber ;};default:if _ ,_ebfe :=_dca ._ggc [_gaba ];!_ebfe {_dca .addNewObject (_gaba );};};_dca .updateObjectsDeep (_dedg .PdfObjectDictionary ,_bdac );};};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_caad interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_cffa *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_eafe ,_ffdcg :=color .(*PdfColorDeviceCMYK );if !_ffdcg {_fa .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dfdd :=_eafe .C ();_fgbc :=_eafe .M ();_aede :=_eafe .Y ();_bcff :=_eafe .K ();_dfdd =_dfdd *(1-_bcff )+_bcff ;_fgbc =_fgbc *(1-_bcff )+_bcff ;
_aede =_aede *(1-_bcff )+_bcff ;_ffag :=1-_dfdd ;_abcc :=1-_fgbc ;_efff :=1-_aede ;return NewPdfColorDeviceRGB (_ffag ,_abcc ,_efff ),nil ;};

// B returns the value of the B component of the color.
func (_gdadf *PdfColorLab )B ()float64 {return _gdadf [2]};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _ab .PdfObject ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ab .PdfObject ;IC _ab .PdfObject ;RO _ab .PdfObject ;OverlayText _ab .PdfObject ;Repeat _ab .PdfObject ;DA _ab .PdfObject ;Q _ab .PdfObject ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_dbdd *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_dbdd .updateObjectsDeep (dss .ToPdfObject (),nil );};_dbdd ._adaf =dss ;};func (_aeadc *LTV )buildCertChain (_fdgga ,_ffeg []*_bgc .Certificate )([]*_bgc .Certificate ,map[string ]*_bgc .Certificate ,error ){_fabb :=map[string ]*_bgc .Certificate {};
for _ ,_abfdf :=range _fdgga {_fabb [_abfdf .Subject .CommonName ]=_abfdf ;};_adeab :=_fdgga ;for _ ,_bccg :=range _ffeg {_ceeg :=_bccg .Subject .CommonName ;if _ ,_bbca :=_fabb [_ceeg ];_bbca {continue ;};_fabb [_ceeg ]=_bccg ;_adeab =append (_adeab ,_bccg );
};if len (_adeab )==0{return nil ,nil ,ErrSignNoCertificates ;};var _gfecc error ;for _efdde :=_adeab [0];_efdde !=nil &&!_aeadc .CertClient .IsCA (_efdde );{_bgae ,_adac :=_fabb [_efdde .Issuer .CommonName ];if !_adac {if _bgae ,_gfecc =_aeadc .CertClient .GetIssuer (_efdde );
_gfecc !=nil {_fa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_gfecc );
break ;};_fabb [_efdde .Issuer .CommonName ]=_bgae ;_adeab =append (_adeab ,_bgae );};_efdde =_bgae ;};return _adeab ,_fabb ,nil ;};

// BaseFont returns the font's "BaseFont" field.
func (_aefg *PdfFont )BaseFont ()string {return _aefg .baseFields ()._egceb };

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _ab .PdfObject ;};func (_dbae *PdfFilespec )getDict ()*_ab .PdfObjectDictionary {if _afcfd ,_dfcfb :=_dbae ._cbaec .(*_ab .PdfIndirectObject );_dfcfb {_adgb ,_begd :=_afcfd .PdfObject .(*_ab .PdfObjectDictionary );
if !_begd {return nil ;};return _adgb ;}else if _aagbd ,_caacg :=_dbae ._cbaec .(*_ab .PdfObjectDictionary );_caacg {return _aagbd ;}else {_fa .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_dbae ._cbaec );
return nil ;};};

// GetContainingPdfObject implements model.PdfModel interface.
func (_ceegf *PdfOutputIntent )GetContainingPdfObject ()_ab .PdfObject {return _ceegf ._gaabg };

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_fbd :=NewPdfAction ();_cba :=&PdfActionRendition {};_cba .PdfAction =_fbd ;_fbd .SetContext (_cba );return _cba ;};

// GetXObjectByName gets XObject by name.
func (_acbgc *PdfPage )GetXObjectByName (name _ab .PdfObjectName )(_ab .PdfObject ,bool ){_cfcfe ,_cfdaa :=_acbgc .Resources .XObject .(*_ab .PdfObjectDictionary );if !_cfdaa {return nil ,false ;};if _dgbgf :=_cfcfe .Get (name );_dgbgf !=nil {return _dgbgf ,true ;
};return nil ,false ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_abdg :=NewPdfAnnotation ();_agf :=&PdfAnnotationWatermark {};_agf .PdfAnnotation =_abdg ;_abdg .SetContext (_agf );return _agf ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_ab .PdfObjectString ;Q *_ab .PdfObjectInteger ;DS *_ab .PdfObjectString ;RV _ab .PdfObject ;MaxLen *_ab .PdfObjectInteger ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_efgdg pdfFontType3 )GetCharMetrics (code _dc .CharCode )(_bc .CharMetrics ,bool ){if _adbb ,_dfgfgf :=_efgdg ._cgbdd [code ];_dfgfgf {return _bc .CharMetrics {Wx :_adbb },true ;};if _bc .IsStdFont (_bc .StdFontName (_efgdg ._egceb )){return _bc .CharMetrics {Wx :250},true ;
};return _bc .CharMetrics {},false ;};func (_cdcf *PdfWriter )hasObject (_caaad _ab .PdfObject )bool {_ ,_bacegc :=_cdcf ._cgdbbd [_caaad ];return _bacegc ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cfggd *PdfShadingType1 )ToPdfObject ()_ab .PdfObject {_cfggd .PdfShading .ToPdfObject ();_egfcd ,_dbgb :=_cfggd .getShadingDict ();if _dbgb !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cfggd .Domain !=nil {_egfcd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cfggd .Domain );};if _cfggd .Matrix !=nil {_egfcd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cfggd .Matrix );};if _cfggd .Function !=nil {if len (_cfggd .Function )==1{_egfcd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cfggd .Function [0].ToPdfObject ());
}else {_accb :=_ab .MakeArray ();for _ ,_baedc :=range _cfggd .Function {_accb .Append (_baedc .ToPdfObject ());};_egfcd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_accb );};};return _cfggd ._edbbg ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_egfbg *OutlineItem )Insert (index uint ,item *OutlineItem ){_ddcag :=uint (len (_egfbg .Entries ));if index > _ddcag {index =_ddcag ;};_egfbg .Entries =append (_egfbg .Entries [:index ],append ([]*OutlineItem {item },_egfbg .Entries [index :]...)...);
};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_dbdg *PdfFont )BytesToCharcodes (data []byte )[]_dc .CharCode {_fa .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _gbabg ,_bgddf :=_dbdg ._cgdec .(*pdfFontType0 );_bgddf &&_gbabg ._dbddg !=nil {if _accda ,_fbca :=_gbabg .bytesToCharcodes (data );_fbca {return _accda ;};};_bdgd :=make ([]_dc .CharCode ,0,len (data )+len (data )%2);if _dbdg .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _bffa :=0;_bffa < len (data );_bffa +=2{_bacgb :=uint16 (data [_bffa ])<<8|uint16 (data [_bffa +1]);_bdgd =append (_bdgd ,_dc .CharCode (_bacgb ));};}else {for _ ,_gddfc :=range data {_bdgd =append (_bdgd ,_dc .CharCode (_gddfc ));
};};return _bdgd ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_dbaec *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_dbaec .ToPdfOutline ().PdfOutlineTreeNode ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _ab .PdfObject ;_dfcdc []byte ;_abde *_ab .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_cadd *PdfAnnotationPolyLine )ToPdfObject ()_ab .PdfObject {_cadd .PdfAnnotation .ToPdfObject ();_cbc :=_cadd ._ddg ;_gbbd :=_cbc .PdfObject .(*_ab .PdfObjectDictionary );_cadd .PdfAnnotationMarkup .appendToPdfDictionary (_gbbd );_gbbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_gbbd .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cadd .Vertices );_gbbd .SetIfNotNil ("\u004c\u0045",_cadd .LE );_gbbd .SetIfNotNil ("\u0042\u0053",_cadd .BS );_gbbd .SetIfNotNil ("\u0049\u0043",_cadd .IC );_gbbd .SetIfNotNil ("\u0042\u0045",_cadd .BE );
_gbbd .SetIfNotNil ("\u0049\u0054",_cadd .IT );_gbbd .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cadd .Measure );return _cbc ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_aggfc *PdfPageResources )GetColorspaceByName (keyName _ab .PdfObjectName )(PdfColorspace ,bool ){_cgcee ,_cffac :=_aggfc .GetColorspaces ();if _cffac !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_cffac );
return nil ,false ;};if _cgcee ==nil {return nil ,false ;};_afbgd ,_debga :=_cgcee .Colorspaces [string (keyName )];if !_debga {return nil ,false ;};return _afbgd ,true ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_cbdaf *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _cbdaf ._dgbge .(*PdfTilingPattern );};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);func _deed (_bgfga *PdfField )[]*PdfField {_decfd :=[]*PdfField {_bgfga };
for _ ,_feag :=range _bgfga .Kids {_decfd =append (_decfd ,_deed (_feag )...);};return _decfd ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_ab .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_feee *_ab .PdfIndirectObject ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};func _dgfe (_cdae _ab .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_fa .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_cdae .String (),_cdae );
_fffaa :=NewPdfColorspaceSpecialPattern ();if _bbbgg ,_faef :=_cdae .(*_ab .PdfIndirectObject );_faef {_fffaa ._ebb =_bbbgg ;};_cdae =_ab .TraceToDirectObject (_cdae );if _aebd ,_abff :=_cdae .(*_ab .PdfObjectName );_abff {if *_aebd !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_f .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _fffaa ,nil ;};_dfca ,_cgbe :=_cdae .(*_ab .PdfObjectArray );if !_cgbe {_fa .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_cdae );
return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _dfca .Len ()!=1&&_dfca .Len ()!=2{_fa .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_dfca );
return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_cdae =_dfca .Get (0);if _daggd ,_ffbg :=_cdae .(*_ab .PdfObjectName );_ffbg {if *_daggd !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_fa .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_daggd );
return nil ,_f .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _dfca .Len ()> 1{_cdae =_dfca .Get (1);_cdae =_ab .TraceToDirectObject (_cdae );_ffgac ,_aeab :=NewPdfColorspaceFromPdfObject (_cdae );if _aeab !=nil {return nil ,_aeab ;
};_fffaa .UnderlyingCS =_ffgac ;};_fa .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_fffaa .UnderlyingCS );
return _fffaa ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bgb *PdfAction )GetContainingPdfObject ()_ab .PdfObject {return _bgb ._cef };func (_gfdf PdfOutputIntentType )String ()string {switch _gfdf {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412";
case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413";case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";
};};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_cdbc *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// HasExtGState checks if ExtGState name is available.
func (_dgcbb *PdfPage )HasExtGState (name _ab .PdfObjectName )bool {if _dgcbb .Resources ==nil {return false ;};if _dgcbb .Resources .ExtGState ==nil {return false ;};_bedgf ,_affg :=_ab .TraceToDirectObject (_dgcbb .Resources .ExtGState ).(*_ab .PdfObjectDictionary );
if !_affg {_fa .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_ab .TraceToDirectObject (_dgcbb .Resources .ExtGState ));
return false ;};_bdbfc :=_bedgf .Get (name );_ebcbf :=_bdbfc !=nil ;return _ebcbf ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_ab .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_dcaf *_ab .PdfIndirectObject ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _ab .PdfObject )(*PdfFont ,error ){return _aagba (fontObj ,true )};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_ab .PdfIndirectObject )*PdfOutlineItem {_ccgcd :=PdfOutlineItem {};_ccgcd ._caad =&_ccgcd ;_ccgcd .Title =_ab .MakeString (title );_abbda :=_ab .MakeArray ();_abbda .Append (page );_abbda .Append (_ab .MakeName ("\u0046\u0069\u0074"));
_ccgcd .Dest =_abbda ;return &_ccgcd ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_aaee *PdfColorspaceLab )ColorFromPdfObjects (objects []_ab .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdeg ,_bbec :=_ab .GetNumbersAsFloat (objects );
if _bbec !=nil {return nil ,_bbec ;};return _aaee .ColorFromFloats (_fdeg );};func (_gcaf *PdfAppender )replaceObject (_eaf ,_eeag _ab .PdfObject ){switch _cafe :=_eaf .(type ){case *_ab .PdfIndirectObject :_gcaf ._fddbc [_eeag ]=_cafe .ObjectNumber ;case *_ab .PdfObjectStream :_gcaf ._fddbc [_eeag ]=_cafe .ObjectNumber ;
};};func _bcgad (_bdgdf _ab .PdfObject )(*PdfPageResourcesColorspaces ,error ){_fdgdbc :=&PdfPageResourcesColorspaces {};if _dgggg ,_afgee :=_bdgdf .(*_ab .PdfIndirectObject );_afgee {_fdgdbc ._acfe =_dgggg ;_bdgdf =_dgggg .PdfObject ;};_gbadb ,_gegcc :=_ab .GetDict (_bdgdf );
if !_gegcc {return nil ,_ca .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_fdgdbc .Names =[]string {};_fdgdbc .Colorspaces =map[string ]PdfColorspace {};for _ ,_ggdc :=range _gbadb .Keys (){_aada :=_gbadb .Get (_ggdc );
_fdgdbc .Names =append (_fdgdbc .Names ,string (_ggdc ));_adge ,_cgfdb :=NewPdfColorspaceFromPdfObject (_aada );if _cgfdb !=nil {return nil ,_cgfdb ;};_fdgdbc .Colorspaces [string (_ggdc )]=_adge ;};return _fdgdbc ,nil ;};

// PartialName returns the partial name of the field.
func (_ebfc *PdfField )PartialName ()string {_eegga :="";if _ebfc .T !=nil {_eegga =_ebfc .T .Decoded ();}else {_fa .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _eegga ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _ab .PdfObject ;Open _ab .PdfObject ;};

// ParserMetadata gets the parser  metadata.
func (_ebag *DetailedPdfReader )ParserMetadata ()_ab .ParserMetadata {return _ebag ._ffacg };func (_badbe *fontFile )loadFromSegments (_abebc ,_fdecb []byte )error {_fa .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_abebc ),len (_fdecb ));
_dgge :=_badbe .parseASCIIPart (_abebc );if _dgge !=nil {return _dgge ;};_fa .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_badbe );if len (_fdecb )==0{return nil ;};_fa .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_badbe );
return nil ;};

// ToPdfObject implements model.PdfModel interface.
func (_ccafa *PdfOutputIntent )ToPdfObject ()_ab .PdfObject {if _ccafa ._gaabg ==nil {_ccafa ._gaabg =_ab .MakeDict ();};_gdecc :=_ccafa ._gaabg ;if _ccafa .Type !=""{_gdecc .Set ("\u0054\u0079\u0070\u0065",_ab .MakeName (_ccafa .Type ));};_gdecc .Set ("\u0053",_ab .MakeName (_ccafa .S .String ()));
if _ccafa .OutputCondition !=""{_gdecc .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_ab .MakeString (_ccafa .OutputCondition ));};_gdecc .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_ab .MakeString (_ccafa .OutputConditionIdentifier ));
_gdecc .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_ab .MakeString (_ccafa .RegistryName ));if _ccafa .Info !=""{_gdecc .Set ("\u0049\u006e\u0066\u006f",_ab .MakeString (_ccafa .Info ));};if len (_ccafa .DestOutputProfile )!=0{_dafbb ,_aaede :=_ab .MakeStream (_ccafa .DestOutputProfile ,_ab .NewFlateEncoder ());
if _aaede !=nil {_fa .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_aaede );
};_dafbb .PdfObjectDictionary .Set ("\u004e",_ab .MakeInteger (int64 (_ccafa .ColorComponents )));_ecde :=make ([]float64 ,_ccafa .ColorComponents *2);for _ccgd :=0;_ccgd < _ccafa .ColorComponents *2;_ccgd ++{_ggba :=0.0;if _ccgd %2!=0{_ggba =1.0;};_ecde [_ccgd ]=_ggba ;
};_dafbb .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_ab .MakeArrayFromFloats (_ecde ));_gdecc .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_dafbb );};return _gdecc ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_efegf []byte )(_dbdffb int ,_cgcaf error );};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_fded *DSS )ToPdfObject ()_ab .PdfObject {_gggb :=_fded ._eafcf .PdfObject .(*_ab .PdfObjectDictionary );_gggb .Clear ();_cdfe :=_ab .MakeDict ();for _dgdf ,_ccca :=range _fded .VRI {_cdfe .Set (*_ab .MakeName (_dgdf ),_ccca .ToPdfObject ());};_gggb .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_cfgdc (_fded .Certs ));
_gggb .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_cfgdc (_fded .OCSPs ));_gggb .SetIfNotNil ("\u0043\u0052\u004c\u0073",_cfgdc (_fded .CRLs ));_gggb .Set ("\u0056\u0052\u0049",_cdfe );return _fded ._eafcf ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_daacd *PdfReader )GetEncryptionMethod ()string {_edbfd :=_daacd ._gcabf .GetCrypter ();return _edbfd .String ();};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_ceab *PdfPageResources )HasFontByName (keyName _ab .PdfObjectName )bool {_ ,_adcfb :=_ceab .GetFontByName (keyName );return _adcfb ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_cacgf *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_ffce ,_decf :=color .(*PdfColorPattern );if !_decf {_fa .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _ffce .Color ==nil {return color ,nil ;};if _cacgf .UnderlyingCS ==nil {return nil ,_ca .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _cacgf .UnderlyingCS .ColorToRGB (_ffce .Color );
};func _daege (_edadce *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_edadce }};

// GetContainingPdfObject implements interface PdfModel.
func (_ffgd *PdfFilespec )GetContainingPdfObject ()_ab .PdfObject {return _ffgd ._cbaec };func _fgae (_dcfgda *_ab .PdfObjectDictionary )(*PdfShadingType3 ,error ){_fbbbc :=PdfShadingType3 {};_ebbg :=_dcfgda .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _ebbg ==nil {_fa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;
};_dccc ,_cdcea :=_ebbg .(*_ab .PdfObjectArray );if !_cdcea {_fa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ebbg );return nil ,_ab .ErrTypeError ;
};if _dccc .Len ()!=6{_fa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dccc .Len ());return nil ,ErrInvalidAttribute ;};_fbbbc .Coords =_dccc ;
if _ffeca :=_dcfgda .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ffeca !=nil {_ffeca =_ab .TraceToDirectObject (_ffeca );_ffgc ,_cacag :=_ffeca .(*_ab .PdfObjectArray );if !_cacag {_fa .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ffeca );
return nil ,_ab .ErrTypeError ;};_fbbbc .Domain =_ffgc ;};_ebbg =_dcfgda .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ebbg ==nil {_fa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fbbbc .Function =[]PdfFunction {};if _eeab ,_gdbee :=_ebbg .(*_ab .PdfObjectArray );_gdbee {for _ ,_bgffc :=range _eeab .Elements (){_cbdbe ,_ebbb :=_cbacf (_bgffc );if _ebbb !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebbb );
return nil ,_ebbb ;};_fbbbc .Function =append (_fbbbc .Function ,_cbdbe );};}else {_ccag ,_ccdf :=_cbacf (_ebbg );if _ccdf !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ccdf );
return nil ,_ccdf ;};_fbbbc .Function =append (_fbbbc .Function ,_ccag );};if _acdceb :=_dcfgda .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_acdceb !=nil {_acdceb =_ab .TraceToDirectObject (_acdceb );_fbabd ,_ddedb :=_acdceb .(*_ab .PdfObjectArray );
if !_ddedb {_fa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_acdceb );return nil ,_ab .ErrTypeError ;};if _fbabd .Len ()!=2{_fa .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fbabd .Len ());
return nil ,ErrInvalidAttribute ;};_fbbbc .Extend =_fbabd ;};return &_fbbbc ,nil ;};func (_dfdeb *PdfWriter )addObject (_babc _ab .PdfObject )bool {_aabed :=_dfdeb .hasObject (_babc );if !_aabed {_aggga :=_ab .ResolveReferencesDeep (_babc ,_dfdeb ._abgeb );
if _aggga !=nil {_fa .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_aggga );};_dfdeb ._acgcfc =append (_dfdeb ._acgcfc ,_babc );_dfdeb ._cgdbbd [_babc ]=struct{}{};return true ;};return false ;
};func (_dfcf *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};func _cdacb (_aagbf *_ab .PdfObjectDictionary )(*PdfShadingType4 ,error ){_fgeeb :=PdfShadingType4 {};_ggcg :=_aagbf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _ggcg ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fggfbg ,_ccdca :=_ggcg .(*_ab .PdfObjectInteger );if !_ccdca {_fa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ggcg );
return nil ,_ab .ErrTypeError ;};_fgeeb .BitsPerCoordinate =_fggfbg ;_ggcg =_aagbf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ggcg ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fggfbg ,_ccdca =_ggcg .(*_ab .PdfObjectInteger );if !_ccdca {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ggcg );
return nil ,_ab .ErrTypeError ;};_fgeeb .BitsPerComponent =_fggfbg ;_ggcg =_aagbf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ggcg ==nil {_fa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fggfbg ,_ccdca =_ggcg .(*_ab .PdfObjectInteger );if !_ccdca {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ggcg );
return nil ,_ab .ErrTypeError ;};_fgeeb .BitsPerComponent =_fggfbg ;_ggcg =_aagbf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ggcg ==nil {_fa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dabdg ,_ccdca :=_ggcg .(*_ab .PdfObjectArray );if !_ccdca {_fa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggcg );
return nil ,_ab .ErrTypeError ;};_fgeeb .Decode =_dabdg ;_ggcg =_aagbf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ggcg ==nil {_fa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fgeeb .Function =[]PdfFunction {};if _cgcff ,_bcefeg :=_ggcg .(*_ab .PdfObjectArray );_bcefeg {for _ ,_fgafdc :=range _cgcff .Elements (){_geegc ,_fcbf :=_cbacf (_fgafdc );if _fcbf !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fcbf );
return nil ,_fcbf ;};_fgeeb .Function =append (_fgeeb .Function ,_geegc );};}else {_eddc ,_geace :=_cbacf (_ggcg );if _geace !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_geace );
return nil ,_geace ;};_fgeeb .Function =append (_fgeeb .Function ,_eddc );};return &_fgeeb ,nil ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_gf :=NewPdfAction ();_ef :=&PdfActionSound {};_ef .PdfAction =_gf ;_gf .SetContext (_ef );return _ef ;};

// Encoder returns the font's text encoder.
func (_gbbe *PdfFont )Encoder ()_dc .TextEncoder {_dfgfg :=_gbbe .actualFont ();if _dfgfg ==nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_gbbe ._cgdec );
return nil ;};return _dfgfg .Encoder ();};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_bcfe :=&PdfColorspaceSpecialSeparation {};return _bcfe ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// DetailedFlags set if parsed PDF file should contain meta information for the PDF/A verifier.
DetailedFlags bool ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_egfe *PdfColorCalRGB )GetNumComponents ()int {return 3};

// ToPdfObject implements interface PdfModel.
func (_dcb *PdfActionLaunch )ToPdfObject ()_ab .PdfObject {_dcb .PdfAction .ToPdfObject ();_aba :=_dcb ._cef ;_ade :=_aba .PdfObject .(*_ab .PdfObjectDictionary );_ade .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeLaunch )));if _dcb .F !=nil {_ade .Set ("\u0046",_dcb .F .ToPdfObject ());
};_ade .SetIfNotNil ("\u0057\u0069\u006e",_dcb .Win );_ade .SetIfNotNil ("\u004d\u0061\u0063",_dcb .Mac );_ade .SetIfNotNil ("\u0055\u006e\u0069\u0078",_dcb .Unix );_ade .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_dcb .NewWindow );return _aba ;
};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_eefb *_ab .PdfIndirectObject ;_cdcee *_ab .PdfIndirectObject ;_dcdcd map[_ab .PdfObject ]struct{};_acgcfc []_ab .PdfObject ;_cgdbbd map[_ab .PdfObject ]struct{};_ecebc []*_ab .PdfIndirectObject ;_ccdcae *PdfOutlineTreeNode ;_cbfaag *_ab .PdfObjectDictionary ;
_ccbgf []_ab .PdfObject ;_bfedb *_ab .PdfIndirectObject ;_ccgad *_e .Writer ;_abbce int64 ;_gegac error ;_ggfge *_ab .PdfCrypt ;_dcfe *_ab .PdfObjectDictionary ;_faaaf *_ab .PdfIndirectObject ;_gbabcf *_ab .PdfObjectArray ;_ecfdb _ab .Version ;_ggccg *bool ;
_gcga map[_ab .PdfObject ][]*_ab .PdfObjectDictionary ;_eedgg *PdfAcroForm ;_ggdcg Optimizer ;_degdd StandardApplier ;_daaee map[int ]crossReference ;_dgdae int64 ;ObjNumOffset int ;_cbeff bool ;_ccfdd _ab .XrefTable ;_ebcdbb int64 ;_dbaac int64 ;_fgggfa map[_ab .PdfObject ]int64 ;
_abgeb map[_ab .PdfObject ]struct{};_bbadf string ;_bagbd []*PdfOutputIntent ;_gcgg bool ;_fafda ,_aadca string ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_decd *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_dbeab :=_fdc .NewReader (img .getBase ());_fbde :=_cac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_decd .AlternateSpace .GetNumComponents (),nil ,img ._dbdfad ,nil );
_ceaeb :=_fdc .NewWriter (_fbde );_dgbf :=_ced .Pow (2,float64 (img .BitsPerComponent ))-1;_fa .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_fa .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_decd .TintTransform );_cbfaa :=_decd .AlternateSpace .DecodeArray ();var (_cced uint32 ;_fadeb error ;);for {_cced ,_fadeb =_dbeab .ReadSample ();
if _fadeb ==_fb .EOF {break ;};if _fadeb !=nil {return img ,_fadeb ;};_efgf :=float64 (_cced )/_dgbf ;_bgbd ,_bgec :=_decd .TintTransform .Evaluate ([]float64 {_efgf });if _bgec !=nil {return img ,_bgec ;};for _decc ,_ceca :=range _bgbd {_aecab :=_cac .LinearInterpolate (_ceca ,_cbfaa [_decc *2],_cbfaa [_decc *2+1],0,1);
if _bgec =_ceaeb .WriteSample (uint32 (_aecab *_dgbf ));_bgec !=nil {return img ,_bgec ;};};};return _decd .AlternateSpace .ImageToRGB (_bgbec (&_fbde ));};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _ab .PdfObject ;IsMap _ab .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cbcc *PdfAnnotationMovie )ToPdfObject ()_ab .PdfObject {_cbcc .PdfAnnotation .ToPdfObject ();_ggb :=_cbcc ._ddg ;_bcac :=_ggb .PdfObject .(*_ab .PdfObjectDictionary );_bcac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u004d\u006f\u0076i\u0065"));
_bcac .SetIfNotNil ("\u0054",_cbcc .T );_bcac .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_cbcc .Movie );_bcac .SetIfNotNil ("\u0041",_cbcc .A );return _ggb ;};func _fbdag (_bcdgd *_ab .PdfObjectDictionary )(*PdfShadingType2 ,error ){_bdfee :=PdfShadingType2 {};
_eebed :=_bcdgd .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _eebed ==nil {_fa .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_ffdgf ,_eaeff :=_eebed .(*_ab .PdfObjectArray );if !_eaeff {_fa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eebed );
return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _ffdgf .Len ()!=4{_fa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ffdgf .Len ());
return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_bdfee .Coords =_ffdgf ;if _gdfg :=_bcdgd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gdfg !=nil {_gdfg =_ab .TraceToDirectObject (_gdfg );
_fabbb ,_bcaeb :=_gdfg .(*_ab .PdfObjectArray );if !_bcaeb {_fa .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gdfg );return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bdfee .Domain =_fabbb ;};_eebed =_bcdgd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _eebed ==nil {_fa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bdfee .Function =[]PdfFunction {};if _caaa ,_gaddb :=_eebed .(*_ab .PdfObjectArray );_gaddb {for _ ,_bdbcdf :=range _caaa .Elements (){_ebac ,_dadb :=_cbacf (_bdbcdf );if _dadb !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dadb );
return nil ,_dadb ;};_bdfee .Function =append (_bdfee .Function ,_ebac );};}else {_ebbfd ,_gffdd :=_cbacf (_eebed );if _gffdd !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gffdd );
return nil ,_gffdd ;};_bdfee .Function =append (_bdfee .Function ,_ebbfd );};if _adggg :=_bcdgd .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_adggg !=nil {_adggg =_ab .TraceToDirectObject (_adggg );_dbfdg ,_gabbd :=_adggg .(*_ab .PdfObjectArray );if !_gabbd {_fa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_adggg );
return nil ,_ab .ErrTypeError ;};if _dbfdg .Len ()!=2{_fa .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dbfdg .Len ());return nil ,ErrInvalidAttribute ;
};_bdfee .Extend =_dbfdg ;};return &_bdfee ,nil ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _ab .PdfObject )(*PdfFilespec ,error ){_ffed :=&PdfFilespec {};var _dgcg *_ab .PdfObjectDictionary ;if _gagd ,_fccaa :=_ab .GetIndirect (obj );_fccaa {_ffed ._cbaec =_gagd ;_dcfdff ,_cdge :=_ab .GetDict (_gagd .PdfObject );
if !_cdge {_fa .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_ab .ErrTypeError ;};_dgcg =_dcfdff ;}else if _gfbbc ,_gegfc :=_ab .GetDict (obj );
_gegfc {_ffed ._cbaec =_gfbbc ;_dgcg =_gfbbc ;}else {_fa .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_ab .ErrTypeError ;};if _dgcg ==nil {_fa .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ca .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _cbdb :=_dgcg .Get ("\u0054\u0079\u0070\u0065");_cbdb !=nil {_begf ,_fdcgd :=_cbdb .(*_ab .PdfObjectName );if !_fdcgd {_fa .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_cbdb );
}else {if *_begf !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_fa .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_begf );
};};};if _gfad :=_dgcg .Get ("\u0046\u0053");_gfad !=nil {_ffed .FS =_gfad ;};if _faada :=_dgcg .Get ("\u0046");_faada !=nil {_ffed .F =_faada ;};if _agba :=_dgcg .Get ("\u0055\u0046");_agba !=nil {_ffed .UF =_agba ;};if _faaa :=_dgcg .Get ("\u0044\u004f\u0053");
_faaa !=nil {_ffed .DOS =_faaa ;};if _fbdfg :=_dgcg .Get ("\u004d\u0061\u0063");_fbdfg !=nil {_ffed .Mac =_fbdfg ;};if _cfefg :=_dgcg .Get ("\u0055\u006e\u0069\u0078");_cfefg !=nil {_ffed .Unix =_cfefg ;};if _fedcb :=_dgcg .Get ("\u0049\u0044");_fedcb !=nil {_ffed .ID =_fedcb ;
};if _eadbg :=_dgcg .Get ("\u0056");_eadbg !=nil {_ffed .V =_eadbg ;};if _fede :=_dgcg .Get ("\u0045\u0046");_fede !=nil {_ffed .EF =_fede ;};if _dcfcd :=_dgcg .Get ("\u0052\u0046");_dcfcd !=nil {_ffed .RF =_dcfcd ;};if _fgcdg :=_dgcg .Get ("\u0044\u0065\u0073\u0063");
_fgcdg !=nil {_ffed .Desc =_fgcdg ;};if _acea :=_dgcg .Get ("\u0043\u0049");_acea !=nil {_ffed .CI =_acea ;};return _ffed ,nil ;};func (_gbgd *PdfReader )newPdfAnnotationFromIndirectObject (_bee *_ab .PdfIndirectObject )(*PdfAnnotation ,error ){_aegd ,_ffga :=_bee .PdfObject .(*_ab .PdfObjectDictionary );
if !_ffga {return nil ,_f .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_gbgd ._ebda .GetModelFromPrimitive (_aegd );model !=nil {_dbd ,_ffa :=model .(*PdfAnnotation );if !_ffa {return nil ,_f .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _dbd ,nil ;};_ece :=&PdfAnnotation {};_ece ._ddg =_bee ;_gbgd ._ebda .Register (_aegd ,_ece );if _gde :=_aegd .Get ("\u0054\u0079\u0070\u0065");_gde !=nil {_aaa ,_eadb :=_gde .(*_ab .PdfObjectName );if !_eadb {_fa .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gde );
}else {if *_aaa !="\u0041\u006e\u006eo\u0074"{_fa .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_aaa );};};};if _egab :=_aegd .Get ("\u0052\u0065\u0063\u0074");
_egab !=nil {_ece .Rect =_egab ;};if _fecg :=_aegd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_fecg !=nil {_ece .Contents =_fecg ;};if _egd :=_aegd .Get ("\u0050");_egd !=nil {_ece .P =_egd ;};if _dfgf :=_aegd .Get ("\u004e\u004d");_dfgf !=nil {_ece .NM =_dfgf ;
};if _aebg :=_aegd .Get ("\u004d");_aebg !=nil {_ece .M =_aebg ;};if _accg :=_aegd .Get ("\u0046");_accg !=nil {_ece .F =_accg ;};if _fab :=_aegd .Get ("\u0041\u0050");_fab !=nil {_ece .AP =_fab ;};if _cggc :=_aegd .Get ("\u0041\u0053");_cggc !=nil {_ece .AS =_cggc ;
};if _dba :=_aegd .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_dba !=nil {_ece .Border =_dba ;};if _ddac :=_aegd .Get ("\u0043");_ddac !=nil {_ece .C =_ddac ;};if _dbcd :=_aegd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_dbcd !=nil {_ece .StructParent =_dbcd ;};if _egaf :=_aegd .Get ("\u004f\u0043");_egaf !=nil {_ece .OC =_egaf ;};_bbad :=_aegd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _bbad ==nil {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_ece ._aeb =nil ;return _ece ,nil ;};_abcd ,_deb :=_bbad .(*_ab .PdfObjectName );if !_deb {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bbad );
return nil ,_f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_bbad );};switch *_abcd {case "\u0054\u0065\u0078\u0074":_baec ,_gcc :=_gbgd .newPdfAnnotationTextFromDict (_aegd );
if _gcc !=nil {return nil ,_gcc ;};_baec .PdfAnnotation =_ece ;_ece ._aeb =_baec ;return _ece ,nil ;case "\u004c\u0069\u006e\u006b":_dgc ,_fcc :=_gbgd .newPdfAnnotationLinkFromDict (_aegd );if _fcc !=nil {return nil ,_fcc ;};_dgc .PdfAnnotation =_ece ;
_ece ._aeb =_dgc ;return _ece ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_bced ,_ecc :=_gbgd .newPdfAnnotationFreeTextFromDict (_aegd );if _ecc !=nil {return nil ,_ecc ;};_bced .PdfAnnotation =_ece ;_ece ._aeb =_bced ;return _ece ,nil ;
case "\u004c\u0069\u006e\u0065":_eaba ,_ecef :=_gbgd .newPdfAnnotationLineFromDict (_aegd );if _ecef !=nil {return nil ,_ecef ;};_eaba .PdfAnnotation =_ece ;_ece ._aeb =_eaba ;_fa .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_ece ,_ece );
_fa .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_eaba ,_eaba );_fa .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_eaba .PdfAnnotationMarkup ,_eaba .PdfAnnotationMarkup );
return _ece ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_dgb ,_aff :=_gbgd .newPdfAnnotationSquareFromDict (_aegd );if _aff !=nil {return nil ,_aff ;};_dgb .PdfAnnotation =_ece ;_ece ._aeb =_dgb ;return _ece ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_dfb ,_geb :=_gbgd .newPdfAnnotationCircleFromDict (_aegd );
if _geb !=nil {return nil ,_geb ;};_dfb .PdfAnnotation =_ece ;_ece ._aeb =_dfb ;return _ece ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_eeg ,_cae :=_gbgd .newPdfAnnotationPolygonFromDict (_aegd );if _cae !=nil {return nil ,_cae ;};_eeg .PdfAnnotation =_ece ;
_ece ._aeb =_eeg ;return _ece ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_aca ,_bgcdg :=_gbgd .newPdfAnnotationPolyLineFromDict (_aegd );if _bgcdg !=nil {return nil ,_bgcdg ;};_aca .PdfAnnotation =_ece ;_ece ._aeb =_aca ;return _ece ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_ggda ,_fbef :=_gbgd .newPdfAnnotationHighlightFromDict (_aegd );if _fbef !=nil {return nil ,_fbef ;};_ggda .PdfAnnotation =_ece ;_ece ._aeb =_ggda ;return _ece ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_abcda ,_ded :=_gbgd .newPdfAnnotationUnderlineFromDict (_aegd );
if _ded !=nil {return nil ,_ded ;};_abcda .PdfAnnotation =_ece ;_ece ._aeb =_abcda ;return _ece ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_gdb ,_bgca :=_gbgd .newPdfAnnotationSquigglyFromDict (_aegd );if _bgca !=nil {return nil ,_bgca ;
};_gdb .PdfAnnotation =_ece ;_ece ._aeb =_gdb ;return _ece ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_bdee ,_fbb :=_gbgd .newPdfAnnotationStrikeOut (_aegd );if _fbb !=nil {return nil ,_fbb ;};_bdee .PdfAnnotation =_ece ;_ece ._aeb =_bdee ;
return _ece ,nil ;case "\u0043\u0061\u0072e\u0074":_gbb ,_acca :=_gbgd .newPdfAnnotationCaretFromDict (_aegd );if _acca !=nil {return nil ,_acca ;};_gbb .PdfAnnotation =_ece ;_ece ._aeb =_gbb ;return _ece ,nil ;case "\u0053\u0074\u0061m\u0070":_efd ,_bbbc :=_gbgd .newPdfAnnotationStampFromDict (_aegd );
if _bbbc !=nil {return nil ,_bbbc ;};_efd .PdfAnnotation =_ece ;_ece ._aeb =_efd ;return _ece ,nil ;case "\u0049\u006e\u006b":_ffdc ,_afad :=_gbgd .newPdfAnnotationInkFromDict (_aegd );if _afad !=nil {return nil ,_afad ;};_ffdc .PdfAnnotation =_ece ;_ece ._aeb =_ffdc ;
return _ece ,nil ;case "\u0050\u006f\u0070u\u0070":_adgg ,_gad :=_gbgd .newPdfAnnotationPopupFromDict (_aegd );if _gad !=nil {return nil ,_gad ;};_adgg .PdfAnnotation =_ece ;_ece ._aeb =_adgg ;return _ece ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_cfe ,_cabcc :=_gbgd .newPdfAnnotationFileAttachmentFromDict (_aegd );
if _cabcc !=nil {return nil ,_cabcc ;};_cfe .PdfAnnotation =_ece ;_ece ._aeb =_cfe ;return _ece ,nil ;case "\u0053\u006f\u0075n\u0064":_bdfa ,_cgfg :=_gbgd .newPdfAnnotationSoundFromDict (_aegd );if _cgfg !=nil {return nil ,_cgfg ;};_bdfa .PdfAnnotation =_ece ;
_ece ._aeb =_bdfa ;return _ece ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_feda ,_adad :=_gbgd .newPdfAnnotationRichMediaFromDict (_aegd );if _adad !=nil {return nil ,_adad ;};_feda .PdfAnnotation =_ece ;_ece ._aeb =_feda ;return _ece ,nil ;
case "\u004d\u006f\u0076i\u0065":_baf ,_agag :=_gbgd .newPdfAnnotationMovieFromDict (_aegd );if _agag !=nil {return nil ,_agag ;};_baf .PdfAnnotation =_ece ;_ece ._aeb =_baf ;return _ece ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_dfd ,_fffd :=_gbgd .newPdfAnnotationScreenFromDict (_aegd );
if _fffd !=nil {return nil ,_fffd ;};_dfd .PdfAnnotation =_ece ;_ece ._aeb =_dfd ;return _ece ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_fea ,_adca :=_gbgd .newPdfAnnotationWidgetFromDict (_aegd );if _adca !=nil {return nil ,_adca ;};_fea .PdfAnnotation =_ece ;
_ece ._aeb =_fea ;return _ece ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_fafe ,_fddb :=_gbgd .newPdfAnnotationPrinterMarkFromDict (_aegd );if _fddb !=nil {return nil ,_fddb ;};_fafe .PdfAnnotation =_ece ;_ece ._aeb =_fafe ;
return _ece ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_bfab ,_cdec :=_gbgd .newPdfAnnotationTrapNetFromDict (_aegd );if _cdec !=nil {return nil ,_cdec ;};_bfab .PdfAnnotation =_ece ;_ece ._aeb =_bfab ;return _ece ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_ebad ,_cgb :=_gbgd .newPdfAnnotationWatermarkFromDict (_aegd );
if _cgb !=nil {return nil ,_cgb ;};_ebad .PdfAnnotation =_ece ;_ece ._aeb =_ebad ;return _ece ,nil ;case "\u0033\u0044":_cdeb ,_beeg :=_gbgd .newPdfAnnotation3DFromDict (_aegd );if _beeg !=nil {return nil ,_beeg ;};_cdeb .PdfAnnotation =_ece ;_ece ._aeb =_cdeb ;
return _ece ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_fbdf ,_bfde :=_gbgd .newPdfAnnotationProjectionFromDict (_aegd );if _bfde !=nil {return nil ,_bfde ;};_fbdf .PdfAnnotation =_ece ;_ece ._aeb =_fbdf ;return _ece ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_bec ,_beeb :=_gbgd .newPdfAnnotationRedactFromDict (_aegd );if _beeb !=nil {return nil ,_beeb ;};_bec .PdfAnnotation =_ece ;_ece ._aeb =_bec ;return _ece ,nil ;};_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_abcd );
return nil ,nil ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_ddd *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_fa .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_fa .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_fa .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_fa .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_fgggf ,_baaf :=_cac .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._dbdfad ,img ._aaefg );if _baaf !=nil {return Image {},_baaf ;};_cgde ,_baaf :=_cac .NRGBAConverter .Convert (_fgggf );
if _baaf !=nil {return Image {},_baaf ;};return _bgbec (_cgde .Base ()),nil ;};var _fcdb =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};
func _dbfe (_ecacf StdFontName )(pdfFontSimple ,error ){_bacd ,_ccfce :=_bc .NewStdFontByName (_ecacf );if !_ccfce {return pdfFontSimple {},ErrFontNotSupported ;};_dcfgde :=_abffe (_bacd );return _dcfgde ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_cacgc *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_ab .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efdd ,_cdgd :=_ab .GetNumbersAsFloat (objects );
if _cdgd !=nil {return nil ,_cdgd ;};return _cacgc .ColorFromFloats (_efdd );};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_geadd *Image )ToGoImage ()(_ga .Image ,error ){_fa .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_dbda ,_afcc :=_cac .NewImage (int (_geadd .Width ),int (_geadd .Height ),int (_geadd .BitsPerComponent ),_geadd .ColorComponents ,_geadd .Data ,_geadd ._dbdfad ,_geadd ._aaefg );
if _afcc !=nil {return nil ,_afcc ;};return _dbda ,nil ;};func _eedc (_gagbf *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_gagbf }};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_ffeec DefaultImageHandler )NewGrayImageFromGoImage (goimg _ga .Image )(*Image ,error ){_gcac :=goimg .Bounds ();_caabbf :=&Image {Width :int64 (_gcac .Dx ()),Height :int64 (_gcac .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _ffddc :=goimg .(type ){case *_ga .Gray :if len (_ffddc .Pix )!=_gcac .Dx ()*_gcac .Dy (){_gbfb ,_aedad :=_cac .GrayConverter .Convert (goimg );
if _aedad !=nil {return nil ,_aedad ;};_caabbf .Data =_gbfb .Pix ();}else {_caabbf .Data =_ffddc .Pix ;};case *_ga .Gray16 :_caabbf .BitsPerComponent =16;if len (_ffddc .Pix )!=_gcac .Dx ()*_gcac .Dy ()*2{_agcad ,_fgafdd :=_cac .Gray16Converter .Convert (goimg );
if _fgafdd !=nil {return nil ,_fgafdd ;};_caabbf .Data =_agcad .Pix ();}else {_caabbf .Data =_ffddc .Pix ;};case _cac .Image :_aeeba :=_ffddc .Base ();if _aeeba .ColorComponents ==1{_caabbf .BitsPerComponent =int64 (_aeeba .BitsPerComponent );_caabbf .Data =_aeeba .Data ;
return _caabbf ,nil ;};_ddfbc ,_ceagf :=_cac .GrayConverter .Convert (goimg );if _ceagf !=nil {return nil ,_ceagf ;};_caabbf .Data =_ddfbc .Pix ();default:_cfcgc ,_gcec :=_cac .GrayConverter .Convert (goimg );if _gcec !=nil {return nil ,_gcec ;};_caabbf .Data =_cfcgc .Pix ();
};return _caabbf ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_abee *PdfColorspaceSpecialSeparation )ToPdfObject ()_ab .PdfObject {_aagee :=_ab .MakeArray (_ab .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_aagee .Append (_abee .ColorantName );_aagee .Append (_abee .AlternateSpace .ToPdfObject ());
_aagee .Append (_abee .TintTransform .ToPdfObject ());if _abee ._dcaf !=nil {_abee ._dcaf .PdfObject =_aagee ;return _abee ._dcaf ;};return _aagee ;};

// Items returns all children outline items.
func (_edbee *OutlineItem )Items ()[]*OutlineItem {return _edbee .Entries };func _gbdgd (_gafae *XObjectImage )error {if _gafae .SMask ==nil {return nil ;};_dggca ,_fbgeef :=_gafae .SMask .(*_ab .PdfObjectStream );if !_fbgeef {_fa .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _ab .ErrTypeError ;};_gdffae :=_dggca .PdfObjectDictionary ;_cdgfc :=_gdffae .Get ("\u004d\u0061\u0074t\u0065");if _cdgfc ==nil {return nil ;};_agffa ,_bgged :=_ddaeed (_cdgfc .(*_ab .PdfObjectArray ));if _bgged !=nil {return _bgged ;};_bgdc :=_ab .MakeArrayFromFloats ([]float64 {_agffa });
_gdffae .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_bgdc );return nil ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_dedef *PdfTilingPattern )ToPdfObject ()_ab .PdfObject {_dedef .PdfPattern .ToPdfObject ();_edbf :=_dedef .getDict ();if _dedef .PaintType !=nil {_edbf .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_dedef .PaintType );};if _dedef .TilingType !=nil {_edbf .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_dedef .TilingType );
};if _dedef .BBox !=nil {_edbf .Set ("\u0042\u0042\u006f\u0078",_dedef .BBox .ToPdfObject ());};if _dedef .XStep !=nil {_edbf .Set ("\u0058\u0053\u0074e\u0070",_dedef .XStep );};if _dedef .YStep !=nil {_edbf .Set ("\u0059\u0053\u0074e\u0070",_dedef .YStep );
};if _dedef .Resources !=nil {_edbf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dedef .Resources .ToPdfObject ());};if _dedef .Matrix !=nil {_edbf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dedef .Matrix );};return _dedef ._cafaf ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_ccdgd *PdfFieldButton )IsRadio ()bool {return _ccdgd .GetType ()==ButtonTypeRadio };

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_acgg :=&PdfFilespec {};_acgg ._cbaec =_ab .MakeIndirectObject (_ab .MakeDict ());return _acgg ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bggcc *PdfSignature )GetContainingPdfObject ()_ab .PdfObject {return _bggcc ._eacgg };

// ToPdfObject implements interface PdfModel.
func (_fgea *PdfActionGoTo3DView )ToPdfObject ()_ab .PdfObject {_fgea .PdfAction .ToPdfObject ();_fgf :=_fgea ._cef ;_ffe :=_fgf .PdfObject .(*_ab .PdfObjectDictionary );_ffe .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeGoTo3DView )));_ffe .SetIfNotNil ("\u0054\u0041",_fgea .TA );
_ffe .SetIfNotNil ("\u0056",_fgea .V );return _fgf ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_ggcda *PdfPageResources )SetColorspaceByName (keyName _ab .PdfObjectName ,cs PdfColorspace )error {_ceagc ,_eedac :=_ggcda .GetColorspaces ();if _eedac !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_eedac );
return _eedac ;};if _ceagc ==nil {_ceagc =NewPdfPageResourcesColorspaces ();_ggcda .SetColorSpace (_ceagc );};_ceagc .Set (keyName ,cs );return nil ;};

// SetImage updates XObject Image with new image data.
func (_fgbfa *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_fgbfa .Filter .UpdateParams (img .GetParamsDict ());_aadcg ,_becg :=_fgbfa .Filter .EncodeBytes (img .Data );if _becg !=nil {return _becg ;};_fgbfa .Stream =_aadcg ;_fgbgf :=img .Width ;
_fgbfa .Width =&_fgbgf ;_daaeed :=img .Height ;_fgbfa .Height =&_daaeed ;_agcccf :=img .BitsPerComponent ;_fgbfa .BitsPerComponent =&_agcccf ;if cs ==nil {if img .ColorComponents ==1{_fgbfa .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_fgbfa .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_fgbfa .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ca .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_fgbfa .ColorSpace =cs ;};return nil ;
};func _gfafb (_adff *_ab .PdfObjectDictionary ,_faffe *fontCommon )(*pdfCIDFontType0 ,error ){if _faffe ._gcab !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_fa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_faffe );
return nil ,_ab .ErrRangeError ;};_agbb :=_fbebb (_faffe );_dcgag ,_ggcc :=_ab .GetDict (_adff .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ggcc {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_faffe );
return nil ,ErrRequiredAttributeMissing ;};_agbb .CIDSystemInfo =_dcgag ;_agbb .DW =_adff .Get ("\u0044\u0057");_agbb .W =_adff .Get ("\u0057");_agbb .DW2 =_adff .Get ("\u0044\u0057\u0032");_agbb .W2 =_adff .Get ("\u0057\u0032");_agbb ._dcgcd =1000.0;if _cgcf ,_ffdf :=_ab .GetNumberAsFloat (_agbb .DW );
_ffdf ==nil {_agbb ._dcgcd =_cgcf ;};_agfff ,_bdedb :=_agfdc (_agbb .W );if _bdedb !=nil {return nil ,_bdedb ;};if _agfff ==nil {_agfff =map[_dc .CharCode ]float64 {};};_agbb ._edbd =_agfff ;return _agbb ,nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_cbgdg *PdfOutlineItem )ToPdfObject ()_ab .PdfObject {_addec :=_cbgdg ._fdbca ;_fgaa :=_addec .PdfObject .(*_ab .PdfObjectDictionary );_fgaa .Set ("\u0054\u0069\u0074l\u0065",_cbgdg .Title );if _cbgdg .A !=nil {_fgaa .Set ("\u0041",_cbgdg .A );};
if _fdeca :=_fgaa .Get ("\u0053\u0045");_fdeca !=nil {_fgaa .Remove ("\u0053\u0045");};if _cbgdg .C !=nil {_fgaa .Set ("\u0043",_cbgdg .C );};if _cbgdg .Dest !=nil {_fgaa .Set ("\u0044\u0065\u0073\u0074",_cbgdg .Dest );};if _cbgdg .F !=nil {_fgaa .Set ("\u0046",_cbgdg .F );
};if _cbgdg .Count !=nil {_fgaa .Set ("\u0043\u006f\u0075n\u0074",_ab .MakeInteger (*_cbgdg .Count ));};if _cbgdg .Next !=nil {_fgaa .Set ("\u004e\u0065\u0078\u0074",_cbgdg .Next .ToPdfObject ());};if _cbgdg .First !=nil {_fgaa .Set ("\u0046\u0069\u0072s\u0074",_cbgdg .First .ToPdfObject ());
};if _cbgdg .Prev !=nil {_fgaa .Set ("\u0050\u0072\u0065\u0076",_cbgdg .Prev .GetContext ().GetContainingPdfObject ());};if _cbgdg .Last !=nil {_fgaa .Set ("\u004c\u0061\u0073\u0074",_cbgdg .Last .GetContext ().GetContainingPdfObject ());};if _cbgdg .Parent !=nil {_fgaa .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cbgdg .Parent .GetContext ().GetContainingPdfObject ());
};return _addec ;};

// ToPdfObject implements interface PdfModel.
func (_dfg *PdfActionNamed )ToPdfObject ()_ab .PdfObject {_dfg .PdfAction .ToPdfObject ();_adg :=_dfg ._cef ;_gcb :=_adg .PdfObject .(*_ab .PdfObjectDictionary );_gcb .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeNamed )));_gcb .SetIfNotNil ("\u004e",_dfg .N );
return _adg ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_gagef *PdfPage )GetAllContentStreams ()(string ,error ){_deaea ,_bcdgf :=_gagef .GetContentStreams ();if _bcdgf !=nil {return "",_bcdgf ;};return _af .Join (_deaea ,"\u0020"),nil ;};func (_begg *PdfReader )flattenFieldsWithOpts (_baagf bool ,_bcdbc FieldAppearanceGenerator ,_eedf *FieldFlattenOpts )error {if _eedf ==nil {_eedf =&FieldFlattenOpts {};
};var _bgfbb bool ;_afddc :=map[*PdfAnnotation ]bool {};{var _efgd []*PdfField ;_gbdce :=_begg .AcroForm ;if _gbdce !=nil {if _eedf .FilterFunc !=nil {_efgd =_gbdce .filteredFields (_eedf .FilterFunc ,true );_bgfbb =_gbdce .Fields !=nil &&len (*_gbdce .Fields )> 0;
}else {_efgd =_gbdce .AllFields ();};};for _ ,_gccc :=range _efgd {for _ ,_acbaf :=range _gccc .Annotations {_afddc [_acbaf .PdfAnnotation ]=_gccc .V !=nil ;if _bcdbc !=nil {_bcfef ,_dbec :=_bcdbc .GenerateAppearanceDict (_gbdce ,_gccc ,_acbaf );if _dbec !=nil {return _dbec ;
};_acbaf .AP =_bcfef ;};};};};if _baagf {for _ ,_ebgfd :=range _begg .PageList {_edeg ,_ecac :=_ebgfd .GetAnnotations ();if _ecac !=nil {return _ecac ;};for _ ,_ebefe :=range _edeg {_afddc [_ebefe ]=true ;};};};for _ ,_cede :=range _begg .PageList {var _fabcc []*PdfAnnotation ;
if _bcdbc !=nil {if _gefcg :=_bcdbc .WrapContentStream (_cede );_gefcg !=nil {return _gefcg ;};};_gcaec ,_gcbef :=_cede .GetAnnotations ();if _gcbef !=nil {return _gcbef ;};for _ ,_gcaecg :=range _gcaec {_bgfg ,_aeafa :=_afddc [_gcaecg ];if !_aeafa &&_eedf .AnnotFilterFunc !=nil {if _ ,_bdafg :=_gcaecg .GetContext ().(*PdfAnnotationWidget );
!_bdafg {_aeafa =_eedf .AnnotFilterFunc (_gcaecg );};};if !_aeafa {_fabcc =append (_fabcc ,_gcaecg );continue ;};switch _gcaecg .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_dfgg ,_adgaa ,_ccgc :=_baca (_gcaecg );if _ccgc !=nil {if !_bgfg {_fa .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_ccgc );
continue ;};if _dfgg ==nil {continue ;};_gbfgc :=_cede .Resources .GenerateXObjectName ();_cede .Resources .SetXObjectFormByName (_gbfgc ,_dfgg );_bddge :=_ced .Min (_adgaa .Llx ,_adgaa .Urx );_dbbf :=_ced .Min (_adgaa .Lly ,_adgaa .Ury );var _ccdd []string ;
_ccdd =append (_ccdd ,"\u0071");_ccdd =append (_ccdd ,_f .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_bddge ,_dbbf ));
_ccdd =append (_ccdd ,_f .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_gbfgc .String ()));_ccdd =append (_ccdd ,"\u0051");_eecfc :=_af .Join (_ccdd ,"\u000a");_ccgc =_cede .AppendContentStream (_eecfc );if _ccgc !=nil {return _ccgc ;};if _dfgg .Resources !=nil {_gafbd ,_geca :=_ab .GetDict (_dfgg .Resources .Font );
if _geca {for _ ,_ecbcd :=range _gafbd .Keys (){if !_cede .Resources .HasFontByName (_ecbcd ){_cede .Resources .SetFontByName (_ecbcd ,_gafbd .Get (_ecbcd ));};};};};};if len (_fabcc )> 0{_cede ._adccb =_fabcc ;}else {_cede ._adccb =[]*PdfAnnotation {};
};};if !_bgfbb {_begg .AcroForm =nil ;};return nil ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_dgd :=NewPdfAnnotation ();_dbce :=&PdfAnnotationStrikeOut {};_dbce .PdfAnnotation =_dgd ;_dbce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dgd .SetContext (_dbce );return _dbce ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_eabgf *PdfInfo )AddCustomInfo (name string ,value string )error {if _eabgf ._addfd ==nil {_eabgf ._addfd =_ab .MakeDict ();};if _ ,_fgfc :=_cecab [name ];_fgfc {return _f .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_eabgf ._addfd .SetIfNotNil (*_ab .MakeName (name ),_ab .MakeString (value ));return nil ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_dfcbd *pdfCIDFontType0 )ToPdfObject ()_ab .PdfObject {return _ab .MakeNull ()};func (_dfeff *Image )resampleLowBits (_abbg []uint32 ){_gdggf :=_cac .BytesPerLine (int (_dfeff .Width ),int (_dfeff .BitsPerComponent ),_dfeff .ColorComponents );_dgfab :=make ([]byte ,_dfeff .ColorComponents *_gdggf *int (_dfeff .Height ));
_adgf :=int (_dfeff .BitsPerComponent )*_dfeff .ColorComponents *int (_dfeff .Width );_ggbf :=uint8 (8);var (_dcdg ,_dcag int ;_ddccf uint32 ;);for _fbad :=0;_fbad < int (_dfeff .Height );_fbad ++{_dcag =_fbad *_gdggf ;for _cgaac :=0;_cgaac < _adgf ;_cgaac ++{_ddccf =_abbg [_dcdg ];
_ggbf -=uint8 (_dfeff .BitsPerComponent );_dgfab [_dcag ]|=byte (_ddccf )<<_ggbf ;if _ggbf ==0{_ggbf =8;_dcag ++;};_dcdg ++;};};_dfeff .Data =_dgfab ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_ab .PdfObjectString ;Author *_ab .PdfObjectString ;Subject *_ab .PdfObjectString ;Keywords *_ab .PdfObjectString ;Creator *_ab .PdfObjectString ;Producer *_ab .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_ab .PdfObjectName ;
_addfd *_ab .PdfObjectDictionary ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};func (_ceebe *PdfWriter )makeOffSetReference (_ebgbb int64 ){_bebbe :=_f .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_ebgbb );_ceebe .writeString (_bebbe );_ceebe .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");
};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _ab .StreamEncoder ;FormType _ab .PdfObject ;BBox _ab .PdfObject ;Matrix _ab .PdfObject ;Resources *PdfPageResources ;Group _ab .PdfObject ;Ref _ab .PdfObject ;MetaData _ab .PdfObject ;PieceInfo _ab .PdfObject ;LastModified _ab .PdfObject ;
StructParent _ab .PdfObject ;StructParents _ab .PdfObject ;OPI _ab .PdfObject ;OC _ab .PdfObject ;Name _ab .PdfObject ;

// Stream data.
Stream []byte ;_bedc *_ab .PdfObjectStream ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_abfa *DSS )GetContainingPdfObject ()_ab .PdfObject {return _abfa ._eafcf };

// AllFields returns a flattened list of all fields in the form.
func (_fgca *PdfAcroForm )AllFields ()[]*PdfField {if _fgca ==nil {return nil ;};var _gefed []*PdfField ;if _fgca .Fields !=nil {for _ ,_bbea :=range *_fgca .Fields {_gefed =append (_gefed ,_deed (_bbea )...);};};return _gefed ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_ee :=NewPdfAction ();_bfe :=&PdfActionResetForm {};_bfe .PdfAction =_ee ;_ee .SetContext (_bfe );return _bfe ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_dfbge *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func (_acd *PdfReader )newPdfActionMovieFromDict (_ffg *_ab .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_ffg .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_ffg .Get ("\u0054"),Operation :_ffg .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};func _abfcf (_ecbac *_ab .PdfObjectDictionary )(*PdfShadingType5 ,error ){_bcgca :=PdfShadingType5 {};_agcbb :=_ecbac .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _agcbb ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dgda ,_edgga :=_agcbb .(*_ab .PdfObjectInteger );if !_edgga {_fa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_agcbb );
return nil ,_ab .ErrTypeError ;};_bcgca .BitsPerCoordinate =_dgda ;_agcbb =_ecbac .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _agcbb ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dgda ,_edgga =_agcbb .(*_ab .PdfObjectInteger );if !_edgga {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_agcbb );
return nil ,_ab .ErrTypeError ;};_bcgca .BitsPerComponent =_dgda ;_agcbb =_ecbac .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _agcbb ==nil {_fa .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_dgda ,_edgga =_agcbb .(*_ab .PdfObjectInteger );if !_edgga {_fa .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_agcbb );
return nil ,_ab .ErrTypeError ;};_bcgca .VerticesPerRow =_dgda ;_agcbb =_ecbac .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _agcbb ==nil {_fa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_beffcc ,_edgga :=_agcbb .(*_ab .PdfObjectArray );if !_edgga {_fa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_agcbb );
return nil ,_ab .ErrTypeError ;};_bcgca .Decode =_beffcc ;if _ebga :=_ecbac .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ebga !=nil {_bcgca .Function =[]PdfFunction {};if _fafbc ,_fcbff :=_ebga .(*_ab .PdfObjectArray );_fcbff {for _ ,_eedb :=range _fafbc .Elements (){_accde ,_agccc :=_cbacf (_eedb );
if _agccc !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_agccc );return nil ,_agccc ;};_bcgca .Function =append (_bcgca .Function ,_accde );
};}else {_bccda ,_caefg :=_cbacf (_ebga );if _caefg !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_caefg );return nil ,_caefg ;
};_bcgca .Function =append (_bcgca .Function ,_bccda );};};return &_bcgca ,nil ;};func _dfcfbc (_gagaa *PdfField ,_gcgd _ab .PdfObject ){for _ ,_beec :=range _gagaa .Annotations {_beec .AS =_gcgd ;_beec .ToPdfObject ();};};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_ab .PdfObjectInteger ;BitsPerComponent *_ab .PdfObjectInteger ;BitsPerFlag *_ab .PdfObjectInteger ;Decode *_ab .PdfObjectArray ;Function []PdfFunction ;};func (_cggg *PdfAppender )mergeResources (_ebaa ,_fabg _ab .PdfObject ,_edff map[_ab .PdfObjectName ]_ab .PdfObjectName )_ab .PdfObject {if _fabg ==nil &&_ebaa ==nil {return nil ;
};if _fabg ==nil {return _ebaa ;};_adcd ,_bggbb :=_ab .GetDict (_fabg );if !_bggbb {return _ebaa ;};if _ebaa ==nil {_dgg :=_ab .MakeDict ();_dgg .Merge (_adcd );return _fabg ;};_ggbg ,_bggbb :=_ab .GetDict (_ebaa );if !_bggbb {_fa .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_ggbg =_ab .MakeDict ();};for _ ,_ffgg :=range _adcd .Keys (){if _ecbfb ,_ecfc :=_edff [_ffgg ];_ecfc {_ggbg .Set (_ecbfb ,_adcd .Get (_ffgg ));}else {_ggbg .Set (_ffgg ,_adcd .Get (_ffgg ));};};return _ggbg ;};func _gbgdc (_fdcgf _ab .PdfObject ,_gdbff *fontCommon )(*_egc .CMap ,error ){_eddg ,_dbfa :=_ab .GetStream (_fdcgf );
if !_dbfa {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_fdcgf );
return nil ,_ab .ErrTypeError ;};_efbg ,_dafbc :=_ab .DecodeStream (_eddg );if _dafbc !=nil {return nil ,_dafbc ;};_cbgga ,_dafbc :=_egc .LoadCmapFromData (_efbg ,!_gdbff .isCIDFont ());if _dafbc !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_eddg .ObjectNumber ,_dafbc );
};return _cbgga ,_dafbc ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_aaeb *_ab .PdfIndirectObject ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_afcf *PdfInfo )ToPdfObject ()_ab .PdfObject {_feac :=_ab .MakeDict ();_feac .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_afcf .Title );_feac .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_afcf .Author );_feac .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_afcf .Subject );
_feac .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_afcf .Keywords );_feac .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_afcf .Creator );_feac .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_afcf .Producer );
_feac .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_afcf .Trapped );if _afcf .CreationDate !=nil {_feac .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_afcf .CreationDate .ToPdfObject ());};if _afcf .ModifiedDate !=nil {_feac .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_afcf .ModifiedDate .ToPdfObject ());
};for _ ,_fggb :=range _afcf ._addfd .Keys (){_feac .SetIfNotNil (_fggb ,_afcf ._addfd .Get (_fggb ));};return _feac ;};

// GetBorderWidth returns the border style's width.
func (_eega *PdfBorderStyle )GetBorderWidth ()float64 {if _eega .W ==nil {return 1;};return *_eega .W ;};

// StdFontName represents name of a standard font.
type StdFontName =_bc .StdFontName ;

// ToPdfObject returns the PDF representation of the function.
func (_fffdb *PdfFunctionType2 )ToPdfObject ()_ab .PdfObject {_faba :=_ab .MakeDict ();_faba .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ab .MakeInteger (2));_ebcd :=&_ab .PdfObjectArray {};for _ ,_fbgae :=range _fffdb .Domain {_ebcd .Append (_ab .MakeFloat (_fbgae ));
};_faba .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ebcd );if _fffdb .Range !=nil {_afagb :=&_ab .PdfObjectArray {};for _ ,_afeag :=range _fffdb .Range {_afagb .Append (_ab .MakeFloat (_afeag ));};_faba .Set ("\u0052\u0061\u006eg\u0065",_afagb );};if _fffdb .C0 !=nil {_debg :=&_ab .PdfObjectArray {};
for _ ,_bbae :=range _fffdb .C0 {_debg .Append (_ab .MakeFloat (_bbae ));};_faba .Set ("\u0043\u0030",_debg );};if _fffdb .C1 !=nil {_cbbfc :=&_ab .PdfObjectArray {};for _ ,_agda :=range _fffdb .C1 {_cbbfc .Append (_ab .MakeFloat (_agda ));};_faba .Set ("\u0043\u0031",_cbbfc );
};_faba .Set ("\u004e",_ab .MakeFloat (_fffdb .N ));if _fffdb ._ebfef !=nil {_fffdb ._ebfef .PdfObject =_faba ;return _fffdb ._ebfef ;};return _faba ;};func (_gbegb *PdfWriter )setCatalogVersion (){_gbegb ._cbfaag .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_ab .MakeName (_f .Sprintf ("\u0025\u0064\u002e%\u0064",_gbegb ._ecfdb .Major ,_gbegb ._ecfdb .Minor )));
};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_fgcef int64 ;_badbee int64 ;_dbca int64 ;_bfce int64 ;_ffcbb int64 ;_dgae int64 ;_fdfd byte ;_baeb int64 ;_aegfc int64 ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _ab .PdfObject )(_ab .PdfObjectName ,error ){var _acb *_ab .PdfObjectName ;var _ebaaf *_ab .PdfObjectArray ;if _aacge ,_cfdc :=obj .(*_ab .PdfIndirectObject );_cfdc {if _dcec ,_eac :=_aacge .PdfObject .(*_ab .PdfObjectArray );
_eac {_ebaaf =_dcec ;}else if _dbgd ,_fegd :=_aacge .PdfObject .(*_ab .PdfObjectName );_fegd {_acb =_dbgd ;};}else if _dede ,_ecga :=obj .(*_ab .PdfObjectArray );_ecga {_ebaaf =_dede ;}else if _dggb ,_bgdg :=obj .(*_ab .PdfObjectName );_bgdg {_acb =_dggb ;
};if _acb !=nil {switch *_acb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_acb ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_acb ,nil ;
};};if _ebaaf !=nil &&_ebaaf .Len ()> 0{if _dbdf ,_edaaf :=_ebaaf .Get (0).(*_ab .PdfObjectName );_edaaf {switch *_dbdf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _ebaaf .Len ()==1{return *_dbdf ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_dbdf ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_dbdf ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_dbdf ,nil ;};};};return "",nil ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_ab .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _ab .PdfObject ;A _ab .PdfObject ;SE _ab .PdfObject ;C _ab .PdfObject ;F _ab .PdfObject ;
_fdbca *_ab .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bdebae *PdfShadingType7 )ToPdfObject ()_ab .PdfObject {_bdebae .PdfShading .ToPdfObject ();_decae ,_dgecd :=_bdebae .getShadingDict ();if _dgecd !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bdebae .BitsPerCoordinate !=nil {_decae .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bdebae .BitsPerCoordinate );};if _bdebae .BitsPerComponent !=nil {_decae .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bdebae .BitsPerComponent );
};if _bdebae .BitsPerFlag !=nil {_decae .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bdebae .BitsPerFlag );};if _bdebae .Decode !=nil {_decae .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bdebae .Decode );};if _bdebae .Function !=nil {if len (_bdebae .Function )==1{_decae .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bdebae .Function [0].ToPdfObject ());
}else {_aaacd :=_ab .MakeArray ();for _ ,_ddaeec :=range _bdebae .Function {_aaacd .Append (_ddaeec .ToPdfObject ());};_decae .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aaacd );};};return _bdebae ._edbbg ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_bga .PSProgram ;_bggda *_bga .PSExecutor ;_aagbe []byte ;_dgac *_ab .PdfObjectStream ;};

// R returns the value of the red component of the color.
func (_bcdf *PdfColorDeviceRGB )R ()float64 {return _bcdf [0]};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_ab .PdfObjectName ;Colorants _ab .PdfObject ;Process _ab .PdfObject ;MixingHints _ab .PdfObject ;_eafc *_ab .PdfIndirectObject ;};type pdfCIDFontType0 struct{fontCommon ;_ggdd *_ab .PdfIndirectObject ;
_dbecc _dc .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_ab .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _ab .PdfObject ;W _ab .PdfObject ;DW2 _ab .PdfObject ;W2 _ab .PdfObject ;_edbd map[_dc .CharCode ]float64 ;_dcgcd float64 ;};func _cgaa ()string {_cdeabg :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _ccege _ffc .Buffer ;for _bfaf :=0;_bfaf < 6;_bfaf ++{_ccege .WriteRune (rune (_cdeabg [_a .Intn (len (_cdeabg ))]));};return _ccege .String ();};func _fafff ()string {_dfdbc .Lock ();defer _dfdbc .Unlock ();return _gffeb };

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_babag *PdfPage )GetContentStreamObjs ()[]_ab .PdfObject {if _babag .Contents ==nil {return nil ;};_bfbbc :=_ab .TraceToDirectObject (_babag .Contents );if _fgda ,_eggb :=_bfbbc .(*_ab .PdfObjectArray );_eggb {return _fgda .Elements ();};return []_ab .PdfObject {_bfbbc };
};type fontFile struct{_gdagf string ;_cbdee string ;_bfbdg _dc .SimpleEncoder ;};

// WriteString outputs the object as it is to be written to file.
func (_eedfe *pdfSignDictionary )WriteString ()string {_eedfe ._gfefe =0;_eedfe ._bcbega =0;_eedfe ._cdgcd =0;_eedfe ._efffe =0;_afgde :=_ffc .NewBuffer (nil );_afgde .WriteString ("\u003c\u003c");for _ ,_befec :=range _eedfe .Keys (){_acdfb :=_eedfe .Get (_befec );
switch _befec {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_afgde .WriteString (_befec .WriteString ());_afgde .WriteString ("\u0020");_eedfe ._cdgcd =_afgde .Len ();_afgde .WriteString (_acdfb .WriteString ());_afgde .WriteString ("\u0020");_eedfe ._efffe =_afgde .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_afgde .WriteString (_befec .WriteString ());_afgde .WriteString ("\u0020");_eedfe ._gfefe =_afgde .Len ();_afgde .WriteString (_acdfb .WriteString ());_afgde .WriteString ("\u0020");_eedfe ._bcbega =_afgde .Len ()-1;
default:_afgde .WriteString (_befec .WriteString ());_afgde .WriteString ("\u0020");_afgde .WriteString (_acdfb .WriteString ());};};_afgde .WriteString ("\u003e\u003e");return _afgde .String ();};func (_degae *PdfWriter )writeString (_cgafa string ){if _degae ._gegac !=nil {return ;
};_acggda ,_agdba :=_degae ._ccgad .WriteString (_cgafa );_degae ._abbce +=int64 (_acggda );_degae ._gegac =_agdba ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_gabag *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gabag .Base ==nil {return nil ,_ca .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _gabag .Base .ColorToRGB (color );};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_gdffa *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_ab .StreamEncoder ,error ){_gbfgaa ,_febaa :=_gdffa ._cafaf .(*_ab .PdfObjectStream );if !_febaa {_fa .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gdffa ._cafaf );
return nil ,nil ,_ab .ErrTypeError ;};_aebcg ,_cceeg :=_ab .DecodeStream (_gbfgaa );if _cceeg !=nil {_fa .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_cceeg );
return nil ,nil ,_cceeg ;};_abda ,_cceeg :=_ab .NewEncoderFromStream (_gbfgaa );if _cceeg !=nil {_fa .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_cceeg );
return nil ,nil ,_cceeg ;};return _aebcg ,_abda ,nil ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_ab .PdfIndirectObject ;SV *_ab .PdfIndirectObject ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_dggeb *PdfPageResources )GetXObjectFormByName (keyName _ab .PdfObjectName )(*XObjectForm ,error ){_eedgd ,_fcdc :=_dggeb .GetXObjectByName (keyName );if _eedgd ==nil {return nil ,nil ;};if _fcdc !=XObjectTypeForm {return nil ,_ca .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_beebf ,_dffb :=NewXObjectFormFromStream (_eedgd );if _dffb !=nil {return nil ,_dffb ;};return _beebf ,nil ;};func (_eegba *PdfReader )newPdfFieldSignatureFromDict (_efgga *_ab .PdfObjectDictionary )(*PdfFieldSignature ,error ){_bdff :=&PdfFieldSignature {};
_bfbb ,_gadec :=_ab .GetIndirect (_efgga .Get ("\u0056"));if _gadec {var _dcfgd error ;_bdff .V ,_dcfgd =_eegba .newPdfSignatureFromIndirect (_bfbb );if _dcfgd !=nil {return nil ,_dcfgd ;};};_bdff .Lock ,_ =_ab .GetIndirect (_efgga .Get ("\u004c\u006f\u0063\u006b"));
_bdff .SV ,_ =_ab .GetIndirect (_efgga .Get ("\u0053\u0056"));return _bdff ,nil ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _ab .PdfObject ;NewWindow _ab .PdfObject ;T _ab .PdfObject ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _ab .PdfObject ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _ab .PdfObject ;IC _ab .PdfObject ;BE _ab .PdfObject ;RD _ab .PdfObject ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_bfcc *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_fa .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_eafg :=[]float64 {0.0};if _bfcc .C0 !=nil {_eafg =_bfcc .C0 ;};_bcccc :=[]float64 {1.0};if _bfcc .C1 !=nil {_bcccc =_bfcc .C1 ;};var _fgac []float64 ;for _cccc :=0;_cccc < len (_eafg );_cccc ++{_bccec :=_eafg [_cccc ]+_ced .Pow (x [0],_bfcc .N )*(_bcccc [_cccc ]-_eafg [_cccc ]);
_fgac =append (_fgac ,_bccec );};return _fgac ,nil ;};func (_degd *PdfReader )newPdfActionImportDataFromDict (_dfga *_ab .PdfObjectDictionary )(*PdfActionImportData ,error ){_gbg ,_bdd :=_ecdc (_dfga .Get ("\u0046"));if _bdd !=nil {return nil ,_bdd ;};
return &PdfActionImportData {F :_gbg },nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_baa :=NewPdfAnnotation ();_fbab :=&PdfAnnotationPopup {};_fbab .PdfAnnotation =_baa ;_baa .SetContext (_fbab );return _fbab ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_cfbac *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_ebafeg :=RC4_128bit ;if options !=nil {_ebafeg =options .Algorithm ;};_dafd :=_d .PermOwner ;if options !=nil {_dafd =options .Permissions ;};var _bgfbc _dd .Filter ;
switch _ebafeg {case RC4_128bit :_bgfbc =_dd .NewFilterV2 (16);case AES_128bit :_bgfbc =_dd .NewFilterAESV2 ();case AES_256bit :_bgfbc =_dd .NewFilterAESV3 ();default:return _f .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_abbe ,_bdcdg ,_bggeb :=_ab .PdfCryptNewEncrypt (_bgfbc ,userPass ,ownerPass ,_dafd );if _bggeb !=nil {return _bggeb ;};_cfbac ._ggfge =_abbe ;if _bdcdg .Major !=0{_cfbac .SetVersion (_bdcdg .Major ,_bdcdg .Minor );};_cfbac ._dcfe =_bdcdg .Encrypt ;_cfbac ._fafda ,_cfbac ._aadca =_bdcdg .ID0 ,_bdcdg .ID1 ;
_ebgfg :=_ab .MakeIndirectObject (_bdcdg .Encrypt );_cfbac ._faaaf =_ebgfg ;_cfbac .addObject (_ebgfg );return nil ;};

// IsCID returns true if the underlying font is CID.
func (_gaab *PdfFont )IsCID ()bool {return _gaab .baseFields ().isCIDFont ()};

// GetContainingPdfObject implements interface PdfModel.
func (_fde *PdfAnnotation )GetContainingPdfObject ()_ab .PdfObject {return _fde ._ddg };

// RemovePage removes a page by number.
func (_dgcc *PdfAppender )RemovePage (pageNum int ){_dcfg :=pageNum -1;_dgcc ._abed =append (_dgcc ._abed [0:_dcfg ],_dgcc ._abed [pageNum :]...);};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_ffdg *PdfColorspaceDeviceNAttributes )ToPdfObject ()_ab .PdfObject {_dbcbd :=_ab .MakeDict ();if _ffdg .Subtype !=nil {_dbcbd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ffdg .Subtype );};_dbcbd .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_ffdg .Colorants );
_dbcbd .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_ffdg .Process );_dbcbd .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_ffdg .MixingHints );if _ffdg ._eafc !=nil {_ffdg ._eafc .PdfObject =_dbcbd ;return _ffdg ._eafc ;
};return _dbcbd ;};

// Encoder returns the font's text encoder.
func (_bfdc pdfFontType3 )Encoder ()_dc .TextEncoder {return _bfdc ._cebbg };

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_dfdbc .Lock ();defer _dfdbc .Unlock ();_bgcfag =creator };func (_afgddb *PdfReader )buildPageList (_geafe *_ab .PdfIndirectObject ,_cefec *_ab .PdfIndirectObject ,_egabf map[_ab .PdfObject ]struct{})error {if _geafe ==nil {return nil ;
};if _ ,_bdeba :=_egabf [_geafe ];_bdeba {_fa .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_geafe .ObjectNumber );
return nil ;};_egabf [_geafe ]=struct{}{};_fgaaa ,_bcccfg :=_geafe .PdfObject .(*_ab .PdfObjectDictionary );if !_bcccfg {return _ca .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_egdge ,_bcccfg :=(*_fgaaa ).Get ("\u0054\u0079\u0070\u0065").(*_ab .PdfObjectName );
if !_bcccfg {if _fgaaa .Get ("\u004b\u0069\u0064\u0073")==nil {return _ca .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_fa .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_egdge =_ab .MakeName ("\u0050\u0061\u0067e\u0073");_fgaaa .Set ("\u0054\u0079\u0070\u0065",_egdge );};_fa .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_egdge ,_geafe );
if *_egdge =="\u0050\u0061\u0067\u0065"{_dadgb ,_ecadbd :=_afgddb .newPdfPageFromDict (_fgaaa );if _ecadbd !=nil {return _ecadbd ;};_dadgb .setContainer (_geafe );if _cefec !=nil {_fgaaa .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cefec );};_afgddb ._ffbe =append (_afgddb ._ffbe ,_geafe );
_afgddb .PageList =append (_afgddb .PageList ,_dadgb );return nil ;};if *_egdge !="\u0050\u0061\u0067e\u0073"{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_egdge );
return _ca .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _cefec !=nil {_fgaaa .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cefec );};if !_afgddb ._ccbag {_eecb :=_afgddb .traverseObjectData (_geafe );if _eecb !=nil {return _eecb ;};};_dedgf ,_bede :=_afgddb ._gcabf .Resolve (_fgaaa .Get ("\u004b\u0069\u0064\u0073"));
if _bede !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _bede ;};var _cgbeb *_ab .PdfObjectArray ;
_cgbeb ,_bcccfg =_dedgf .(*_ab .PdfObjectArray );if !_bcccfg {_geef ,_dccaa :=_dedgf .(*_ab .PdfIndirectObject );if !_dccaa {return _ca .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};
_cgbeb ,_bcccfg =_geef .PdfObject .(*_ab .PdfObjectArray );if !_bcccfg {return _ca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_fa .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_cgbeb );
for _faaae ,_cebedd :=range _cgbeb .Elements (){_gabe ,_ggfcd :=_ab .GetIndirect (_cebedd );if !_ggfcd {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_gabe );
return _ca .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_cgbeb .Set (_faaae ,_gabe );_bede =_afgddb .buildPageList (_gabe ,_geafe ,_egabf );if _bede !=nil {return _bede ;
};};return nil ;};func (_gdaf *PdfReader )newPdfAnnotationScreenFromDict (_agcf *_ab .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_edab :=PdfAnnotationScreen {};_edab .T =_agcf .Get ("\u0054");_edab .MK =_agcf .Get ("\u004d\u004b");_edab .A =_agcf .Get ("\u0041");
_edab .AA =_agcf .Get ("\u0041\u0041");return &_edab ,nil ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_gadg :=PdfColorLab {l ,a ,b };return &_gadg };func _ddfe (_dfgdd string )map[string ]string {_ceba :=_cdbdc .Split (_dfgdd ,-1);_abbcd :=map[string ]string {};for _ ,_fgcc :=range _ceba {_cfbce :=_bacab .FindStringSubmatch (_fgcc );
if _cfbce ==nil {continue ;};_cfdcf ,_dbeb :=_cfbce [1],_cfbce [2];_abbcd [_cfdcf ]=_dbeb ;};return _abbcd ;};func _aagba (_dbad _ab .PdfObject ,_cecb bool )(*PdfFont ,error ){_abdge ,_cggfd ,_ggfb :=_aafc (_dbad );if _ggfb !=nil {if _ggfb ==ErrType1CFontNotSupported {_gaffa ,_dfee :=_dafg (_abdge ,_cggfd ,nil );
if _dfee !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_cggfd ,_dfee );
return nil ,_ggfb ;};return &PdfFont {_cgdec :_gaffa },_ggfb ;};return nil ,_ggfb ;};_gfddc :=&PdfFont {};switch _cggfd ._gcab {case "\u0054\u0079\u0070e\u0030":if !_cecb {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cggfd );
return nil ,_ca .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_ecfab ,_aaeg :=_efaba (_abdge ,_cggfd );if _aaeg !=nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cggfd ,_aaeg );
return nil ,_aaeg ;};_gfddc ._cgdec =_ecfab ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _dcaa *pdfFontSimple ;_ceed ,_aagdf :=_bc .NewStdFontByName (_bc .StdFontName (_cggfd ._egceb ));
if _aagdf {_beegb :=_abffe (_ceed );_gfddc ._cgdec =&_beegb ;_dfdc :=_ab .TraceToDirectObject (_beegb .ToPdfObject ());_deec ,_fbfb ,_abacd :=_aafc (_dfdc );if _abacd !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_cggfd ,_beegb );
return nil ,_abacd ;};for _ ,_bdagf :=range _abdge .Keys (){_deec .Set (_bdagf ,_abdge .Get (_bdagf ));};_dcaa ,_abacd =_dafg (_deec ,_fbfb ,_beegb ._facc );if _abacd !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_cggfd ,_beegb );
return nil ,_abacd ;};_dcaa ._aeac =_beegb ._aeac ;_dcaa ._accf =_beegb ._accf ;}else {_dcaa ,_ggfb =_dafg (_abdge ,_cggfd ,nil );if _ggfb !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_cggfd ,_ggfb );
return nil ,_ggfb ;};};_ggfb =_dcaa .addEncoding ();if _ggfb !=nil {return nil ,_ggfb ;};if _aagdf {_dcaa .updateStandard14Font ();};if _aagdf &&_dcaa ._ebfag ==nil &&_dcaa ._facc ==nil {_fa .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dcaa );
_fa .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_ceed );};if len (_dcaa ._aeac )==0{_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_dcaa );};_gfddc ._cgdec =_dcaa ;
case "\u0054\u0079\u0070e\u0033":_gdge ,_cdece :=_gecd (_abdge ,_cggfd );if _cdece !=nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_cdece );
return nil ,_cdece ;};_gfddc ._cgdec =_gdge ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_aeff ,_fafc :=_gfafb (_abdge ,_cggfd );if _fafc !=nil {_fa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_fafc );
return nil ,_fafc ;};_gfddc ._cgdec =_aeff ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_eaee ,_ccee :=_gabg (_abdge ,_cggfd );if _ccee !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cggfd ,_ccee );
return nil ,_ccee ;};_gfddc ._cgdec =_eaee ;default:_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_cggfd );
return nil ,_f .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cggfd );};return _gfddc ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_fgeg *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edda :=vals [0];if _edda < 0.0||_edda > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_bcge :=vals [1];if _bcge < 0.0||_bcge > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffbd :=vals [2];if _ffbd < 0.0||_ffbd > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_cbbf :=NewPdfColorCalRGB (_edda ,_bcge ,_ffbd );return _cbbf ,nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_eebd *PdfFieldChoice )ToPdfObject ()_ab .PdfObject {_eebd .PdfField .ToPdfObject ();_bbag :=_eebd ._ggde ;_gbc :=_bbag .PdfObject .(*_ab .PdfObjectDictionary );_gbc .Set ("\u0046\u0054",_ab .MakeName ("\u0043\u0068"));if _eebd .Opt !=nil {_gbc .Set ("\u004f\u0070\u0074",_eebd .Opt );
};if _eebd .TI !=nil {_gbc .Set ("\u0054\u0049",_eebd .TI );};if _eebd .I !=nil {_gbc .Set ("\u0049",_eebd .I );};return _bbag ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_acabd *PdfPageResourcesColorspaces )ToPdfObject ()_ab .PdfObject {_gecc :=_ab .MakeDict ();for _ ,_ddfbe :=range _acabd .Names {_gecc .Set (_ab .PdfObjectName (_ddfbe ),_acabd .Colorspaces [_ddfbe ].ToPdfObject ());};if _acabd ._acfe !=nil {_acabd ._acfe .PdfObject =_gecc ;
return _acabd ._acfe ;};return _gecc ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_acdf *PdfField )ToPdfObject ()_ab .PdfObject {_agggc :=_acdf ._ggde ;_fdab :=_agggc .PdfObject .(*_ab .PdfObjectDictionary );_bcacd :=_ab .MakeArray ();for _ ,_cddc :=range _acdf .Kids {_bcacd .Append (_cddc .ToPdfObject ());};for _ ,_beae :=range _acdf .Annotations {if _beae ._ddg !=_acdf ._ggde {_bcacd .Append (_beae .GetContext ().ToPdfObject ());
};};if _acdf .Parent !=nil {_fdab .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_acdf .Parent .GetContainingPdfObject ());};if _bcacd .Len ()> 0{_fdab .Set ("\u004b\u0069\u0064\u0073",_bcacd );};_fdab .SetIfNotNil ("\u0046\u0054",_acdf .FT );_fdab .SetIfNotNil ("\u0054",_acdf .T );
_fdab .SetIfNotNil ("\u0054\u0055",_acdf .TU );_fdab .SetIfNotNil ("\u0054\u004d",_acdf .TM );_fdab .SetIfNotNil ("\u0046\u0066",_acdf .Ff );_fdab .SetIfNotNil ("\u0056",_acdf .V );_fdab .SetIfNotNil ("\u0044\u0056",_acdf .DV );_fdab .SetIfNotNil ("\u0041\u0041",_acdf .AA );
return _agggc ;};func (_bggd *DSS )generateHashMap (_faaf []*_ab .PdfObjectStream )(map[string ]*_ab .PdfObjectStream ,error ){_cggfb :=map[string ]*_ab .PdfObjectStream {};for _ ,_fbgfa :=range _faaf {_gbgfc ,_dedac :=_ab .DecodeStream (_fbgfa );if _dedac !=nil {return nil ,_dedac ;
};_badb ,_dedac :=_aegef (_gbgfc );if _dedac !=nil {return nil ,_dedac ;};_cggfb [string (_badb )]=_fbgfa ;};return _cggfb ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ebfge pdfCIDFontType2 )GetCharMetrics (code _dc .CharCode )(_bc .CharMetrics ,bool ){if _afdce ,_egdfg :=_ebfge ._fgdee [code ];_egdfg {return _bc .CharMetrics {Wx :_afdce },true ;};_faga :=rune (code );_bbfca ,_ggbb :=_ebfge ._aacec [_faga ];if !_ggbb {_bbfca =int (_ebfge ._gegdd );
};return _bc .CharMetrics {Wx :float64 (_bbfca )},true ;};

// Encoder returns the font's text encoder.
func (_cfaf *pdfFontSimple )Encoder ()_dc .TextEncoder {if _cfaf ._ebfag !=nil {return _cfaf ._ebfag ;};if _cfaf ._facc !=nil {return _cfaf ._facc ;};_beaaa ,_ :=_dc .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _beaaa ;};func (_agbce *pdfCIDFontType0 )baseFields ()*fontCommon {return &_agbce .fontCommon };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_daed *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_ab .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfbf ,_dfcb :=_ab .GetNumbersAsFloat (objects );
if _dfcb !=nil {return nil ,_dfcb ;};return _daed .ColorFromFloats (_gfbf );};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_ab .PdfObject ,error );};func _ecdc (_dced _ab .PdfObject )(*PdfFilespec ,error ){if _dced ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_dced );};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_eae *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_gbfe *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_bef :=NewPdfAnnotation ();_aae :=&PdfAnnotationCircle {};_aae .PdfAnnotation =_bef ;_aae .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bef .SetContext (_aae );return _aae ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_fafd *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _fafd .baseFields ()._dfaf !=nil {return _fafd .baseFields ()._dfaf ;};if _fbga :=_fafd ._cgdec .getFontDescriptor ();_fbga !=nil {return _fbga ;};_fa .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_fafd );
return nil ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_bfffc *VRI )ToPdfObject ()*_ab .PdfObjectDictionary {_cbbbf :=_ab .MakeDict ();_cbbbf .SetIfNotNil (_ab .PdfObjectName ("\u0043\u0065\u0072\u0074"),_cfgdc (_bfffc .Cert ));_cbbbf .SetIfNotNil (_ab .PdfObjectName ("\u004f\u0043\u0053\u0050"),_cfgdc (_bfffc .OCSP ));
_cbbbf .SetIfNotNil (_ab .PdfObjectName ("\u0043\u0052\u004c"),_cfgdc (_bfffc .CRL ));_cbbbf .SetIfNotNil ("\u0054\u0055",_bfffc .TU );_cbbbf .SetIfNotNil ("\u0054\u0053",_bfffc .TS );return _cbbbf ;};

// AddFont adds a font dictionary to the Font resources.
func (_egfbge *PdfPage )AddFont (name _ab .PdfObjectName ,font _ab .PdfObject )error {if _egfbge .Resources ==nil {_egfbge .Resources =NewPdfPageResources ();};if _egfbge .Resources .Font ==nil {_egfbge .Resources .Font =_ab .MakeDict ();};_dedabg ,_eaacb :=_ab .TraceToDirectObject (_egfbge .Resources .Font ).(*_ab .PdfObjectDictionary );
if !_eaacb {_fa .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_ab .TraceToDirectObject (_egfbge .Resources .Font ));
return _ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dedabg .Set (name ,font );return nil ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_ab .PdfObject ;GetContainingPdfObject ()_ab .PdfObject ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_eebe :=&PdfBorderStyle {};return _eebe };

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _ab .PdfObject ;FS _ab .PdfObject ;F _ab .PdfObject ;UF _ab .PdfObject ;DOS _ab .PdfObject ;Mac _ab .PdfObject ;Unix _ab .PdfObject ;ID _ab .PdfObject ;V _ab .PdfObject ;EF _ab .PdfObject ;RF _ab .PdfObject ;Desc _ab .PdfObject ;
CI _ab .PdfObject ;_cbaec _ab .PdfObject ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_dcc :=NewPdfAnnotation ();_baceg :=&PdfAnnotationProjection {};_baceg .PdfAnnotation =_dcc ;_baceg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dcc .SetContext (_baceg );return _baceg ;};

// ToPdfObject converts rectangle to a PDF object.
func (_daaaf *PdfRectangle )ToPdfObject ()_ab .PdfObject {return _ab .MakeArray (_ab .MakeFloat (_daaaf .Llx ),_ab .MakeFloat (_daaaf .Lly ),_ab .MakeFloat (_daaaf .Urx ),_ab .MakeFloat (_daaaf .Ury ));};

// ToPdfObject implements interface PdfModel.
func (_fdb *PdfBorderStyle )ToPdfObject ()_ab .PdfObject {_afbe :=_ab .MakeDict ();if _fdb ._acgf !=nil {if _agg ,_efgc :=_fdb ._acgf .(*_ab .PdfIndirectObject );_efgc {_agg .PdfObject =_afbe ;};};_afbe .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _fdb .W !=nil {_afbe .Set ("\u0057",_ab .MakeFloat (*_fdb .W ));};if _fdb .S !=nil {_afbe .Set ("\u0053",_ab .MakeName (_fdb .S .GetPdfName ()));};if _fdb .D !=nil {_afbe .Set ("\u0044",_ab .MakeArrayFromIntegers (*_fdb .D ));};if _fdb ._acgf !=nil {return _fdb ._acgf ;
};return _afbe ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _fb .ReadSeeker )(*PdfReader ,error ){const _agbg ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _eagcc (rs ,&ReaderOpts {},false ,_agbg );};var ImageHandling ImageHandler =DefaultImageHandler {};
func _efead (_bcbeg string )(map[_dc .CharCode ]_dc .GlyphName ,error ){_gfbdg :=_af .Split (_bcbeg ,"\u000a");_ecaa :=make (map[_dc .CharCode ]_dc .GlyphName );for _ ,_fddbf :=range _gfbdg {_gaef :=_ffagc .FindStringSubmatch (_fddbf );if _gaef ==nil {continue ;
};_dbaff ,_ecfg :=_gaef [1],_gaef [2];_defd ,_dfddg :=_fcg .Atoi (_dbaff );if _dfddg !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_fddbf );
return nil ,_ab .ErrTypeError ;};_ecaa [_dc .CharCode (_defd )]=_dc .GlyphName (_ecfg );};_fa .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_ecaa );
return _ecaa ,nil ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_deadc *pdfFontSimple )ToPdfObject ()_ab .PdfObject {if _deadc ._bcbe ==nil {_deadc ._bcbe =&_ab .PdfIndirectObject {};};_fcbea :=_deadc .baseFields ().asPdfObjectDictionary ("");_deadc ._bcbe .PdfObject =_fcbea ;if _deadc .FirstChar !=nil {_fcbea .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_deadc .FirstChar );
};if _deadc .LastChar !=nil {_fcbea .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_deadc .LastChar );};if _deadc .Widths !=nil {_fcbea .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_deadc .Widths );};if _deadc .Encoding !=nil {_fcbea .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_deadc .Encoding );
}else if _deadc ._ebfag !=nil {_afec :=_deadc ._ebfag .ToPdfObject ();if _afec !=nil {_fcbea .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_afec );};};return _deadc ._bcbe ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_befc :=PdfColorDeviceRGB {r ,g ,b };return &_befc ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_eeaf *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _cgee []_dc .TextEncoder ;var _aaaf _dc .CMapEncoder ;if _adddd :=_eeaf .baseFields ()._eefee ;_adddd !=nil {_aaaf =_dc .NewCMapEncoder ("",nil ,_adddd );};_cfec :=_eeaf .Encoder ();
if _cfec !=nil {switch _aeffb :=_cfec .(type ){case _dc .SimpleEncoder :_ggfgf :=_aeffb .BaseName ();if _ ,_cfdga :=_dgedc [_ggfgf ];_cfdga {_cgee =append (_cgee ,_cfec );};};};if len (_cgee )==0{if _eeaf .baseFields ()._eefee !=nil {_cgee =append (_cgee ,_aaaf );
};if _cfec !=nil {_cgee =append (_cgee ,_cfec );};};var _eefg _ffc .Buffer ;var _bgeb int ;for _ ,_geacc :=range data {var _bgbca bool ;for _ ,_acfc :=range _cgee {if _gfbgg :=_acfc .Encode (string (_geacc ));len (_gfbgg )> 0{_eefg .Write (_gfbgg );_bgbca =true ;
break ;};};if !_bgbca {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_geacc );
_bgeb ++;};};if _bgeb !=0{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_bgeb ,_eeaf ,_cgee );
};return _eefg .Bytes (),_bgeb ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _ab .PdfObject ;Sy _ab .PdfObject ;};func (_faeea *PdfPage )getParentResources ()(*PdfPageResources ,error ){_cffae :=_faeea .Parent ;for _cffae !=nil {_gdffd ,_bgbfc :=_ab .GetDict (_cffae );
if !_bgbfc {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_ca .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};if _bdagc :=_gdffd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bdagc !=nil {_badg ,_dcefe :=_ab .GetDict (_bdagc );if !_dcefe {return nil ,_ca .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");
};_bgbfb ,_cbggb :=NewPdfPageResourcesFromDict (_badg );if _cbggb !=nil {return nil ,_cbggb ;};return _bgbfb ,nil ;};_cffae =_gdffd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_befge *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _befge .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_ba :=&PdfAction {};_ba ._cef =_ab .MakeIndirectObject (_ab .MakeDict ());return _ba ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_ab .PdfObjectStream ;OCSP []*_ab .PdfObjectStream ;CRL []*_ab .PdfObjectStream ;TU *_ab .PdfObjectString ;TS *_ab .PdfObjectString ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_ebaec :=NewPdfAnnotation ();_fcb :=&PdfAnnotationPolyLine {};_fcb .PdfAnnotation =_ebaec ;_fcb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebaec .SetContext (_fcb );return _fcb ;};

// ToPdfObject implements interface PdfModel.
func (_dead *PdfAnnotationStrikeOut )ToPdfObject ()_ab .PdfObject {_dead .PdfAnnotation .ToPdfObject ();_eeeb :=_dead ._ddg ;_cfa :=_eeeb .PdfObject .(*_ab .PdfObjectDictionary );_dead .PdfAnnotationMarkup .appendToPdfDictionary (_cfa );_cfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_cfa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dead .QuadPoints );return _eeeb ;};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_geagd *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _ca .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_geagd .S =subtype ;return nil ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_dcga *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _ab .GetNumberAsFloat (_dcga .CapHeight );};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_cbaca :=appender .Reader .DSS ;if _cbaca ==nil {_cbaca =NewDSS ();};if _gdbgf :=_cbaca .generateHashMaps ();_gdbgf !=nil {return nil ,_gdbgf ;};return &LTV {CertClient :_fe .NewCertClient (),OCSPClient :_fe .NewOCSPClient (),CRLClient :_fe .NewCRLClient (),SkipExisting :true ,_fafcc :appender ,_gcdc :_cbaca },nil ;
};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_cdbb *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_ddede ,_bffga :=_ab .GetDict (_cdbb ._cbfaag .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_bffga {_ddede =_ab .MakeDict ();_cdbb ._cbfaag .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_ddede );
};_efbbe ,_bffga :=_ab .GetDict (_ddede .Get (_ab .PdfObjectName (extName )));if !_bffga {_efbbe =_ab .MakeDict ();_ddede .Set (_ab .PdfObjectName (extName ),_efbbe );};if _bfddg ,_ :=_ab .GetNameVal (_efbbe .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_bfddg !=baseVersion {_efbbe .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_ab .MakeName (baseVersion ));};if _cafgf ,_ :=_ab .GetIntVal (_efbbe .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_cafgf !=extLevel {_efbbe .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_ab .MakeInteger (int64 (extLevel )));};};var _cdbdc =_fg .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");var _ pdfFont =(*pdfCIDFontType2 )(nil );


// ToPdfObject implements interface PdfModel.
func (_adefb *PdfSignature )ToPdfObject ()_ab .PdfObject {_ddfbcg :=_adefb ._eacgg ;var _edgfb *_ab .PdfObjectDictionary ;if _dgbacg ,_ffcaa :=_ddfbcg .PdfObject .(*pdfSignDictionary );_ffcaa {_edgfb =_dgbacg .PdfObjectDictionary ;}else {_edgfb =_ddfbcg .PdfObject .(*_ab .PdfObjectDictionary );
};_edgfb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_adefb .Type );_edgfb .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_adefb .Filter );_edgfb .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_adefb .SubFilter );_edgfb .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_adefb .ByteRange );
_edgfb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_adefb .Contents );_edgfb .SetIfNotNil ("\u0043\u0065\u0072\u0074",_adefb .Cert );_edgfb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_adefb .Name );_edgfb .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_adefb .Reason );
_edgfb .SetIfNotNil ("\u004d",_adefb .M );_edgfb .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_adefb .Reference );_edgfb .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_adefb .Changes );_edgfb .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_adefb .ContactInfo );
return _ddfbcg ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_abdc []_ab .PdfObject )([]_ab .PdfObject ,error );};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _ab .PdfObject ;Flags _ab .PdfObject ;};

// C returns the value of the cyan component of the color.
func (_cebfg *PdfColorDeviceCMYK )C ()float64 {return _cebfg [0]};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _ab .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_ab .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_agddb ,_fcgf :=encoder .EncodeBytes (img .Data );
if _fcgf !=nil {_fa .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_fcgf );return nil ,_fcgf ;};_acddb :=NewXObjectImage ();_ceegee :=img .Width ;_efege :=img .Height ;
_acddb .Width =&_ceegee ;_acddb .Height =&_efege ;_efgcbd :=img .BitsPerComponent ;_acddb .BitsPerComponent =&_efgcbd ;_acddb .Filter =encoder ;_acddb .Stream =_agddb ;if cs ==nil {if img .ColorComponents ==1{_acddb .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_acddb .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_acddb .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_ca .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_acddb .ColorSpace =cs ;};if len (img ._dbdfad )!=0{_fcacf :=NewXObjectImage ();_fcacf .Filter =encoder ;_afeagc ,_egef :=encoder .EncodeBytes (img ._dbdfad );if _egef !=nil {_fa .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_egef );
return nil ,_egef ;};_fcacf .Stream =_afeagc ;_fcacf .BitsPerComponent =_acddb .BitsPerComponent ;_fcacf .Width =&img .Width ;_fcacf .Height =&img .Height ;_fcacf .ColorSpace =NewPdfColorspaceDeviceGray ();_acddb .SMask =_fcacf .ToPdfObject ();}else {_acddb .SMask =xobjIn .SMask ;
_acddb .ImageMask =xobjIn .ImageMask ;if _acddb .ColorSpace .GetNumComponents ()==1{_gbdgd (_acddb );};};return _acddb ,nil ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_ageg _fb .ReadSeeker ;_cca *_ab .PdfParser ;_egeg *PdfReader ;Reader *PdfReader ;_abed []*PdfPage ;_ebe *PdfAcroForm ;_adaf *DSS ;_aefe _ab .XrefTable ;_affa int64 ;_cbea int ;_fbbdd []_ab .PdfObject ;_ggc map[_ab .PdfObject ]struct{};
_fddbc map[_ab .PdfObject ]int64 ;_fabc map[_ab .PdfObject ]struct{};_adfd map[_ab .PdfObject ]struct{};_dcbc int64 ;_edgg bool ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_adbda *BorderStyle )GetPdfName ()string {switch *_adbda {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// AddExtGState adds a graphics state to the XObject resources.
func (_geaa *PdfPage )AddExtGState (name _ab .PdfObjectName ,egs *_ab .PdfObjectDictionary )error {if _geaa .Resources ==nil {_geaa .Resources =NewPdfPageResources ();};if _geaa .Resources .ExtGState ==nil {_geaa .Resources .ExtGState =_ab .MakeDict ();
};_cfgabc ,_cdeec :=_ab .TraceToDirectObject (_geaa .Resources .ExtGState ).(*_ab .PdfObjectDictionary );if !_cdeec {_fa .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_ab .TraceToDirectObject (_geaa .Resources .ExtGState ));
return _ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cfgabc .Set (name ,egs );return nil ;};func (_fgcb *pdfFontType0 )bytesToCharcodes (_beaag []byte )([]_dc .CharCode ,bool ){if _fgcb ._dbddg ==nil {return nil ,false ;
};_fced ,_cccdf :=_fgcb ._dbddg .BytesToCharcodes (_beaag );if !_cccdf {return nil ,false ;};_gdbe :=make ([]_dc .CharCode ,len (_fced ));for _dedge ,_fbggc :=range _fced {_gdbe [_dedge ]=_dc .CharCode (_fbggc );};return _gdbe ,true ;};func (_caacgg *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _caacgg ._dfaf };


// GetNumComponents returns the number of color components (1 for grayscale).
func (_gfdbe *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_bfd *PdfActionImportData )ToPdfObject ()_ab .PdfObject {_bfd .PdfAction .ToPdfObject ();_gg :=_bfd ._cef ;_ebaf :=_gg .PdfObject .(*_ab .PdfObjectDictionary );_ebaf .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeImportData )));if _bfd .F !=nil {_ebaf .Set ("\u0046",_bfd .F .ToPdfObject ());
};return _gg ;};func (_eagba *PdfReader )newPdfAnnotationLinkFromDict (_ccef *_ab .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_aebc :=PdfAnnotationLink {};_aebc .A =_ccef .Get ("\u0041");_aebc .Dest =_ccef .Get ("\u0044\u0065\u0073\u0074");_aebc .H =_ccef .Get ("\u0048");
_aebc .PA =_ccef .Get ("\u0050\u0041");_aebc .QuadPoints =_ccef .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_aebc .BS =_ccef .Get ("\u0042\u0053");return &_aebc ,nil ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_aebe *PdfField )Flags ()FieldFlag {var _badd FieldFlag ;_dfbgf ,_edaed :=_aebe .inherit (func (_cdbaf *PdfField )bool {if _cdbaf .Ff !=nil {_badd =FieldFlag (*_cdbaf .Ff );return true ;};return false ;});if _edaed !=nil {_fa .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_edaed );
};if !_dfbgf {_fa .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _badd ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_edbe *LTV )EnableAll (extraCerts []*_bgc .Certificate )error {_fggae :=_edbe ._fafcc ._egeg .AcroForm ;for _ ,_gbgbc :=range _fggae .AllFields (){_addcb ,_ :=_gbgbc .GetContext ().(*PdfFieldSignature );if _addcb ==nil {continue ;};_cfag :=_addcb .V ;
if _bgaga :=_edbe .validateSig (_cfag );_bgaga !=nil {_fa .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_bgaga );
};if _ccefd :=_edbe .Enable (_cfag ,extraCerts );_ccefd !=nil {return _ccefd ;};};return nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_ebb *_ab .PdfIndirectObject ;};

// SetContext sets the sub annotation (context).
func (_cbe *PdfAnnotation )SetContext (ctx PdfModel ){_cbe ._aeb =ctx };

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_ab .PdfObjectStream ;Data []byte ;_gefff *_ab .PdfIndirectObject ;_cfcd *_ab .PdfObjectStream ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_ggde :_ab .MakeIndirectObject (_ab .MakeDict ())}};type pdfFont interface{_bc .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_ab .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_gabef *PdfWriter )AddPage (page *PdfPage )error {const _dedggg ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_cgccg (page );_cadgf :=page .ToPdfObject ();_fa .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_fa .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_cadgf );_ebddg ,_ccbed :=_ab .GetIndirect (_cadgf );if !_ccbed {return _ca .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_fa .Log .Trace ("\u0025\u0073",_ebddg );_fa .Log .Trace ("\u0025\u0073",_ebddg .PdfObject );_dbcac ,_ccbed :=_ab .GetDict (_ebddg .PdfObject );if !_ccbed {return _ca .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_aebgc ,_ccbed :=_ab .GetName (_dbcac .Get ("\u0054\u0079\u0070\u0065"));if !_ccbed {return _f .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_dbcac .Get ("\u0054\u0079\u0070\u0065"));
};if _aebgc .String ()!="\u0050\u0061\u0067\u0065"{return _ca .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_dcgg :=[]_ab .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_cadcg ,_bbcf :=_ab .GetIndirect (_dbcac .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_fa .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_dbcac .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_bbcf );
for _bbcf {_fa .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cadcg );_gcee ,_gcace :=_ab .GetDict (_cadcg .PdfObject );if !_gcace {return _ca .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_bfbea :=range _dcgg {_fa .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bfbea );if _dbcac .Get (_bfbea )!=nil {_fa .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _cfbaf :=_gcee .Get (_bfbea );_cfbaf !=nil {_fa .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bfbea );_dbcac .Set (_bfbea ,_cfbaf );};};_cadcg ,_bbcf =_ab .GetIndirect (_gcee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_fa .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gcee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_fa .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_dbcac .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gabef ._cdcee );_ebddg .PdfObject =_dbcac ;_gbcg ,_ccbed :=_ab .GetDict (_gabef ._cdcee .PdfObject );if !_ccbed {return _ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_cdbdd ,_ccbed :=_ab .GetArray (_gbcg .Get ("\u004b\u0069\u0064\u0073"));if !_ccbed {return _ca .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_cdbdd .Append (_ebddg );_gabef ._dcdcd [_dbcac ]=struct{}{};_gfbee ,_ccbed :=_ab .GetInt (_gbcg .Get ("\u0043\u006f\u0075n\u0074"));if !_ccbed {return _ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_gfbee =*_gfbee +1;if page ._addeg ==nil {_abgd :=_age .Track (_gabef ._bbadf ,_dedggg );if _abgd !=nil {return _abgd ;};}else {_dfcae :=_age .Track (page ._addeg ._fbggb ,_dedggg );if _dfcae !=nil {return _dfcae ;};};_gabef .addObject (_ebddg );_gfeg :=_gabef .addObjects (_dbcac );
if _gfeg !=nil {return _gfeg ;};return nil ;};

// Subtype returns the font's "Subtype" field.
func (_cecc *PdfFont )Subtype ()string {_acce :=_cecc .baseFields ()._gcab ;if _faec ,_daaec :=_cecc ._cgdec .(*pdfFontType0 );_daaec {_acce =_acce +"\u003a"+_faec .DescendantFont .Subtype ();};return _acce ;};

// Val returns the value of the color.
func (_cafg *PdfColorCalGray )Val ()float64 {return float64 (*_cafg )};func (_eagff *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _edfd []*PdfFieldSignature ;for _ ,_eeffe :=range _eagff .AllFields (){switch _cfaab :=_eeffe .GetContext ().(type ){case *PdfFieldSignature :_dfefc :=_cfaab ;
_edfd =append (_edfd ,_dfefc );};};return _edfd ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _bg .Time ){_dfdbc .Lock ();defer _dfdbc .Unlock ();_egegca =modifiedDate ;};

// String returns a human readable description of `fontfile`.
func (_gfcf *fontFile )String ()string {_dfggd :="\u005b\u004e\u006f\u006e\u0065\u005d";if _gfcf ._bfbdg !=nil {_dfggd =_gfcf ._bfbdg .String ();};return _f .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_gfcf ._gdagf ,_dfggd );
};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _ab .PdfObject ;Dest _ab .PdfObject ;H _ab .PdfObject ;PA _ab .PdfObject ;QuadPoints _ab .PdfObject ;BS _ab .PdfObject ;_eaa *PdfAction ;_acc *PdfReader ;};func (_cbgd *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";
};func (_abcg *PdfWriter )seekByName (_bfcee _ab .PdfObject ,_dcegb []string ,_baae string )([]_ab .PdfObject ,error ){_fa .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_bfcee );var _ebdbd []_ab .PdfObject ;
if _beda ,_decddb :=_bfcee .(*_ab .PdfIndirectObject );_decddb {return _abcg .seekByName (_beda .PdfObject ,_dcegb ,_baae );};if _agdda ,_edebc :=_bfcee .(*_ab .PdfObjectStream );_edebc {return _abcg .seekByName (_agdda .PdfObjectDictionary ,_dcegb ,_baae );
};if _aedfe ,_fgeab :=_bfcee .(*_ab .PdfObjectDictionary );_fgeab {_fa .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_gdbge :=range _aedfe .Keys (){_gecg :=_aedfe .Get (_gdbge );if string (_gdbge )==_baae {_ebdbd =append (_ebdbd ,_gecg );};for _ ,_egffa :=range _dcegb {if string (_gdbge )==_egffa {_fa .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_egffa );
_bcaee ,_adefg :=_abcg .seekByName (_gecg ,_dcegb ,_baae );if _adefg !=nil {return _ebdbd ,_adefg ;};_ebdbd =append (_ebdbd ,_bcaee ...);break ;};};};return _ebdbd ,nil ;};return _ebdbd ,nil ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_abaae pdfCIDFontType0 )GetRuneMetrics (r rune )(_bc .CharMetrics ,bool ){return _bc .CharMetrics {Wx :_abaae ._dcgcd },true ;};func _cbgfd (_ecfb *_ab .PdfObjectDictionary )(*PdfFieldButton ,error ){_dadee :=&PdfFieldButton {};_dadee .Opt ,_ =_ab .GetArray (_ecfb .Get ("\u004f\u0070\u0074"));
return _dadee ,nil ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_fbc :=PdfColorDeviceGray (grayVal );return &_fbc ;};

// ToPdfObject implements interface PdfModel.
func (_gaed *PdfActionGoToE )ToPdfObject ()_ab .PdfObject {_gaed .PdfAction .ToPdfObject ();_cf :=_gaed ._cef ;_gba :=_cf .PdfObject .(*_ab .PdfObjectDictionary );_gba .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeGoToE )));if _gaed .F !=nil {_gba .Set ("\u0046",_gaed .F .ToPdfObject ());
};_gba .SetIfNotNil ("\u0044",_gaed .D );_gba .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gaed .NewWindow );_gba .SetIfNotNil ("\u0054",_gaed .T );return _cf ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_cfdbe FieldFlag )Mask ()uint32 {return uint32 (_cfdbe )};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fcba *PdfColorspaceSpecialPattern )ToPdfObject ()_ab .PdfObject {if _fcba .UnderlyingCS ==nil {return _ab .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_bcdd :=_ab .MakeArray (_ab .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_bcdd .Append (_fcba .UnderlyingCS .ToPdfObject ());
if _fcba ._ebb !=nil {_fcba ._ebb .PdfObject =_bcdd ;return _fcba ._ebb ;};return _bcdd ;};func _aegef (_afgbg []byte )([]byte ,error ){_fgbcf :=_gd .New ();if _ ,_efeacb :=_fb .Copy (_fgbcf ,_ffc .NewReader (_afgbg ));_efeacb !=nil {return nil ,_efeacb ;
};return _fgbcf .Sum (nil ),nil ;};func (_gafg *PdfReader )newPdfAnnotationWatermarkFromDict (_dceb *_ab .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_ged :=PdfAnnotationWatermark {};_ged .FixedPrint =_dceb .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_ged ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bea *PdfActionURI )ToPdfObject ()_ab .PdfObject {_bea .PdfAction .ToPdfObject ();_fec :=_bea ._cef ;_gda :=_fec .PdfObject .(*_ab .PdfObjectDictionary );_gda .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeURI )));_gda .SetIfNotNil ("\u0055\u0052\u0049",_bea .URI );
_gda .SetIfNotNil ("\u0049\u0073\u004da\u0070",_bea .IsMap );return _fec ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_dfeb *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_cfba *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_ab .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdgf ,_dcfdf :=_ab .GetNumbersAsFloat (objects );
if _dcfdf !=nil {return nil ,_dcfdf ;};return _cfba .ColorFromFloats (_gdgf );};

// GetCustomInfo returns a custom info value for the specified name.
func (_dbccf *PdfInfo )GetCustomInfo (name string )*_ab .PdfObjectString {var _fcca *_ab .PdfObjectString ;if _dbccf ._addfd ==nil {return _fcca ;};if _cdfa ,_gbbc :=_dbccf ._addfd .Get (*_ab .MakeName (name )).(*_ab .PdfObjectString );_gbbc {_fcca =_cdfa ;
};return _fcca ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gafab *PdfShadingType4 )ToPdfObject ()_ab .PdfObject {_gafab .PdfShading .ToPdfObject ();_cfgcc ,_aafg :=_gafab .getShadingDict ();if _aafg !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gafab .BitsPerCoordinate !=nil {_cfgcc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gafab .BitsPerCoordinate );};if _gafab .BitsPerComponent !=nil {_cfgcc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gafab .BitsPerComponent );
};if _gafab .BitsPerFlag !=nil {_cfgcc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gafab .BitsPerFlag );};if _gafab .Decode !=nil {_cfgcc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gafab .Decode );};if _gafab .Function !=nil {if len (_gafab .Function )==1{_cfgcc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gafab .Function [0].ToPdfObject ());
}else {_aaafa :=_ab .MakeArray ();for _ ,_cbdf :=range _gafab .Function {_aaafa .Append (_cbdf .ToPdfObject ());};_cfgcc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aaafa );};};return _gafab ._edbbg ;};func _dbde (_faffd _ab .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_gebb :=NewPdfColorspaceSpecialSeparation ();
if _ccbba ,_ebbe :=_faffd .(*_ab .PdfIndirectObject );_ebbe {_gebb ._dcaf =_ccbba ;};_faffd =_ab .TraceToDirectObject (_faffd );_gec ,_bfbd :=_faffd .(*_ab .PdfObjectArray );if !_bfbd {return nil ,_f .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _gec .Len ()!=4{return nil ,_f .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_faffd =_gec .Get (0);
_fgfga ,_bfbd :=_faffd .(*_ab .PdfObjectName );if !_bfbd {return nil ,_f .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_fgfga !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_f .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_faffd =_gec .Get (1);_fgfga ,_bfbd =_faffd .(*_ab .PdfObjectName );if !_bfbd {return nil ,_f .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_gebb .ColorantName =_fgfga ;_faffd =_gec .Get (2);_afbd ,_bdgb :=NewPdfColorspaceFromPdfObject (_faffd );if _bdgb !=nil {return nil ,_bdgb ;};_gebb .AlternateSpace =_afbd ;_bdcg ,_bdgb :=_cbacf (_gec .Get (3));if _bdgb !=nil {return nil ,_bdgb ;};_gebb .TintTransform =_bdcg ;
return _gebb ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_bdage pdfFontType0 )GetCharMetrics (code _dc .CharCode )(_bc .CharMetrics ,bool ){if _bdage .DescendantFont ==nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_bdage );
return _bc .CharMetrics {},false ;};return _bdage .DescendantFont .GetCharMetrics (code );};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_dggg :=PdfColorCalGray (grayVal );return &_dggg ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_gaeda *PdfWriter )SetRotation (rotate int64 )error {_eafad ,_caeff :=_ab .GetDict (_gaeda ._cdcee );if !_caeff {return ErrTypeCheck ;};_eafad .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_ab .MakeInteger (rotate ));return nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_ab .PdfObjectArray ;TI *_ab .PdfObjectInteger ;I *_ab .PdfObjectArray ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_fe .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_fe .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_fe .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_fafcc *PdfAppender ;_gcdc *DSS ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _ab .PdfObject ;Popup *PdfAnnotationPopup ;CA _ab .PdfObject ;RC _ab .PdfObject ;CreationDate _ab .PdfObject ;IRT _ab .PdfObject ;Subj _ab .PdfObject ;RT _ab .PdfObject ;IT _ab .PdfObject ;ExData _ab .PdfObject ;};

// SetAlpha sets the alpha layer for the image.
func (_fbacg *Image )SetAlpha (alpha []byte ){_fbacg ._dbdfad =alpha };

// HasExtGState checks whether a font is defined by the specified keyName.
func (_acbb *PdfPageResources )HasExtGState (keyName _ab .PdfObjectName )bool {_ ,_efeb :=_acbb .GetFontByName (keyName );return _efeb ;};

// SetContentStream sets the pattern cell's content stream.
func (_ebed *PdfTilingPattern )SetContentStream (content []byte ,encoder _ab .StreamEncoder )error {_cdgcc ,_bgcea :=_ebed ._cafaf .(*_ab .PdfObjectStream );if !_bgcea {_fa .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ebed ._cafaf );
return _ab .ErrTypeError ;};if encoder ==nil {encoder =_ab .NewRawEncoder ();};_egac :=_cdgcc .PdfObjectDictionary ;_agga :=encoder .MakeStreamDict ();_egac .Merge (_agga );_afbbf ,_dcbf :=encoder .EncodeBytes (content );if _dcbf !=nil {return _dcbf ;};
_egac .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ab .MakeInteger (int64 (len (_afbbf ))));_cdgcc .Stream =_afbbf ;return nil ;};func _cbacf (_degdb _ab .PdfObject )(PdfFunction ,error ){_degdb =_ab .ResolveReference (_degdb );if _dbegb ,_aecbg :=_degdb .(*_ab .PdfObjectStream );
_aecbg {_edfee :=_dbegb .PdfObjectDictionary ;_acaag ,_bggdb :=_edfee .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ab .PdfObjectInteger );if !_bggdb {_fa .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_acaag ==0{return _cfcg (_dbegb );}else if *_acaag ==4{return _egfag (_dbegb );
}else {return nil ,_ca .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _bceeg ,_bebed :=_degdb .(*_ab .PdfIndirectObject );_bebed {_fgeea ,_gdff :=_bceeg .PdfObject .(*_ab .PdfObjectDictionary );
if !_gdff {_fa .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_dfbbf ,_gdff :=_fgeea .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ab .PdfObjectInteger );
if !_gdff {_fa .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_dfbbf ==2{return _cbdg (_bceeg );}else if *_dfbbf ==3{return _gfadf (_bceeg );}else {return nil ,_ca .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _ageag ,_fdaee :=_degdb .(*_ab .PdfObjectDictionary );
_fdaee {_bgded ,_efdc :=_ageag .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ab .PdfObjectInteger );if !_efdc {_fa .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bgded ==2{return _cbdg (_ageag );}else if *_bgded ==3{return _gfadf (_ageag );
}else {return nil ,_ca .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_fa .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_degdb );
return nil ,_ca .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_caec *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_degc :=_caec .GetContentStreamObjs ();wrapContents =wrapContents &&len (_degc )> 0;_fcdbf :=_ab .NewFlateEncoder ();_fdfe :=_ab .MakeArray ();if wrapContents {_gafgc ,_gddc :=_ab .MakeStream ([]byte ("\u0071\u000a"),_fcdbf );
if _gddc !=nil {return _gddc ;};_fdfe .Append (_gafgc );};_fdfe .Append (_degc ...);if wrapContents {_cgcb ,_aeafg :=_ab .MakeStream ([]byte ("\u000a\u0051\u000a"),_fcdbf );if _aeafg !=nil {return _aeafg ;};_fdfe .Append (_cgcb );};_eedad ,_cbcdf :=_ab .MakeStream (cs ,_fcdbf );
if _cbcdf !=nil {return _cbcdf ;};_fdfe .Append (_eedad );_caec .Contents =_fdfe ;return nil ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _ab .StreamEncoder )(*XObjectImage ,error ){_fedeg :=NewXObjectImage ();return UpdateXObjectImageFromImage (_fedeg ,img ,cs ,encoder );};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _ab .PdfObject ;Flags _ab .PdfObject ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_acfe *_ab .PdfIndirectObject ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_cea *PdfAction )GetContext ()PdfModel {if _cea ==nil {return nil ;};return _cea ._ad ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _ab .PdfObject ;Mac _ab .PdfObject ;Unix _ab .PdfObject ;NewWindow _ab .PdfObject ;};

// Initialize initializes the PdfSignature.
func (_dbced *PdfSignature )Initialize ()error {if _dbced .Handler ==nil {return _ca .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _dbced .Handler .InitSignature (_dbced );};

// GetAction returns the PDF action for the annotation link.
func (_fda *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _fda ._eaa !=nil {return _fda ._eaa ,nil ;};if _fda .A ==nil {return nil ,nil ;};if _fda ._acc ==nil {return nil ,nil ;};_ceaf ,_fadc :=_fda ._acc .loadAction (_fda .A );if _fadc !=nil {return nil ,_fadc ;
};_fda ._eaa =_ceaf ;return _fda ._eaa ,nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_eabad *PdfPage )AppendContentStream (contentStr string )error {_affge ,_bgad :=_eabad .GetContentStreams ();if _bgad !=nil {return _bgad ;};if len (_affge )==0{_affge =[]string {contentStr };return _eabad .SetContentStreams (_affge ,_ab .NewFlateEncoder ());
};var _ddcb _ffc .Buffer ;_ddcb .WriteString (_affge [len (_affge )-1]);_ddcb .WriteString ("\u000a");_ddcb .WriteString (contentStr );_affge [len (_affge )-1]=_ddcb .String ();return _eabad .SetContentStreams (_affge ,_ab .NewFlateEncoder ());};func (_gfddd *pdfFontSimple )addEncoding ()error {var (_ffeee string ;
_dbbb map[_dc .CharCode ]_dc .GlyphName ;_cdab _dc .SimpleEncoder ;);if _gfddd .Encoder ()!=nil {_cbgeb ,_eecc :=_gfddd .Encoder ().(_dc .SimpleEncoder );if _eecc &&_cbgeb !=nil {_ffeee =_cbgeb .BaseName ();};};if _gfddd .Encoding !=nil {_cgadd ,_bbgbf ,_efagc :=_gfddd .getFontEncoding ();
if _efagc !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gfddd ._egceb ,_gfddd ._gcab ,_gfddd .Encoding ,_gfddd .Encoding ,_efagc );
return _efagc ;};if _cgadd !=""{_ffeee =_cgadd ;};_dbbb =_bbgbf ;_cdab ,_efagc =_dc .NewSimpleTextEncoder (_ffeee ,_dbbb );if _efagc !=nil {return _efagc ;};};if _cdab ==nil {_bacgc :=_gfddd ._dfaf ;if _bacgc !=nil {switch _gfddd ._gcab {case "\u0054\u0079\u0070e\u0031":if _bacgc .fontFile !=nil &&_bacgc .fontFile ._bfbdg !=nil {_fa .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_cdab =_bacgc .fontFile ._bfbdg ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _bacgc ._cfga !=nil {_fa .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_ecdba ,_caff :=_bacgc ._cfga .MakeEncoder ();
if _caff ==nil {_cdab =_ecdba ;};};};};};if _cdab !=nil {if _dbbb !=nil {_fa .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dbbb ,_gfddd .baseFields ());_cdab =_dc .ApplyDifferences (_cdab ,_dbbb );
};_gfddd .SetEncoder (_cdab );};return nil ;};func (_aacfc *pdfFontType0 )baseFields ()*fontCommon {return &_aacfc .fontCommon };

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_bafddg *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_fecf :=_bafddg .actualFont ();if _fecf ==nil {_fa .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_bafddg ._cgdec );
return _bc .CharMetrics {},false ;};if _edfg ,_dbbfe :=_fecf .GetRuneMetrics (r );_dbbfe {return _edfg ,true ;};if _aeae ,_bed :=_bafddg .GetFontDescriptor ();_bed ==nil &&_aeae !=nil {return _bc .CharMetrics {Wx :_aeae ._dgffc },true ;};_fa .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bafddg );
return _bc .CharMetrics {},false ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_ab .PdfObjectArray ;Matrix *_ab .PdfObjectArray ;Function []PdfFunction ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_gffe *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gegd :=vals [0];if _gegd < 0.0||_gegd > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_ggdb :=vals [1];if _ggdb < 0.0||_ggdb > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egaaf :=vals [2];if _egaaf < 0.0||_egaaf > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_eccgb :=NewPdfColorDeviceRGB (_gegd ,_ggdb ,_egaaf );return _eccgb ,nil ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_gdedf *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _gdedf ._dgbge .(*PdfShadingPattern );};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_fffc *PdfPageResources )HasXObjectByName (keyName _ab .PdfObjectName )bool {_bbaae ,_ :=_fffc .GetXObjectByName (keyName );return _bbaae !=nil ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_bfdad *PdfPageResourcesColorspaces )Set (key _ab .PdfObjectName ,val PdfColorspace ){if _ ,_bccee :=_bfdad .Colorspaces [string (key )];!_bccee {_bfdad .Names =append (_bfdad .Names ,string (key ));};_bfdad .Colorspaces [string (key )]=val ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_dfae *PdfPageResources )SetPatternByName (keyName _ab .PdfObjectName ,pattern _ab .PdfObject )error {if _dfae .Pattern ==nil {_dfae .Pattern =_ab .MakeDict ();};_gfag ,_bbgeb :=_dfae .Pattern .(*_ab .PdfObjectDictionary );if !_bbgeb {return _ab .ErrTypeError ;
};_gfag .Set (keyName ,pattern );return nil ;};func (_gfdge *PdfReader )traverseObjectData (_bfebc _ab .PdfObject )error {return _ab .ResolveReferencesDeep (_bfebc ,_gfdge ._gfdgc );};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_adc :=NewPdfAnnotation ();_eagb :=&PdfAnnotationCaret {};_eagb .PdfAnnotation =_adc ;_eagb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_adc .SetContext (_eagb );return _eagb ;};type pdfSignDictionary struct{*_ab .PdfObjectDictionary ;
_decg *SignatureHandler ;_ecefgb *PdfSignature ;_bddb int64 ;_gfefe int ;_bcbega int ;_cdgcd int ;_efffe int ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_fce *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _fce .AlternateSpace ==nil {return nil ,_ca .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _fce .AlternateSpace .ColorToRGB (color );};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_bgcf ,_cdgfg :=_ac .Open (filePath );if _cdgfg !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_cdgfg );
return nil ,_cdgfg ;};defer _bgcf .Close ();return NewPdfFontFromTTF (_bgcf );};

// GetOptimizer returns current PDF optimizer.
func (_gaaacb *PdfWriter )GetOptimizer ()Optimizer {return _gaaacb ._ggdcg };

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _bg .Time )(PdfDate ,error ){_eagfdb :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_facf ,_ :=_fcg .ParseInt (_eagfdb [1:3],10,32);_dceaf ,_ :=_fcg .ParseInt (_eagfdb [4:6],10,32);return PdfDate {_fgcef :int64 (timeObj .Year ()),_badbee :int64 (timeObj .Month ()),_dbca :int64 (timeObj .Day ()),_bfce :int64 (timeObj .Hour ()),_ffcbb :int64 (timeObj .Minute ()),_dgae :int64 (timeObj .Second ()),_fdfd :_eagfdb [0],_baeb :_facf ,_aegfc :_dceaf },nil ;
};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_adce *PdfPageResources )GetXObjectImageByName (keyName _ab .PdfObjectName )(*XObjectImage ,error ){_ceccf ,_gfgbbd :=_adce .GetXObjectByName (keyName );if _ceccf ==nil {return nil ,nil ;};if _gfgbbd !=XObjectTypeImage {return nil ,_ca .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_gdfa ,_eded :=NewXObjectImageFromStream (_ceccf );if _eded !=nil {return nil ,_eded ;};return _gdfa ,nil ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};func (_cgfe *PdfReader )newPdfAnnotationLineFromDict (_aadg *_ab .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_geff :=PdfAnnotationLine {};_abg ,_gegb :=_cgfe .newPdfAnnotationMarkupFromDict (_aadg );
if _gegb !=nil {return nil ,_gegb ;};_geff .PdfAnnotationMarkup =_abg ;_geff .L =_aadg .Get ("\u004c");_geff .BS =_aadg .Get ("\u0042\u0053");_geff .LE =_aadg .Get ("\u004c\u0045");_geff .IC =_aadg .Get ("\u0049\u0043");_geff .LL =_aadg .Get ("\u004c\u004c");
_geff .LLE =_aadg .Get ("\u004c\u004c\u0045");_geff .Cap =_aadg .Get ("\u0043\u0061\u0070");_geff .IT =_aadg .Get ("\u0049\u0054");_geff .LLO =_aadg .Get ("\u004c\u004c\u004f");_geff .CP =_aadg .Get ("\u0043\u0050");_geff .Measure =_aadg .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");
_geff .CO =_aadg .Get ("\u0043\u004f");return &_geff ,nil ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ab .PdfObject ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_gdef :=PdfPage {};_gdef ._bedg =_ab .MakeDict ();_gdef .Resources =NewPdfPageResources ();_cfeee :=_ab .PdfIndirectObject {};_cfeee .PdfObject =_gdef ._bedg ;_gdef ._agafe =&_cfeee ;return &_gdef ;};

// ToPdfObject converts the font to a PDF representation.
func (_gfbd *pdfFontType3 )ToPdfObject ()_ab .PdfObject {if _gfbd ._cgac ==nil {_gfbd ._cgac =&_ab .PdfIndirectObject {};};_aceg :=_gfbd .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_gfbd ._cgac .PdfObject =_aceg ;if _gfbd .FirstChar !=nil {_aceg .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_gfbd .FirstChar );
};if _gfbd .LastChar !=nil {_aceg .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_gfbd .LastChar );};if _gfbd .Widths !=nil {_aceg .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_gfbd .Widths );};if _gfbd .Encoding !=nil {_aceg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gfbd .Encoding );
}else if _gfbd ._cebbg !=nil {_eeae :=_gfbd ._cebbg .ToPdfObject ();if _eeae !=nil {_aceg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_eeae );};};if _gfbd .FontBBox !=nil {_aceg .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_gfbd .FontBBox );
};if _gfbd .FontMatrix !=nil {_aceg .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_gfbd .FontMatrix );};if _gfbd .CharProcs !=nil {_aceg .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_gfbd .CharProcs );};if _gfbd .Resources !=nil {_aceg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gfbd .Resources );
};return _gfbd ._cgac ;};func (_dfdca *PdfWriter )setDocumentIDs (_eggc ,_ebeeg string ){_dfdca ._gbabcf =_ab .MakeArray (_ab .MakeHexString (_eggc ),_ab .MakeHexString (_ebeeg ));};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_gfg :=NewPdfAction ();_gfa :=&PdfActionJavaScript {};_gfa .PdfAction =_gfg ;_gfg .SetContext (_gfa );return _gfa ;};func (_dcbe *PdfReader )newPdfAnnotationCaretFromDict (_ecbf *_ab .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_cabb :=PdfAnnotationCaret {};
_bgagc ,_dgff :=_dcbe .newPdfAnnotationMarkupFromDict (_ecbf );if _dgff !=nil {return nil ,_dgff ;};_cabb .PdfAnnotationMarkup =_bgagc ;_cabb .RD =_ecbf .Get ("\u0052\u0044");_cabb .Sy =_ecbf .Get ("\u0053\u0079");return &_cabb ,nil ;};func (_dfge *PdfReader )newPdfAnnotationPolyLineFromDict (_efcf *_ab .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_acdac :=PdfAnnotationPolyLine {};
_dgfd ,_efaf :=_dfge .newPdfAnnotationMarkupFromDict (_efcf );if _efaf !=nil {return nil ,_efaf ;};_acdac .PdfAnnotationMarkup =_dgfd ;_acdac .Vertices =_efcf .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_acdac .LE =_efcf .Get ("\u004c\u0045");
_acdac .BS =_efcf .Get ("\u0042\u0053");_acdac .IC =_efcf .Get ("\u0049\u0043");_acdac .BE =_efcf .Get ("\u0042\u0045");_acdac .IT =_efcf .Get ("\u0049\u0054");_acdac .Measure =_efcf .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_acdac ,nil ;};
func (_afe *PdfReader )newPdfAnnotationPopupFromDict (_gdda *_ab .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_dfc :=PdfAnnotationPopup {};_dfc .Parent =_gdda .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_dfc .Open =_gdda .Get ("\u004f\u0070\u0065\u006e");
return &_dfc ,nil ;};func _efaba (_cbeda *_ab .PdfObjectDictionary ,_adef *fontCommon )(*pdfFontType0 ,error ){_bbfd ,_edcd :=_ab .GetArray (_cbeda .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_edcd {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_adef );
return nil ,_ab .ErrRangeError ;};if _bbfd .Len ()!=1{_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_bbfd .Len ());return nil ,_ab .ErrRangeError ;
};_caee ,_cddd :=_aagba (_bbfd .Get (0),false );if _cddd !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_cddd ,_adef );
return nil ,_cddd ;};_fdge :=_fbbff (_adef );_fdge .DescendantFont =_caee ;_aacgc ,_edcd :=_ab .GetNameVal (_cbeda .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _edcd {if _aacgc =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_aacgc =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_fdge ._fdbf =_dc .NewIdentityTextEncoder (_aacgc );
}else if _egc .IsPredefinedCMap (_aacgc ){_fdge ._dbddg ,_cddd =_egc .LoadPredefinedCMap (_aacgc );if _cddd !=nil {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_aacgc ,_cddd );
};}else {_fa .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_aacgc );};};if _acacb :=_caee .baseFields ()._eefee ;_acacb !=nil {if _ddce :=_acacb .Name ();_ddce =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_ddce =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_ddce =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_ddce =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_fdge ._fdbf =_dc .NewCMapEncoder (_aacgc ,_fdge ._dbddg ,_acacb );
};};return _fdge ,nil ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_dgbge PdfModel ;_cafaf _ab .PdfObject ;};func _fbebb (_cead *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_cead }};func _aafc (_bdgeb _ab .PdfObject )(*_ab .PdfObjectDictionary ,*fontCommon ,error ){_ebaadd :=&fontCommon {};
if _gdgae ,_cbef :=_bdgeb .(*_ab .PdfIndirectObject );_cbef {_ebaadd ._afaca =_gdgae .ObjectNumber ;};_gdcc ,_aaac :=_ab .GetDict (_bdgeb );if !_aaac {_fa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bdgeb );
return nil ,nil ,ErrFontNotSupported ;};_dgeg ,_aaac :=_ab .GetNameVal (_gdcc .Get ("\u0054\u0079\u0070\u0065"));if !_aaac {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _dgeg !="\u0046\u006f\u006e\u0074"{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_dgeg ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_ab .ErrTypeError ;};_cecfg ,_aaac :=_ab .GetNameVal (_gdcc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_aaac {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_ebaadd ._gcab =_cecfg ;_afea ,_aaac :=_ab .GetNameVal (_gdcc .Get ("\u004e\u0061\u006d\u0065"));if _aaac {_ebaadd ._cgea =_afea ;};_abeb :=_gdcc .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _abeb !=nil {_ebaadd ._gded =_ab .TraceToDirectObject (_abeb );
_ecdfa ,_bgce :=_gbgdc (_ebaadd ._gded ,_ebaadd );if _bgce !=nil {return _gdcc ,_ebaadd ,_bgce ;};_ebaadd ._eefee =_ecdfa ;}else if _cecfg =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_cecfg =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_eafb ,_acdfa :=_egc .NewCIDSystemInfo (_gdcc .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _acdfa !=nil {return _gdcc ,_ebaadd ,_acdfa ;};_eagbg :=_f .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_eafb .Registry ,_eafb .Ordering );if _egc .IsPredefinedCMap (_eagbg ){_ebaadd ._eefee ,_acdfa =_egc .LoadPredefinedCMap (_eagbg );
if _acdfa !=nil {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_eagbg ,_acdfa );
};};};_gdaba :=_gdcc .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _gdaba !=nil {_bacb ,_beffc :=_dcfcb (_gdaba );if _beffc !=nil {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_beffc );
return _gdcc ,_ebaadd ,_beffc ;};_ebaadd ._dfaf =_bacb ;};if _cecfg !="\u0054\u0079\u0070e\u0033"{_fdae ,_dgbfe :=_ab .GetNameVal (_gdcc .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_dgbfe {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _gdcc ,_ebaadd ,ErrRequiredAttributeMissing ;};_ebaadd ._egceb =_fdae ;};return _gdcc ,_ebaadd ,nil ;};func _bcbg (_bebec *_ab .PdfObjectDictionary )(*PdfShadingPattern ,error ){_gaeg :=&PdfShadingPattern {};_daebb :=_bebec .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");
if _daebb ==nil {_fa .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cgdff ,_geda :=_ebeca (_daebb );if _geda !=nil {_fa .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_geda );
return nil ,_geda ;};_gaeg .Shading =_cgdff ;if _gcddb :=_bebec .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gcddb !=nil {_dbgcg ,_edaea :=_gcddb .(*_ab .PdfObjectArray );if !_edaea {_fa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcddb );
return nil ,_ab .ErrTypeError ;};_gaeg .Matrix =_dbgcg ;};if _acgb :=_bebec .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_acgb !=nil {_gaeg .ExtGState =_acgb ;};return _gaeg ,nil ;};

// SetBorderWidth sets the style's border width.
func (_afdb *PdfBorderStyle )SetBorderWidth (width float64 ){_afdb .W =&width };

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_aebea *PdfPattern )GetContainingPdfObject ()_ab .PdfObject {return _aebea ._cafaf };

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_adf :=NewPdfAnnotation ();_cfd :=&PdfAnnotationLink {};_cfd .PdfAnnotation =_adf ;_adf .SetContext (_cfd );return _cfd ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _ab .PdfObject ;FontFamily _ab .PdfObject ;FontStretch _ab .PdfObject ;FontWeight _ab .PdfObject ;Flags _ab .PdfObject ;FontBBox _ab .PdfObject ;ItalicAngle _ab .PdfObject ;Ascent _ab .PdfObject ;Descent _ab .PdfObject ;
Leading _ab .PdfObject ;CapHeight _ab .PdfObject ;XHeight _ab .PdfObject ;StemV _ab .PdfObject ;StemH _ab .PdfObject ;AvgWidth _ab .PdfObject ;MaxWidth _ab .PdfObject ;MissingWidth _ab .PdfObject ;FontFile _ab .PdfObject ;FontFile2 _ab .PdfObject ;FontFile3 _ab .PdfObject ;
CharSet _ab .PdfObject ;_badbd int ;_dgffc float64 ;*fontFile ;_cfga *_bc .TtfType ;

// Additional entries for CIDFonts
Style _ab .PdfObject ;Lang _ab .PdfObject ;FD _ab .PdfObject ;CIDSet _ab .PdfObject ;_fgggc *_ab .PdfIndirectObject ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_dfafb *PdfPage )ToPdfObject ()_ab .PdfObject {_afcgd :=_dfafb ._agafe ;_dfafb .GetPageDict ();return _afcgd ;};func (_fgab *LTV )validateSig (_cffag *PdfSignature )error {if _cffag ==nil ||_cffag .Contents ==nil ||len (_cffag .Contents .Bytes ())==0{return _f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_cffag );
};return nil ;};func _baca (_bcfd *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_fagb ,_fdec :=_ab .GetDict (_bcfd .AP );if !_fdec {return nil ,nil ,_ca .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _fagb ==nil {return nil ,nil ,nil ;};_ebaaa ,_fdec :=_ab .GetArray (_bcfd .Rect );if !_fdec ||_ebaaa .Len ()!=4{return nil ,nil ,_ca .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_bbgb ,_aagf :=NewPdfRectangle (*_ebaaa );
if _aagf !=nil {return nil ,nil ,_aagf ;};_fadg :=_ab .TraceToDirectObject (_fagb .Get ("\u004e"));switch _edca :=_fadg .(type ){case *_ab .PdfObjectStream :_feeec :=_edca ;_dfef ,_edggf :=NewXObjectFormFromStream (_feeec );return _dfef ,_bbgb ,_edggf ;
case *_ab .PdfObjectDictionary :_gfgd :=_edca ;_cebd ,_gbabcc :=_ab .GetName (_bcfd .AS );if !_gbabcc {return nil ,nil ,nil ;};if _gfgd .Get (*_cebd )==nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_cfdg ,_gbabcc :=_ab .GetStream (_gfgd .Get (*_cebd ));if !_gbabcc {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_cebd );
return nil ,nil ,_ca .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_bgfdd ,_dgeba :=NewXObjectFormFromStream (_cfdg );return _bgfdd ,_bbgb ,_dgeba ;};_fa .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_fadg );
return nil ,nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// ToPdfObject returns the PDF representation of the pattern.
func (_fcab *PdfPattern )ToPdfObject ()_ab .PdfObject {_cgebc :=_fcab .getDict ();_cgebc .Set ("\u0054\u0079\u0070\u0065",_ab .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_cgebc .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_ab .MakeInteger (_fcab .PatternType ));
return _fcab ._cafaf ;};func (_cadbf *fontFile )parseASCIIPart (_fcbeg []byte )error {if len (_fcbeg )< 2||string (_fcbeg [:2])!="\u0025\u0021"{return _ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_cbabf ,_cddge ,_cffdaa :=_bbeee (_fcbeg );if _cffdaa !=nil {return _cffdaa ;};_ebafc :=_ddfe (_cbabf );_cadbf ._gdagf =_ebafc ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _cadbf ._gdagf ==""{_fa .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _cddge !=""{_ggcdf ,_bbgfc :=_efead (_cddge );if _bbgfc !=nil {return _bbgfc ;};_ffafb ,_bbgfc :=_dc .NewCustomSimpleTextEncoder (_ggcdf ,nil );if _bbgfc !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_bbgfc );
return nil ;};_cadbf ._bfbdg =_ffafb ;};return nil ;};func _daeeg (_dfceee _ab .PdfObject )[]*_ab .PdfObjectStream {if _dfceee ==nil {return nil ;};_gddcc ,_agdfg :=_ab .GetArray (_dfceee );if !_agdfg ||_gddcc .Len ()==0{return nil ;};_ffbfd :=make ([]*_ab .PdfObjectStream ,0,_gddcc .Len ());
for _ ,_bgfdab :=range _gddcc .Elements (){if _dbecf ,_gdgbgc :=_ab .GetStream (_bgfdab );_gdgbgc {_ffbfd =append (_ffbfd ,_dbecf );};};return _ffbfd ;};func (_eccb fontCommon )coreString ()string {_cfcf :="";if _eccb ._dfaf !=nil {_cfcf =_eccb ._dfaf .String ();
};return _f .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_eccb ._gcab ,_eccb ._egceb ,_eccb ._cgea ,_eccb ._afaca ,_eccb ._gded !=nil ,_eccb .fontFlags (),_cfcf );
};

// ToPdfObject implements interface PdfModel.
func (_ecb *PdfActionHide )ToPdfObject ()_ab .PdfObject {_ecb .PdfAction .ToPdfObject ();_geg :=_ecb ._cef ;_abb :=_geg .PdfObject .(*_ab .PdfObjectDictionary );_abb .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeHide )));_abb .SetIfNotNil ("\u0054",_ecb .T );
_abb .SetIfNotNil ("\u0048",_ecb .H );return _geg ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_fbebf byte )byte ;

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// ColorToRGB converts gray -> rgb for a single color component.
func (_bfff *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_cfcac ,_gcfg :=color .(*PdfColorDeviceGray );if !_gcfg {_fa .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_cfcac ),float64 (*_cfcac ),float64 (*_cfcac )),nil ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_faeb *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_bgbcd :=range pages {_bgbcd =_bgbcd .Duplicate ();_cgccg (_bgbcd );_faeb ._abed =append (_faeb ._abed ,_bgbcd );};};

// AddAnnotation appends `annot` to the list of page annotations.
func (_bgdbf *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _bgdbf ._adccb ==nil {_bgdbf .GetAnnotations ();};_bgdbf ._adccb =append (_bgdbf ._adccb ,annot );};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_gcedd *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _gcedd ._degg !=nil {return _gcedd ._degg ,nil ;};if _gcedd .ColorSpace ==nil {return nil ,nil ;};_ffbdd ,_bcafg :=_bcgad (_gcedd .ColorSpace );if _bcafg !=nil {return nil ,_bcafg ;
};_gcedd ._degg =_ffbdd ;return _gcedd ._degg ,nil ;};

// Add appends a top level outline item to the outline.
func (_fdgbg *Outline )Add (item *OutlineItem ){_fdgbg .Entries =append (_fdgbg .Entries ,item )};type fontCommon struct{_egceb string ;_gcab string ;_cgea string ;_gded _ab .PdfObject ;_eefee *_egc .CMap ;_dfaf *PdfFontDescriptor ;_afaca int64 ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_fcff *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _fcff .flattenFieldsWithOpts (false ,appgen ,opts );};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _ab .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _ab .PdfObject ;Contents _ab .PdfObject ;
Rotate *int64 ;Group _ab .PdfObject ;Thumb _ab .PdfObject ;B _ab .PdfObject ;Dur _ab .PdfObject ;Trans _ab .PdfObject ;AA _ab .PdfObject ;Metadata _ab .PdfObject ;PieceInfo _ab .PdfObject ;StructParents _ab .PdfObject ;ID _ab .PdfObject ;PZ _ab .PdfObject ;
SeparationInfo _ab .PdfObject ;Tabs _ab .PdfObject ;TemplateInstantiated _ab .PdfObject ;PresSteps _ab .PdfObject ;UserUnit _ab .PdfObject ;VP _ab .PdfObject ;Annots _ab .PdfObject ;_adccb []*PdfAnnotation ;_bedg *_ab .PdfObjectDictionary ;_agafe *_ab .PdfIndirectObject ;
_addeg *PdfReader ;};

// CustomKeys returns all custom info keys as list.
func (_bdca *PdfInfo )CustomKeys ()[]string {if _bdca ._addfd ==nil {return nil ;};_efae :=make ([]string ,len (_bdca ._addfd .Keys ()));for _ ,_dfde :=range _bdca ._addfd .Keys (){_efae =append (_efae ,_dfde .String ());};return _efae ;};func (_cfbfg *Image )samplesAddPadding (_agage []uint32 )[]uint32 {_agdd :=_cac .BytesPerLine (int (_cfbfg .Width ),int (_cfbfg .BitsPerComponent ),_cfbfg .ColorComponents )*(8/int (_cfbfg .BitsPerComponent ));
_eagfb :=_agdd *int (_cfbfg .Height );if len (_agage )==_eagfb {return _agage ;};_faafd :=make ([]uint32 ,_eagfb );_agccd :=int (_cfbfg .Width )*_cfbfg .ColorComponents ;for _aggb :=0;_aggb < int (_cfbfg .Height );_aggb ++{_fbfdf :=_aggb *int (_cfbfg .Width );
_cbcde :=_aggb *_agdd ;for _eabdd :=0;_eabdd < _agccd ;_eabdd ++{_faafd [_cbcde +_eabdd ]=_agage [_fbfdf +_eabdd ];};};return _faafd ;};

// Val returns the color value.
func (_efda *PdfColorDeviceGray )Val ()float64 {return float64 (*_efda )};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_face *Image )ColorAt (x ,y int )(_ce .Color ,error ){_aggf :=_cac .BytesPerLine (int (_face .Width ),int (_face .BitsPerComponent ),_face .ColorComponents );switch _face .ColorComponents {case 1:return _cac .ColorAtGrayscale (x ,y ,int (_face .BitsPerComponent ),_aggf ,_face .Data ,_face ._aaefg );
case 3:return _cac .ColorAtNRGBA (x ,y ,int (_face .Width ),_aggf ,int (_face .BitsPerComponent ),_face .Data ,_face ._dbdfad ,_face ._aaefg );case 4:return _cac .ColorAtCMYK (x ,y ,int (_face .Width ),_face .Data ,_face ._aaefg );};_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_face .ColorComponents ,_face .BitsPerComponent );
return nil ,_ca .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// ToPdfObject converts date to a PDF string object.
func (_aggbf *PdfDate )ToPdfObject ()_ab .PdfObject {_fadgf :=_f .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_aggbf ._fgcef ,_aggbf ._badbee ,_aggbf ._dbca ,_aggbf ._bfce ,_aggbf ._ffcbb ,_aggbf ._dgae ,_aggbf ._fdfd ,_aggbf ._baeb ,_aggbf ._aegfc );
return _ab .MakeString (_fadgf );};

// GetNumPages returns the number of pages in the document.
func (_affae *PdfReader )GetNumPages ()(int ,error ){if _affae ._gcabf .GetCrypter ()!=nil &&!_affae ._gcabf .IsAuthenticated (){return 0,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_affae ._ffbe ),nil ;};func (_aag *PdfReader )newPdfActionGotoEFromDict (_abc *_ab .PdfObjectDictionary )(*PdfActionGoToE ,error ){_gcba ,_dec :=_ecdc (_abc .Get ("\u0046"));if _dec !=nil {return nil ,_dec ;};return &PdfActionGoToE {D :_abc .Get ("\u0044"),NewWindow :_abc .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_abc .Get ("\u0054"),F :_gcba },nil ;
};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_ebbf *PdfOutline )GetContainingPdfObject ()_ab .PdfObject {return _ebbf ._dbef };type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_gae :=NewPdfAction ();_cec :=&PdfActionHide {};_cec .PdfAction =_gae ;_gae .SetContext (_cec );return _cec ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_gaga :=&PdfFieldSignature {};_gaga .PdfField =NewPdfField ();_gaga .PdfField .SetContext (_gaga );_gaga .PdfAnnotationWidget =NewPdfAnnotationWidget ();_gaga .PdfAnnotationWidget .SetContext (_gaga );
_gaga .PdfAnnotationWidget ._ddg =_gaga .PdfField ._ggde ;_gaga .T =_ab .MakeString ("");_gaga .F =_ab .MakeInteger (132);_gaga .V =signature ;return _gaga ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _ab .PdfObject ;Name _ab .PdfObject ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_fagd *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_ab .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_gfge :=&PdfColorPattern {};_gggdg ,_ggag :=objects [len (objects )-1].(*_ab .PdfObjectName );if !_ggag {_fa .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_gfge .PatternName =*_gggdg ;if len (objects )> 1{_ecff :=objects [0:len (objects )-1];if _fagd .UnderlyingCS ==nil {_fa .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_ca .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_cbfa ,_cfgff :=_fagd .UnderlyingCS .ColorFromPdfObjects (_ecff );if _cfgff !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_cfgff );
return nil ,_cfgff ;};_gfge .Color =_cbfa ;};return _gfge ,nil ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_fdegc _fb .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_adaa _ga .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_dfgec _ga .Image )(*Image ,error );

// Compress an image.
Compress (_cafacb *Image ,_affaa int64 )(*Image ,error );};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_eagg *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _eagg .Alternate ==nil {_fa .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _eagg .N ==1{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_aade :=NewPdfColorspaceDeviceGray ();return _aade .ColorToRGB (color );}else if _eagg .N ==3{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _eagg .N ==4{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_ceddgd :=NewPdfColorspaceDeviceCMYK ();return _ceddgd .ColorToRGB (color );}else {return nil ,_ca .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_fa .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_eagg );
return _eagg .Alternate .ColorToRGB (color );};func (_fafde *PdfWriter )adjustXRefAffectedVersion (_caaccg bool ){if _caaccg &&_fafde ._ecfdb .Major ==1&&_fafde ._ecfdb .Minor < 5{_fafde ._ecfdb .Minor =5;};};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_abfb :=&PdfColorspaceCalGray {};_abfb .BlackPoint =[]float64 {0.0,0.0,0.0};_abfb .Gamma =1;return _abfb ;};func (_gbef *PdfWriter )writeObjects (){_fa .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_gbef ._acgcfc ));
_gbef ._daaee =make (map[int ]crossReference );_gbef ._daaee [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _gbef ._ccfdd .ObjectMap !=nil {for _gfage ,_aagdc :=range _gbef ._ccfdd .ObjectMap {if _gfage ==0{continue ;};if _aagdc .XType ==_ab .XrefTypeObjectStream {_fcdcg :=crossReference {Type :2,ObjectNumber :_aagdc .OsObjNumber ,Index :_aagdc .OsObjIndex };
_gbef ._daaee [_gfage ]=_fcdcg ;};if _aagdc .XType ==_ab .XrefTypeTableEntry {_cbgdb :=crossReference {Type :1,ObjectNumber :_aagdc .ObjectNumber ,Offset :_aagdc .Offset };_gbef ._daaee [_gfage ]=_cbgdb ;};};};};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_bc .CharMetrics ;

// ToInteger convert to an integer format.
func (_gdgc *PdfColorDeviceGray )ToInteger (bits int )uint32 {_dcea :=_ced .Pow (2,float64 (bits ))-1;return uint32 (_dcea *_gdgc .Val ());};

// GetOutlineTree returns the outline tree.
func (_bdaga *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _bdaga ._cbfd };

// SetVersion sets the PDF version of the output file.
func (_bgcae *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_bgcae ._ecfdb .Major =majorVersion ;_bgcae ._ecfdb .Minor =minorVersion ;};func (_cad *PdfReader )newPdfActionRenditionFromDict (_bbe *_ab .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_bbe .Get ("\u0052"),AN :_bbe .Get ("\u0041\u004e"),OP :_bbe .Get ("\u004f\u0050"),JS :_bbe .Get ("\u004a\u0053")},nil ;
};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_gbebf *PdfReader )GetNameDictionary ()(_ab .PdfObject ,error ){_cffec :=_ab .ResolveReference (_gbebf ._bgffe .Get ("\u004e\u0061\u006de\u0073"));if _cffec ==nil {return nil ,nil ;};if !_gbebf ._ccbag {_fdcfc :=_gbebf .traverseObjectData (_cffec );
if _fdcfc !=nil {return nil ,_fdcfc ;};};return _cffec ,nil ;};

// Write writes out the PDF.
func (_ccad *PdfWriter )Write (writer _fb .Writer )error {_fa .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_dgfffb :=_ccad .checkLicense ();if _dgfffb !=nil {return _dgfffb ;};if _dgfffb =_ccad .writeOutlines ();_dgfffb !=nil {return _dgfffb ;
};if _dgfffb =_ccad .writeAcroFormFields ();_dgfffb !=nil {return _dgfffb ;};_ccad .checkPendingObjects ();if _dgfffb =_ccad .writeOutputIntents ();_dgfffb !=nil {return _dgfffb ;};_ccad .setCatalogVersion ();_ccad .copyObjects ();if _dgfffb =_ccad .optimize ();
_dgfffb !=nil {return _dgfffb ;};if _dgfffb =_ccad .optimizeDocument ();_dgfffb !=nil {return _dgfffb ;};var _dfcef _cc .Hash ;if _ccad ._gcgg {_dfcef =_fc .New ();writer =_fb .MultiWriter (_dfcef ,writer );};_ccad .setWriter (writer );_gacee :=_ccad .checkCrossReferenceStream ();
_gcaad ,_gacee :=_ccad .mapObjectStreams (_gacee );_ccad .adjustXRefAffectedVersion (_gacee );_ccad .writeDocumentVersion ();_ccad .updateObjectNumbers ();_ccad .writeObjects ();if _dgfffb =_ccad .writeObjectsInStreams (_gcaad );_dgfffb !=nil {return _dgfffb ;
};_cfad :=_ccad ._abbce ;var _eccab int ;for _baeed :=range _ccad ._daaee {if _baeed > _eccab {_eccab =_baeed ;};};if _ccad ._gcgg {if _dgfffb =_ccad .setHashIDs (_dfcef );_dgfffb !=nil {return _dgfffb ;};};if _gacee {if _dgfffb =_ccad .writeXRefStreams (_eccab ,_cfad );
_dgfffb !=nil {return _dgfffb ;};}else {_ccad .writeTrailer (_eccab );};_ccad .makeOffSetReference (_cfad );if _dgfffb =_ccad .flushWriter ();_dgfffb !=nil {return _dgfffb ;};return nil ;};

// Encoder returns the font's text encoder.
func (_bebe pdfFontType0 )Encoder ()_dc .TextEncoder {return _bebe ._fdbf };

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_dc .SimpleEncoder ,error ){_gdbc ,_fbfd :=_dbfe (basefont );if _fbfd !=nil {return nil ,nil ,_fbfd ;};_gfdcg ,_bbd :=_gdbc .Encoder ().(_dc .SimpleEncoder );if !_bbd {return nil ,nil ,_f .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_gdbc .Encoder ());
};_gaff :=make (map[rune ]_dc .GlyphName );for _gedce :=range alphabet {if _ ,_cdaea :=_gfdcg .RuneToCharcode (_gedce );!_cdaea {_ ,_cggd :=_gdbc ._accf .Read (_gedce );if !_cggd {_fa .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_gedce ,_gedce );
continue ;};_efbb ,_cggd :=_dc .RuneToGlyph (_gedce );if !_cggd {_fa .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_gedce ,_gedce );continue ;};if len (_gaff )>=255{return nil ,nil ,_ca .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_gaff [_gedce ]=_efbb ;};};var (_adbg []_dc .CharCode ;_bfgc []_dc .CharCode ;);for _gbga :=_dc .CharCode (1);_gbga <=0xff;_gbga ++{_cgca ,_aefaf :=_gfdcg .CharcodeToRune (_gbga );if !_aefaf {_adbg =append (_adbg ,_gbga );continue ;};if _ ,_aefaf =alphabet [_cgca ];
!_aefaf {_bfgc =append (_bfgc ,_gbga );};};_bgcaf :=append (_adbg ,_bfgc ...);if len (_bgcaf )< len (_gaff ){return nil ,nil ,_f .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_gaff ),len (_bgcaf ));
};_beebg :=make ([]rune ,0,len (_gaff ));for _ccedf :=range _gaff {_beebg =append (_beebg ,_ccedf );};_edg .Slice (_beebg ,func (_cdbca ,_daag int )bool {return _beebg [_cdbca ]< _beebg [_daag ]});_ceaff :=make (map[_dc .CharCode ]_dc .GlyphName ,len (_beebg ));
for _ ,_acaa :=range _beebg {_agcb :=_bgcaf [0];_bgcaf =_bgcaf [1:];_ceaff [_agcb ]=_gaff [_acaa ];};_gfdcg =_dc .ApplyDifferences (_gfdcg ,_ceaff );_gdbc .SetEncoder (_gfdcg );return &PdfFont {_cgdec :&_gdbc },_gfdcg ,nil ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_dfdbc .Lock ();defer _dfdbc .Unlock ();_gffeb =title };var (_egead =_fg .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_bacab =_fg .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_ffagc =_fg .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_gfea ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_bbbd ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_adbc ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// Add appends an outline item as a child of the current outline item.
func (_agffg *OutlineItem )Add (item *OutlineItem ){_agffg .Entries =append (_agffg .Entries ,item )};

// SetFlag sets the flag for the field.
func (_fadcab *PdfField )SetFlag (flag FieldFlag ){_fadcab .Ff =_ab .MakeInteger (int64 (flag ))};

// GetTrailer returns the PDF's trailer dictionary.
func (_bgcdd *PdfReader )GetTrailer ()(*_ab .PdfObjectDictionary ,error ){_gbgdd :=_bgcdd ._gcabf .GetTrailer ();if _gbgdd ==nil {return nil ,_ca .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _gbgdd ,nil ;
};func _acbaa ()string {_dfdbc .Lock ();defer _dfdbc .Unlock ();return _gada };

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_bbacd *PdfFont )SubsetRegistered ()error {switch _caabb :=_bbacd ._cgdec .(type ){case *pdfFontType0 :_feeb :=_caabb .subsetRegistered ();if _feeb !=nil {_fa .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_feeb );
return _feeb ;};if _caabb ._accgd !=nil {if _caabb ._fdbf !=nil {_caabb ._fdbf .ToPdfObject ();};_caabb .ToPdfObject ();};default:_fa .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_caabb );
};return nil ;};

// AddImageResource adds an image to the XObject resources.
func (_agafg *PdfPage )AddImageResource (name _ab .PdfObjectName ,ximg *XObjectImage )error {var _dcde *_ab .PdfObjectDictionary ;if _agafg .Resources .XObject ==nil {_dcde =_ab .MakeDict ();_agafg .Resources .XObject =_dcde ;}else {var _fece bool ;_dcde ,_fece =(_agafg .Resources .XObject ).(*_ab .PdfObjectDictionary );
if !_fece {return _ca .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_dcde .Set (name ,ximg .ToPdfObject ());return nil ;};func (_cacca *PdfReader )buildOutlineTree (_ecddbd _ab .PdfObject ,_ggaaa *PdfOutlineTreeNode ,_gacbg *PdfOutlineTreeNode ,_cgfeb map[_ab .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _cgfeb ==nil {_cgfeb =map[_ab .PdfObject ]struct{}{};
};_cgfeb [_ecddbd ]=struct{}{};_dfefd ,_fefg :=_ecddbd .(*_ab .PdfIndirectObject );if !_fefg {return nil ,nil ,_f .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_ecddbd );
};_bbeeb ,_gbeaf :=_dfefd .PdfObject .(*_ab .PdfObjectDictionary );if !_gbeaf {return nil ,nil ,_ca .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fa .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_bbeeb ,_dfefd ,_dfefd );
if _cbedf :=_bbeeb .Get ("\u0054\u0069\u0074l\u0065");_cbedf !=nil {_geabb ,_bfabb :=_cacca .newPdfOutlineItemFromIndirectObject (_dfefd );if _bfabb !=nil {return nil ,nil ,_bfabb ;};_geabb .Parent =_ggaaa ;_geabb .Prev =_gacbg ;_bdbcd :=_ab .ResolveReference (_bbeeb .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_dcgab :=_cgfeb [_bdbcd ];_bdbcd !=nil &&_bdbcd !=_dfefd &&!_dcgab {if !_ab .IsNullObject (_bdbcd ){_ddaa ,_ddgcba ,_fcfef :=_cacca .buildOutlineTree (_bdbcd ,&_geabb .PdfOutlineTreeNode ,nil ,_cgfeb );if _fcfef !=nil {_fa .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_fcfef );
}else {_geabb .First =_ddaa ;_geabb .Last =_ddgcba ;};};};_bfccc :=_ab .ResolveReference (_bbeeb .Get ("\u004e\u0065\u0078\u0074"));if _ ,_fagg :=_cgfeb [_bfccc ];_bfccc !=nil &&_bfccc !=_dfefd &&!_fagg {if !_ab .IsNullObject (_bfccc ){_bggbc ,_fdegf ,_gdbfg :=_cacca .buildOutlineTree (_bfccc ,_ggaaa ,&_geabb .PdfOutlineTreeNode ,_cgfeb );
if _gdbfg !=nil {_fa .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_gdbfg );
}else {_geabb .Next =_bggbc ;return &_geabb .PdfOutlineTreeNode ,_fdegf ,nil ;};};};return &_geabb .PdfOutlineTreeNode ,&_geabb .PdfOutlineTreeNode ,nil ;};_dgdgbd ,_fcdeg :=_fadfbg (_dfefd );if _fcdeg !=nil {return nil ,nil ,_fcdeg ;};_dgdgbd .Parent =_ggaaa ;
if _ggfbb :=_bbeeb .Get ("\u0046\u0069\u0072s\u0074");_ggfbb !=nil {_ggfbb =_ab .ResolveReference (_ggfbb );if _ ,_edbcg :=_cgfeb [_ggfbb ];_ggfbb !=nil &&_ggfbb !=_dfefd &&!_edbcg {_agccb :=_ab .TraceToDirectObject (_ggfbb );if _ ,_bbada :=_agccb .(*_ab .PdfObjectNull );
!_bbada &&_agccb !=nil {_bfbe ,_cgafg ,_ccga :=_cacca .buildOutlineTree (_ggfbb ,&_dgdgbd .PdfOutlineTreeNode ,nil ,_cgfeb );if _ccga !=nil {_fa .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_ccga );
}else {_dgdgbd .First =_bfbe ;_dgdgbd .Last =_cgafg ;};};};};return &_dgdgbd .PdfOutlineTreeNode ,&_dgdgbd .PdfOutlineTreeNode ,nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_fdce :=&PdfAppender {_ageg :reader ._ddeee ,Reader :reader ,_cca :reader ._gcabf ,_adfd :reader ._gfdgc };_ccae ,_egdd :=_fdce ._ageg .Seek (0,_fb .SeekEnd );if _egdd !=nil {return nil ,_egdd ;
};_fdce ._dcbc =_ccae ;if _ ,_egdd =_fdce ._ageg .Seek (0,_fb .SeekStart );_egdd !=nil {return nil ,_egdd ;};_fdce ._egeg ,_egdd =NewPdfReader (_fdce ._ageg );if _egdd !=nil {return nil ,_egdd ;};for _ ,_gafb :=range _fdce .Reader .GetObjectNums (){if _fdce ._cbea < _gafb {_fdce ._cbea =_gafb ;
};};_fdce ._aefe =_fdce ._cca .GetXrefTable ();_fdce ._affa =_fdce ._cca .GetXrefOffset ();_fdce ._abed =append (_fdce ._abed ,_fdce ._egeg .PageList ...);_fdce ._ggc =make (map[_ab .PdfObject ]struct{});_fdce ._fddbc =make (map[_ab .PdfObject ]int64 );
_fdce ._fabc =make (map[_ab .PdfObject ]struct{});_fdce ._ebe =_fdce ._egeg .AcroForm ;_fdce ._adaf =_fdce ._egeg .DSS ;return _fdce ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aacg *PdfAnnotationRichMedia )ToPdfObject ()_ab .PdfObject {_aacg .PdfAnnotation .ToPdfObject ();_edaf :=_aacg ._ddg ;_ffda :=_edaf .PdfObject .(*_ab .PdfObjectDictionary );_ffda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_ffda .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_aacg .RichMediaSettings );_ffda .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_aacg .RichMediaContent );
return _edaf ;};func (_fdfg *PdfReader )newPdfAnnotationInkFromDict (_ceae *_ab .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_gff :=PdfAnnotationInk {};_gddf ,_fedg :=_fdfg .newPdfAnnotationMarkupFromDict (_ceae );if _fedg !=nil {return nil ,_fedg ;
};_gff .PdfAnnotationMarkup =_gddf ;_gff .InkList =_ceae .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_gff .BS =_ceae .Get ("\u0042\u0053");return &_gff ,nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_ecd :=NewPdfAction ();_bca :=&PdfActionSubmitForm {};_bca .PdfAction =_ecd ;_ecd .SetContext (_bca );return _bca ;};

// ToInteger convert to an integer format.
func (_efcg *PdfColorCalGray )ToInteger (bits int )uint32 {_cafd :=_ced .Pow (2,float64 (bits ))-1;return uint32 (_cafd *_efcg .Val ());};func _cgccb (_gfabe _ab .PdfObject )(*fontFile ,error ){_fa .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_gfabe );
_aabf :=&fontFile {};_gfabe =_ab .TraceToDirectObject (_gfabe );_cagc ,_dbaf :=_gfabe .(*_ab .PdfObjectStream );if !_dbaf {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_gfabe );
return nil ,_ab .ErrTypeError ;};_cfff :=_cagc .PdfObjectDictionary ;_dffea ,_gbbb :=_ab .DecodeStream (_cagc );if _gbbb !=nil {return nil ,_gbbb ;};_ddca ,_dbaf :=_ab .GetNameVal (_cfff .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dbaf {_aabf ._cbdee =_ddca ;
if _ddca =="\u0054\u0079\u0070\u0065\u0031\u0043"{_fa .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_fbcg ,_ :=_ab .GetIntVal (_cfff .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_aaeea ,_ :=_ab .GetIntVal (_cfff .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _fbcg > len (_dffea ){_fbcg =len (_dffea );
};if _fbcg +_aaeea > len (_dffea ){_aaeea =len (_dffea )-_fbcg ;};_edac :=_dffea [:_fbcg ];var _adfdb []byte ;if _aaeea > 0{_adfdb =_dffea [_fbcg :_fbcg +_aaeea ];};if _fbcg > 0&&_aaeea > 0{_fbag :=_aabf .loadFromSegments (_edac ,_adfdb );if _fbag !=nil {return nil ,_fbag ;
};};return _aabf ,nil ;};

// G returns the value of the green component of the color.
func (_ddegf *PdfColorDeviceRGB )G ()float64 {return _ddegf [1]};var (ErrRequiredAttributeMissing =_ca .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_ca .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_deea =_ca .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_ca .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_ca .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_cg .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_ab .ErrNotSupported );ErrType1CFontNotSupported =_cg .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_ab .ErrNotSupported );
ErrType3FontNotSupported =_cg .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_ab .ErrNotSupported );
ErrTTCmapNotSupported =_cg .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_ab .ErrNotSupported );
ErrSignNotEnoughSpace =_cg .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_cg .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_aage :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_aage ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _ab .PdfObject ;V _ab .PdfObject ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_gaag int ,_afada *PdfPage )error ;

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_ac .File ,error ){const _begc ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_bfgfa ,_ccde :=_ac .Open (pdfFile );if _ccde !=nil {return nil ,nil ,_ccde ;};_ebgg ,_ccde :=_eagcc (_bfgfa ,opts ,true ,_begc );if _ccde !=nil {_bfgfa .Close ();return nil ,nil ,_ccde ;};return _ebgg ,_bfgfa ,nil ;};func _dafg (_badaa *_ab .PdfObjectDictionary ,_dbgc *fontCommon ,_dbege _dc .TextEncoder )(*pdfFontSimple ,error ){_feef :=_eedc (_dbgc );
_feef ._facc =_dbege ;if _dbege ==nil {_eaed :=_badaa .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _eaed ==nil {_eaed =_ab .MakeInteger (0);};_feef .FirstChar =_eaed ;_bacegg ,_aagbac :=_ab .GetIntVal (_eaed );if !_aagbac {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_eaed );
return nil ,_ab .ErrTypeError ;};_efdg :=_dc .CharCode (_bacegg );_eaed =_badaa .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _eaed ==nil {_eaed =_ab .MakeInteger (255);};_feef .LastChar =_eaed ;_bacegg ,_aagbac =_ab .GetIntVal (_eaed );
if !_aagbac {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_eaed );return nil ,_ab .ErrTypeError ;
};_cgda :=_dc .CharCode (_bacegg );_feef ._aeac =make (map[_dc .CharCode ]float64 );_eaed =_badaa .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _eaed !=nil {_feef .Widths =_eaed ;_fgfb ,_beea :=_ab .GetArray (_eaed );if !_beea {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_eaed );
return nil ,_ab .ErrTypeError ;};_bccf ,_cbbab :=_fgfb .ToFloat64Array ();if _cbbab !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_cbbab ;};if len (_bccf )!=int (_cgda -_efdg +1){_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_cgda -_efdg +1,len (_bccf ));
return nil ,_ab .ErrRangeError ;};for _ggec ,_cgeec :=range _bccf {_feef ._aeac [_efdg +_dc .CharCode (_ggec )]=_cgeec ;};};};_feef .Encoding =_ab .TraceToDirectObject (_badaa .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _feef ,nil ;
};func (_daebf *pdfFontType3 )baseFields ()*fontCommon {return &_daebf .fontCommon };func (_baef *PdfWriter )writeObject (_gaaga int ,_afgfd _ab .PdfObject ){_fa .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_gaaga );
if _aafe ,_accgb :=_afgfd .(*_ab .PdfIndirectObject );_accgb {_baef ._daaee [_gaaga ]=crossReference {Type :1,Offset :_baef ._abbce ,Generation :_aafe .GenerationNumber };_aaabf :=_f .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gaaga );if _eafgc ,_dfdbd :=_aafe .PdfObject .(*pdfSignDictionary );
_dfdbd {_eafgc ._bddb =_baef ._abbce +int64 (len (_aaabf ));};if _aafe .PdfObject ==nil {_fa .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_aafe .PdfObject =_ab .MakeNull ();};_aaabf +=_aafe .PdfObject .WriteString ();_aaabf +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_baef .writeString (_aaabf );return ;};if _edfeg ,_gddbb :=_afgfd .(*_ab .PdfObjectStream );_gddbb {_baef ._daaee [_gaaga ]=crossReference {Type :1,Offset :_baef ._abbce ,Generation :_edfeg .GenerationNumber };
_eaggc :=_f .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gaaga );_eaggc +=_edfeg .PdfObjectDictionary .WriteString ();_eaggc +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_baef .writeString (_eaggc );_baef .writeBytes (_edfeg .Stream );
_baef .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _gfedc ,_abgdc :=_afgfd .(*_ab .PdfObjectStreams );_abgdc {_baef ._daaee [_gaaga ]=crossReference {Type :1,Offset :_baef ._abbce ,Generation :_gfedc .GenerationNumber };
_ebdfa :=_f .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gaaga );var _dcaaf []string ;var _gfadde string ;var _ceefd int64 ;for _egage ,_bbdd :=range _gfedc .Elements (){_fdccd ,_daad :=_bbdd .(*_ab .PdfIndirectObject );if !_daad {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_gaaga ,_bbdd );
continue ;};_gggf :=_fdccd .PdfObject .WriteString ()+"\u0020";_gfadde =_gfadde +_gggf ;_dcaaf =append (_dcaaf ,_f .Sprintf ("\u0025\u0064\u0020%\u0064",_fdccd .ObjectNumber ,_ceefd ));_baef ._daaee [int (_fdccd .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_gaaga ,Index :_egage };
_ceefd =_ceefd +int64 (len ([]byte (_gggf )));};_bacda :=_af .Join (_dcaaf ,"\u0020")+"\u0020";_cggdd :=_ab .NewFlateEncoder ();_bdaca :=_cggdd .MakeStreamDict ();_bdaca .Set (_ab .PdfObjectName ("\u0054\u0079\u0070\u0065"),_ab .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_aggcc :=int64 (_gfedc .Len ());_bdaca .Set (_ab .PdfObjectName ("\u004e"),_ab .MakeInteger (_aggcc ));_fdgdge :=int64 (len (_bacda ));_bdaca .Set (_ab .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_ab .MakeInteger (_fdgdge ));_aegfg ,_ :=_cggdd .EncodeBytes ([]byte (_bacda +_gfadde ));
_dfad :=int64 (len (_aegfg ));_bdaca .Set (_ab .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_ab .MakeInteger (_dfad ));_ebdfa +=_bdaca .WriteString ();_ebdfa +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_baef .writeString (_ebdfa );_baef .writeBytes (_aegfg );
_baef .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_baef .writeString (_afgfd .WriteString ());};

// ToPdfObject returns a PDF object representation of the outline item.
func (_eddfa *OutlineItem )ToPdfObject ()_ab .PdfObject {_eedgc ,_ :=_eddfa .ToPdfOutlineItem ();return _eedgc .ToPdfObject ();};

// GetAscent returns the Ascent of the font `descriptor`.
func (_gaea *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _ab .GetNumberAsFloat (_gaea .Ascent );};

// SetContext sets the sub action (context).
func (_gdg *PdfAction )SetContext (ctx PdfModel ){_gdg ._ad =ctx };

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_fdcgfa :=&PdfPageResourcesColorspaces {};_fdcgfa .Names =[]string {};_fdcgfa .Colorspaces =map[string ]PdfColorspace {};_fdcgfa ._acfe =&_ab .PdfIndirectObject {};return _fdcgfa ;};func (_aea *PdfAnnotationMarkup )appendToPdfDictionary (_fdda *_ab .PdfObjectDictionary ){_fdda .SetIfNotNil ("\u0054",_aea .T );
if _aea .Popup !=nil {_fdda .Set ("\u0050\u006f\u0070u\u0070",_aea .Popup .ToPdfObject ());};_fdda .SetIfNotNil ("\u0043\u0041",_aea .CA );_fdda .SetIfNotNil ("\u0052\u0043",_aea .RC );_fdda .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_aea .CreationDate );
_fdda .SetIfNotNil ("\u0049\u0052\u0054",_aea .IRT );_fdda .SetIfNotNil ("\u0053\u0075\u0062\u006a",_aea .Subj );_fdda .SetIfNotNil ("\u0052\u0054",_aea .RT );_fdda .SetIfNotNil ("\u0049\u0054",_aea .IT );_fdda .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_aea .ExData );
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dbaa *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_ab .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_baad ,_efdbe :=_ab .GetNumbersAsFloat (objects );
if _efdbe !=nil {return nil ,_efdbe ;};return _dbaa .ColorFromFloats (_baad );};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_cgafd ,_gfec :=_ac .Open (filePath );if _gfec !=nil {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gfec );
return nil ,_gfec ;};defer _cgafd .Close ();return NewCompositePdfFontFromTTF (_cgafd );};

// GetNumComponents returns the number of color components (3 for Lab).
func (_eegg *PdfColorLab )GetNumComponents ()int {return 3};func (_deddf *pdfCIDFontType2 )baseFields ()*fontCommon {return &_deddf .fontCommon };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_dded *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _dded .UnderlyingCS ==nil {return nil ,_ca .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _dded .UnderlyingCS .ColorFromFloats (vals );};

// String returns a string describing the font descriptor.
func (_cbcd *PdfFontDescriptor )String ()string {var _bbbgf []string ;if _cbcd .FontName !=nil {_bbbgf =append (_bbbgf ,_cbcd .FontName .String ());};if _cbcd .FontFamily !=nil {_bbbgf =append (_bbbgf ,_cbcd .FontFamily .String ());};if _cbcd .fontFile !=nil {_bbbgf =append (_bbbgf ,_cbcd .fontFile .String ());
};if _cbcd ._cfga !=nil {_bbbgf =append (_bbbgf ,_cbcd ._cfga .String ());};_bbbgf =append (_bbbgf ,_f .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_cbcd .FontFile3 !=nil ));return _f .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_af .Join (_bbbgf ,"\u002c\u0020"));
};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_abac :=NewPdfAnnotation ();_ddgg :=&PdfAnnotationUnderline {};_ddgg .PdfAnnotation =_abac ;_ddgg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abac .SetContext (_ddgg );return _ddgg ;};func (_eeb *PdfReader )newPdfActionSoundFromDict (_bcg *_ab .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_bcg .Get ("\u0053\u006f\u0075n\u0064"),Volume :_bcg .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_bcg .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_bcg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_bcg .Get ("\u004d\u0069\u0078")},nil ;
};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_dgeee *PdfOutlineTreeNode )GetContext ()PdfModel {if _bdcf ,_ggdag :=_dgeee ._caad .(*PdfOutline );_ggdag {return _bdcf ;};if _ffdfa ,_cgfa :=_dgeee ._caad .(*PdfOutlineItem );_cgfa {return _ffdfa ;};_fa .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};func (_gbfcc SignatureValidationResult )String ()string {var _abfg _ffc .Buffer ;_abfg .WriteString (_f .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_gbfcc .Name ));if _gbfcc .Date ._fgcef > 0{_abfg .WriteString (_f .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_gbfcc .Date .ToGoTime ().String ()));
}else {_abfg .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_gbfcc .Reason )> 0{_abfg .WriteString (_f .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_gbfcc .Reason ));
}else {_abfg .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_gbfcc .Location )> 0{_abfg .WriteString (_f .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_gbfcc .Location ));
}else {_abfg .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_gbfcc .ContactInfo )> 0{_abfg .WriteString (_f .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_gbfcc .ContactInfo ));
}else {_abfg .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_abfg .WriteString (_f .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_gbfcc .Fields )));
if _gbfcc .IsSigned {_abfg .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_abfg .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");
};if _gbfcc .IsVerified {_abfg .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_abfg .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");
};if _gbfcc .IsTrusted {_abfg .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_abfg .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");
};if !_gbfcc .GeneralizedTime .IsZero (){_abfg .WriteString (_f .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_gbfcc .GeneralizedTime .String ()));};return _abfg .String ();};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_cace *PdfFieldButton )ToPdfObject ()_ab .PdfObject {_cace .PdfField .ToPdfObject ();_egbeb :=_cace ._ggde ;_cffaa :=_egbeb .PdfObject .(*_ab .PdfObjectDictionary );_cffaa .Set ("\u0046\u0054",_ab .MakeName ("\u0042\u0074\u006e"));if _cace .Opt !=nil {_cffaa .Set ("\u004f\u0070\u0074",_cace .Opt );
};return _egbeb ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_dcff *PdfPageResources )GetExtGState (keyName _ab .PdfObjectName )(_ab .PdfObject ,bool ){if _dcff .ExtGState ==nil {return nil ,false ;};_gfeff ,_gdeeb :=_ab .TraceToDirectObject (_dcff .ExtGState ).(*_ab .PdfObjectDictionary );if !_gdeeb {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dcff .ExtGState );
return nil ,false ;};if _gfbbb :=_gfeff .Get (keyName );_gfbbb !=nil {return _gfbbb ,true ;};return nil ,false ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_gaabg :_ab .MakeDict (),ColorComponents :colorComponents };
};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_aaefd *XObjectForm )GetContainingPdfObject ()_ab .PdfObject {return _aaefd ._bedc };func (_cfgfb *PdfFont )baseFields ()*fontCommon {if _cfgfb ._cgdec ==nil {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _cfgfb ._cgdec .baseFields ();};func (_fcceb *PdfReader )loadStructure ()error {if _fcceb ._gcabf .GetCrypter ()!=nil &&!_fcceb ._gcabf .IsAuthenticated (){return _f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fadfg :=_fcceb ._gcabf .GetTrailer ();if _fadfg ==nil {return _f .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_ecebg ,_fgbbg :=_fadfg .Get ("\u0052\u006f\u006f\u0074").(*_ab .PdfObjectReference );if !_fgbbg {return _f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_fadfg );
};_dgacc ,_beade :=_fcceb ._gcabf .LookupByReference (*_ecebg );if _beade !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_beade );
return _beade ;};_gbcb ,_fgbbg :=_dgacc .(*_ab .PdfIndirectObject );if !_fgbbg {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_dgacc ,*_fadfg );
return _ca .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dgcgc ,_fgbbg :=(*_gbcb ).PdfObject .(*_ab .PdfObjectDictionary );if !_fgbbg {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_gbcb .PdfObject );
return _ca .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fa .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dgcgc );_ecbfe ,_fgbbg :=_dgcgc .Get ("\u0050\u0061\u0067e\u0073").(*_ab .PdfObjectReference );
if !_fgbbg {return _ca .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_bcbb ,_beade :=_fcceb ._gcabf .LookupByReference (*_ecbfe );
if _beade !=nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _beade ;};_dgfabf ,_fgbbg :=_bcbb .(*_ab .PdfIndirectObject );if !_fgbbg {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_fa .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_dgfabf );return _ca .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_bdddd ,_fgbbg :=_dgfabf .PdfObject .(*_ab .PdfObjectDictionary );if !_fgbbg {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_dgfabf );
return _ca .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_dacd ,_fgbbg :=_ab .GetInt (_bdddd .Get ("\u0043\u006f\u0075n\u0074"));if !_fgbbg {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _ca .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_fgbbg =_ab .GetName (_bdddd .Get ("\u0054\u0079\u0070\u0065"));!_fgbbg {_fa .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_bdddd .Set ("\u0054\u0079\u0070\u0065",_ab .MakeName ("\u0050\u0061\u0067e\u0073"));};if _ddad ,_bfbce :=_ab .GetInt (_bdddd .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_bfbce {_gabgf :=int64 (*_ddad );_fcceb .Rotate =&_gabgf ;};_fcceb ._bfeec =_ecebg ;
_fcceb ._bgffe =_dgcgc ;_fcceb ._bcdee =_bdddd ;_fcceb ._aegab =_dgfabf ;_fcceb ._dcge =int (*_dacd );_fcceb ._ffbe =[]*_ab .PdfIndirectObject {};_edebe :=map[_ab .PdfObject ]struct{}{};_beade =_fcceb .buildPageList (_dgfabf ,nil ,_edebe );if _beade !=nil {return _beade ;
};_fa .Log .Trace ("\u002d\u002d\u002d");_fa .Log .Trace ("\u0054\u004f\u0043");_fa .Log .Trace ("\u0050\u0061\u0067e\u0073");_fa .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_fcceb ._ffbe ),_fcceb ._ffbe );_fcceb ._cbfd ,_beade =_fcceb .loadOutlines ();
if _beade !=nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_beade );
return _beade ;};_fcceb .AcroForm ,_beade =_fcceb .loadForms ();if _beade !=nil {return _beade ;};_fcceb .DSS ,_beade =_fcceb .loadDSS ();if _beade !=nil {return _beade ;};return nil ;};

// GetCerts returns the signature certificate chain.
func (_fegfga *PdfSignature )GetCerts ()([]*_bgc .Certificate ,error ){var _dacae []func ()([]*_bgc .Certificate ,error );switch _faacf ,_ :=_ab .GetNameVal (_fegfga .SubFilter );_faacf {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_dacae =append (_dacae ,_fegfga .extractChainFromPKCS7 ,_fegfga .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_dacae =append (_dacae ,_fegfga .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_dacae =append (_dacae ,_fegfga .extractChainFromPKCS7 );
default:return nil ,_f .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_faacf );};for _ ,_cded :=range _dacae {_gddfa ,_gaaaa :=_cded ();if _gaaaa !=nil {return nil ,_gaaaa ;
};if len (_gddfa )> 0{return _gddfa ,nil ;};};return nil ,ErrSignNoCertificates ;};func (_beefa *PdfAcroForm )fill (_fbdfb FieldValueProvider ,_fdcc FieldAppearanceGenerator )error {if _beefa ==nil {return nil ;};_decdd ,_begbc :=_fbdfb .FieldValues ();
if _begbc !=nil {return _begbc ;};for _ ,_dgafc :=range _beefa .AllFields (){_gcafb :=_dgafc .PartialName ();_cccgf ,_aaeed :=_decdd [_gcafb ];if !_aaeed {if _aefagb ,_gfgeg :=_dgafc .FullName ();_gfgeg ==nil {_cccgf ,_aaeed =_decdd [_aefagb ];};};if !_aaeed {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_gcafb );
continue ;};if _edaag :=_fdbdb (_dgafc ,_cccgf );_edaag !=nil {return _edaag ;};if _fdcc ==nil {continue ;};for _ ,_egeef :=range _dgafc .Annotations {_feaff ,_bgdf :=_fdcc .GenerateAppearanceDict (_beefa ,_dgafc ,_egeef );if _bgdf !=nil {return _bgdf ;
};_egeef .AP =_feaff ;_egeef .ToPdfObject ();};};return nil ;};

// GetPdfInfo returns the PDF info dictionary.
func (_afaeb *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_egae ,_ebefc :=_afaeb .GetTrailer ();if _ebefc !=nil {return nil ,_ebefc ;};var _dgccd *_ab .PdfObjectDictionary ;_gffga :=_egae .Get ("\u0049\u006e\u0066\u006f");switch _bbdg :=_gffga .(type ){case *_ab .PdfObjectReference :_acbaff :=_bbdg ;
_gffga ,_ebefc =_afaeb .GetIndirectObjectByNumber (int (_acbaff .ObjectNumber ));_gffga =_ab .TraceToDirectObject (_gffga );if _ebefc !=nil {return nil ,_ebefc ;};_dgccd ,_ =_gffga .(*_ab .PdfObjectDictionary );case *_ab .PdfObjectDictionary :_dgccd =_bbdg ;
};if _dgccd ==nil {return nil ,_ca .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_cffcc ,_ebefc :=NewPdfInfoFromObject (_dgccd );if _ebefc !=nil {return nil ,_ebefc ;
};return _cffcc ,nil ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_ab .PdfObjectInteger ;TilingType *_ab .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_ab .PdfObjectFloat ;YStep *_ab .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_ab .PdfObjectArray ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_ddffa *PdfPage )GetContainingPdfObject ()_ab .PdfObject {return _ddffa ._agafe };

// GetSubFilter returns SubFilter value or empty string.
func (_ffbgb *pdfSignDictionary )GetSubFilter ()string {_dcbaa :=_ffbgb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _dcbaa ==nil {return "";};if _fdaab ,_gaded :=_ab .GetNameVal (_dcbaa );_gaded {return _fdaab ;};return "";};func (_gdgbg *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};


// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_eedae *PdfReader )GetIndirectObjectByNumber (number int )(_ab .PdfObject ,error ){_gafgf ,_gcdbdg :=_eedae ._gcabf .LookupByNumber (number );return _gafgf ,_gcdbdg ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_cbda *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ca .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_dbcb :=field .V ;if _dbcb ==nil {return _ca .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_dgbe :=pageNum -1;
if _dgbe < 0||_dgbe > len (_cbda ._abed )-1{return _f .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_ffaa :=_cbda .Reader .PageList [_dgbe ];field .P =_ffaa .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_ab .MakeString (_f .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_ffaa .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _cbda ._ebe ==_cbda ._egeg .AcroForm {_cbda ._ebe =_cbda .Reader .AcroForm ;};_cgdc :=_cbda ._ebe ;if _cgdc ==nil {_cgdc =NewPdfAcroForm ();};_cgdc .SigFlags =_ab .MakeInteger (3);_cgbb :=append (_cgdc .AllFields (),field .PdfField );
_cgdc .Fields =&_cgbb ;_cbda .ReplaceAcroForm (_cgdc );_cbda .UpdatePage (_ffaa );_cbda ._abed [_dgbe ]=_ffaa ;return nil ;};func _gdade (_gbdb *_ab .PdfObjectDictionary )*VRI {_fabe ,_ :=_ab .GetString (_gbdb .Get ("\u0054\u0055"));_addd ,_ :=_ab .GetString (_gbdb .Get ("\u0054\u0053"));
return &VRI {Cert :_daeeg (_gbdb .Get ("\u0043\u0065\u0072\u0074")),OCSP :_daeeg (_gbdb .Get ("\u004f\u0043\u0053\u0050")),CRL :_daeeg (_gbdb .Get ("\u0043\u0052\u004c")),TU :_fabe ,TS :_addd };};func (_ecgef *PdfWriter )checkCrossReferenceStream ()bool {_cecee :=_ecgef ._ecfdb .Major > 1||(_ecgef ._ecfdb .Major ==1&&_ecgef ._ecfdb .Minor > 4);
if _ecgef ._ggccg !=nil {_cecee =*_ecgef ._ggccg ;};return _cecee ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _ab .PdfObject ;T3DV _ab .PdfObject ;T3DA _ab .PdfObject ;T3DI _ab .PdfObject ;T3DB _ab .PdfObject ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;
PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_faebg *PdfFont )ToPdfObject ()_ab .PdfObject {if _faebg ._cgdec ==nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _ab .MakeNull ();
};return _faebg ._cgdec .ToPdfObject ();};func (_bafad *XObjectImage )getParamsDict ()*_ab .PdfObjectDictionary {_fdefd :=_ab .MakeDict ();_fdefd .Set ("\u0057\u0069\u0064t\u0068",_ab .MakeInteger (*_bafad .Width ));_fdefd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ab .MakeInteger (*_bafad .Height ));
_fdefd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ab .MakeInteger (int64 (_bafad .ColorSpace .GetNumComponents ())));_fdefd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ab .MakeInteger (*_bafad .BitsPerComponent ));
return _fdefd ;};

// String returns a string that describes `base`.
func (_ddfb fontCommon )String ()string {return _f .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_ddfb .coreString ());};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_cgec *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _ab .GetNumberAsFloat (_cgec .Descent );};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_gbfaa *_ab .PdfIndirectObject ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_fafeg *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _gcecg []*PdfOutlineTreeNode ;var _cdfge []string ;var _bdab func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_bdab =func (_cagff *PdfOutlineTreeNode ,_gdbba *[]*PdfOutlineTreeNode ,_efgab *[]string ,_gcafa int ){if _cagff ==nil {return ;
};if _cagff ._caad ==nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_ggad ,_fdggb :=_cagff ._caad .(*PdfOutlineItem );if _fdggb {*_gdbba =append (*_gdbba ,&_ggad .PdfOutlineTreeNode );
_agcfe :=_af .Repeat ("\u0020",_gcafa *2)+_ggad .Title .Decoded ();*_efgab =append (*_efgab ,_agcfe );};if _cagff .First !=nil {_bdfgg :=_af .Repeat ("\u0020",_gcafa *2)+"\u002b";*_efgab =append (*_efgab ,_bdfgg );_bdab (_cagff .First ,_gdbba ,_efgab ,_gcafa +1);
};if _fdggb &&_ggad .Next !=nil {_bdab (_ggad .Next ,_gdbba ,_efgab ,_gcafa );};};_bdab (_fafeg ._cbfd ,&_gcecg ,&_cdfge ,0);return _gcecg ,_cdfge ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_bafe *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_ecfgc *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _ecfgc ._adccb !=nil {return _ecfgc ._adccb ,nil ;};if _ecfgc .Annots ==nil {_ecfgc ._adccb =[]*PdfAnnotation {};return nil ,nil ;};if _ecfgc ._addeg ==nil {_ecfgc ._adccb =[]*PdfAnnotation {};
return nil ,nil ;};_ddgda ,_bgegg :=_ecfgc ._addeg .loadAnnotations (_ecfgc .Annots );if _bgegg !=nil {return nil ,_bgegg ;};if _ddgda ==nil {_ecfgc ._adccb =[]*PdfAnnotation {};};_ecfgc ._adccb =_ddgda ;return _ecfgc ._adccb ,nil ;};

// SetAction sets the PDF action for the annotation link.
func (_cafb *PdfAnnotationLink )SetAction (action *PdfAction ){_cafb ._eaa =action ;if action ==nil {_cafb .A =nil ;};};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;func _cbdg (_ffedd _ab .PdfObject )(*PdfFunctionType2 ,error ){_fadbc :=&PdfFunctionType2 {};var _cbbg *_ab .PdfObjectDictionary ;if _decdf ,_dfgcf :=_ffedd .(*_ab .PdfIndirectObject );_dfgcf {_dgbfc ,_bcefe :=_decdf .PdfObject .(*_ab .PdfObjectDictionary );
if !_bcefe {return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fadbc ._ebfef =_decdf ;_cbbg =_dgbfc ;}else if _cgdag ,_bacaf :=_ffedd .(*_ab .PdfObjectDictionary );_bacaf {_cbbg =_cgdag ;}else {return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fa .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_cbbg .String ());_bbdf ,_abfac :=_ab .TraceToDirectObject (_cbbg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ab .PdfObjectArray );if !_abfac {_fa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bbdf .Len ()< 0||_bbdf .Len ()%2!=0{_fa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");
return nil ,_ca .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_beffe ,_bbbf :=_bbdf .ToFloat64Array ();if _bbbf !=nil {return nil ,_bbbf ;};_fadbc .Domain =_beffe ;_bbdf ,_abfac =_ab .TraceToDirectObject (_cbbg .Get ("\u0052\u0061\u006eg\u0065")).(*_ab .PdfObjectArray );
if _abfac {if _bbdf .Len ()< 0||_bbdf .Len ()%2!=0{return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_gcbg ,_egegc :=_bbdf .ToFloat64Array ();if _egegc !=nil {return nil ,_egegc ;};_fadbc .Range =_gcbg ;
};_bbdf ,_abfac =_ab .TraceToDirectObject (_cbbg .Get ("\u0043\u0030")).(*_ab .PdfObjectArray );if _abfac {_edced ,_beggb :=_bbdf .ToFloat64Array ();if _beggb !=nil {return nil ,_beggb ;};_fadbc .C0 =_edced ;};_bbdf ,_abfac =_ab .TraceToDirectObject (_cbbg .Get ("\u0043\u0031")).(*_ab .PdfObjectArray );
if _abfac {_cbgeba ,_feccg :=_bbdf .ToFloat64Array ();if _feccg !=nil {return nil ,_feccg ;};_fadbc .C1 =_cbgeba ;};if len (_fadbc .C0 )!=len (_fadbc .C1 ){_fa .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");
return nil ,_ab .ErrRangeError ;};N ,_bbbf :=_ab .GetNumberAsFloat (_ab .TraceToDirectObject (_cbbg .Get ("\u004e")));if _bbbf !=nil {_fa .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_cbbg .String ());
return nil ,_bbbf ;};_fadbc .N =N ;return _fadbc ,nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_ab .PdfObjectArray ;Domain *_ab .PdfObjectArray ;Function []PdfFunction ;Extend *_ab .PdfObjectArray ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_ad PdfModel ;Type _ab .PdfObject ;S _ab .PdfObject ;Next _ab .PdfObject ;_cef *_ab .PdfIndirectObject ;};func _bgbef (_bfc ,_cfce string )string {if _af .Contains (_bfc ,"\u002b"){_fddae :=_af .Split (_bfc ,"\u002b");if len (_fddae )==2{_bfc =_fddae [1];
};};return _cfce +"\u002b"+_bfc ;};func (_dgdd *PdfReader )newPdfAnnotationWidgetFromDict (_gdca *_ab .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_cffdf :=PdfAnnotationWidget {};_cffdf .H =_gdca .Get ("\u0048");_cffdf .MK =_gdca .Get ("\u004d\u004b");
_cffdf .A =_gdca .Get ("\u0041");_cffdf .AA =_gdca .Get ("\u0041\u0041");_cffdf .BS =_gdca .Get ("\u0042\u0053");_cffdf .Parent =_gdca .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_cffdf ,nil ;};func (_fdbbg *PdfWriter )updateObjectNumbers (){_ffacd :=_fdbbg .ObjNumOffset ;
_gbgag :=0;for _ ,_fdedg :=range _fdbbg ._acgcfc {_gcde :=int64 (_gbgag +1+_ffacd );_cdecgc :=true ;if _fdbbg ._cbeff {if _bbdga ,_dacdg :=_fdbbg ._fgggfa [_fdedg ];_dacdg {_gcde =_bbdga ;_cdecgc =false ;};};switch _afbae :=_fdedg .(type ){case *_ab .PdfIndirectObject :_afbae .ObjectNumber =_gcde ;
_afbae .GenerationNumber =0;case *_ab .PdfObjectStream :_afbae .ObjectNumber =_gcde ;_afbae .GenerationNumber =0;case *_ab .PdfObjectStreams :_afbae .ObjectNumber =_gcde ;_afbae .GenerationNumber =0;default:_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_afbae );
continue ;};if _cdecgc {_gbgag ++;};};_cccdg :=func (_fbebba _ab .PdfObject )int64 {switch _deefgd :=_fbebba .(type ){case *_ab .PdfIndirectObject :return _deefgd .ObjectNumber ;case *_ab .PdfObjectStream :return _deefgd .ObjectNumber ;case *_ab .PdfObjectStreams :return _deefgd .ObjectNumber ;
};return 0;};_edg .SliceStable (_fdbbg ._acgcfc ,func (_bbbae ,_aggaa int )bool {return _cccdg (_fdbbg ._acgcfc [_bbbae ])< _cccdg (_fdbbg ._acgcfc [_aggaa ])});};

// ToPdfObject returns a stream object.
func (_abdf *XObjectForm )ToPdfObject ()_ab .PdfObject {_gcfbc :=_abdf ._bedc ;_bffcb :=_gcfbc .PdfObjectDictionary ;if _abdf .Filter !=nil {_bffcb =_abdf .Filter .MakeStreamDict ();_gcfbc .PdfObjectDictionary =_bffcb ;};_bffcb .Set ("\u0054\u0079\u0070\u0065",_ab .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_bffcb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0046\u006f\u0072\u006d"));_bffcb .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_abdf .FormType );_bffcb .SetIfNotNil ("\u0042\u0042\u006f\u0078",_abdf .BBox );_bffcb .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_abdf .Matrix );
if _abdf .Resources !=nil {_bffcb .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_abdf .Resources .ToPdfObject ());};_bffcb .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_abdf .Group );_bffcb .SetIfNotNil ("\u0052\u0065\u0066",_abdf .Ref );_bffcb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_abdf .MetaData );
_bffcb .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_abdf .PieceInfo );_bffcb .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_abdf .LastModified );_bffcb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_abdf .StructParent );
_bffcb .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_abdf .StructParents );_bffcb .SetIfNotNil ("\u004f\u0050\u0049",_abdf .OPI );_bffcb .SetIfNotNil ("\u004f\u0043",_abdf .OC );_bffcb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_abdf .Name );
_bffcb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ab .MakeInteger (int64 (len (_abdf .Stream ))));_gcfbc .Stream =_abdf .Stream ;return _gcfbc ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_afgb *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _afgb .AlternateSpace ==nil {return nil ,_ca .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _afgb .AlternateSpace .ColorToRGB (color );};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_gbege *PdfAppender )UpdateObject (obj _ab .PdfObject ){_gbege .replaceObject (obj ,obj );if _ ,_eagc :=_gbege ._ggc [obj ];!_eagc {_gbege ._fbbdd =append (_gbege ._fbbdd ,obj );_gbege ._ggc [obj ]=struct{}{};};};func _cgccg (_bacgad *PdfPage ){_bbfb :=_age .GetLicenseKey ();
if _bbfb !=nil &&_bbfb .IsLicensed (){return ;};_abfce :=_ab .PdfObjectName ("\u0055\u0046\u0031");if !_bacgad .Resources .HasFontByName (_abfce ){_bacgad .Resources .SetFontByName (_abfce ,DefaultFont ().ToPdfObject ());};var _dgdfg []string ;_dgdfg =append (_dgdfg ,"\u0071");
_dgdfg =append (_dgdfg ,"\u0042\u0054");_dgdfg =append (_dgdfg ,_f .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_abfce .String ()));_dgdfg =append (_dgdfg ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_dgdfg =append (_dgdfg ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");
_gcccb :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_dgdfg =append (_dgdfg ,_f .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_gcccb ));_dgdfg =append (_dgdfg ,"\u0045\u0054");_dgdfg =append (_dgdfg ,"\u0051");_bdcgg :=_af .Join (_dgdfg ,"\u000a");_bacgad .AddContentStreamByString (_bdcgg );_bacgad .ToPdfObject ();
};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_dfgbg *PdfOutlineTreeNode )ToPdfObject ()_ab .PdfObject {return _dfgbg .GetContext ().ToPdfObject ();};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};func _afab (_eabe *PdfPage )map[_ab .PdfObjectName ]_ab .PdfObject {_bdfeb :=make (map[_ab .PdfObjectName ]_ab .PdfObject );if _eabe .Resources ==nil {return _bdfeb ;};if _eabe .Resources .Font !=nil {if _cgff ,_ggg :=_ab .GetDict (_eabe .Resources .Font );
_ggg {for _ ,_fdef :=range _cgff .Keys (){_bdfeb [_fdef ]=_cgff .Get (_fdef );};};};if _eabe .Resources .ExtGState !=nil {if _abf ,_cga :=_ab .GetDict (_eabe .Resources .ExtGState );_cga {for _ ,_bbgd :=range _abf .Keys (){_bdfeb [_bbgd ]=_abf .Get (_bbgd );
};};};if _eabe .Resources .XObject !=nil {if _efbe ,_gggd :=_ab .GetDict (_eabe .Resources .XObject );_gggd {for _ ,_edaa :=range _efbe .Keys (){_bdfeb [_edaa ]=_efbe .Get (_edaa );};};};if _eabe .Resources .Pattern !=nil {if _fedb ,_bbf :=_ab .GetDict (_eabe .Resources .Pattern );
_bbf {for _ ,_cedcd :=range _fedb .Keys (){_bdfeb [_cedcd ]=_fedb .Get (_cedcd );};};};if _eabe .Resources .Shading !=nil {if _gbba ,_gega :=_ab .GetDict (_eabe .Resources .Shading );_gega {for _ ,_aeca :=range _gbba .Keys (){_bdfeb [_aeca ]=_gbba .Get (_aeca );
};};};if _eabe .Resources .ProcSet !=nil {if _aeaf ,_ecg :=_ab .GetDict (_eabe .Resources .ProcSet );_ecg {for _ ,_gagg :=range _aeaf .Keys (){_bdfeb [_gagg ]=_aeaf .Get (_gagg );};};};if _eabe .Resources .Properties !=nil {if _cdb ,_afdbe :=_ab .GetDict (_eabe .Resources .Properties );
_afdbe {for _ ,_fdgf :=range _cdb .Keys (){_bdfeb [_fdgf ]=_cdb .Get (_fdgf );};};};return _bdfeb ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_gfba *PdfField )FullName ()(string ,error ){var _gfdc _ffc .Buffer ;_dcab :=[]string {};if _gfba .T !=nil {_dcab =append (_dcab ,_gfba .T .Decoded ());};_adfe :=map[*PdfField ]bool {};_adfe [_gfba ]=true ;_ddee :=_gfba .Parent ;for _ddee !=nil {if _ ,_cgce :=_adfe [_ddee ];
_cgce {return _gfdc .String (),_ca .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _ddee .T ==nil {return _gfdc .String (),_ca .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_dcab =append (_dcab ,_ddee .T .Decoded ());_adfe [_ddee ]=true ;_ddee =_ddee .Parent ;};for _fegdf :=len (_dcab )-1;_fegdf >=0;_fegdf --{_gfdc .WriteString (_dcab [_fegdf ]);if _fegdf > 0{_gfdc .WriteString ("\u002e");};};return _gfdc .String (),nil ;
};func (_faebe *PdfShading )getShadingDict ()(*_ab .PdfObjectDictionary ,error ){_gfecd :=_faebe ._edbbg ;if _adabf ,_abggd :=_gfecd .(*_ab .PdfIndirectObject );_abggd {_ebeg ,_eddec :=_adabf .PdfObject .(*_ab .PdfObjectDictionary );if !_eddec {return nil ,_ab .ErrTypeError ;
};return _ebeg ,nil ;}else if _gfgcf ,_fbcb :=_gfecd .(*_ab .PdfObjectStream );_fbcb {return _gfgcf .PdfObjectDictionary ,nil ;}else if _fbbge ,_dabb :=_gfecd .(*_ab .PdfObjectDictionary );_dabb {return _fbbge ,nil ;}else {_fa .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");
return nil ,_ab .ErrTypeError ;};};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_ab .PdfObjectStream )(*XObjectImage ,error ){_aacfd :=&XObjectImage {};_aacfd ._fdfdc =stream ;_fbeee :=*(stream .PdfObjectDictionary );_cdaee ,_dcac :=_ab .NewEncoderFromStream (stream );if _dcac !=nil {return nil ,_dcac ;
};_aacfd .Filter =_cdaee ;if _dbaece :=_ab .TraceToDirectObject (_fbeee .Get ("\u0057\u0069\u0064t\u0068"));_dbaece !=nil {_cagb ,_fdddd :=_dbaece .(*_ab .PdfObjectInteger );if !_fdddd {return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_egefe :=int64 (*_cagb );_aacfd .Width =&_egefe ;}else {return nil ,_ca .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _addg :=_ab .TraceToDirectObject (_fbeee .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_addg !=nil {_dafebd ,_bbfe :=_addg .(*_ab .PdfObjectInteger );if !_bbfe {return nil ,_ca .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_dedde :=int64 (*_dafebd );
_aacfd .Height =&_dedde ;}else {return nil ,_ca .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _efdf :=_ab .TraceToDirectObject (_fbeee .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_efdf !=nil {_cbeg ,_cfcfb :=NewPdfColorspaceFromPdfObject (_efdf );if _cfcfb !=nil {return nil ,_cfcfb ;};_aacfd .ColorSpace =_cbeg ;}else {_fa .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");
_aacfd .ColorSpace =NewPdfColorspaceDeviceGray ();};if _baeaa :=_ab .TraceToDirectObject (_fbeee .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_baeaa !=nil {_cgag ,_gcca :=_baeaa .(*_ab .PdfObjectInteger );
if !_gcca {return nil ,_ca .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_cecfb :=int64 (*_cgag );_aacfd .BitsPerComponent =&_cecfb ;};_aacfd .Intent =_fbeee .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_aacfd .ImageMask =_fbeee .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_aacfd .Mask =_fbeee .Get ("\u004d\u0061\u0073\u006b");_aacfd .Decode =_fbeee .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_aacfd .Interpolate =_fbeee .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_aacfd .Alternatives =_fbeee .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_aacfd .SMask =_fbeee .Get ("\u0053\u004d\u0061s\u006b");_aacfd .SMaskInData =_fbeee .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_aacfd .Matte =_fbeee .Get ("\u004d\u0061\u0074t\u0065");_aacfd .Name =_fbeee .Get ("\u004e\u0061\u006d\u0065");_aacfd .StructParent =_fbeee .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_aacfd .ID =_fbeee .Get ("\u0049\u0044");
_aacfd .OPI =_fbeee .Get ("\u004f\u0050\u0049");_aacfd .Metadata =_fbeee .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_aacfd .OC =_fbeee .Get ("\u004f\u0043");_aacfd .Stream =stream .Stream ;return _aacfd ,nil ;};func (_bcfeea *PdfWriter )setHashIDs (_cgaff _cc .Hash )error {_ddacb :=_cgaff .Sum (nil );
if _bcfeea ._fafda ==""{_bcfeea ._fafda =_g .EncodeToString (_ddacb [:8]);};_bcfeea .setDocumentIDs (_bcfeea ._fafda ,_g .EncodeToString (_ddacb [8:]));return nil ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_cbbda *PdfPageResources )ToPdfObject ()_ab .PdfObject {_fbgge :=_cbbda ._edege ;_fbgge .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cbbda .ExtGState );if _cbbda ._degg !=nil {_cbbda .ColorSpace =_cbbda ._degg .ToPdfObject ();};_fbgge .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cbbda .ColorSpace );
_fbgge .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_cbbda .Pattern );_fbgge .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cbbda .Shading );_fbgge .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_cbbda .XObject );_fbgge .SetIfNotNil ("\u0046\u006f\u006e\u0074",_cbbda .Font );
_fbgge .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_cbbda .ProcSet );_fbgge .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_cbbda .Properties );return _fbgge ;};func (_cdca *PdfWriter )optimizeDocument ()error {if _cdca ._degdd ==nil {return nil ;
};_aegdb ,_adeb :=_ab .GetDict (_cdca ._bfedb );if !_adeb {return _ca .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_abfad :=_be .Document {ID :[2]string {_cdca ._fafda ,_cdca ._aadca },Version :_cdca ._ecfdb ,Objects :_cdca ._acgcfc ,Info :_aegdb ,Crypt :_cdca ._ggfge ,UseHashBasedID :_cdca ._gcgg };if _beebc :=_cdca ._degdd .ApplyStandard (&_abfad );_beebc !=nil {return _beebc ;
};_cdca ._fafda ,_cdca ._aadca =_abfad .ID [0],_abfad .ID [1];_cdca ._ecfdb =_abfad .Version ;_cdca ._acgcfc =_abfad .Objects ;_cdca ._bfedb .PdfObject =_abfad .Info ;_cdca ._gcgg =_abfad .UseHashBasedID ;_cdca ._ggfge =_abfad .Crypt ;_aecde :=make (map[_ab .PdfObject ]struct{},len (_cdca ._acgcfc ));
for _ ,_eedag :=range _cdca ._acgcfc {_aecde [_eedag ]=struct{}{};};_cdca ._cgdbbd =_aecde ;return nil ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_bdeec *PdfFont )CharcodesToStrings (charcodes []_dc .CharCode )([]string ,int ,int ){_deegd :=_bdeec .baseFields ();_gebe :=make ([]string ,0,len (charcodes ));_ebgd :=0;_eacg :=_bdeec .Encoder ();if _eacg !=nil {switch _fbefa :=_eacg .(type ){case _dc .SimpleEncoder :_fefd :=_fbefa .BaseName ();
if _ ,_fcef :=_dgedc [_fefd ];_fcef {for _ ,_ggbd :=range charcodes {if _eedgf ,_gfbfe :=_eacg .CharcodeToRune (_ggbd );_gfbfe {_gebe =append (_gebe ,string (_eedgf ));}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_ggbd ,charcodes ,_deegd .isCIDFont (),_bdeec ,_eacg );
_ebgd ++;_gebe =append (_gebe ,_egc .MissingCodeString );};};return _gebe ,len (_gebe ),_ebgd ;};};};for _ ,_eecfe :=range charcodes {if _deegd ._eefee !=nil {if _gaedc ,_ddea :=_deegd ._eefee .CharcodeToUnicode (_egc .CharCode (_eecfe ));_ddea {_gebe =append (_gebe ,_gaedc );
continue ;};};if _eacg !=nil {if _cecabg ,_bgfbg :=_eacg .CharcodeToRune (_eecfe );_bgfbg {_gebe =append (_gebe ,string (_cecabg ));continue ;};};_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_eecfe ,charcodes ,_deegd .isCIDFont (),_bdeec ,_eacg );
_ebgd ++;_gebe =append (_gebe ,_egc .MissingCodeString );};if _ebgd !=0{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_ebgd ,_bdeec );
};return _gebe ,len (_gebe ),_ebgd ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_acfb *PdfColorspaceLab )GetNumComponents ()int {return 3};func (_ada *PdfAnnotation )String ()string {_gfc :="";_dgfa ,_cefd :=_ada .ToPdfObject ().(*_ab .PdfIndirectObject );if _cefd {_gfc =_f .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ada ._aeb ,_dgfa .PdfObject .String ());
};return _gfc ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_agcgb *PdfAcroForm )ToPdfObject ()_ab .PdfObject {_daaf :=_agcgb ._ebcbd ;_bcga :=_daaf .PdfObject .(*_ab .PdfObjectDictionary );if _agcgb .Fields !=nil {_fffe :=_ab .PdfObjectArray {};for _ ,_ccac :=range *_agcgb .Fields {_ecbbde :=_ccac .GetContext ();
if _ecbbde !=nil {_fffe .Append (_ecbbde .ToPdfObject ());}else {_fffe .Append (_ccac .ToPdfObject ());};};_bcga .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_fffe );};if _agcgb .NeedAppearances !=nil {_bcga .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_agcgb .NeedAppearances );
};if _agcgb .SigFlags !=nil {_bcga .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_agcgb .SigFlags );};if _agcgb .CO !=nil {_bcga .Set ("\u0043\u004f",_agcgb .CO );};if _agcgb .DR !=nil {_bcga .Set ("\u0044\u0052",_agcgb .DR .ToPdfObject ());
};if _agcgb .DA !=nil {_bcga .Set ("\u0044\u0041",_agcgb .DA );};if _agcgb .Q !=nil {_bcga .Set ("\u0051",_agcgb .Q );};if _agcgb .XFA !=nil {_bcga .Set ("\u0058\u0046\u0041",_agcgb .XFA );};return _daaf ;};

// ToPdfObject implements interface PdfModel.
func (_aagd *PdfAnnotationFileAttachment )ToPdfObject ()_ab .PdfObject {_aagd .PdfAnnotation .ToPdfObject ();_bcda :=_aagd ._ddg ;_cfda :=_bcda .PdfObject .(*_ab .PdfObjectDictionary );_aagd .PdfAnnotationMarkup .appendToPdfDictionary (_cfda );_cfda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_cfda .SetIfNotNil ("\u0046\u0053",_aagd .FS );_cfda .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aagd .Name );return _bcda ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_caebe *PdfReader )GetNamedDestinations ()(_ab .PdfObject ,error ){_bdgge :=_ab .ResolveReference (_caebe ._bgffe .Get ("\u0044\u0065\u0073t\u0073"));if _bdgge ==nil {return nil ,nil ;};if !_caebe ._ccbag {_geaag :=_caebe .traverseObjectData (_bdgge );
if _geaag !=nil {return nil ,_geaag ;};};return _bdgge ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_dbcea *PdfFunctionType4 )ToPdfObject ()_ab .PdfObject {_fgaff :=_dbcea ._dgac ;if _fgaff ==nil {_dbcea ._dgac =&_ab .PdfObjectStream {};_fgaff =_dbcea ._dgac ;};_beeef :=_ab .MakeDict ();_beeef .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ab .MakeInteger (4));
_ffea :=&_ab .PdfObjectArray {};for _ ,_eebg :=range _dbcea .Domain {_ffea .Append (_ab .MakeFloat (_eebg ));};_beeef .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ffea );_gaaa :=&_ab .PdfObjectArray {};for _ ,_geeg :=range _dbcea .Range {_gaaa .Append (_ab .MakeFloat (_geeg ));
};_beeef .Set ("\u0052\u0061\u006eg\u0065",_gaaa );if _dbcea ._aagbe ==nil &&_dbcea .Program !=nil {_dbcea ._aagbe =[]byte (_dbcea .Program .String ());};_beeef .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ab .MakeInteger (int64 (len (_dbcea ._aagbe ))));
_fgaff .Stream =_dbcea ._aagbe ;_fgaff .PdfObjectDictionary =_beeef ;return _fgaff ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_daec *PdfAcroForm )GetContainingPdfObject ()_ab .PdfObject {return _daec ._ebcbd };

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_deae *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_acaeb :=func (_fddc float64 )float64 {if _fddc >=6.0/29{return _fddc *_fddc *_fddc ;};return 108.0/841*(_fddc -4/29);};_aeafc :=img ._aaefg ;if len (_aeafc )!=6{_fa .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_aeafc =_deae .DecodeArray ();};_cdce :=_fdc .NewReader (img .getBase ());_eed :=_cac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._dbdfad ,img ._aaefg );_aeeg :=_fdc .NewWriter (_eed );_fgag :=_ced .Pow (2,float64 (img .BitsPerComponent ))-1;
_gbdf :=make ([]uint32 ,3);var (_dade error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_fefe ,_cfdb ,_cfbg float64 ;);for {_dade =_cdce .ReadSamples (_gbdf );if _dade ==_fb .EOF {break ;}else if _dade !=nil {return img ,_dade ;};Ls =float64 (_gbdf [0])/_fgag ;As =float64 (_gbdf [1])/_fgag ;
Bs =float64 (_gbdf [2])/_fgag ;Ls =_cac .LinearInterpolate (Ls ,0.0,1.0,_aeafc [0],_aeafc [1]);As =_cac .LinearInterpolate (As ,0.0,1.0,_aeafc [2],_aeafc [3]);Bs =_cac .LinearInterpolate (Bs ,0.0,1.0,_aeafc [4],_aeafc [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;
N =(Ls +16)/116-Bs /200;X =_deae .WhitePoint [0]*_acaeb (L );Y =_deae .WhitePoint [1]*_acaeb (M );Z =_deae .WhitePoint [2]*_acaeb (N );_fefe =3.240479*X +-1.537150*Y +-0.498535*Z ;_cfdb =-0.969256*X +1.875992*Y +0.041556*Z ;_cfbg =0.055648*X +-0.204043*Y +1.057311*Z ;
_fefe =_ced .Min (_ced .Max (_fefe ,0),1.0);_cfdb =_ced .Min (_ced .Max (_cfdb ,0),1.0);_cfbg =_ced .Min (_ced .Max (_cfbg ,0),1.0);_gbdf [0]=uint32 (_fefe *_fgag );_gbdf [1]=uint32 (_cfdb *_fgag );_gbdf [2]=uint32 (_cfbg *_fgag );if _dade =_aeeg .WriteSamples (_gbdf );
_dade !=nil {return img ,_dade ;};};return _bgbec (&_eed ),nil ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_cfgdd *PdfWriter )SetNameDictionary (names _ab .PdfObject )error {if names ==nil {return nil ;};_fa .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_cfgdd ._cbfaag .Set ("\u004e\u0061\u006de\u0073",names );return _cfgdd .addObjects (names );};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_bab :=NewPdfAction ();_gc :=&PdfActionSetOCGState {};_gc .PdfAction =_bab ;_bab .SetContext (_gc );return _gc ;};

// ToPdfObject implements interface PdfModel.
func (_bgd *PdfAnnotationPopup )ToPdfObject ()_ab .PdfObject {_bgd .PdfAnnotation .ToPdfObject ();_aaec :=_bgd ._ddg ;_egfg :=_aaec .PdfObject .(*_ab .PdfObjectDictionary );_egfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0050\u006f\u0070u\u0070"));
_egfg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bgd .Parent );_egfg .SetIfNotNil ("\u004f\u0070\u0065\u006e",_bgd .Open );return _aaec ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_bafdd *PdfFieldSignature )ToPdfObject ()_ab .PdfObject {if _bafdd .PdfAnnotationWidget !=nil {_bafdd .PdfAnnotationWidget .ToPdfObject ();};_bafdd .PdfField .ToPdfObject ();_bcfb :=_bafdd ._ggde ;_ccbg :=_bcfb .PdfObject .(*_ab .PdfObjectDictionary );
_ccbg .SetIfNotNil ("\u0046\u0054",_ab .MakeName ("\u0053\u0069\u0067"));_ccbg .SetIfNotNil ("\u004c\u006f\u0063\u006b",_bafdd .Lock );_ccbg .SetIfNotNil ("\u0053\u0056",_bafdd .SV );if _bafdd .V !=nil {_ccbg .SetIfNotNil ("\u0056",_bafdd .V .ToPdfObject ());
};return _bcfb ;};func (_geaab *PdfWriter )flushWriter ()error {if _geaab ._gegac ==nil {_geaab ._gegac =_geaab ._ccgad .Flush ();};return _geaab ._gegac ;};func (_fdbdf *PdfSignature )extractChainFromPKCS7 ()([]*_bgc .Certificate ,error ){_befde ,_eefag :=_ag .Parse (_fdbdf .Contents .Bytes ());
if _eefag !=nil {return nil ,_eefag ;};return _befde .Certificates ,nil ;};func (_aef *PdfReader )newPdfActionSetOCGStateFromDict (_fefc *_ab .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_fefc .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_fefc .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// GetOCProperties returns the optional content properties PdfObject.
func (_dacgg *PdfReader )GetOCProperties ()(_ab .PdfObject ,error ){_dcafd :=_dacgg ._bgffe ;_dbcg :=_dcafd .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_dbcg =_ab .ResolveReference (_dbcg );if !_dacgg ._ccbag {_adfcg :=_dacgg .traverseObjectData (_dbcg );
if _adfcg !=nil {return nil ,_adfcg ;};};return _dbcg ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_babd *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_acgbe *PdfPageResources )GenerateXObjectName ()_ab .PdfObjectName {_bccfcg :=1;for {_ddeb :=_ab .MakeName (_f .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_bccfcg ));if !_acgbe .HasXObjectByName (*_ddeb ){return *_ddeb ;};_bccfcg ++;};};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_edbc :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_edbc .N =N ;return _edbc ,nil ;};func (_ecbbd *PdfAcroForm )filteredFields (_gccg FieldFilterFunc ,_gbeaa bool )[]*PdfField {if _ecbbd ==nil {return nil ;};return _gabcb (_ecbbd .Fields ,_gccg ,_gbeaa );};func (_afca *DSS )addOCSPs (_aefd [][]byte )([]*_ab .PdfObjectStream ,error ){return _afca .add (&_afca .OCSPs ,_afca ._aaag ,_aefd );
};

// ToGoTime returns the date in time.Time format.
func (_dafeb PdfDate )ToGoTime ()_bg .Time {_dfabe :=int (_dafeb ._baeb *60*60+_dafeb ._aegfc *60);switch _dafeb ._fdfd {case '-':_dfabe =-_dfabe ;case 'Z':_dfabe =0;};_gdabd :=_f .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_dafeb ._fdfd ,_dafeb ._baeb ,_dafeb ._aegfc );
_edbad :=_bg .FixedZone (_gdabd ,_dfabe );return _bg .Date (int (_dafeb ._fgcef ),_bg .Month (_dafeb ._badbee ),int (_dafeb ._dbca ),int (_dafeb ._bfce ),int (_dafeb ._ffcbb ),int (_dafeb ._dgae ),0,_edbad );};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_becag pdfFontSimple )GetCharMetrics (code _dc .CharCode )(_bc .CharMetrics ,bool ){if _fdgd ,_ceff :=_becag ._aeac [code ];_ceff {return _bc .CharMetrics {Wx :_fdgd },true ;};if _bc .IsStdFont (_bc .StdFontName (_becag ._egceb )){return _bc .CharMetrics {Wx :250},true ;
};return _bc .CharMetrics {},false ;};func (_adabfa *PdfWriter )setWriter (_dabgc _fb .Writer ){_adabfa ._abbce =_adabfa ._dgdae ;_adabfa ._ccgad =_e .NewWriter (_dabgc );};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_cgdec pdfFont };

// SetDecode sets the decode image float slice.
func (_bebb *Image )SetDecode (decode []float64 ){_bebb ._aaefg =decode };

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_beecc *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_geab :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_febad ,_fegga :=_beecc .GetNumPages ();if _fegga !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fegga );
return nil ,_fegga ;};for _gafgd :=1;_gafgd <=_febad ;_gafgd ++{_ddgab ,_adcf :=_beecc .GetPage (_gafgd );if _adcf !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adcf );return nil ,_adcf ;};if opts .PageProcessCallback !=nil {_adcf =opts .PageProcessCallback (_gafgd ,_ddgab );
if _adcf !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adcf );return nil ,_adcf ;};}else if opts .PageCallback !=nil {opts .PageCallback (_gafgd ,_ddgab );};_adcf =_geab .AddPage (_ddgab );if _adcf !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adcf );
return nil ,_adcf ;};};_geab ._ecfdb =_beecc .PdfVersion ();if !opts .SkipInfo {_gcbcg ,_fagag :=_beecc .GetPdfInfo ();if _fagag !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fagag );}else {_geab ._bfedb .PdfObject =_gcbcg .ToPdfObject ();
};};if !opts .SkipAcroForm {_gbfdb :=_geab .SetForms (_beecc .AcroForm );if _gbfdb !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbfdb );return nil ,_gbfdb ;};};if !opts .SkipOutlines {_geab .AddOutlineTree (_beecc .GetOutlineTree ());
};if !opts .SkipOCProperties {_ebgcg ,_dgcd :=_beecc .GetOCProperties ();if _dgcd !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgcd );}else {_dgcd =_geab .SetOCProperties (_ebgcg );if _dgcd !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgcd );
};};};if !opts .SkipPageLabels {_ecaaf ,_gdfcc :=_beecc .GetPageLabels ();if _gdfcc !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdfcc );}else {_gdfcc =_geab .SetPageLabels (_ecaaf );if _gdfcc !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdfcc );
};};};if !opts .SkipNamedDests {_efgbg ,_bbeaa :=_beecc .GetNamedDestinations ();if _bbeaa !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbeaa );}else {_bbeaa =_geab .SetNamedDestinations (_efgbg );if _bbeaa !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbeaa );
};};};if !opts .SkipNameDictionary {_cacde ,_ddbe :=_beecc .GetNameDictionary ();if _ddbe !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddbe );}else {_ddbe =_geab .SetNameDictionary (_cacde );if _ddbe !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddbe );
};};};if !opts .SkipRotation &&_beecc .Rotate !=nil {if _gcgfc :=_geab .SetRotation (*_beecc .Rotate );_gcgfc !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gcgfc );};};return &_geab ,nil ;};func (_gccbg *PdfWriter )writeAcroFormFields ()error {if _gccbg ._eedgg ==nil {return nil ;
};_fa .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_gdgbf :=_gccbg ._eedgg .ToPdfObject ();_fa .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_gdgbf );
_gccbg ._cbfaag .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_gdgbf );_gaaaab :=_gccbg .addObjects (_gdgbf );if _gaaaab !=nil {return _gaaaab ;};return nil ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_dbea PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_ab .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_gbdc []_ab .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_edc []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// ToPdfObject implements interface PdfModel.
func (_cadf *PdfAnnotationInk )ToPdfObject ()_ab .PdfObject {_cadf .PdfAnnotation .ToPdfObject ();_ceaea :=_cadf ._ddg ;_fag :=_ceaea .PdfObject .(*_ab .PdfObjectDictionary );_cadf .PdfAnnotationMarkup .appendToPdfDictionary (_fag );_fag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0049\u006e\u006b"));
_fag .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_cadf .InkList );_fag .SetIfNotNil ("\u0042\u0053",_cadf .BS );return _ceaea ;};func (_deadfe *LTV )generateVRIKey (_edba *PdfSignature )(string ,error ){_dfab ,_cbcbc :=_aegef (_edba .Contents .Bytes ());
if _cbcbc !=nil {return "",_cbcbc ;};return _af .ToUpper (_g .EncodeToString (_dfab )),nil ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_cfdfa FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_cfdfa .Mask ()|fl .Mask ())};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_ddcc *PdfColorspaceLab )DecodeArray ()[]float64 {_efage :=[]float64 {0,100};if _ddcc .Range !=nil &&len (_ddcc .Range )==4{_efage =append (_efage ,_ddcc .Range ...);}else {_efage =append (_efage ,-100,100,-100,100);};return _efage ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ab .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_eba *PdfActionGoTo )ToPdfObject ()_ab .PdfObject {_eba .PdfAction .ToPdfObject ();_efa :=_eba ._cef ;_fed :=_efa .PdfObject .(*_ab .PdfObjectDictionary );_fed .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeGoTo )));_fed .SetIfNotNil ("\u0044",_eba .D );
return _efa ;};func _beefe (_ecbgc *_ab .PdfObjectDictionary )(*PdfShadingType6 ,error ){_gbgae :=PdfShadingType6 {};_dbcgc :=_ecbgc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _dbcgc ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_geegf ,_bbecg :=_dbcgc .(*_ab .PdfObjectInteger );if !_bbecg {_fa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbcgc );
return nil ,_ab .ErrTypeError ;};_gbgae .BitsPerCoordinate =_geegf ;_dbcgc =_ecbgc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dbcgc ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_geegf ,_bbecg =_dbcgc .(*_ab .PdfObjectInteger );if !_bbecg {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dbcgc );
return nil ,_ab .ErrTypeError ;};_gbgae .BitsPerComponent =_geegf ;_dbcgc =_ecbgc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _dbcgc ==nil {_fa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_geegf ,_bbecg =_dbcgc .(*_ab .PdfObjectInteger );if !_bbecg {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dbcgc );
return nil ,_ab .ErrTypeError ;};_gbgae .BitsPerComponent =_geegf ;_dbcgc =_ecbgc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dbcgc ==nil {_fa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cddf ,_bbecg :=_dbcgc .(*_ab .PdfObjectArray );if !_bbecg {_fa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbcgc );
return nil ,_ab .ErrTypeError ;};_gbgae .Decode =_cddf ;if _cecfd :=_ecbgc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cecfd !=nil {_gbgae .Function =[]PdfFunction {};if _afffgd ,_eeggb :=_cecfd .(*_ab .PdfObjectArray );_eeggb {for _ ,_bgba :=range _afffgd .Elements (){_agbff ,_bggg :=_cbacf (_bgba );
if _bggg !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bggg );return nil ,_bggg ;};_gbgae .Function =append (_gbgae .Function ,_agbff );
};}else {_dceac ,_aggd :=_cbacf (_cecfd );if _aggd !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aggd );return nil ,_aggd ;};
_gbgae .Function =append (_gbgae .Function ,_dceac );};};return &_gbgae ,nil ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_dcgb *PdfAppender )UpdatePage (page *PdfPage ){_dcgb .updateObjectsDeep (page .ToPdfObject (),nil )};

// SetAnnotations sets the annotations list.
func (_ebcfg *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_ebcfg ._adccb =annotations };

// SetReason sets the `Reason` field of the signature.
func (_fggfbgd *PdfSignature )SetReason (reason string ){_fggfbgd .Reason =_ab .MakeString (reason )};func (_gea *PdfReader )newPdfActionGotoRFromDict (_dee *_ab .PdfObjectDictionary )(*PdfActionGoToR ,error ){_fdg ,_bgcd :=_ecdc (_dee .Get ("\u0046"));
if _bgcd !=nil {return nil ,_bgcd ;};return &PdfActionGoToR {D :_dee .Get ("\u0044"),NewWindow :_dee .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_fdg },nil ;};type modelManager struct{_eagag map[PdfModel ]_ab .PdfObject ;_abecg map[_ab .PdfObject ]PdfModel ;
};func (_edaeb *PdfWriter )checkPendingObjects (){for _adbbg ,_eafffg :=range _edaeb ._gcga {if !_edaeb .hasObject (_adbbg ){_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_adbbg ,_adbbg ,_adbbg );
for _ ,_fddgad :=range _eafffg {for _ ,_bbab :=range _fddgad .Keys (){_ggegf :=_fddgad .Get (_bbab );if _ggegf ==_adbbg {_fa .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_fddgad .Set (_bbab ,_ab .MakeNull ());break ;};};};};};};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_baff *PdfPage )Duplicate ()*PdfPage {_ggbfd :=*_baff ;_ggbfd ._bedg =_ab .MakeDict ();_ggbfd ._agafe =_ab .MakeIndirectObject (_ggbfd ._bedg );return &_ggbfd ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_dbecd DefaultImageHandler )Read (reader _fb .Reader )(*Image ,error ){_ceefg ,_ ,_deaf :=_ga .Decode (reader );if _deaf !=nil {_fa .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_deaf );
return nil ,_deaf ;};return _dbecd .NewImageFromGoImage (_ceefg );};var _ pdfFont =(*pdfFontType0 )(nil );

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
func (_ceada *PdfWriter )ApplyStandard (optimizer StandardApplier ){_ceada ._degdd =optimizer };

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_fcaeb *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _dgbac []*PdfField ;_agbcf :=map[*_ab .PdfIndirectObject ]struct{}{};for _ ,_bfac :=range _fcaeb .PageList {_adbga ,_eeebbg :=_bfac .GetAnnotations ();if _eeebbg !=nil {return _eeebbg ;
};for _ ,_gfbdc :=range _adbga {var _ccfb *PdfField ;switch _cece :=_gfbdc .GetContext ().(type ){case *PdfAnnotationWidget :if _cece ._beb !=nil {_ccfb =_cece ._beb ;break ;};if _eafdg ,_abfaf :=_ab .GetIndirect (_cece .Parent );_abfaf {_ccfb ,_eeebbg =_fcaeb .newPdfFieldFromIndirectObject (_eafdg ,nil );
if _eeebbg ==nil {break ;};_fa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_eafdg ,_eeebbg );
};if _cece ._ddg !=nil {_ccfb ,_eeebbg =_fcaeb .newPdfFieldFromIndirectObject (_cece ._ddg ,nil );if _eeebbg ==nil {break ;};_fa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_cece ._ddg ,_eeebbg );
};};if _ccfb ==nil {continue ;};if _ ,_ddbd :=_agbcf [_ccfb ._ggde ];_ddbd {continue ;};_agbcf [_ccfb ._ggde ]=struct{}{};_dgbac =append (_dgbac ,_ccfb );};};if len (_dgbac )==0{return nil ;};if _fcaeb .AcroForm ==nil {_fcaeb .AcroForm =NewPdfAcroForm ();
};_fcaeb .AcroForm .Fields =&_dgbac ;return nil ;};

// ToInteger convert to an integer format.
func (_gdbg *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_ddggf :=_ced .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_ddggf *_gdbg .C ()),uint32 (_ddggf *_gdbg .M ()),uint32 (_ddggf *_gdbg .Y ()),uint32 (_ddggf *_gdbg .K ())};};

// ToPdfObject converts the font to a PDF representation.
func (_daeb *pdfFontType0 )ToPdfObject ()_ab .PdfObject {if _daeb ._accgd ==nil {_daeb ._accgd =&_ab .PdfIndirectObject {};};_aeba :=_daeb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_daeb ._accgd .PdfObject =_aeba ;if _daeb .Encoding !=nil {_aeba .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_daeb .Encoding );
}else if _daeb ._fdbf !=nil {_aeba .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_daeb ._fdbf .ToPdfObject ());};if _daeb .DescendantFont !=nil {_aeba .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_ab .MakeArray (_daeb .DescendantFont .ToPdfObject ()));
};return _daeb ._accgd ;};func _feacb (_agef *_ab .PdfObjectDictionary )(*PdfShadingType1 ,error ){_gdedg :=PdfShadingType1 {};if _acgfg :=_agef .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_acgfg !=nil {_acgfg =_ab .TraceToDirectObject (_acgfg );_ccbac ,_edfgc :=_acgfg .(*_ab .PdfObjectArray );
if !_edfgc {_fa .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_acgfg );return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gdedg .Domain =_ccbac ;};if _eccee :=_agef .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_eccee !=nil {_eccee =_ab .TraceToDirectObject (_eccee );_bcfeef ,_ccbe :=_eccee .(*_ab .PdfObjectArray );if !_ccbe {_fa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eccee );
return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gdedg .Matrix =_bcfeef ;};_fbea :=_agef .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fbea ==nil {_fa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gdedg .Function =[]PdfFunction {};if _eaacg ,_eece :=_fbea .(*_ab .PdfObjectArray );_eece {for _ ,_fgad :=range _eaacg .Elements (){_cggda ,_egbgd :=_cbacf (_fgad );if _egbgd !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egbgd );
return nil ,_egbgd ;};_gdedg .Function =append (_gdedg .Function ,_cggda );};}else {_eaad ,_cabbc :=_cbacf (_fbea );if _cabbc !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cabbc );
return nil ,_cabbc ;};_gdedg .Function =append (_gdedg .Function ,_eaad );};return &_gdedg ,nil ;};

// Encoder returns the font's text encoder.
func (_acadc pdfCIDFontType2 )Encoder ()_dc .TextEncoder {return _acadc ._eddgc };

// Width returns the width of `rect`.
func (_agcag *PdfRectangle )Width ()float64 {return _ced .Abs (_agcag .Urx -_agcag .Llx )};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_ab .PdfObjectBool ;SigFlags *_ab .PdfObjectInteger ;CO *_ab .PdfObjectArray ;DR *PdfPageResources ;DA *_ab .PdfObjectString ;Q *_ab .PdfObjectInteger ;XFA _ab .PdfObject ;_ebcbd *_ab .PdfIndirectObject ;
};func (_dbcba *DSS )addCerts (_cabfc [][]byte )([]*_ab .PdfObjectStream ,error ){return _dbcba .add (&_dbcba .Certs ,_dbcba ._fedaa ,_cabfc );};func (_acdag *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _acdag ._dfaf };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_caab *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdbd :=vals [0];_bgde :=[]float64 {_gdbd };_dgee ,_bbga :=_caab .TintTransform .Evaluate (_bgde );
if _bbga !=nil {_fa .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_bbga );_fa .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_caab .TintTransform );
return nil ,_bbga ;};_fa .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_dgee ,_caab .AlternateSpace );
_gdgcb ,_bbga :=_caab .AlternateSpace .ColorFromFloats (_dgee );if _bbga !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_bbga );
return nil ,_bbga ;};return _gdgcb ,nil ;};func _bbeee (_aceb []byte )(_dafgc ,_egceg string ,_cebfe error ){_fa .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_aceb ));_fdcgc :=_egead .FindIndex (_aceb );
if _fdcgc ==nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_ab .ErrTypeError ;
};_babe :=_fdcgc [1];_bbcb :=_af .Index (string (_aceb [_babe :]),_gfea );if _bbcb < 0{_dafgc =string (_aceb [_babe :]);return _dafgc ,"",nil ;};_dacg :=_babe +_bbcb ;_dafgc =string (_aceb [_babe :_dacg ]);_aafbe :=_dacg ;_bbcb =_af .Index (string (_aceb [_aafbe :]),_bbbd );
if _bbcb < 0{_fa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cebfe );return "","",_ab .ErrTypeError ;};_dfcdg :=_aafbe +_bbcb ;
_egceg =string (_aceb [_aafbe :_dfcdg ]);return _dafgc ,_egceg ,nil ;};

// Fill populates `form` with values provided by `provider`.
func (_bddgf *PdfAcroForm )Fill (provider FieldValueProvider )error {return _bddgf .fill (provider ,nil )};func _fadfbg (_bdda *_ab .PdfIndirectObject )(*PdfOutline ,error ){_cbdce ,_fdgdg :=_bdda .PdfObject .(*_ab .PdfObjectDictionary );if !_fdgdg {return nil ,_f .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ecefg :=NewPdfOutline ();if _dgafa :=_cbdce .Get ("\u0054\u0079\u0070\u0065");_dgafa !=nil {_fbcf ,_ddff :=_dgafa .(*_ab .PdfObjectName );if _ddff {if *_fbcf !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_fbcf );
};};};if _ebec :=_cbdce .Get ("\u0043\u006f\u0075n\u0074");_ebec !=nil {_aged ,_bdceg :=_ab .GetNumberAsInt64 (_ebec );if _bdceg !=nil {return nil ,_bdceg ;};_ecefg .Count =&_aged ;};return _ecefg ,nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;
FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);
FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);
FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// GetStandardApplier gets currently used StandardApplier..
func (_fcdff *PdfWriter )GetStandardApplier ()StandardApplier {return _fcdff ._degdd };const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;
);

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_caeae :=PdfWriter {};_caeae ._cgdbbd =map[_ab .PdfObject ]struct{}{};_caeae ._acgcfc =[]_ab .PdfObject {};_caeae ._gcga =map[_ab .PdfObject ][]*_ab .PdfObjectDictionary {};_caeae ._abgeb =map[_ab .PdfObject ]struct{}{};_caeae ._ecfdb .Major =1;
_caeae ._ecfdb .Minor =3;_agdbb :=_ab .MakeDict ();_ddbeb :=[]struct{_fdbda _ab .PdfObjectName ;_gegde string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_baacf ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_dbead ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_bcfcg ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_efffa ()},{"\u0054\u0069\u0074l\u0065",_fafff ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_acbaa ()}};
for _ ,_befgd :=range _ddbeb {if _befgd ._gegde !=""{_agdbb .Set (_befgd ._fdbda ,_ab .MakeString (_befgd ._gegde ));};};if _deddc :=_dfbab ();!_deddc .IsZero (){if _gcfae ,_cdade :=NewPdfDateFromTime (_deddc );_cdade ==nil {_agdbb .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_gcfae .ToPdfObject ());
};};if _cgcg :=_feddc ();!_cgcg .IsZero (){if _gcbf ,_eabfe :=NewPdfDateFromTime (_cgcg );_eabfe ==nil {_agdbb .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_gcbf .ToPdfObject ());};};_agaff :=_ab .PdfIndirectObject {};_agaff .PdfObject =_agdbb ;_caeae ._bfedb =&_agaff ;
_caeae .addObject (&_agaff );_dbade :=_ab .PdfIndirectObject {};_fgbfef :=_ab .MakeDict ();_fgbfef .Set ("\u0054\u0079\u0070\u0065",_ab .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_dbade .PdfObject =_fgbfef ;_caeae ._eefb =&_dbade ;_caeae .addObject (_caeae ._eefb );
_cfage ,_degac :=_gfgae ("\u0077");if _degac !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_degac );};_caeae ._bbadf =_cfage ;_edcad :=_ab .PdfIndirectObject {};_fbcce :=_ab .MakeDict ();_fbcce .Set ("\u0054\u0079\u0070\u0065",_ab .MakeName ("\u0050\u0061\u0067e\u0073"));
_gaefa :=_ab .PdfObjectArray {};_fbcce .Set ("\u004b\u0069\u0064\u0073",&_gaefa );_fbcce .Set ("\u0043\u006f\u0075n\u0074",_ab .MakeInteger (0));_edcad .PdfObject =_fbcce ;_caeae ._cdcee =&_edcad ;_caeae ._dcdcd =map[_ab .PdfObject ]struct{}{};_caeae .addObject (_caeae ._cdcee );
_fgbfef .Set ("\u0050\u0061\u0067e\u0073",&_edcad );_caeae ._cbfaag =_fgbfef ;_fa .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_dbade );return _caeae ;};

// GetContentStreams returns the content stream as an array of strings.
func (_dcbab *PdfPage )GetContentStreams ()([]string ,error ){_bgaafd :=_dcbab .GetContentStreamObjs ();var _cgdad []string ;for _ ,_cadee :=range _bgaafd {_fbaffb ,_ggddd :=_aefea (_cadee );if _ggddd !=nil {return nil ,_ggddd ;};_cgdad =append (_cgdad ,_fbaffb );
};return _cgdad ,nil ;};

// Y returns the value of the yellow component of the color.
func (_fga *PdfColorDeviceCMYK )Y ()float64 {return _fga [2]};

// StandardValidator is the interface that is used for the PDF Standard validation for the PDF document.
// It is using a DetailedPdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_ebeae *DetailedPdfReader )error ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dbbc *PdfColorspaceDeviceRGB )ToPdfObject ()_ab .PdfObject {return _ab .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};func (_fgbb *PdfReader )newPdfAnnotationHighlightFromDict (_gcd *_ab .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_acf :=PdfAnnotationHighlight {};
_bdag ,_ege :=_fgbb .newPdfAnnotationMarkupFromDict (_gcd );if _ege !=nil {return nil ,_ege ;};_acf .PdfAnnotationMarkup =_bdag ;_acf .QuadPoints =_gcd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_acf ,nil ;};func _egfdc (_egfec *_ab .PdfObjectDictionary )(*PdfFieldChoice ,error ){_bgef :=&PdfFieldChoice {};
_bgef .Opt ,_ =_ab .GetArray (_egfec .Get ("\u004f\u0070\u0074"));_bgef .TI ,_ =_ab .GetInt (_egfec .Get ("\u0054\u0049"));_bgef .I ,_ =_ab .GetArray (_egfec .Get ("\u0049"));return _bgef ,nil ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_bggdf *PdfFieldButton )SetType (btype ButtonType ){_afbdf :=uint32 (0);if _bggdf .Ff !=nil {_afbdf =uint32 (*_bggdf .Ff );};switch btype {case ButtonTypePush :_afbdf |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_afbdf |=FieldFlagRadio .Mask ();
};_bggdf .Ff =_ab .MakeInteger (int64 (_afbdf ));};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;func _ebeca (_gdbfc _ab .PdfObject )(*PdfShading ,error ){_dedga :=&PdfShading {};var _ggdcf *_ab .PdfObjectDictionary ;if _aedgf ,_adceg :=_ab .GetIndirect (_gdbfc );_adceg {_dedga ._edbbg =_aedgf ;_cffb ,_caedb :=_aedgf .PdfObject .(*_ab .PdfObjectDictionary );
if !_caedb {_fa .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_ab .ErrTypeError ;};_ggdcf =_cffb ;}else if _adgd ,_cbeea :=_ab .GetStream (_gdbfc );
_cbeea {_dedga ._edbbg =_adgd ;_ggdcf =_adgd .PdfObjectDictionary ;}else if _bgege ,_fgbfeb :=_ab .GetDict (_gdbfc );_fgbfeb {_dedga ._edbbg =_bgege ;_ggdcf =_bgege ;}else {_fa .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_gdbfc );
return nil ,_ab .ErrTypeError ;};if _ggdcf ==nil {_fa .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ca .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_gdbfc =_ggdcf .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _gdbfc ==nil {_fa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gdbfc =_ab .TraceToDirectObject (_gdbfc );_eggbd ,_fdba :=_gdbfc .(*_ab .PdfObjectInteger );if !_fdba {_fa .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gdbfc );
return nil ,_ab .ErrTypeError ;};if *_eggbd < 1||*_eggbd > 7{_fa .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_eggbd );
return nil ,_ab .ErrTypeError ;};_dedga .ShadingType =_eggbd ;_gdbfc =_ggdcf .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _gdbfc ==nil {_fa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gfff ,_abbb :=NewPdfColorspaceFromPdfObject (_gdbfc );if _abbb !=nil {_fa .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_abbb );
return nil ,_abbb ;};_dedga .ColorSpace =_gfff ;_gdbfc =_ggdcf .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _gdbfc !=nil {_gdbfc =_ab .TraceToDirectObject (_gdbfc );_efbaa ,_caeab :=_gdbfc .(*_ab .PdfObjectArray );if !_caeab {_fa .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gdbfc );
return nil ,_ab .ErrTypeError ;};_dedga .Background =_efbaa ;};_gdbfc =_ggdcf .Get ("\u0042\u0042\u006f\u0078");if _gdbfc !=nil {_gdbfc =_ab .TraceToDirectObject (_gdbfc );_efacc ,_bddgfd :=_gdbfc .(*_ab .PdfObjectArray );if !_bddgfd {_fa .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gdbfc );
return nil ,_ab .ErrTypeError ;};_gaegd ,_acag :=NewPdfRectangle (*_efacc );if _acag !=nil {_fa .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_acag );return nil ,_acag ;};_dedga .BBox =_gaegd ;};_gdbfc =_ggdcf .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _gdbfc !=nil {_gdbfc =_ab .TraceToDirectObject (_gdbfc );_ddcdg ,_cdcc :=_gdbfc .(*_ab .PdfObjectBool );if !_cdcc {_fa .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gdbfc );
return nil ,_ab .ErrTypeError ;};_dedga .AntiAlias =_ddcdg ;};switch *_eggbd {case 1:_cffbf ,_dcbfa :=_feacb (_ggdcf );if _dcbfa !=nil {return nil ,_dcbfa ;};_cffbf .PdfShading =_dedga ;_dedga ._begcg =_cffbf ;return _dedga ,nil ;case 2:_fgeac ,_aabd :=_fbdag (_ggdcf );
if _aabd !=nil {return nil ,_aabd ;};_fgeac .PdfShading =_dedga ;_dedga ._begcg =_fgeac ;return _dedga ,nil ;case 3:_ffef ,_cagab :=_fgae (_ggdcf );if _cagab !=nil {return nil ,_cagab ;};_ffef .PdfShading =_dedga ;_dedga ._begcg =_ffef ;return _dedga ,nil ;
case 4:_abfcc ,_cgbca :=_cdacb (_ggdcf );if _cgbca !=nil {return nil ,_cgbca ;};_abfcc .PdfShading =_dedga ;_dedga ._begcg =_abfcc ;return _dedga ,nil ;case 5:_fcbg ,_fccbg :=_abfcf (_ggdcf );if _fccbg !=nil {return nil ,_fccbg ;};_fcbg .PdfShading =_dedga ;
_dedga ._begcg =_fcbg ;return _dedga ,nil ;case 6:_gbaad ,_gbccc :=_beefe (_ggdcf );if _gbccc !=nil {return nil ,_gbccc ;};_gbaad .PdfShading =_dedga ;_dedga ._begcg =_gbaad ;return _dedga ,nil ;case 7:_adeae ,_ffgdg :=_fgbba (_ggdcf );if _ffgdg !=nil {return nil ,_ffgdg ;
};_adeae .PdfShading =_dedga ;_dedga ._begcg =_adeae ;return _dedga ,nil ;};return nil ,_ca .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_dceg *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_bfdfc :=_fdc .NewReader (img .getBase ());_fbge :=_cac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._dbdfad ,img ._aaefg );
_fdbdg :=_fdc .NewWriter (_fbge );_gcbae :=_ced .Pow (2,float64 (img .BitsPerComponent ))-1;_edag :=_dceg .GetNumComponents ();_dgce :=make ([]uint32 ,_edag );_ceag :=make ([]float64 ,_edag );for {_deef :=_bfdfc .ReadSamples (_dgce );if _deef ==_fb .EOF {break ;
}else if _deef !=nil {return img ,_deef ;};for _beca :=0;_beca < _edag ;_beca ++{_ffdb :=float64 (_dgce [_beca ])/_gcbae ;_ceag [_beca ]=_ffdb ;};_cfaa ,_deef :=_dceg .TintTransform .Evaluate (_ceag );if _deef !=nil {return img ,_deef ;};for _ ,_gfdg :=range _cfaa {_gfdg =_ced .Min (_ced .Max (0,_gfdg ),1.0);
if _deef =_fdbdg .WriteSample (uint32 (_gfdg *_gcbae ));_deef !=nil {return img ,_deef ;};};};return _dceg .AlternateSpace .ImageToRGB (_bgbec (&_fbge ));};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_bbfa *PdfAppender )Write (w _fb .Writer )error {if _bbfa ._edgg {return _ca .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_cagg :=NewPdfWriter ();_cdee ,_ggf :=_ab .GetDict (_cagg ._cdcee );if !_ggf {return _ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_bbc ,_ggf :=_cdee .Get ("\u004b\u0069\u0064\u0073").(*_ab .PdfObjectArray );if !_ggf {return _ca .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_fcfc ,_ggf :=_cdee .Get ("\u0043\u006f\u0075n\u0074").(*_ab .PdfObjectInteger );if !_ggf {return _ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_baed :=_bbfa ._egeg ._gcabf ;_fbg :=_baed .GetTrailer ();if _fbg ==nil {return _ca .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_daca ,_ggf :=_ab .GetIndirect (_fbg .Get ("\u0052\u006f\u006f\u0074"));if !_ggf {return _ca .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");
};_gbd ,_ggf :=_ab .GetDict (_daca );if !_ggf {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_daca ,*_fbg );
return _ca .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_cgfc :=range _gbd .Keys (){if _cagg ._cbfaag .Get (_cgfc )==nil {_gdec :=_gbd .Get (_cgfc );_cagg ._cbfaag .Set (_cgfc ,_gdec );};};if _bbfa ._ebe !=nil {_cagg ._cbfaag .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_bbfa ._ebe .ToPdfObject ());
_bbfa .updateObjectsDeep (_bbfa ._ebe .ToPdfObject (),nil );};if _bbfa ._adaf !=nil {_bbfa .updateObjectsDeep (_bbfa ._adaf .ToPdfObject (),nil );_cagg ._cbfaag .Set ("\u0044\u0053\u0053",_bbfa ._adaf .GetContainingPdfObject ());};if _cagg ._ecfdb .Major < 2{_cagg .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_cagg .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_bbfa .addNewObject (_cagg ._bfedb );_bbfa .addNewObject (_cagg ._eefb );_aggcb :=false ;if len (_bbfa ._egeg .PageList )!=len (_bbfa ._abed ){_aggcb =true ;}else {for _fbeb :=range _bbfa ._egeg .PageList {switch {case _bbfa ._abed [_fbeb ]==_bbfa ._egeg .PageList [_fbeb ]:case _bbfa ._abed [_fbeb ]==_bbfa .Reader .PageList [_fbeb ]:default:_aggcb =true ;
};if _aggcb {break ;};};};if _aggcb {_bbfa .updateObjectsDeep (_cagg ._cdcee ,nil );}else {_bbfa ._fabc [_cagg ._cdcee ]=struct{}{};};_cagg ._cdcee .ObjectNumber =_bbfa .Reader ._aegab .ObjectNumber ;_bbfa ._fddbc [_cagg ._cdcee ]=_bbfa .Reader ._aegab .ObjectNumber ;
_cdbd :=[]_ab .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_fabf :=range _bbfa ._abed {_gacf :=_fabf .ToPdfObject ();
*_fcfc =*_fcfc +1;if _ffdca ,_bcc :=_gacf .(*_ab .PdfIndirectObject );_bcc &&_ffdca .GetParser ()==_bbfa ._egeg ._gcabf {_bbc .Append (&_ffdca .PdfObjectReference );continue ;};if _eefa ,_gafa :=_ab .GetDict (_gacf );_gafa {_cecf ,_efcb :=_eefa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_ab .PdfIndirectObject );
for _efcb {_fa .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cecf );_gcff ,_ggbga :=_cecf .PdfObject .(*_ab .PdfObjectDictionary );if !_ggbga {return _ca .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_bcegg :=range _cdbd {_fa .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bcegg );if _eefa .Get (_bcegg )!=nil {_fa .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _cebf :=_gcff .Get (_bcegg );_cebf !=nil {_fa .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bcegg );_eefa .Set (_bcegg ,_cebf );};};_cecf ,_efcb =_gcff .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_ab .PdfIndirectObject );
_fa .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gcff .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_eefa .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cagg ._cdcee );};_bbfa .updateObjectsDeep (_gacf ,nil );
_bbc .Append (_gacf );};if _ ,_cebfb :=_bbfa ._ageg .Seek (0,_fb .SeekStart );_cebfb !=nil {return _cebfb ;};_fbdc :=make (map[SignatureHandler ]_fb .Writer );_ffec :=_ab .MakeArray ();for _ ,_cgbbe :=range _bbfa ._fbbdd {if _aacfa ,_gegf :=_ab .GetIndirect (_cgbbe );
_gegf {if _fadd ,_eddf :=_aacfa .PdfObject .(*pdfSignDictionary );_eddf {_aacag :=*_fadd ._decg ;var _gade error ;_fbdc [_aacag ],_gade =_aacag .NewDigest (_fadd ._ecefgb );if _gade !=nil {return _gade ;};_ffec .Append (_ab .MakeInteger (0xfffff),_ab .MakeInteger (0xfffff));
};};};if _ffec .Len ()> 0{_ffec .Append (_ab .MakeInteger (0xfffff),_ab .MakeInteger (0xfffff));};for _ ,_agea :=range _bbfa ._fbbdd {if _egfd ,_fdbd :=_ab .GetIndirect (_agea );_fdbd {if _ggfe ,_cfccc :=_egfd .PdfObject .(*pdfSignDictionary );_cfccc {_ggfe .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_ffec );
};};};_fgbf :=len (_fbdc )> 0;var _gaged _fb .Reader =_bbfa ._ageg ;if _fgbf {_bbbg :=make ([]_fb .Writer ,0,len (_fbdc ));for _ ,_abca :=range _fbdc {_bbbg =append (_bbbg ,_abca );};_gaged =_fb .TeeReader (_bbfa ._ageg ,_fb .MultiWriter (_bbbg ...));};
_cafac ,_eccg :=_fb .Copy (w ,_gaged );if _eccg !=nil {return _eccg ;};if len (_bbfa ._fbbdd )==0{return nil ;};_cagg ._dgdae =_cafac ;_cagg .ObjNumOffset =_bbfa ._cbea ;_cagg ._cbeff =true ;_cagg ._ccfdd =_bbfa ._aefe ;_cagg ._ebcdbb =_bbfa ._affa ;_cagg ._dbaac =_bbfa ._dcbc ;
_cagg ._ecfdb =_bbfa ._egeg .PdfVersion ();_cagg ._fgggfa =_bbfa ._fddbc ;_dcca :=_bbfa ._cca .GetXrefType ();if _dcca !=nil {_gbea :=*_dcca ==_ab .XrefTypeObjectStream ;_cagg ._ggccg =&_gbea ;};_cagg ._cgdbbd =map[_ab .PdfObject ]struct{}{};_cagg ._acgcfc =[]_ab .PdfObject {};
for _ ,_feae :=range _bbfa ._fbbdd {if _ ,_cegb :=_bbfa ._fabc [_feae ];_cegb {continue ;};_cagg .addObject (_feae );};_gccf :=w ;if _fgbf {_gccf =_ffc .NewBuffer (nil );};if _egg :=_cagg .Write (_gccf );_egg !=nil {return _egg ;};if _fgbf {_caag :=_gccf .(*_ffc .Buffer ).Bytes ();
_dcfc :=_ab .MakeArray ();var _cgabb []*pdfSignDictionary ;var _eggg int64 ;for _ ,_bgcc :=range _cagg ._acgcfc {if _afaa ,_gfdb :=_ab .GetIndirect (_bgcc );_gfdb {if _dbac ,_becf :=_afaa .PdfObject .(*pdfSignDictionary );_becf {_cgabb =append (_cgabb ,_dbac );
_acae :=_dbac ._bddb +int64 (_dbac ._gfefe );_dcfc .Append (_ab .MakeInteger (_eggg ),_ab .MakeInteger (_acae -_eggg ));_eggg =_dbac ._bddb +int64 (_dbac ._bcbega );};};};_dcfc .Append (_ab .MakeInteger (_eggg ),_ab .MakeInteger (_cafac +int64 (len (_caag ))-_eggg ));
_cdeab :=[]byte (_dcfc .WriteString ());for _ ,_affd :=range _cgabb {_ddgd :=int (_affd ._bddb -_cafac );for _gfda :=_affd ._cdgcd ;_gfda < _affd ._efffe ;_gfda ++{_caag [_ddgd +_gfda ]=' ';};_aece :=_caag [_ddgd +_affd ._cdgcd :_ddgd +_affd ._efffe ];
copy (_aece ,_cdeab );};var _aeda int ;for _ ,_dfbe :=range _cgabb {_cgaf :=int (_dfbe ._bddb -_cafac );_baea :=_caag [_aeda :_cgaf +_dfbe ._gfefe ];_accd :=*_dfbe ._decg ;_fbdc [_accd ].Write (_baea );_aeda =_cgaf +_dfbe ._bcbega ;};for _ ,_fgge :=range _cgabb {_bgge :=_caag [_aeda :];
_bafdb :=*_fgge ._decg ;_fbdc [_bafdb ].Write (_bgge );};for _ ,_gbde :=range _cgabb {_efe :=int (_gbde ._bddb -_cafac );_bfb :=*_gbde ._decg ;_dfce :=_fbdc [_bfb ];if _gcad :=_bfb .Sign (_gbde ._ecefgb ,_dfce );_gcad !=nil {return _gcad ;};_gbde ._ecefgb .ByteRange =_dcfc ;
_dad :=[]byte (_gbde ._ecefgb .Contents .WriteString ());for _cdd :=_gbde ._cdgcd ;_cdd < _gbde ._efffe ;_cdd ++{_caag [_efe +_cdd ]=' ';};for _cddg :=_gbde ._gfefe ;_cddg < _gbde ._bcbega ;_cddg ++{_caag [_efe +_cddg ]=' ';};_addc :=_caag [_efe +_gbde ._cdgcd :_efe +_gbde ._efffe ];
copy (_addc ,_cdeab );_addc =_caag [_efe +_gbde ._gfefe :_efe +_gbde ._bcbega ];copy (_addc ,_dad );};_dbcbg :=_ffc .NewBuffer (_caag );_ ,_eccg =_fb .Copy (w ,_dbcbg );if _eccg !=nil {return _eccg ;};};_bbfa ._edgg =true ;return nil ;};func (_dcfcbg *PdfPage )setContainer (_caaf *_ab .PdfIndirectObject ){_caaf .PdfObject =_dcfcbg ._bedg ;
_dcfcbg ._agafe =_caaf ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// SetContext set the sub annotation (context).
func (_cagcd *PdfShading )SetContext (ctx PdfModel ){_cagcd ._begcg =ctx };func (_bbbeb *LTV )enable (_dbdaf ,_ddgag []*_bgc .Certificate ,_dgec string )error {_cdecb ,_bgcfa ,_cffgd :=_bbbeb .buildCertChain (_dbdaf ,_ddgag );if _cffgd !=nil {return _cffgd ;
};_abfe ,_cffgd :=_bbbeb .getCerts (_cdecb );if _cffgd !=nil {return _cffgd ;};_bbff ,_cffgd :=_bbbeb .getOCSPs (_cdecb ,_bgcfa );if _cffgd !=nil {return _cffgd ;};_ggeg ,_cffgd :=_bbbeb .getCRLs (_cdecb );if _cffgd !=nil {return _cffgd ;};_bebga :=_bbbeb ._gcdc ;
_fabge ,_cffgd :=_bebga .addCerts (_abfe );if _cffgd !=nil {return _cffgd ;};_gbeb ,_cffgd :=_bebga .addOCSPs (_bbff );if _cffgd !=nil {return _cffgd ;};_fddgd ,_cffgd :=_bebga .addCRLs (_ggeg );if _cffgd !=nil {return _cffgd ;};if _dgec !=""{_bebga .VRI [_dgec ]=&VRI {Cert :_fabge ,OCSP :_gbeb ,CRL :_fddgd };
};_bbbeb ._fafcc .SetDSS (_bebga );return nil ;};func (_ecbgb *PdfReader )newPdfAnnotationSquareFromDict (_eaae *_ab .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_aacf :=PdfAnnotationSquare {};_cfdd ,_bdc :=_ecbgb .newPdfAnnotationMarkupFromDict (_eaae );
if _bdc !=nil {return nil ,_bdc ;};_aacf .PdfAnnotationMarkup =_cfdd ;_aacf .BS =_eaae .Get ("\u0042\u0053");_aacf .IC =_eaae .Get ("\u0049\u0043");_aacf .BE =_eaae .Get ("\u0042\u0045");_aacf .RD =_eaae .Get ("\u0052\u0044");return &_aacf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ae *PdfActionGoToR )ToPdfObject ()_ab .PdfObject {_ae .PdfAction .ToPdfObject ();_faf :=_ae ._cef ;_ega :=_faf .PdfObject .(*_ab .PdfObjectDictionary );_ega .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeGoToR )));if _ae .F !=nil {_ega .Set ("\u0046",_ae .F .ToPdfObject ());
};_ega .SetIfNotNil ("\u0044",_ae .D );_ega .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ae .NewWindow );return _faf ;};func (_bgf *PdfReader )newPdfAnnotationUnderlineFromDict (_fbda *_ab .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_egfc :=PdfAnnotationUnderline {};
_gefb ,_adfg :=_bgf .newPdfAnnotationMarkupFromDict (_fbda );if _adfg !=nil {return nil ,_adfg ;};_egfc .PdfAnnotationMarkup =_gefb ;_egfc .QuadPoints =_fbda .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_egfc ,nil ;};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_acdd *_be .Document )error ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// ToPdfObject implements interface PdfModel.
func (_eee *PdfAnnotationText )ToPdfObject ()_ab .PdfObject {_eee .PdfAnnotation .ToPdfObject ();_gcdf :=_eee ._ddg ;_dff :=_gcdf .PdfObject .(*_ab .PdfObjectDictionary );if _eee .PdfAnnotationMarkup !=nil {_eee .PdfAnnotationMarkup .appendToPdfDictionary (_dff );
};_dff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0054\u0065\u0078\u0074"));_dff .SetIfNotNil ("\u004f\u0070\u0065\u006e",_eee .Open );_dff .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eee .Name );_dff .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_eee .State );
_dff .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_eee .StateModel );return _gcdf ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _ab .StreamEncoder ;Intent _ab .PdfObject ;ImageMask _ab .PdfObject ;Mask _ab .PdfObject ;Matte _ab .PdfObject ;Decode _ab .PdfObject ;Interpolate _ab .PdfObject ;Alternatives _ab .PdfObject ;
SMask _ab .PdfObject ;SMaskInData _ab .PdfObject ;Name _ab .PdfObject ;StructParent _ab .PdfObject ;ID _ab .PdfObject ;OPI _ab .PdfObject ;Metadata _ab .PdfObject ;OC _ab .PdfObject ;Stream []byte ;_fdfdc *_ab .PdfObjectStream ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_abae *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgdf :=vals [0];if _fgdf < 0.0||_fgdf > 1.0{_fa .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _fgdf < 0.0{_fgdf =0.0;}else if _fgdf > 1.0{_fgdf =1.0;};return NewPdfColorDeviceGray (_fgdf ),nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_cgdbb OutlineDest )ToPdfObject ()_ab .PdfObject {if (_cgdbb .PageObj ==nil &&_cgdbb .Page < 0)||_cgdbb .Mode ==""{return _ab .MakeNull ();};_dadc :=_ab .MakeArray ();if _cgdbb .PageObj !=nil {_dadc .Append (_cgdbb .PageObj );}else {_dadc .Append (_ab .MakeInteger (_cgdbb .Page ));
};_dadc .Append (_ab .MakeName (_cgdbb .Mode ));switch _cgdbb .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_dadc .Append (_ab .MakeFloat (_cgdbb .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_dadc .Append (_ab .MakeFloat (_cgdbb .X ));
case "\u0058\u0059\u005a":_dadc .Append (_ab .MakeFloat (_cgdbb .X ));_dadc .Append (_ab .MakeFloat (_cgdbb .Y ));_dadc .Append (_ab .MakeFloat (_cgdbb .Zoom ));default:_dadc .Set (1,_ab .MakeName ("\u0046\u0069\u0074"));};return _dadc ;};

// IsShading specifies if the pattern is a shading pattern.
func (_bcegb *PdfPattern )IsShading ()bool {return _bcegb .PatternType ==2};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _ab .PdfObject ;Name _ab .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_dedb *PdfAnnotationSound )ToPdfObject ()_ab .PdfObject {_dedb .PdfAnnotation .ToPdfObject ();_fdcb :=_dedb ._ddg ;_gfbb :=_fdcb .PdfObject .(*_ab .PdfObjectDictionary );_dedb .PdfAnnotationMarkup .appendToPdfDictionary (_gfbb );_gfbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0053\u006f\u0075n\u0064"));
_gfbb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_dedb .Sound );_gfbb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dedb .Name );return _fdcb ;};type pdfFontType0 struct{fontCommon ;_accgd *_ab .PdfIndirectObject ;_fdbf _dc .TextEncoder ;Encoding _ab .PdfObject ;
DescendantFont *PdfFont ;_dbddg *_egc .CMap ;};func (_efdb *PdfReader )newPdfAnnotationSquigglyFromDict (_abdb *_ab .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_fffa :=PdfAnnotationSquiggly {};_cfg ,_cbaa :=_efdb .newPdfAnnotationMarkupFromDict (_abdb );
if _cbaa !=nil {return nil ,_cbaa ;};_fffa .PdfAnnotationMarkup =_cfg ;_fffa .QuadPoints =_abdb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fffa ,nil ;};func (_cgbec *PdfWriter )optimize ()error {if _cgbec ._ggdcg ==nil {return nil ;
};var _caagf error ;_cgbec ._acgcfc ,_caagf =_cgbec ._ggdcg .Optimize (_cgbec ._acgcfc );if _caagf !=nil {return _caagf ;};_gbfad :=make (map[_ab .PdfObject ]struct{},len (_cgbec ._acgcfc ));for _ ,_aeag :=range _cgbec ._acgcfc {_gbfad [_aeag ]=struct{}{};
};_cgbec ._cgdbbd =_gbfad ;return nil ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_fceb *Image )Resample (targetBitsPerComponent int64 ){if _fceb .BitsPerComponent ==targetBitsPerComponent {return ;};_abfacd :=_fceb .GetSamples ();if targetBitsPerComponent < _fceb .BitsPerComponent {_ceaga :=_fceb .BitsPerComponent -targetBitsPerComponent ;
for _bffg :=range _abfacd {_abfacd [_bffg ]>>=uint (_ceaga );};}else if targetBitsPerComponent > _fceb .BitsPerComponent {_agca :=targetBitsPerComponent -_fceb .BitsPerComponent ;for _fdbdbc :=range _abfacd {_abfacd [_fdbdbc ]<<=uint (_agca );};};_fceb .BitsPerComponent =targetBitsPerComponent ;
if _fceb .BitsPerComponent < 8{_fceb .resampleLowBits (_abfacd );return ;};_fgafd :=_cac .BytesPerLine (int (_fceb .Width ),int (_fceb .BitsPerComponent ),_fceb .ColorComponents );_acabf :=make ([]byte ,_fgafd *int (_fceb .Height ));var (_fdfbf ,_acegd ,_fbed ,_fgdea int ;
_gcgcf uint32 ;);for _fbed =0;_fbed < int (_fceb .Height );_fbed ++{_fdfbf =_fbed *_fgafd ;_acegd =(_fbed +1)*_fgafd -1;_eeda :=_fdc .ResampleUint32 (_abfacd [_fdfbf :_acegd ],int (targetBitsPerComponent ),8);for _fgdea ,_gcgcf =range _eeda {_acabf [_fgdea +_fdfbf ]=byte (_gcgcf );
};};_fceb .Data =_acabf ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_bfdee *PdfReader )IsEncrypted ()(bool ,error ){return _bfdee ._gcabf .IsEncrypted ()};func (_dfbf *PdfReader )newPdfAnnotationRedactFromDict (_cfgf *_ab .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_beee :=PdfAnnotationRedact {};_adb ,_ecdd :=_dfbf .newPdfAnnotationMarkupFromDict (_cfgf );
if _ecdd !=nil {return nil ,_ecdd ;};_beee .PdfAnnotationMarkup =_adb ;_beee .QuadPoints =_cfgf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_beee .IC =_cfgf .Get ("\u0049\u0043");_beee .RO =_cfgf .Get ("\u0052\u004f");_beee .OverlayText =_cfgf .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_beee .Repeat =_cfgf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_beee .DA =_cfgf .Get ("\u0044\u0041");_beee .Q =_cfgf .Get ("\u0051");return &_beee ,nil ;};func _gbdff (_aggg _ab .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_ggga :=NewPdfColorspaceSpecialIndexed ();
if _edce ,_eaff :=_aggg .(*_ab .PdfIndirectObject );_eaff {_ggga ._abde =_edce ;};_aggg =_ab .TraceToDirectObject (_aggg );_abacb ,_gcae :=_aggg .(*_ab .PdfObjectArray );if !_gcae {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _abacb .Len ()!=4{return nil ,_f .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_aggg =_abacb .Get (0);
_gbbdd ,_gcae :=_aggg .(*_ab .PdfObjectName );if !_gcae {return nil ,_f .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_gbbdd !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_f .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_aggg =_abacb .Get (1);_daef ,_dega :=DetermineColorspaceNameFromPdfObject (_aggg );if _dega !=nil {return nil ,_dega ;};if _daef =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_daef =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_fa .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_daef );
return nil ,_deea ;};_dbcdd ,_dega :=NewPdfColorspaceFromPdfObject (_aggg );if _dega !=nil {return nil ,_dega ;};_ggga .Base =_dbcdd ;_aggg =_abacb .Get (2);_fddcc ,_dega :=_ab .GetNumberAsInt64 (_aggg );if _dega !=nil {return nil ,_dega ;};if _fddcc > 255{return nil ,_f .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_ggga .HiVal =int (_fddcc );_aggg =_abacb .Get (3);_ggga .Lookup =_aggg ;_aggg =_ab .TraceToDirectObject (_aggg );var _ffcee []byte ;if _adcae ,_cbcb :=_aggg .(*_ab .PdfObjectString );_cbcb {_ffcee =_adcae .Bytes ();_fa .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_ffcee );
}else if _edadc ,_fafbb :=_aggg .(*_ab .PdfObjectStream );_fafbb {_fa .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_aggg .String ());_fa .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_edadc .Stream ),_edadc .Stream );
_egbg ,_fdbg :=_ab .DecodeStream (_edadc );if _fdbg !=nil {return nil ,_fdbg ;};_fa .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_egbg ),_egbg );_ffcee =_egbg ;}else {_fa .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_aggg );
return nil ,_f .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_ffcee )< _ggga .Base .GetNumComponents ()*(_ggga .HiVal +1){_fa .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_fa .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_ffcee ),_ggga .Base .GetNumComponents (),_ggga .HiVal );
}else {_ffcee =_ffcee [:_ggga .Base .GetNumComponents ()*(_ggga .HiVal +1)];};_ggga ._dfcdc =_ffcee ;return _ggga ,nil ;};func _eagcc (_cebc _fb .ReadSeeker ,_bcaf *ReaderOpts ,_dgdgb bool ,_aedcf string )(*PdfReader ,error ){if _bcaf ==nil {_bcaf =NewReaderOpts ();
};_dfea :=&PdfReader {_ddeee :_cebc ,_gfdgc :map[_ab .PdfObject ]struct{}{},_ebda :_caeea (),_ccbag :_bcaf .LazyLoad ,_feggb :_bcaf .DetailedFlags };_caed ,_edffcf :=_gfgae ("\u0072");if _edffcf !=nil {return nil ,_edffcf ;};_edffcf =_age .Track (_caed ,_aedcf );
if _edffcf !=nil {return nil ,_edffcf ;};_dfea ._fbggb =_caed ;var _efeec *_ab .PdfParser ;if !_dfea ._feggb {_efeec ,_edffcf =_ab .NewParser (_cebc );}else {_efeec ,_edffcf =_ab .NewDetailedPdfParser (_cebc );};if _edffcf !=nil {return nil ,_edffcf ;};
_dfea ._gcabf =_efeec ;_fega ,_edffcf :=_dfea .IsEncrypted ();if _edffcf !=nil {return nil ,_edffcf ;};if !_fega {_edffcf =_dfea .loadStructure ();if _edffcf !=nil {return nil ,_edffcf ;};}else if _dgdgb {_beegf ,_ffadg :=_dfea .Decrypt ([]byte (_bcaf .Password ));
if _ffadg !=nil {return nil ,_ffadg ;};if !_beegf {return nil ,_ca .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};return _dfea ,nil ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_cbgb *_ab .PdfObjectDictionary ;_afffg *_ab .PdfIndirectObject ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_eafcf *_ab .PdfIndirectObject ;Certs []*_ab .PdfObjectStream ;OCSPs []*_ab .PdfObjectStream ;CRLs []*_ab .PdfObjectStream ;VRI map[string ]*VRI ;_fedaa map[string ]*_ab .PdfObjectStream ;_aaag map[string ]*_ab .PdfObjectStream ;_addfa map[string ]*_ab .PdfObjectStream ;
};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _fb .ReadSeeker )(*PdfFont ,error ){const _bdcc =_dc .CharCode (32);const _fbbef =_dc .CharCode (255);_gace ,_cadce :=_fd .ReadAll (r );if _cadce !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cadce );
return nil ,_cadce ;};_adffe ,_cadce :=_bc .TtfParse (_ffc .NewReader (_gace ));if _cadce !=nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_cadce );
return nil ,_cadce ;};_fbba :=&pdfFontSimple {_aeac :make (map[_dc .CharCode ]float64 ),fontCommon :fontCommon {_gcab :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_fbba ._ebfag =_dc .NewWinAnsiEncoder ();_fbba ._egceb =_adffe .PostScriptName ;
_fbba .FirstChar =_ab .MakeInteger (int64 (_bdcc ));_fbba .LastChar =_ab .MakeInteger (int64 (_fbbef ));_gged :=1000.0/float64 (_adffe .UnitsPerEm );if len (_adffe .Widths )<=0{return nil ,_ca .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_bbbgb :=_gged *float64 (_adffe .Widths [0]);_faeaa :=make ([]float64 ,0,_fbbef -_bdcc +1);for _aecb :=_bdcc ;_aecb <=_fbbef ;_aecb ++{_ddccc ,_daaed :=_fbba .Encoder ().CharcodeToRune (_aecb );if !_daaed {_fa .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_aecb );
_faeaa =append (_faeaa ,_bbbgb );continue ;};_cecaa ,_gebbe :=_adffe .Chars [_ddccc ];if !_gebbe {_fa .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_faeaa =append (_faeaa ,_bbbgb );
continue ;};_aegg :=_gged *float64 (_adffe .Widths [_cecaa ]);_faeaa =append (_faeaa ,_aegg );};_fbba .Widths =_ab .MakeIndirectObject (_ab .MakeArrayFromFloats (_faeaa ));if len (_faeaa )< int (_fbbef -_bdcc +1){_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_faeaa ),255-32+1);
return nil ,_ab .ErrRangeError ;};for _gbfdd :=_bdcc ;_gbfdd <=_fbbef ;_gbfdd ++{_fbba ._aeac [_gbfdd ]=_faeaa [_gbfdd -_bdcc ];};_fbba .Encoding =_ab .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_fdaaa :=&PdfFontDescriptor {};
_fdaaa .FontName =_ab .MakeName (_adffe .PostScriptName );_fdaaa .Ascent =_ab .MakeFloat (_gged *float64 (_adffe .TypoAscender ));_fdaaa .Descent =_ab .MakeFloat (_gged *float64 (_adffe .TypoDescender ));_fdaaa .CapHeight =_ab .MakeFloat (_gged *float64 (_adffe .CapHeight ));
_fdaaa .FontBBox =_ab .MakeArrayFromFloats ([]float64 {_gged *float64 (_adffe .Xmin ),_gged *float64 (_adffe .Ymin ),_gged *float64 (_adffe .Xmax ),_gged *float64 (_adffe .Ymax )});_fdaaa .ItalicAngle =_ab .MakeFloat (_adffe .ItalicAngle );_fdaaa .MissingWidth =_ab .MakeFloat (_gged *float64 (_adffe .Widths [0]));
_bgacf ,_cadce :=_ab .MakeStream (_gace ,_ab .NewFlateEncoder ());if _cadce !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_cadce );
return nil ,_cadce ;};_bgacf .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ab .MakeInteger (int64 (len (_gace ))));_fdaaa .FontFile2 =_bgacf ;if _adffe .Bold {_fdaaa .StemV =_ab .MakeInteger (120);}else {_fdaaa .StemV =_ab .MakeInteger (70);
};_ffeef :=_gabaf ;if _adffe .IsFixedPitch {_ffeef |=_abdd ;};if _adffe .ItalicAngle !=0{_ffeef |=_ecbba ;};_fdaaa .Flags =_ab .MakeInteger (int64 (_ffeef ));_fbba ._dfaf =_fdaaa ;_abgf :=&PdfFont {_cgdec :_fbba };return _abgf ,nil ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_ffge *PdfPageResources )SetXObjectFormByName (keyName _ab .PdfObjectName ,xform *XObjectForm )error {_beegg :=xform .ToPdfObject ().(*_ab .PdfObjectStream );_cacaa :=_ffge .SetXObjectByName (keyName ,_beegg );return _cacaa ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_ab .PdfObjectInteger ;BitsPerComponent *_ab .PdfObjectInteger ;VerticesPerRow *_ab .PdfObjectInteger ;Decode *_ab .PdfObjectArray ;Function []PdfFunction ;};func (_ebaecd *PdfReader )newPdfOutlineItemFromIndirectObject (_addce *_ab .PdfIndirectObject )(*PdfOutlineItem ,error ){_faeec ,_dbfeg :=_addce .PdfObject .(*_ab .PdfObjectDictionary );
if !_dbfeg {return nil ,_f .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_ggcdd :=NewPdfOutlineItem ();_bgebdg :=_faeec .Get ("\u0054\u0069\u0074l\u0065");
if _bgebdg ==nil {return nil ,_f .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_gbcc ,_efcgg :=_ab .GetString (_bgebdg );if !_efcgg {return nil ,_f .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_bgebdg );};_ggcdd .Title =_gbcc ;if _dbfd :=_faeec .Get ("\u0043\u006f\u0075n\u0074");
_dbfd !=nil {_ebfgd ,_efagea :=_dbfd .(*_ab .PdfObjectInteger );if !_efagea {return nil ,_f .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_dbfd );};_dbcfe :=int64 (*_ebfgd );
_ggcdd .Count =&_dbcfe ;};if _fegbg :=_faeec .Get ("\u0044\u0065\u0073\u0074");_fegbg !=nil {_ggcdd .Dest =_ab .ResolveReference (_fegbg );if !_ebaecd ._ccbag {_aaebd :=_ebaecd .traverseObjectData (_ggcdd .Dest );if _aaebd !=nil {return nil ,_aaebd ;};
};};if _dfbc :=_faeec .Get ("\u0041");_dfbc !=nil {_ggcdd .A =_ab .ResolveReference (_dfbc );if !_ebaecd ._ccbag {_gaacd :=_ebaecd .traverseObjectData (_ggcdd .A );if _gaacd !=nil {return nil ,_gaacd ;};};};if _fddbb :=_faeec .Get ("\u0053\u0045");_fddbb !=nil {_ggcdd .SE =nil ;
};if _gbed :=_faeec .Get ("\u0043");_gbed !=nil {_ggcdd .C =_ab .ResolveReference (_gbed );};if _befff :=_faeec .Get ("\u0046");_befff !=nil {_ggcdd .F =_ab .ResolveReference (_befff );};return _ggcdd ,nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_cgadc *PdfShading )GetContainingPdfObject ()_ab .PdfObject {return _cgadc ._edbbg };

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_dfgbd *PdfRectangle )Normalize (){if _dfgbd .Llx > _dfgbd .Urx {_dfgbd .Llx ,_dfgbd .Urx =_dfgbd .Urx ,_dfgbd .Llx ;};if _dfgbd .Lly > _dfgbd .Ury {_dfgbd .Lly ,_dfgbd .Ury =_dfgbd .Ury ,_dfgbd .Lly ;};};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_eacgg *_ab .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_ab .PdfObjectName ;Filter *_ab .PdfObjectName ;SubFilter *_ab .PdfObjectName ;Contents *_ab .PdfObjectString ;Cert _ab .PdfObject ;ByteRange *_ab .PdfObjectArray ;Reference *_ab .PdfObjectArray ;Changes *_ab .PdfObjectArray ;Name *_ab .PdfObjectString ;
M *_ab .PdfObjectString ;Location *_ab .PdfObjectString ;Reason *_ab .PdfObjectString ;ContactInfo *_ab .PdfObjectString ;R *_ab .PdfObjectInteger ;V *_ab .PdfObjectInteger ;PropBuild *_ab .PdfObjectDictionary ;PropAuthTime *_ab .PdfObjectInteger ;PropAuthType *_ab .PdfObjectName ;
};func _gecd (_dfgb *_ab .PdfObjectDictionary ,_babfc *fontCommon )(*pdfFontType3 ,error ){_bbde :=_feab (_babfc );_gfadd :=_dfgb .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _gfadd ==nil {_gfadd =_ab .MakeInteger (0);};_bbde .FirstChar =_gfadd ;
_fcde ,_bceca :=_ab .GetIntVal (_gfadd );if !_bceca {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gfadd );
return nil ,_ab .ErrTypeError ;};_dbffg :=_dc .CharCode (_fcde );_gfadd =_dfgb .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _gfadd ==nil {_gfadd =_ab .MakeInteger (255);};_bbde .LastChar =_gfadd ;_fcde ,_bceca =_ab .GetIntVal (_gfadd );
if !_bceca {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_gfadd );return nil ,_ab .ErrTypeError ;
};_feded :=_dc .CharCode (_fcde );_gfadd =_dfgb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _gfadd !=nil {_bbde .Resources =_gfadd ;};_gfadd =_dfgb .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _gfadd ==nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_gfadd );
return nil ,_ab .ErrNotSupported ;};_bbde .CharProcs =_gfadd ;_gfadd =_dfgb .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _gfadd ==nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_gfadd );
return nil ,_ab .ErrNotSupported ;};_bbde .FontMatrix =_gfadd ;_bbde ._cgbdd =make (map[_dc .CharCode ]float64 );_gfadd =_dfgb .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _gfadd !=nil {_bbde .Widths =_gfadd ;_agadb ,_dgfea :=_ab .GetArray (_gfadd );
if !_dgfea {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_gfadd );return nil ,_ab .ErrTypeError ;
};_ecbbad ,_fcfe :=_agadb .ToFloat64Array ();if _fcfe !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_fcfe ;};if len (_ecbbad )!=int (_feded -_dbffg +1){_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_feded -_dbffg +1,len (_ecbbad ));
return nil ,_ab .ErrRangeError ;};_ecacd ,_dgfea :=_ab .GetArray (_bbde .FontMatrix );if !_dgfea {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_ecacd );
return nil ,_fcfe ;};_cffg ,_fcfe :=_ecacd .ToFloat64Array ();if _fcfe !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_fcfe ;};_gdaa :=_da .NewMatrix (_cffg [0],_cffg [1],_cffg [2],_cffg [3],_cffg [4],_cffg [5]);for _edadcc ,_dffe :=range _ecbbad {_cecg ,_ :=_gdaa .Transform (_dffe ,_dffe );_bbde ._cgbdd [_dbffg +_dc .CharCode (_edadcc )]=_cecg ;};};_bbde .Encoding =_ab .TraceToDirectObject (_dfgb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_ebeed :=_dfgb .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _ebeed !=nil {_bbde ._gded =_ab .TraceToDirectObject (_ebeed );_ecbab ,_acdce :=_gbgdc (_bbde ._gded ,&_bbde .fontCommon );if _acdce !=nil {return nil ,_acdce ;};_bbde ._eefee =_ecbab ;
};if _dcebg :=_bbde ._eefee ;_dcebg !=nil {_bbde ._cebbg =_dc .NewCMapEncoder ("",nil ,_dcebg );}else {_bbde ._cebbg =_dc .NewPdfDocEncoder ();};return _bbde ,nil ;};func _egca (_fgbd _ab .PdfObject ){_fa .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_fgbd ,_fgbd .String ());
if _ebbfg ,_bece :=_fgbd .(*_ab .PdfObjectStream );_bece {_dgde ,_eacdg :=_ab .DecodeStream (_ebbfg );if _eacdg !=nil {_fa .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_eacdg );return ;};_fa .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_dgde );
}else if _bdedcb ,_agcdg :=_fgbd .(*_ab .PdfIndirectObject );_agcdg {_fa .Log .Debug ("\u0025\u0054\u0020%\u0076",_bdedcb .PdfObject ,_bdedcb .PdfObject );_fa .Log .Debug ("\u0025\u0073",_bdedcb .PdfObject .String ());};};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_ddacf ,_bbfab :=NewStandard14Font (basefont );if _bbfab !=nil {panic (_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _ddacf ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};func (_ddbf *PdfWriter )writeDocumentVersion (){if _ddbf ._cbeff {_ddbf .writeString ("\u000a");}else {_ddbf .writeString (_f .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_ddbf ._ecfdb .Major ,_ddbf ._ecfdb .Minor ));
_ddbf .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_bae :=NewPdfAnnotation ();_bgeg :=&PdfAnnotationWidget {};_bgeg .PdfAnnotation =_bae ;_bae .SetContext (_bgeg );return _bgeg ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_db :=NewPdfAction ();_abe :=&PdfActionGoToE {};_abe .PdfAction =_db ;_db .SetContext (_abe );return _abe ;};

// ToPdfObject implements interface PdfModel.
func (_acdb *PdfAnnotationLink )ToPdfObject ()_ab .PdfObject {_acdb .PdfAnnotation .ToPdfObject ();_fbabb :=_acdb ._ddg ;_eec :=_fbabb .PdfObject .(*_ab .PdfObjectDictionary );_eec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u004c\u0069\u006e\u006b"));
if _acdb ._eaa !=nil &&_acdb ._eaa ._ad !=nil {_eec .Set ("\u0041",_acdb ._eaa ._ad .ToPdfObject ());}else if _acdb .A !=nil {_eec .Set ("\u0041",_acdb .A );};_eec .SetIfNotNil ("\u0044\u0065\u0073\u0074",_acdb .Dest );_eec .SetIfNotNil ("\u0048",_acdb .H );
_eec .SetIfNotNil ("\u0050\u0041",_acdb .PA );_eec .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_acdb .QuadPoints );_eec .SetIfNotNil ("\u0042\u0053",_acdb .BS );return _fbabb ;};

// A returns the value of the A component of the color.
func (_aaf *PdfColorCalRGB )A ()float64 {return _aaf [0]};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_afb :=NewPdfAction ();_dag :=&PdfActionTrans {};_dag .PdfAction =_afb ;_afb .SetContext (_dag );return _dag ;};

// String returns a string representation of what flags are set.
func (_dcdd FieldFlag )String ()string {_aadc :="";if _dcdd ==FieldFlagClear {_aadc ="\u0043\u006c\u0065a\u0072";return _aadc ;};if _dcdd &FieldFlagReadOnly > 0{_aadc +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _dcdd &FieldFlagRequired > 0{_aadc +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _dcdd &FieldFlagNoExport > 0{_aadc +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _dcdd &FieldFlagNoToggleToOff > 0{_aadc +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _dcdd &FieldFlagRadio > 0{_aadc +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _dcdd &FieldFlagPushbutton > 0{_aadc +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _dcdd &FieldFlagRadiosInUnision > 0{_aadc +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _dcdd &FieldFlagMultiline > 0{_aadc +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _dcdd &FieldFlagPassword > 0{_aadc +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _dcdd &FieldFlagFileSelect > 0{_aadc +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _dcdd &FieldFlagDoNotScroll > 0{_aadc +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _dcdd &FieldFlagComb > 0{_aadc +="\u007c\u0043\u006fm\u0062";};if _dcdd &FieldFlagRichText > 0{_aadc +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _dcdd &FieldFlagDoNotSpellCheck > 0{_aadc +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _dcdd &FieldFlagCombo > 0{_aadc +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _dcdd &FieldFlagEdit > 0{_aadc +="\u007c\u0045\u0064i\u0074";};if _dcdd &FieldFlagSort > 0{_aadc +="\u007c\u0053\u006fr\u0074";};if _dcdd &FieldFlagMultiSelect > 0{_aadc +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _dcdd &FieldFlagCommitOnSelChange > 0{_aadc +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _af .Trim (_aadc ,"\u007c");};func _dabde (_bbcd _ab .PdfObject ,_cfgb *PdfReader )(*OutlineDest ,error ){_abedf ,_bggea :=_ab .GetArray (_bbcd );
if !_bggea {return nil ,_ca .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_gfefa :=_abedf .Len ();if _gfefa < 2{return nil ,_f .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_gfefa );
};_bdbe :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_affb :=_abedf .Get (0);if _fedgg ,_cbbd :=_ab .GetIndirect (_affb );_cbbd {if _ ,_gffed ,_bgebd :=_cfgb .PageFromIndirectObject (_fedgg );_bgebd ==nil {_bdbe .Page =int64 (_gffed -1);}else {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_fedgg );
};_bdbe .PageObj =_fedgg ;}else if _cbag ,_aedf :=_ab .GetIntVal (_affb );_aedf {if _cbag >=0&&_cbag < len (_cfgb .PageList ){_bdbe .PageObj =_cfgb .PageList [_cbag ].GetPageAsIndirectObject ();}else {_fa .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_cbag );
};_bdbe .Page =int64 (_cbag );}else {return nil ,_f .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_affb );};_acced ,_bggea :=_ab .GetNameVal (_abedf .Get (1));
if !_bggea {_fa .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_abedf .Get (1));
return _bdbe ,nil ;};switch _acced {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _gfefa > 2{_bdbe .Y ,_ =_ab .GetNumberAsFloat (_ab .TraceToDirectObject (_abedf .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _gfefa > 2{_bdbe .X ,_ =_ab .GetNumberAsFloat (_ab .TraceToDirectObject (_abedf .Get (2)));
};case "\u0058\u0059\u005a":if _gfefa > 4{_bdbe .X ,_ =_ab .GetNumberAsFloat (_ab .TraceToDirectObject (_abedf .Get (2)));_bdbe .Y ,_ =_ab .GetNumberAsFloat (_ab .TraceToDirectObject (_abedf .Get (3)));_bdbe .Zoom ,_ =_ab .GetNumberAsFloat (_ab .TraceToDirectObject (_abedf .Get (4)));
};default:_acced ="\u0046\u0069\u0074";};_bdbe .Mode =_acced ;return _bdbe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ceda *PdfAnnotationUnderline )ToPdfObject ()_ab .PdfObject {_ceda .PdfAnnotation .ToPdfObject ();_ddeg :=_ceda ._ddg ;_eagf :=_ddeg .PdfObject .(*_ab .PdfObjectDictionary );_ceda .PdfAnnotationMarkup .appendToPdfDictionary (_eagf );_eagf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_eagf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ceda .QuadPoints );return _ddeg ;};

// K returns the value of the key component of the color.
func (_ffff *PdfColorDeviceCMYK )K ()float64 {return _ffff [3]};

// ColorToRGB converts a Lab color to an RGB color.
func (_cbbe *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_ggbgg :=func (_gfeb float64 )float64 {if _gfeb >=6.0/29{return _gfeb *_gfeb *_gfeb ;};return 108.0/841*(_gfeb -4/29);};_geeb ,_gbff :=color .(*PdfColorLab );if !_gbff {_fa .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_geeb .L ();AStar :=_geeb .A ();BStar :=_geeb .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_cbbe .WhitePoint [0]*_ggbgg (L );Y :=_cbbe .WhitePoint [1]*_ggbgg (M );Z :=_cbbe .WhitePoint [2]*_ggbgg (N );_daae :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dggbb :=-0.969256*X +1.875992*Y +0.041556*Z ;_cbed :=0.055648*X +-0.204043*Y +1.057311*Z ;_daae =_ced .Min (_ced .Max (_daae ,0),1.0);
_dggbb =_ced .Min (_ced .Max (_dggbb ,0),1.0);_cbed =_ced .Min (_ced .Max (_cbed ,0),1.0);return NewPdfColorDeviceRGB (_daae ,_dggbb ,_cbed ),nil ;};func _bafd (_dedd _ab .PdfObject )(*PdfBorderStyle ,error ){_bcgb :=&PdfBorderStyle {};_bcgb ._acgf =_dedd ;
var _bdb *_ab .PdfObjectDictionary ;_dedd =_ab .TraceToDirectObject (_dedd );_bdb ,_eeff :=_dedd .(*_ab .PdfObjectDictionary );if !_eeff {return nil ,_ca .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _acdacc :=_bdb .Get ("\u0054\u0079\u0070\u0065");
_acdacc !=nil {_ddfa ,_bgbc :=_acdacc .(*_ab .PdfObjectName );if !_bgbc {_fa .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_acdacc );
}else {if *_ddfa !="\u0042\u006f\u0072\u0064\u0065\u0072"{_fa .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_ddfa );};};};if _faa :=_bdb .Get ("\u0057");
_faa !=nil {_efgg ,_gbfdf :=_ab .GetNumberAsFloat (_faa );if _gbfdf !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_gbfdf );return nil ,_gbfdf ;};_bcgb .W =&_efgg ;
};if _gfe :=_bdb .Get ("\u0053");_gfe !=nil {_dcedf ,_acgd :=_gfe .(*_ab .PdfObjectName );if !_acgd {return nil ,_ca .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _bffc BorderStyle ;switch *_dcedf {case "\u0053":_bffc =BorderStyleSolid ;case "\u0044":_bffc =BorderStyleDashed ;case "\u0042":_bffc =BorderStyleBeveled ;case "\u0049":_bffc =BorderStyleInset ;case "\u0055":_bffc =BorderStyleUnderline ;default:_fa .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_dcedf );
return nil ,_ca .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_bcgb .S =&_bffc ;};if _fedcd :=_bdb .Get ("\u0044");_fedcd !=nil {_gbgf ,_fafbf :=_fedcd .(*_ab .PdfObjectArray );
if !_fafbf {_fa .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_fedcd );return nil ,_ca .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_bddg ,_dffg :=_gbgf .ToIntegerArray ();if _dffg !=nil {_fa .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_dffg );
return nil ,_dffg ;};_bcgb .D =&_bddg ;};return _bcgb ,nil ;};func (_dcefc *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_egaag *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_ddgc :=_fdc .NewReader (img .getBase ());_gddeg :=_cac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_fbgf :=_fdc .NewWriter (_gddeg );
_dgab :=_ced .Pow (2,float64 (img .BitsPerComponent ))-1;_egag :=make ([]uint32 ,3);var (_cfgfd error ;_gafc ,_bdfg ,_gce ,_aaef ,_cffdad ,_cbad float64 ;);for {_cfgfd =_ddgc .ReadSamples (_egag );if _cfgfd ==_fb .EOF {break ;}else if _cfgfd !=nil {return img ,_cfgfd ;
};_gafc =float64 (_egag [0])/_dgab ;_bdfg =float64 (_egag [1])/_dgab ;_gce =float64 (_egag [2])/_dgab ;_aaef =_egaag .Matrix [0]*_ced .Pow (_gafc ,_egaag .Gamma [0])+_egaag .Matrix [3]*_ced .Pow (_bdfg ,_egaag .Gamma [1])+_egaag .Matrix [6]*_ced .Pow (_gce ,_egaag .Gamma [2]);
_cffdad =_egaag .Matrix [1]*_ced .Pow (_gafc ,_egaag .Gamma [0])+_egaag .Matrix [4]*_ced .Pow (_bdfg ,_egaag .Gamma [1])+_egaag .Matrix [7]*_ced .Pow (_gce ,_egaag .Gamma [2]);_cbad =_egaag .Matrix [2]*_ced .Pow (_gafc ,_egaag .Gamma [0])+_egaag .Matrix [5]*_ced .Pow (_bdfg ,_egaag .Gamma [1])+_egaag .Matrix [8]*_ced .Pow (_gce ,_egaag .Gamma [2]);
_gafc =3.240479*_aaef +-1.537150*_cffdad +-0.498535*_cbad ;_bdfg =-0.969256*_aaef +1.875992*_cffdad +0.041556*_cbad ;_gce =0.055648*_aaef +-0.204043*_cffdad +1.057311*_cbad ;_gafc =_ced .Min (_ced .Max (_gafc ,0),1.0);_bdfg =_ced .Min (_ced .Max (_bdfg ,0),1.0);
_gce =_ced .Min (_ced .Max (_gce ,0),1.0);_egag [0]=uint32 (_gafc *_dgab );_egag [1]=uint32 (_bdfg *_dgab );_egag [2]=uint32 (_gce *_dgab );if _cfgfd =_fbgf .WriteSamples (_egag );_cfgfd !=nil {return img ,_cfgfd ;};};return _bgbec (&_gddeg ),nil ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_ceebc *PdfReader )GetPageLabels ()(_ab .PdfObject ,error ){_eabcg :=_ab .ResolveReference (_ceebc ._bgffe .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _eabcg ==nil {return nil ,nil ;};if !_ceebc ._ccbag {_egdgef :=_ceebc .traverseObjectData (_eabcg );
if _egdgef !=nil {return nil ,_egdgef ;};};return _eabcg ,nil ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_decb *PdfReader )PageFromIndirectObject (ind *_ab .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_decb .PageList )!=len (_decb ._ffbe ){return nil ,0,_ca .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _fbcfg ,_fdaca :=range _decb ._ffbe {if _fdaca ==ind {return _decb .PageList [_fbcfg ],_fbcfg +1,nil ;};};return nil ,0,_ca .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_afee fontCommon )isCIDFont ()bool {if _afee ._gcab ==""{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_afee );
};_gbdca :=false ;switch _afee ._gcab {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_gbdca =true ;};_fa .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_gbdca ,_afee );
return _gbdca ;};func (_cddcd fontCommon )fontFlags ()int {if _cddcd ._dfaf ==nil {return 0;};return _cddcd ._dfaf ._badbd ;};

// AddWatermarkImage adds a watermark to the page.
func (_gagbd *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_fegcd ,_cefeb :=_gagbd .GetMediaBox ();if _cefeb !=nil {return _cefeb ;};_gefg :=_fegcd .Urx -_fegcd .Llx ;_fafef :=_fegcd .Ury -_fegcd .Lly ;_feefa :=float64 (*ximg .Width );
_abba :=(_gefg -_feefa )/2;if opt .FitToWidth {_feefa =_gefg ;_abba =0;};_bedf :=_fafef ;_bbeca :=float64 (0);if opt .PreserveAspectRatio {_bedf =_feefa *float64 (*ximg .Height )/float64 (*ximg .Width );_bbeca =(_fafef -_bedf )/2;};if _gagbd .Resources ==nil {_gagbd .Resources =NewPdfPageResources ();
};_cgbdc :=0;_beeac :=_ab .PdfObjectName (_f .Sprintf ("\u0049\u006d\u0077%\u0064",_cgbdc ));for _gagbd .Resources .HasXObjectByName (_beeac ){_cgbdc ++;_beeac =_ab .PdfObjectName (_f .Sprintf ("\u0049\u006d\u0077%\u0064",_cgbdc ));};_cefeb =_gagbd .AddImageResource (_beeac ,ximg );
if _cefeb !=nil {return _cefeb ;};_cgbdc =0;_dbfb :=_ab .PdfObjectName (_f .Sprintf ("\u0047\u0053\u0025\u0064",_cgbdc ));for _gagbd .HasExtGState (_dbfb ){_cgbdc ++;_dbfb =_ab .PdfObjectName (_f .Sprintf ("\u0047\u0053\u0025\u0064",_cgbdc ));};_bacga :=_ab .MakeDict ();
_bacga .Set ("\u0042\u004d",_ab .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_bacga .Set ("\u0043\u0041",_ab .MakeFloat (opt .Alpha ));_bacga .Set ("\u0063\u0061",_ab .MakeFloat (opt .Alpha ));_cefeb =_gagbd .AddExtGState (_dbfb ,_bacga );if _cefeb !=nil {return _cefeb ;
};_gece :=_f .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_dbfb ,_feefa ,_bedf ,_abba ,_bbeca ,_beeac );
_gagbd .AddContentStreamByString (_gece );return nil ;};

// NewDetailedPdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewDetailedPdfReader (rs _fb .ReadSeeker )(*DetailedPdfReader ,error ){const _bada ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0044\u0065t\u0061\u0069\u006c\u0065\u0064\u0050\u0064\u0066\u0052\u0065a\u0064\u0065\u0072";_geba ,_gacc :=_eagcc (rs ,&ReaderOpts {DetailedFlags :true },true ,_bada );
if _gacc !=nil {return nil ,_gacc ;};_dedgc ,_gacc :=_geba ._gcabf .ParserMetadata ();if _gacc !=nil {return nil ,_gacc ;};return &DetailedPdfReader {PdfReader :_geba ,_ffacg :_dedgc },nil ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_ffb :=NewPdfAnnotation ();_bbac :=&PdfAnnotationText {};_bbac .PdfAnnotation =_ffb ;_bbac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffb .SetContext (_bbac );return _bbac ;};

// ToPdfObject implements interface PdfModel.
func (_fbaf *PdfAnnotationProjection )ToPdfObject ()_ab .PdfObject {_fbaf .PdfAnnotation .ToPdfObject ();_bacc :=_fbaf ._ddg ;_ecf :=_bacc .PdfObject .(*_ab .PdfObjectDictionary );_fbaf .PdfAnnotationMarkup .appendToPdfDictionary (_ecf );return _bacc ;
};type pdfCIDFontType2 struct{fontCommon ;_ecgf *_ab .PdfIndirectObject ;_eddgc _dc .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_ab .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _ab .PdfObject ;W _ab .PdfObject ;DW2 _ab .PdfObject ;W2 _ab .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _ab .PdfObject ;_fgdee map[_dc .CharCode ]float64 ;_gegdd float64 ;_aacec map[rune ]int ;};func (_aegde *PdfReader )newPdfAnnotationStampFromDict (_bacg *_ab .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_dged :=PdfAnnotationStamp {};
_efbc ,_cgfd :=_aegde .newPdfAnnotationMarkupFromDict (_bacg );if _cgfd !=nil {return nil ,_cgfd ;};_dged .PdfAnnotationMarkup =_efbc ;_dged .Name =_bacg .Get ("\u004e\u0061\u006d\u0065");return &_dged ,nil ;};func _dbead ()string {_dfdbc .Lock ();defer _dfdbc .Unlock ();
if len (_bgcfag )> 0{return _bgcfag ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};func _eaaga (_dcgcf *_ab .PdfObjectDictionary )(*PdfFieldText ,error ){_adcc :=&PdfFieldText {};
_adcc .DA ,_ =_ab .GetString (_dcgcf .Get ("\u0044\u0041"));_adcc .Q ,_ =_ab .GetInt (_dcgcf .Get ("\u0051"));_adcc .DS ,_ =_ab .GetString (_dcgcf .Get ("\u0044\u0053"));_adcc .RV =_dcgcf .Get ("\u0052\u0056");_adcc .MaxLen ,_ =_ab .GetInt (_dcgcf .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));
return _adcc ,nil ;};

// GetContentStream returns the XObject Form's content stream.
func (_abaaeb *XObjectForm )GetContentStream ()([]byte ,error ){_deebe ,_fdbdgg :=_ab .DecodeStream (_abaaeb ._bedc );if _fdbdgg !=nil {return nil ,_fdbdgg ;};return _deebe ,nil ;};func (_abfbbf *PdfWriter )writeBytes (_cbfee []byte ){if _abfbbf ._gegac !=nil {return ;
};_bfcce ,_ceffe :=_abfbbf ._ccgad .Write (_cbfee );_abfbbf ._abbce +=int64 (_bfcce );_abfbbf ._gegac =_ceffe ;};func (_cfbf *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_fbafb *PdfReader )GetObjectNums ()[]int {return _fbafb ._gcabf .GetObjectNums ()};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_fbaaf *PdfShadingPattern )ToPdfObject ()_ab .PdfObject {_fbaaf .PdfPattern .ToPdfObject ();_agdgb :=_fbaaf .getDict ();if _fbaaf .Shading !=nil {_agdgb .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_fbaaf .Shading .ToPdfObject ());};if _fbaaf .Matrix !=nil {_agdgb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fbaaf .Matrix );
};if _fbaaf .ExtGState !=nil {_agdgb .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_fbaaf .ExtGState );};return _fbaaf ._cafaf ;};func (_dbga *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_fgcgc *modelManager )GetPrimitiveFromModel (model PdfModel )_ab .PdfObject {_egfccf ,_baeab :=_fgcgc ._eagag [model ];if !_baeab {return nil ;};return _egfccf ;};

// ToPdfObject implements interface PdfModel.
func (_cde *PdfActionMovie )ToPdfObject ()_ab .PdfObject {_cde .PdfAction .ToPdfObject ();_bfg :=_cde ._cef ;_efb :=_bfg .PdfObject .(*_ab .PdfObjectDictionary );_efb .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeMovie )));_efb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_cde .Annotation );
_efb .SetIfNotNil ("\u0054",_cde .T );_efb .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_cde .Operation );return _bfg ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_cdgf *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_de :=NewPdfAction ();_ecdb :=&PdfActionImportData {};_ecdb .PdfAction =_de ;_de .SetContext (_ecdb );return _ecdb ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _ab .PdfObject ;Q _ab .PdfObject ;RC _ab .PdfObject ;DS _ab .PdfObject ;CL _ab .PdfObject ;IT _ab .PdfObject ;BE _ab .PdfObject ;RD _ab .PdfObject ;BS _ab .PdfObject ;LE _ab .PdfObject ;
};

// ToPdfObject implements interface PdfModel.
func (_gdd *PdfActionThread )ToPdfObject ()_ab .PdfObject {_gdd .PdfAction .ToPdfObject ();_cbd :=_gdd ._cef ;_bgg :=_cbd .PdfObject .(*_ab .PdfObjectDictionary );_bgg .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeThread )));if _gdd .F !=nil {_bgg .Set ("\u0046",_gdd .F .ToPdfObject ());
};_bgg .SetIfNotNil ("\u0044",_gdd .D );_bgg .SetIfNotNil ("\u0042",_gdd .B );return _cbd ;};func (_gab *PdfReader )newPdfAnnotationMovieFromDict (_faea *_ab .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_cbee :=PdfAnnotationMovie {};_cbee .T =_faea .Get ("\u0054");
_cbee .Movie =_faea .Get ("\u004d\u006f\u0076i\u0065");_cbee .A =_faea .Get ("\u0041");return &_cbee ,nil ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_badc *modelManager )GetModelFromPrimitive (primitive _ab .PdfObject )PdfModel {model ,_eeebb :=_badc ._abecg [primitive ];if !_eeebb {return nil ;};return model ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_bege *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_bege ._degg =colorspace ;};

// GetNumComponents returns the number of color components.
func (_egff *PdfColorspaceICCBased )GetNumComponents ()int {return _egff .N };

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _bg .Time ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_baedbc :=&PdfColorspaceDeviceN {};return _baedbc ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _ab .PdfObject ;H _ab .PdfObject ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_cggdb *PdfFont )CharcodesToUnicodeWithStats (charcodes []_dc .CharCode )(_aagc []rune ,_gcag ,_aecg int ){_aeffg ,_gcag ,_aecg :=_cggdb .CharcodesToStrings (charcodes );return []rune (_af .Join (_aeffg ,"")),_gcag ,_aecg ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_edcfc *Outline )Insert (index uint ,item *OutlineItem ){_cbbga :=uint (len (_edcfc .Entries ));if index > _cbbga {index =_cbbga ;};_edcfc .Entries =append (_edcfc .Entries [:index ],append ([]*OutlineItem {item },_edcfc .Entries [index :]...)...);
};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ToPdfObject implements interface PdfModel.
func (_cdcd *PdfAnnotationWatermark )ToPdfObject ()_ab .PdfObject {_cdcd .PdfAnnotation .ToPdfObject ();_cdeac :=_cdcd ._ddg ;_deadf :=_cdeac .PdfObject .(*_ab .PdfObjectDictionary );_deadf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_deadf .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_cdcd .FixedPrint );return _cdeac ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_cddbe *PdfWriter )SetOptimizer (optimizer Optimizer ){_cddbe ._ggdcg =optimizer };

// ToInteger convert to an integer format.
func (_edbb *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_adada :=_ced .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_adada *_edbb .R ()),uint32 (_adada *_edbb .G ()),uint32 (_adada *_edbb .B ())};};

// ToPdfObject implements interface PdfModel.
func (_ccb *PdfActionResetForm )ToPdfObject ()_ab .PdfObject {_ccb .PdfAction .ToPdfObject ();_bd :=_ccb ._cef ;_cab :=_bd .PdfObject .(*_ab .PdfObjectDictionary );_cab .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeResetForm )));_cab .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_ccb .Fields );
_cab .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_ccb .Flags );return _bd ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_bcdce DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cfgce *PdfPageResources )GetShadingByName (keyName _ab .PdfObjectName )(*PdfShading ,bool ){if _cfgce .Shading ==nil {return nil ,false ;};_efaee ,_ddbbbf :=_ab .TraceToDirectObject (_cfgce .Shading ).(*_ab .PdfObjectDictionary );if !_ddbbbf {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfgce .Shading );
return nil ,false ;};if _caafc :=_efaee .Get (keyName );_caafc !=nil {_aefeag ,_fgfge :=_ebeca (_caafc );if _fgfge !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_fgfge );
return nil ,false ;};return _aefeag ,true ;};return nil ,false ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_ab .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};func _eaac (_befcd _ab .PdfObject )(*PdfColorspaceDeviceN ,error ){_egfea :=NewPdfColorspaceDeviceN ();
if _ccea ,_dabf :=_befcd .(*_ab .PdfIndirectObject );_dabf {_egfea ._feee =_ccea ;};_befcd =_ab .TraceToDirectObject (_befcd );_cdda ,_bdgg :=_befcd .(*_ab .PdfObjectArray );if !_bdgg {return nil ,_f .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _cdda .Len ()!=4&&_cdda .Len ()!=5{return nil ,_f .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_befcd =_cdda .Get (0);
_afddg ,_bdgg :=_befcd .(*_ab .PdfObjectName );if !_bdgg {return nil ,_f .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_afddg !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_f .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_befcd =_cdda .Get (1);
_befcd =_ab .TraceToDirectObject (_befcd );_egafg ,_bdgg :=_befcd .(*_ab .PdfObjectArray );if !_bdgg {return nil ,_f .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_egfea .ColorantNames =_egafg ;_befcd =_cdda .Get (2);_eccf ,_eada :=NewPdfColorspaceFromPdfObject (_befcd );if _eada !=nil {return nil ,_eada ;};_egfea .AlternateSpace =_eccf ;_dcgbf ,_eada :=_cbacf (_cdda .Get (3));if _eada !=nil {return nil ,_eada ;
};_egfea .TintTransform =_dcgbf ;if _cdda .Len ()==5{_bcccf ,_fbeg :=_ddbc (_cdda .Get (4));if _fbeg !=nil {return nil ,_fbeg ;};_egfea .Attributes =_bcccf ;};return _egfea ,nil ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_bdga *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_bdga .GetNumComponents (){return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbac ,_baag :=_bdga .TintTransform .Evaluate (vals );
if _baag !=nil {return nil ,_baag ;};_efac ,_baag :=_bdga .AlternateSpace .ColorFromFloats (_cbac );if _baag !=nil {return nil ,_baag ;};return _efac ,nil ;};func _baacf ()string {_dfdbc .Lock ();defer _dfdbc .Unlock ();_egdc :=_age .GetLicenseKey ();if len (_ffaff )> 0&&(_egdc .IsLicensed ()||_bagb ){return _ffaff ;
};return _f .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_dfcea (),_egdc .TypeToString ());};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_agaf *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func (_dadg *LTV )getOCSPs (_faece []*_bgc .Certificate ,_ccccc map[string ]*_bgc .Certificate )([][]byte ,error ){_aaed :=make ([][]byte ,0,len (_faece ));
for _ ,_facb :=range _faece {for _ ,_ggaa :=range _facb .OCSPServer {if _dadg .CertClient .IsCA (_facb ){continue ;};_bbgcf ,_ecdcg :=_ccccc [_facb .Issuer .CommonName ];if !_ecdcg {_fa .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_bagc ,_adggbg :=_dadg .OCSPClient .MakeRequest (_ggaa ,_facb ,_bbgcf );if _adggbg !=nil {_fa .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_adggbg );
continue ;};_aaed =append (_aaed ,_bagc );};};return _aaed ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cadbe *PdfShadingType2 )ToPdfObject ()_ab .PdfObject {_cadbe .PdfShading .ToPdfObject ();_dfdce ,_eafff :=_cadbe .getShadingDict ();if _eafff !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dfdce ==nil {_fa .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _cadbe .Coords !=nil {_dfdce .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_cadbe .Coords );
};if _cadbe .Domain !=nil {_dfdce .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cadbe .Domain );};if _cadbe .Function !=nil {if len (_cadbe .Function )==1{_dfdce .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cadbe .Function [0].ToPdfObject ());
}else {_cadg :=_ab .MakeArray ();for _ ,_dgfc :=range _cadbe .Function {_cadg .Append (_dgfc .ToPdfObject ());};_dfdce .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cadg );};};if _cadbe .Extend !=nil {_dfdce .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_cadbe .Extend );
};return _cadbe ._edbbg ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_fabcad *PdfShading )GetContext ()PdfModel {return _fabcad ._begcg };

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_bf :=NewPdfAction ();_beg :=&PdfActionThread {};_beg .PdfAction =_bf ;_bf .SetContext (_beg );return _beg ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _ab .PdfObject ;RichMediaContent _ab .PdfObject ;};func (_bgbf *LTV )getCerts (_eacf []*_bgc .Certificate )([][]byte ,error ){_fgeb :=make ([][]byte ,0,len (_eacf ));for _ ,_gbbfd :=range _eacf {_fgeb =append (_fgeb ,_gbbfd .Raw );
};return _fgeb ,nil ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// ToPdfObject implements interface PdfModel.
func (_cfb *PdfActionRendition )ToPdfObject ()_ab .PdfObject {_cfb .PdfAction .ToPdfObject ();_egad :=_cfb ._cef ;_fae :=_egad .PdfObject .(*_ab .PdfObjectDictionary );_fae .SetIfNotNil ("\u0053",_ab .MakeName (string (ActionTypeRendition )));_fae .SetIfNotNil ("\u0052",_cfb .R );
_fae .SetIfNotNil ("\u0041\u004e",_cfb .AN );_fae .SetIfNotNil ("\u004f\u0050",_cfb .OP );_fae .SetIfNotNil ("\u004a\u0053",_cfb .JS );return _egad ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_bcef *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggea :=vals [0];if _ggea < 0.0||_ggea > 100.0{_fa .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_ggea );
return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfbc :=vals [1];_gcfb :=float64 (-100);_eadd :=float64 (100);if len (_bcef .Range )> 1{_gcfb =_bcef .Range [0];_eadd =_bcef .Range [1];};if _bfbc < _gcfb ||_bfbc > _eadd {_fa .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_bfbc ,_gcfb ,_eadd );
return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aeeb :=vals [2];_eade :=float64 (-100);_gbabc :=float64 (100);if len (_bcef .Range )> 3{_eade =_bcef .Range [2];_gbabc =_bcef .Range [3];};if _aeeb < _eade ||_aeeb > _gbabc {_fa .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_aeeb ,_eade ,_gbabc );
return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eegd :=NewPdfColorLab (_ggea ,_bfbc ,_aeeb );return _eegd ,nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_dgfg *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_dddd :=NewPdfOutline ();_dddd ._caad =&_dddd ;return _dddd };func _fdbdb (_cddb *PdfField ,_eacgb _ab .PdfObject )error {switch _cddb .GetContext ().(type ){case *PdfFieldText :switch _ccaee :=_eacgb .(type ){case *_ab .PdfObjectName :_egge :=_ccaee ;
_fa .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_egge .String ());
_cddb .V =_ab .MakeEncodedString (_ccaee .String (),true );case *_ab .PdfObjectString :_cddb .V =_ab .MakeEncodedString (_ccaee .String (),true );default:_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_ccaee ,_ccaee );
};case *PdfFieldButton :switch _eacgb .(type ){case *_ab .PdfObjectName :if len (_eacgb .String ())> 0{_cddb .V =_eacgb ;_dfcfbc (_cddb ,_eacgb );};case *_ab .PdfObjectString :if len (_eacgb .String ())> 0{_cddb .V =_ab .MakeName (_eacgb .String ());_dfcfbc (_cddb ,_cddb .V );
};default:_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cddb .PartialName (),_eacgb );_cddb .V =_eacgb ;};case *PdfFieldChoice :switch _eacgb .(type ){case *_ab .PdfObjectName :if len (_eacgb .String ())> 0{_cddb .V =_ab .MakeString (_eacgb .String ());
_dfcfbc (_cddb ,_eacgb );};case *_ab .PdfObjectString :if len (_eacgb .String ())> 0{_cddb .V =_eacgb ;_dfcfbc (_cddb ,_ab .MakeName (_eacgb .String ()));};default:_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cddb .PartialName (),_eacgb );
_cddb .V =_eacgb ;};case *PdfFieldSignature :_fa .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_cddb .PartialName (),_eacgb );
};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bgbg *PdfAnnotationLine )ToPdfObject ()_ab .PdfObject {_bgbg .PdfAnnotation .ToPdfObject ();_bbg :=_bgbg ._ddg ;_ebd :=_bbg .PdfObject .(*_ab .PdfObjectDictionary );_bgbg .PdfAnnotationMarkup .appendToPdfDictionary (_ebd );_ebd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u004c\u0069\u006e\u0065"));
_ebd .SetIfNotNil ("\u004c",_bgbg .L );_ebd .SetIfNotNil ("\u0042\u0053",_bgbg .BS );_ebd .SetIfNotNil ("\u004c\u0045",_bgbg .LE );_ebd .SetIfNotNil ("\u0049\u0043",_bgbg .IC );_ebd .SetIfNotNil ("\u004c\u004c",_bgbg .LL );_ebd .SetIfNotNil ("\u004c\u004c\u0045",_bgbg .LLE );
_ebd .SetIfNotNil ("\u0043\u0061\u0070",_bgbg .Cap );_ebd .SetIfNotNil ("\u0049\u0054",_bgbg .IT );_ebd .SetIfNotNil ("\u004c\u004c\u004f",_bgbg .LLO );_ebd .SetIfNotNil ("\u0043\u0050",_bgbg .CP );_ebd .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bgbg .Measure );
_ebd .SetIfNotNil ("\u0043\u004f",_bgbg .CO );return _bbg ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_aecaf *PdfFont )ToUnicode ()string {if _aecaf .baseFields ()._eefee ==nil {return "";};return _aecaf .baseFields ()._eefee .Name ();};func _bcfcg ()string {_dfdbc .Lock ();defer _dfdbc .Unlock ();return _acacbb };

// SetName sets the `Name` field of the signature.
func (_eegddf *PdfSignature )SetName (name string ){_eegddf .Name =_ab .MakeString (name )};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_cdgfe *PdfColorspaceCalGray )ToPdfObject ()_ab .PdfObject {_fbdac :=&_ab .PdfObjectArray {};_fbdac .Append (_ab .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_fgaf :=_ab .MakeDict ();if _cdgfe .WhitePoint !=nil {_fgaf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_ab .MakeArray (_ab .MakeFloat (_cdgfe .WhitePoint [0]),_ab .MakeFloat (_cdgfe .WhitePoint [1]),_ab .MakeFloat (_cdgfe .WhitePoint [2])));
}else {_fa .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _cdgfe .BlackPoint !=nil {_fgaf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_ab .MakeArray (_ab .MakeFloat (_cdgfe .BlackPoint [0]),_ab .MakeFloat (_cdgfe .BlackPoint [1]),_ab .MakeFloat (_cdgfe .BlackPoint [2])));
};_fgaf .Set ("\u0047\u0061\u006dm\u0061",_ab .MakeFloat (_cdgfe .Gamma ));_fbdac .Append (_fgaf );if _cdgfe ._adde !=nil {_cdgfe ._adde .PdfObject =_fbdac ;return _cdgfe ._adde ;};return _fbdac ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_ebcb *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_adea ,_bdde :=color .(*PdfColorDeviceRGB );if !_bdde {_fa .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _adea ,nil ;};func _eafbe (_cbfc []byte )[]byte {const _gegbg =52845;const _adfdbg =22719;_cgfec :=55665;for _ ,_gbbf :=range _cbfc [:4]{_cgfec =(int (_gbbf )+_cgfec )*_gegbg +_adfdbg ;
};_aeee :=make ([]byte ,len (_cbfc )-4);for _edagd ,_bcae :=range _cbfc [4:]{_aeee [_edagd ]=byte (int (_bcae )^_cgfec >>8);_cgfec =(int (_bcae )+_cgfec )*_gegbg +_adfdbg ;};return _aeee ;};func (_afc *PdfReader )newPdfActionTransFromDict (_ceb *_ab .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_ceb .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fege *PdfShadingType3 )ToPdfObject ()_ab .PdfObject {_fege .PdfShading .ToPdfObject ();_cccf ,_fbdee :=_fege .getShadingDict ();if _fbdee !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fege .Coords !=nil {_cccf .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_fege .Coords );};if _fege .Domain !=nil {_cccf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fege .Domain );};if _fege .Function !=nil {if len (_fege .Function )==1{_cccf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fege .Function [0].ToPdfObject ());
}else {_efccd :=_ab .MakeArray ();for _ ,_ggbe :=range _fege .Function {_efccd .Append (_ggbe .ToPdfObject ());};_cccf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efccd );};};if _fege .Extend !=nil {_cccf .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_fege .Extend );
};return _fege ._edbbg ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _ab .PdfObject ;IC _ab .PdfObject ;BE _ab .PdfObject ;RD _ab .PdfObject ;};func _agac (_ccgg _ab .PdfObject )(*PdfColorspaceICCBased ,error ){_eecg :=&PdfColorspaceICCBased {};if _gcfa ,_dcfd :=_ccgg .(*_ab .PdfIndirectObject );
_dcfd {_eecg ._gefff =_gcfa ;};_ccgg =_ab .TraceToDirectObject (_ccgg );_cccd ,_dgba :=_ccgg .(*_ab .PdfObjectArray );if !_dgba {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cccd .Len ()!=2{return nil ,_f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_ccgg =_ab .TraceToDirectObject (_cccd .Get (0));_ddfg ,_dgba :=_ccgg .(*_ab .PdfObjectName );if !_dgba {return nil ,_f .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_ddfg !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_f .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_ccgg =_cccd .Get (1);
_bdce ,_dgba :=_ab .GetStream (_ccgg );if !_dgba {_fa .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_ccgg );
return nil ,_f .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_fdcg :=_bdce .PdfObjectDictionary ;_caacc ,_dgba :=_fdcg .Get ("\u004e").(*_ab .PdfObjectInteger );
if !_dgba {return nil ,_f .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_caacc !=1&&*_caacc !=3&&*_caacc !=4{return nil ,_f .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_eecg .N =int (*_caacc );if _bceda :=_fdcg .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_bceda !=nil {_edabb ,_gfac :=NewPdfColorspaceFromPdfObject (_bceda );if _gfac !=nil {return nil ,_gfac ;};_eecg .Alternate =_edabb ;};if _cbab :=_fdcg .Get ("\u0052\u0061\u006eg\u0065");
_cbab !=nil {_cbab =_ab .TraceToDirectObject (_cbab );_cedg ,_edgf :=_cbab .(*_ab .PdfObjectArray );if !_edgf {return nil ,_f .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _cedg .Len ()!=2*_eecg .N {return nil ,_f .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_cceg ,_cegc :=_cedg .GetAsFloat64Slice ();if _cegc !=nil {return nil ,_cegc ;};_eecg .Range =_cceg ;}else {_eecg .Range =make ([]float64 ,2*_eecg .N );for _ffac :=0;_ffac < _eecg .N ;_ffac ++{_eecg .Range [2*_ffac ]=0.0;_eecg .Range [2*_ffac +1]=1.0;
};};if _dcba :=_fdcg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dcba !=nil {_fage ,_edfb :=_dcba .(*_ab .PdfObjectStream );if !_edfb {return nil ,_f .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_eecg .Metadata =_fage ;};_bfed ,_bffca :=_ab .DecodeStream (_bdce );if _bffca !=nil {return nil ,_bffca ;};_eecg .Data =_bfed ;_eecg ._cfcd =_bdce ;return _eecg ,nil ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_efef *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _efef ._bggda ==nil {_efef ._bggda =_bga .NewPSExecutor (_efef .Program );};var _aggcd []_bga .PSObject ;for _ ,_dbfea :=range xVec {_aggcd =append (_aggcd ,_bga .MakeReal (_dbfea ));
};_fbbb ,_ccda :=_efef ._bggda .Execute (_aggcd );if _ccda !=nil {return nil ,_ccda ;};_fdgag ,_ccda :=_bga .PSObjectArrayToFloat64Array (_fbbb );if _ccda !=nil {return nil ,_ccda ;};return _fdgag ,nil ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_cgeg ,_eafd :=_bc .NewStdFontByName (HelveticaName );if !_eafd {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_daffc :=_abffe (_cgeg );return &PdfFont {_cgdec :&_daffc };};

// IsValid checks if the given pdf output intent type is valid.
func (_ffbce PdfOutputIntentType )IsValid ()bool {return _ffbce >=PdfOutputIntentTypeA1 &&_ffbce <=PdfOutputIntentTypeX ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _ab .PdfObject ;Volume _ab .PdfObject ;Synchronous _ab .PdfObject ;Repeat _ab .PdfObject ;Mix _ab .PdfObject ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_dfdbc .Lock ();defer _dfdbc .Unlock ();_ebafe =subject };func (_fad *PdfReader )newPdfActionLaunchFromDict (_cffd *_ab .PdfObjectDictionary )(*PdfActionLaunch ,error ){_gdcb ,_dgf :=_ecdc (_cffd .Get ("\u0046"));if _dgf !=nil {return nil ,_dgf ;
};return &PdfActionLaunch {Win :_cffd .Get ("\u0057\u0069\u006e"),Mac :_cffd .Get ("\u004d\u0061\u0063"),Unix :_cffd .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_cffd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_gdcb },nil ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_ffacc *PdfColorspaceDeviceN )GetNumComponents ()int {return _ffacc .ColorantNames .Len ()};func (_egddd *PdfPattern )getDict ()*_ab .PdfObjectDictionary {if _ddddf ,_cgfb :=_egddd ._cafaf .(*_ab .PdfIndirectObject );_cgfb {_ggce ,_dfcec :=_ddddf .PdfObject .(*_ab .PdfObjectDictionary );
if !_dfcec {return nil ;};return _ggce ;}else if _dbegfd ,_acbdg :=_egddd ._cafaf .(*_ab .PdfObjectStream );_acbdg {return _dbegfd .PdfObjectDictionary ;}else {_fa .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_egddd ._cafaf );
return nil ;};};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_agcd *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ca .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_deaa ,_gbfc :=_cac .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._dbdfad ,img ._aaefg );if _gbfc !=nil {return img ,_gbfc ;};_deab ,_gbfc :=_cac .GrayConverter .Convert (_deaa );if _gbfc !=nil {return img ,_gbfc ;
};return _bgbec (_deab .Base ()),nil ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_acdcf *Image )ConvertToBinary ()error {if _acdcf .ColorComponents ==1&&_acdcf .BitsPerComponent ==1{return nil ;};_fbafg ,_abbcb :=_acdcf .ToGoImage ();if _abbcb !=nil {return _abbcb ;};_ffceg ,_abbcb :=_cac .MonochromeConverter .Convert (_fbafg );
if _abbcb !=nil {return _abbcb ;};_acdcf .Data =_ffceg .Base ().Data ;_acdcf ._dbdfad ,_abbcb =_cac .ScaleAlphaToMonochrome (_acdcf ._dbdfad ,int (_acdcf .Width ),int (_acdcf .Height ));if _abbcb !=nil {return _abbcb ;};_acdcf .BitsPerComponent =1;_acdcf .ColorComponents =1;
_acdcf ._aaefg =nil ;return nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_ccfeb *PdfPageResources )SetXObjectImageByName (keyName _ab .PdfObjectName ,ximg *XObjectImage )error {_feced :=ximg .ToPdfObject ().(*_ab .PdfObjectStream );_daaeg :=_ccfeb .SetXObjectByName (keyName ,_feced );return _daaeg ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_cbeee PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _cbeee ._cgdec .getFontDescriptor (),nil ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _ab .PdfObjectName ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _ab .PdfObject ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_dfdbc .Lock ();defer _dfdbc .Unlock ();_gada =keywords };

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_cgcfc *Image )SetSamples (samples []uint32 ){if _cgcfc .BitsPerComponent < 8{samples =_cgcfc .samplesAddPadding (samples );};_bged :=_fdc .ResampleUint32 (samples ,int (_cgcfc .BitsPerComponent ),8);_ffced :=make ([]byte ,len (_bged ));for _edage ,_feabg :=range _bged {_ffced [_edage ]=byte (_feabg );
};_cgcfc .Data =_ffced ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_bgbbf []byte ;_fabfe []uint32 ;_fagf *_ab .PdfObjectStream ;};func (_fgegd *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _fgegd ._dfaf ==nil &&_fgegd .DescendantFont !=nil {return _fgegd .DescendantFont .FontDescriptor ();
};return _fgegd ._dfaf ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_ddfde *PdfOutlineItem )GetContainingPdfObject ()_ab .PdfObject {return _ddfde ._fdbca };const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_aeaa *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _aeaa .Alternate ==nil {if _aeaa .N ==1{_cfeb :=NewPdfColorspaceDeviceGray ();return _cfeb .ColorFromFloats (vals );}else if _aeaa .N ==3{_gbfcf :=NewPdfColorspaceDeviceRGB ();
return _gbfcf .ColorFromFloats (vals );}else if _aeaa .N ==4{_ecfe :=NewPdfColorspaceDeviceCMYK ();return _ecfe .ColorFromFloats (vals );}else {return nil ,_ca .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _aeaa .Alternate .ColorFromFloats (vals );};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_ebcbd :_ab .MakeIndirectObject (_ab .MakeDict ())};};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_gcbbf *PdfPattern )GetContext ()PdfModel {return _gcbbf ._dgbge };

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_eccfb *PdfWriter )SetOpenAction (dest _ab .PdfObject )error {if dest ==nil ||_ab .IsNullObject (dest ){return nil ;};_eccfb ._cbfaag .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _eccfb .addObjects (dest );};


// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_babb *PdfColorspaceCalRGB )ToPdfObject ()_ab .PdfObject {_fdac :=&_ab .PdfObjectArray {};_fdac .Append (_ab .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_fegg :=_ab .MakeDict ();if _babb .WhitePoint !=nil {_bacf :=_ab .MakeArray (_ab .MakeFloat (_babb .WhitePoint [0]),_ab .MakeFloat (_babb .WhitePoint [1]),_ab .MakeFloat (_babb .WhitePoint [2]));
_fegg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bacf );}else {_fa .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _babb .BlackPoint !=nil {_ccfc :=_ab .MakeArray (_ab .MakeFloat (_babb .BlackPoint [0]),_ab .MakeFloat (_babb .BlackPoint [1]),_ab .MakeFloat (_babb .BlackPoint [2]));_fegg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_ccfc );
};if _babb .Gamma !=nil {_ffad :=_ab .MakeArray (_ab .MakeFloat (_babb .Gamma [0]),_ab .MakeFloat (_babb .Gamma [1]),_ab .MakeFloat (_babb .Gamma [2]));_fegg .Set ("\u0047\u0061\u006dm\u0061",_ffad );};if _babb .Matrix !=nil {_egdgg :=_ab .MakeArray (_ab .MakeFloat (_babb .Matrix [0]),_ab .MakeFloat (_babb .Matrix [1]),_ab .MakeFloat (_babb .Matrix [2]),_ab .MakeFloat (_babb .Matrix [3]),_ab .MakeFloat (_babb .Matrix [4]),_ab .MakeFloat (_babb .Matrix [5]),_ab .MakeFloat (_babb .Matrix [6]),_ab .MakeFloat (_babb .Matrix [7]),_ab .MakeFloat (_babb .Matrix [8]));
_fegg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_egdgg );};_fdac .Append (_fegg );if _babb ._afffg !=nil {_babb ._afffg .PdfObject =_fdac ;return _babb ._afffg ;};return _fdac ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_bbcdb *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_gceac :=NewPdfOutlineItem ();_gceac .Title =_ab .MakeEncodedString (_bbcdb .Title ,true );_gceac .Dest =_bbcdb .Dest .ToPdfObject ();var _afeaa []*PdfOutlineItem ;var _gfae int64 ;
var _bfcae *PdfOutlineItem ;for _ ,_dcad :=range _bbcdb .Entries {_ecgd ,_cacc :=_dcad .ToPdfOutlineItem ();_ecgd .Parent =&_gceac .PdfOutlineTreeNode ;if _bfcae !=nil {_bfcae .Next =&_ecgd .PdfOutlineTreeNode ;_ecgd .Prev =&_bfcae .PdfOutlineTreeNode ;
};_afeaa =append (_afeaa ,_ecgd );_gfae +=_cacc ;_bfcae =_ecgd ;};_eefeef :=len (_afeaa );_gfae +=int64 (_eefeef );if _eefeef > 0{_gceac .First =&_afeaa [0].PdfOutlineTreeNode ;_gceac .Last =&_afeaa [_eefeef -1].PdfOutlineTreeNode ;_gceac .Count =&_gfae ;
};return _gceac ,_gfae ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_egf :=NewPdfAnnotation ();_geag :=&PdfAnnotationTrapNet {};_geag .PdfAnnotation =_egf ;_egf .SetContext (_geag );return _geag ;};

// AddOutlineTree adds outlines to a PDF file.
func (_facd *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_facd ._ccdcae =outlineTree };

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_gcbe :=NewPdfAnnotation ();_agad :=&PdfAnnotationRichMedia {};_agad .PdfAnnotation =_gcbe ;_gcbe .SetContext (_agad );return _agad ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_adccg pdfFontType0 )GetRuneMetrics (r rune )(_bc .CharMetrics ,bool ){if _adccg .DescendantFont ==nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_adccg );
return _bc .CharMetrics {},false ;};return _adccg .DescendantFont .GetRuneMetrics (r );};

// ValidateSignatures validates digital signatures in the document.
func (_ecbfc *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _ecbfc .AcroForm ==nil {return nil ,nil ;};if _ecbfc .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_caccae *PdfSignature ;
_eeefc *PdfField ;_cccda SignatureHandler ;};var _degaf []*sigFieldPair ;for _ ,_cgdbg :=range _ecbfc .AcroForm .AllFields (){if _cgdbg .V ==nil {continue ;};if _aecad ,_cgdd :=_ab .GetDict (_cgdbg .V );_cgdd {if _ceead ,_eafa :=_ab .GetNameVal (_aecad .Get ("\u0054\u0079\u0070\u0065"));
_eafa &&_ceead =="\u0053\u0069\u0067"{_gaggd ,_cbbfa :=_ab .GetIndirect (_cgdbg .V );if !_cbbfa {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_cabd ,_afcee :=_ecbfc .newPdfSignatureFromIndirect (_gaggd );if _afcee !=nil {return nil ,_afcee ;};var _gagfa SignatureHandler ;for _ ,_eccfa :=range handlers {if _eccfa .IsApplicable (_cabd ){_gagfa =_eccfa ;break ;};};_degaf =append (_degaf ,&sigFieldPair {_caccae :_cabd ,_eeefc :_cgdbg ,_cccda :_gagfa });
};};};var _bbbba []SignatureValidationResult ;for _ ,_bgefc :=range _degaf {_cdebe :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_bgefc ._eeefc }};if _bgefc ._cccda ==nil {_cdebe .Errors =append (_cdebe .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_bbbba =append (_bbbba ,_cdebe );continue ;};_gcgcd ,_fgfgb :=_bgefc ._cccda .NewDigest (_bgefc ._caccae );if _fgfgb !=nil {_cdebe .Errors =append (_cdebe .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_fgfgb .Error ());
_bbbba =append (_bbbba ,_cdebe );continue ;};_egcdd :=_bgefc ._caccae .ByteRange ;if _egcdd ==nil {_cdebe .Errors =append (_cdebe .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_bbbba =append (_bbbba ,_cdebe );
continue ;};for _ecebf :=0;_ecebf < _egcdd .Len ();_ecebf =_ecebf +2{_dgfff ,_ :=_ab .GetNumberAsInt64 (_egcdd .Get (_ecebf ));_fdced ,_ :=_ab .GetIntVal (_egcdd .Get (_ecebf +1));if _ ,_efgdc :=_ecbfc ._ddeee .Seek (_dgfff ,_fb .SeekStart );_efgdc !=nil {return nil ,_efgdc ;
};_fgbg :=make ([]byte ,_fdced );if _ ,_ggeef :=_ecbfc ._ddeee .Read (_fgbg );_ggeef !=nil {return nil ,_ggeef ;};_gcgcd .Write (_fgbg );};_cfbda ,_fgfgb :=_bgefc ._cccda .Validate (_bgefc ._caccae ,_gcgcd );if _fgfgb !=nil {return nil ,_fgfgb ;};_cfbda .Name =_bgefc ._caccae .Name .Decoded ();
_cfbda .Reason =_bgefc ._caccae .Reason .Decoded ();if _bgefc ._caccae .M !=nil {_abccb ,_acggg :=NewPdfDate (_bgefc ._caccae .M .String ());if _acggg !=nil {_cfbda .Errors =append (_cfbda .Errors ,_acggg .Error ());continue ;};_cfbda .Date =_abccb ;};
_cfbda .ContactInfo =_bgefc ._caccae .ContactInfo .Decoded ();_cfbda .Location =_bgefc ._caccae .Location .Decoded ();_cfbda .Fields =_cdebe .Fields ;_bbbba =append (_bbbba ,_cfbda );};return _bbbba ,nil ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_agff :=PdfColorCalRGB {a ,b ,c };return &_agff ;};func (_egfa *pdfFontType0 )subsetRegistered ()error {_eccfg ,_dece :=_egfa .DescendantFont ._cgdec .(*pdfCIDFontType2 );if !_dece {_fa .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_egfa .DescendantFont );
return nil ;};if _eccfg ==nil {return nil ;};if _eccfg ._dfaf ==nil {_fa .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _egfa ._fdbf ==nil {_fa .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_agdf ,_dece :=_ab .GetStream (_eccfg ._dfaf .FontFile2 );if !_dece {_fa .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _ca .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cbgbg ,_ggfeg :=_ab .DecodeStream (_agdf );if _ggfeg !=nil {_fa .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_ggfeg );
return _ggfeg ;};_fadf ,_ggfeg :=_gb .Parse (_ffc .NewReader (_cbgbg ));if _ggfeg !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_agdf .Stream ));
return _ggfeg ;};var _eaef []rune ;var _ccfe *_gb .Font ;switch _agcg :=_egfa ._fdbf .(type ){case *_dc .TrueTypeFontEncoder :_eaef =_agcg .RegisteredRunes ();_ccfe ,_ggfeg =_fadf .SubsetKeepRunes (_eaef );if _ggfeg !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggfeg );
return _ggfeg ;};_agcg .SubsetRegistered ();case *_dc .IdentityEncoder :_eaef =_agcg .RegisteredRunes ();_agae :=make ([]_gb .GlyphIndex ,len (_eaef ));for _eaace ,_fbbe :=range _eaef {_agae [_eaace ]=_gb .GlyphIndex (_fbbe );};_ccfe ,_ggfeg =_fadf .SubsetKeepIndices (_agae );
if _ggfeg !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggfeg );return _ggfeg ;};case _dc .SimpleEncoder :_ddaea :=_agcg .Charcodes ();for _ ,_begga :=range _ddaea {_fdceg ,_ccgga :=_agcg .CharcodeToRune (_begga );if !_ccgga {_fa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_begga );
continue ;};_eaef =append (_eaef ,_fdceg );};default:return _f .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_egfa ._fdbf );
};var _gbgcc _ffc .Buffer ;_ggfeg =_ccfe .Write (&_gbgcc );if _ggfeg !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggfeg );return _ggfeg ;};if _egfa ._eefee !=nil {_bcdc :=make (map[_egc .CharCode ]rune ,len (_eaef ));for _ ,_ebee :=range _eaef {_cegae ,_fgdd :=_egfa ._fdbf .RuneToCharcode (_ebee );
if !_fgdd {continue ;};_bcdc [_egc .CharCode (_cegae )]=_ebee ;};_egfa ._eefee =_egc .NewToUnicodeCMap (_bcdc );};_agdf ,_ggfeg =_ab .MakeStream (_gbgcc .Bytes (),_ab .NewFlateEncoder ());if _ggfeg !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggfeg );
return _ggfeg ;};_agdf .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ab .MakeInteger (int64 (_gbgcc .Len ())));if _abaa ,_bdbb :=_ab .GetStream (_eccfg ._dfaf .FontFile2 );_bdbb {*_abaa =*_agdf ;}else {_eccfg ._dfaf .FontFile2 =_agdf ;};_fcgdc :=_cgaa ();
if len (_egfa ._egceb )> 0{_egfa ._egceb =_bgbef (_egfa ._egceb ,_fcgdc );};if len (_eccfg ._egceb )> 0{_eccfg ._egceb =_bgbef (_eccfg ._egceb ,_fcgdc );};if len (_egfa ._cgea )> 0{_egfa ._cgea =_bgbef (_egfa ._cgea ,_fcgdc );};if _eccfg ._dfaf !=nil {_ggcd ,_fdfa :=_ab .GetName (_eccfg ._dfaf .FontName );
if _fdfa &&len (_ggcd .String ())> 0{_bdfec :=_bgbef (_ggcd .String (),_fcgdc );_eccfg ._dfaf .FontName =_ab .MakeName (_bdfec );};};return nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _ab .PdfObject )(PdfColorspace ,error ){var _bgea *_ab .PdfIndirectObject ;var _bdaf *_ab .PdfObjectName ;var _bgaaf *_ab .PdfObjectArray ;if _dfbg ,_cgfff :=obj .(*_ab .PdfIndirectObject );_cgfff {_bgea =_dfbg ;
};obj =_ab .TraceToDirectObject (obj );switch _cacd :=obj .(type ){case *_ab .PdfObjectArray :_bgaaf =_cacd ;case *_ab .PdfObjectName :_bdaf =_cacd ;};if _bdaf !=nil {switch *_bdaf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_fa .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_bdaf );return nil ,_deea ;};};if _bgaaf !=nil &&_bgaaf .Len ()> 0{var _afbb _ab .PdfObject =_bgea ;
if _bgea ==nil {_afbb =_bgaaf ;};if _ebdf ,_faee :=_ab .GetName (_bgaaf .Get (0));_faee {switch _ebdf .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _bgaaf .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _bgaaf .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _bgaaf .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _gdga (_afbb );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _acdad (_afbb );
case "\u004c\u0061\u0062":return _agcc (_afbb );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _agac (_afbb );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _dgfe (_afbb );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _gbdff (_afbb );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _dbde (_afbb );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _eaac (_afbb );default:_fa .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_ebdf );
};};};_fa .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_fcf :=NewPdfAnnotation ();_ffee :=&PdfAnnotation3D {};_ffee .PdfAnnotation =_fcf ;_fcf .SetContext (_ffee );return _ffee ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _ab .PdfObject )(*PdfInfo ,error ){var _cbgg PdfInfo ;_ebfa ,_egce :=obj .(*_ab .PdfObjectDictionary );if !_egce {return nil ,_f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_cgad :=range _ebfa .Keys (){switch _cgad {case "\u0054\u0069\u0074l\u0065":_cbgg .Title ,_ =_ab .GetString (_ebfa .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_cbgg .Author ,_ =_ab .GetString (_ebfa .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_cbgg .Subject ,_ =_ab .GetString (_ebfa .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_cbgg .Keywords ,_ =_ab .GetString (_ebfa .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_cbgg .Creator ,_ =_ab .GetString (_ebfa .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_cbgg .Producer ,_ =_ab .GetString (_ebfa .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_cbgg .Trapped ,_ =_ab .GetName (_ebfa .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _dabd ,_bddc :=_ab .GetString (_ebfa .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_bddc &&_dabd .String ()!=""{_cadb ,_bgff :=NewPdfDate (_dabd .String ());if _bgff !=nil {return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_bgff );
};_cbgg .CreationDate =&_cadb ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _eefc ,_bfda :=_ab .GetString (_ebfa .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_bfda &&_eefc .String ()!=""{_ecda ,_bbfc :=NewPdfDate (_eefc .String ());if _bbfc !=nil {return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_bbfc );
};_cbgg .ModifiedDate =&_ecda ;};default:_ddge ,_ :=_ab .GetString (_ebfa .Get (_cgad ));if _cbgg ._addfd ==nil {_cbgg ._addfd =_ab .MakeDict ();};_cbgg ._addfd .Set (_cgad ,_ddge );};};return &_cbgg ,nil ;};func (_ebggg *PdfReader )loadDSS ()(*DSS ,error ){if _ebggg ._gcabf .GetCrypter ()!=nil &&!_ebggg ._gcabf .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cdfaf :=_ebggg ._bgffe .Get ("\u0044\u0053\u0053");if _cdfaf ==nil {return nil ,nil ;};_gcbgf ,_ :=_ab .GetIndirect (_cdfaf );_cdfaf =_ab .TraceToDirectObject (_cdfaf );switch _bffd :=_cdfaf .(type ){case *_ab .PdfObjectNull :return nil ,nil ;case *_ab .PdfObjectDictionary :return _dcfb (_gcbgf ,_bffd );
};return nil ,_f .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_cdfaf );};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _fb .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _eefaf ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _eagcc (rs ,opts ,true ,_eefaf );
};func _cccb (_geced _ab .PdfObject )(*PdfPattern ,error ){_gfgbb :=&PdfPattern {};var _dgbfa *_ab .PdfObjectDictionary ;if _eeccb ,_cgga :=_ab .GetIndirect (_geced );_cgga {_gfgbb ._cafaf =_eeccb ;_bdaecf ,_geaccf :=_eeccb .PdfObject .(*_ab .PdfObjectDictionary );
if !_geaccf {_fa .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_eeccb .PdfObject );
return nil ,_ab .ErrTypeError ;};_dgbfa =_bdaecf ;}else if _fadce ,_fbggg :=_ab .GetStream (_geced );_fbggg {_gfgbb ._cafaf =_fadce ;_dgbfa =_fadce .PdfObjectDictionary ;}else {_fa .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_geced );
return nil ,_ab .ErrTypeError ;};_cgefb :=_dgbfa .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _cgefb ==nil {_fa .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eeccbb ,_gggg :=_cgefb .(*_ab .PdfObjectInteger );if !_gggg {_fa .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cgefb );
return nil ,_ab .ErrTypeError ;};if *_eeccbb !=1&&*_eeccbb !=2{_fa .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_eeccbb );return nil ,_ab .ErrRangeError ;
};_gfgbb .PatternType =int64 (*_eeccbb );switch *_eeccbb {case 1:_aefdc ,_afgdd :=_efgcb (_dgbfa );if _afgdd !=nil {return nil ,_afgdd ;};_aefdc .PdfPattern =_gfgbb ;_gfgbb ._dgbge =_aefdc ;return _gfgbb ,nil ;case 2:_dfdbf ,_gdagbe :=_bcbg (_dgbfa );if _gdagbe !=nil {return nil ,_gdagbe ;
};_dfdbf .PdfPattern =_gfgbb ;_gfgbb ._dgbge =_dfdbf ;return _gfgbb ,nil ;};return nil ,_ca .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};func _agcc (_agfd _ab .PdfObject )(*PdfColorspaceLab ,error ){_ccbc :=NewPdfColorspaceLab ();
if _afae ,_ebde :=_agfd .(*_ab .PdfIndirectObject );_ebde {_ccbc ._aaeb =_afae ;};_agfd =_ab .TraceToDirectObject (_agfd );_afag ,_afce :=_agfd .(*_ab .PdfObjectArray );if !_afce {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _afag .Len ()!=2{return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_agfd =_ab .TraceToDirectObject (_afag .Get (0));_ecge ,_afce :=_agfd .(*_ab .PdfObjectName );
if !_afce {return nil ,_f .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_ecge !="\u004c\u0061\u0062"{return nil ,_f .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");
};_agfd =_ab .TraceToDirectObject (_afag .Get (1));_afacg ,_afce :=_agfd .(*_ab .PdfObjectDictionary );if !_afce {return nil ,_f .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");
};_agfd =_afacg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_agfd =_ab .TraceToDirectObject (_agfd );_gdba ,_afce :=_agfd .(*_ab .PdfObjectArray );if !_afce {return nil ,_f .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _gdba .Len ()!=3{return nil ,_f .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_bcab ,_caac :=_gdba .GetAsFloat64Slice ();
if _caac !=nil {return nil ,_caac ;};_ccbc .WhitePoint =_bcab ;_agfd =_afacg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _agfd !=nil {_agfd =_ab .TraceToDirectObject (_agfd );_dafb ,_dcfcg :=_agfd .(*_ab .PdfObjectArray );if !_dcfcg {return nil ,_f .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");
};if _dafb .Len ()!=3{return nil ,_f .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_efcc ,_aedc :=_dafb .GetAsFloat64Slice ();
if _aedc !=nil {return nil ,_aedc ;};_ccbc .BlackPoint =_efcc ;};_agfd =_afacg .Get ("\u0052\u0061\u006eg\u0065");if _agfd !=nil {_agfd =_ab .TraceToDirectObject (_agfd );_bfabe ,_fcdfc :=_agfd .(*_ab .PdfObjectArray );if !_fcdfc {_fa .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
return nil ,_f .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bfabe .Len ()!=4{_fa .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_f .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_effg ,_ecbaa :=_bfabe .GetAsFloat64Slice ();if _ecbaa !=nil {return nil ,_ecbaa ;};_ccbc .Range =_effg ;};return _ccbc ,nil ;};

// WriteToFile writes the Appender output to file specified by path.
func (_dbeg *PdfAppender )WriteToFile (outputPath string )error {_abcf ,_dfgd :=_ac .Create (outputPath );if _dfgd !=nil {return _dfgd ;};defer _abcf .Close ();return _dbeg .Write (_abcf );};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_ffage *Outline )ToPdfOutline ()*PdfOutline {_fegfg :=NewPdfOutline ();var _beaf []*PdfOutlineItem ;var _ccfgg int64 ;var _ebcf *PdfOutlineItem ;for _ ,_aeed :=range _ffage .Entries {_baede ,_gfcc :=_aeed .ToPdfOutlineItem ();_baede .Parent =&_fegfg .PdfOutlineTreeNode ;
if _ebcf !=nil {_ebcf .Next =&_baede .PdfOutlineTreeNode ;_baede .Prev =&_ebcf .PdfOutlineTreeNode ;};_beaf =append (_beaf ,_baede );_ccfgg +=_gfcc ;_ebcf =_baede ;};_ddfdd :=int64 (len (_beaf ));_ccfgg +=_ddfdd ;if _ddfdd > 0{_fegfg .First =&_beaf [0].PdfOutlineTreeNode ;
_fegfg .Last =&_beaf [_ddfdd -1].PdfOutlineTreeNode ;_fegfg .Count =&_ccfgg ;};return _fegfg ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_acgf _ab .PdfObject ;};

// Encoder returns the font's text encoder.
func (_gbfa pdfCIDFontType0 )Encoder ()_dc .TextEncoder {return _gbfa ._dbecc };func _gfgae (_dfead string )(string ,error ){var _dfgcc _ffc .Buffer ;_dfgcc .WriteString (_dfead );_dfggg :=make ([]byte ,8+16);_adfcge :=_bg .Now ().UTC ().UnixNano ();_ff .BigEndian .PutUint64 (_dfggg ,uint64 (_adfcge ));
_ ,_caccg :=_eg .Read (_dfggg [8:]);if _caccg !=nil {return "",_caccg ;};_dfgcc .WriteString (_g .EncodeToString (_dfggg ));return _dfgcc .String (),nil ;};

// SetOCProperties sets the optional content properties.
func (_fagagb *PdfWriter )SetOCProperties (ocProperties _ab .PdfObject )error {_fgece :=_fagagb ._cbfaag ;if ocProperties !=nil {_fa .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_fgece .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _fagagb .addObjects (ocProperties );};return nil ;};func (_cacg *PdfAppender )addNewObject (_cdcdc _ab .PdfObject ){if _ ,_bggb :=_cacg ._ggc [_cdcdc ];
!_bggb {_cacg ._fbbdd =append (_cacg ._fbbdd ,_cdcdc );_cacg ._ggc [_cdcdc ]=struct{}{};};};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_debd *PdfPage )error ;};func _abffe (_dabc _bc .StdFont )pdfFontSimple {_bddd :=_dabc .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_gcab :"\u0054\u0079\u0070e\u0031",_egceb :_dabc .Name ()},_accf :_dabc .GetMetricsTable (),_dfbb :&PdfFontDescriptor {FontName :_ab .MakeName (string (_bddd .Name )),FontFamily :_ab .MakeName (_bddd .Family ),FontWeight :_ab .MakeFloat (float64 (_bddd .Weight )),Flags :_ab .MakeInteger (int64 (_bddd .Flags )),FontBBox :_ab .MakeArrayFromFloats (_bddd .BBox [:]),ItalicAngle :_ab .MakeFloat (_bddd .ItalicAngle ),Ascent :_ab .MakeFloat (_bddd .Ascent ),Descent :_ab .MakeFloat (_bddd .Descent ),CapHeight :_ab .MakeFloat (_bddd .CapHeight ),XHeight :_ab .MakeFloat (_bddd .XHeight ),StemV :_ab .MakeFloat (_bddd .StemV ),StemH :_ab .MakeFloat (_bddd .StemH )},_facc :_dabc .Encoder ()};
};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// MergePageWith appends page content to source Pdf file page content.
func (_gfdd *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_bcedf :=pageNum -1;var _bdea *PdfPage ;for _adeg ,_edga :=range _gfdd ._abed {if _adeg ==_bcedf {_bdea =_edga ;};};if _bdea ==nil {return _f .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _bdea ._agafe !=nil &&_bdea ._agafe .GetParser ()==_gfdd ._egeg ._gcabf {_bdea =_bdea .Duplicate ();_gfdd ._abed [_bcedf ]=_bdea ;};page =page .Duplicate ();_cgccg (page );_ccdb :=_afab (_bdea );_cdaf :=_afab (page );_gddd :=make (map[_ab .PdfObjectName ]_ab .PdfObjectName );
for _cgbd :=range _cdaf {if _ ,_cacf :=_ccdb [_cgbd ];_cacf {for _bcdb :=1;true ;_bcdb ++{_agaa :=_ab .PdfObjectName (string (_cgbd )+_fcg .Itoa (_bcdb ));if _ ,_gbeg :=_ccdb [_agaa ];!_gbeg {_gddd [_cgbd ]=_agaa ;break ;};};};};_beeed ,_cgdf :=page .GetContentStreams ();
if _cgdf !=nil {return _cgdf ;};_abgb ,_cgdf :=_bdea .GetContentStreams ();if _cgdf !=nil {return _cgdf ;};for _gdae ,_edgba :=range _beeed {for _gfca ,_fdceb :=range _gddd {_edgba =_af .Replace (_edgba ,"\u002f"+string (_gfca ),"\u002f"+string (_fdceb ),-1);
};_beeed [_gdae ]=_edgba ;};_abgb =append (_abgb ,_beeed ...);if _bgbb :=_bdea .SetContentStreams (_abgb ,_ab .NewFlateEncoder ());_bgbb !=nil {return _bgbb ;};_bdea ._adccb =append (_bdea ._adccb ,page ._adccb ...);if _bdea .Resources ==nil {_bdea .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_bdea .Resources .Font =_gfdd .mergeResources (_bdea .Resources .Font ,page .Resources .Font ,_gddd );_bdea .Resources .XObject =_gfdd .mergeResources (_bdea .Resources .XObject ,page .Resources .XObject ,_gddd );_bdea .Resources .Properties =_gfdd .mergeResources (_bdea .Resources .Properties ,page .Resources .Properties ,_gddd );
if _bdea .Resources .ProcSet ==nil {_bdea .Resources .ProcSet =page .Resources .ProcSet ;};_bdea .Resources .Shading =_gfdd .mergeResources (_bdea .Resources .Shading ,page .Resources .Shading ,_gddd );_bdea .Resources .ExtGState =_gfdd .mergeResources (_bdea .Resources .ExtGState ,page .Resources .ExtGState ,_gddd );
};_ecfd ,_cgdf :=_bdea .GetMediaBox ();if _cgdf !=nil {return _cgdf ;};_aggc ,_cgdf :=page .GetMediaBox ();if _cgdf !=nil {return _cgdf ;};var _addf bool ;if _ecfd .Llx > _aggc .Llx {_ecfd .Llx =_aggc .Llx ;_addf =true ;};if _ecfd .Lly > _aggc .Lly {_ecfd .Lly =_aggc .Lly ;
_addf =true ;};if _ecfd .Urx < _aggc .Urx {_ecfd .Urx =_aggc .Urx ;_addf =true ;};if _ecfd .Ury < _aggc .Ury {_ecfd .Ury =_aggc .Ury ;_addf =true ;};if _addf {_bdea .MediaBox =_ecfd ;};return nil ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_fbgcb *LTV )EnableChain (chain []*_bgc .Certificate )error {return _fbgcb .enable (nil ,chain ,"")};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_eea :=NewPdfAnnotation ();_dde :=&PdfAnnotationFreeText {};_dde .PdfAnnotation =_eea ;_dde .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eea .SetContext (_dde );return _dde ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_aaeef *pdfCIDFontType2 )ToPdfObject ()_ab .PdfObject {if _aaeef ._ecgf ==nil {_aaeef ._ecgf =&_ab .PdfIndirectObject {};};_abadf :=_aaeef .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_aaeef ._ecgf .PdfObject =_abadf ;if _aaeef .CIDSystemInfo !=nil {_abadf .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_aaeef .CIDSystemInfo );};if _aaeef .DW !=nil {_abadf .Set ("\u0044\u0057",_aaeef .DW );};if _aaeef .DW2 !=nil {_abadf .Set ("\u0044\u0057\u0032",_aaeef .DW2 );
};if _aaeef .W !=nil {_abadf .Set ("\u0057",_aaeef .W );};if _aaeef .W2 !=nil {_abadf .Set ("\u0057\u0032",_aaeef .W2 );};if _aaeef .CIDToGIDMap !=nil {_abadf .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_aaeef .CIDToGIDMap );};
return _aaeef ._ecgf ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_daf :=NewPdfAnnotation ();_bbaf :=&PdfAnnotationSquare {};_bbaf .PdfAnnotation =_daf ;_bbaf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_daf .SetContext (_bbaf );return _bbaf ;};func (_fegf *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _aabcgd :=_fegf ._dfaf ;
_aabcgd !=nil {return _aabcgd ;};return _fegf ._dfbb ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _ab .PdfObject ;BS _ab .PdfObject ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_fedfc *PdfPageResources )HasColorspaceByName (keyName _ab .PdfObjectName )bool {_ebadb ,_gcage :=_fedfc .GetColorspaces ();if _gcage !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gcage );
return false ;};if _ebadb ==nil {return false ;};_ ,_bfffb :=_ebadb .Colorspaces [string (keyName )];return _bfffb ;};

// ReplacePage replaces the original page to a new page.
func (_dfa *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_eecf :=pageNum -1;for _afff :=range _dfa ._abed {if _afff ==_eecf {_gee :=page .Duplicate ();_cgccg (_gee );_dfa ._abed [_afff ]=_gee ;};};};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _ab .PdfObject ;};func (_bdf *PdfReader )newPdfActionResetFormFromDict (_bfa *_ab .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_bfa .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_bfa .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};func _bgbec (_abfbb *_cac .ImageBase )(_bbgbe Image ){_bbgbe .Width =int64 (_abfbb .Width );_bbgbe .Height =int64 (_abfbb .Height );_bbgbe .BitsPerComponent =int64 (_abfbb .BitsPerComponent );_bbgbe .ColorComponents =_abfbb .ColorComponents ;_bbgbe .Data =_abfbb .Data ;
_bbgbe ._aaefg =_abfbb .Decode ;_bbgbe ._dbdfad =_abfbb .Alpha ;return _bbgbe ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_eaag *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_gfdgc :map[_ab .PdfObject ]struct{}{},_ebda :_caeea (),_gcabf :_ab .NewParserFromString (txt )};};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _fb .ReadSeeker )(*PdfFont ,error ){_aedg ,_bcfff :=_fd .ReadAll (r );if _bcfff !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bcfff );
return nil ,_bcfff ;};_daac ,_bcfff :=_bc .TtfParse (_ffc .NewReader (_aedg ));if _bcfff !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_bcfff );
return nil ,_bcfff ;};_gced :=&pdfCIDFontType2 {fontCommon :fontCommon {_gcab :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_ab .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_daac .Widths )<=0{return nil ,_ca .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_gecf :=1000.0/float64 (_daac .UnitsPerEm );_ddga :=_gecf *float64 (_daac .Widths [0]);_ggae :=make (map[rune ]int );_eaggb :=make (map[_bc .GID ]int );_afgc :=_bc .GID (len (_daac .Widths ));for _aabcg ,_eabd :=range _daac .Chars {if _eabd > _afgc -1{continue ;
};_fggfb :=int (_gecf *float64 (_daac .Widths [_eabd ]));_ggae [_aabcg ]=_fggfb ;_eaggb [_eabd ]=_fggfb ;};_gced ._aacec =_ggae ;_gced .DW =_ab .MakeInteger (int64 (_ddga ));_egea :=_fcbad (_eaggb ,uint16 (_afgc ));_gced .W =_ab .MakeIndirectObject (_egea );
_feba :=_ab .MakeDict ();_feba .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_ab .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_feba .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_ab .MakeString ("\u0041\u0064\u006fb\u0065"));
_feba .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_ab .MakeInteger (0));_gced .CIDSystemInfo =_feba ;_cfebe :=&PdfFontDescriptor {FontName :_ab .MakeName (_daac .PostScriptName ),Ascent :_ab .MakeFloat (_gecf *float64 (_daac .TypoAscender )),Descent :_ab .MakeFloat (_gecf *float64 (_daac .TypoDescender )),CapHeight :_ab .MakeFloat (_gecf *float64 (_daac .CapHeight )),FontBBox :_ab .MakeArrayFromFloats ([]float64 {_gecf *float64 (_daac .Xmin ),_gecf *float64 (_daac .Ymin ),_gecf *float64 (_daac .Xmax ),_gecf *float64 (_daac .Ymax )}),ItalicAngle :_ab .MakeFloat (_daac .ItalicAngle ),MissingWidth :_ab .MakeFloat (_ddga )};
_cffc ,_bcfff :=_ab .MakeStream (_aedg ,_ab .NewFlateEncoder ());if _bcfff !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_bcfff );
return nil ,_bcfff ;};_cffc .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ab .MakeInteger (int64 (len (_aedg ))));_cfebe .FontFile2 =_cffc ;if _daac .Bold {_cfebe .StemV =_ab .MakeInteger (120);}else {_cfebe .StemV =_ab .MakeInteger (70);
};_gefffe :=_dcfbe ;if _daac .IsFixedPitch {_gefffe |=_abdd ;};if _daac .ItalicAngle !=0{_gefffe |=_ecbba ;};_cfebe .Flags =_ab .MakeInteger (int64 (_gefffe ));_gced ._egceb =_daac .PostScriptName ;_gced ._dfaf =_cfebe ;_gffge :=pdfFontType0 {fontCommon :fontCommon {_gcab :"\u0054\u0079\u0070e\u0030",_egceb :_daac .PostScriptName },DescendantFont :&PdfFont {_cgdec :_gced },Encoding :_ab .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_fdbf :_daac .NewEncoder ()};
if len (_daac .Chars )> 0{_gefca :=make (map[_egc .CharCode ]rune ,len (_daac .Chars ));for _gfgec ,_efccc :=range _daac .Chars {_cfbd :=_egc .CharCode (_efccc );if _eege ,_eggfc :=_gefca [_cfbd ];!_eggfc ||(_eggfc &&_eege > _gfgec ){_gefca [_cfbd ]=_gfgec ;
};};_gffge ._eefee =_egc .NewToUnicodeCMap (_gefca );};_agaag :=PdfFont {_cgdec :&_gffge };return &_agaag ,nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_abaf *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _abaf .MediaBox !=nil {return _abaf .MediaBox ,nil ;};_eceb :=_abaf .Parent ;for _eceb !=nil {_cfab ,_dgdge :=_ab .GetDict (_eceb );if !_dgdge {return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _adagf :=_cfab .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_adagf !=nil {_gdbdd ,_fddad :=_ab .GetArray (_adagf );if !_fddad {return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_bgee ,_bdcdf :=NewPdfRectangle (*_gdbdd );if _bdcdf !=nil {return nil ,_bdcdf ;};return _bgee ,nil ;};_eceb =_cfab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ca .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_gaffab *PdfWriter )SetNamedDestinations (dests _ab .PdfObject )error {if dests ==nil {return nil ;};_fa .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_gaffab ._cbfaag .Set ("\u0044\u0065\u0073t\u0073",dests );return _gaffab .addObjects (dests );};func (_cdea *PdfReader )newPdfAnnotationFileAttachmentFromDict (_acgc *_ab .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_aadd :=PdfAnnotationFileAttachment {};
_fcac ,_fac :=_cdea .newPdfAnnotationMarkupFromDict (_acgc );if _fac !=nil {return nil ,_fac ;};_aadd .PdfAnnotationMarkup =_fcac ;_aadd .FS =_acgc .Get ("\u0046\u0053");_aadd .Name =_acgc .Get ("\u004e\u0061\u006d\u0065");return &_aadd ,nil ;};func _fcbad (_cebeb map[_bc .GID ]int ,_fdbc uint16 )*_ab .PdfObjectArray {_edbgd :=&_ab .PdfObjectArray {};
_gdbdg :=_bc .GID (_fdbc );for _ecca :=_bc .GID (0);_ecca < _gdbdg ;{_gagfc ,_gbbcb :=_cebeb [_ecca ];if !_gbbcb {_ecca ++;continue ;};_gbdg :=_ecca ;for _efgbb :=_gbdg +1;_efgbb < _gdbdg ;_efgbb ++{if _fbgac ,_bfge :=_cebeb [_efgbb ];!_bfge ||_gagfc !=_fbgac {break ;
};_gbdg =_efgbb ;};_edbgd .Append (_ab .MakeInteger (int64 (_ecca )));_edbgd .Append (_ab .MakeInteger (int64 (_gbdg )));_edbgd .Append (_ab .MakeInteger (int64 (_gagfc )));_ecca =_gbdg +1;};return _edbgd ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_bbgff pdfCIDFontType0 )GetCharMetrics (code _dc .CharCode )(_bc .CharMetrics ,bool ){_gcea :=_bbgff ._dcgcd ;if _gefeb ,_cgeb :=_bbgff ._edbd [code ];_cgeb {_gcea =_gefeb ;};return _bc .CharMetrics {Wx :_gcea },true ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_accae *PdfFont )CharcodesToUnicode (charcodes []_dc .CharCode )[]rune {_fgba ,_ ,_ :=_accae .CharcodesToUnicodeWithStats (charcodes );return _fgba ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ecbde pdfCIDFontType2 )GetRuneMetrics (r rune )(_bc .CharMetrics ,bool ){_gbfga ,_ggfc :=_ecbde ._aacec [r ];if !_ggfc {_fggeb ,_cgge :=_ab .GetInt (_ecbde .DW );if !_cgge {return _bc .CharMetrics {},false ;};_gbfga =int (*_fggeb );};return _bc .CharMetrics {Wx :float64 (_gbfga )},true ;
};

// String returns a string representation of the field.
func (_ecea *PdfField )String ()string {if _gbbda ,_fdfc :=_ecea .ToPdfObject ().(*_ab .PdfIndirectObject );_fdfc {return _f .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ecea ._ggfg ,_gbbda .PdfObject .String ());};return "";};var _ _ab .PdfObject =&pdfSignDictionary {};
func (_fggd *DSS )add (_beef *[]*_ab .PdfObjectStream ,_fedff map[string ]*_ab .PdfObjectStream ,_dcgd [][]byte )([]*_ab .PdfObjectStream ,error ){_dggbg :=make ([]*_ab .PdfObjectStream ,0,len (_dcgd ));for _ ,_agabb :=range _dcgd {_fdgbd ,_edeb :=_aegef (_agabb );
if _edeb !=nil {return nil ,_edeb ;};_fbgg ,_edbg :=_fedff [string (_fdgbd )];if !_edbg {_fbgg ,_edeb =_ab .MakeStream (_agabb ,_ab .NewRawEncoder ());if _edeb !=nil {return nil ,_edeb ;};_fedff [string (_fdgbd )]=_fbgg ;*_beef =append (*_beef ,_fbgg );
};_dggbg =append (_dggbg ,_fbgg );};return _dggbg ,nil ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_cacad *PdfPageResources )GetContainingPdfObject ()_ab .PdfObject {return _cacad ._edege };

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_ab .PdfObjectStream )(*XObjectForm ,error ){_ccgce :=&XObjectForm {};_ccgce ._bedc =stream ;_adfad :=*(stream .PdfObjectDictionary );_cabgg ,_bgfaf :=_ab .NewEncoderFromStream (stream );if _bgfaf !=nil {return nil ,_bgfaf ;
};_ccgce .Filter =_cabgg ;if _eeee :=_adfad .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_eeee !=nil {_fabbba ,_gccfc :=_eeee .(*_ab .PdfObjectName );if !_gccfc {return nil ,_ca .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};
if *_fabbba !="\u0046\u006f\u0072\u006d"{_fa .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ca .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _gcge :=_adfad .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_gcge !=nil {_ccgce .FormType =_gcge ;};if _adaaf :=_adfad .Get ("\u0042\u0042\u006f\u0078");_adaaf !=nil {_ccgce .BBox =_adaaf ;};if _gdcdb :=_adfad .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_gdcdb !=nil {_ccgce .Matrix =_gdcdb ;};if _ceaae :=_adfad .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ceaae !=nil {_ceaae =_ab .TraceToDirectObject (_ceaae );_ggceg ,_ggbbb :=_ceaae .(*_ab .PdfObjectDictionary );if !_ggbbb {_fa .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ab .ErrTypeError ;};_ebfd ,_cbeba :=NewPdfPageResourcesFromDict (_ggceg );if _cbeba !=nil {_fa .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_cbeba ;};_ccgce .Resources =_ebfd ;_fa .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_ccgce .Resources );};_ccgce .Group =_adfad .Get ("\u0047\u0072\u006fu\u0070");_ccgce .Ref =_adfad .Get ("\u0052\u0065\u0066");
_ccgce .MetaData =_adfad .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_ccgce .PieceInfo =_adfad .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ccgce .LastModified =_adfad .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_ccgce .StructParent =_adfad .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ccgce .StructParents =_adfad .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_ccgce .OPI =_adfad .Get ("\u004f\u0050\u0049");
_ccgce .OC =_adfad .Get ("\u004f\u0043");_ccgce .Name =_adfad .Get ("\u004e\u0061\u006d\u0065");_ccgce .Stream =stream .Stream ;return _ccgce ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_bbgc *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_ab .PdfObject )(PdfColor ,error ){if _bbgc .Alternate ==nil {if _bbgc .N ==1{_debe :=NewPdfColorspaceDeviceGray ();return _debe .ColorFromPdfObjects (objects );}else if _bbgc .N ==3{_bgfda :=NewPdfColorspaceDeviceRGB ();
return _bgfda .ColorFromPdfObjects (objects );}else if _bbgc .N ==4{_ecefd :=NewPdfColorspaceDeviceCMYK ();return _ecefd .ColorFromPdfObjects (objects );}else {return nil ,_ca .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _bbgc .Alternate .ColorFromPdfObjects (objects );};func (_ffeaf *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _ffeaf ._gcabf .GetCrypter ()!=nil &&!_ffeaf ._gcabf .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gcfac :=_ffeaf ._bgffe ;_bdba :=_gcfac .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _bdba ==nil {return nil ,nil ;};_bgcag ,_ :=_ab .GetIndirect (_bdba );_bdba =_ab .TraceToDirectObject (_bdba );if _ab .IsNullObject (_bdba ){_fa .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_gafgdf ,_gcbbe :=_ab .GetDict (_bdba );if !_gcbbe {_fa .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_bdba );_fa .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_bdba );};_fa .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_fa .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_ffeaf ._ccbag {_ggadg :=_ffeaf .traverseObjectData (_gafgdf );
if _ggadg !=nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_ggadg );
return nil ,_ggadg ;};};_ecec ,_bbeac :=_ffeaf .newPdfAcroFormFromDict (_bgcag ,_gafgdf );if _bbeac !=nil {return nil ,_bbeac ;};return _ecec ,nil ;};var _ pdfFont =(*pdfFontSimple )(nil );func (_fddbfd *PdfReader )newPdfPageFromDict (_fcffb *_ab .PdfObjectDictionary )(*PdfPage ,error ){_cgef :=NewPdfPage ();
_cgef ._bedg =_fcffb ;_abgg :=*_fcffb ;_aceba ,_gfadfg :=_abgg .Get ("\u0054\u0079\u0070\u0065").(*_ab .PdfObjectName );if !_gfadfg {return nil ,_ca .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_aceba !="\u0050\u0061\u0067\u0065"{return nil ,_ca .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _gacfc :=_abgg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_gacfc !=nil {_cgef .Parent =_gacfc ;};if _ddfdf :=_abgg .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_ddfdf !=nil {_bdgdc ,_eacab :=_ab .GetString (_ddfdf );if !_eacab {return nil ,_ca .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_dcdc ,_dfac :=NewPdfDate (_bdgdc .Str ());if _dfac !=nil {return nil ,_dfac ;};_cgef .LastModified =&_dcdc ;};if _bdeb :=_abgg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bdeb !=nil &&!_ab .IsNullObject (_bdeb ){_gebag ,_bcbf :=_ab .GetDict (_bdeb );
if !_bcbf {return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bdeb );};var _dcecc error ;_cgef .Resources ,_dcecc =NewPdfPageResourcesFromDict (_gebag );
if _dcecc !=nil {return nil ,_dcecc ;};}else {_eaddd ,_bdcca :=_cgef .getParentResources ();if _bdcca !=nil {return nil ,_bdcca ;};if _eaddd ==nil {_eaddd =NewPdfPageResources ();};_cgef .Resources =_eaddd ;};if _cbfe :=_abgg .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_cbfe !=nil {_dgccg ,_fddga :=_ab .GetArray (_cbfe );if !_fddga {return nil ,_ca .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _eagaf error ;
_cgef .MediaBox ,_eagaf =NewPdfRectangle (*_dgccg );if _eagaf !=nil {return nil ,_eagaf ;};};if _dabcf :=_abgg .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_dabcf !=nil {_geage ,_dbbdd :=_ab .GetArray (_dabcf );if !_dbbdd {return nil ,_ca .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _fdff error ;_cgef .CropBox ,_fdff =NewPdfRectangle (*_geage );if _fdff !=nil {return nil ,_fdff ;};};if _fdgdb :=_abgg .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_fdgdb !=nil {_ddeaa ,_gedfe :=_ab .GetArray (_fdgdb );if !_gedfe {return nil ,_ca .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _ggaab error ;_cgef .BleedBox ,_ggaab =NewPdfRectangle (*_ddeaa );if _ggaab !=nil {return nil ,_ggaab ;};};if _gcfd :=_abgg .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_gcfd !=nil {_ebeeb ,_dfceg :=_ab .GetArray (_gcfd );if !_dfceg {return nil ,_ca .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _gdgff error ;_cgef .TrimBox ,_gdgff =NewPdfRectangle (*_ebeeb );if _gdgff !=nil {return nil ,_gdgff ;};};if _gdafe :=_abgg .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_gdafe !=nil {_bdede ,_gaaac :=_ab .GetArray (_gdafe );if !_gaaac {return nil ,_ca .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _cgaddg error ;_cgef .ArtBox ,_cgaddg =NewPdfRectangle (*_bdede );if _cgaddg !=nil {return nil ,_cgaddg ;};};if _fbdaf :=_abgg .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_fbdaf !=nil {_cgef .BoxColorInfo =_fbdaf ;
};if _bffce :=_abgg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bffce !=nil {_cgef .Contents =_bffce ;};if _bedd :=_abgg .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_bedd !=nil {_fbgee ,_afbaa :=_ab .GetInt (_bedd );if !_afbaa {return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_ddda :=int64 (*_fbgee );_cgef .Rotate =&_ddda ;};if _aaff :=_abgg .Get ("\u0047\u0072\u006fu\u0070");_aaff !=nil {_cgef .Group =_aaff ;};if _egeee :=_abgg .Get ("\u0054\u0068\u0075m\u0062");_egeee !=nil {_cgef .Thumb =_egeee ;};if _gafce :=_abgg .Get ("\u0042");
_gafce !=nil {_cgef .B =_gafce ;};if _dccdg :=_abgg .Get ("\u0044\u0075\u0072");_dccdg !=nil {_cgef .Dur =_dccdg ;};if _bdbf :=_abgg .Get ("\u0054\u0072\u0061n\u0073");_bdbf !=nil {_cgef .Trans =_bdbf ;};if _agdg :=_abgg .Get ("\u0041\u0041");_agdg !=nil {_cgef .AA =_agdg ;
};if _bgcbd :=_abgg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bgcbd !=nil {_cgef .Metadata =_bgcbd ;};if _ecbcc :=_abgg .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ecbcc !=nil {_cgef .PieceInfo =_ecbcc ;};if _eabf :=_abgg .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_eabf !=nil {_cgef .StructParents =_eabf ;};if _bdaab :=_abgg .Get ("\u0049\u0044");_bdaab !=nil {_cgef .ID =_bdaab ;};if _dagab :=_abgg .Get ("\u0050\u005a");_dagab !=nil {_cgef .PZ =_dagab ;};if _bccde :=_abgg .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_bccde !=nil {_cgef .SeparationInfo =_bccde ;};if _ebcceb :=_abgg .Get ("\u0054\u0061\u0062\u0073");_ebcceb !=nil {_cgef .Tabs =_ebcceb ;};if _acgcf :=_abgg .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_acgcf !=nil {_cgef .TemplateInstantiated =_acgcf ;};if _cfffd :=_abgg .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_cfffd !=nil {_cgef .PresSteps =_cfffd ;};if _bdceb :=_abgg .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_bdceb !=nil {_cgef .UserUnit =_bdceb ;
};if _eace :=_abgg .Get ("\u0056\u0050");_eace !=nil {_cgef .VP =_eace ;};if _ddbbb :=_abgg .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_ddbbb !=nil {_cgef .Annots =_ddbbb ;};_cgef ._addeg =_fddbfd ;return _cgef ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cdc *PdfAnnotationPrinterMark )ToPdfObject ()_ab .PdfObject {_cdc .PdfAnnotation .ToPdfObject ();_edgc :=_cdc ._ddg ;_afac :=_edgc .PdfObject .(*_ab .PdfObjectDictionary );_afac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_afac .SetIfNotNil ("\u004d\u004e",_cdc .MN );return _edgc ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_dage *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _dage .UnderlyingCS .GetNumComponents ();};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_egega :=&PdfOutline {_dbef :_ab .MakeIndirectObject (_ab .MakeDict ())};_egega ._caad =_egega ;return _egega ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_fbbc *PdfOutlineTreeNode )GetContainingPdfObject ()_ab .PdfObject {return _fbbc .GetContext ().GetContainingPdfObject ();};func _fgbba (_bfdb *_ab .PdfObjectDictionary )(*PdfShadingType7 ,error ){_bdedc :=PdfShadingType7 {};_bbecad :=_bfdb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _bbecad ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fead ,_cbcdef :=_bbecad .(*_ab .PdfObjectInteger );if !_cbcdef {_fa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bbecad );
return nil ,_ab .ErrTypeError ;};_bdedc .BitsPerCoordinate =_fead ;_bbecad =_bfdb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bbecad ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fead ,_cbcdef =_bbecad .(*_ab .PdfObjectInteger );if !_cbcdef {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bbecad );
return nil ,_ab .ErrTypeError ;};_bdedc .BitsPerComponent =_fead ;_bbecad =_bfdb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bbecad ==nil {_fa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fead ,_cbcdef =_bbecad .(*_ab .PdfObjectInteger );if !_cbcdef {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bbecad );
return nil ,_ab .ErrTypeError ;};_bdedc .BitsPerComponent =_fead ;_bbecad =_bfdb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bbecad ==nil {_fa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gbbge ,_cbcdef :=_bbecad .(*_ab .PdfObjectArray );if !_cbcdef {_fa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbecad );
return nil ,_ab .ErrTypeError ;};_bdedc .Decode =_gbbge ;if _bbbad :=_bfdb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bbbad !=nil {_bdedc .Function =[]PdfFunction {};if _dgccc ,_afbf :=_bbbad .(*_ab .PdfObjectArray );_afbf {for _ ,_ccbee :=range _dgccc .Elements (){_abge ,_geggb :=_cbacf (_ccbee );
if _geggb !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_geggb );return nil ,_geggb ;};_bdedc .Function =append (_bdedc .Function ,_abge );
};}else {_ddaca ,_egec :=_cbacf (_bbbad );if _egec !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egec );return nil ,_egec ;};
_bdedc .Function =append (_bdedc .Function ,_ddaca );};};return &_bdedc ,nil ;};func (_ecbd *PdfReader )newPdfAnnotationTrapNetFromDict (_cfcc *_ab .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_dbfc :=PdfAnnotationTrapNet {};return &_dbfc ,nil ;
};func (_fcedc *PdfWriter )writeOutlines ()error {if _fcedc ._ccdcae ==nil {return nil ;};_fa .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_fcedc ._ccdcae );_agaba :=_fcedc ._ccdcae .ToPdfObject ();
_fa .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_agaba ,_agaba ,_agaba );_fcedc ._cbfaag .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_agaba );
_gcdee :=_fcedc .addObjects (_agaba );if _gcdee !=nil {return _gcdee ;};return nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_edgb *PdfAnnotation )GetContext ()PdfModel {if _edgb ==nil {return nil ;};return _edgb ._aeb ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _ab .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_gacd *PdfFilespec )ToPdfObject ()_ab .PdfObject {_fgee :=_gacd .getDict ();_fgee .Clear ();_fgee .Set ("\u0054\u0079\u0070\u0065",_ab .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_fgee .SetIfNotNil ("\u0046\u0053",_gacd .FS );
_fgee .SetIfNotNil ("\u0046",_gacd .F );_fgee .SetIfNotNil ("\u0055\u0046",_gacd .UF );_fgee .SetIfNotNil ("\u0044\u004f\u0053",_gacd .DOS );_fgee .SetIfNotNil ("\u004d\u0061\u0063",_gacd .Mac );_fgee .SetIfNotNil ("\u0055\u006e\u0069\u0078",_gacd .Unix );
_fgee .SetIfNotNil ("\u0049\u0044",_gacd .ID );_fgee .SetIfNotNil ("\u0056",_gacd .V );_fgee .SetIfNotNil ("\u0045\u0046",_gacd .EF );_fgee .SetIfNotNil ("\u0052\u0046",_gacd .RF );_fgee .SetIfNotNil ("\u0044\u0065\u0073\u0063",_gacd .Desc );_fgee .SetIfNotNil ("\u0043\u0049",_gacd .CI );
return _gacd ._cbaec ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_ab .PdfObjectArray ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_fcdd *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_ab .PdfObject )(PdfColor ,error ){if len (objects )!=_fcdd .GetNumComponents (){return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebea ,_fadca :=_ab .GetNumbersAsFloat (objects );
if _fadca !=nil {return nil ,_fadca ;};return _fcdd .ColorFromFloats (_ebea );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_ccce *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfga :=vals [0];if _gfga < 0.0||_gfga > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_gddg :=NewPdfColorCalGray (_gfga );return _gddg ,nil ;};func _fbbff (_cbde *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_cbde }};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_ab .PdfObjectInteger ;BitsPerComponent *_ab .PdfObjectInteger ;BitsPerFlag *_ab .PdfObjectInteger ;Decode *_ab .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_adbbe :=&PdfSignature {Type :_ab .MakeName ("\u0053\u0069\u0067"),Handler :handler };_bcaba :=&pdfSignDictionary {PdfObjectDictionary :_ab .MakeDict (),_decg :&handler ,_ecefgb :_adbbe };_adbbe ._eacgg =_ab .MakeIndirectObject (_bcaba );
return _adbbe ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_fbcab *PdfWriter )SetPageLabels (pageLabels _ab .PdfObject )error {if pageLabels ==nil {return nil ;};_fa .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_fbcab ._cbfaag .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _fbcab .addObjects (pageLabels );};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _ab .PdfObject ;NewWindow _ab .PdfObject ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_eedec *PdfPage )GetPageDict ()*_ab .PdfObjectDictionary {_afga :=_eedec ._bedg ;_afga .Clear ();_afga .Set ("\u0054\u0079\u0070\u0065",_ab .MakeName ("\u0050\u0061\u0067\u0065"));_afga .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eedec .Parent );
if _eedec .LastModified !=nil {_afga .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_eedec .LastModified .ToPdfObject ());};if _eedec .Resources !=nil {_afga .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_eedec .Resources .ToPdfObject ());
};if _eedec .CropBox !=nil {_afga .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_eedec .CropBox .ToPdfObject ());};if _eedec .MediaBox !=nil {_afga .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_eedec .MediaBox .ToPdfObject ());};if _eedec .BleedBox !=nil {_afga .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_eedec .BleedBox .ToPdfObject ());
};if _eedec .TrimBox !=nil {_afga .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_eedec .TrimBox .ToPdfObject ());};if _eedec .ArtBox !=nil {_afga .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_eedec .ArtBox .ToPdfObject ());};_afga .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_eedec .BoxColorInfo );
_afga .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_eedec .Contents );if _eedec .Rotate !=nil {_afga .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_ab .MakeInteger (*_eedec .Rotate ));};_afga .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_eedec .Group );
_afga .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_eedec .Thumb );_afga .SetIfNotNil ("\u0042",_eedec .B );_afga .SetIfNotNil ("\u0044\u0075\u0072",_eedec .Dur );_afga .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_eedec .Trans );_afga .SetIfNotNil ("\u0041\u0041",_eedec .AA );
_afga .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_eedec .Metadata );_afga .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_eedec .PieceInfo );_afga .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_eedec .StructParents );
_afga .SetIfNotNil ("\u0049\u0044",_eedec .ID );_afga .SetIfNotNil ("\u0050\u005a",_eedec .PZ );_afga .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_eedec .SeparationInfo );_afga .SetIfNotNil ("\u0054\u0061\u0062\u0073",_eedec .Tabs );
_afga .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_eedec .TemplateInstantiated );_afga .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_eedec .PresSteps );_afga .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_eedec .UserUnit );
_afga .SetIfNotNil ("\u0056\u0050",_eedec .VP );if _eedec ._adccb !=nil {_edcb :=_ab .MakeArray ();for _ ,_ffde :=range _eedec ._adccb {if _ffdcf :=_ffde .GetContext ();_ffdcf !=nil {_edcb .Append (_ffdcf .ToPdfObject ());}else {_edcb .Append (_ffde .ToPdfObject ());
};};if _edcb .Len ()> 0{_afga .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_edcb );};}else if _eedec .Annots !=nil {_afga .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_eedec .Annots );};return _afga ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_cegcc :=map[rune ]int {};for _ ,_fgce :=range text {_cegcc [_fgce ]++;};return _cegcc ;};

// ToPdfObject implements interface PdfModel.
func (_ebdb *PdfAnnotationCaret )ToPdfObject ()_ab .PdfObject {_ebdb .PdfAnnotation .ToPdfObject ();_cgc :=_ebdb ._ddg ;_ffeb :=_cgc .PdfObject .(*_ab .PdfObjectDictionary );_ebdb .PdfAnnotationMarkup .appendToPdfDictionary (_ffeb );_ffeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0043\u0061\u0072e\u0074"));
_ffeb .SetIfNotNil ("\u0052\u0044",_ebdb .RD );_ffeb .SetIfNotNil ("\u0053\u0079",_ebdb .Sy );return _cgc ;};

// GetVersion gets the document version.
func (_bbdgf *PdfWriter )GetVersion ()_ab .Version {return _bbdgf ._ecfdb };

// SetFontByName sets the font specified by keyName to the given object.
func (_acef *PdfPageResources )SetFontByName (keyName _ab .PdfObjectName ,obj _ab .PdfObject )error {if _acef .Font ==nil {_acef .Font =_ab .MakeDict ();};_dedda ,_afffc :=_ab .TraceToDirectObject (_acef .Font ).(*_ab .PdfObjectDictionary );if !_afffc {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ab .TraceToDirectObject (_acef .Font ));
return _ab .ErrTypeError ;};_dedda .Set (keyName ,obj );return nil ;};func (_deg *PdfReader )newPdfActionURIFromDict (_cge *_ab .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_cge .Get ("\u0055\u0052\u0049"),IsMap :_cge .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_dfdbc .Lock ();defer _dfdbc .Unlock ();_ffaff =producer };

// Evaluate runs the function on the passed in slice and returns the results.
func (_dbdff *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_fa .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_ca .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_ebg :=NewPdfAnnotation ();_bace :=&PdfAnnotationFileAttachment {};_bace .PdfAnnotation =_ebg ;_bace .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebg .SetContext (_bace );return _bace ;
};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_fecd *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};func (_efaa *pdfFontSimple )baseFields ()*fontCommon {return &_efaa .fontCommon };func (_gdcad *Image )samplesTrimPadding (_bddcf []uint32 )[]uint32 {_feggg :=_gdcad .ColorComponents *int (_gdcad .Width )*int (_gdcad .Height );
if len (_bddcf )==_feggg {return _bddcf ;};_befgea :=make ([]uint32 ,_feggg );_bgdb :=int (_gdcad .Width )*_gdcad .ColorComponents ;var _dfeg ,_gabgc ,_beeea ,_dedbb int ;_gedg :=_cac .BytesPerLine (int (_gdcad .Width ),int (_gdcad .BitsPerComponent ),_gdcad .ColorComponents );
for _dfeg =0;_dfeg < int (_gdcad .Height );_dfeg ++{_gabgc =_dfeg *int (_gdcad .Width );_beeea =_dfeg *_gedg ;for _dedbb =0;_dedbb < _bgdb ;_dedbb ++{_befgea [_gabgc +_dedbb ]=_bddcf [_beeea +_dedbb ];};};return _befgea ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_bbgcd *PdfReader )GetOutlines ()(*Outline ,error ){if _bbgcd ==nil {return nil ,_ca .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_accfg :=_bbgcd .GetOutlineTree ();if _accfg ==nil {return nil ,_ca .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _fcefa func (_ffgaca *PdfOutlineTreeNode ,_ffcec *[]*OutlineItem );_fcefa =func (_ggac *PdfOutlineTreeNode ,_cbbff *[]*OutlineItem ){if _ggac ==nil {return ;};if _ggac ._caad ==nil {_fa .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _cafgc *OutlineItem ;if _eeba ,_fbdg :=_ggac ._caad .(*PdfOutlineItem );_fbdg {_aded :=_eeba .Dest ;if (_aded ==nil ||_ab .IsNullObject (_aded ))&&_eeba .A !=nil {if _cbgce ,_bgfbgg :=_ab .GetDict (_eeba .A );_bgfbgg {_aded ,_ =_ab .GetArray (_cbgce .Get ("\u0044"));
};};var _ccgdb OutlineDest ;if _aded !=nil &&!_ab .IsNullObject (_aded ){if _fcfb ,_efdcd :=_dabde (_aded ,_bbgcd );_efdcd ==nil {_ccgdb =*_fcfb ;}else {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_aded ,_efdcd );
};};_cafgc =NewOutlineItem (_eeba .Title .Decoded (),_ccgdb );*_cbbff =append (*_cbbff ,_cafgc );if _eeba .Next !=nil {_fcefa (_eeba .Next ,_cbbff );};};if _ggac .First !=nil {if _cafgc !=nil {_cbbff =&_cafgc .Entries ;};_fcefa (_ggac .First ,_cbbff );
};};_gfce :=NewOutline ();_fcefa (_accfg ,&_gfce .Entries );return _gfce ,nil ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_adde *_ab .PdfIndirectObject ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_ab .PdfObjectArray ;ExtGState _ab .PdfObject ;};func _gdga (_cffda _ab .PdfObject )(*PdfColorspaceCalGray ,error ){_cggb :=NewPdfColorspaceCalGray ();if _cbge ,_faed :=_cffda .(*_ab .PdfIndirectObject );
_faed {_cggb ._adde =_cbge ;};_cffda =_ab .TraceToDirectObject (_cffda );_ceddg ,_bdgc :=_cffda .(*_ab .PdfObjectArray );if !_bdgc {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ceddg .Len ()!=2{return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_cffda =_ab .TraceToDirectObject (_ceddg .Get (0));_daff ,_bdgc :=_cffda .(*_ab .PdfObjectName );if !_bdgc {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_daff !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_f .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_cffda =_ab .TraceToDirectObject (_ceddg .Get (1));
_dagg ,_bdgc :=_cffda .(*_ab .PdfObjectDictionary );if !_bdgc {return nil ,_f .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_cffda =_dagg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cffda =_ab .TraceToDirectObject (_cffda );_afg ,_bdgc :=_cffda .(*_ab .PdfObjectArray );if !_bdgc {return nil ,_f .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _afg .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_cfefd ,_bafda :=_afg .GetAsFloat64Slice ();
if _bafda !=nil {return nil ,_bafda ;};_cggb .WhitePoint =_cfefd ;_cffda =_dagg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cffda !=nil {_cffda =_ab .TraceToDirectObject (_cffda );_ebaad ,_dcae :=_cffda .(*_ab .PdfObjectArray );
if !_dcae {return nil ,_f .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _ebaad .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_addfg ,_gbdd :=_ebaad .GetAsFloat64Slice ();if _gbdd !=nil {return nil ,_gbdd ;};_cggb .BlackPoint =_addfg ;};_cffda =_dagg .Get ("\u0047\u0061\u006dm\u0061");if _cffda !=nil {_cffda =_ab .TraceToDirectObject (_cffda );_ddfab ,_adcdg :=_ab .GetNumberAsFloat (_cffda );
if _adcdg !=nil {return nil ,_f .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_cggb .Gamma =_ddfab ;};return _cggb ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_egbff *PdfShading )ToPdfObject ()_ab .PdfObject {_cgccd :=_egbff ._edbbg ;_adfcf ,_bgacfa :=_egbff .getShadingDict ();if _bgacfa !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _egbff .ShadingType !=nil {_adfcf .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_egbff .ShadingType );};if _egbff .ColorSpace !=nil {_adfcf .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_egbff .ColorSpace .ToPdfObject ());
};if _egbff .Background !=nil {_adfcf .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_egbff .Background );};if _egbff .BBox !=nil {_adfcf .Set ("\u0042\u0042\u006f\u0078",_egbff .BBox .ToPdfObject ());};if _egbff .AntiAlias !=nil {_adfcf .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_egbff .AntiAlias );
};return _cgccd ;};

// ToInteger convert to an integer format.
func (_ggeb *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_befd :=_ced .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_befd *_ggeb .A ()),uint32 (_befd *_ggeb .B ()),uint32 (_befd *_ggeb .C ())};};func (_bfcf *PdfWriter )writeTrailer (_ebada int ){_bfcf .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");
for _feagc :=0;_feagc <=_ebada ;{for ;_feagc <=_ebada ;_feagc ++{_gfaff ,_cgggg :=_bfcf ._daaee [_feagc ];if _cgggg &&(!_bfcf ._cbeff ||_bfcf ._cbeff &&(_gfaff .Type ==1&&_gfaff .Offset >=_bfcf ._dbaac ||_gfaff .Type ==0)){break ;};};var _gdfdf int ;for _gdfdf =_feagc +1;
_gdfdf <=_ebada ;_gdfdf ++{_cfbeb ,_acbc :=_bfcf ._daaee [_gdfdf ];if _acbc &&(!_bfcf ._cbeff ||_bfcf ._cbeff &&(_cfbeb .Type ==1&&_cfbeb .Offset > _bfcf ._dbaac )){continue ;};break ;};_ccgfe :=_f .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_feagc ,_gdfdf -_feagc );
_bfcf .writeString (_ccgfe );for _accc :=_feagc ;_accc < _gdfdf ;_accc ++{_abfdc :=_bfcf ._daaee [_accc ];switch _abfdc .Type {case 0:_ccgfe =_f .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_bfcf .writeString (_ccgfe );
case 1:_ccgfe =_f .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_abfdc .Offset ,0);_bfcf .writeString (_ccgfe );};};_feagc =_gdfdf +1;};_cecad :=_ab .MakeDict ();_cecad .Set ("\u0049\u006e\u0066\u006f",_bfcf ._bfedb );
_cecad .Set ("\u0052\u006f\u006f\u0074",_bfcf ._eefb );_cecad .Set ("\u0053\u0069\u007a\u0065",_ab .MakeInteger (int64 (_ebada +1)));if _bfcf ._cbeff &&_bfcf ._ebcdbb > 0{_cecad .Set ("\u0050\u0072\u0065\u0076",_ab .MakeInteger (_bfcf ._ebcdbb ));};if _bfcf ._ggfge !=nil {_cecad .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_bfcf ._faaaf );
};if _bfcf ._gbabcf ==nil &&_bfcf ._fafda !=""&&_bfcf ._aadca !=""{_bfcf ._gbabcf =_ab .MakeArray (_ab .MakeHexString (_bfcf ._fafda ),_ab .MakeHexString (_bfcf ._aadca ));};if _bfcf ._gbabcf !=nil {_cecad .Set ("\u0049\u0044",_bfcf ._gbabcf );_fa .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_bfcf ._gbabcf );
};_bfcf .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_bfcf .writeString (_cecad .WriteString ());_bfcf .writeString ("\u000a");};func (_faca *PdfReader )newPdfAnnotationRichMediaFromDict (_fcad *_ab .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_bebg :=&PdfAnnotationRichMedia {};
_bebg .RichMediaSettings =_fcad .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_bebg .RichMediaContent =_fcad .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _bebg ,nil ;};

// L returns the value of the L component of the color.
func (_gegfd *PdfColorLab )L ()float64 {return _gegfd [0]};

// SetLocation sets the `Location` field of the signature.
func (_dbdge *PdfSignature )SetLocation (location string ){_dbdge .Location =_ab .MakeString (location )};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cggdf *PdfShadingType5 )ToPdfObject ()_ab .PdfObject {_cggdf .PdfShading .ToPdfObject ();_egfdb ,_ccegf :=_cggdf .getShadingDict ();if _ccegf !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cggdf .BitsPerCoordinate !=nil {_egfdb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cggdf .BitsPerCoordinate );};if _cggdf .BitsPerComponent !=nil {_egfdb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cggdf .BitsPerComponent );
};if _cggdf .VerticesPerRow !=nil {_egfdb .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_cggdf .VerticesPerRow );};if _cggdf .Decode !=nil {_egfdb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cggdf .Decode );};
if _cggdf .Function !=nil {if len (_cggdf .Function )==1{_egfdb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cggdf .Function [0].ToPdfObject ());}else {_cefdee :=_ab .MakeArray ();for _ ,_gege :=range _cggdf .Function {_cefdee .Append (_gege .ToPdfObject ());
};_egfdb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cefdee );};};return _cggdf ._edbbg ;};type pdfFontSimple struct{fontCommon ;_bcbe *_ab .PdfIndirectObject ;_aeac map[_dc .CharCode ]float64 ;_ebfag _dc .TextEncoder ;_facc _dc .TextEncoder ;
_dfbb *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _ab .PdfObject ;LastChar _ab .PdfObject ;Widths _ab .PdfObject ;Encoding _ab .PdfObject ;_accf *_bc .RuneCharSafeMap ;};func _dfcea ()string {return _fa .Version };func _egfag (_egde *_ab .PdfObjectStream )(*PdfFunctionType4 ,error ){_baeac :=&PdfFunctionType4 {};
_baeac ._dgac =_egde ;_gfgdf :=_egde .PdfObjectDictionary ;_eeaa ,_cdcdf :=_ab .TraceToDirectObject (_gfgdf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ab .PdfObjectArray );if !_cdcdf {_fa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _eeaa .Len ()%2!=0{_fa .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_ca .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dbbg ,_gadd :=_eeaa .ToFloat64Array ();if _gadd !=nil {return nil ,_gadd ;};_baeac .Domain =_dbbg ;_eeaa ,_cdcdf =_ab .TraceToDirectObject (_gfgdf .Get ("\u0052\u0061\u006eg\u0065")).(*_ab .PdfObjectArray );
if _cdcdf {if _eeaa .Len ()< 0||_eeaa .Len ()%2!=0{return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fgga ,_cgbbd :=_eeaa .ToFloat64Array ();if _cgbbd !=nil {return nil ,_cgbbd ;};_baeac .Range =_fgga ;
};_ddbb ,_gadd :=_ab .DecodeStream (_egde );if _gadd !=nil {return nil ,_gadd ;};_baeac ._aagbe =_ddbb ;_baba :=_bga .NewPSParser (_ddbb );_ebcce ,_gadd :=_baba .Parse ();if _gadd !=nil {return nil ,_gadd ;};_baeac .Program =_ebcce ;return _baeac ,nil ;
};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_geec *PdfFieldButton )IsCheckbox ()bool {return _geec .GetType ()==ButtonTypeCheckbox };

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _ab .PdfObject ;PreserveRB _ab .PdfObject ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _ab .PdfObject ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_aefa *PdfAnnotation )ToPdfObject ()_ab .PdfObject {_ebab :=_aefa ._ddg ;_cgd :=_ebab .PdfObject .(*_ab .PdfObjectDictionary );_cgd .Clear ();_cgd .Set ("\u0054\u0079\u0070\u0065",_ab .MakeName ("\u0041\u006e\u006eo\u0074"));_cgd .SetIfNotNil ("\u0052\u0065\u0063\u0074",_aefa .Rect );
_cgd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_aefa .Contents );_cgd .SetIfNotNil ("\u0050",_aefa .P );_cgd .SetIfNotNil ("\u004e\u004d",_aefa .NM );_cgd .SetIfNotNil ("\u004d",_aefa .M );_cgd .SetIfNotNil ("\u0046",_aefa .F );_cgd .SetIfNotNil ("\u0041\u0050",_aefa .AP );
_cgd .SetIfNotNil ("\u0041\u0053",_aefa .AS );_cgd .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_aefa .Border );_cgd .SetIfNotNil ("\u0043",_aefa .C );_cgd .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_aefa .StructParent );
_cgd .SetIfNotNil ("\u004f\u0043",_aefa .OC );return _ebab ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_gcabf *_ab .PdfParser ;_bfeec _ab .PdfObject ;_aegab *_ab .PdfIndirectObject ;_bcdee *_ab .PdfObjectDictionary ;_ffbe []*_ab .PdfIndirectObject ;PageList []*PdfPage ;_dcge int ;_bgffe *_ab .PdfObjectDictionary ;_cbfd *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_ebda *modelManager ;_ccbag bool ;_gfdgc map[_ab .PdfObject ]struct{};_ddeee _fb .ReadSeeker ;_fbggb string ;_feggb bool ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_gbag *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_gfcg *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_gaabg *_ab .PdfObjectDictionary ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_cfc :=NewPdfAnnotation ();_dbe :=&PdfAnnotationSquiggly {};_dbe .PdfAnnotation =_cfc ;_dbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfc .SetContext (_dbe );return _dbe ;};

// ToPdfObject implements interface PdfModel.
func (_bfef *PdfAnnotation3D )ToPdfObject ()_ab .PdfObject {_bfef .PdfAnnotation .ToPdfObject ();_fgfd :=_bfef ._ddg ;_cdf :=_fgfd .PdfObject .(*_ab .PdfObjectDictionary );_cdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0033\u0044"));
_cdf .SetIfNotNil ("\u0033\u0044\u0044",_bfef .T3DD );_cdf .SetIfNotNil ("\u0033\u0044\u0056",_bfef .T3DV );_cdf .SetIfNotNil ("\u0033\u0044\u0041",_bfef .T3DA );_cdf .SetIfNotNil ("\u0033\u0044\u0049",_bfef .T3DI );_cdf .SetIfNotNil ("\u0033\u0044\u0042",_bfef .T3DB );
return _fgfd ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_abbc :=&PdfColorspaceLab {};_abbc .BlackPoint =[]float64 {0.0,0.0,0.0};_abbc .Range =[]float64 {-100,100,-100,100};return _abbc ;};

// SetDate sets the `M` field of the signature.
func (_fcdge *PdfSignature )SetDate (date _bg .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_fcdge .M =_ab .MakeString (date .Format (format ));
};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_agb *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_ab .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgaa ,_fged :=_ab .GetNumbersAsFloat (objects );
if _fged !=nil {return nil ,_fged ;};return _agb .ColorFromFloats (_dgaa );};func (_cfffc *PdfWriter )writeObjectsInStreams (_gecgb map[_ab .PdfObject ]bool )error {for _ ,_adba :=range _cfffc ._acgcfc {if _eefd :=_gecgb [_adba ];_eefd {continue ;};_cegba :=int64 (0);
switch _eecd :=_adba .(type ){case *_ab .PdfIndirectObject :_cegba =_eecd .ObjectNumber ;case *_ab .PdfObjectStream :_cegba =_eecd .ObjectNumber ;case *_ab .PdfObjectStreams :_cegba =_eecd .ObjectNumber ;default:_fa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_adba );
return ErrTypeCheck ;};if _cfffc ._ggfge !=nil &&_adba !=_cfffc ._faaaf {_fgaec :=_cfffc ._ggfge .Encrypt (_adba ,_cegba ,0);if _fgaec !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_fgaec );
return _fgaec ;};};_cfffc .writeObject (int (_cegba ),_adba );};return nil ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_ecbb *PdfFieldButton )GetType ()ButtonType {_ceef :=ButtonTypeCheckbox ;if _ecbb .Ff !=nil {if (uint32 (*_ecbb .Ff )&FieldFlagPushbutton .Mask ())> 0{_ceef =ButtonTypePush ;}else if (uint32 (*_ecbb .Ff )&FieldFlagRadio .Mask ())> 0{_ceef =ButtonTypeRadio ;
};};return _ceef ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_egb :=NewPdfAction ();_fff :=&PdfActionNamed {};_fff .PdfAction =_egb ;_egb .SetContext (_fff );return _fff ;};

// C returns the value of the C component of the color.
func (_egcb *PdfColorCalRGB )C ()float64 {return _egcb [2]};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _ab .PdfObject ;Name _ab .PdfObject ;State _ab .PdfObject ;StateModel _ab .PdfObject ;};func _efgcb (_gegaf *_ab .PdfObjectDictionary )(*PdfTilingPattern ,error ){_cceaf :=&PdfTilingPattern {};
_edgcf :=_gegaf .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _edgcf ==nil {_fa .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gdfbb ,_badad :=_edgcf .(*_ab .PdfObjectInteger );
if !_badad {_fa .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_edgcf );return nil ,_ab .ErrTypeError ;
};_cceaf .PaintType =_gdfbb ;_edgcf =_gegaf .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _edgcf ==nil {_fa .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_feebg ,_badad :=_edgcf .(*_ab .PdfObjectInteger );if !_badad {_fa .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edgcf );
return nil ,_ab .ErrTypeError ;};_cceaf .TilingType =_feebg ;_edgcf =_gegaf .Get ("\u0042\u0042\u006f\u0078");if _edgcf ==nil {_fa .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_edgcf =_ab .TraceToDirectObject (_edgcf );_gebc ,_badad :=_edgcf .(*_ab .PdfObjectArray );if !_badad {_fa .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edgcf );
return nil ,_ab .ErrTypeError ;};_eaagd ,_bfgfe :=NewPdfRectangle (*_gebc );if _bfgfe !=nil {_fa .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bfgfe );return nil ,_bfgfe ;};_cceaf .BBox =_eaagd ;_edgcf =_gegaf .Get ("\u0058\u0053\u0074e\u0070");
if _edgcf ==nil {_fa .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bcfbb ,_bfgfe :=_ab .GetNumberAsFloat (_edgcf );if _bfgfe !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_bcfbb );
return nil ,_bfgfe ;};_cceaf .XStep =_ab .MakeFloat (_bcfbb );_edgcf =_gegaf .Get ("\u0059\u0053\u0074e\u0070");if _edgcf ==nil {_fa .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_fedcf ,_bfgfe :=_ab .GetNumberAsFloat (_edgcf );if _bfgfe !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_fedcf );
return nil ,_bfgfe ;};_cceaf .YStep =_ab .MakeFloat (_fedcf );_edgcf =_gegaf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _edgcf ==nil {_fa .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gegaf ,_badad =_ab .TraceToDirectObject (_edgcf ).(*_ab .PdfObjectDictionary );if !_badad {return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_edgcf );
};_eaefb ,_bfgfe :=NewPdfPageResourcesFromDict (_gegaf );if _bfgfe !=nil {return nil ,_bfgfe ;};_cceaf .Resources =_eaefb ;if _ebcba :=_gegaf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ebcba !=nil {_fgdb ,_ddgaa :=_ebcba .(*_ab .PdfObjectArray );if !_ddgaa {_fa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ebcba );
return nil ,_ab .ErrTypeError ;};_cceaf .Matrix =_fgdb ;};return _cceaf ,nil ;};func (_abgc *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_edf :=NewPdfAnnotation ();_gbfd :=&PdfAnnotationHighlight {};_gbfd .PdfAnnotation =_edf ;_gbfd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edf .SetContext (_gbfd );return _gbfd ;};

// SetForms sets the Acroform for a PDF file.
func (_aaad *PdfWriter )SetForms (form *PdfAcroForm )error {_aaad ._eedgg =form ;return nil };

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_feaf *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _feaf .Range };func (_cgbfb Image )getBase ()_cac .ImageBase {return _cac .NewImageBase (int (_cgbfb .Width ),int (_cgbfb .Height ),int (_cgbfb .BitsPerComponent ),_cgbfb .ColorComponents ,_cgbfb .Data ,_cgbfb ._dbdfad ,_cgbfb ._aaefg );
};func (_edffb *PdfWriter )addObjects (_cgead _ab .PdfObject )error {_fa .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _fafcb ,_bgdgd :=_cgead .(*_ab .PdfIndirectObject );_bgdgd {_fa .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");
_fa .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_cgead ,_fafcb );_fa .Log .Trace ("\u002d\u0020\u0025\u0073",_fafcb .PdfObject );if _edffb .addObject (_fafcb ){_bbcfc :=_edffb .addObjects (_fafcb .PdfObject );if _bbcfc !=nil {return _bbcfc ;
};};return nil ;};if _bcea ,_bcbbc :=_cgead .(*_ab .PdfObjectStream );_bcbbc {_fa .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_fa .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_cgead ,_cgead );if _edffb .addObject (_bcea ){_gdbdgf :=_edffb .addObjects (_bcea .PdfObjectDictionary );
if _gdbdgf !=nil {return _gdbdgf ;};};return nil ;};if _dbfef ,_cffgb :=_cgead .(*_ab .PdfObjectDictionary );_cffgb {_fa .Log .Trace ("\u0044\u0069\u0063\u0074");_fa .Log .Trace ("\u002d\u0020\u0025\u0073",_cgead );for _ ,_fagbc :=range _dbfef .Keys (){_bcbd :=_dbfef .Get (_fagbc );
if _fegcf ,_gdgbc :=_bcbd .(*_ab .PdfObjectReference );_gdgbc {_bcbd =_fegcf .Resolve ();_dbfef .Set (_fagbc ,_bcbd );};if _fagbc !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _accaad :=_edffb .addObjects (_bcbd );_accaad !=nil {return _accaad ;};}else {if _ ,_acfff :=_bcbd .(*_ab .PdfObjectNull );
_acfff {continue ;};if _caagg :=_edffb .hasObject (_bcbd );!_caagg {_fa .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_bcbd ,_bcbd ,_bcbd );
_edffb ._gcga [_bcbd ]=append (_edffb ._gcga [_bcbd ],_dbfef );};};};return nil ;};if _fadfgg ,_bagcg :=_cgead .(*_ab .PdfObjectArray );_bagcg {_fa .Log .Trace ("\u0041\u0072\u0072a\u0079");_fa .Log .Trace ("\u002d\u0020\u0025\u0073",_cgead );if _fadfgg ==nil {return _ca .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _aeebf ,_egdgf :=range _fadfgg .Elements (){if _ddegfg ,_bgefa :=_egdgf .(*_ab .PdfObjectReference );_bgefa {_egdgf =_ddegfg .Resolve ();_fadfgg .Set (_aeebf ,_egdgf );};if _ggfeb :=_edffb .addObjects (_egdgf );_ggfeb !=nil {return _ggfeb ;};};return nil ;
};if _ ,_bcdge :=_cgead .(*_ab .PdfObjectReference );_bcdge {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_cgead );
return _ca .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_bebc *PdfFieldText )ToPdfObject ()_ab .PdfObject {_bebc .PdfField .ToPdfObject ();_afcag :=_bebc ._ggde ;_aaecd :=_afcag .PdfObject .(*_ab .PdfObjectDictionary );_aaecd .Set ("\u0046\u0054",_ab .MakeName ("\u0054\u0078"));if _bebc .DA !=nil {_aaecd .Set ("\u0044\u0041",_bebc .DA );
};if _bebc .Q !=nil {_aaecd .Set ("\u0051",_bebc .Q );};if _bebc .DS !=nil {_aaecd .Set ("\u0044\u0053",_bebc .DS );};if _bebc .RV !=nil {_aaecd .Set ("\u0052\u0056",_bebc .RV );};if _bebc .MaxLen !=nil {_aaecd .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_bebc .MaxLen );
};return _afcag ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_bgaag *PdfReader )CheckAccessRights (password []byte )(bool ,_d .Permissions ,error ){return _bgaag ._gcabf .CheckAccessRights (password );};

// String returns a string that describes `font`.
func (_eddd *PdfFont )String ()string {_edec :="";if _eddd ._cgdec .Encoder ()!=nil {_edec =_eddd ._cgdec .Encoder ().String ();};return _f .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_eddd ._cgdec ,_eddd .baseFields ().coreString (),_edec );
};

// HasXObjectByName checks if has XObject resource by name.
func (_dfcee *PdfPage )HasXObjectByName (name _ab .PdfObjectName )bool {_aabe ,_ggff :=_dfcee .Resources .XObject .(*_ab .PdfObjectDictionary );if !_ggff {return false ;};if _fdaea :=_aabe .Get (name );_fdaea !=nil {return true ;};return false ;};

// IsColored specifies if the pattern is colored.
func (_bdbd *PdfTilingPattern )IsColored ()bool {if _bdbd .PaintType !=nil &&*_bdbd .PaintType ==1{return true ;};return false ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_dedag *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_ffaf *DSS )addCRLs (_bffcaa [][]byte )([]*_ab .PdfObjectStream ,error ){return _ffaf .add (&_ffaf .CRLs ,_ffaf ._addfa ,_bffcaa );};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_geadf *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_ebfef *_ab .PdfIndirectObject ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);func (_ddb *PdfReader )newPdfAnnotationPrinterMarkFromDict (_cgbf *_ab .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_egaa :=PdfAnnotationPrinterMark {};
_egaa .MN =_cgbf .Get ("\u004d\u004e");return &_egaa ,nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_aeb PdfModel ;Rect _ab .PdfObject ;Contents _ab .PdfObject ;P _ab .PdfObject ;NM _ab .PdfObject ;M _ab .PdfObject ;F _ab .PdfObject ;AP _ab .PdfObject ;AS _ab .PdfObject ;Border _ab .PdfObject ;C _ab .PdfObject ;StructParent _ab .PdfObject ;
OC _ab .PdfObject ;_ddg *_ab .PdfIndirectObject ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _ab .PdfObjectArray )(*PdfRectangle ,error ){_efebg :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _agebd error ;_efebg .Llx ,_agebd =_ab .GetNumberAsFloat (arr .Get (0));if _agebd !=nil {return nil ,_agebd ;};_efebg .Lly ,_agebd =_ab .GetNumberAsFloat (arr .Get (1));if _agebd !=nil {return nil ,_agebd ;};_efebg .Urx ,_agebd =_ab .GetNumberAsFloat (arr .Get (2));
if _agebd !=nil {return nil ,_agebd ;};_efebg .Ury ,_agebd =_ab .GetNumberAsFloat (arr .Get (3));if _agebd !=nil {return nil ,_agebd ;};return &_efebg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gefc *PdfAnnotationScreen )ToPdfObject ()_ab .PdfObject {_gefc .PdfAnnotation .ToPdfObject ();_aagb :=_gefc ._ddg ;_adbd :=_aagb .PdfObject .(*_ab .PdfObjectDictionary );_adbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ab .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_adbd .SetIfNotNil ("\u0054",_gefc .T );_adbd .SetIfNotNil ("\u004d\u004b",_gefc .MK );_adbd .SetIfNotNil ("\u0041",_gefc .A );_adbd .SetIfNotNil ("\u0041\u0041",_gefc .AA );return _aagb ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bcceg pdfFontType3 )GetRuneMetrics (r rune )(_bc .CharMetrics ,bool ){_dfbga :=_bcceg .Encoder ();if _dfbga ==nil {_fa .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_bcceg );
return _bc .CharMetrics {},false ;};_bcedg ,_abbdg :=_dfbga .RuneToCharcode (r );if !_abbdg {if r !=' '{_fa .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_bcceg );
};return _bc .CharMetrics {},false ;};_cfbfd ,_dbegf :=_bcceg .GetCharMetrics (_bcedg );return _cfbfd ,_dbegf ;};func (_cfaac *pdfFontSimple )updateStandard14Font (){_dbbd ,_dgfda :=_cfaac .Encoder ().(_dc .SimpleEncoder );if !_dgfda {_fa .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_cfaac .Encoder (),_cfaac );
return ;};_beed :=_dbbd .Charcodes ();_cfaac ._aeac =make (map[_dc .CharCode ]float64 ,len (_beed ));for _ ,_edecf :=range _beed {_aead ,_ :=_dbbd .CharcodeToRune (_edecf );_gccfd ,_ :=_cfaac ._accf .Read (_aead );_cfaac ._aeac [_edecf ]=_gccfd .Wx ;};
};

// B returns the value of the B component of the color.
func (_afdd *PdfColorCalRGB )B ()float64 {return _afdd [1]};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;func (_bbbaf *PdfWriter )writeOutputIntents ()error {if len (_bbbaf ._bagbd )==0{return nil ;};_dcagf :=make ([]_ab .PdfObject ,len (_bbbaf ._bagbd ));for _dace ,_fgccb :=range _bbbaf ._bagbd {_acbe :=_fgccb .ToPdfObject ();_dcagf [_dace ]=_ab .MakeIndirectObject (_acbe );
};_afcgf :=_ab .MakeIndirectObject (_ab .MakeArray (_dcagf ...));_bbbaf ._cbfaag .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_afcgf );if _cfagd :=_bbbaf .addObjects (_afcgf );_cfagd !=nil {return _cfagd ;};return nil ;
};func (_eag *PdfReader )newPdfActionJavaScriptFromDict (_fdgg *_ab .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_fdgg .Get ("\u004a\u0053")},nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cbfda *PdfPageResources )GetPatternByName (keyName _ab .PdfObjectName )(*PdfPattern ,bool ){if _cbfda .Pattern ==nil {return nil ,false ;};_cdef ,_acdab :=_ab .TraceToDirectObject (_cbfda .Pattern ).(*_ab .PdfObjectDictionary );if !_acdab {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cbfda .Pattern );
return nil ,false ;};if _addffd :=_cdef .Get (keyName );_addffd !=nil {_fbefaa ,_gfbdd :=_cccb (_addffd );if _gfbdd !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_gfbdd );
return nil ,false ;};return _fbefaa ,true ;};return nil ,false ;};

// Register registers (caches) a model to primitive object relationship.
func (_gfef *modelManager )Register (primitive _ab .PdfObject ,model PdfModel ){_gfef ._eagag [model ]=primitive ;_gfef ._abecg [primitive ]=model ;};func (_gffg *PdfReader )newPdfAnnotation3DFromDict (_efad *_ab .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_efgb :=PdfAnnotation3D {};
_efgb .T3DD =_efad .Get ("\u0033\u0044\u0044");_efgb .T3DV =_efad .Get ("\u0033\u0044\u0056");_efgb .T3DA =_efad .Get ("\u0033\u0044\u0041");_efgb .T3DI =_efad .Get ("\u0033\u0044\u0049");_efgb .T3DB =_efad .Get ("\u0033\u0044\u0042");return &_efgb ,nil ;
};func (_agege *PdfWriter )getPdfVersion ()string {return _f .Sprintf ("\u0025\u0064\u002e%\u0064",_agege ._ecfdb .Major ,_agege ._ecfdb .Minor );};

// Standard is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type Standard interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};