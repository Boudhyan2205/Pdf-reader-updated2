//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
//	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_g "bufio";_bb "bytes";_eg "crypto/md5";_ba "crypto/rand";_dda "crypto/sha1";_ff "crypto/x509";_eb "encoding/binary";_f "encoding/hex";_gf "errors";_a "fmt";_aaf "github.com/gabriel-vasile/mimetype";_bf "github.com/unidoc/pkcs7";
_fb "github.com/unidoc/unipdf/v3/common";_cde "github.com/unidoc/unipdf/v3/core";_da "github.com/unidoc/unipdf/v3/core/security";_ad "github.com/unidoc/unipdf/v3/core/security/crypt";_ega "github.com/unidoc/unipdf/v3/internal/cmap";_bbb "github.com/unidoc/unipdf/v3/internal/imageutil";
_af "github.com/unidoc/unipdf/v3/internal/license";_afa "github.com/unidoc/unipdf/v3/internal/sampling";_fab "github.com/unidoc/unipdf/v3/internal/textencoding";_gb "github.com/unidoc/unipdf/v3/internal/timeutils";_bc "github.com/unidoc/unipdf/v3/internal/transform";
_aae "github.com/unidoc/unipdf/v3/model/internal/docutil";_baf "github.com/unidoc/unipdf/v3/model/internal/fonts";_fd "github.com/unidoc/unipdf/v3/model/mdp";_fdg "github.com/unidoc/unipdf/v3/model/sigutil";_fe "github.com/unidoc/unipdf/v3/ps";_bae "github.com/unidoc/unitype";
_fa "golang.org/x/xerrors";_e "hash";_cg "image";_d "image/color";_ "image/gif";_ "image/png";_df "io";_gd "io/ioutil";_ce "math";_cc "math/rand";_cd "os";_dg "path/filepath";_cgg "regexp";_cf "sort";_ccg "strconv";_cce "strings";_c "sync";_gdd "time";
_dd "unicode";_aa "unicode/utf8";);

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_dedge *PdfReader )Inspect ()(map[string ]int ,error ){return _dedge ._fdccd .Inspect ()};func (_bdbe *PdfReader )newPdfAnnotationPolygonFromDict (_eagf *_cde .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_fdc :=PdfAnnotationPolygon {};_egec ,_gab :=_bdbe .newPdfAnnotationMarkupFromDict (_eagf );
if _gab !=nil {return nil ,_gab ;};_fdc .PdfAnnotationMarkup =_egec ;_fdc .Vertices =_eagf .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_fdc .LE =_eagf .Get ("\u004c\u0045");_fdc .BS =_eagf .Get ("\u0042\u0053");_fdc .IC =_eagf .Get ("\u0049\u0043");
_fdc .BE =_eagf .Get ("\u0042\u0045");_fdc .IT =_eagf .Get ("\u0049\u0054");_fdc .Measure =_eagf .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_fdc ,nil ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_ggdeb .Lock ();defer _ggdeb .Unlock ();_eadgce =author };

// GetCharMetrics returns the char metrics for character code `code`.
func (_cbee pdfCIDFontType2 )GetCharMetrics (code _fab .CharCode )(_baf .CharMetrics ,bool ){if _bged ,_gdcdd :=_cbee ._bcbee [code ];_gdcdd {return _baf .CharMetrics {Wx :_bged },true ;};_ddaa :=rune (code );_fbfd ,_cabf :=_cbee ._cagbc [_ddaa ];if !_cabf {_fbfd =int (_cbee ._bgbdd );
};return _baf .CharMetrics {Wx :float64 (_fbfd )},true ;};func _cccf ()*modelManager {_aggcc :=modelManager {};_aggcc ._fdaa =map[PdfModel ]_cde .PdfObject {};_aggcc ._ffdgf =map[_cde .PdfObject ]PdfModel {};return &_aggcc ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_ggfcd *PdfAcroForm )GetContainingPdfObject ()_cde .PdfObject {return _ggfcd ._ddcfd };

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_dbagc *PdfColorspaceLab )ToPdfObject ()_cde .PdfObject {_geddd :=_cde .MakeArray ();_geddd .Append (_cde .MakeName ("\u004c\u0061\u0062"));_gbgd :=_cde .MakeDict ();if _dbagc .WhitePoint !=nil {_fageb :=_cde .MakeArray (_cde .MakeFloat (_dbagc .WhitePoint [0]),_cde .MakeFloat (_dbagc .WhitePoint [1]),_cde .MakeFloat (_dbagc .WhitePoint [2]));
_gbgd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fageb );}else {_fb .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _dbagc .BlackPoint !=nil {_ggaf :=_cde .MakeArray (_cde .MakeFloat (_dbagc .BlackPoint [0]),_cde .MakeFloat (_dbagc .BlackPoint [1]),_cde .MakeFloat (_dbagc .BlackPoint [2]));_gbgd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_ggaf );
};if _dbagc .Range !=nil {_feae :=_cde .MakeArray (_cde .MakeFloat (_dbagc .Range [0]),_cde .MakeFloat (_dbagc .Range [1]),_cde .MakeFloat (_dbagc .Range [2]),_cde .MakeFloat (_dbagc .Range [3]));_gbgd .Set ("\u0052\u0061\u006eg\u0065",_feae );};_geddd .Append (_gbgd );
if _dbagc ._fabc !=nil {_dbagc ._fabc .PdfObject =_geddd ;return _dbagc ._fabc ;};return _geddd ;};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_cde .PdfParser ;DiffPolicy _fd .DiffPolicy ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_eaafa *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_ddfd *PdfColorspaceDeviceN )GetNumComponents ()int {return _ddfd .ColorantNames .Len ()};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_cde .PdfObjectInteger ;TilingType *_cde .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_cde .PdfObjectFloat ;YStep *_cde .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_cde .PdfObjectArray ;};


// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;func (_ggbb *PdfAppender )mergeResources (_beae ,_fbcb _cde .PdfObject ,_eggeg map[_cde .PdfObjectName ]_cde .PdfObjectName )_cde .PdfObject {if _fbcb ==nil &&_beae ==nil {return nil ;};if _fbcb ==nil {return _beae ;
};_edd ,_bggf :=_cde .GetDict (_fbcb );if !_bggf {return _beae ;};if _beae ==nil {_dgceb :=_cde .MakeDict ();_dgceb .Merge (_edd );return _fbcb ;};_ebebe ,_bggf :=_cde .GetDict (_beae );if !_bggf {_fb .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_ebebe =_cde .MakeDict ();};for _ ,_gagb :=range _edd .Keys (){if _cbda ,_begb :=_eggeg [_gagb ];_begb {_ebebe .Set (_cbda ,_edd .Get (_gagb ));}else {_ebebe .Set (_gagb ,_edd .Get (_gagb ));};};return _ebebe ;};func (_gbf *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};
func (_fceade Image )getBase ()_bbb .ImageBase {return _bbb .NewImageBase (int (_fceade .Width ),int (_fceade .Height ),int (_fceade .BitsPerComponent ),_fceade .ColorComponents ,_fceade .Data ,_fceade ._cbcfe ,_fceade ._gdbc );};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _df .ReadSeeker )(*PdfFont ,error ){const _acbe =_fab .CharCode (32);const _aefae =_fab .CharCode (255);_gfbgb ,_fddcee :=_gd .ReadAll (r );if _fddcee !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_fddcee );
return nil ,_fddcee ;};_dccac ,_fddcee :=_baf .TtfParse (_bb .NewReader (_gfbgb ));if _fddcee !=nil {_fb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_fddcee );
return nil ,_fddcee ;};_ecbgb :=&pdfFontSimple {_gceedd :make (map[_fab .CharCode ]float64 ),fontCommon :fontCommon {_cfgg :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_ecbgb ._fecga =_fab .NewWinAnsiEncoder ();_ecbgb ._bbdf =_dccac .PostScriptName ;
_ecbgb .FirstChar =_cde .MakeInteger (int64 (_acbe ));_ecbgb .LastChar =_cde .MakeInteger (int64 (_aefae ));_ffdfb :=1000.0/float64 (_dccac .UnitsPerEm );if len (_dccac .Widths )<=0{return nil ,_gf .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_fbgd :=_ffdfb *float64 (_dccac .Widths [0]);_gcbab :=make ([]float64 ,0,_aefae -_acbe +1);for _ecfaa :=_acbe ;_ecfaa <=_aefae ;_ecfaa ++{_eeaa ,_effbc :=_ecbgb .Encoder ().CharcodeToRune (_ecfaa );if !_effbc {_fb .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_ecfaa );
_gcbab =append (_gcbab ,_fbgd );continue ;};_bacdf ,_gaca :=_dccac .Chars [_eeaa ];if !_gaca {_fb .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_gcbab =append (_gcbab ,_fbgd );continue ;
};_dgabc :=_ffdfb *float64 (_dccac .Widths [_bacdf ]);_gcbab =append (_gcbab ,_dgabc );};_ecbgb .Widths =_cde .MakeIndirectObject (_cde .MakeArrayFromFloats (_gcbab ));if len (_gcbab )< int (_aefae -_acbe +1){_fb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_gcbab ),255-32+1);
return nil ,_cde .ErrRangeError ;};for _egega :=_acbe ;_egega <=_aefae ;_egega ++{_ecbgb ._gceedd [_egega ]=_gcbab [_egega -_acbe ];};_ecbgb .Encoding =_cde .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");
_bdebe :=&PdfFontDescriptor {};_bdebe .FontName =_cde .MakeName (_dccac .PostScriptName );_bdebe .Ascent =_cde .MakeFloat (_ffdfb *float64 (_dccac .TypoAscender ));_bdebe .Descent =_cde .MakeFloat (_ffdfb *float64 (_dccac .TypoDescender ));_bdebe .CapHeight =_cde .MakeFloat (_ffdfb *float64 (_dccac .CapHeight ));
_bdebe .FontBBox =_cde .MakeArrayFromFloats ([]float64 {_ffdfb *float64 (_dccac .Xmin ),_ffdfb *float64 (_dccac .Ymin ),_ffdfb *float64 (_dccac .Xmax ),_ffdfb *float64 (_dccac .Ymax )});_bdebe .ItalicAngle =_cde .MakeFloat (_dccac .ItalicAngle );_bdebe .MissingWidth =_cde .MakeFloat (_ffdfb *float64 (_dccac .Widths [0]));
_ddffb ,_fddcee :=_cde .MakeStream (_gfbgb ,_cde .NewFlateEncoder ());if _fddcee !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_fddcee );
return nil ,_fddcee ;};_ddffb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cde .MakeInteger (int64 (len (_gfbgb ))));_bdebe .FontFile2 =_ddffb ;if _dccac .Bold {_bdebe .StemV =_cde .MakeInteger (120);}else {_bdebe .StemV =_cde .MakeInteger (70);
};_bcde :=_bbdc ;if _dccac .IsFixedPitch {_bcde |=_decg ;};if _dccac .ItalicAngle !=0{_bcde |=_gccgd ;};_bdebe .Flags =_cde .MakeInteger (int64 (_bcde ));_ecbgb ._bceac =_bdebe ;_egfbf :=&PdfFont {_dcgb :_ecbgb };return _egfbf ,nil ;};func (_egb *PdfReader )newPdfActionGotoFromDict (_gcb *_cde .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_gcb .Get ("\u0044")},nil ;
};func (_cfcc *PdfReader )newPdfAnnotationSoundFromDict (_acb *_cde .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_bdaf :=PdfAnnotationSound {};_debb ,_aedcg :=_cfcc .newPdfAnnotationMarkupFromDict (_acb );if _aedcg !=nil {return nil ,_aedcg ;};_bdaf .PdfAnnotationMarkup =_debb ;
_bdaf .Name =_acb .Get ("\u004e\u0061\u006d\u0065");_bdaf .Sound =_acb .Get ("\u0053\u006f\u0075n\u0064");return &_bdaf ,nil ;};func _fead (_afead *_cde .PdfIndirectObject )(*PdfOutline ,error ){_affae ,_ddgg :=_afead .PdfObject .(*_cde .PdfObjectDictionary );
if !_ddgg {return nil ,_a .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cfabe :=NewPdfOutline ();if _ecfd :=_affae .Get ("\u0054\u0079\u0070\u0065");
_ecfd !=nil {_fbdbg ,_abgfg :=_ecfd .(*_cde .PdfObjectName );if _abgfg {if *_fbdbg !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_fb .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_fbdbg );
};};};if _fedge :=_affae .Get ("\u0043\u006f\u0075n\u0074");_fedge !=nil {_ggae ,_daaf :=_cde .GetNumberAsInt64 (_fedge );if _daaf !=nil {return nil ,_daaf ;};_cfabe .Count =&_ggae ;};return _cfabe ,nil ;};

// HasFontByName checks if has font resource by name.
func (_cgfaf *PdfPage )HasFontByName (name _cde .PdfObjectName )bool {_efbca ,_fcefa :=_cgfaf .Resources .Font .(*_cde .PdfObjectDictionary );if !_fcefa {return false ;};if _fafa :=_efbca .Get (name );_fafa !=nil {return true ;};return false ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_bbac :=&PdfBorderStyle {};return _bbac };func (_fda *PdfReader )newPdfAnnotationMovieFromDict (_dad *_cde .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_gffb :=PdfAnnotationMovie {};_gffb .T =_dad .Get ("\u0054");
_gffb .Movie =_dad .Get ("\u004d\u006f\u0076i\u0065");_gffb .A =_dad .Get ("\u0041");return &_gffb ,nil ;};func (_abff *PdfFilespec )getDict ()*_cde .PdfObjectDictionary {if _bgde ,_eadd :=_abff ._dcef .(*_cde .PdfIndirectObject );_eadd {_dcbac ,_fdbg :=_bgde .PdfObject .(*_cde .PdfObjectDictionary );
if !_fdbg {return nil ;};return _dcbac ;}else if _bdee ,_dbde :=_abff ._dcef .(*_cde .PdfObjectDictionary );_dbde {return _bdee ;}else {_fb .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_abff ._dcef );
return nil ;};};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_eaede *PdfWriter )AddPage (page *PdfPage )error {const _eagdda ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_ggcfc (page );_dccdb :=page .ToPdfObject ();_fb .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_fb .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_dccdb );_cebge ,_ceead :=_cde .GetIndirect (_dccdb );if !_ceead {return _gf .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_fb .Log .Trace ("\u0025\u0073",_cebge );_fb .Log .Trace ("\u0025\u0073",_cebge .PdfObject );_dffgg ,_ceead :=_cde .GetDict (_cebge .PdfObject );if !_ceead {return _gf .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_acdcc ,_ceead :=_cde .GetName (_dffgg .Get ("\u0054\u0079\u0070\u0065"));if !_ceead {return _a .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_dffgg .Get ("\u0054\u0079\u0070\u0065"));
};if _acdcc .String ()!="\u0050\u0061\u0067\u0065"{return _gf .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_gbdgg :=[]_cde .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_fbgfb ,_gcdaa :=_cde .GetIndirect (_dffgg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_fb .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_dffgg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_gcdaa );
for _gcdaa {_fb .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fbgfb );_fggcae ,_afdfc :=_cde .GetDict (_fbgfb .PdfObject );if !_afdfc {return _gf .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_daebf :=range _gbdgg {_fb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_daebf );if _dffgg .Get (_daebf )!=nil {_fb .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _fgdee :=_fggcae .Get (_daebf );_fgdee !=nil {_fb .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_daebf );_dffgg .Set (_daebf ,_fgdee );};};_fbgfb ,_gcdaa =_cde .GetIndirect (_fggcae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_fb .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fggcae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_fb .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_dffgg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eaede ._gabdc );_cebge .PdfObject =_dffgg ;_ggcb ,_ceead :=_cde .GetDict (_eaede ._gabdc .PdfObject );if !_ceead {return _gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_fdabd ,_ceead :=_cde .GetArray (_ggcb .Get ("\u004b\u0069\u0064\u0073"));if !_ceead {return _gf .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_fdabd .Append (_cebge );_eaede ._faag [_dffgg ]=struct{}{};_fdegde ,_ceead :=_cde .GetInt (_ggcb .Get ("\u0043\u006f\u0075n\u0074"));if !_ceead {return _gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_fdegde =*_fdegde +1;if page ._cgdb ==nil {_adbfb :=_af .Track (_eaede ._abedd ,_eagdda );if _adbfb !=nil {return _adbfb ;};}else {_gfadc :=_af .Track (page ._cgdb ._gbaeb ,_eagdda );if _gfadc !=nil {return _gfadc ;};};_eaede .addObject (_cebge );_bagd :=_eaede .addObjects (_dffgg );
if _bagd !=nil {return _bagd ;};return nil ;};

// SetName sets the `Name` field of the signature.
func (_aaada *PdfSignature )SetName (name string ){_aaada .Name =_cde .MakeEncodedString (name ,true )};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_effe :=&PdfAppender {_aead :reader ._dfgb ,Reader :reader ,_fecb :reader ._fdccd ,_cgaa :reader ._acfcd };_ffba ,_begg :=_effe ._aead .Seek (0,_df .SeekEnd );
if _begg !=nil {return nil ,_begg ;};_effe ._eabb =_ffba ;if _ ,_begg =_effe ._aead .Seek (0,_df .SeekStart );_begg !=nil {return nil ,_begg ;};_effe ._dbb ,_begg =NewPdfReaderWithOpts (_effe ._aead ,opts );if _begg !=nil {return nil ,_begg ;};for _ ,_bgba :=range _effe .Reader .GetObjectNums (){if _effe ._abbd < _bgba {_effe ._abbd =_bgba ;
};};_effe ._bfba =_effe ._fecb .GetXrefTable ();_effe ._feb =_effe ._fecb .GetXrefOffset ();_effe ._dbaf =append (_effe ._dbaf ,_effe ._dbb .PageList ...);_effe ._edaf =make (map[_cde .PdfObject ]struct{});_effe ._ddbf =make (map[_cde .PdfObject ]int64 );
_effe ._ebbd =make (map[_cde .PdfObject ]struct{});_effe ._deffb =_effe ._dbb .AcroForm ;_effe ._bdbg =_effe ._dbb .DSS ;if opts !=nil {_effe ._dfba =opts .Password ;};if encryptOptions !=nil {_effe ._aedd =encryptOptions ;};return _effe ,nil ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_fddcf *modelManager )GetModelFromPrimitive (primitive _cde .PdfObject )PdfModel {model ,_cdbecg :=_fddcf ._ffdgf [primitive ];if !_cdbecg {return nil ;};return model ;};func (_dfab *PdfReader )newPdfAnnotationWatermarkFromDict (_eeab *_cde .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_fca :=PdfAnnotationWatermark {};
_fca .FixedPrint =_eeab .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_fca ,nil ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_adeef *LTV )EnableChain (chain []*_ff .Certificate )error {return _adeef .enable (nil ,chain ,"")};

// NewEmbeddedFileFromObject construct a new EmbeddedFile from supplied object.
func NewEmbeddedFileFromObject (obj _cde .PdfObject )(*EmbeddedFile ,error ){_aged :=_cde .TraceToDirectObject (obj );_fdabf ,_fcgd :=_aged .(*_cde .PdfObjectDictionary );if !_fcgd {return nil ,_gf .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
};_fbda :=_cde .TraceToDirectObject (_fdabf .Get ("\u0046"));if _fbda ==nil {return nil ,_gf .New ("\u0049n\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");};_gaabc ,_fcgd :=_fbda .(*_cde .PdfObjectStream );
if !_fcgd {return nil ,_gf .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");};_cfbef :=_gaabc .PdfObjectDictionary ;_gcebc :=_cfbef .Get ("\u0050\u0061\u0072\u0061\u006d\u0073");if _gcebc ==nil {return nil ,_gf .New ("P\u0061\u0072\u0061\u006d\u0073\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0061\u0076\u0061i\u006ca\u0062\u006c\u0065");
};_fbbc ,_fcgd :=_gcebc .(*_cde .PdfObjectDictionary );if !_fcgd {return nil ,_gf .New ("I\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0061\u006d\u0073 \u006f\u0062\u006a\u0065\u0063\u0074");};_daeggd :="";_gffe :=_fbbc .Get ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d");
if _gffe !=nil {_daeggd =_gffe .(*_cde .PdfObjectString ).Str ();};_ebfc ,_fedg :=_cde .DecodeStream (_gaabc );if _fedg !=nil {return nil ,_fedg ;};_aeac :=&EmbeddedFile {Content :_ebfc ,Hash :_daeggd };return _aeac ,nil ;};type pdfFontSimple struct{fontCommon ;
_edbae *_cde .PdfIndirectObject ;_gceedd map[_fab .CharCode ]float64 ;_fecga _fab .TextEncoder ;_fegde _fab .TextEncoder ;_cefg *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _cde .PdfObject ;LastChar _cde .PdfObject ;Widths _cde .PdfObject ;Encoding _cde .PdfObject ;_cgagf *_baf .RuneCharSafeMap ;};

// ToPdfObject implements interface PdfModel.
func (_cad *PdfActionRendition )ToPdfObject ()_cde .PdfObject {_cad .PdfAction .ToPdfObject ();_dce :=_cad ._dfb ;_fga :=_dce .PdfObject .(*_cde .PdfObjectDictionary );_fga .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeRendition )));_fga .SetIfNotNil ("\u0052",_cad .R );
_fga .SetIfNotNil ("\u0041\u004e",_cad .AN );_fga .SetIfNotNil ("\u004f\u0050",_cad .OP );_fga .SetIfNotNil ("\u004a\u0053",_cad .JS );return _dce ;};

// B returns the value of the B component of the color.
func (_ggcg *PdfColorLab )B ()float64 {return _ggcg [2]};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fdegd *PdfShading )ToPdfObject ()_cde .PdfObject {_fddgfd :=_fdegd ._fdbgb ;_adcdc ,_gbdfa :=_fdegd .getShadingDict ();if _gbdfa !=nil {_fb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fdegd .ShadingType !=nil {_adcdc .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_fdegd .ShadingType );};if _fdegd .ColorSpace !=nil {_adcdc .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_fdegd .ColorSpace .ToPdfObject ());
};if _fdegd .Background !=nil {_adcdc .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_fdegd .Background );};if _fdegd .BBox !=nil {_adcdc .Set ("\u0042\u0042\u006f\u0078",_fdegd .BBox .ToPdfObject ());};if _fdegd .AntiAlias !=nil {_adcdc .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_fdegd .AntiAlias );
};return _fddgfd ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _cde .PdfObject ;Q _cde .PdfObject ;RC _cde .PdfObject ;DS _cde .PdfObject ;CL _cde .PdfObject ;IT _cde .PdfObject ;BE _cde .PdfObject ;RD _cde .PdfObject ;BS _cde .PdfObject ;LE _cde .PdfObject ;
};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_egab *PdfPattern )SetContext (ctx PdfModel ){_egab ._afcgc =ctx };

// ToPdfObject implements interface PdfModel.
func (_fef *PdfAnnotationSound )ToPdfObject ()_cde .PdfObject {_fef .PdfAnnotation .ToPdfObject ();_ffdbe :=_fef ._gfg ;_eefd :=_ffdbe .PdfObject .(*_cde .PdfObjectDictionary );_fef .PdfAnnotationMarkup .appendToPdfDictionary (_eefd );_eefd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0053\u006f\u0075n\u0064"));
_eefd .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_fef .Sound );_eefd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fef .Name );return _ffdbe ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_cde .PdfObjectInteger ;BitsPerComponent *_cde .PdfObjectInteger ;BitsPerFlag *_cde .PdfObjectInteger ;Decode *_cde .PdfObjectArray ;Function []PdfFunction ;};

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_gceac *PdfPageResources )HasShadingByName (keyName _cde .PdfObjectName )bool {_ ,_bcca :=_gceac .GetShadingByName (keyName );return _bcca ;};func (_ceggg *PdfWriter )addObject (_gbdc _cde .PdfObject )bool {_fddff :=_ceggg .hasObject (_gbdc );if !_fddff {_gega :=_cde .ResolveReferencesDeep (_gbdc ,_ceggg ._fcadd );
if _gega !=nil {_fb .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_gega );};_ceggg ._abbc =append (_ceggg ._abbc ,_gbdc );_ceggg ._fdeab [_gbdc ]=struct{}{};return true ;};return false ;};


// ToPdfObject implements interface PdfModel.
func (_ffd *PdfActionURI )ToPdfObject ()_cde .PdfObject {_ffd .PdfAction .ToPdfObject ();_de :=_ffd ._dfb ;_ggac :=_de .PdfObject .(*_cde .PdfObjectDictionary );_ggac .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeURI )));_ggac .SetIfNotNil ("\u0055\u0052\u0049",_ffd .URI );
_ggac .SetIfNotNil ("\u0049\u0073\u004da\u0070",_ffd .IsMap );return _de ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_ccc :=NewPdfAction ();_afe :=&PdfActionURI {};_afe .PdfAction =_ccc ;_ccc .SetContext (_afe );return _afe ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_efgbf *PdfShading )GetContainingPdfObject ()_cde .PdfObject {return _efgbf ._fdbgb };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dfeg *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_cde .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecfbf ,_ddce :=_cde .GetNumbersAsFloat (objects );
if _ddce !=nil {return nil ,_ddce ;};return _dfeg .ColorFromFloats (_ecfbf );};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _cde .PdfObject ;ColorSpace _cde .PdfObject ;Pattern _cde .PdfObject ;Shading _cde .PdfObject ;XObject _cde .PdfObject ;Font _cde .PdfObject ;ProcSet _cde .PdfObject ;Properties _cde .PdfObject ;_gcaaf *_cde .PdfObjectDictionary ;
_fbged *PdfPageResourcesColorspaces ;};func (_ebad *PdfWriter )copyObjects (){_gafag :=make (map[_cde .PdfObject ]_cde .PdfObject );_gdecg :=make ([]_cde .PdfObject ,0,len (_ebad ._abbc ));_gfbdd :=make (map[_cde .PdfObject ]struct{},len (_ebad ._abbc ));
_cefca :=make (map[_cde .PdfObject ]struct{});for _ ,_cadbg :=range _ebad ._abbc {_cacdd :=_ebad .copyObject (_cadbg ,_gafag ,_cefca ,false );if _ ,_edecf :=_cefca [_cadbg ];_edecf {continue ;};_gdecg =append (_gdecg ,_cacdd );_gfbdd [_cacdd ]=struct{}{};
};_ebad ._abbc =_gdecg ;_ebad ._fdeab =_gfbdd ;_ebad ._decfde =_ebad .copyObject (_ebad ._decfde ,_gafag ,nil ,false ).(*_cde .PdfIndirectObject );_ebad ._dbabf =_ebad .copyObject (_ebad ._dbabf ,_gafag ,nil ,false ).(*_cde .PdfIndirectObject );if _ebad ._fdbfc !=nil {_ebad ._fdbfc =_ebad .copyObject (_ebad ._fdbfc ,_gafag ,nil ,false ).(*_cde .PdfIndirectObject );
};if _ebad ._ceaea {_gbdb :=make (map[_cde .PdfObject ]int64 );for _efba ,_efdbg :=range _ebad ._abebf {if _geagb ,_ggcaa :=_gafag [_efba ];_ggcaa {_gbdb [_geagb ]=_efdbg ;}else {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_ebad ._abebf =_gbdb ;};};

// ToPdfObject implements interface PdfModel.
func (_eaa *PdfAnnotationSquare )ToPdfObject ()_cde .PdfObject {_eaa .PdfAnnotation .ToPdfObject ();_bagcb :=_eaa ._gfg ;_bfff :=_bagcb .PdfObject .(*_cde .PdfObjectDictionary );if _eaa .PdfAnnotationMarkup !=nil {_eaa .PdfAnnotationMarkup .appendToPdfDictionary (_bfff );
};_bfff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_bfff .SetIfNotNil ("\u0042\u0053",_eaa .BS );_bfff .SetIfNotNil ("\u0049\u0043",_eaa .IC );_bfff .SetIfNotNil ("\u0042\u0045",_eaa .BE );
_bfff .SetIfNotNil ("\u0052\u0044",_eaa .RD );return _bagcb ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _cde .StreamEncoder )(*XObjectImage ,error ){_babca :=NewXObjectImage ();return UpdateXObjectImageFromImage (_babca ,img ,cs ,encoder );};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_gcdf ,_eeag :=NewStandard14Font (basefont );if _eeag !=nil {panic (_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _gcdf ;};

// SetAlpha sets the alpha layer for the image.
func (_gddae *Image )SetAlpha (alpha []byte ){_gddae ._cbcfe =alpha };func (_caebd *PdfWriter )writeObject (_bggba int ,_bgacb _cde .PdfObject ){_fb .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_bggba );
if _efcac ,_acfdf :=_bgacb .(*_cde .PdfIndirectObject );_acfdf {_caebd ._cegabf [_bggba ]=crossReference {Type :1,Offset :_caebd ._gbacgg ,Generation :_efcac .GenerationNumber };_fgaag :=_a .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bggba );
if _eaeeda ,_bdfab :=_efcac .PdfObject .(*pdfSignDictionary );_bdfab {_eaeeda ._gdbda =_caebd ._gbacgg +int64 (len (_fgaag ));};if _efcac .PdfObject ==nil {_fb .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_efcac .PdfObject =_cde .MakeNull ();};_fgaag +=_efcac .PdfObject .WriteString ();_fgaag +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_caebd .writeString (_fgaag );return ;};if _feade ,_caeae :=_bgacb .(*_cde .PdfObjectStream );_caeae {_caebd ._cegabf [_bggba ]=crossReference {Type :1,Offset :_caebd ._gbacgg ,Generation :_feade .GenerationNumber };
_cfcfe :=_a .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bggba );_cfcfe +=_feade .PdfObjectDictionary .WriteString ();_cfcfe +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_caebd .writeString (_cfcfe );_caebd .writeBytes (_feade .Stream );
_caebd .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _dgbac ,_eabda :=_bgacb .(*_cde .PdfObjectStreams );_eabda {_caebd ._cegabf [_bggba ]=crossReference {Type :1,Offset :_caebd ._gbacgg ,Generation :_dgbac .GenerationNumber };
_eeaff :=_a .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bggba );var _aeaag []string ;var _acbea string ;var _bcee int64 ;for _fcegc ,_dfbe :=range _dgbac .Elements (){_ffda ,_gdgeg :=_dfbe .(*_cde .PdfIndirectObject );if !_gdgeg {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_bggba ,_dfbe );
continue ;};_gbdcd :=_ffda .PdfObject .WriteString ()+"\u0020";_acbea =_acbea +_gbdcd ;_aeaag =append (_aeaag ,_a .Sprintf ("\u0025\u0064\u0020%\u0064",_ffda .ObjectNumber ,_bcee ));_caebd ._cegabf [int (_ffda .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_bggba ,Index :_fcegc };
_bcee =_bcee +int64 (len ([]byte (_gbdcd )));};_beffa :=_cce .Join (_aeaag ,"\u0020")+"\u0020";_efcce :=_cde .NewFlateEncoder ();_dadcf :=_efcce .MakeStreamDict ();_dadcf .Set (_cde .PdfObjectName ("\u0054\u0079\u0070\u0065"),_cde .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_ddeeab :=int64 (_dgbac .Len ());_dadcf .Set (_cde .PdfObjectName ("\u004e"),_cde .MakeInteger (_ddeeab ));_dgffg :=int64 (len (_beffa ));_dadcf .Set (_cde .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_cde .MakeInteger (_dgffg ));_cbfgd ,_ :=_efcce .EncodeBytes ([]byte (_beffa +_acbea ));
_dabcb :=int64 (len (_cbfgd ));_dadcf .Set (_cde .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_cde .MakeInteger (_dabcb ));_eeaff +=_dadcf .WriteString ();_eeaff +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_caebd .writeString (_eeaff );
_caebd .writeBytes (_cbfgd );_caebd .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_caebd .writeString (_bgacb .WriteString ());};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_aacca :=&PdfPageResources {};_aacca ._gcaaf =_cde .MakeDict ();return _aacca ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_ffgcd *PdfWriter )GetPdfVersion ()string {return _ffgcd .getPdfVersion ()};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_eabba int ,_egbeac *PdfPage )error ;func (_badf *PdfAnnotationMarkup )appendToPdfDictionary (_gcge *_cde .PdfObjectDictionary ){_gcge .SetIfNotNil ("\u0054",_badf .T );if _badf .Popup !=nil {_gcge .Set ("\u0050\u006f\u0070u\u0070",_badf .Popup .ToPdfObject ());
};_gcge .SetIfNotNil ("\u0043\u0041",_badf .CA );_gcge .SetIfNotNil ("\u0052\u0043",_badf .RC );_gcge .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_badf .CreationDate );_gcge .SetIfNotNil ("\u0049\u0052\u0054",_badf .IRT );
_gcge .SetIfNotNil ("\u0053\u0075\u0062\u006a",_badf .Subj );_gcge .SetIfNotNil ("\u0052\u0054",_badf .RT );_gcge .SetIfNotNil ("\u0049\u0054",_badf .IT );_gcge .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_badf .ExData );};func (_gdccg *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _gdccg ._bceac };


// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_gfafd *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _gfafd .flattenFieldsWithOpts (false ,appgen ,opts );};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_baebc int ,_gbbga *PdfPage );func _cebca ()string {return _fb .Version };

// GetAllContentStreams gets all the content streams for a page as one string.
func (_cedbb *PdfPage )GetAllContentStreams ()(string ,error ){_bcdcb ,_gddd :=_cedbb .GetContentStreams ();if _gddd !=nil {return "",_gddd ;};return _cce .Join (_bcdcb ,"\u0020"),nil ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _cde .PdfObject ;V _cde .PdfObject ;};

// GetOutlineTree returns the outline tree.
func (_fbgf *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _fbgf ._cbbd };

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_aead _df .ReadSeeker ;_fecb *_cde .PdfParser ;_dbb *PdfReader ;Reader *PdfReader ;_dbaf []*PdfPage ;_deffb *PdfAcroForm ;_bdbg *DSS ;_fafe *Permissions ;_bfba _cde .XrefTable ;_feb int64 ;_abbd int ;_acbg []_cde .PdfObject ;_edaf map[_cde .PdfObject ]struct{};
_ddbf map[_cde .PdfObject ]int64 ;_ebbd map[_cde .PdfObject ]struct{};_cgaa map[_cde .PdfObject ]struct{};_eabb int64 ;_agbg bool ;_dfba string ;_aedd *EncryptOptions ;_gabgb *PdfInfo ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _cde .PdfObject ;Popup *PdfAnnotationPopup ;CA _cde .PdfObject ;RC _cde .PdfObject ;CreationDate _cde .PdfObject ;IRT _cde .PdfObject ;Subj _cde .PdfObject ;RT _cde .PdfObject ;IT _cde .PdfObject ;ExData _cde .PdfObject ;
};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_fbdb *PdfFieldButton )ToPdfObject ()_cde .PdfObject {_fbdb .PdfField .ToPdfObject ();_bgbb :=_fbdb ._gfed ;_adfa :=_bgbb .PdfObject .(*_cde .PdfObjectDictionary );_adfa .Set ("\u0046\u0054",_cde .MakeName ("\u0042\u0074\u006e"));if _fbdb .Opt !=nil {_adfa .Set ("\u004f\u0070\u0074",_fbdb .Opt );
};return _bgbb ;};

// String returns a string that describes `font`.
func (_aacf *PdfFont )String ()string {_efgfc :="";if _aacf ._dcgb .Encoder ()!=nil {_efgfc =_aacf ._dcgb .Encoder ().String ();};return _a .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_aacf ._dcgb ,_aacf .baseFields ().coreString (),_efgfc );
};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_bcc *PdfColorDeviceGray )GetNumComponents ()int {return 1};func _eaafd (_ddcgf []byte )(_gfefe ,_gccdd string ,_dbagcc error ){_fb .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_ddcgf ));
_cdacg :=_afgeb .FindIndex (_ddcgf );if _cdacg ==nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_cde .ErrTypeError ;};_efeca :=_cdacg [1];_ggbd :=_cce .Index (string (_ddcgf [_efeca :]),_ggbacf );if _ggbd < 0{_gfefe =string (_ddcgf [_efeca :]);return _gfefe ,"",nil ;};_abgbd :=_efeca +_ggbd ;_gfefe =string (_ddcgf [_efeca :_abgbd ]);
_ecaae :=_abgbd ;_ggbd =_cce .Index (string (_ddcgf [_ecaae :]),_agbb );if _ggbd < 0{_fb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dbagcc );
return "","",_cde .ErrTypeError ;};_bfca :=_ecaae +_ggbd ;_gccdd =string (_ddcgf [_ecaae :_bfca ]);return _gfefe ,_gccdd ,nil ;};

// GetPage returns the PdfPage model for the specified page number.
func (_ddfcf *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _ddfcf ._fdccd .GetCrypter ()!=nil &&!_ddfcf ._fdccd .IsAuthenticated (){return nil ,_a .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_ddfcf ._adfcd )< pageNumber {return nil ,_gf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_gcgfb :=pageNumber -1;if _gcgfb < 0{return nil ,_a .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_ffccf :=_ddfcf .PageList [_gcgfb ];
return _ffccf ,nil ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_bffba *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _cde .PdfObject ;Dest _cde .PdfObject ;H _cde .PdfObject ;PA _cde .PdfObject ;QuadPoints _cde .PdfObject ;BS _cde .PdfObject ;_bgg *PdfAction ;_efa *PdfReader ;};func (_fcc *PdfReader )newPdfAnnotationStrikeOut (_fgfb *_cde .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_eeeg :=PdfAnnotationStrikeOut {};
_daa ,_fae :=_fcc .newPdfAnnotationMarkupFromDict (_fgfb );if _fae !=nil {return nil ,_fae ;};_eeeg .PdfAnnotationMarkup =_daa ;_eeeg .QuadPoints =_fgfb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_eeeg ,nil ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_gccg *PdfFieldSignature )ToPdfObject ()_cde .PdfObject {if _gccg .PdfAnnotationWidget !=nil {_gccg .PdfAnnotationWidget .ToPdfObject ();};_gccg .PdfField .ToPdfObject ();_faegd :=_gccg ._gfed ;_cdgad :=_faegd .PdfObject .(*_cde .PdfObjectDictionary );
_cdgad .SetIfNotNil ("\u0046\u0054",_cde .MakeName ("\u0053\u0069\u0067"));_cdgad .SetIfNotNil ("\u004c\u006f\u0063\u006b",_gccg .Lock );_cdgad .SetIfNotNil ("\u0053\u0056",_gccg .SV );if _gccg .V !=nil {_cdgad .SetIfNotNil ("\u0056",_gccg .V .ToPdfObject ());
};return _faegd ;};func _afgcf (_cfgc *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_cfgc }};func _aagae (_dfbgg *_cde .PdfObjectDictionary ,_bcge *fontCommon )(*pdfFontType3 ,error ){_effec :=_decdf (_bcge );_ebec :=_dfbgg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _ebec ==nil {_ebec =_cde .MakeInteger (0);};_effec .FirstChar =_ebec ;_gcdd ,_cgfg :=_cde .GetIntVal (_ebec );if !_cgfg {_fb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ebec );
return nil ,_cde .ErrTypeError ;};_dbfaa :=_fab .CharCode (_gcdd );_ebec =_dfbgg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _ebec ==nil {_ebec =_cde .MakeInteger (255);};_effec .LastChar =_ebec ;_gcdd ,_cgfg =_cde .GetIntVal (_ebec );
if !_cgfg {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_ebec );return nil ,_cde .ErrTypeError ;
};_fbceb :=_fab .CharCode (_gcdd );_ebec =_dfbgg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _ebec !=nil {_effec .Resources =_ebec ;};_ebec =_dfbgg .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _ebec ==nil {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_ebec );
return nil ,_cde .ErrNotSupported ;};_effec .CharProcs =_ebec ;_ebec =_dfbgg .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _ebec ==nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_ebec );
return nil ,_cde .ErrNotSupported ;};_effec .FontMatrix =_ebec ;_effec ._eaad =make (map[_fab .CharCode ]float64 );_ebec =_dfbgg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _ebec !=nil {_effec .Widths =_ebec ;_adde ,_daab :=_cde .GetArray (_ebec );
if !_daab {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_ebec );return nil ,_cde .ErrTypeError ;
};_feag ,_dadf :=_adde .ToFloat64Array ();if _dadf !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_dadf ;};if len (_feag )!=int (_fbceb -_dbfaa +1){_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_fbceb -_dbfaa +1,len (_feag ));
return nil ,_cde .ErrRangeError ;};_cfdad ,_daab :=_cde .GetArray (_effec .FontMatrix );if !_daab {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_cfdad );
return nil ,_dadf ;};_aggbd ,_dadf :=_cfdad .ToFloat64Array ();if _dadf !=nil {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_dadf ;};_cgefgg :=_bc .NewMatrix (_aggbd [0],_aggbd [1],_aggbd [2],_aggbd [3],_aggbd [4],_aggbd [5]);for _dcdbd ,_bbed :=range _feag {_ffbgc ,_ :=_cgefgg .Transform (_bbed ,_bbed );_effec ._eaad [_dbfaa +_fab .CharCode (_dcdbd )]=_ffbgc ;};
};_effec .Encoding =_cde .TraceToDirectObject (_dfbgg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));_efce :=_dfbgg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _efce !=nil {_effec ._aaegd =_cde .TraceToDirectObject (_efce );_fgbe ,_cefbf :=_fdcf (_effec ._aaegd ,&_effec .fontCommon );
if _cefbf !=nil {return nil ,_cefbf ;};_effec ._dcgd =_fgbe ;};if _cddgbf :=_effec ._dcgd ;_cddgbf !=nil {_effec ._cgefe =_fab .NewCMapEncoder ("",nil ,_cddgbf );}else {_effec ._cgefe =_fab .NewPdfDocEncoder ();};return _effec ,nil ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_cgebc []byte ;_dcacd []uint32 ;_eebg *_cde .PdfObjectStream ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_gdcaea ,_gffbf :=_cgefg (basefont );if _gffbf !=nil {return nil ,_gffbf ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_gdcaea ._fecga =_fab .NewWinAnsiEncoder ();};return &PdfFont {_dcgb :&_gdcaea },nil ;
};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_deaf PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_cde .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_fddgb []_cde .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_bdcc []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _cde .PdfObjectName ;};

// A returns the value of the A component of the color.
func (_ecdf *PdfColorCalRGB )A ()float64 {return _ecdf [0]};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_agaa *_cde .PdfIndirectObject ;Certs []*_cde .PdfObjectStream ;OCSPs []*_cde .PdfObjectStream ;CRLs []*_cde .PdfObjectStream ;VRI map[string ]*VRI ;_fdcd map[string ]*_cde .PdfObjectStream ;_ddff map[string ]*_cde .PdfObjectStream ;_bcfgd map[string ]*_cde .PdfObjectStream ;
};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_fcg *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_gf .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_eeffg ,_ccde :=_bbb .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cbcfe ,img ._gdbc );if _ccde !=nil {return img ,_ccde ;};_edce ,_ccde :=_bbb .GrayConverter .Convert (_eeffg );if _ccde !=nil {return img ,_ccde ;
};return _edggb (_edce .Base ()),nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_bdae *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_cceb *PdfColorspaceDeviceN )ToPdfObject ()_cde .PdfObject {_acdd :=_cde .MakeArray (_cde .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_acdd .Append (_cceb .ColorantNames );_acdd .Append (_cceb .AlternateSpace .ToPdfObject ());_acdd .Append (_cceb .TintTransform .ToPdfObject ());
if _cceb .Attributes !=nil {_acdd .Append (_cceb .Attributes .ToPdfObject ());};if _cceb ._gbdd !=nil {_cceb ._gbdd .PdfObject =_acdd ;return _cceb ._gbdd ;};return _acdd ;};func (_fbfcb *PdfShading )getShadingDict ()(*_cde .PdfObjectDictionary ,error ){_eggcb :=_fbfcb ._fdbgb ;
if _eggba ,_fffga :=_eggcb .(*_cde .PdfIndirectObject );_fffga {_eeddc ,_aggcd :=_eggba .PdfObject .(*_cde .PdfObjectDictionary );if !_aggcd {return nil ,_cde .ErrTypeError ;};return _eeddc ,nil ;}else if _gaffd ,_gggda :=_eggcb .(*_cde .PdfObjectStream );
_gggda {return _gaffd .PdfObjectDictionary ,nil ;}else if _dade ,_eaeb :=_eggcb .(*_cde .PdfObjectDictionary );_eaeb {return _dade ,nil ;}else {_fb .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");
return nil ,_cde .ErrTypeError ;};};func (_cbab *LTV )generateVRIKey (_cebaa *PdfSignature )(string ,error ){_fccfa ,_gbab :=_efdfg (_cebaa .Contents .Bytes ());if _gbab !=nil {return "",_gbab ;};return _cce .ToUpper (_f .EncodeToString (_fccfa )),nil ;
};func (_dggee *PdfReader )buildPageList (_ggfgc *_cde .PdfIndirectObject ,_fccbg *_cde .PdfIndirectObject ,_fcgef map[_cde .PdfObject ]struct{})error {if _ggfgc ==nil {return nil ;};if _ ,_dceacb :=_fcgef [_ggfgc ];_dceacb {_fb .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_ggfgc .ObjectNumber );
return nil ;};_fcgef [_ggfgc ]=struct{}{};_aabc ,_bface :=_ggfgc .PdfObject .(*_cde .PdfObjectDictionary );if !_bface {return _gf .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_fcee ,_bface :=(*_aabc ).Get ("\u0054\u0079\u0070\u0065").(*_cde .PdfObjectName );
if !_bface {if _aabc .Get ("\u004b\u0069\u0064\u0073")==nil {return _gf .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_fb .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_fcee =_cde .MakeName ("\u0050\u0061\u0067e\u0073");_aabc .Set ("\u0054\u0079\u0070\u0065",_fcee );};_fb .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_fcee ,_ggfgc );
if *_fcee =="\u0050\u0061\u0067\u0065"{_ggdeee ,_ffcda :=_dggee .newPdfPageFromDict (_aabc );if _ffcda !=nil {return _ffcda ;};_ggdeee .setContainer (_ggfgc );if _fccbg !=nil {_aabc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fccbg );};_dggee ._adfcd =append (_dggee ._adfcd ,_ggfgc );
_dggee .PageList =append (_dggee .PageList ,_ggdeee );return nil ;};if *_fcee !="\u0050\u0061\u0067e\u0073"{_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_fcee );
return _gf .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _fccbg !=nil {_aabc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fccbg );};if !_dggee ._gbeac {_fbgad :=_dggee .traverseObjectData (_ggfgc );if _fbgad !=nil {return _fbgad ;};};_gfaef ,_cdgdc :=_dggee ._fdccd .Resolve (_aabc .Get ("\u004b\u0069\u0064\u0073"));
if _cdgdc !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _cdgdc ;};var _gaeeb *_cde .PdfObjectArray ;
_gaeeb ,_bface =_gfaef .(*_cde .PdfObjectArray );if !_bface {_cgegf ,_ddgaa :=_gfaef .(*_cde .PdfIndirectObject );if !_ddgaa {return _gf .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};
_gaeeb ,_bface =_cgegf .PdfObject .(*_cde .PdfObjectArray );if !_bface {return _gf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_fb .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_gaeeb );
for _fbcbc ,_cebbcc :=range _gaeeb .Elements (){_gffc ,_eadc :=_cde .GetIndirect (_cebbcc );if !_eadc {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_gffc );
return _gf .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gaeeb .Set (_fbcbc ,_gffc );_cdgdc =_dggee .buildPageList (_gffc ,_ggfgc ,_fcgef );if _cdgdc !=nil {return _cdgdc ;
};};return nil ;};

// GetStructRoot gets the StructTreeRoot object
func (_bgccd *PdfPage )GetStructTreeRoot ()(*_cde .PdfObject ,bool ){_ebbda ,_bdegc :=_bgccd ._cgdb .GetCatalogStructTreeRoot ();return &_ebbda ,_bdegc ;};

// ToPdfObject implements interface PdfModel.
func (_fecgba *PdfSignature )ToPdfObject ()_cde .PdfObject {_cfbad :=_fecgba ._gfbaeg ;var _fcffc *_cde .PdfObjectDictionary ;if _caecc ,_eeeaf :=_cfbad .PdfObject .(*pdfSignDictionary );_eeeaf {_fcffc =_caecc .PdfObjectDictionary ;}else {_fcffc =_cfbad .PdfObject .(*_cde .PdfObjectDictionary );
};_fcffc .SetIfNotNil ("\u0054\u0079\u0070\u0065",_fecgba .Type );_fcffc .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_fecgba .Filter );_fcffc .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_fecgba .SubFilter );_fcffc .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_fecgba .ByteRange );
_fcffc .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fecgba .Contents );_fcffc .SetIfNotNil ("\u0043\u0065\u0072\u0074",_fecgba .Cert );_fcffc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fecgba .Name );_fcffc .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_fecgba .Reason );
_fcffc .SetIfNotNil ("\u004d",_fecgba .M );_fcffc .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_fecgba .Reference );_fcffc .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_fecgba .Changes );_fcffc .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_fecgba .ContactInfo );
return _cfbad ;};

// ToInteger convert to an integer format.
func (_bdbb *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_acbaa :=_ce .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_acbaa *_bdbb .C ()),uint32 (_acbaa *_bdbb .M ()),uint32 (_acbaa *_bdbb .Y ()),uint32 (_acbaa *_bdbb .K ())};};

// ToPdfObject implements interface PdfModel.
func (_fcbc *PdfAnnotationWidget )ToPdfObject ()_cde .PdfObject {_fcbc .PdfAnnotation .ToPdfObject ();_cfa :=_fcbc ._gfg ;_dfafg :=_cfa .PdfObject .(*_cde .PdfObjectDictionary );if _fcbc ._ggc {return _cfa ;};_fcbc ._ggc =true ;_dfafg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_dfafg .SetIfNotNil ("\u0048",_fcbc .H );_dfafg .SetIfNotNil ("\u004d\u004b",_fcbc .MK );_dfafg .SetIfNotNil ("\u0041",_fcbc .A );_dfafg .SetIfNotNil ("\u0041\u0041",_fcbc .AA );_dfafg .SetIfNotNil ("\u0042\u0053",_fcbc .BS );_bfccf :=_fcbc .Parent ;if _fcbc ._aad !=nil {if _fcbc ._aad ._gfed ==_fcbc ._gfg {_fcbc ._aad .ToPdfObject ();
};_bfccf =_fcbc ._aad .GetContainingPdfObject ();};if _bfccf !=_cfa {_dfafg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bfccf );};_fcbc ._ggc =false ;return _cfa ;};func (_ceacd *PdfWriter )flushWriter ()error {if _ceacd ._cbffd ==nil {_ceacd ._cbffd =_ceacd ._efccc .Flush ();
};return _ceacd ._cbffd ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_facdf *PdfFont )CharcodesToUnicodeWithStats (charcodes []_fab .CharCode )(_afff []rune ,_acdb ,_gggfg int ){_abeb ,_acdb ,_gggfg :=_facdf .CharcodesToStrings (charcodes );return []rune (_cce .Join (_abeb ,"")),_acdb ,_gggfg ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_aaccg :=NewPdfAnnotation ();_bbec :=&PdfAnnotationPrinterMark {};_bbec .PdfAnnotation =_aaccg ;_aaccg .SetContext (_bbec );return _bbec ;};

// B returns the value of the blue component of the color.
func (_daegg *PdfColorDeviceRGB )B ()float64 {return _daegg [2]};func _bbaeg (_cefba string )(map[_fab .CharCode ]_fab .GlyphName ,error ){_bgbg :=_cce .Split (_cefba ,"\u000a");_bbdg :=make (map[_fab .CharCode ]_fab .GlyphName );for _ ,_cfgca :=range _bgbg {_adfeb :=_fgecc .FindStringSubmatch (_cfgca );
if _adfeb ==nil {continue ;};_fgefg ,_efde :=_adfeb [1],_adfeb [2];_adggg ,_bbfe :=_ccg .Atoi (_fgefg );if _bbfe !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_cfgca );
return nil ,_cde .ErrTypeError ;};_bbdg [_fab .CharCode (_adggg )]=_fab .GlyphName (_efde );};_fb .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_bbdg );
return _bbdg ,nil ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );func _dgcff (_beee _cde .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_gdeac :=&PdfColorspaceDeviceNAttributes {};var _adfg *_cde .PdfObjectDictionary ;switch _fbaa :=_beee .(type ){case *_cde .PdfIndirectObject :_gdeac ._gcfba =_fbaa ;
var _baad bool ;_adfg ,_baad =_fbaa .PdfObject .(*_cde .PdfObjectDictionary );if !_baad {_fb .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_gf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_cde .PdfObjectDictionary :_adfg =_fbaa ;case *_cde .PdfObjectReference :_ecbcc :=_fbaa .Resolve ();return _dgcff (_ecbcc );default:_fb .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_gf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ddfg :=_adfg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_ddfg !=nil {_dgea ,_eddg :=_cde .TraceToDirectObject (_ddfg ).(*_cde .PdfObjectName );if !_eddg {_fb .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_gf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gdeac .Subtype =_dgea ;};if _abca :=_adfg .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_abca !=nil {_gdeac .Colorants =_abca ;};if _baadg :=_adfg .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_baadg !=nil {_gdeac .Process =_baadg ;};if _gdccd :=_adfg .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_gdccd !=nil {_gdeac .MixingHints =_gdccd ;};return _gdeac ,nil ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_becaed *PdfShadingType1 )ToPdfObject ()_cde .PdfObject {_becaed .PdfShading .ToPdfObject ();_cccgb ,_fddfaf :=_becaed .getShadingDict ();if _fddfaf !=nil {_fb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _becaed .Domain !=nil {_cccgb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_becaed .Domain );};if _becaed .Matrix !=nil {_cccgb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_becaed .Matrix );};if _becaed .Function !=nil {if len (_becaed .Function )==1{_cccgb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_becaed .Function [0].ToPdfObject ());
}else {_aeffe :=_cde .MakeArray ();for _ ,_fgdab :=range _becaed .Function {_aeffe .Append (_fgdab .ToPdfObject ());};_cccgb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aeffe );};};return _becaed ._fdbgb ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_aceb *Image )AlphaMap (mapFunc AlphaMapFunc ){for _eaeed ,_cebadg :=range _aceb ._cbcfe {_aceb ._cbcfe [_eaeed ]=mapFunc (_cebadg );};};func (_addec *PdfWriter )AttachFile (file *EmbeddedFile )error {_egebe :=_addec ._fafec ;if _egebe ==nil {_egebe =_gfdga ();
};_dbaae :=_egebe .addEmbeddedFile (file );if _dbaae !=nil {return _dbaae ;};_addec ._fafec =_egebe ;return nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_fdab :=&PdfAppender {_aead :reader ._dfgb ,Reader :reader ,_fecb :reader ._fdccd ,_cgaa :reader ._acfcd };_egcb ,_ecfg :=_fdab ._aead .Seek (0,_df .SeekEnd );if _ecfg !=nil {return nil ,_ecfg ;
};_fdab ._eabb =_egcb ;if _ ,_ecfg =_fdab ._aead .Seek (0,_df .SeekStart );_ecfg !=nil {return nil ,_ecfg ;};_fdab ._dbb ,_ecfg =NewPdfReader (_fdab ._aead );if _ecfg !=nil {return nil ,_ecfg ;};for _ ,_cfae :=range _fdab .Reader .GetObjectNums (){if _fdab ._abbd < _cfae {_fdab ._abbd =_cfae ;
};};_fdab ._bfba =_fdab ._fecb .GetXrefTable ();_fdab ._feb =_fdab ._fecb .GetXrefOffset ();_fdab ._dbaf =append (_fdab ._dbaf ,_fdab ._dbb .PageList ...);_fdab ._edaf =make (map[_cde .PdfObject ]struct{});_fdab ._ddbf =make (map[_cde .PdfObject ]int64 );
_fdab ._ebbd =make (map[_cde .PdfObject ]struct{});_fdab ._deffb =_fdab ._dbb .AcroForm ;_fdab ._bdbg =_fdab ._dbb .DSS ;return _fdab ,nil ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_fdec :=NewPdfAnnotation ();_cfc :=&PdfAnnotationRichMedia {};_cfc .PdfAnnotation =_fdec ;_fdec .SetContext (_cfc );return _cfc ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_gbaeed *PdfWriter )SetRotation (rotate int64 )error {_dedb ,_deabee :=_cde .GetDict (_gbaeed ._gabdc );if !_deabee {return ErrTypeCheck ;};_dedb .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_cde .MakeInteger (rotate ));return nil ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_agaba *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_dga ,_fece :=color .(*PdfColorCalRGB );if !_fece {_fb .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_deaeag :=_dga .A ();_daff :=_dga .B ();_fbca :=_dga .C ();X :=_agaba .Matrix [0]*_ce .Pow (_deaeag ,_agaba .Gamma [0])+_agaba .Matrix [3]*_ce .Pow (_daff ,_agaba .Gamma [1])+_agaba .Matrix [6]*_ce .Pow (_fbca ,_agaba .Gamma [2]);
Y :=_agaba .Matrix [1]*_ce .Pow (_deaeag ,_agaba .Gamma [0])+_agaba .Matrix [4]*_ce .Pow (_daff ,_agaba .Gamma [1])+_agaba .Matrix [7]*_ce .Pow (_fbca ,_agaba .Gamma [2]);Z :=_agaba .Matrix [2]*_ce .Pow (_deaeag ,_agaba .Gamma [0])+_agaba .Matrix [5]*_ce .Pow (_daff ,_agaba .Gamma [1])+_agaba .Matrix [8]*_ce .Pow (_fbca ,_agaba .Gamma [2]);
_dacf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cacf :=-0.969256*X +1.875992*Y +0.041556*Z ;_aedcb :=0.055648*X +-0.204043*Y +1.057311*Z ;_dacf =_ce .Min (_ce .Max (_dacf ,0),1.0);_cacf =_ce .Min (_ce .Max (_cacf ,0),1.0);_aedcb =_ce .Min (_ce .Max (_aedcb ,0),1.0);
return NewPdfColorDeviceRGB (_dacf ,_cacf ,_aedcb ),nil ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_dbfa *PdfFontDescriptor )ToPdfObject ()_cde .PdfObject {_egcfb :=_cde .MakeDict ();if _dbfa ._bebgf ==nil {_dbfa ._bebgf =&_cde .PdfIndirectObject {};};_dbfa ._bebgf .PdfObject =_egcfb ;_egcfb .Set ("\u0054\u0079\u0070\u0065",_cde .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _dbfa .FontName !=nil {_egcfb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dbfa .FontName );};if _dbfa .FontFamily !=nil {_egcfb .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_dbfa .FontFamily );};if _dbfa .FontStretch !=nil {_egcfb .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_dbfa .FontStretch );
};if _dbfa .FontWeight !=nil {_egcfb .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_dbfa .FontWeight );};if _dbfa .Flags !=nil {_egcfb .Set ("\u0046\u006c\u0061g\u0073",_dbfa .Flags );};if _dbfa .FontBBox !=nil {_egcfb .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_dbfa .FontBBox );
};if _dbfa .ItalicAngle !=nil {_egcfb .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_dbfa .ItalicAngle );};if _dbfa .Ascent !=nil {_egcfb .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_dbfa .Ascent );};if _dbfa .Descent !=nil {_egcfb .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_dbfa .Descent );
};if _dbfa .Leading !=nil {_egcfb .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_dbfa .Leading );};if _dbfa .CapHeight !=nil {_egcfb .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_dbfa .CapHeight );};if _dbfa .XHeight !=nil {_egcfb .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_dbfa .XHeight );
};if _dbfa .StemV !=nil {_egcfb .Set ("\u0053\u0074\u0065m\u0056",_dbfa .StemV );};if _dbfa .StemH !=nil {_egcfb .Set ("\u0053\u0074\u0065m\u0048",_dbfa .StemH );};if _dbfa .AvgWidth !=nil {_egcfb .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_dbfa .AvgWidth );
};if _dbfa .MaxWidth !=nil {_egcfb .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_dbfa .MaxWidth );};if _dbfa .MissingWidth !=nil {_egcfb .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_dbfa .MissingWidth );};if _dbfa .FontFile !=nil {_egcfb .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_dbfa .FontFile );
};if _dbfa .FontFile2 !=nil {_egcfb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_dbfa .FontFile2 );};if _dbfa .FontFile3 !=nil {_egcfb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_dbfa .FontFile3 );};if _dbfa .CharSet !=nil {_egcfb .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_dbfa .CharSet );
};if _dbfa .Style !=nil {_egcfb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dbfa .FontName );};if _dbfa .Lang !=nil {_egcfb .Set ("\u004c\u0061\u006e\u0067",_dbfa .Lang );};if _dbfa .FD !=nil {_egcfb .Set ("\u0046\u0044",_dbfa .FD );};if _dbfa .CIDSet !=nil {_egcfb .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_dbfa .CIDSet );
};return _dbfa ._bebgf ;};

// Encoder returns the font's text encoder.
func (_bcdg pdfCIDFontType2 )Encoder ()_fab .TextEncoder {return _bcdg ._eadg };

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1. Return a value the /Widths array (charWidths) if there is one.
//  2. If the font has the same name as a standard 14 font then return width=250.
//  3. Otherwise return no match and let the caller substitute a default.
func (_afeg pdfFontSimple )GetCharMetrics (code _fab .CharCode )(_baf .CharMetrics ,bool ){if _ceedc ,_bdcfb :=_afeg ._gceedd [code ];_bdcfb {return _baf .CharMetrics {Wx :_ceedc },true ;};if _baf .IsStdFont (_baf .StdFontName (_afeg ._bbdf )){return _baf .CharMetrics {Wx :250},true ;
};return _baf .CharMetrics {},false ;};

// String returns the name of the colorspace (DeviceN).
func (_ceda *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_gbae *Image )ColorAt (x ,y int )(_d .Color ,error ){_fcdff :=_bbb .BytesPerLine (int (_gbae .Width ),int (_gbae .BitsPerComponent ),_gbae .ColorComponents );switch _gbae .ColorComponents {case 1:return _bbb .ColorAtGrayscale (x ,y ,int (_gbae .BitsPerComponent ),_fcdff ,_gbae .Data ,_gbae ._gdbc );
case 3:return _bbb .ColorAtNRGBA (x ,y ,int (_gbae .Width ),_fcdff ,int (_gbae .BitsPerComponent ),_gbae .Data ,_gbae ._cbcfe ,_gbae ._gdbc );case 4:return _bbb .ColorAtCMYK (x ,y ,int (_gbae .Width ),_gbae .Data ,_gbae ._gdbc );};_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gbae .ColorComponents ,_gbae .BitsPerComponent );
return nil ,_gf .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _cde .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _aage *_cde .PdfIndirectObject ;var _aacgf *_cde .PdfObjectName ;var _agab *_cde .PdfObjectArray ;if _gbea ,_bbdd :=obj .(*_cde .PdfIndirectObject );
_bbdd {_aage =_gbea ;};obj =_cde .TraceToDirectObject (obj );switch _dacb :=obj .(type ){case *_cde .PdfObjectArray :_agab =_dacb ;case *_cde .PdfObjectName :_aacgf =_dacb ;};if _aacgf !=nil {switch *_aacgf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_fb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_aacgf );return nil ,_cdfbf ;};};if _agab !=nil &&_agab .Len ()> 0{var _dcdg _cde .PdfObject =_aage ;
if _aage ==nil {_dcdg =_agab ;};if _bbc ,_edc :=_cde .GetName (_agab .Get (0));_edc {switch _bbc .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _agab .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _agab .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _agab .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _cgeb (_dcdg );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _adeg (_dcdg );
case "\u004c\u0061\u0062":return _bgcd (_dcdg );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _aaba (_dcdg );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _abd (_dcdg );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _bcbe (_dcdg );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _bcef (_dcdg );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _edaeb (_dcdg );default:_fb .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_bbc );
};};};_fb .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_baca *PdfField )IsTerminal ()bool {return len (_baca .Kids )==0};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_fbagc *PdfPageResources )GetPatternByName (keyName _cde .PdfObjectName )(*PdfPattern ,bool ){if _fbagc .Pattern ==nil {return nil ,false ;};_fgfg ,_afgf :=_cde .TraceToDirectObject (_fbagc .Pattern ).(*_cde .PdfObjectDictionary );if !_afgf {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fbagc .Pattern );
return nil ,false ;};if _adgeg :=_fgfg .Get (keyName );_adgeg !=nil {_bffda ,_ggage :=_bbgad (_adgeg );if _ggage !=nil {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_ggage );
return nil ,false ;};return _bffda ,true ;};return nil ,false ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_bdeb *PdfField )ToPdfObject ()_cde .PdfObject {_ebgb :=_bdeb ._gfed ;_effg :=_ebgb .PdfObject .(*_cde .PdfObjectDictionary );_dcfc :=_cde .MakeArray ();for _ ,_eaf :=range _bdeb .Kids {_dcfc .Append (_eaf .ToPdfObject ());};for _ ,_egba :=range _bdeb .Annotations {if _egba ._gfg !=_bdeb ._gfed {_dcfc .Append (_egba .GetContext ().ToPdfObject ());
};};if _bdeb .Parent !=nil {_effg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bdeb .Parent .GetContainingPdfObject ());};if _dcfc .Len ()> 0{_effg .Set ("\u004b\u0069\u0064\u0073",_dcfc );};_effg .SetIfNotNil ("\u0046\u0054",_bdeb .FT );_effg .SetIfNotNil ("\u0054",_bdeb .T );
_effg .SetIfNotNil ("\u0054\u0055",_bdeb .TU );_effg .SetIfNotNil ("\u0054\u004d",_bdeb .TM );_effg .SetIfNotNil ("\u0046\u0066",_bdeb .Ff );_effg .SetIfNotNil ("\u0056",_bdeb .V );_effg .SetIfNotNil ("\u0044\u0056",_bdeb .DV );_effg .SetIfNotNil ("\u0041\u0041",_bdeb .AA );
if _bdeb .VariableText !=nil {_effg .SetIfNotNil ("\u0044\u0041",_bdeb .VariableText .DA );_effg .SetIfNotNil ("\u0051",_bdeb .VariableText .Q );_effg .SetIfNotNil ("\u0044\u0053",_bdeb .VariableText .DS );_effg .SetIfNotNil ("\u0052\u0056",_bdeb .VariableText .RV );
};return _ebgb ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_acfcd :map[_cde .PdfObject ]struct{}{},_bgffc :_cccf (),_fdccd :_cde .NewParserFromString (txt )};};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_acege *Image )SetSamples (samples []uint32 ){if _acege .BitsPerComponent < 8{samples =_acege .samplesAddPadding (samples );};_cbdc :=_afa .ResampleUint32 (samples ,int (_acege .BitsPerComponent ),8);_dgfg :=make ([]byte ,len (_cbdc ));for _ggffe ,_dcgbb :=range _cbdc {_dgfg [_ggffe ]=byte (_dcgbb );
};_acege .Data =_dgfg ;};func _aaba (_cgddg _cde .PdfObject )(*PdfColorspaceICCBased ,error ){_deafb :=&PdfColorspaceICCBased {};if _deage ,_bddbg :=_cgddg .(*_cde .PdfIndirectObject );_bddbg {_deafb ._ebcg =_deage ;};_cgddg =_cde .TraceToDirectObject (_cgddg );
_ggad ,_eaef :=_cgddg .(*_cde .PdfObjectArray );if !_eaef {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ggad .Len ()!=2{return nil ,_a .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_cgddg =_cde .TraceToDirectObject (_ggad .Get (0));_adff ,_eaef :=_cgddg .(*_cde .PdfObjectName );if !_eaef {return nil ,_a .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_adff !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_a .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_cgddg =_ggad .Get (1);
_gcbe ,_eaef :=_cde .GetStream (_cgddg );if !_eaef {_fb .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_cgddg );
return nil ,_a .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_aege :=_gcbe .PdfObjectDictionary ;_aceg ,_eaef :=_aege .Get ("\u004e").(*_cde .PdfObjectInteger );
if !_eaef {return nil ,_a .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_aceg !=1&&*_aceg !=3&&*_aceg !=4{return nil ,_a .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_deafb .N =int (*_aceg );if _ggba :=_aege .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_ggba !=nil {_eebcf ,_affdf :=NewPdfColorspaceFromPdfObject (_ggba );if _affdf !=nil {return nil ,_affdf ;};_deafb .Alternate =_eebcf ;};if _dcgg :=_aege .Get ("\u0052\u0061\u006eg\u0065");
_dcgg !=nil {_dcgg =_cde .TraceToDirectObject (_dcgg );_agaf ,_dcaa :=_dcgg .(*_cde .PdfObjectArray );if !_dcaa {return nil ,_a .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _agaf .Len ()!=2*_deafb .N {return nil ,_a .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_ceeg ,_cfccf :=_agaf .GetAsFloat64Slice ();if _cfccf !=nil {return nil ,_cfccf ;};_deafb .Range =_ceeg ;}else {_deafb .Range =make ([]float64 ,2*_deafb .N );for _eaca :=0;_eaca < _deafb .N ;_eaca ++{_deafb .Range [2*_eaca ]=0.0;_deafb .Range [2*_eaca +1]=1.0;
};};if _eaeg :=_aege .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_eaeg !=nil {_bdfd ,_daba :=_eaeg .(*_cde .PdfObjectStream );if !_daba {return nil ,_a .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_deafb .Metadata =_bdfd ;};_cebad ,_abaa :=_cde .DecodeStream (_gcbe );if _abaa !=nil {return nil ,_abaa ;};_deafb .Data =_cebad ;_deafb ._eaeab =_gcbe ;return _deafb ,nil ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_cgd *PdfAnnotationWidget )Field ()*PdfField {return _cgd ._aad };

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_cde .PdfObjectStream )(*XObjectForm ,error ){_cbagf :=&XObjectForm {};_cbagf ._fbeeg =stream ;_fagee :=*(stream .PdfObjectDictionary );_egeaa ,_dabae :=_cde .NewEncoderFromStream (stream );if _dabae !=nil {return nil ,_dabae ;
};_cbagf .Filter =_egeaa ;if _bbdgf :=_fagee .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_bbdgf !=nil {_fedab ,_ccbc :=_bbdgf .(*_cde .PdfObjectName );if !_ccbc {return nil ,_gf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};
if *_fedab !="\u0046\u006f\u0072\u006d"{_fb .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_gf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _afga :=_fagee .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_afga !=nil {_cbagf .FormType =_afga ;};if _ffdbg :=_fagee .Get ("\u0042\u0042\u006f\u0078");_ffdbg !=nil {_cbagf .BBox =_ffdbg ;};if _ccdbf :=_fagee .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_ccdbf !=nil {_cbagf .Matrix =_ccdbf ;};if _aaaf :=_fagee .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_aaaf !=nil {_aaaf =_cde .TraceToDirectObject (_aaaf );_eaega ,_bcdgb :=_aaaf .(*_cde .PdfObjectDictionary );if !_bcdgb {_fb .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_cde .ErrTypeError ;};_bcff ,_dgecc :=NewPdfPageResourcesFromDict (_eaega );if _dgecc !=nil {_fb .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_dgecc ;};_cbagf .Resources =_bcff ;_fb .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_cbagf .Resources );};_cbagf .Group =_fagee .Get ("\u0047\u0072\u006fu\u0070");_cbagf .Ref =_fagee .Get ("\u0052\u0065\u0066");
_cbagf .MetaData =_fagee .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_cbagf .PieceInfo =_fagee .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_cbagf .LastModified =_fagee .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_cbagf .StructParent =_fagee .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_cbagf .StructParents =_fagee .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_cbagf .OPI =_fagee .Get ("\u004f\u0050\u0049");
_cbagf .OC =_fagee .Get ("\u004f\u0043");_cbagf .Name =_fagee .Get ("\u004e\u0061\u006d\u0065");_cbagf .Stream =stream .Stream ;return _cbagf ,nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _cde .PdfObject ;T3DV _cde .PdfObject ;T3DA _cde .PdfObject ;T3DI _cde .PdfObject ;T3DB _cde .PdfObject ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_ccgf *_cde .PdfIndirectObject ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_aaacc *PdfFont )GetCharMetrics (code _fab .CharCode )(CharMetrics ,bool ){var _afefb _baf .CharMetrics ;switch _fdgf :=_aaacc ._dcgb .(type ){case *pdfFontSimple :if _gdcaef ,_fbcef :=_fdgf .GetCharMetrics (code );_fbcef {return _gdcaef ,_fbcef ;
};case *pdfFontType0 :if _dbfbd ,_fcca :=_fdgf .GetCharMetrics (code );_fcca {return _dbfbd ,_fcca ;};case *pdfCIDFontType0 :if _cbbge ,_ffbac :=_fdgf .GetCharMetrics (code );_ffbac {return _cbbge ,_ffbac ;};case *pdfCIDFontType2 :if _bafe ,_ddfb :=_fdgf .GetCharMetrics (code );
_ddfb {return _bafe ,_ddfb ;};case *pdfFontType3 :if _gbcg ,_aaga :=_fdgf .GetCharMetrics (code );_aaga {return _gbcg ,_aaga ;};default:_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_aaacc ._dcgb );
return _afefb ,false ;};if _fbgb ,_dccf :=_aaacc .GetFontDescriptor ();_dccf ==nil &&_fbgb !=nil {return _baf .CharMetrics {Wx :_fbgb ._afadf },true ;};_fb .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_aaacc );
return _afefb ,false ;};var ImageHandling ImageHandler =DefaultImageHandler {};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_fagbd *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _gf .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_fagbd .S =subtype ;return nil ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_geadd *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _bfffe []*PdfOutlineTreeNode ;var _fdgg []string ;var _cfcaa func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_cfcaa =func (_aeecf *PdfOutlineTreeNode ,_dceae *[]*PdfOutlineTreeNode ,_fbbe *[]string ,_dccba int ){if _aeecf ==nil {return ;
};if _aeecf ._aeefd ==nil {_fb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_gfge ,_gcdea :=_aeecf ._aeefd .(*PdfOutlineItem );if _gcdea {*_dceae =append (*_dceae ,&_gfge .PdfOutlineTreeNode );
_bfga :=_cce .Repeat ("\u0020",_dccba *2)+_gfge .Title .Decoded ();*_fbbe =append (*_fbbe ,_bfga );};if _aeecf .First !=nil {_dabaf :=_cce .Repeat ("\u0020",_dccba *2)+"\u002b";*_fbbe =append (*_fbbe ,_dabaf );_cfcaa (_aeecf .First ,_dceae ,_fbbe ,_dccba +1);
};if _gcdea &&_gfge .Next !=nil {_cfcaa (_gfge .Next ,_dceae ,_fbbe ,_dccba );};};_cfcaa (_geadd ._cbbd ,&_bfffe ,&_fdgg ,0);return _bfffe ,_fdgg ,nil ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";
TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_agde *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_cde .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_gf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_aedgd :=&PdfColorPattern {};_abgfb ,_fgecf :=objects [len (objects )-1].(*_cde .PdfObjectName );if !_fgecf {_fb .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_aedgd .PatternName =*_abgfb ;if len (objects )> 1{_gbdgb :=objects [0:len (objects )-1];if _agde .UnderlyingCS ==nil {_fb .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_gf .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_fcaac ,_bgaf :=_agde .UnderlyingCS .ColorFromPdfObjects (_gbdgb );if _bgaf !=nil {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_bgaf );
return nil ,_bgaf ;};_aedgd .Color =_fcaac ;};return _aedgd ,nil ;};func _egdc (_cefaf *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_cefaf }};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_gddb :=&PdfColorspaceCalRGB {};_gddb .BlackPoint =[]float64 {0.0,0.0,0.0};_gddb .Gamma =[]float64 {1.0,1.0,1.0};_gddb .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _gddb ;};func (_cegg *PdfReader )newPdfAnnotationTextFromDict (_afdf *_cde .PdfObjectDictionary )(*PdfAnnotationText ,error ){_cagg :=PdfAnnotationText {};
_ege ,_ddbg :=_cegg .newPdfAnnotationMarkupFromDict (_afdf );if _ddbg !=nil {return nil ,_ddbg ;};_cagg .PdfAnnotationMarkup =_ege ;_cagg .Open =_afdf .Get ("\u004f\u0070\u0065\u006e");_cagg .Name =_afdf .Get ("\u004e\u0061\u006d\u0065");_cagg .State =_afdf .Get ("\u0053\u0074\u0061t\u0065");
_cagg .StateModel =_afdf .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_cagg ,nil ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_cde .PdfObjectArray ;ExtGState _cde .PdfObject ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_ceed *PdfAppender )SetDocInfo (info *PdfInfo ){_ceed ._gabgb =info };func (_dbcef *PdfWriter )writeObjectsInStreams (_aedad map[_cde .PdfObject ]bool )error {for _ ,_ddcbd :=range _dbcef ._abbc {if _cage :=_aedad [_ddcbd ];_cage {continue ;};_afeef :=int64 (0);
switch _gbfd :=_ddcbd .(type ){case *_cde .PdfIndirectObject :_afeef =_gbfd .ObjectNumber ;case *_cde .PdfObjectStream :_afeef =_gbfd .ObjectNumber ;case *_cde .PdfObjectStreams :_afeef =_gbfd .ObjectNumber ;default:_fb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_ddcbd );
return ErrTypeCheck ;};if _dbcef ._febcf !=nil &&_ddcbd !=_dbcef ._fdbfc {_egdec :=_dbcef ._febcf .Encrypt (_ddcbd ,_afeef ,0);if _egdec !=nil {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_egdec );
return _egdec ;};};_dbcef .writeObject (int (_afeef ),_ddcbd );};return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_daef *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func _gfaff (_gfeec []byte )bool {if len (_gfeec )< 4{return true ;};for _afceag :=range _gfeec [:4]{_aefee :=rune (_afceag );if !_dd .Is (_dd .ASCII_Hex_Digit ,_aefee )&&!_dd .IsSpace (_aefee ){return true ;
};};return false ;};

// ToPdfObject implements interface PdfModel.
func (_efed *PdfAnnotationTrapNet )ToPdfObject ()_cde .PdfObject {_efed .PdfAnnotation .ToPdfObject ();_ebeg :=_efed ._gfg ;_gfdg :=_ebeg .PdfObject .(*_cde .PdfObjectDictionary );_gfdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _ebeg ;};

// GetContentStream returns the pattern cell's content stream
func (_bafbe *PdfTilingPattern )GetContentStream ()([]byte ,error ){_daegea ,_ ,_aacaf :=_bafbe .GetContentStreamWithEncoder ();return _daegea ,_aacaf ;};

// ToPdfObject implements interface PdfModel.
func (_agfa *PdfAnnotationHighlight )ToPdfObject ()_cde .PdfObject {_agfa .PdfAnnotation .ToPdfObject ();_gdfg :=_agfa ._gfg ;_aeb :=_gdfg .PdfObject .(*_cde .PdfObjectDictionary );_agfa .PdfAnnotationMarkup .appendToPdfDictionary (_aeb );_aeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_aeb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_agfa .QuadPoints );return _gdfg ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// ReplacePage replaces the original page to a new page.
func (_gadd *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_dbce :=pageNum -1;for _aegfg :=range _gadd ._dbaf {if _aegfg ==_dbce {_dadc :=page .Duplicate ();_ggcfc (_dadc );_gadd ._dbaf [_aegfg ]=_dadc ;};};};const (_decg =0x00001;_ddcgc =0x00002;
_bcafe =0x00004;_ggeef =0x00008;_bbdc =0x00020;_gccgd =0x00040;_daeed =0x10000;_fgebe =0x20000;_ggbadc =0x40000;);

// M returns the value of the magenta component of the color.
func (_bgf *PdfColorDeviceCMYK )M ()float64 {return _bgf [1]};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};func (_fffb *Image )resampleLowBits (_gbaee []uint32 ){_ffdbd :=_bbb .BytesPerLine (int (_fffb .Width ),int (_fffb .BitsPerComponent ),_fffb .ColorComponents );_bbddb :=make ([]byte ,_fffb .ColorComponents *_ffdbd *int (_fffb .Height ));
_dacag :=int (_fffb .BitsPerComponent )*_fffb .ColorComponents *int (_fffb .Width );_agabf :=uint8 (8);var (_edbag ,_abcda int ;_eafcb uint32 ;);for _bbda :=0;_bbda < int (_fffb .Height );_bbda ++{_abcda =_bbda *_ffdbd ;for _aced :=0;_aced < _dacag ;_aced ++{_eafcb =_gbaee [_edbag ];
_agabf -=uint8 (_fffb .BitsPerComponent );_bbddb [_abcda ]|=byte (_eafcb )<<_agabf ;if _agabf ==0{_agabf =8;_abcda ++;};_edbag ++;};};_fffb .Data =_bbddb ;};

// ToPdfObject implements interface PdfModel.
func (_gca *PdfAnnotationUnderline )ToPdfObject ()_cde .PdfObject {_gca .PdfAnnotation .ToPdfObject ();_aede :=_gca ._gfg ;_dcf :=_aede .PdfObject .(*_cde .PdfObjectDictionary );_gca .PdfAnnotationMarkup .appendToPdfDictionary (_dcf );_dcf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_dcf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gca .QuadPoints );return _aede ;};var _ pdfFont =(*pdfFontType3 )(nil );

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_cadb *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_cde .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgde ,_fgae :=_cde .GetNumbersAsFloat (objects );
if _fgae !=nil {return nil ,_fgae ;};return _cadb .ColorFromFloats (_dgde );};

// String returns a string that describes `base`.
func (_gcebd fontCommon )String ()string {return _a .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_gcebd .coreString ());};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_dgff :=NewPdfAnnotation ();_bcac :=&PdfAnnotationUnderline {};_bcac .PdfAnnotation =_dgff ;_bcac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dgff .SetContext (_bcac );return _bcac ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_ecbe *PdfPageResources )ToPdfObject ()_cde .PdfObject {_gfegac :=_ecbe ._gcaaf ;_gfegac .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ecbe .ExtGState );if _ecbe ._fbged !=nil {_ecbe .ColorSpace =_ecbe ._fbged .ToPdfObject ();};_gfegac .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ecbe .ColorSpace );
_gfegac .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_ecbe .Pattern );_gfegac .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ecbe .Shading );_gfegac .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_ecbe .XObject );_gfegac .SetIfNotNil ("\u0046\u006f\u006e\u0074",_ecbe .Font );
_gfegac .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_ecbe .ProcSet );_gfegac .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_ecbe .Properties );return _gfegac ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_afbbf :=&PdfPageResourcesColorspaces {};_afbbf .Names =[]string {};_afbbf .Colorspaces =map[string ]PdfColorspace {};_afbbf ._aggbf =&_cde .PdfIndirectObject {};return _afbbf ;};

// AddCRLs adds CRLs to DSS.
func (_cebg *DSS )AddCRLs (crls [][]byte )([]*_cde .PdfObjectStream ,error ){return _cebg .add (&_cebg .CRLs ,_cebg ._bcfgd ,crls );};func _gaegf (_gfad *_cde .PdfObjectDictionary )(*PdfFieldText ,error ){_aagd :=&PdfFieldText {};_aagd .DA ,_ =_cde .GetString (_gfad .Get ("\u0044\u0041"));
_aagd .Q ,_ =_cde .GetInt (_gfad .Get ("\u0051"));_aagd .DS ,_ =_cde .GetString (_gfad .Get ("\u0044\u0053"));_aagd .RV =_gfad .Get ("\u0052\u0056");_aagd .MaxLen ,_ =_cde .GetInt (_gfad .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _aagd ,nil ;
};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_gga :=NewPdfAction ();_bdf :=&PdfActionTrans {};_bdf .PdfAction =_gga ;_gga .SetContext (_bdf );return _bdf ;};func (_badc *PdfPattern )getDict ()*_cde .PdfObjectDictionary {if _dfegeb ,_gefee :=_badc ._eebba .(*_cde .PdfIndirectObject );
_gefee {_ebgc ,_bced :=_dfegeb .PdfObject .(*_cde .PdfObjectDictionary );if !_bced {return nil ;};return _ebgc ;}else if _cacfd ,_edcae :=_badc ._eebba .(*_cde .PdfObjectStream );_edcae {return _cacfd .PdfObjectDictionary ;}else {_fb .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_badc ._eebba );
return nil ;};};func (_gafbb *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _gafbb ._bceac };

// ToPdfObject implements interface PdfModel.
func (_bcfa *PdfAnnotationStamp )ToPdfObject ()_cde .PdfObject {_bcfa .PdfAnnotation .ToPdfObject ();_gdca :=_bcfa ._gfg ;_acfc :=_gdca .PdfObject .(*_cde .PdfObjectDictionary );_bcfa .PdfAnnotationMarkup .appendToPdfDictionary (_acfc );_acfc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0053\u0074\u0061m\u0070"));
_acfc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bcfa .Name );return _gdca ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_ggcdg PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _ggcdg ._dcgb .getFontDescriptor (),nil ;};

// AddCerts adds certificates to DSS.
func (_gdcb *DSS )AddCerts (certs [][]byte )([]*_cde .PdfObjectStream ,error ){return _gdcb .add (&_gdcb .Certs ,_gdcb ._fdcd ,certs );};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_ggdeb .Lock ();defer _ggdeb .Unlock ();_feddg =keywords };

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_fcdd *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_ddea ,_gbef :=color .(*PdfColorPattern );if !_gbef {_fb .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _ddea .Color ==nil {return color ,nil ;};if _fcdd .UnderlyingCS ==nil {return nil ,_gf .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _fcdd .UnderlyingCS .ColorToRGB (_ddea .Color );
};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_aeecg *PdfAcroForm ,_ffga *PdfField ,_febb *PdfAnnotationWidget )(*_cde .PdfObjectDictionary ,error );};func (_gfbfd *Image )samplesTrimPadding (_aaffe []uint32 )[]uint32 {_gfgd :=_gfbfd .ColorComponents *int (_gfbfd .Width )*int (_gfbfd .Height );
if len (_aaffe )==_gfgd {return _aaffe ;};_agbgcc :=make ([]uint32 ,_gfgd );_cfdae :=int (_gfbfd .Width )*_gfbfd .ColorComponents ;var _fccda ,_cccg ,_ceefa ,_gdbcd int ;_gfagd :=_bbb .BytesPerLine (int (_gfbfd .Width ),int (_gfbfd .BitsPerComponent ),_gfbfd .ColorComponents );
for _fccda =0;_fccda < int (_gfbfd .Height );_fccda ++{_cccg =_fccda *int (_gfbfd .Width );_ceefa =_fccda *_gfagd ;for _gdbcd =0;_gdbcd < _cfdae ;_gdbcd ++{_agbgcc [_cccg +_gdbcd ]=_aaffe [_ceefa +_gdbcd ];};};return _agbgcc ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_agdd *OutlineItem )ToPdfObject ()_cde .PdfObject {_aaeaa ,_ :=_agdd .ToPdfOutlineItem ();return _aaeaa .ToPdfObject ();};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_ae :=NewPdfAction ();_gcc :=&PdfActionHide {};_gcc .PdfAction =_ae ;_ae .SetContext (_gcc );return _gcc ;};

// IsColored specifies if the pattern is colored.
func (_dfegb *PdfTilingPattern )IsColored ()bool {if _dfegb .PaintType !=nil &&*_dfegb .PaintType ==1{return true ;};return false ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_aadgd :_cde .MakeDict ()};
};func (_fdadc *DSS )generateHashMap (_fcdfe []*_cde .PdfObjectStream )(map[string ]*_cde .PdfObjectStream ,error ){_dddef :=map[string ]*_cde .PdfObjectStream {};for _ ,_dbafa :=range _fcdfe {_fgeb ,_bdeg :=_cde .DecodeStream (_dbafa );if _bdeg !=nil {return nil ,_bdeg ;
};_bcgc ,_bdeg :=_efdfg (_fgeb );if _bdeg !=nil {return nil ,_bdeg ;};_dddef [string (_bcgc )]=_dbafa ;};return _dddef ,nil ;};

// FileRelationship represents a attachment file relationship type.
type FileRelationship int ;

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bbfd *PdfShadingType6 )ToPdfObject ()_cde .PdfObject {_bbfd .PdfShading .ToPdfObject ();_addd ,_acfbb :=_bbfd .getShadingDict ();if _acfbb !=nil {_fb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bbfd .BitsPerCoordinate !=nil {_addd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bbfd .BitsPerCoordinate );};if _bbfd .BitsPerComponent !=nil {_addd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bbfd .BitsPerComponent );
};if _bbfd .BitsPerFlag !=nil {_addd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bbfd .BitsPerFlag );};if _bbfd .Decode !=nil {_addd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bbfd .Decode );};if _bbfd .Function !=nil {if len (_bbfd .Function )==1{_addd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbfd .Function [0].ToPdfObject ());
}else {_degf :=_cde .MakeArray ();for _ ,_gebf :=range _bbfd .Function {_degf .Append (_gebf .ToPdfObject ());};_addd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_degf );};};return _bbfd ._fdbgb ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_aeefd interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_bdge *PdfField )GetContainingPdfObject ()_cde .PdfObject {return _bdge ._gfed };

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_fdfab *PdfPageResources )HasXObjectByName (keyName _cde .PdfObjectName )bool {_abfe ,_ :=_fdfab .GetXObjectByName (keyName );return _abfe !=nil ;};func _bffe (_geea *_cde .PdfObjectDictionary )(*PdfShadingPattern ,error ){_begbc :=&PdfShadingPattern {};
_adefdg :=_geea .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _adefdg ==nil {_fb .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_decf ,_bbcc :=_cdacfe (_adefdg );
if _bbcc !=nil {_fb .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_bbcc );return nil ,_bbcc ;};_begbc .Shading =_decf ;if _eefac :=_geea .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_eefac !=nil {_dfcbd ,_cfacb :=_eefac .(*_cde .PdfObjectArray );if !_cfacb {_fb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eefac );
return nil ,_cde .ErrTypeError ;};_begbc .Matrix =_dfcbd ;};if _cccff :=_geea .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cccff !=nil {_begbc .ExtGState =_cccff ;};return _begbc ,nil ;};

// Add appends an outline item as a child of the current outline item.
func (_abdad *OutlineItem )Add (item *OutlineItem ){_abdad .Entries =append (_abdad .Entries ,item )};func (_fbef *PdfReader )newPdfAnnotationInkFromDict (_fcf *_cde .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_bacc :=PdfAnnotationInk {};_bebg ,_adba :=_fbef .newPdfAnnotationMarkupFromDict (_fcf );
if _adba !=nil {return nil ,_adba ;};_bacc .PdfAnnotationMarkup =_bebg ;_bacc .InkList =_fcf .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_bacc .BS =_fcf .Get ("\u0042\u0053");return &_bacc ,nil ;};func (_eef *PdfReader )newPdfActionHideFromDict (_gede *_cde .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_gede .Get ("\u0054"),H :_gede .Get ("\u0048")},nil ;
};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_ebb :=NewPdfAnnotation ();_gaef :=&PdfAnnotationStrikeOut {};_gaef .PdfAnnotation =_ebb ;_gaef .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebb .SetContext (_gaef );return _gaef ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_ecfe *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aefad :=vals [0];if _aefad < 0.0||_aefad > 100.0{_fb .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_aefad );
return nil ,ErrColorOutOfRange ;};_adae :=vals [1];_addga :=float64 (-100);_ebcaa :=float64 (100);if len (_ecfe .Range )> 1{_addga =_ecfe .Range [0];_ebcaa =_ecfe .Range [1];};if _adae < _addga ||_adae > _ebcaa {_fb .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_adae ,_addga ,_ebcaa );
return nil ,ErrColorOutOfRange ;};_adcf :=vals [2];_dbga :=float64 (-100);_dgbef :=float64 (100);if len (_ecfe .Range )> 3{_dbga =_ecfe .Range [2];_dgbef =_ecfe .Range [3];};if _adcf < _dbga ||_adcf > _dgbef {_fb .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_adcf ,_dbga ,_dgbef );
return nil ,ErrColorOutOfRange ;};_dbba :=NewPdfColorLab (_aefad ,_adae ,_adcf );return _dbba ,nil ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _cde .PdfObject )(*PdfFont ,error ){return _gbbgf (fontObj ,true )};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _cde .PdfObject ;LE _cde .PdfObject ;BS _cde .PdfObject ;IC _cde .PdfObject ;BE _cde .PdfObject ;IT _cde .PdfObject ;Measure _cde .PdfObject ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_gada *DSS )GetContainingPdfObject ()_cde .PdfObject {return _gada ._agaa };

// ParsePdfObject parses input pdf object into given output intent.
func (_adaac *PdfOutputIntent )ParsePdfObject (object _cde .PdfObject )error {_bacba ,_egfeg :=_cde .GetDict (object );if !_egfeg {_fb .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _gf .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_adaac ._aadgd =_bacba ;_adaac .Type ,_ =_bacba .GetString ("\u0054\u0079\u0070\u0065");_bcfaa ,_egfeg :=_bacba .GetString ("\u0053");if _egfeg {switch _bcfaa {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_adaac .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_adaac .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_adaac .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_adaac .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_adaac .S =PdfOutputIntentTypeX ;
};};_adaac .OutputCondition ,_ =_bacba .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_adaac .OutputConditionIdentifier ,_ =_bacba .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_adaac .RegistryName ,_ =_bacba .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_adaac .Info ,_ =_bacba .GetString ("\u0049\u006e\u0066\u006f");if _agbbb ,_fabf :=_cde .GetStream (_bacba .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_fabf {_adaac .ColorComponents ,_ =_cde .GetIntVal (_agbbb .Get ("\u004e"));_cdeb ,_adefg :=_cde .DecodeStream (_agbbb );if _adefg !=nil {return _adefg ;};_adaac .DestOutputProfile =_cdeb ;};return nil ;};func (_fbb *PdfReader )newPdfAnnotationRedactFromDict (_ccec *_cde .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_gabf :=PdfAnnotationRedact {};
_cfdg ,_ccef :=_fbb .newPdfAnnotationMarkupFromDict (_ccec );if _ccef !=nil {return nil ,_ccef ;};_gabf .PdfAnnotationMarkup =_cfdg ;_gabf .QuadPoints =_ccec .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gabf .IC =_ccec .Get ("\u0049\u0043");
_gabf .RO =_ccec .Get ("\u0052\u004f");_gabf .OverlayText =_ccec .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_gabf .Repeat =_ccec .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_gabf .DA =_ccec .Get ("\u0044\u0041");_gabf .Q =_ccec .Get ("\u0051");
return &_gabf ,nil ;};func _aabda (_fgce *[]*PdfField ,_afcab FieldFilterFunc ,_eefbb bool )[]*PdfField {if _fgce ==nil {return nil ;};_cdcc :=*_fgce ;if len (*_fgce )==0{return nil ;};_ggbg :=_cdcc [:0];if _afcab ==nil {_afcab =func (*PdfField )bool {return true };
};var _cgad []*PdfField ;for _ ,_fafg :=range _cdcc {_gaaf :=_afcab (_fafg );if _gaaf {_cgad =append (_cgad ,_fafg );if len (_fafg .Kids )> 0{_cgad =append (_cgad ,_aabda (&_fafg .Kids ,_afcab ,_eefbb )...);};};if !_eefbb ||!_gaaf ||len (_fafg .Kids )> 0{_ggbg =append (_ggbg ,_fafg );
};};*_fgce =_ggbg ;return _cgad ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_dbgb *PdfColorCalGray )GetNumComponents ()int {return 1};func (_gdcea *pdfFontType3 )baseFields ()*fontCommon {return &_gdcea .fontCommon };

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_cbcfe []byte ;_gdbc []float64 ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_cde .PdfObject ,error );};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _cde .PdfObject )(_cde .PdfObjectName ,error ){var _ecde *_cde .PdfObjectName ;var _deaa *_cde .PdfObjectArray ;if _cddb ,_dbda :=obj .(*_cde .PdfIndirectObject );_dbda {if _fgcg ,_cgge :=_cddb .PdfObject .(*_cde .PdfObjectArray );
_cgge {_deaa =_fgcg ;}else if _cbcg ,_ggfg :=_cddb .PdfObject .(*_cde .PdfObjectName );_ggfg {_ecde =_cbcg ;};}else if _bceb ,_fgcf :=obj .(*_cde .PdfObjectArray );_fgcf {_deaa =_bceb ;}else if _fdcac ,_fcecd :=obj .(*_cde .PdfObjectName );_fcecd {_ecde =_fdcac ;
};if _ecde !=nil {switch *_ecde {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_ecde ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_ecde ,nil ;
};};if _deaa !=nil &&_deaa .Len ()> 0{if _ccdab ,_feef :=_deaa .Get (0).(*_cde .PdfObjectName );_feef {switch *_ccdab {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _deaa .Len ()==1{return *_ccdab ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_ccdab ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_ccdab ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_ccdab ,nil ;};};};return "",nil ;};

// SetContext sets the sub annotation (context).
func (_ffcge *PdfAnnotation )SetContext (ctx PdfModel ){_ffcge ._ccfd =ctx };

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_dfd PdfModel ;Type _cde .PdfObject ;S _cde .PdfObject ;Next _cde .PdfObject ;_dfb *_cde .PdfIndirectObject ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_aadgd :_cde .MakeDict (),ColorComponents :colorComponents };
};

// GetPdfInfo returns the PDF info dictionary.
func (_bcaa *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_aecfe ,_egeeg :=_bcaa .GetTrailer ();if _egeeg !=nil {return nil ,_egeeg ;};var _dgedc *_cde .PdfObjectDictionary ;_aggcb :=_aecfe .Get ("\u0049\u006e\u0066\u006f");switch _aecfc :=_aggcb .(type ){case *_cde .PdfObjectReference :_bfdaa :=_aecfc ;
_aggcb ,_egeeg =_bcaa .GetIndirectObjectByNumber (int (_bfdaa .ObjectNumber ));_aggcb =_cde .TraceToDirectObject (_aggcb );if _egeeg !=nil {return nil ,_egeeg ;};_dgedc ,_ =_aggcb .(*_cde .PdfObjectDictionary );case *_cde .PdfObjectDictionary :_dgedc =_aecfc ;
};if _dgedc ==nil {return nil ,_gf .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_gfcdf ,_egeeg :=NewPdfInfoFromObject (_dgedc );if _egeeg !=nil {return nil ,_egeeg ;
};return _gfcdf ,nil ;};func (_ffee *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _cde .PdfObject )(*PdfInfo ,error ){var _aeba PdfInfo ;_fddgf ,_edgad :=obj .(*_cde .PdfObjectDictionary );if !_edgad {return nil ,_a .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_bbba :=range _fddgf .Keys (){switch _bbba {case "\u0054\u0069\u0074l\u0065":_aeba .Title ,_ =_cde .GetString (_fddgf .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_aeba .Author ,_ =_cde .GetString (_fddgf .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_aeba .Subject ,_ =_cde .GetString (_fddgf .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_aeba .Keywords ,_ =_cde .GetString (_fddgf .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_aeba .Creator ,_ =_cde .GetString (_fddgf .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_aeba .Producer ,_ =_cde .GetString (_fddgf .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_aeba .Trapped ,_ =_cde .GetName (_fddgf .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _ccbf ,_gbfb :=_cde .GetString (_fddgf .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_gbfb &&_ccbf .String ()!=""{_bgac ,_ebebf :=NewPdfDate (_ccbf .String ());if _ebebf !=nil {return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_ebebf );
};_aeba .CreationDate =&_bgac ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _cbgac ,_gaeba :=_cde .GetString (_fddgf .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_gaeba &&_cbgac .String ()!=""{_dgag ,_acff :=NewPdfDate (_cbgac .String ());if _acff !=nil {return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_acff );
};_aeba .ModifiedDate =&_dgag ;};default:_dgced ,_ :=_cde .GetString (_fddgf .Get (_bbba ));if _aeba ._bdcd ==nil {_aeba ._bdcd =_cde .MakeDict ();};_aeba ._bdcd .Set (_bbba ,_dgced );};};return &_aeba ,nil ;};func (_egefe *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _egefe ._fdccd .GetCrypter ()!=nil &&!_egefe ._fdccd .IsAuthenticated (){return nil ,_a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cabaf :=_egefe ._gaeed ;_ebeec :=_cabaf .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _ebeec ==nil {return nil ,nil ;};_eaec ,_caec :=_cde .GetIndirect (_ebeec );_ebeec =_cde .TraceToDirectObject (_ebeec );if _cde .IsNullObject (_ebeec ){_fb .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_deaab ,_cafc :=_cde .GetDict (_ebeec );if !_cafc {_fb .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_ebeec );_fb .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_ebeec );};_fb .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_fb .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_egefe ._gbeac {_cgaeg :=_egefe .traverseObjectData (_deaab );
if _cgaeg !=nil {_fb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_cgaeg );
return nil ,_cgaeg ;};};_cegab ,_eeee :=_egefe .newPdfAcroFormFromDict (_eaec ,_deaab );if _eeee !=nil {return nil ,_eeee ;};_cegab ._abcd =!_caec ;return _cegab ,nil ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cde .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_ee *PdfActionHide )ToPdfObject ()_cde .PdfObject {_ee .PdfAction .ToPdfObject ();_aedc :=_ee ._dfb ;_dcc :=_aedc .PdfObject .(*_cde .PdfObjectDictionary );_dcc .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeHide )));_dcc .SetIfNotNil ("\u0054",_ee .T );
_dcc .SetIfNotNil ("\u0048",_ee .H );return _aedc ;};func (_dagb *PdfField )inherit (_ccbfb func (*PdfField )bool )(bool ,error ){_ggfbd :=map[*PdfField ]bool {};_fcdgg :=false ;_abab :=_dagb ;for _abab !=nil {if _ ,_dafde :=_ggfbd [_abab ];_dafde {return false ,_gf .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");
};_fagac :=_ccbfb (_abab );if _fagac {_fcdgg =true ;break ;};_ggfbd [_abab ]=true ;_abab =_abab .Parent ;};return _fcdgg ,nil ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _cde .PdfObject ;Name _cde .PdfObject ;State _cde .PdfObject ;StateModel _cde .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bbbee *PdfBorderStyle )ToPdfObject ()_cde .PdfObject {_cdgd :=_cde .MakeDict ();if _bbbee ._deab !=nil {if _agba ,_debgf :=_bbbee ._deab .(*_cde .PdfIndirectObject );_debgf {_agba .PdfObject =_cdgd ;};};_cdgd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _bbbee .W !=nil {_cdgd .Set ("\u0057",_cde .MakeFloat (*_bbbee .W ));};if _bbbee .S !=nil {_cdgd .Set ("\u0053",_cde .MakeName (_bbbee .S .GetPdfName ()));};if _bbbee .D !=nil {_cdgd .Set ("\u0044",_cde .MakeArrayFromIntegers (*_bbbee .D ));};if _bbbee ._deab !=nil {return _bbbee ._deab ;
};return _cdgd ;};

// StdFontName represents name of a standard font.
type StdFontName =_baf .StdFontName ;

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_dfggc *PdfAppender )Write (w _df .Writer )error {if _dfggc ._agbg {return _gf .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_acce :=NewPdfWriter ();_dadcc ,_cfdcb :=_cde .GetDict (_acce ._gabdc );if !_cfdcb {return _gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_afcf ,_cfdcb :=_dadcc .Get ("\u004b\u0069\u0064\u0073").(*_cde .PdfObjectArray );if !_cfdcb {return _gf .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_bfbb ,_cfdcb :=_dadcc .Get ("\u0043\u006f\u0075n\u0074").(*_cde .PdfObjectInteger );if !_cfdcb {return _gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_bbgg :=_dfggc ._dbb ._fdccd ;_deba :=_bbgg .GetTrailer ();if _deba ==nil {return _gf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_adag ,_cfdcb :=_cde .GetIndirect (_deba .Get ("\u0052\u006f\u006f\u0074"));
if !_cfdcb {return _gf .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_gfeaf ,_cfdcb :=_cde .GetDict (_adag );if !_cfdcb {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_adag ,*_deba );
return _gf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_adge :=false ;for _ ,_fee :=range _dfggc ._dbb .AcroForm .signatureFields (){if _fee .Lock !=nil {_adge =true ;break ;};};if _adge {_acce ._dbabf =_adag ;
};for _ ,_bfd :=range _gfeaf .Keys (){if _acce ._aaeef .Get (_bfd )==nil {_abbdb :=_gfeaf .Get (_bfd );_acce ._aaeef .Set (_bfd ,_abbdb );};};if _dfggc ._deffb !=nil {if _dfggc ._deffb ._abcd {if _ccda :=_cde .TraceToDirectObject (_dfggc ._deffb .ToPdfObject ());
!_cde .IsNullObject (_ccda ){_acce ._aaeef .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ccda );_dfggc .updateObjectsDeep (_ccda ,nil );}else {_fb .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_acce ._aaeef .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_dfggc ._deffb .ToPdfObject ());_dfggc .updateObjectsDeep (_dfggc ._deffb .ToPdfObject (),nil );};};if _dfggc ._bdbg !=nil {_dfggc .updateObjectsDeep (_dfggc ._bdbg .ToPdfObject (),nil );
_acce ._aaeef .Set ("\u0044\u0053\u0053",_dfggc ._bdbg .GetContainingPdfObject ());};if _dfggc ._fafe !=nil {_acce ._aaeef .Set ("\u0050\u0065\u0072m\u0073",_dfggc ._fafe .ToPdfObject ());_dfggc .updateObjectsDeep (_dfggc ._fafe .ToPdfObject (),nil );};
if _acce ._dgccdd .Major < 2{_acce .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_acce .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _dgbe ,_aga :=_cde .GetDict (_deba .Get ("\u0049\u006e\u0066\u006f"));_aga {if _adbe ,_ecg :=_cde .GetDict (_acce ._decfde );
_ecg {for _ ,_adagb :=range _dgbe .Keys (){if _adbe .Get (_adagb )==nil {_adbe .Set (_adagb ,_dgbe .Get (_adagb ));};};};};if _dfggc ._gabgb !=nil {_acce ._decfde =_cde .MakeIndirectObject (_dfggc ._gabgb .ToPdfObject ());};_dfggc .updateObjectsDeep (_acce ._decfde ,nil );
_dfggc .updateObjectsDeep (_acce ._dbabf ,nil );_gecca :=false ;if len (_dfggc ._dbb .PageList )!=len (_dfggc ._dbaf ){_gecca =true ;}else {for _fcce :=range _dfggc ._dbb .PageList {switch {case _dfggc ._dbaf [_fcce ]==_dfggc ._dbb .PageList [_fcce ]:case _dfggc ._dbaf [_fcce ]==_dfggc .Reader .PageList [_fcce ]:default:_gecca =true ;
};if _gecca {break ;};};};if _gecca {_dfggc .updateObjectsDeep (_acce ._gabdc ,nil );}else {_dfggc ._ebbd [_acce ._gabdc ]=struct{}{};};_acce ._gabdc .ObjectNumber =_dfggc .Reader ._aedcc .ObjectNumber ;_dfggc ._ddbf [_acce ._gabdc ]=_dfggc .Reader ._aedcc .ObjectNumber ;
_cddgb :=[]_cde .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_cabbd :=range _dfggc ._dbaf {_bcab :=_cabbd .ToPdfObject ();
*_bfbb =*_bfbb +1;if _bcdc ,_fcec :=_bcab .(*_cde .PdfIndirectObject );_fcec &&_bcdc .GetParser ()==_dfggc ._dbb ._fdccd {_afcf .Append (&_bcdc .PdfObjectReference );continue ;};if _ebd ,_geag :=_cde .GetDict (_bcab );_geag {_fbff ,_bbd :=_ebd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_cde .PdfIndirectObject );
for _bbd {_fb .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fbff );_ffdf ,_ggec :=_fbff .PdfObject .(*_cde .PdfObjectDictionary );if !_ggec {return _gf .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_daeg :=range _cddgb {_fb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_daeg );if _egd :=_ebd .Get (_daeg );_egd !=nil {_fb .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");
if len (_cabbd ._cgda .Keys ())> 0&&!_gecca {_dfbb :=_cabbd ._cgda ;if _cfeb :=_dfbb .Get (_daeg );_cfeb !=nil {if _egd !=_cfeb {_fb .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_daeg ,_cfeb );
_ebd .Set (_daeg ,_cfeb );};};};continue ;};if _feea :=_ffdf .Get (_daeg );_feea !=nil {_fb .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_daeg );_ebd .Set (_daeg ,_feea );};};_fbff ,_bbd =_ffdf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_cde .PdfIndirectObject );
_fb .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ffdf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};if _gecca {_ebd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_acce ._gabdc );};};_dfggc .updateObjectsDeep (_bcab ,nil );
_afcf .Append (_bcab );};if _ ,_gaga :=_dfggc ._aead .Seek (0,_df .SeekStart );_gaga !=nil {return _gaga ;};_gdde :=make (map[SignatureHandler ]_df .Writer );_bde :=_cde .MakeArray ();for _ ,_bfdd :=range _dfggc ._acbg {if _acaa ,_acbf :=_cde .GetIndirect (_bfdd );
_acbf {if _bcg ,_eaagg :=_acaa .PdfObject .(*pdfSignDictionary );_eaagg {_bgag :=*_bcg ._agfb ;var _gdgfa error ;_gdde [_bgag ],_gdgfa =_bgag .NewDigest (_bcg ._ecbaf );if _gdgfa !=nil {return _gdgfa ;};_bde .Append (_cde .MakeInteger (0xfffff),_cde .MakeInteger (0xfffff));
};};};if _bde .Len ()> 0{_bde .Append (_cde .MakeInteger (0xfffff),_cde .MakeInteger (0xfffff));};for _ ,_cabe :=range _dfggc ._acbg {if _ebde ,_aaee :=_cde .GetIndirect (_cabe );_aaee {if _fecc ,_fddca :=_ebde .PdfObject .(*pdfSignDictionary );_fddca {_fecc .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_bde );
};};};_begd :=len (_gdde )> 0;var _cbcf _df .Reader =_dfggc ._aead ;if _begd {_fdac :=make ([]_df .Writer ,0,len (_gdde ));for _ ,_gegd :=range _gdde {_fdac =append (_fdac ,_gegd );};_cbcf =_df .TeeReader (_dfggc ._aead ,_df .MultiWriter (_fdac ...));};
_bdbdcb ,_ggfb :=_df .Copy (w ,_cbcf );if _ggfb !=nil {return _ggfb ;};if len (_dfggc ._acbg )==0{return nil ;};_acce ._adgdg =_bdbdcb ;_acce .ObjNumOffset =_dfggc ._abbd ;_acce ._ceaea =true ;_acce ._daefcg =_dfggc ._bfba ;_acce ._abdd =_dfggc ._feb ;
_acce ._fgcbc =_dfggc ._eabb ;_acce ._dgccdd =_dfggc ._dbb .PdfVersion ();_acce ._abebf =_dfggc ._ddbf ;_acce ._febcf =_dfggc ._fecb .GetCrypter ();_acce ._fdbfc =_dfggc ._fecb .GetEncryptObj ();_cgf :=_dfggc ._fecb .GetXrefType ();if _cgf !=nil {_cdffa :=*_cgf ==_cde .XrefTypeObjectStream ;
_acce ._bacg =&_cdffa ;};_acce ._fdeab =map[_cde .PdfObject ]struct{}{};_acce ._abbc =[]_cde .PdfObject {};for _ ,_dcg :=range _dfggc ._acbg {if _ ,_bdfe :=_dfggc ._ebbd [_dcg ];_bdfe {continue ;};_acce .addObject (_dcg );};_adaba :=w ;if _begd {_adaba =_bb .NewBuffer (nil );
};if _dfggc ._dfba !=""&&_acce ._febcf ==nil {_acce .Encrypt ([]byte (_dfggc ._dfba ),[]byte (_dfggc ._dfba ),_dfggc ._aedd );};if _edafd :=_deba .Get ("\u0049\u0044");_edafd !=nil {if _gbceg ,_agfdb :=_cde .GetArray (_edafd );_agfdb {_acce ._dgdef =_gbceg ;
};};if _ffbad :=_acce .Write (_adaba );_ffbad !=nil {return _ffbad ;};if _begd {_dedg :=_adaba .(*_bb .Buffer ).Bytes ();_fcaa :=_cde .MakeArray ();var _cbec []*pdfSignDictionary ;var _abbf int64 ;for _ ,_eacc :=range _acce ._abbc {if _efgd ,_gddca :=_cde .GetIndirect (_eacc );
_gddca {if _ccgc ,_eefa :=_efgd .PdfObject .(*pdfSignDictionary );_eefa {_cbec =append (_cbec ,_ccgc );_fcef :=_ccgc ._gdbda +int64 (_ccgc ._bcdcga );_fcaa .Append (_cde .MakeInteger (_abbf ),_cde .MakeInteger (_fcef -_abbf ));_abbf =_ccgc ._gdbda +int64 (_ccgc ._bebgc );
};};};_fcaa .Append (_cde .MakeInteger (_abbf ),_cde .MakeInteger (_bdbdcb +int64 (len (_dedg ))-_abbf ));_aebf :=[]byte (_fcaa .WriteString ());for _ ,_abc :=range _cbec {_dbaba :=int (_abc ._gdbda -_bdbdcb );for _feed :=_abc ._acgb ;_feed < _abc ._fefcca ;
_feed ++{_dedg [_dbaba +_feed ]=' ';};_aedef :=_dedg [_dbaba +_abc ._acgb :_dbaba +_abc ._fefcca ];copy (_aedef ,_aebf );};var _gddg int ;for _ ,_dead :=range _cbec {_fedd :=int (_dead ._gdbda -_bdbdcb );_fedf :=_dedg [_gddg :_fedd +_dead ._bcdcga ];_dfffa :=*_dead ._agfb ;
_gdde [_dfffa ].Write (_fedf );_gddg =_fedd +_dead ._bebgc ;};for _ ,_feec :=range _cbec {_gbe :=_dedg [_gddg :];_gcgee :=*_feec ._agfb ;_gdde [_gcgee ].Write (_gbe );};for _ ,_bgcb :=range _cbec {_facdb :=int (_bgcb ._gdbda -_bdbdcb );_agfed :=*_bgcb ._agfb ;
_bbfa :=_gdde [_agfed ];if _ecbc :=_agfed .Sign (_bgcb ._ecbaf ,_bbfa );_ecbc !=nil {return _ecbc ;};_bgcb ._ecbaf .ByteRange =_fcaa ;_febc :=[]byte (_bgcb ._ecbaf .Contents .WriteString ());for _gcea :=_bgcb ._acgb ;_gcea < _bgcb ._fefcca ;_gcea ++{_dedg [_facdb +_gcea ]=' ';
};for _abeaf :=_bgcb ._bcdcga ;_abeaf < _bgcb ._bebgc ;_abeaf ++{_dedg [_facdb +_abeaf ]=' ';};_fefc :=_dedg [_facdb +_bgcb ._acgb :_facdb +_bgcb ._fefcca ];copy (_fefc ,_aebf );_fefc =_dedg [_facdb +_bgcb ._bcdcga :_facdb +_bgcb ._bebgc ];copy (_fefc ,_febc );
};_bef :=_bb .NewBuffer (_dedg );_ ,_ggfb =_df .Copy (w ,_bef );if _ggfb !=nil {return _ggfb ;};};_dfggc ._agbg =true ;return nil ;};func (_gfcf *PdfReader )newPdfAnnotationUnderlineFromDict (_ddbd *_cde .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_dgef :=PdfAnnotationUnderline {};
_feab ,_bfcc :=_gfcf .newPdfAnnotationMarkupFromDict (_ddbd );if _bfcc !=nil {return nil ,_bfcc ;};_dgef .PdfAnnotationMarkup =_feab ;_dgef .QuadPoints =_ddbd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_dgef ,nil ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_cgee *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _cgee ._acdg ==nil {_cgee ._acdg =_fe .NewPSExecutor (_cgee .Program );};var _dcbad []_fe .PSObject ;for _ ,_cabfa :=range xVec {_dcbad =append (_dcbad ,_fe .MakeReal (_cabfa ));
};_afgcc ,_caega :=_cgee ._acdg .Execute (_dcbad );if _caega !=nil {return nil ,_caega ;};_bdbeb ,_caega :=_fe .PSObjectArrayToFloat64Array (_afgcc );if _caega !=nil {return nil ,_caega ;};return _bdbeb ,nil ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_daeeb *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_baf .CharMetrics ;

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _df .ReadSeeker )(*PdfReader ,error ){const _eccb ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _deeac (rs ,&ReaderOpts {LazyLoad :true },false ,_eccb );
};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gbbbb *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_fb .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_fbdc :=[]float64 {0.0};if _gbbbb .C0 !=nil {_fbdc =_gbbbb .C0 ;};_cbcff :=[]float64 {1.0};if _gbbbb .C1 !=nil {_cbcff =_gbbbb .C1 ;};var _eceg []float64 ;for _bcagc :=0;_bcagc < len (_fbdc );_bcagc ++{_adfeg :=_fbdc [_bcagc ]+_ce .Pow (x [0],_gbbbb .N )*(_cbcff [_bcagc ]-_fbdc [_bcagc ]);
_eceg =append (_eceg ,_adfeg );};return _eceg ,nil ;};func (_fdcacf *XObjectImage )getParamsDict ()*_cde .PdfObjectDictionary {_dadec :=_cde .MakeDict ();_dadec .Set ("\u0057\u0069\u0064t\u0068",_cde .MakeInteger (*_fdcacf .Width ));_dadec .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cde .MakeInteger (*_fdcacf .Height ));
_dadec .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cde .MakeInteger (int64 (_fdcacf .ColorSpace .GetNumComponents ())));_dadec .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cde .MakeInteger (*_fdcacf .BitsPerComponent ));
return _dadec ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_gfffa *PdfOutlineTreeNode )GetContext ()PdfModel {if _ecff ,_bfcb :=_gfffa ._aeefd .(*PdfOutline );_bfcb {return _ecff ;};if _gedb ,_edef :=_gfffa ._aeefd .(*PdfOutlineItem );_edef {return _gedb ;};_fb .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_bdbdcf *Outline )ToPdfObject ()_cde .PdfObject {return _bdbdcf .ToPdfOutline ().ToPdfObject ()};

// GetContainingPdfObject implements interface PdfModel.
func (_bfcg *PdfFilespec )GetContainingPdfObject ()_cde .PdfObject {return _bfcg ._dcef };

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_ccfd PdfModel ;Rect _cde .PdfObject ;Contents _cde .PdfObject ;P _cde .PdfObject ;NM _cde .PdfObject ;M _cde .PdfObject ;F _cde .PdfObject ;AP _cde .PdfObject ;AS _cde .PdfObject ;Border _cde .PdfObject ;C _cde .PdfObject ;StructParent _cde .PdfObject ;
OC _cde .PdfObject ;_gfg *_cde .PdfIndirectObject ;};func (_edde *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_dffg *_cde .PdfObjectDictionary ;_aacb *_cde .PdfIndirectObject ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_gbec *XObjectImage )ToImage ()(*Image ,error ){_dgbfe :=&Image {};if _gbec .Height ==nil {return nil ,_gf .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_dgbfe .Height =*_gbec .Height ;if _gbec .Width ==nil {return nil ,_gf .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_dgbfe .Width =*_gbec .Width ;if _gbec .BitsPerComponent ==nil {switch _gbec .Filter .(type ){case *_cde .CCITTFaxEncoder ,*_cde .JBIG2Encoder :_dgbfe .BitsPerComponent =1;
case *_cde .LZWEncoder ,*_cde .RunLengthEncoder :_dgbfe .BitsPerComponent =8;default:return nil ,_gf .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_dgbfe .BitsPerComponent =*_gbec .BitsPerComponent ;};_dgbfe .ColorComponents =_gbec .ColorSpace .GetNumComponents ();_gbec ._aaaag .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cde .MakeInteger (int64 (_dgbfe .ColorComponents )));
_dcgfce ,_aedeg :=_cde .DecodeStream (_gbec ._aaaag );if _aedeg !=nil {return nil ,_aedeg ;};_dgbfe .Data =_dcgfce ;if _gbec .Decode !=nil {_bdbef ,_fbeaf :=_gbec .Decode .(*_cde .PdfObjectArray );if !_fbeaf {_fb .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_gf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_gfebf ,_defce :=_bdbef .ToFloat64Array ();if _defce !=nil {return nil ,_defce ;};switch _gbec .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_fdgcd :=_gbec .ColorSpace .DecodeArray ();
if _fdgcd [0]==_gfebf [0]&&_fdgcd [1]==_gfebf [1]&&_fdgcd [2]==_gfebf [2]&&_fdgcd [3]==_gfebf [3]{_dgbfe ._gdbc =_gfebf ;};default:_dgbfe ._gdbc =_gfebf ;};};return _dgbfe ,nil ;};func (_ageaa SignatureValidationResult )String ()string {var _cgbec _bb .Buffer ;
_cgbec .WriteString (_a .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_ageaa .Name ));if _ageaa .Date ._bdcfec > 0{_cgbec .WriteString (_a .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_ageaa .Date .ToGoTime ().String ()));}else {_cgbec .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_ageaa .Reason )> 0{_cgbec .WriteString (_a .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ageaa .Reason ));}else {_cgbec .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_ageaa .Location )> 0{_cgbec .WriteString (_a .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ageaa .Location ));}else {_cgbec .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_ageaa .ContactInfo )> 0{_cgbec .WriteString (_a .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_ageaa .ContactInfo ));}else {_cgbec .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_cgbec .WriteString (_a .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_ageaa .Fields )));if _ageaa .IsSigned {_cgbec .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_cgbec .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _ageaa .IsVerified {_cgbec .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_cgbec .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _ageaa .IsTrusted {_cgbec .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_cgbec .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_ageaa .GeneralizedTime .IsZero (){_cgbec .WriteString (_a .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_ageaa .GeneralizedTime .String ()));
};if _ageaa .DiffResults !=nil {_cgbec .WriteString (_a .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_ageaa .DiffResults .IsPermitted ()));if len (_ageaa .DiffResults .Warnings )> 0{_cgbec .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_caeda :=range _ageaa .DiffResults .Warnings {_cgbec .WriteString (_a .Sprintf ("\u0009\u0025\u0073\u000a",_caeda ));};};if len (_ageaa .DiffResults .Errors )> 0{_cgbec .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_abaab :=range _ageaa .DiffResults .Errors {_cgbec .WriteString (_a .Sprintf ("\u0009\u0025\u0073\u000a",_abaab ));};};};if _ageaa .IsCrlFound {_cgbec .WriteString ("R\u0065\u0076\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0061\u003a\u0020C\u0052\u004c\u0020f\u006fu\u006e\u0064\u000a");
}else {_cgbec .WriteString ("\u0052\u0065\u0076o\u0063\u0061\u0074\u0069o\u006e\u0020\u0064\u0061\u0074\u0061\u003a \u0043\u0052\u004c\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};if _ageaa .IsOcspFound {_cgbec .WriteString ("\u0052\u0065\u0076\u006fc\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u0066\u006f\u0075n\u0064\u000a");
}else {_cgbec .WriteString ("\u0052\u0065\u0076\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};return _cgbec .String ();};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_gfce *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggge :=vals [0];if _ggge < 0.0||_ggge > 1.0{_fb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ggge );
return nil ,ErrColorOutOfRange ;};_faaab :=vals [1];if _faaab < 0.0||_faaab > 1.0{_fb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_faaab );return nil ,ErrColorOutOfRange ;
};_aafca :=vals [2];if _aafca < 0.0||_aafca > 1.0{_fb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_aafca );return nil ,ErrColorOutOfRange ;};_gead :=vals [3];
if _gead < 0.0||_gead > 1.0{_fb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gead );return nil ,ErrColorOutOfRange ;};_cbfa :=NewPdfColorDeviceCMYK (_ggge ,_faaab ,_aafca ,_gead );
return _cbfa ,nil ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_afac :=&PdfColorspaceLab {};_afac .BlackPoint =[]float64 {0.0,0.0,0.0};_afac .Range =[]float64 {-100,100,-100,100};return _afac ;};func _bfcfa ()string {_deaeb :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _dacfd _bb .Buffer ;for _cedb :=0;_cedb < 6;_cedb ++{_dacfd .WriteRune (rune (_deaeb [_cc .Intn (len (_deaeb ))]));};return _dacfd .String ();};

// ToPdfObject converts the font to a PDF representation.
func (_ddefc *pdfFontType3 )ToPdfObject ()_cde .PdfObject {if _ddefc ._cedfe ==nil {_ddefc ._cedfe =&_cde .PdfIndirectObject {};};_bacf :=_ddefc .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_ddefc ._cedfe .PdfObject =_bacf ;if _ddefc .FirstChar !=nil {_bacf .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_ddefc .FirstChar );
};if _ddefc .LastChar !=nil {_bacf .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_ddefc .LastChar );};if _ddefc .Widths !=nil {_bacf .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_ddefc .Widths );};if _ddefc .Encoding !=nil {_bacf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ddefc .Encoding );
}else if _ddefc ._cgefe !=nil {_bdaa :=_ddefc ._cgefe .ToPdfObject ();if _bdaa !=nil {_bacf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bdaa );};};if _ddefc .FontBBox !=nil {_bacf .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ddefc .FontBBox );
};if _ddefc .FontMatrix !=nil {_bacf .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_ddefc .FontMatrix );};if _ddefc .CharProcs !=nil {_bacf .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_ddefc .CharProcs );};if _ddefc .Resources !=nil {_bacf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ddefc .Resources );
};return _ddefc ._cedfe ;};func _ffbd (_bfg _cde .PdfObject )(*PdfBorderStyle ,error ){_efef :=&PdfBorderStyle {};_efef ._deab =_bfg ;var _ffacf *_cde .PdfObjectDictionary ;_bfg =_cde .TraceToDirectObject (_bfg );_ffacf ,_gcba :=_bfg .(*_cde .PdfObjectDictionary );
if !_gcba {return nil ,_gf .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _cdbb :=_ffacf .Get ("\u0054\u0079\u0070\u0065");_cdbb !=nil {_fbg ,_aggb :=_cdbb .(*_cde .PdfObjectName );if !_aggb {_fb .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_cdbb );
}else {if *_fbg !="\u0042\u006f\u0072\u0064\u0065\u0072"{_fb .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_fbg );};};};if _ggfdg :=_ffacf .Get ("\u0057");
_ggfdg !=nil {_gaf ,_affd :=_cde .GetNumberAsFloat (_ggfdg );if _affd !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_affd );return nil ,_affd ;};_efef .W =&_gaf ;
};if _bcfd :=_ffacf .Get ("\u0053");_bcfd !=nil {_geef ,_fdca :=_bcfd .(*_cde .PdfObjectName );if !_fdca {return nil ,_gf .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _ffde BorderStyle ;switch *_geef {case "\u0053":_ffde =BorderStyleSolid ;case "\u0044":_ffde =BorderStyleDashed ;case "\u0042":_ffde =BorderStyleBeveled ;case "\u0049":_ffde =BorderStyleInset ;case "\u0055":_ffde =BorderStyleUnderline ;default:_fb .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_geef );
return nil ,_gf .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_efef .S =&_ffde ;};if _edbf :=_ffacf .Get ("\u0044");_edbf !=nil {_fabgc ,_age :=_edbf .(*_cde .PdfObjectArray );
if !_age {_fb .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_edbf );return nil ,_gf .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_eaba ,_ddac :=_fabgc .ToIntegerArray ();if _ddac !=nil {_fb .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_ddac );
return nil ,_ddac ;};_efef .D =&_eaba ;};return _efef ,nil ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_cde .PdfObjectString ;Q *_cde .PdfObjectInteger ;DS *_cde .PdfObjectString ;RV _cde .PdfObject ;MaxLen *_cde .PdfObjectInteger ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_efagf *PdfSignature ,_cdgee Hasher ,_bdbad SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// HasXObjectByName checks if has XObject resource by name.
func (_feebf *PdfPage )HasXObjectByName (name _cde .PdfObjectName )bool {_babba ,_eebcb :=_feebf .Resources .XObject .(*_cde .PdfObjectDictionary );if !_eebcb {return false ;};if _ddcfe :=_babba .Get (name );_ddcfe !=nil {return true ;};return false ;};


// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_fd .DiffResults ;IsCrlFound bool ;IsOcspFound bool ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _gdd .Time ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_bbdb :=PdfColorDeviceGray (grayVal );return &_bbdb ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_adfag pdfFontType3 )GetRuneMetrics (r rune )(_baf .CharMetrics ,bool ){_cdfbb :=_adfag .Encoder ();if _cdfbb ==nil {_fb .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_adfag );
return _baf .CharMetrics {},false ;};_eedff ,_fbbg :=_cdfbb .RuneToCharcode (r );if !_fbbg {if r !=' '{_fb .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_adfag );
};return _baf .CharMetrics {},false ;};_eggc ,_efeba :=_adfag .GetCharMetrics (_eedff );return _eggc ,_efeba ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _cde .PdfObject ;Flags _cde .PdfObject ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_fe .PSProgram ;_acdg *_fe .PSExecutor ;_dbded []byte ;_geab *_cde .PdfObjectStream ;};func _fdcf (_ggged _cde .PdfObject ,_ebdd *fontCommon )(*_ega .CMap ,error ){_afdfb ,_gbgca :=_cde .GetStream (_ggged );
if !_gbgca {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_ggged );
return nil ,_cde .ErrTypeError ;};_bfcfb ,_beca :=_cde .DecodeStream (_afdfb );if _beca !=nil {return nil ,_beca ;};_bcead ,_beca :=_ega .LoadCmapFromData (_bfcfb ,!_ebdd .isCIDFont ());if _beca !=nil {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_afdfb .ObjectNumber ,_beca );
};return _bcead ,_beca ;};func (_gefbaf *PdfReader )newPdfPageFromDict (_acdbc *_cde .PdfObjectDictionary )(*PdfPage ,error ){_dbec :=NewPdfPage ();_dbec ._bgdbb =_acdbc ;_dbec ._cgda =*_acdbc ;_agdac :=*_acdbc ;_geba ,_cbfab :=_agdac .Get ("\u0054\u0079\u0070\u0065").(*_cde .PdfObjectName );
if !_cbfab {return nil ,_gf .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_geba !="\u0050\u0061\u0067\u0065"{return nil ,_gf .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _acfgd :=_agdac .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_acfgd !=nil {_dbec .Parent =_acfgd ;};if _caegf :=_agdac .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_caegf !=nil {_egada ,_ecfee :=_cde .GetString (_caegf );
if !_ecfee {return nil ,_gf .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};
_aeed ,_fdgda :=NewPdfDate (_egada .Str ());if _fdgda !=nil {return nil ,_fdgda ;};_dbec .LastModified =&_aeed ;};if _gggba :=_agdac .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gggba !=nil &&!_cde .IsNullObject (_gggba ){_dabdc ,_decbf :=_cde .GetDict (_gggba );
if !_decbf {return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gggba );};var _ecgc error ;_dbec .Resources ,_ecgc =NewPdfPageResourcesFromDict (_dabdc );
if _ecgc !=nil {return nil ,_ecgc ;};}else {_gdgec ,_bcfbg :=_dbec .getParentResources ();if _bcfbg !=nil {return nil ,_bcfbg ;};if _gdgec ==nil {_gdgec =NewPdfPageResources ();};_dbec .Resources =_gdgec ;};if _fgbfg :=_agdac .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_fgbfg !=nil {_dadcb ,_eaeae :=_cde .GetArray (_fgbfg );if !_eaeae {return nil ,_gf .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _cgffa error ;
_dbec .MediaBox ,_cgffa =NewPdfRectangle (*_dadcb );if _cgffa !=nil {return nil ,_cgffa ;};};if _bgagc :=_agdac .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_bgagc !=nil {_bafbbe ,_efeec :=_cde .GetArray (_bgagc );if !_efeec {return nil ,_gf .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _ebfad error ;_dbec .CropBox ,_ebfad =NewPdfRectangle (*_bafbbe );if _ebfad !=nil {return nil ,_ebfad ;};};if _dfbgf :=_agdac .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_dfbgf !=nil {_ggeb ,_ceab :=_cde .GetArray (_dfbgf );if !_ceab {return nil ,_gf .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _ebaed error ;_dbec .BleedBox ,_ebaed =NewPdfRectangle (*_ggeb );if _ebaed !=nil {return nil ,_ebaed ;};};if _bafeg :=_agdac .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_bafeg !=nil {_gfada ,_dgga :=_cde .GetArray (_bafeg );if !_dgga {return nil ,_gf .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _fbga error ;_dbec .TrimBox ,_fbga =NewPdfRectangle (*_gfada );if _fbga !=nil {return nil ,_fbga ;};};if _eggd :=_agdac .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_eggd !=nil {_cggee ,_gaefd :=_cde .GetArray (_eggd );if !_gaefd {return nil ,_gf .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _bdebg error ;_dbec .ArtBox ,_bdebg =NewPdfRectangle (*_cggee );if _bdebg !=nil {return nil ,_bdebg ;};};if _bagg :=_agdac .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_bagg !=nil {_dbec .BoxColorInfo =_bagg ;};if _baece :=_agdac .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_baece !=nil {_dbec .Contents =_baece ;};if _eddacf :=_agdac .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_eddacf !=nil {_fggeb ,_eafe :=_cde .GetNumberAsInt64 (_eddacf );if _eafe !=nil {return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_dbec .Rotate =&_fggeb ;};if _fcdffd :=_agdac .Get ("\u0047\u0072\u006fu\u0070");_fcdffd !=nil {_dbec .Group =_fcdffd ;};if _dcafd :=_agdac .Get ("\u0054\u0068\u0075m\u0062");_dcafd !=nil {_dbec .Thumb =_dcafd ;};if _cagfc :=_agdac .Get ("\u0042");_cagfc !=nil {_dbec .B =_cagfc ;
};if _fcfeg :=_agdac .Get ("\u0044\u0075\u0072");_fcfeg !=nil {_dbec .Dur =_fcfeg ;};if _ccgccf :=_agdac .Get ("\u0054\u0072\u0061n\u0073");_ccgccf !=nil {_dbec .Trans =_ccgccf ;};if _aadd :=_agdac .Get ("\u0041\u0041");_aadd !=nil {_dbec .AA =_aadd ;};
if _cbde :=_agdac .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cbde !=nil {_dbec .Metadata =_cbde ;};if _ccdef :=_agdac .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ccdef !=nil {_dbec .PieceInfo =_ccdef ;};if _ddbga :=_agdac .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_ddbga !=nil {_dbec .StructParents =_ddbga ;};if _cgdca :=_agdac .Get ("\u0049\u0044");_cgdca !=nil {_dbec .ID =_cgdca ;};if _bggbb :=_agdac .Get ("\u0050\u005a");_bggbb !=nil {_dbec .PZ =_bggbb ;};if _gdgdf :=_agdac .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_gdgdf !=nil {_dbec .SeparationInfo =_gdgdf ;};if _fcacd :=_agdac .Get ("\u0054\u0061\u0062\u0073");_fcacd !=nil {_dbec .Tabs =_fcacd ;};if _ggaca :=_agdac .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_ggaca !=nil {_dbec .TemplateInstantiated =_ggaca ;};if _ccefga :=_agdac .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_ccefga !=nil {_dbec .PresSteps =_ccefga ;};if _dgaba :=_agdac .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_dgaba !=nil {_dbec .UserUnit =_dgaba ;
};if _bdegb :=_agdac .Get ("\u0056\u0050");_bdegb !=nil {_dbec .VP =_bdegb ;};if _fdae :=_agdac .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_fdae !=nil {_dbec .Annots =_fdae ;};_dbec ._cgdb =_gefbaf ;return _dbec ,nil ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _df .ReadSeeker )(*CompliancePdfReader ,error ){const _dgab ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_baag ,_cfbe :=_deeac (rs ,&ReaderOpts {ComplianceMode :true },false ,_dgab );
if _cfbe !=nil {return nil ,_cfbe ;};return &CompliancePdfReader {PdfReader :_baag },nil ;};

// SetDecode sets the decode image float slice.
func (_ggbbd *Image )SetDecode (decode []float64 ){_ggbbd ._gdbc =decode };

// ToPdfObject implements interface PdfModel.
func (_gaab *PdfAnnotationMovie )ToPdfObject ()_cde .PdfObject {_gaab .PdfAnnotation .ToPdfObject ();_bgda :=_gaab ._gfg ;_dgbf :=_bgda .PdfObject .(*_cde .PdfObjectDictionary );_dgbf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u004d\u006f\u0076i\u0065"));
_dgbf .SetIfNotNil ("\u0054",_gaab .T );_dgbf .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_gaab .Movie );_dgbf .SetIfNotNil ("\u0041",_gaab .A );return _bgda ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_efgfa *PdfFieldButton )IsRadio ()bool {return _efgfa .GetType ()==ButtonTypeRadio };func (_dae *PdfReader )newPdfActionGoTo3DViewFromDict (_bec *_cde .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_bec .Get ("\u0054\u0041"),V :_bec .Get ("\u0056")},nil ;
};type pdfFontType3 struct{fontCommon ;_cedfe *_cde .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _cde .PdfObject ;Encoding _cde .PdfObject ;FontBBox _cde .PdfObject ;FontMatrix _cde .PdfObject ;FirstChar _cde .PdfObject ;LastChar _cde .PdfObject ;Widths _cde .PdfObject ;Resources _cde .PdfObject ;_eaad map[_fab .CharCode ]float64 ;_cgefe _fab .TextEncoder ;
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dbdae *PdfShadingType3 )ToPdfObject ()_cde .PdfObject {_dbdae .PdfShading .ToPdfObject ();_cebbb ,_egdef :=_dbdae .getShadingDict ();if _egdef !=nil {_fb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dbdae .Coords !=nil {_cebbb .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_dbdae .Coords );};if _dbdae .Domain !=nil {_cebbb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dbdae .Domain );};if _dbdae .Function !=nil {if len (_dbdae .Function )==1{_cebbb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbdae .Function [0].ToPdfObject ());
}else {_bfgb :=_cde .MakeArray ();for _ ,_eeffb :=range _dbdae .Function {_bfgb .Append (_eeffb .ToPdfObject ());};_cebbb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bfgb );};};if _dbdae .Extend !=nil {_cebbb .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_dbdae .Extend );
};return _dbdae ._fdbgb ;};func (_afc *PdfReader )newPdfAnnotationFromIndirectObject (_dbd *_cde .PdfIndirectObject )(*PdfAnnotation ,error ){_add ,_fcea :=_dbd .PdfObject .(*_cde .PdfObjectDictionary );if !_fcea {return nil ,_a .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_afc ._bgffc .GetModelFromPrimitive (_add );model !=nil {_ddf ,_agfeb :=model .(*PdfAnnotation );if !_agfeb {return nil ,_a .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _ddf ,nil ;};_abga :=&PdfAnnotation {};_abga ._gfg =_dbd ;_afc ._bgffc .Register (_add ,_abga );if _adg :=_add .Get ("\u0054\u0079\u0070\u0065");_adg !=nil {_gcgf ,_afb :=_adg .(*_cde .PdfObjectName );if !_afb {_fb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_adg );
}else {if *_gcgf !="\u0041\u006e\u006eo\u0074"{_fb .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_gcgf );};};};
if _ccgg :=_add .Get ("\u0052\u0065\u0063\u0074");_ccgg !=nil {_abga .Rect =_ccgg ;};if _acab :=_add .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_acab !=nil {_abga .Contents =_acab ;};if _ffcef :=_add .Get ("\u0050");_ffcef !=nil {_abga .P =_ffcef ;
};if _agd :=_add .Get ("\u004e\u004d");_agd !=nil {_abga .NM =_agd ;};if _fbe :=_add .Get ("\u004d");_fbe !=nil {_abga .M =_fbe ;};if _cdfbg :=_add .Get ("\u0046");_cdfbg !=nil {_abga .F =_cdfbg ;};if _ccge :=_add .Get ("\u0041\u0050");_ccge !=nil {_abga .AP =_ccge ;
};if _dabc :=_add .Get ("\u0041\u0053");_dabc !=nil {_abga .AS =_dabc ;};if _aeda :=_add .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_aeda !=nil {_abga .Border =_aeda ;};if _bdad :=_add .Get ("\u0043");_bdad !=nil {_abga .C =_bdad ;};if _cfff :=_add .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_cfff !=nil {_abga .StructParent =_cfff ;};if _baa :=_add .Get ("\u004f\u0043");_baa !=nil {_abga .OC =_baa ;};_aab :=_add .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _aab ==nil {_fb .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_abga ._ccfd =nil ;return _abga ,nil ;};_cbfd ,_ed :=_aab .(*_cde .PdfObjectName );if !_ed {_fb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_aab );
return nil ,_a .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_aab );};switch *_cbfd {case "\u0054\u0065\u0078\u0074":_fdgd ,_fed :=_afc .newPdfAnnotationTextFromDict (_add );
if _fed !=nil {return nil ,_fed ;};_fdgd .PdfAnnotation =_abga ;_abga ._ccfd =_fdgd ;return _abga ,nil ;case "\u004c\u0069\u006e\u006b":_dba ,_bbf :=_afc .newPdfAnnotationLinkFromDict (_add );if _bbf !=nil {return nil ,_bbf ;};_dba .PdfAnnotation =_abga ;
_abga ._ccfd =_dba ;return _abga ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_bedb ,_cbbg :=_afc .newPdfAnnotationFreeTextFromDict (_add );if _cbbg !=nil {return nil ,_cbbg ;};_bedb .PdfAnnotation =_abga ;_abga ._ccfd =_bedb ;return _abga ,nil ;
case "\u004c\u0069\u006e\u0065":_cefa ,_ded :=_afc .newPdfAnnotationLineFromDict (_add );if _ded !=nil {return nil ,_ded ;};_cefa .PdfAnnotation =_abga ;_abga ._ccfd =_cefa ;_fb .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_abga ,_abga );
_fb .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_cefa ,_cefa );_fb .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_cefa .PdfAnnotationMarkup ,_cefa .PdfAnnotationMarkup );
return _abga ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_dbc ,_bagc :=_afc .newPdfAnnotationSquareFromDict (_add );if _bagc !=nil {return nil ,_bagc ;};_dbc .PdfAnnotation =_abga ;_abga ._ccfd =_dbc ;return _abga ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_egg ,_gcd :=_afc .newPdfAnnotationCircleFromDict (_add );
if _gcd !=nil {return nil ,_gcd ;};_egg .PdfAnnotation =_abga ;_abga ._ccfd =_egg ;return _abga ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_ccag ,_gdda :=_afc .newPdfAnnotationPolygonFromDict (_add );if _gdda !=nil {return nil ,_gdda ;};_ccag .PdfAnnotation =_abga ;
_abga ._ccfd =_ccag ;return _abga ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_fecdc ,_aadc :=_afc .newPdfAnnotationPolyLineFromDict (_add );if _aadc !=nil {return nil ,_aadc ;};_fecdc .PdfAnnotation =_abga ;_abga ._ccfd =_fecdc ;return _abga ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_ace ,_bggb :=_afc .newPdfAnnotationHighlightFromDict (_add );if _bggb !=nil {return nil ,_bggb ;};_ace .PdfAnnotation =_abga ;_abga ._ccfd =_ace ;return _abga ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_cgef ,_dgb :=_afc .newPdfAnnotationUnderlineFromDict (_add );
if _dgb !=nil {return nil ,_dgb ;};_cgef .PdfAnnotation =_abga ;_abga ._ccfd =_cgef ;return _abga ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_aba ,_ceg :=_afc .newPdfAnnotationSquigglyFromDict (_add );if _ceg !=nil {return nil ,_ceg ;
};_aba .PdfAnnotation =_abga ;_abga ._ccfd =_aba ;return _abga ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_dafd ,_edb :=_afc .newPdfAnnotationStrikeOut (_add );if _edb !=nil {return nil ,_edb ;};_dafd .PdfAnnotation =_abga ;_abga ._ccfd =_dafd ;
return _abga ,nil ;case "\u0043\u0061\u0072e\u0074":_gadf ,_dccdd :=_afc .newPdfAnnotationCaretFromDict (_add );if _dccdd !=nil {return nil ,_dccdd ;};_gadf .PdfAnnotation =_abga ;_abga ._ccfd =_gadf ;return _abga ,nil ;case "\u0053\u0074\u0061m\u0070":_eeb ,_dfgg :=_afc .newPdfAnnotationStampFromDict (_add );
if _dfgg !=nil {return nil ,_dfgg ;};_eeb .PdfAnnotation =_abga ;_abga ._ccfd =_eeb ;return _abga ,nil ;case "\u0049\u006e\u006b":_dfe ,_gef :=_afc .newPdfAnnotationInkFromDict (_add );if _gef !=nil {return nil ,_gef ;};_dfe .PdfAnnotation =_abga ;_abga ._ccfd =_dfe ;
return _abga ,nil ;case "\u0050\u006f\u0070u\u0070":_ccb ,_bbgd :=_afc .newPdfAnnotationPopupFromDict (_add );if _bbgd !=nil {return nil ,_bbgd ;};_ccb .PdfAnnotation =_abga ;_abga ._ccfd =_ccb ;return _abga ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_bedc ,_afee :=_afc .newPdfAnnotationFileAttachmentFromDict (_add );
if _afee !=nil {return nil ,_afee ;};_bedc .PdfAnnotation =_abga ;_abga ._ccfd =_bedc ;return _abga ,nil ;case "\u0053\u006f\u0075n\u0064":_ggd ,_ede :=_afc .newPdfAnnotationSoundFromDict (_add );if _ede !=nil {return nil ,_ede ;};_ggd .PdfAnnotation =_abga ;
_abga ._ccfd =_ggd ;return _abga ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_gfa ,_dgge :=_afc .newPdfAnnotationRichMediaFromDict (_add );if _dgge !=nil {return nil ,_dgge ;};_gfa .PdfAnnotation =_abga ;_abga ._ccfd =_gfa ;return _abga ,nil ;
case "\u004d\u006f\u0076i\u0065":_edba ,_dbcf :=_afc .newPdfAnnotationMovieFromDict (_add );if _dbcf !=nil {return nil ,_dbcf ;};_edba .PdfAnnotation =_abga ;_abga ._ccfd =_edba ;return _abga ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_dbf ,_bdcb :=_afc .newPdfAnnotationScreenFromDict (_add );
if _bdcb !=nil {return nil ,_bdcb ;};_dbf .PdfAnnotation =_abga ;_abga ._ccfd =_dbf ;return _abga ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_gddc ,_fgd :=_afc .newPdfAnnotationWidgetFromDict (_add );if _fgd !=nil {return nil ,_fgd ;};_gddc .PdfAnnotation =_abga ;
_abga ._ccfd =_gddc ;return _abga ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_aee ,_afca :=_afc .newPdfAnnotationPrinterMarkFromDict (_add );if _afca !=nil {return nil ,_afca ;};_aee .PdfAnnotation =_abga ;_abga ._ccfd =_aee ;
return _abga ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_eab ,_faga :=_afc .newPdfAnnotationTrapNetFromDict (_add );if _faga !=nil {return nil ,_faga ;};_eab .PdfAnnotation =_abga ;_abga ._ccfd =_eab ;return _abga ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_fddg ,_faf :=_afc .newPdfAnnotationWatermarkFromDict (_add );
if _faf !=nil {return nil ,_faf ;};_fddg .PdfAnnotation =_abga ;_abga ._ccfd =_fddg ;return _abga ,nil ;case "\u0033\u0044":_gfd ,_fff :=_afc .newPdfAnnotation3DFromDict (_add );if _fff !=nil {return nil ,_fff ;};_gfd .PdfAnnotation =_abga ;_abga ._ccfd =_gfd ;
return _abga ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_gacb ,_cdfe :=_afc .newPdfAnnotationProjectionFromDict (_add );if _cdfe !=nil {return nil ,_cdfe ;};_gacb .PdfAnnotation =_abga ;_abga ._ccfd =_gacb ;return _abga ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_gdf ,_bdbd :=_afc .newPdfAnnotationRedactFromDict (_add );if _bdbd !=nil {return nil ,_bdbd ;};_gdf .PdfAnnotation =_abga ;_abga ._ccfd =_gdf ;return _abga ,nil ;};_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_cbfd );
return nil ,nil ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_cde .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _cde .PdfObject ;A _cde .PdfObject ;SE _cde .PdfObject ;C _cde .PdfObject ;F _cde .PdfObject ;
_baaeg *_cde .PdfIndirectObject ;};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_cde .PdfObjectArray ;ExtGState _cde .PdfObject ;};func _edggb (_fegag *_bbb .ImageBase )(_abae Image ){_abae .Width =int64 (_fegag .Width );_abae .Height =int64 (_fegag .Height );
_abae .BitsPerComponent =int64 (_fegag .BitsPerComponent );_abae .ColorComponents =_fegag .ColorComponents ;_abae .Data =_fegag .Data ;_abae ._gdbc =_fegag .Decode ;_abae ._cbcfe =_fegag .Alpha ;return _abae ;};func _abd (_febd _cde .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_fb .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_febd .String (),_febd );
_dcb :=NewPdfColorspaceSpecialPattern ();if _ecaa ,_bbge :=_febd .(*_cde .PdfIndirectObject );_bbge {_dcb ._fgdg =_ecaa ;};_febd =_cde .TraceToDirectObject (_febd );if _gaeb ,_aade :=_febd .(*_cde .PdfObjectName );_aade {if *_gaeb !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_a .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _dcb ,nil ;};_cbgag ,_bgcdf :=_febd .(*_cde .PdfObjectArray );if !_bgcdf {_fb .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_febd );
return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _cbgag .Len ()!=1&&_cbgag .Len ()!=2{_fb .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_cbgag );
return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_febd =_cbgag .Get (0);if _beab ,_gaggac :=_febd .(*_cde .PdfObjectName );_gaggac {if *_beab !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_fb .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_beab );
return nil ,_a .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _cbgag .Len ()> 1{_febd =_cbgag .Get (1);_febd =_cde .TraceToDirectObject (_febd );_aedfe ,_fdbc :=NewPdfColorspaceFromPdfObject (_febd );if _fdbc !=nil {return nil ,_fdbc ;
};_dcb .UnderlyingCS =_aedfe ;};_fb .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_dcb .UnderlyingCS );
return _dcb ,nil ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _cde .PdfObject ;H _cde .PdfObject ;};

// SetBorderWidth sets the style's border width.
func (_dbe *PdfBorderStyle )SetBorderWidth (width float64 ){_dbe .W =&width };

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// ToPdfObject converts rectangle to a PDF object.
func (_ecdgbe *PdfRectangle )ToPdfObject ()_cde .PdfObject {return _cde .MakeArray (_cde .MakeFloat (_ecdgbe .Llx ),_cde .MakeFloat (_ecdgbe .Lly ),_cde .MakeFloat (_ecdgbe .Urx ),_cde .MakeFloat (_ecdgbe .Ury ));};

// ToInteger convert to an integer format.
func (_aggd *PdfColorLab )ToInteger (bits int )[3]uint32 {_gdgg :=_ce .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gdgg *_aggd .L ()),uint32 (_gdgg *_aggd .A ()),uint32 (_gdgg *_aggd .B ())};};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_gfebc *modelManager )GetPrimitiveFromModel (model PdfModel )_cde .PdfObject {_abcaa ,_fdadb :=_gfebc ._fdaa [model ];if !_fdadb {return nil ;};return _abcaa ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_cdfff PdfModel ;_gfed *_cde .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_cde .PdfObjectName ;T *_cde .PdfObjectString ;TU *_cde .PdfObjectString ;TM *_cde .PdfObjectString ;Ff *_cde .PdfObjectInteger ;
V _cde .PdfObject ;DV _cde .PdfObject ;AA _cde .PdfObject ;VariableText *VariableText ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_febcd *PdfColorspaceICCBased )GetContainingPdfObject ()_cde .PdfObject {return _febcd ._eaeab };

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_ebf :=NewPdfAnnotation ();_fbc :=&PdfAnnotation3D {};_fbc .PdfAnnotation =_ebf ;_ebf .SetContext (_fbc );return _fbc ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _cde .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _cde .PdfObject ;Contents _cde .PdfObject ;
Rotate *int64 ;Group _cde .PdfObject ;Thumb _cde .PdfObject ;B _cde .PdfObject ;Dur _cde .PdfObject ;Trans _cde .PdfObject ;AA _cde .PdfObject ;Metadata _cde .PdfObject ;PieceInfo _cde .PdfObject ;StructParents _cde .PdfObject ;ID _cde .PdfObject ;PZ _cde .PdfObject ;
SeparationInfo _cde .PdfObject ;Tabs _cde .PdfObject ;TemplateInstantiated _cde .PdfObject ;PresSteps _cde .PdfObject ;UserUnit _cde .PdfObject ;VP _cde .PdfObject ;Annots _cde .PdfObject ;_babf []*PdfAnnotation ;_bgdbb *_cde .PdfObjectDictionary ;_aaad *_cde .PdfIndirectObject ;
_cgda _cde .PdfObjectDictionary ;_cgdb *PdfReader ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_gabb *PdfColorspaceDeviceNAttributes )ToPdfObject ()_cde .PdfObject {_ccbd :=_cde .MakeDict ();if _gabb .Subtype !=nil {_ccbd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gabb .Subtype );};_ccbd .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_gabb .Colorants );
_ccbd .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_gabb .Process );_ccbd .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_gabb .MixingHints );if _gabb ._gcfba !=nil {_gabb ._gcfba .PdfObject =_ccbd ;return _gabb ._gcfba ;
};return _ccbd ;};func (_edag *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// ToPdfObject implements interface PdfModel.
func (_bba *PdfAnnotationFreeText )ToPdfObject ()_cde .PdfObject {_bba .PdfAnnotation .ToPdfObject ();_fcb :=_bba ._gfg ;_bdba :=_fcb .PdfObject .(*_cde .PdfObjectDictionary );_bba .PdfAnnotationMarkup .appendToPdfDictionary (_bdba );_bdba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_bdba .SetIfNotNil ("\u0044\u0041",_bba .DA );_bdba .SetIfNotNil ("\u0051",_bba .Q );_bdba .SetIfNotNil ("\u0052\u0043",_bba .RC );_bdba .SetIfNotNil ("\u0044\u0053",_bba .DS );_bdba .SetIfNotNil ("\u0043\u004c",_bba .CL );_bdba .SetIfNotNil ("\u0049\u0054",_bba .IT );
_bdba .SetIfNotNil ("\u0042\u0045",_bba .BE );_bdba .SetIfNotNil ("\u0052\u0044",_bba .RD );_bdba .SetIfNotNil ("\u0042\u0053",_bba .BS );_bdba .SetIfNotNil ("\u004c\u0045",_bba .LE );return _fcb ;};

// ToPdfObject implements interface PdfModel.
func (_efag *PdfAnnotationLine )ToPdfObject ()_cde .PdfObject {_efag .PdfAnnotation .ToPdfObject ();_dabe :=_efag ._gfg ;_bgga :=_dabe .PdfObject .(*_cde .PdfObjectDictionary );_efag .PdfAnnotationMarkup .appendToPdfDictionary (_bgga );_bgga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u004c\u0069\u006e\u0065"));
_bgga .SetIfNotNil ("\u004c",_efag .L );_bgga .SetIfNotNil ("\u0042\u0053",_efag .BS );_bgga .SetIfNotNil ("\u004c\u0045",_efag .LE );_bgga .SetIfNotNil ("\u0049\u0043",_efag .IC );_bgga .SetIfNotNil ("\u004c\u004c",_efag .LL );_bgga .SetIfNotNil ("\u004c\u004c\u0045",_efag .LLE );
_bgga .SetIfNotNil ("\u0043\u0061\u0070",_efag .Cap );_bgga .SetIfNotNil ("\u0049\u0054",_efag .IT );_bgga .SetIfNotNil ("\u004c\u004c\u004f",_efag .LLO );_bgga .SetIfNotNil ("\u0043\u0050",_efag .CP );_bgga .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_efag .Measure );
_bgga .SetIfNotNil ("\u0043\u004f",_efag .CO );return _dabe ;};func (_gfafdb *pdfFontSimple )addEncoding ()error {var (_gbdea string ;_eeae map[_fab .CharCode ]_fab .GlyphName ;_bcebdf _fab .SimpleEncoder ;);if _gfafdb .Encoder ()!=nil {_geegd ,_dgbfd :=_gfafdb .Encoder ().(_fab .SimpleEncoder );
if _dgbfd &&_geegd !=nil {_gbdea =_geegd .BaseName ();};};if _gfafdb .Encoding !=nil {_ecfae ,_ceeb ,_ggbac :=_gfafdb .getFontEncoding ();if _ggbac !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gfafdb ._bbdf ,_gfafdb ._cfgg ,_gfafdb .Encoding ,_gfafdb .Encoding ,_ggbac );
return _ggbac ;};if _ecfae !=""{_gbdea =_ecfae ;};_eeae =_ceeb ;_bcebdf ,_ggbac =_fab .NewSimpleTextEncoder (_gbdea ,_eeae );if _ggbac !=nil {return _ggbac ;};};if _bcebdf ==nil {_cfccb :=_gfafdb ._bceac ;if _cfccb !=nil {switch _gfafdb ._cfgg {case "\u0054\u0079\u0070e\u0031":if _cfccb .fontFile !=nil &&_cfccb .fontFile ._eace !=nil {_fb .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_bcebdf =_cfccb .fontFile ._eace ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _cfccb ._faacg !=nil {_fb .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_efcag ,_gbgee :=_cfccb ._faacg .MakeEncoder ();
if _gbgee ==nil {_bcebdf =_efcag ;};if _gfafdb ._dcgd ==nil {_gfafdb ._dcgd =_cfccb ._faacg .MakeToUnicode ();};};};};};if _bcebdf !=nil {if _eeae !=nil {_fb .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eeae ,_gfafdb .baseFields ());
_bcebdf =_fab .ApplyDifferences (_bcebdf ,_eeae );};_gfafdb .SetEncoder (_bcebdf );};return nil ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_eedd *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _eedd .baseFields ()._bceac !=nil {return _eedd .baseFields ()._bceac ;};if _geaf :=_eedd ._dcgb .getFontDescriptor ();_geaf !=nil {return _geaf ;};_fb .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_eedd );
return nil ;};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _cde .PdfObjectName ;};

// GetSubFilter returns SubFilter value or empty string.
func (_faeb *pdfSignDictionary )GetSubFilter ()string {_dgegc :=_faeb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _dgegc ==nil {return "";};if _fegce ,_bddeb :=_cde .GetNameVal (_dgegc );_bddeb {return _fegce ;};return "";};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_bege *PdfPage )AppendContentStream (contentStr string )error {_edcb ,_bcfbd :=_bege .GetContentStreams ();if _bcfbd !=nil {return _bcfbd ;};if len (_edcb )==0{_edcb =[]string {contentStr };return _bege .SetContentStreams (_edcb ,_cde .NewFlateEncoder ());
};var _cdadd _bb .Buffer ;_cdadd .WriteString (_edcb [len (_edcb )-1]);_cdadd .WriteString ("\u000a");_cdadd .WriteString (contentStr );_edcb [len (_edcb )-1]=_cdadd .String ();return _bege .SetContentStreams (_edcb ,_cde .NewFlateEncoder ());};

// ToPdfObject implements interface PdfModel.
func (_dag *PdfAnnotationInk )ToPdfObject ()_cde .PdfObject {_dag .PdfAnnotation .ToPdfObject ();_eacg :=_dag ._gfg ;_aefa :=_eacg .PdfObject .(*_cde .PdfObjectDictionary );_dag .PdfAnnotationMarkup .appendToPdfDictionary (_aefa );_aefa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0049\u006e\u006b"));
_aefa .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_dag .InkList );_aefa .SetIfNotNil ("\u0042\u0053",_dag .BS );return _eacg ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);
FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);
FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);
FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func (_bagf *PdfReader )newPdfAnnotationPopupFromDict (_abgg *_cde .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_aea :=PdfAnnotationPopup {};_aea .Parent =_abgg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_aea .Open =_abgg .Get ("\u004f\u0070\u0065\u006e");return &_aea ,nil ;};func (_gfdgc *pdfFontType0 )subsetRegistered ()error {_dcee ,_efegf :=_gfdgc .DescendantFont ._dcgb .(*pdfCIDFontType2 );if !_efegf {_fb .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_gfdgc .DescendantFont );
return nil ;};if _dcee ==nil {return nil ;};if _dcee ._bceac ==nil {_fb .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _gfdgc ._cecbfe ==nil {_fb .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_edad ,_efegf :=_cde .GetStream (_dcee ._bceac .FontFile2 );if !_efegf {_fb .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _gf .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_facb ,_eegcd :=_cde .DecodeStream (_edad );if _eegcd !=nil {_fb .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_eegcd );
return _eegcd ;};_gecd ,_eegcd :=_bae .Parse (_bb .NewReader (_facb ));if _eegcd !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_edad .Stream ));
return _eegcd ;};var _gccd []rune ;var _aaccc *_bae .Font ;switch _bbga :=_gfdgc ._cecbfe .(type ){case *_fab .TrueTypeFontEncoder :_gccd =_bbga .RegisteredRunes ();_aaccc ,_eegcd =_gecd .SubsetKeepRunes (_gccd );if _eegcd !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eegcd );
return _eegcd ;};_bbga .SubsetRegistered ();case *_fab .IdentityEncoder :_gccd =_bbga .RegisteredRunes ();_fddfa :=make ([]_bae .GlyphIndex ,len (_gccd ));for _efdf ,_daccb :=range _gccd {_fddfa [_efdf ]=_bae .GlyphIndex (_daccb );};_aaccc ,_eegcd =_gecd .SubsetKeepIndices (_fddfa );
if _eegcd !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eegcd );return _eegcd ;};case _fab .SimpleEncoder :_bfffd :=_bbga .Charcodes ();for _ ,_bbbag :=range _bfffd {_gbcga ,_facf :=_bbga .CharcodeToRune (_bbbag );if !_facf {_fb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_bbbag );
continue ;};_gccd =append (_gccd ,_gbcga );};default:return _a .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_gfdgc ._cecbfe );
};var _egff _bb .Buffer ;_eegcd =_aaccc .Write (&_egff );if _eegcd !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eegcd );return _eegcd ;};if _gfdgc ._dcgd !=nil {_adfe :=make (map[_ega .CharCode ]rune ,len (_gccd ));for _ ,_efbd :=range _gccd {_deedb ,_gaea :=_gfdgc ._cecbfe .RuneToCharcode (_efbd );
if !_gaea {continue ;};_adfe [_ega .CharCode (_deedb )]=_efbd ;};_gfdgc ._dcgd =_ega .NewToUnicodeCMap (_adfe );};_edad ,_eegcd =_cde .MakeStream (_egff .Bytes (),_cde .NewFlateEncoder ());if _eegcd !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eegcd );
return _eegcd ;};_edad .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cde .MakeInteger (int64 (_egff .Len ())));if _ddab ,_cdcae :=_cde .GetStream (_dcee ._bceac .FontFile2 );_cdcae {*_ddab =*_edad ;}else {_dcee ._bceac .FontFile2 =_edad ;};_dceg :=_bfcfa ();
if len (_gfdgc ._bbdf )> 0{_gfdgc ._bbdf =_aagg (_gfdgc ._bbdf ,_dceg );};if len (_dcee ._bbdf )> 0{_dcee ._bbdf =_aagg (_dcee ._bbdf ,_dceg );};if len (_gfdgc ._edcec )> 0{_gfdgc ._edcec =_aagg (_gfdgc ._edcec ,_dceg );};if _dcee ._bceac !=nil {_dgba ,_gbeff :=_cde .GetName (_dcee ._bceac .FontName );
if _gbeff &&len (_dgba .String ())> 0{_beec :=_aagg (_dgba .String (),_dceg );_dcee ._bceac .FontName =_cde .MakeName (_beec );};};return nil ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};func (_cae *PdfReader )newPdfActionNamedFromDict (_gea *_cde .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_gea .Get ("\u004e")},nil ;
};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_dagg *PdfAppender )UpdatePage (page *PdfPage ){_dagg .updateObjectsDeep (page .ToPdfObject (),nil )};

// Val returns the value of the color.
func (_cagf *PdfColorCalGray )Val ()float64 {return float64 (*_cagf )};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _da .Permissions ;Algorithm EncryptionAlgorithm ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_dbgcf *_cde .PdfIndirectObject ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_bgb :=NewPdfAnnotation ();_debgc :=&PdfAnnotationWidget {};_debgc .PdfAnnotation =_bgb ;_bgb .SetContext (_debgc );return _debgc ;};

// ToPdfObject implements interface PdfModel.
func (_fdb *PdfAnnotationScreen )ToPdfObject ()_cde .PdfObject {_fdb .PdfAnnotation .ToPdfObject ();_fceg :=_fdb ._gfg ;_decd :=_fceg .PdfObject .(*_cde .PdfObjectDictionary );_decd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_decd .SetIfNotNil ("\u0054",_fdb .T );_decd .SetIfNotNil ("\u004d\u004b",_fdb .MK );_decd .SetIfNotNil ("\u0041",_fdb .A );_decd .SetIfNotNil ("\u0041\u0041",_fdb .AA );return _fceg ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_dc :=NewPdfAction ();_ade :=&PdfActionGoTo3DView {};_ade .PdfAction =_dc ;_dc .SetContext (_ade );return _ade ;};

// GetContentStream returns the XObject Form's content stream.
func (_ffeaf *XObjectForm )GetContentStream ()([]byte ,error ){_dafaa ,_eecd :=_cde .DecodeStream (_ffeaf ._fbeeg );if _eecd !=nil {return nil ,_eecd ;};return _dafaa ,nil ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_faeg :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_faeg .N =N ;return _faeg ,nil ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_dcgb pdfFont };func _ggcfc (_ecdde *PdfPage ){_bacbaf :=_af .GetLicenseKey ();if _bacbaf !=nil &&_bacbaf .IsLicensed (){return ;};_gfbgbf :=_cde .PdfObjectName ("\u0055\u0046\u0031");if !_ecdde .Resources .HasFontByName (_gfbgbf ){_ecdde .Resources .SetFontByName (_gfbgbf ,DefaultFont ().ToPdfObject ());
};var _defge []string ;_defge =append (_defge ,"\u0071");_defge =append (_defge ,"\u0042\u0054");_defge =append (_defge ,_a .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_gfbgbf .String ()));_defge =append (_defge ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_defge =append (_defge ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_bbeff :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_defge =append (_defge ,_a .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_bbeff ));_defge =append (_defge ,"\u0045\u0054");_defge =append (_defge ,"\u0051");_ebaee :=_cce .Join (_defge ,"\u000a");_ecdde .AddContentStreamByString (_ebaee );_ecdde .ToPdfObject ();
};

// Register registers (caches) a model to primitive object relationship.
func (_fbaad *modelManager )Register (primitive _cde .PdfObject ,model PdfModel ){_fbaad ._fdaa [model ]=primitive ;_fbaad ._ffdgf [primitive ]=model ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_gfed :_cde .MakeIndirectObject (_cde .MakeDict ())}};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_cde .PdfObject ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
//   - Adding certificates, OCSP and CRL information in the global scope of the
//     DSS. The global data is used for validating any of the signatures present
//     in the document.
//   - Adding certificates, OCSP and CRL information for a single signature,
//     through an entry in the VRI dictionary of the DSS. The added data is used
//     for validating that particular signature only. This is the recommended
//     method for adding validation data for a signature. However, this is not
//     is not possible in the same revision the signature is applied. Validation
//     data for a signature is added based on the Contents entry of the signature,
//     which is known only after the revision is written. Even if the Contents
//     are known (e.g. when signing externally), updating the DSS at that point
//     would invalidate the calculated signature. As a result, if adding LTV
//     in the same revision is a requirement, use the first method.
//     See LTV.EnableChain.
//
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_fdg .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_fdg .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_fdg .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_cfdb *PdfAppender ;_fcdcb *DSS ;};func (_gfece *PdfAnnotation )String ()string {_dab :="";_geed ,_ggg :=_gfece .ToPdfObject ().(*_cde .PdfIndirectObject );if _ggg {_dab =_a .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_gfece ._ccfd ,_geed .PdfObject .String ());
};return _dab ;};func (_gdgd fontCommon )coreString ()string {_gcad :="";if _gdgd ._bceac !=nil {_gcad =_gdgd ._bceac .String ();};return _a .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_gdgd ._cfgg ,_gdgd ._bbdf ,_gdgd ._edcec ,_gdgd ._aecf ,_gdgd ._aaegd !=nil ,_gdgd .fontFlags (),_gcad );
};func _ddcd ()string {_ggdeb .Lock ();defer _ggdeb .Unlock ();return _eadgce };func (_aedfef *pdfFontType0 )baseFields ()*fontCommon {return &_aedfef .fontCommon };

// MergePageWith appends page content to source Pdf file page content.
func (_gbce *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_bga :=pageNum -1;var _adeb *PdfPage ;for _gfcdb ,_cebcb :=range _gbce ._dbaf {if _gfcdb ==_bga {_adeb =_cebcb ;};};if _adeb ==nil {return _a .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _adeb ._aaad !=nil &&_adeb ._aaad .GetParser ()==_gbce ._dbb ._fdccd {_adeb =_adeb .Duplicate ();_gbce ._dbaf [_bga ]=_adeb ;};page =page .Duplicate ();_ggcfc (page );_dfcb :=_ebfa (_adeb );_efbe :=_ebfa (page );_eaag :=make (map[_cde .PdfObjectName ]_cde .PdfObjectName );
for _bee :=range _efbe {if _ ,_ceca :=_dfcb [_bee ];_ceca {for _gdcae :=1;true ;_gdcae ++{_cgdd :=_cde .PdfObjectName (string (_bee )+_ccg .Itoa (_gdcae ));if _ ,_bada :=_dfcb [_cgdd ];!_bada {_eaag [_bee ]=_cgdd ;break ;};};};};_feg ,_fegf :=page .GetContentStreams ();
if _fegf !=nil {return _fegf ;};_eead ,_fegf :=_adeb .GetContentStreams ();if _fegf !=nil {return _fegf ;};for _fcdc ,_gcaf :=range _feg {for _aefg ,_fgfd :=range _eaag {_gcaf =_cce .Replace (_gcaf ,"\u002f"+string (_aefg ),"\u002f"+string (_fgfd ),-1);
};_feg [_fcdc ]=_gcaf ;};_eead =append (_eead ,_feg ...);if _dffc :=_adeb .SetContentStreams (_eead ,_cde .NewFlateEncoder ());_dffc !=nil {return _dffc ;};_adeb ._babf =append (_adeb ._babf ,page ._babf ...);if _adeb .Resources ==nil {_adeb .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_adeb .Resources .Font =_gbce .mergeResources (_adeb .Resources .Font ,page .Resources .Font ,_eaag );_adeb .Resources .XObject =_gbce .mergeResources (_adeb .Resources .XObject ,page .Resources .XObject ,_eaag );_adeb .Resources .Properties =_gbce .mergeResources (_adeb .Resources .Properties ,page .Resources .Properties ,_eaag );
if _adeb .Resources .ProcSet ==nil {_adeb .Resources .ProcSet =page .Resources .ProcSet ;};_adeb .Resources .Shading =_gbce .mergeResources (_adeb .Resources .Shading ,page .Resources .Shading ,_eaag );_adeb .Resources .ExtGState =_gbce .mergeResources (_adeb .Resources .ExtGState ,page .Resources .ExtGState ,_eaag );
};_ffbda ,_fegf :=_adeb .GetMediaBox ();if _fegf !=nil {return _fegf ;};_gaee ,_fegf :=page .GetMediaBox ();if _fegf !=nil {return _fegf ;};var _egef bool ;if _ffbda .Llx > _gaee .Llx {_ffbda .Llx =_gaee .Llx ;_egef =true ;};if _ffbda .Lly > _gaee .Lly {_ffbda .Lly =_gaee .Lly ;
_egef =true ;};if _ffbda .Urx < _gaee .Urx {_ffbda .Urx =_gaee .Urx ;_egef =true ;};if _ffbda .Ury < _gaee .Ury {_ffbda .Ury =_gaee .Ury ;_egef =true ;};if _egef {_adeb .MediaBox =_ffbda ;};return nil ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_eabfg *CompliancePdfReader )error ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_cafd *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_ebgf :=_afa .NewReader (img .getBase ());_ebga :=_bbb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._cbcfe ,img ._gdbc );
_cacda :=_afa .NewWriter (_ebga );_fccf :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;_ddfe :=_cafd .GetNumComponents ();_baeff :=make ([]uint32 ,_ddfe );_fccb :=make ([]float64 ,_ddfe );for {_cead :=_ebgf .ReadSamples (_baeff );if _cead ==_df .EOF {break ;
}else if _cead !=nil {return img ,_cead ;};for _geff :=0;_geff < _ddfe ;_geff ++{_ceaab :=float64 (_baeff [_geff ])/_fccf ;_fccb [_geff ]=_ceaab ;};_gfeg ,_cead :=_cafd .TintTransform .Evaluate (_fccb );if _cead !=nil {return img ,_cead ;};for _ ,_bbbd :=range _gfeg {_bbbd =_ce .Min (_ce .Max (0,_bbbd ),1.0);
if _cead =_cacda .WriteSample (uint32 (_bbbd *_fccf ));_cead !=nil {return img ,_cead ;};};};return _cafd .AlternateSpace .ImageToRGB (_edggb (&_ebga ));};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_dffe *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _dffe .Alternate ==nil {_fb .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _dffe .N ==1{_fb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_edga :=NewPdfColorspaceDeviceGray ();return _edga .ImageToRGB (img );}else if _dffe .N ==3{_fb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _dffe .N ==4{_fb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_egadb :=NewPdfColorspaceDeviceCMYK ();return _egadb .ImageToRGB (img );}else {return img ,_gf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_fb .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_dffe );
_aafa ,_eeabgf :=_dffe .Alternate .ImageToRGB (img );_fb .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_fb .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_aafa );
return _aafa ,_eeabgf ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_cde .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_cde .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_cde .PdfObjectBool ;_fdea PdfModel ;_fdbgb _cde .PdfObject ;};func (_dde *PdfReader )newPdfAnnotationWidgetFromDict (_adab *_cde .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_gbgec :=PdfAnnotationWidget {};
_gbgec .H =_adab .Get ("\u0048");_gbgec .MK =_adab .Get ("\u004d\u004b");_gbgec .A =_adab .Get ("\u0041");_gbgec .AA =_adab .Get ("\u0041\u0041");_gbgec .BS =_adab .Get ("\u0042\u0053");_gbgec .Parent =_adab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
return &_gbgec ,nil ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cde .PdfObject ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_defd *PdfOutline )ToPdfObject ()_cde .PdfObject {_acdcb :=_defd ._abcb ;_deeaf :=_acdcb .PdfObject .(*_cde .PdfObjectDictionary );_deeaf .Set ("\u0054\u0079\u0070\u0065",_cde .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _defd .First !=nil {_deeaf .Set ("\u0046\u0069\u0072s\u0074",_defd .First .ToPdfObject ());
};if _defd .Last !=nil {_deeaf .Set ("\u004c\u0061\u0073\u0074",_defd .Last .GetContext ().GetContainingPdfObject ());};if _defd .Parent !=nil {_deeaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_defd .Parent .GetContext ().GetContainingPdfObject ());
};if _defd .Count !=nil {_deeaf .Set ("\u0043\u006f\u0075n\u0074",_cde .MakeInteger (*_defd .Count ));};return _acdcb ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _cde .PdfObjectName ;};

// ToPdfObject implements interface PdfModel.
func (_cdgg *PdfAnnotationRedact )ToPdfObject ()_cde .PdfObject {_cdgg .PdfAnnotation .ToPdfObject ();_cddcg :=_cdgg ._gfg ;_facc :=_cddcg .PdfObject .(*_cde .PdfObjectDictionary );_cdgg .PdfAnnotationMarkup .appendToPdfDictionary (_facc );_facc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_facc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cdgg .QuadPoints );_facc .SetIfNotNil ("\u0049\u0043",_cdgg .IC );_facc .SetIfNotNil ("\u0052\u004f",_cdgg .RO );_facc .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_cdgg .OverlayText );
_facc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_cdgg .Repeat );_facc .SetIfNotNil ("\u0044\u0041",_cdgg .DA );_facc .SetIfNotNil ("\u0051",_cdgg .Q );return _cddcg ;};func (_agagd *PdfReader )flattenFieldsWithOpts (_agef bool ,_fecgb FieldAppearanceGenerator ,_cbbf *FieldFlattenOpts )error {if _cbbf ==nil {_cbbf =&FieldFlattenOpts {};
};var _cecd bool ;_gedeb :=map[*PdfAnnotation ]bool {};{var _ddaef []*PdfField ;_efee :=_agagd .AcroForm ;if _efee !=nil {if _cbbf .FilterFunc !=nil {_ddaef =_efee .filteredFields (_cbbf .FilterFunc ,true );_cecd =_efee .Fields !=nil &&len (*_efee .Fields )> 0;
}else {_ddaef =_efee .AllFields ();};};for _ ,_cbed :=range _ddaef {if len (_cbed .Annotations )< 1{_fb .Log .Debug ("\u004e\u006f\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0075\u006ed\u0020\u0066\u006f\u0072\u003a\u0020\u0025v\u002c\u0020\u006c\u006f\u006f\u006b\u0020\u0069\u006e\u0074\u006f \u004b\u0069\u0064\u0073\u0020\u004f\u0062\u006a\u0065\u0063\u0074",_cbed .PartialName ());
for _ggbe ,_cgb :=range _cbed .Kids {for _ ,_afcag :=range _cgb .Annotations {_gedeb [_afcag .PdfAnnotation ]=_cbed .V !=nil ;if _cgb .V ==nil {_cgb .V =_cbed .V ;};if _cgb .T ==nil {_cgb .T =_cde .MakeString (_a .Sprintf ("\u0025\u0073\u0023%\u0064",_cbed .PartialName (),_ggbe ));
};if _fecgb !=nil {_gfdf ,_ggddc :=_fecgb .GenerateAppearanceDict (_efee ,_cgb ,_afcag );if _ggddc !=nil {return _ggddc ;};_afcag .AP =_gfdf ;};};};};for _ ,_gbfbf :=range _cbed .Annotations {_gedeb [_gbfbf .PdfAnnotation ]=_cbed .V !=nil ;if _fecgb !=nil {_bgbfa ,_geffg :=_fecgb .GenerateAppearanceDict (_efee ,_cbed ,_gbfbf );
if _geffg !=nil {return _geffg ;};_gbfbf .AP =_bgbfa ;};};};};if _agef {for _ ,_fbba :=range _agagd .PageList {_cbfac ,_dacfg :=_fbba .GetAnnotations ();if _dacfg !=nil {return _dacfg ;};for _ ,_bbeg :=range _cbfac {_gedeb [_bbeg ]=true ;};};};for _ ,_gbgfdc :=range _agagd .PageList {_ccaef :=_gbgfdc .flattenFieldsWithOpts (_fecgb ,_cbbf ,_gedeb );
if _ccaef !=nil {return _ccaef ;};};if !_cecd {_agagd .AcroForm =nil ;};return nil ;};func _gcbee (_dgdbb *_cde .PdfObjectDictionary )bool {for _ ,_fbbb :=range _dgdbb .Keys (){if _ ,_dacab :=_aebcb [_fbbb .String ()];_dacab {return true ;};};return false ;
};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _df .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _bbace ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _deeac (rs ,opts ,true ,_bbace );
};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_edbd *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// L returns the value of the L component of the color.
func (_gcbga *PdfColorLab )L ()float64 {return _gcbga [0]};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_bbbg *PdfPage )GetPageAsIndirectObject ()*_cde .PdfIndirectObject {return _bbbg ._aaad };

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_gegf *Image )ToJBIG2Image ()(*_cde .JBIG2Image ,error ){_efdee ,_bggbe :=_gegf .ToGoImage ();if _bggbe !=nil {return nil ,_bggbe ;};return _cde .GoImageToJBIG2 (_efdee ,_cde .JB2ImageAutoThreshold );};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_geccd *OutlineItem )Insert (index uint ,item *OutlineItem ){_fgebf :=uint (len (_geccd .Entries ));if index > _fgebf {index =_fgebf ;};_geccd .Entries =append (_geccd .Entries [:index ],append ([]*OutlineItem {item },_geccd .Entries [index :]...)...);
};func (_dagfgg *PdfReader )loadDSS ()(*DSS ,error ){if _dagfgg ._fdccd .GetCrypter ()!=nil &&!_dagfgg ._fdccd .IsAuthenticated (){return nil ,_a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fcgeg :=_dagfgg ._gaeed .Get ("\u0044\u0053\u0053");if _fcgeg ==nil {return nil ,nil ;};_cfega ,_ :=_cde .GetIndirect (_fcgeg );_fcgeg =_cde .TraceToDirectObject (_fcgeg );switch _cebcg :=_fcgeg .(type ){case *_cde .PdfObjectNull :return nil ,nil ;case *_cde .PdfObjectDictionary :return _bdde (_cfega ,_cebcg );
};return nil ,_a .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_fcgeg );};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_gdbg *LTV )EnableAll (extraCerts []*_ff .Certificate )error {_gfcaa :=_gdbg ._cfdb ._dbb .AcroForm ;for _ ,_ddead :=range _gfcaa .AllFields (){_edeg ,_ :=_ddead .GetContext ().(*PdfFieldSignature );if _edeg ==nil {continue ;};_bfaf :=_edeg .V ;if _ebdg :=_gdbg .validateSig (_bfaf );
_ebdg !=nil {_fb .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_ebdg );
};if _gcdc :=_gdbg .Enable (_bfaf ,extraCerts );_gcdc !=nil {return _gcdc ;};};return nil ;};

// ParserMetadata gets the parser  metadata.
func (_fgea *CompliancePdfReader )ParserMetadata ()_cde .ParserMetadata {if _fgea ._bgfg ==(_cde .ParserMetadata {}){_fgea ._bgfg ,_ =_fgea ._fdccd .ParserMetadata ();};return _fgea ._bgfg ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_bbca *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _bbca .Range };

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _cde .PdfObject ;BS _cde .PdfObject ;LE _cde .PdfObject ;IC _cde .PdfObject ;LL _cde .PdfObject ;LLE _cde .PdfObject ;Cap _cde .PdfObject ;IT _cde .PdfObject ;LLO _cde .PdfObject ;CP _cde .PdfObject ;
Measure _cde .PdfObject ;CO _cde .PdfObject ;};

// ImageToRGB convert an indexed image to RGB.
func (_ffgb *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_ffgb .Base .GetNumComponents ();if N < 1{return Image {},_a .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_cdcff :=_bbb .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._cbcfe ,img ._gdbc );_cafg :=_afa .NewReader (img .getBase ());_gegg :=_afa .NewWriter (_cdcff );var (_gaba uint32 ;_edeea int ;_agca error ;);for {_gaba ,_agca =_cafg .ReadSample ();
if _agca ==_df .EOF {break ;}else if _agca !=nil {return img ,_agca ;};_edeea =int (_gaba );_fb .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_edeea ,N ,len (_ffgb ._abbg ));
if (_edeea +1)*N > len (_ffgb ._abbg ){_edeea =len (_ffgb ._abbg )/N -1;_fb .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_edeea );if _edeea < 0{_fb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _aaac :=_edeea *N ;_aaac < (_edeea +1)*N ;_aaac ++{if _agca =_gegg .WriteSample (uint32 (_ffgb ._abbg [_aaac ]));_agca !=nil {return img ,_agca ;};};};return _ffgb .Base .ImageToRGB (_edggb (&_cdcff ));};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _cde .PdfObject ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_ebfae :=PdfColorLab {l ,a ,b };return &_ebfae };func (_bdebd *LTV )getCerts (_abcde []*_ff .Certificate )([][]byte ,error ){_eeaag :=make ([][]byte ,0,len (_abcde ));for _ ,_affcd :=range _abcde {_eeaag =append (_eeaag ,_affcd .Raw );
};return _eeaag ,nil ;};func (_bfbec *Names )addEmbeddedFile (_dfcec *EmbeddedFile )error {if _bfbec .EmbeddedFiles ==nil {_bfbec .EmbeddedFiles =_cde .MakeDict ();_bfbec .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_cde .MakeArray ());};_efcba :=_bggfd (_dfcec );
_eggead :=_bfbec .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_ccedc ,_bfag :=_eggead .(*_cde .PdfObjectArray );if !_bfag {return _gf .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};type FileSpecMap struct{_cdcfe string ;_gaabbe *PdfFilespec ;};_bggag :=[]FileSpecMap {};for _ddge :=0;_ddge < len (_ccedc .Elements ());_ddge +=2{if _ddge %2==0{_gafe :=_ccedc .Get (_ddge );if _gafe !=nil {_ecef :=_gafe .(*_cde .PdfObjectString );_gbaaa :=_ccedc .Get (_ddge +1);
_bdccd ,_befae :=NewPdfFilespecFromObj (_gbaaa );if _befae !=nil {return _befae ;};_bggag =append (_bggag ,FileSpecMap {_cdcfe :_ecef .String (),_gaabbe :_bdccd });};};};_bggag =append (_bggag ,FileSpecMap {_cdcfe :_dfcec .Name ,_gaabbe :_efcba });_cf .Slice (_bggag ,func (_bafd ,_gaefe int )bool {return _bggag [_bafd ]._cdcfe < _bggag [_gaefe ]._cdcfe });
_ccedc =_cde .MakeArray ();for _ ,_fcge :=range _bggag {_ccedc .Append (_cde .MakeString (_fcge ._cdcfe ));_ccedc .Append (_fcge ._gaabbe .ToPdfObject ());};_bfbec .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_ccedc );return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cfceef *PdfShadingType4 )ToPdfObject ()_cde .PdfObject {_cfceef .PdfShading .ToPdfObject ();_cgdaa ,_bcec :=_cfceef .getShadingDict ();if _bcec !=nil {_fb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cfceef .BitsPerCoordinate !=nil {_cgdaa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cfceef .BitsPerCoordinate );};if _cfceef .BitsPerComponent !=nil {_cgdaa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cfceef .BitsPerComponent );
};if _cfceef .BitsPerFlag !=nil {_cgdaa .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cfceef .BitsPerFlag );};if _cfceef .Decode !=nil {_cgdaa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cfceef .Decode );};if _cfceef .Function !=nil {if len (_cfceef .Function )==1{_cgdaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cfceef .Function [0].ToPdfObject ());
}else {_gcded :=_cde .MakeArray ();for _ ,_dgffe :=range _cfceef .Function {_gcded .Append (_dgffe .ToPdfObject ());};_cgdaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcded );};};return _cfceef ._fdbgb ;};

// ToPdfObject implements interface PdfModel.
func (_fbfb *PdfActionMovie )ToPdfObject ()_cde .PdfObject {_fbfb .PdfAction .ToPdfObject ();_cded :=_fbfb ._dfb ;_ac :=_cded .PdfObject .(*_cde .PdfObjectDictionary );_ac .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeMovie )));_ac .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_fbfb .Annotation );
_ac .SetIfNotNil ("\u0054",_fbfb .T );_ac .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_fbfb .Operation );return _cded ;};func _abee (_bgaa *_cde .PdfObjectDictionary ,_fcbe *fontCommon ,_dddeb _fab .TextEncoder )(*pdfFontSimple ,error ){_ddca :=_egdc (_fcbe );
_ddca ._fegde =_dddeb ;if _dddeb ==nil {_affc :=_bgaa .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _affc ==nil {_affc =_cde .MakeInteger (0);};_ddca .FirstChar =_affc ;_geccb ,_dcde :=_cde .GetIntVal (_affc );if !_dcde {_fb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_affc );
return nil ,_cde .ErrTypeError ;};_ccbfg :=_fab .CharCode (_geccb );_affc =_bgaa .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _affc ==nil {_affc =_cde .MakeInteger (255);};_ddca .LastChar =_affc ;_geccb ,_dcde =_cde .GetIntVal (_affc );
if !_dcde {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_affc );return nil ,_cde .ErrTypeError ;
};_gbff :=_fab .CharCode (_geccb );_ddca ._gceedd =make (map[_fab .CharCode ]float64 );_affc =_bgaa .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _affc !=nil {_ddca .Widths =_affc ;_fafc ,_deffd :=_cde .GetArray (_affc );if !_deffd {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_affc );
return nil ,_cde .ErrTypeError ;};_bbef ,_baffc :=_fafc .ToFloat64Array ();if _baffc !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_baffc ;};if len (_bbef )!=int (_gbff -_ccbfg +1){_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_gbff -_ccbfg +1,len (_bbef ));
return nil ,_cde .ErrRangeError ;};for _cffcb ,_fcbce :=range _bbef {_ddca ._gceedd [_ccbfg +_fab .CharCode (_cffcb )]=_fcbce ;};};};_ddca .Encoding =_cde .TraceToDirectObject (_bgaa .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _ddca ,nil ;
};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_cde .PdfObjectArray ;Domain *_cde .PdfObjectArray ;Function []PdfFunction ;Extend *_cde .PdfObjectArray ;};func (_ecddb *pdfFontType0 )bytesToCharcodes (_afbdf []byte )([]_fab .CharCode ,bool ){if _ecddb ._abefe ==nil {return nil ,false ;
};_baec ,_febea :=_ecddb ._abefe .BytesToCharcodes (_afbdf );if !_febea {return nil ,false ;};_eddf :=make ([]_fab .CharCode ,len (_baec ));for _affe ,_dgbgb :=range _baec {_eddf [_affe ]=_fab .CharCode (_dgbgb );};return _eddf ,true ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_bggbc *PdfPageResources )HasFontByName (keyName _cde .PdfObjectName )bool {_ ,_efcgf :=_bggbc .GetFontByName (keyName );return _efcgf ;};

// ToPdfObject implements interface PdfModel.
func (_cfba *PdfAnnotationPolygon )ToPdfObject ()_cde .PdfObject {_cfba .PdfAnnotation .ToPdfObject ();_adc :=_cfba ._gfg ;_ddbb :=_adc .PdfObject .(*_cde .PdfObjectDictionary );_cfba .PdfAnnotationMarkup .appendToPdfDictionary (_ddbb );_ddbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_ddbb .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cfba .Vertices );_ddbb .SetIfNotNil ("\u004c\u0045",_cfba .LE );_ddbb .SetIfNotNil ("\u0042\u0053",_cfba .BS );_ddbb .SetIfNotNil ("\u0049\u0043",_cfba .IC );_ddbb .SetIfNotNil ("\u0042\u0045",_cfba .BE );
_ddbb .SetIfNotNil ("\u0049\u0054",_cfba .IT );_ddbb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cfba .Measure );return _adc ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_beegb *PdfColorspaceSpecialSeparation )ToPdfObject ()_cde .PdfObject {_cdgfa :=_cde .MakeArray (_cde .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_cdgfa .Append (_beegb .ColorantName );_cdgfa .Append (_beegb .AlternateSpace .ToPdfObject ());
_cdgfa .Append (_beegb .TintTransform .ToPdfObject ());if _beegb ._eaefb !=nil {_beegb ._eaefb .PdfObject =_cdgfa ;return _beegb ._eaefb ;};return _cdgfa ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _cde .PdfObject ;NewWindow _cde .PdfObject ;T _cde .PdfObject ;};func _fegda (_feff *PdfField ,_gaeag _cde .PdfObject ){for _ ,_dcgf :=range _feff .Annotations {_dcgf .AS =_gaeag ;_dcgf .ToPdfObject ();
};};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_ggfge *PdfShadingPattern )ToPdfObject ()_cde .PdfObject {_ggfge .PdfPattern .ToPdfObject ();_dgccg :=_ggfge .getDict ();if _ggfge .Shading !=nil {_dgccg .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ggfge .Shading .ToPdfObject ());};if _ggfge .Matrix !=nil {_dgccg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ggfge .Matrix );
};if _ggfge .ExtGState !=nil {_dgccg .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ggfge .ExtGState );};return _ggfge ._eebba ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_cabgf ,_ggdce :=_baf .NewStdFontByName (HelveticaName );if !_ggdce {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_fgaa :=_eeef (_cabgf );return &PdfFont {_dcgb :&_fgaa };};func (_cdga *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_faca *PdfColorCalRGB )GetNumComponents ()int {return 3};func (_cagaa *PdfWriter )makeOffSetReference (_fgff int64 ){_fgdbgg :=_a .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_fgff );_cagaa .writeString (_fgdbgg );
_cagaa .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};var ErrColorOutOfRange =_gf .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");var _febcdg =false ;

// ToPdfObject implements interface PdfModel.
func (_ccf *PdfActionImportData )ToPdfObject ()_cde .PdfObject {_ccf .PdfAction .ToPdfObject ();_acc :=_ccf ._dfb ;_gge :=_acc .PdfObject .(*_cde .PdfObjectDictionary );_gge .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeImportData )));if _ccf .F !=nil {_gge .Set ("\u0046",_ccf .F .ToPdfObject ());
};return _acc ;};type pdfCIDFontType0 struct{fontCommon ;_defe *_cde .PdfIndirectObject ;_fddgfc _fab .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_cde .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _cde .PdfObject ;W _cde .PdfObject ;DW2 _cde .PdfObject ;W2 _cde .PdfObject ;_baff map[_fab .CharCode ]float64 ;_ebbff float64 ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_aaa *PdfAnnotation )ToPdfObject ()_cde .PdfObject {_cdfd :=_aaa ._gfg ;_edaa :=_cdfd .PdfObject .(*_cde .PdfObjectDictionary );_edaa .Clear ();_edaa .Set ("\u0054\u0079\u0070\u0065",_cde .MakeName ("\u0041\u006e\u006eo\u0074"));_edaa .SetIfNotNil ("\u0052\u0065\u0063\u0074",_aaa .Rect );
_edaa .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_aaa .Contents );_edaa .SetIfNotNil ("\u0050",_aaa .P );_edaa .SetIfNotNil ("\u004e\u004d",_aaa .NM );_edaa .SetIfNotNil ("\u004d",_aaa .M );_edaa .SetIfNotNil ("\u0046",_aaa .F );_edaa .SetIfNotNil ("\u0041\u0050",_aaa .AP );
_edaa .SetIfNotNil ("\u0041\u0053",_aaa .AS );_edaa .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_aaa .Border );_edaa .SetIfNotNil ("\u0043",_aaa .C );_edaa .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_aaa .StructParent );
_edaa .SetIfNotNil ("\u004f\u0043",_aaa .OC );return _cdfd ;};

// IsCID returns true if the underlying font is CID.
func (_ggdc *PdfFont )IsCID ()bool {return _ggdc .baseFields ().isCIDFont ()};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};func (_bagb *LTV )enable (_fbfae ,_ebdde []*_ff .Certificate ,_fgddc string )error {_efcda ,_cdacf ,_cgae :=_bagb .buildCertChain (_fbfae ,_ebdde );
if _cgae !=nil {return _cgae ;};_ebeee ,_cgae :=_bagb .getCerts (_efcda );if _cgae !=nil {return _cgae ;};var _ggecf ,_becg [][]byte ;if _bagb .OCSPClient !=nil {_ggecf ,_cgae =_bagb .getOCSPs (_efcda ,_cdacf );if _cgae !=nil {return _cgae ;};};if _bagb .CRLClient !=nil {_becg ,_cgae =_bagb .getCRLs (_efcda );
if _cgae !=nil {return _cgae ;};};_acegd :=_bagb ._fcdcb ;_cfdaf ,_cgae :=_acegd .AddCerts (_ebeee );if _cgae !=nil {return _cgae ;};_aaegc ,_cgae :=_acegd .AddOCSPs (_ggecf );if _cgae !=nil {return _cgae ;};_gedc ,_cgae :=_acegd .AddCRLs (_becg );if _cgae !=nil {return _cgae ;
};if _fgddc !=""{_acegd .VRI [_fgddc ]=&VRI {Cert :_cfdaf ,OCSP :_aaegc ,CRL :_gedc };};_bagb ._cfdb .SetDSS (_acegd );return nil ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_dgcca :=&XObjectForm {};_cbgae :=&_cde .PdfObjectStream {};_cbgae .PdfObjectDictionary =_cde .MakeDict ();_dgcca ._fbeeg =_cbgae ;return _dgcca ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_acaabf *PdfReader )GetCatalogMarkInfo ()(_cde .PdfObject ,bool ){if _acaabf ._gaeed ==nil {return nil ,false ;};_gggca :=_acaabf ._gaeed .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _gggca ,_gggca !=nil ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_egaa :=NewPdfAnnotation ();_cbgd :=&PdfAnnotationLine {};_cbgd .PdfAnnotation =_egaa ;_cbgd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egaa .SetContext (_cbgd );return _cbgd ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_cde .PdfObjectInteger ;BitsPerComponent *_cde .PdfObjectInteger ;BitsPerFlag *_cde .PdfObjectInteger ;Decode *_cde .PdfObjectArray ;Function []PdfFunction ;};

// WriteString outputs the object as it is to be written to file.
func (_ffegab *pdfSignDictionary )WriteString ()string {_ffegab ._bcdcga =0;_ffegab ._bebgc =0;_ffegab ._acgb =0;_ffegab ._fefcca =0;_fcbga :=_bb .NewBuffer (nil );_fcbga .WriteString ("\u003c\u003c");for _ ,_fdccc :=range _ffegab .Keys (){_efefc :=_ffegab .Get (_fdccc );
switch _fdccc {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_fcbga .WriteString (_fdccc .WriteString ());_fcbga .WriteString ("\u0020");_ffegab ._acgb =_fcbga .Len ();_fcbga .WriteString (_efefc .WriteString ());_fcbga .WriteString ("\u0020");_ffegab ._fefcca =_fcbga .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_fcbga .WriteString (_fdccc .WriteString ());_fcbga .WriteString ("\u0020");_ffegab ._bcdcga =_fcbga .Len ();_fcbga .WriteString (_efefc .WriteString ());_fcbga .WriteString ("\u0020");_ffegab ._bebgc =_fcbga .Len ()-1;
default:_fcbga .WriteString (_fdccc .WriteString ());_fcbga .WriteString ("\u0020");_fcbga .WriteString (_efefc .WriteString ());};};_fcbga .WriteString ("\u003e\u003e");return _fcbga .String ();};

// SetImage updates XObject Image with new image data.
func (_efcaf *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_efcaf .Filter .UpdateParams (img .GetParamsDict ());_ceegb ,_ecaab :=_efcaf .Filter .EncodeBytes (img .Data );if _ecaab !=nil {return _ecaab ;};_efcaf .Stream =_ceegb ;_cgaga :=img .Width ;
_efcaf .Width =&_cgaga ;_aaabf :=img .Height ;_efcaf .Height =&_aaabf ;_fgfbca :=img .BitsPerComponent ;_efcaf .BitsPerComponent =&_fgfbca ;if cs ==nil {if img .ColorComponents ==1{_efcaf .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_efcaf .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_efcaf .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _gf .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_efcaf .ColorSpace =cs ;};return nil ;
};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_aadab *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _aadab ._babf !=nil {return _aadab ._babf ,nil ;};if _aadab .Annots ==nil {_aadab ._babf =[]*PdfAnnotation {};return nil ,nil ;};if _aadab ._cgdb ==nil {_aadab ._babf =[]*PdfAnnotation {};
return nil ,nil ;};_eefadb ,_bbcd :=_aadab ._cgdb .loadAnnotations (_aadab .Annots );if _bbcd !=nil {return nil ,_bbcd ;};if _eefadb ==nil {_aadab ._babf =[]*PdfAnnotation {};};_aadab ._babf =_eefadb ;return _aadab ._babf ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_dgdb *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};func (_gbgfe fontCommon )isCIDFont ()bool {if _gbgfe ._cfgg ==""{_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gbgfe );
};_debad :=false ;switch _gbgfe ._cfgg {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_debad =true ;};_fb .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_debad ,_gbgfe );
return _debad ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_fge :=NewPdfAnnotation ();_cdcg :=&PdfAnnotationInk {};_cdcg .PdfAnnotation =_fge ;_cdcg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fge .SetContext (_cdcg );return _cdcg ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_aeced :=PdfColorDeviceRGB {r ,g ,b };return &_aeced ;};func (_cada *PdfReader )newPdfActionTransFromDict (_acca *_cde .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_acca .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// CustomKeys returns all custom info keys as list.
func (_eadf *PdfInfo )CustomKeys ()[]string {if _eadf ._bdcd ==nil {return nil ;};_geae :=make ([]string ,len (_eadf ._bdcd .Keys ()));for _ ,_ceaf :=range _eadf ._bdcd .Keys (){_geae =append (_geae ,_ceaf .String ());};return _geae ;};func _aadaf (_eggbe *_cde .PdfObjectDictionary )(*PdfShadingType1 ,error ){_gfedd :=PdfShadingType1 {};
if _fagdb :=_eggbe .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fagdb !=nil {_fagdb =_cde .TraceToDirectObject (_fagdb );_dggce ,_gacbb :=_fagdb .(*_cde .PdfObjectArray );if !_gacbb {_fb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fagdb );
return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gfedd .Domain =_dggce ;};if _gfcc :=_eggbe .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gfcc !=nil {_gfcc =_cde .TraceToDirectObject (_gfcc );
_ddfec ,_bfeg :=_gfcc .(*_cde .PdfObjectArray );if !_bfeg {_fb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gfcc );return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gfedd .Matrix =_ddfec ;};_fbecg :=_eggbe .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fbecg ==nil {_fb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gfedd .Function =[]PdfFunction {};if _ffeag ,_gbefb :=_fbecg .(*_cde .PdfObjectArray );_gbefb {for _ ,_gfafbg :=range _ffeag .Elements (){_bffdd ,_ceggb :=_bedaa (_gfafbg );if _ceggb !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ceggb );
return nil ,_ceggb ;};_gfedd .Function =append (_gfedd .Function ,_bffdd );};}else {_edea ,_gedfe :=_bedaa (_fbecg );if _gedfe !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gedfe );
return nil ,_gedfe ;};_gfedd .Function =append (_gfedd .Function ,_edea );};return &_gfedd ,nil ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_cafa *PdfTilingPattern )ToPdfObject ()_cde .PdfObject {_cafa .PdfPattern .ToPdfObject ();_bdcbad :=_cafa .getDict ();if _cafa .PaintType !=nil {_bdcbad .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_cafa .PaintType );};if _cafa .TilingType !=nil {_bdcbad .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_cafa .TilingType );
};if _cafa .BBox !=nil {_bdcbad .Set ("\u0042\u0042\u006f\u0078",_cafa .BBox .ToPdfObject ());};if _cafa .XStep !=nil {_bdcbad .Set ("\u0058\u0053\u0074e\u0070",_cafa .XStep );};if _cafa .YStep !=nil {_bdcbad .Set ("\u0059\u0053\u0074e\u0070",_cafa .YStep );
};if _cafa .Resources !=nil {_bdcbad .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cafa .Resources .ToPdfObject ());};if _cafa .Matrix !=nil {_bdcbad .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cafa .Matrix );};return _cafa ._eebba ;};

// Subtype returns the font's "Subtype" field.
func (_daad *PdfFont )Subtype ()string {_ffcf :=_daad .baseFields ()._cfgg ;if _gfega ,_egcg :=_daad ._dcgb .(*pdfFontType0 );_egcg {_ffcf =_ffcf +"\u003a"+_gfega .DescendantFont .Subtype ();};return _ffcf ;};

// ToPdfObject converts date to a PDF string object.
func (_eabe *PdfDate )ToPdfObject ()_cde .PdfObject {_gaeaa :=_a .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_eabe ._bdcfec ,_eabe ._efbed ,_eabe ._acgbg ,_eabe ._fbgce ,_eabe ._bcbba ,_eabe ._geaeb ,_eabe ._ddbcg ,_eabe ._bafff ,_eabe ._agedg );
return _cde .MakeString (_gaeaa );};

// ToPdfObject implements interface PdfModel.
func (_fdcef *Permissions )ToPdfObject ()_cde .PdfObject {return _fdcef ._abgage };

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_fabg :=NewPdfAction ();_adb :=&PdfActionGoToE {};_adb .PdfAction =_fabg ;_fabg .SetContext (_adb );return _adb ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_ggaff DefaultImageHandler )NewGrayImageFromGoImage (goimg _cg .Image )(*Image ,error ){_ffbf :=goimg .Bounds ();_daefc :=&Image {Width :int64 (_ffbf .Dx ()),Height :int64 (_ffbf .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _ggfbe :=goimg .(type ){case *_cg .Gray :if len (_ggfbe .Pix )!=_ffbf .Dx ()*_ffbf .Dy (){_bdfge ,_acgdc :=_bbb .GrayConverter .Convert (goimg );
if _acgdc !=nil {return nil ,_acgdc ;};_daefc .Data =_bdfge .Pix ();}else {_daefc .Data =_ggfbe .Pix ;};case *_cg .Gray16 :_daefc .BitsPerComponent =16;if len (_ggfbe .Pix )!=_ffbf .Dx ()*_ffbf .Dy ()*2{_gcddf ,_eegcfc :=_bbb .Gray16Converter .Convert (goimg );
if _eegcfc !=nil {return nil ,_eegcfc ;};_daefc .Data =_gcddf .Pix ();}else {_daefc .Data =_ggfbe .Pix ;};case _bbb .Image :_bage :=_ggfbe .Base ();if _bage .ColorComponents ==1{_daefc .BitsPerComponent =int64 (_bage .BitsPerComponent );_daefc .Data =_bage .Data ;
return _daefc ,nil ;};_caga ,_fggb :=_bbb .GrayConverter .Convert (goimg );if _fggb !=nil {return nil ,_fggb ;};_daefc .Data =_caga .Pix ();default:_agbgf ,_ecgg :=_bbb .GrayConverter .Convert (goimg );if _ecgg !=nil {return nil ,_ecgg ;};_daefc .Data =_agbgf .Pix ();
};return _daefc ,nil ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_bgfg _cde .ParserMetadata ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _cde .PdfObject ;MK _cde .PdfObject ;A _cde .PdfObject ;AA _cde .PdfObject ;BS _cde .PdfObject ;Parent _cde .PdfObject ;_aad *PdfField ;_ggc bool ;};func _egbge ()string {_ggdeb .Lock ();defer _ggdeb .Unlock ();
return _aeegb };

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _cde .StreamEncoder ;FormType _cde .PdfObject ;BBox _cde .PdfObject ;Matrix _cde .PdfObject ;Resources *PdfPageResources ;Group _cde .PdfObject ;Ref _cde .PdfObject ;MetaData _cde .PdfObject ;PieceInfo _cde .PdfObject ;LastModified _cde .PdfObject ;
StructParent _cde .PdfObject ;StructParents _cde .PdfObject ;OPI _cde .PdfObject ;OC _cde .PdfObject ;Name _cde .PdfObject ;

// Stream data.
Stream []byte ;_fbeeg *_cde .PdfObjectStream ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_gfga *PdfFont )CharcodesToStrings (charcodes []_fab .CharCode )([]string ,int ,int ){_gfced :=_gfga .baseFields ();_bcfbag :=make ([]string ,0,len (charcodes ));_geadf :=0;_bgeb :=_gfga .Encoder ();_gedde :=_gfced ._dcgd !=nil &&_gfga .IsSimple ()&&_gfga .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_cce .Contains (_gfced ._dcgd .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_gedde &&_bgeb !=nil {switch _egcf :=_bgeb .(type ){case _fab .SimpleEncoder :_accdd :=_egcf .BaseName ();if _ ,_cfafa :=_dcga [_accdd ];_cfafa {for _ ,_cfg :=range charcodes {if _gcfbd ,_faee :=_bgeb .CharcodeToRune (_cfg );_faee {_bcfbag =append (_bcfbag ,string (_gcfbd ));
}else {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_cfg ,charcodes ,_gfced .isCIDFont (),_gfga ,_bgeb );
_geadf ++;_bcfbag =append (_bcfbag ,_ega .MissingCodeString );};};return _bcfbag ,len (_bcfbag ),_geadf ;};};};for _ ,_dcgc :=range charcodes {if _gfced ._dcgd !=nil {if _cdad ,_ebgbb :=_gfced ._dcgd .CharcodeToUnicode (_ega .CharCode (_dcgc ));_ebgbb {_bcfbag =append (_bcfbag ,_cdad );
continue ;};};if _bgeb !=nil {if _ccac ,_edcf :=_bgeb .CharcodeToRune (_dcgc );_edcf {_bcfbag =append (_bcfbag ,string (_ccac ));continue ;};};_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_dcgc ,charcodes ,_gfced .isCIDFont (),_gfga ,_bgeb );
_geadf ++;_bcfbag =append (_bcfbag ,_ega .MissingCodeString );};if _geadf !=0{_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_geadf ,_gfga );
};return _bcfbag ,len (_bcfbag ),_geadf ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_ddeff *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _ddeff .UnderlyingCS .GetNumComponents ();};

// SetOCProperties sets the optional content properties.
func (_dgabg *PdfWriter )SetOCProperties (ocProperties _cde .PdfObject )error {_daeac :=_dgabg ._aaeef ;if ocProperties !=nil {_fb .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_daeac .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _dgabg .addObjects (ocProperties );};return nil ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_gfdgb *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _gf .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_gda :=field .V ;if _gda ==nil {return _gf .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_afda :=pageNum -1;if _afda < 0||_afda > len (_gfdgb ._dbaf )-1{return _a .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );
};_abad :=_gfdgb .Reader .PageList [_afda ];field .P =_abad .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_cde .MakeString (_a .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_abad .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );
if _gfdgb ._deffb ==_gfdgb ._dbb .AcroForm {_gfdgb ._deffb =_gfdgb .Reader .AcroForm ;};_efec :=_gfdgb ._deffb ;if _efec ==nil {_efec =NewPdfAcroForm ();};_efec .SigFlags =_cde .MakeInteger (3);if _efec .NeedAppearances !=nil {_efec .NeedAppearances =nil ;
};_fada :=append (_efec .AllFields (),field .PdfField );_efec .Fields =&_fada ;_gfdgb .ReplaceAcroForm (_efec );_gfdgb .UpdatePage (_abad );_gfdgb ._dbaf [_afda ]=_abad ;if _ ,_bdcbg :=field .V .GetDocMDPPermission ();_bdcbg {_gfdgb ._fafe =NewPermissions (field .V );
};return nil ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_aaca *VRI )ToPdfObject ()*_cde .PdfObjectDictionary {_fffag :=_cde .MakeDict ();_fffag .SetIfNotNil (_cde .PdfObjectName ("\u0043\u0065\u0072\u0074"),_edgbae (_aaca .Cert ));_fffag .SetIfNotNil (_cde .PdfObjectName ("\u004f\u0043\u0053\u0050"),_edgbae (_aaca .OCSP ));
_fffag .SetIfNotNil (_cde .PdfObjectName ("\u0043\u0052\u004c"),_edgbae (_aaca .CRL ));_fffag .SetIfNotNil ("\u0054\u0055",_aaca .TU );_fffag .SetIfNotNil ("\u0054\u0053",_aaca .TS );return _fffag ;};func (_ffac *PdfReader )newPdfActionURIFromDict (_bafb *_cde .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_bafb .Get ("\u0055\u0052\u0049"),IsMap :_bafb .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _cde .PdfObject ;};func _adbg (_cbabf *_cde .PdfObjectDictionary )(*PdfTilingPattern ,error ){_bgede :=&PdfTilingPattern {};_bcfbf :=_cbabf .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _bcfbf ==nil {_fb .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cdfcf ,_ceacb :=_bcfbf .(*_cde .PdfObjectInteger );if !_ceacb {_fb .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_bcfbf );
return nil ,_cde .ErrTypeError ;};_bgede .PaintType =_cdfcf ;_bcfbf =_cbabf .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _bcfbf ==nil {_fb .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_afgddd ,_ceacb :=_bcfbf .(*_cde .PdfObjectInteger );if !_ceacb {_fb .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bcfbf );
return nil ,_cde .ErrTypeError ;};_bgede .TilingType =_afgddd ;_bcfbf =_cbabf .Get ("\u0042\u0042\u006f\u0078");if _bcfbf ==nil {_fb .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_bcfbf =_cde .TraceToDirectObject (_bcfbf );_bgfe ,_ceacb :=_bcfbf .(*_cde .PdfObjectArray );if !_ceacb {_fb .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bcfbf );
return nil ,_cde .ErrTypeError ;};_bdea ,_fabaf :=NewPdfRectangle (*_bgfe );if _fabaf !=nil {_fb .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_fabaf );return nil ,_fabaf ;};_bgede .BBox =_bdea ;_bcfbf =_cbabf .Get ("\u0058\u0053\u0074e\u0070");
if _bcfbf ==nil {_fb .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ecca ,_fabaf :=_cde .GetNumberAsFloat (_bcfbf );if _fabaf !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_ecca );
return nil ,_fabaf ;};_bgede .XStep =_cde .MakeFloat (_ecca );_bcfbf =_cbabf .Get ("\u0059\u0053\u0074e\u0070");if _bcfbf ==nil {_fb .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_cdba ,_fabaf :=_cde .GetNumberAsFloat (_bcfbf );if _fabaf !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_cdba );
return nil ,_fabaf ;};_bgede .YStep =_cde .MakeFloat (_cdba );_bcfbf =_cbabf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _bcfbf ==nil {_fb .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cbabf ,_ceacb =_cde .TraceToDirectObject (_bcfbf ).(*_cde .PdfObjectDictionary );if !_ceacb {return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bcfbf );
};_ececa ,_fabaf :=NewPdfPageResourcesFromDict (_cbabf );if _fabaf !=nil {return nil ,_fabaf ;};_bgede .Resources =_ececa ;if _ceegd :=_cbabf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ceegd !=nil {_dcaab ,_defef :=_ceegd .(*_cde .PdfObjectArray );
if !_defef {_fb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ceegd );return nil ,_cde .ErrTypeError ;};_bgede .Matrix =_dcaab ;};return _bgede ,nil ;
};

// String returns a string describing the font descriptor.
func (_cafb *PdfFontDescriptor )String ()string {var _agbdc []string ;if _cafb .FontName !=nil {_agbdc =append (_agbdc ,_cafb .FontName .String ());};if _cafb .FontFamily !=nil {_agbdc =append (_agbdc ,_cafb .FontFamily .String ());};if _cafb .fontFile !=nil {_agbdc =append (_agbdc ,_cafb .fontFile .String ());
};if _cafb ._faacg !=nil {_agbdc =append (_agbdc ,_cafb ._faacg .String ());};_agbdc =append (_agbdc ,_a .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_cafb .FontFile3 !=nil ));return _a .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_cce .Join (_agbdc ,"\u002c\u0020"));
};const (RelationshipSource FileRelationship =iota ;RelationshipData ;RelationshipAlternative ;RelationshipSupplement ;RelationshipUnspecified ;);

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_cdac *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _cdac .flattenFieldsWithOpts (allannots ,appgen ,nil );};func (_ddagd *LTV )getCRLs (_ecegf []*_ff .Certificate )([][]byte ,error ){_gedff :=make ([][]byte ,0,len (_ecegf ));
for _ ,_bbfea :=range _ecegf {for _ ,_eebfe :=range _bbfea .CRLDistributionPoints {if _ddagd .CertClient .IsCA (_bbfea ){continue ;};_gbaab ,_decce :=_ddagd .CRLClient .MakeRequest (_eebfe ,_bbfea );if _decce !=nil {_fb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_decce );
continue ;};_gedff =append (_gedff ,_gbaab );};};return _gedff ,nil ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_cde .PdfObjectStream ;OCSP []*_cde .PdfObjectStream ;CRL []*_cde .PdfObjectStream ;TU *_cde .PdfObjectString ;TS *_cde .PdfObjectString ;};func _bcbe (_geccaa _cde .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_bgcdfb :=NewPdfColorspaceSpecialIndexed ();
if _cbdba ,_acdf :=_geccaa .(*_cde .PdfIndirectObject );_acdf {_bgcdfb ._abeg =_cbdba ;};_geccaa =_cde .TraceToDirectObject (_geccaa );_dcba ,_dgfd :=_geccaa .(*_cde .PdfObjectArray );if !_dgfd {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _dcba .Len ()!=4{return nil ,_a .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_geccaa =_dcba .Get (0);
_acac ,_dgfd :=_geccaa .(*_cde .PdfObjectName );if !_dgfd {return nil ,_a .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_acac !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_a .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_geccaa =_dcba .Get (1);_agbgc ,_cdbbg :=DetermineColorspaceNameFromPdfObject (_geccaa );if _cdbbg !=nil {return nil ,_cdbbg ;};if _agbgc =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_agbgc =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_fb .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_agbgc );
return nil ,_cdfbf ;};_cda ,_cdbbg :=NewPdfColorspaceFromPdfObject (_geccaa );if _cdbbg !=nil {return nil ,_cdbbg ;};_bgcdfb .Base =_cda ;_geccaa =_dcba .Get (2);_dbcee ,_cdbbg :=_cde .GetNumberAsInt64 (_geccaa );if _cdbbg !=nil {return nil ,_cdbbg ;};
if _dbcee > 255{return nil ,_a .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");};_bgcdfb .HiVal =int (_dbcee );_geccaa =_dcba .Get (3);_bgcdfb .Lookup =_geccaa ;_geccaa =_cde .TraceToDirectObject (_geccaa );
var _egfb []byte ;if _ceae ,_ecfgb :=_geccaa .(*_cde .PdfObjectString );_ecfgb {_egfb =_ceae .Bytes ();_fb .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_egfb );
}else if _dcce ,_ccgfb :=_geccaa .(*_cde .PdfObjectStream );_ccgfb {_fb .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_geccaa .String ());_fb .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_dcce .Stream ),_dcce .Stream );
_agced ,_bffb :=_cde .DecodeStream (_dcce );if _bffb !=nil {return nil ,_bffb ;};_fb .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_agced ),_agced );_egfb =_agced ;}else {_fb .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_geccaa );
return nil ,_a .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_egfb )< _bgcdfb .Base .GetNumComponents ()*(_bgcdfb .HiVal +1){_fb .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_fb .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_egfb ),_bgcdfb .Base .GetNumComponents (),_bgcdfb .HiVal );
}else {_egfb =_egfb [:_bgcdfb .Base .GetNumComponents ()*(_bgcdfb .HiVal +1)];};_bgcdfb ._abbg =_egfb ;return _bgcdfb ,nil ;};func _gbbgf (_cbecd _cde .PdfObject ,_egeg bool )(*PdfFont ,error ){_cdeg ,_ffgeb ,_gefc :=_dgbgd (_cbecd );if _cdeg !=nil {_ccdb (_cdeg );
};if _gefc !=nil {if _gefc ==ErrType1CFontNotSupported {_afef ,_aeff :=_abee (_cdeg ,_ffgeb ,nil );if _aeff !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_ffgeb ,_aeff );
return nil ,_gefc ;};return &PdfFont {_dcgb :_afef },_gefc ;};return nil ,_gefc ;};_cfaf :=&PdfFont {};switch _ffgeb ._cfgg {case "\u0054\u0079\u0070e\u0030":if !_egeg {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ffgeb );
return nil ,_gf .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_cdgdd ,_bdefe :=_egbg (_cdeg ,_ffgeb );if _bdefe !=nil {_fb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ffgeb ,_bdefe );
return nil ,_bdefe ;};_cfaf ._dcgb =_cdgdd ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _fdcc *pdfFontSimple ;_eabbd ,_cbggfb :=_baf .NewStdFontByName (_baf .StdFontName (_ffgeb ._bbdf ));
if _cbggfb {_dgcfd :=_eeef (_eabbd );_cfaf ._dcgb =&_dgcfd ;_abgb :=_cde .TraceToDirectObject (_dgcfd .ToPdfObject ());_bcba ,_ffcc ,_dfdba :=_dgbgd (_abgb );if _dfdba !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_ffgeb ,_dgcfd );
return nil ,_dfdba ;};for _ ,_egefd :=range _cdeg .Keys (){_bcba .Set (_egefd ,_cdeg .Get (_egefd ));};_fdcc ,_dfdba =_abee (_bcba ,_ffcc ,_dgcfd ._fegde );if _dfdba !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_ffgeb ,_dgcfd );
return nil ,_dfdba ;};_fdcc ._gceedd =_dgcfd ._gceedd ;_fdcc ._cgagf =_dgcfd ._cgagf ;if _fdcc ._cefg ==nil {_fdcc ._cefg =_dgcfd ._cefg ;};}else {_fdcc ,_gefc =_abee (_cdeg ,_ffgeb ,nil );if _gefc !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_ffgeb ,_gefc );
return nil ,_gefc ;};};_gefc =_fdcc .addEncoding ();if _gefc !=nil {return nil ,_gefc ;};if _cbggfb {_fdcc .updateStandard14Font ();};if _cbggfb &&_fdcc ._fecga ==nil &&_fdcc ._fegde ==nil {_fb .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fdcc );
_fb .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_eabbd );};if len (_fdcc ._gceedd )==0{_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_fdcc );};_cfaf ._dcgb =_fdcc ;
case "\u0054\u0079\u0070e\u0033":_eafd ,_dgad :=_aagae (_cdeg ,_ffgeb );if _dgad !=nil {_fb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_dgad );
return nil ,_dgad ;};_cfaf ._dcgb =_eafd ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_decc ,_bdfc :=_egfef (_cdeg ,_ffgeb );if _bdfc !=nil {_fb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_bdfc );
return nil ,_bdfc ;};_cfaf ._dcgb =_decc ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_ddaca ,_bdcg :=_dfadg (_cdeg ,_ffgeb );if _bdcg !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ffgeb ,_bdcg );
return nil ,_bdcg ;};_cfaf ._dcgb =_ddaca ;default:_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_ffgeb );
return nil ,_a .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ffgeb );};return _cfaf ,nil ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_cgga *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_febf :=range pages {_febf =_febf .Duplicate ();_ggcfc (_febf );_cgga ._dbaf =append (_cgga ._dbaf ,_febf );};};

// String returns a string representation of what flags are set.
func (_fbdf FieldFlag )String ()string {_bgbaf :="";if _fbdf ==FieldFlagClear {_bgbaf ="\u0043\u006c\u0065a\u0072";return _bgbaf ;};if _fbdf &FieldFlagReadOnly > 0{_bgbaf +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _fbdf &FieldFlagRequired > 0{_bgbaf +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _fbdf &FieldFlagNoExport > 0{_bgbaf +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _fbdf &FieldFlagNoToggleToOff > 0{_bgbaf +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _fbdf &FieldFlagRadio > 0{_bgbaf +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _fbdf &FieldFlagPushbutton > 0{_bgbaf +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _fbdf &FieldFlagRadiosInUnision > 0{_bgbaf +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _fbdf &FieldFlagMultiline > 0{_bgbaf +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _fbdf &FieldFlagPassword > 0{_bgbaf +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _fbdf &FieldFlagFileSelect > 0{_bgbaf +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _fbdf &FieldFlagDoNotScroll > 0{_bgbaf +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _fbdf &FieldFlagComb > 0{_bgbaf +="\u007c\u0043\u006fm\u0062";};if _fbdf &FieldFlagRichText > 0{_bgbaf +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _fbdf &FieldFlagDoNotSpellCheck > 0{_bgbaf +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _fbdf &FieldFlagCombo > 0{_bgbaf +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _fbdf &FieldFlagEdit > 0{_bgbaf +="\u007c\u0045\u0064i\u0074";};if _fbdf &FieldFlagSort > 0{_bgbaf +="\u007c\u0053\u006fr\u0074";};if _fbdf &FieldFlagMultiSelect > 0{_bgbaf +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _fbdf &FieldFlagCommitOnSelChange > 0{_bgbaf +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _cce .Trim (_bgbaf ,"\u007c");};

// GetCerts returns the signature certificate chain.
func (_baaae *PdfSignature )GetCerts ()([]*_ff .Certificate ,error ){var _gdae []func ()([]*_ff .Certificate ,error );switch _gbcefe ,_ :=_cde .GetNameVal (_baaae .SubFilter );_gbcefe {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_gdae =append (_gdae ,_baaae .extractChainFromPKCS7 ,_baaae .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_gdae =append (_gdae ,_baaae .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_gdae =append (_gdae ,_baaae .extractChainFromPKCS7 );
default:return nil ,_a .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_gbcefe );};for _ ,_aaabg :=range _gdae {_bdbag ,_cefec :=_aaabg ();if _cefec !=nil {return nil ,_cefec ;
};if len (_bdbag )> 0{return _bdbag ,nil ;};};return nil ,ErrSignNoCertificates ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// ToPdfObject implements interface PdfModel.
func (_ca *PdfAction )ToPdfObject ()_cde .PdfObject {_cab :=_ca ._dfb ;_ffa :=_cab .PdfObject .(*_cde .PdfObjectDictionary );_ffa .Clear ();_ffa .Set ("\u0054\u0079\u0070\u0065",_cde .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_ffa .SetIfNotNil ("\u0053",_ca .S );
_ffa .SetIfNotNil ("\u004e\u0065\u0078\u0074",_ca .Next );return _cab ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_cacaa *Outline )ToPdfOutline ()*PdfOutline {_ffgbf :=NewPdfOutline ();var _bcgec []*PdfOutlineItem ;var _dbgab int64 ;var _gafae *PdfOutlineItem ;for _ ,_ccbfbc :=range _cacaa .Entries {_gacgb ,_gecdb :=_ccbfbc .ToPdfOutlineItem ();_gacgb .Parent =&_ffgbf .PdfOutlineTreeNode ;
if _gafae !=nil {_gafae .Next =&_gacgb .PdfOutlineTreeNode ;_gacgb .Prev =&_gafae .PdfOutlineTreeNode ;};_bcgec =append (_bcgec ,_gacgb );_dbgab +=_gecdb ;_gafae =_gacgb ;};_cbffg :=int64 (len (_bcgec ));_dbgab +=_cbffg ;if _cbffg > 0{_ffgbf .First =&_bcgec [0].PdfOutlineTreeNode ;
_ffgbf .Last =&_bcgec [_cbffg -1].PdfOutlineTreeNode ;_ffgbf .Count =&_dbgab ;};return _ffgbf ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_ggdeb .Lock ();defer _ggdeb .Unlock ();_aeegb =title };

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _gdd .Time )(PdfDate ,error ){_cgdcd :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_debgb ,_ :=_ccg .ParseInt (_cgdcd [1:3],10,32);_ecfbe ,_ :=_ccg .ParseInt (_cgdcd [4:6],10,32);return PdfDate {_bdcfec :int64 (timeObj .Year ()),_efbed :int64 (timeObj .Month ()),_acgbg :int64 (timeObj .Day ()),_fbgce :int64 (timeObj .Hour ()),_bcbba :int64 (timeObj .Minute ()),_geaeb :int64 (timeObj .Second ()),_ddbcg :_cgdcd [0],_bafff :_debgb ,_agedg :_ecfbe },nil ;
};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_cceef *PdfFont )SubsetRegistered ()error {switch _becd :=_cceef ._dcgb .(type ){case *pdfFontType0 :_bcfba :=_becd .subsetRegistered ();if _bcfba !=nil {_fb .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_bcfba );
return _bcfba ;};if _becd ._dfdg !=nil {if _becd ._cecbfe !=nil {_becd ._cecbfe .ToPdfObject ();};_becd .ToPdfObject ();};default:_fb .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_becd );
};return nil ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_ffea *pdfCIDFontType0 )ToPdfObject ()_cde .PdfObject {return _cde .MakeNull ()};type pdfCIDFontType2 struct{fontCommon ;_dbefe *_cde .PdfIndirectObject ;_eadg _fab .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_cde .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _cde .PdfObject ;W _cde .PdfObject ;DW2 _cde .PdfObject ;W2 _cde .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _cde .PdfObject ;_bcbee map[_fab .CharCode ]float64 ;_bgbdd float64 ;_cagbc map[rune ]int ;};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_efcb :=&PdfColorPatternType2 {};return _efcb };

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_gfeb *pdfFontSimple )ToPdfObject ()_cde .PdfObject {if _gfeb ._edbae ==nil {_gfeb ._edbae =&_cde .PdfIndirectObject {};};_dbgc :=_gfeb .baseFields ().asPdfObjectDictionary ("");_gfeb ._edbae .PdfObject =_dbgc ;if _gfeb .FirstChar !=nil {_dbgc .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_gfeb .FirstChar );
};if _gfeb .LastChar !=nil {_dbgc .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_gfeb .LastChar );};if _gfeb .Widths !=nil {_dbgc .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_gfeb .Widths );};if _gfeb .Encoding !=nil {_dbgc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gfeb .Encoding );
}else if _gfeb ._fecga !=nil {_eeea :=_gfeb ._fecga .ToPdfObject ();if _eeea !=nil {_dbgc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_eeea );};};return _gfeb ._edbae ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_bdcde *PdfShadingPatternType2 )ToPdfObject ()_cde .PdfObject {_bdcde .PdfPattern .ToPdfObject ();_eecg :=_bdcde .getDict ();if _bdcde .Shading !=nil {_eecg .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bdcde .Shading .ToPdfObject ());};if _bdcde .Matrix !=nil {_eecg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bdcde .Matrix );
};if _bdcde .ExtGState !=nil {_eecg .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bdcde .ExtGState );};return _bdcde ._eebba ;};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_fgbbc :=&PdfShadingType2 {};_fgbbc .PdfShading =&PdfShading {};_fgbbc .PdfShading ._fdbgb =_cde .MakeIndirectObject (_cde .MakeDict ());_fgbbc .PdfShading ._fdea =_fgbbc ;return _fgbbc ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_fegfa :=map[rune ]int {};for _ ,_aabgc :=range text {_fegfa [_aabgc ]++;};return _fegfa ;};

// ToInteger convert to an integer format.
func (_eaac *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_afeed :=_ce .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_afeed *_eaac .R ()),uint32 (_afeed *_eaac .G ()),uint32 (_afeed *_eaac .B ())};};type fontCommon struct{_bbdf string ;_cfgg string ;
_edcec string ;_aaegd _cde .PdfObject ;_dcgd *_ega .CMap ;_bceac *PdfFontDescriptor ;_aecf int64 ;};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_daafb :=Permissions {};_daafb .DocMDP =docMdp ;_ffeb :=_cde .MakeDict ();_ffeb .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_daafb ._abgage =_ffeb ;return &_daafb ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_beecb *PdfReader )PageFromIndirectObject (ind *_cde .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_beecb .PageList )!=len (_beecb ._adfcd ){return nil ,0,_gf .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _beage ,_cagca :=range _beecb ._adfcd {if _cagca ==ind {return _beecb .PageList [_beage ],_beage +1,nil ;};};return nil ,0,_gf .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};var _ pdfFont =(*pdfFontSimple )(nil );


// Initialize initializes the PdfSignature.
func (_dfcce *PdfSignature )Initialize ()error {if _dfcce .Handler ==nil {return _gf .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _dfcce .Handler .InitSignature (_dfcce );};func (_eddeb *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _eddeb ._bceac ==nil &&_eddeb .DescendantFont !=nil {return _eddeb .DescendantFont .FontDescriptor ();};return _eddeb ._bceac ;};
func (_gebc *Image )samplesAddPadding (_deeae []uint32 )[]uint32 {_faaf :=_bbb .BytesPerLine (int (_gebc .Width ),int (_gebc .BitsPerComponent ),_gebc .ColorComponents )*(8/int (_gebc .BitsPerComponent ));_defb :=_faaf *int (_gebc .Height );if len (_deeae )==_defb {return _deeae ;
};_egdgd :=make ([]uint32 ,_defb );_cdcaf :=int (_gebc .Width )*_gebc .ColorComponents ;for _efab :=0;_efab < int (_gebc .Height );_efab ++{_dcggb :=_efab *int (_gebc .Width );_gegc :=_efab *_faaf ;for _cdgae :=0;_cdgae < _cdcaf ;_cdgae ++{_egdgd [_gegc +_cdgae ]=_deeae [_dcggb +_cdgae ];
};};return _egdgd ;};

// IsSimple returns true if `font` is a simple font.
func (_fcdce *PdfFont )IsSimple ()bool {_ ,_gdbe :=_fcdce ._dcgb .(*pdfFontSimple );return _gdbe };

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_fbfbb *PdfWriter )SetDocInfo (info *PdfInfo ){_fbfbb .setDocInfo (info .ToPdfObject ())};

// ValidateSignatures validates digital signatures in the document.
func (_gegbd *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _gegbd .AcroForm ==nil {return nil ,nil ;};if _gegbd .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_gcbabd *PdfSignature ;
_cdcdb *PdfField ;_ccdf SignatureHandler ;};var _geggf []*sigFieldPair ;for _ ,_fbcd :=range _gegbd .AcroForm .AllFields (){if _fbcd .V ==nil {continue ;};if _dcbg ,_dgdc :=_cde .GetDict (_fbcd .V );_dgdc {if _aefadc ,_egeeb :=_cde .GetNameVal (_dcbg .Get ("\u0054\u0079\u0070\u0065"));
_egeeb &&(_aefadc =="\u0053\u0069\u0067"||_aefadc =="\u0044\u006f\u0063T\u0069\u006d\u0065\u0053\u0074\u0061\u006d\u0070"){_bgca ,_gaecc :=_cde .GetIndirect (_fbcd .V );if !_gaecc {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_gabbd ,_ffeac :=_gegbd .newPdfSignatureFromIndirect (_bgca );if _ffeac !=nil {return nil ,_ffeac ;};var _gagceac SignatureHandler ;for _ ,_gddab :=range handlers {if _gddab .IsApplicable (_gabbd ){_gagceac =_gddab ;break ;};
};_geggf =append (_geggf ,&sigFieldPair {_gcbabd :_gabbd ,_cdcdb :_fbcd ,_ccdf :_gagceac });};};};var _cgbg []SignatureValidationResult ;for _ ,_geac :=range _geggf {_fbdfc :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_geac ._cdcdb }};
if _geac ._ccdf ==nil {_fbdfc .Errors =append (_fbdfc .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_cgbg =append (_cgbg ,_fbdfc );continue ;};_dgbbg ,_gfcga :=_geac ._ccdf .NewDigest (_geac ._gcbabd );if _gfcga !=nil {_fbdfc .Errors =append (_fbdfc .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_gfcga .Error ());
_cgbg =append (_cgbg ,_fbdfc );continue ;};_eaafg :=_geac ._gcbabd .ByteRange ;if _eaafg ==nil {_fbdfc .Errors =append (_fbdfc .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_cgbg =append (_cgbg ,_fbdfc );
continue ;};for _gffa :=0;_gffa < _eaafg .Len ();_gffa =_gffa +2{_fabfb ,_ :=_cde .GetNumberAsInt64 (_eaafg .Get (_gffa ));_aggad ,_ :=_cde .GetIntVal (_eaafg .Get (_gffa +1));if _ ,_aggbeb :=_gegbd ._dfgb .Seek (_fabfb ,_df .SeekStart );_aggbeb !=nil {return nil ,_aggbeb ;
};_faaag :=make ([]byte ,_aggad );if _ ,_gfcffg :=_gegbd ._dfgb .Read (_faaag );_gfcffg !=nil {return nil ,_gfcffg ;};_dgbbg .Write (_faaag );};var _febbb SignatureValidationResult ;if _dabff ,_dggg :=_geac ._ccdf .(SignatureHandlerDocMDP );_dggg {_febbb ,_gfcga =_dabff .ValidateWithOpts (_geac ._gcbabd ,_dgbbg ,SignatureHandlerDocMDPParams {Parser :_gegbd ._fdccd });
}else {_febbb ,_gfcga =_geac ._ccdf .Validate (_geac ._gcbabd ,_dgbbg );};if _gfcga !=nil {_fb .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_gfcga ,_geac ._ccdf );_febbb .Errors =append (_febbb .Errors ,_gfcga .Error ());
};_febbb .Name =_geac ._gcbabd .Name .Decoded ();_febbb .Reason =_geac ._gcbabd .Reason .Decoded ();if _geac ._gcbabd .M !=nil {_cgggc ,_cfbcg :=NewPdfDate (_geac ._gcbabd .M .String ());if _cfbcg !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cfbcg );
_febbb .Errors =append (_febbb .Errors ,_cfbcg .Error ());continue ;};_febbb .Date =_cgggc ;};_febbb .ContactInfo =_geac ._gcbabd .ContactInfo .Decoded ();_febbb .Location =_geac ._gcbabd .Location .Decoded ();_febbb .Fields =_fbdfc .Fields ;_cgbg =append (_cgbg ,_febbb );
};return _cgbg ,nil ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _cde .PdfObject ;PreserveRB _cde .PdfObject ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_bgbf *PdfField )FullName ()(string ,error ){var _efgf _bb .Buffer ;_gfee :=[]string {};if _bgbf .T !=nil {_gfee =append (_gfee ,_bgbf .T .Decoded ());};_bgeg :=map[*PdfField ]bool {};_bgeg [_bgbf ]=true ;_abfd :=_bgbf .Parent ;for _abfd !=nil {if _ ,_fagg :=_bgeg [_abfd ];
_fagg {return _efgf .String (),_gf .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _abfd .T ==nil {return _efgf .String (),_gf .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_gfee =append (_gfee ,_abfd .T .Decoded ());_bgeg [_abfd ]=true ;_abfd =_abfd .Parent ;};for _ecdfb :=len (_gfee )-1;_ecdfb >=0;_ecdfb --{_efgf .WriteString (_gfee [_ecdfb ]);if _ecdfb > 0{_efgf .WriteString ("\u002e");};};return _efgf .String (),nil ;
};var _ pdfFont =(*pdfFontType0 )(nil );

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cde .PdfObject ;IC _cde .PdfObject ;RO _cde .PdfObject ;OverlayText _cde .PdfObject ;Repeat _cde .PdfObject ;DA _cde .PdfObject ;Q _cde .PdfObject ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_fcfc *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _fcfc .AlternateSpace ==nil {return nil ,_gf .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _fcfc .AlternateSpace .ColorToRGB (color );};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_efb :=NewPdfAnnotation ();_afd :=&PdfAnnotationFreeText {};_afd .PdfAnnotation =_efb ;_afd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efb .SetContext (_afd );return _afd ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fged *PdfColorspaceSpecialPattern )ToPdfObject ()_cde .PdfObject {if _fged .UnderlyingCS ==nil {return _cde .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_cccbe :=_cde .MakeArray (_cde .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_cccbe .Append (_fged .UnderlyingCS .ToPdfObject ());if _fged ._fgdg !=nil {_fged ._fgdg .PdfObject =_cccbe ;return _fged ._fgdg ;};return _cccbe ;};func _bdde (_gebg *_cde .PdfIndirectObject ,_eacd *_cde .PdfObjectDictionary )(*DSS ,error ){if _gebg ==nil {_gebg =_cde .MakeIndirectObject (nil );
};_gebg .PdfObject =_cde .MakeDict ();_daca :=map[string ]*VRI {};if _ggffc ,_aadce :=_cde .GetDict (_eacd .Get ("\u0056\u0052\u0049"));_aadce {for _ ,_efbf :=range _ggffc .Keys (){if _aeef ,_egbd :=_cde .GetDict (_ggffc .Get (_efbf ));_egbd {_daca [_cce .ToUpper (_efbf .String ())]=_dgbdf (_aeef );
};};};return &DSS {Certs :_cffcc (_eacd .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_cffcc (_eacd .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_cffcc (_eacd .Get ("\u0043\u0052\u004c\u0073")),VRI :_daca ,_agaa :_gebg },nil ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_aagf *pdfFontSimple )SetEncoder (encoder _fab .TextEncoder ){_aagf ._fecga =encoder };

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_ebef *PdfPageResources )GetExtGState (keyName _cde .PdfObjectName )(_cde .PdfObject ,bool ){if _ebef .ExtGState ==nil {return nil ,false ;};_bffbf ,_fgadf :=_cde .TraceToDirectObject (_ebef .ExtGState ).(*_cde .PdfObjectDictionary );if !_fgadf {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ebef .ExtGState );
return nil ,false ;};if _bgfaa :=_bffbf .Get (keyName );_bgfaa !=nil {return _bgfaa ,true ;};return nil ,false ;};var _dcga =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _cde .PdfObject ;Volume _cde .PdfObject ;Synchronous _cde .PdfObject ;Repeat _cde .PdfObject ;Mix _cde .PdfObject ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_bbege *Image )GetSamples ()[]uint32 {_adbbba :=_afa .ResampleBytes (_bbege .Data ,int (_bbege .BitsPerComponent ));if _bbege .BitsPerComponent < 8{_adbbba =_bbege .samplesTrimPadding (_adbbba );};_dgbaa :=int (_bbege .Width )*int (_bbege .Height )*_bbege .ColorComponents ;
if len (_adbbba )< _dgbaa {_fb .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_adbbba ),_dgbaa );
return _adbbba ;}else if len (_adbbba )> _dgbaa {_fb .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_adbbba ),_dgbaa );
_adbbba =_adbbba [:_dgbaa ];};return _adbbba ;};

// AddImageResource adds an image to the XObject resources.
func (_fdbda *PdfPage )AddImageResource (name _cde .PdfObjectName ,ximg *XObjectImage )error {var _bcfe *_cde .PdfObjectDictionary ;if _fdbda .Resources .XObject ==nil {_bcfe =_cde .MakeDict ();_fdbda .Resources .XObject =_bcfe ;}else {var _edage bool ;
_bcfe ,_edage =(_fdbda .Resources .XObject ).(*_cde .PdfObjectDictionary );if !_edage {return _gf .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_bcfe .Set (name ,ximg .ToPdfObject ());
return nil ;};func (_cgbc *pdfFontSimple )getFontEncoding ()(_fbcc string ,_bcgbg map[_fab .CharCode ]_fab .GlyphName ,_bafbb error ){_fbcc ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _bbgb ,_caeec :=_ecdgb [_cgbc ._bbdf ];
_caeec {_fbcc =_bbgb ;}else if _cgbc .fontFlags ()&_bcafe !=0{for _febee ,_cgff :=range _ecdgb {if _cce .Contains (_cgbc ._bbdf ,_febee ){_fbcc =_cgff ;break ;};};};if _cgbc .Encoding ==nil {return _fbcc ,nil ,nil ;};switch _gbgbf :=_cgbc .Encoding .(type ){case *_cde .PdfObjectName :return string (*_gbgbf ),nil ,nil ;
case *_cde .PdfObjectDictionary :_ebgfg ,_ecaef :=_cde .GetName (_gbgbf .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _ecaef {_fbcc =_ebgfg .String ();};if _cccbdg :=_gbgbf .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");
_cccbdg !=nil {_bgfc ,_eabf :=_cde .GetArray (_cccbdg );if !_eabf {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_gbgbf ,_gbgbf .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_cde .ErrTypeError ;};_bcgbg ,_bafbb =_fab .FromFontDifferences (_bgfc );};return _fbcc ,_bcgbg ,_bafbb ;default:_fb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_cgbc .Encoding ,_cgbc .Encoding );
return "",nil ,_cde .ErrTypeError ;};};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_bfa *PdfAction )GetContext ()PdfModel {if _bfa ==nil {return nil ;};return _bfa ._dfd ;};func (_cefga *PdfPage )setContainer (_bdfadf *_cde .PdfIndirectObject ){_bdfadf .PdfObject =_cefga ._bgdbb ;_cefga ._aaad =_bdfadf ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_aeagg FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_aeagg .Mask ()|fl .Mask ())};

// ToPdfObject returns the PDF representation of the function.
func (_egeb *PdfFunctionType4 )ToPdfObject ()_cde .PdfObject {_cbbbg :=_egeb ._geab ;if _cbbbg ==nil {_egeb ._geab =&_cde .PdfObjectStream {};_cbbbg =_egeb ._geab ;};_bcfge :=_cde .MakeDict ();_bcfge .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cde .MakeInteger (4));
_ddbfb :=&_cde .PdfObjectArray {};for _ ,_dbdeg :=range _egeb .Domain {_ddbfb .Append (_cde .MakeFloat (_dbdeg ));};_bcfge .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ddbfb );_acdbaf :=&_cde .PdfObjectArray {};for _ ,_agade :=range _egeb .Range {_acdbaf .Append (_cde .MakeFloat (_agade ));
};_bcfge .Set ("\u0052\u0061\u006eg\u0065",_acdbaf );if _egeb ._dbded ==nil &&_egeb .Program !=nil {_egeb ._dbded =[]byte (_egeb .Program .String ());};_bcfge .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cde .MakeInteger (int64 (len (_egeb ._dbded ))));
_cbbbg .Stream =_egeb ._dbded ;_cbbbg .PdfObjectDictionary =_bcfge ;return _cbbbg ;};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_ecdb *PdfWriter )SetCatalogMetadata (meta _cde .PdfObject )error {if meta ==nil {_ecdb ._aaeef .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_bcecg ,_egce :=_cde .GetStream (meta );if !_egce {return _gf .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_ecdb .addObject (_bcecg );_ecdb ._aaeef .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bcecg );return nil ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_cccag *PdfPage )SetContentStreams (cStreams []string ,encoder _cde .StreamEncoder )error {if len (cStreams )==0{_cccag .Contents =nil ;return nil ;};if encoder ==nil {encoder =_cde .NewRawEncoder ();};var _bcabcf []*_cde .PdfObjectStream ;for _ ,_acge :=range cStreams {_fggca :=&_cde .PdfObjectStream {};
_gagef :=encoder .MakeStreamDict ();_ccfcf ,_bgcdg :=encoder .EncodeBytes ([]byte (_acge ));if _bgcdg !=nil {return _bgcdg ;};_gagef .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cde .MakeInteger (int64 (len (_ccfcf ))));_fggca .PdfObjectDictionary =_gagef ;
_fggca .Stream =_ccfcf ;_bcabcf =append (_bcabcf ,_fggca );};if len (_bcabcf )==1{_cccag .Contents =_bcabcf [0];}else {_ccbbe :=_cde .MakeArray ();for _ ,_ggdfd :=range _bcabcf {_ccbbe .Append (_ggdfd );};_cccag .Contents =_ccbbe ;};return nil ;};func (_cdec *PdfAppender )updateObjectsDeep (_ccca _cde .PdfObject ,_bdda map[_cde .PdfObject ]struct{}){if _bdda ==nil {_bdda =map[_cde .PdfObject ]struct{}{};
};if _ ,_caeg :=_bdda [_ccca ];_caeg ||_ccca ==nil {return ;};_bdda [_ccca ]=struct{}{};_fgb :=_cde .ResolveReferencesDeep (_ccca ,_cdec ._cgaa );if _fgb !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fgb );};switch _gfab :=_ccca .(type ){case *_cde .PdfIndirectObject :switch {case _gfab .GetParser ()==_cdec ._dbb ._fdccd :return ;
case _gfab .GetParser ()==_cdec .Reader ._fdccd :_gecc ,_ :=_cdec ._dbb .GetIndirectObjectByNumber (int (_gfab .ObjectNumber ));_egea ,_egeef :=_gecc .(*_cde .PdfIndirectObject );if _egeef &&_egea !=nil {if _egea .PdfObject !=_gfab .PdfObject &&_egea .PdfObject .WriteString ()!=_gfab .PdfObject .WriteString (){if _cce .Contains (_gfab .PdfObject .WriteString (),"\u002f\u0053\u0069\u0067")&&_cce .Contains (_gfab .PdfObject .WriteString (),"\u002f\u0053\u0075\u0062\u0074\u0079\u0070\u0065"){return ;
};_cdec .addNewObject (_ccca );_cdec ._ddbf [_ccca ]=_gfab .ObjectNumber ;};};default:_cdec .addNewObject (_ccca );};_cdec .updateObjectsDeep (_gfab .PdfObject ,_bdda );case *_cde .PdfObjectArray :for _ ,_dbbg :=range _gfab .Elements (){_cdec .updateObjectsDeep (_dbbg ,_bdda );
};case *_cde .PdfObjectDictionary :for _ ,_dggf :=range _gfab .Keys (){_cdec .updateObjectsDeep (_gfab .Get (_dggf ),_bdda );};case *_cde .PdfObjectStreams :if _gfab .GetParser ()!=_cdec ._dbb ._fdccd {for _ ,_cfca :=range _gfab .Elements (){_cdec .updateObjectsDeep (_cfca ,_bdda );
};};case *_cde .PdfObjectStream :switch {case _gfab .GetParser ()==_cdec ._dbb ._fdccd :return ;case _gfab .GetParser ()==_cdec .Reader ._fdccd :if _cfag ,_ddgcd :=_cdec ._dbb ._fdccd .LookupByReference (_gfab .PdfObjectReference );_ddgcd ==nil {var _cece bool ;
if _dedd ,_afeda :=_cde .GetStream (_cfag );_afeda &&_bb .Equal (_dedd .Stream ,_gfab .Stream ){_cece =true ;};if _cbe ,_dbge :=_cde .GetDict (_cfag );_cece &&_dbge {_cece =_cbe .WriteString ()==_gfab .PdfObjectDictionary .WriteString ();};if _cece {return ;
};};if _gfab .ObjectNumber !=0{_cdec ._ddbf [_ccca ]=_gfab .ObjectNumber ;};default:if _ ,_ffe :=_cdec ._edaf [_ccca ];!_ffe {_cdec .addNewObject (_ccca );};};_cdec .updateObjectsDeep (_gfab .PdfObjectDictionary ,_bdda );};};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_cde .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_ffg :=NewPdfAnnotation ();_dfbf :=&PdfAnnotationFileAttachment {};_dfbf .PdfAnnotation =_ffg ;_dfbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffg .SetContext (_dfbf );return _dfbf ;
};var (ErrRequiredAttributeMissing =_gf .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
ErrTypeCheck =_gf .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_cdfbf =_gf .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_gf .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
ErrNoFont =_gf .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_fa .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_cde .ErrNotSupported );
ErrType1CFontNotSupported =_fa .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_cde .ErrNotSupported );
ErrType3FontNotSupported =_fa .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_cde .ErrNotSupported );
ErrTTCmapNotSupported =_fa .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_cde .ErrNotSupported );
ErrSignNotEnoughSpace =_fa .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_fa .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _cde .PdfObject ;IsMap _cde .PdfObject ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_fafdc *PdfPageResources )GetXObjectFormByName (keyName _cde .PdfObjectName )(*XObjectForm ,error ){_bbfga ,_abgag :=_fafdc .GetXObjectByName (keyName );if _bbfga ==nil {return nil ,nil ;};if _abgag !=XObjectTypeForm {return nil ,_gf .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_cfdgg ,_dbcbb :=NewXObjectFormFromStream (_bbfga );if _dbcbb !=nil {return nil ,_dbcbb ;};return _cfdgg ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cgcfa *PdfSignature )GetContainingPdfObject ()_cde .PdfObject {return _cgcfa ._gfbaeg };

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_abg :=NewPdfAction ();_fgf :=&PdfActionRendition {};_fgf .PdfAction =_abg ;_abg .SetContext (_fgf );return _fgf ;};func _fgfe (_feffe _cde .PdfObject )*Names {_ebece :=_gfdga ();_dbdd :=_cde .TraceToDirectObject (_feffe ).(*_cde .PdfObjectDictionary );
if _cdgb :=_dbdd .Get ("\u0044\u0065\u0073t\u0073");_cdgb !=nil {_ebece .Dests =_cde .TraceToDirectObject (_cdgb ).(*_cde .PdfObjectDictionary );};if _afcbf :=_dbdd .Get ("\u0041\u0050");_afcbf !=nil {_ebece .AP =_cde .TraceToDirectObject (_afcbf ).(*_cde .PdfObjectDictionary );
};if _gggbda :=_dbdd .Get ("\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074");_gggbda !=nil {_ebece .JavaScript =_cde .TraceToDirectObject (_gggbda ).(*_cde .PdfObjectDictionary );};if _gfcg :=_dbdd .Get ("\u0050\u0061\u0067e\u0073");_gfcg !=nil {_ebece .Pages =_cde .TraceToDirectObject (_gfcg ).(*_cde .PdfObjectDictionary );
};if _afag :=_dbdd .Get ("\u0054e\u006d\u0070\u006c\u0061\u0074\u0065s");_afag !=nil {_ebece .Templates =_cde .TraceToDirectObject (_afag ).(*_cde .PdfObjectDictionary );};if _cgeae :=_dbdd .Get ("\u0049\u0044\u0053");_cgeae !=nil {_ebece .IDS =_cde .TraceToDirectObject (_cgeae ).(*_cde .PdfObjectDictionary );
};if _acgca :=_dbdd .Get ("\u0055\u0052\u004c\u0053");_acgca !=nil {_ebece .URLS =_cde .TraceToDirectObject (_acgca ).(*_cde .PdfObjectDictionary );};if _acedg :=_dbdd .Get ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073");
_acedg !=nil {_ebece .EmbeddedFiles =_cde .TraceToDirectObject (_acedg ).(*_cde .PdfObjectDictionary );};if _fgbc :=_dbdd .Get ("\u0041\u006c\u0074\u0065rn\u0061\u0074\u0065\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0073");_fgbc !=nil {_ebece .AlternatePresentations =_cde .TraceToDirectObject (_fgbc ).(*_cde .PdfObjectDictionary );
};if _affeb :=_dbdd .Get ("\u0052\u0065\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0073");_affeb !=nil {_ebece .Renditions =_cde .TraceToDirectObject (_affeb ).(*_cde .PdfObjectDictionary );};return _ebece ;};func _fagba (_cgdcb *_cde .PdfObjectDictionary )(*PdfShadingType3 ,error ){_eaeabe :=PdfShadingType3 {};
_bfabe :=_cgdcb .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _bfabe ==nil {_fb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_efcgb ,_bgdfc :=_bfabe .(*_cde .PdfObjectArray );if !_bgdfc {_fb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bfabe );
return nil ,_cde .ErrTypeError ;};if _efcgb .Len ()!=6{_fb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_efcgb .Len ());return nil ,ErrInvalidAttribute ;
};_eaeabe .Coords =_efcgb ;if _gggdag :=_cgdcb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gggdag !=nil {_gggdag =_cde .TraceToDirectObject (_gggdag );_gdagd ,_fafeb :=_gggdag .(*_cde .PdfObjectArray );if !_fafeb {_fb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gggdag );
return nil ,_cde .ErrTypeError ;};_eaeabe .Domain =_gdagd ;};_bfabe =_cgdcb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bfabe ==nil {_fb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_eaeabe .Function =[]PdfFunction {};if _dbea ,_cccab :=_bfabe .(*_cde .PdfObjectArray );_cccab {for _ ,_gcebgb :=range _dbea .Elements (){_bafegb ,_cbabc :=_bedaa (_gcebgb );if _cbabc !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cbabc );
return nil ,_cbabc ;};_eaeabe .Function =append (_eaeabe .Function ,_bafegb );};}else {_dafgb ,_edega :=_bedaa (_bfabe );if _edega !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_edega );
return nil ,_edega ;};_eaeabe .Function =append (_eaeabe .Function ,_dafgb );};if _dgaf :=_cgdcb .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_dgaf !=nil {_dgaf =_cde .TraceToDirectObject (_dgaf );_aecac ,_bfecb :=_dgaf .(*_cde .PdfObjectArray );if !_bfecb {_fb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dgaf );
return nil ,_cde .ErrTypeError ;};if _aecac .Len ()!=2{_fb .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_aecac .Len ());return nil ,ErrInvalidAttribute ;
};_eaeabe .Extend =_aecac ;};return &_eaeabe ,nil ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _gdd .Time ){_ggdeb .Lock ();defer _ggdeb .Unlock ();_bcbfb =creationDate ;};

// GetPerms returns the Permissions dictionary
func (_gaff *PdfReader )GetPerms ()*Permissions {return _gaff ._ddcee };

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_efcdf []byte )(_badgb int ,_gddgb error );};func (_ebea *PdfWriter )seekByName (_adaca _cde .PdfObject ,_ebfg []string ,_fcgaf string )([]_cde .PdfObject ,error ){_fb .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_adaca );
var _dcfff []_cde .PdfObject ;if _geege ,_daeae :=_adaca .(*_cde .PdfIndirectObject );_daeae {return _ebea .seekByName (_geege .PdfObject ,_ebfg ,_fcgaf );};if _gabbg ,_efffe :=_adaca .(*_cde .PdfObjectStream );_efffe {return _ebea .seekByName (_gabbg .PdfObjectDictionary ,_ebfg ,_fcgaf );
};if _dbcfc ,_cdaf :=_adaca .(*_cde .PdfObjectDictionary );_cdaf {_fb .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_fggde :=range _dbcfc .Keys (){_bcfag :=_dbcfc .Get (_fggde );if string (_fggde )==_fcgaf {_dcfff =append (_dcfff ,_bcfag );};for _ ,_gcaee :=range _ebfg {if string (_fggde )==_gcaee {_fb .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_gcaee );
_abaef ,_gebge :=_ebea .seekByName (_bcfag ,_ebfg ,_fcgaf );if _gebge !=nil {return _dcfff ,_gebge ;};_dcfff =append (_dcfff ,_abaef ...);break ;};};};return _dcfff ,nil ;};return _dcfff ,nil ;};func (_fcega *PdfWriter )writeNamesDictionary ()error {if _fcega ._fafec ==nil {return nil ;
};_daebd :=_fcega ._fafec .ToPdfObject ();_fcega ._aaeef .Set ("\u004e\u0061\u006de\u0073",_daebd );_eecc :=_fcega .addObjects (_daebd );if _eecc !=nil {return _eecc ;};return nil ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_aacfd *PdfReader )GetNameDictionary ()(_cde .PdfObject ,error ){_bfea :=_cde .ResolveReference (_aacfd ._gaeed .Get ("\u004e\u0061\u006de\u0073"));if _bfea ==nil {return nil ,nil ;};if !_aacfd ._gbeac {_bcbab :=_aacfd .traverseObjectData (_bfea );
if _bcbab !=nil {return nil ,_bcbab ;};};return _bfea ,nil ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _cde .PdfObject ;FontFamily _cde .PdfObject ;FontStretch _cde .PdfObject ;FontWeight _cde .PdfObject ;Flags _cde .PdfObject ;FontBBox _cde .PdfObject ;ItalicAngle _cde .PdfObject ;Ascent _cde .PdfObject ;Descent _cde .PdfObject ;
Leading _cde .PdfObject ;CapHeight _cde .PdfObject ;XHeight _cde .PdfObject ;StemV _cde .PdfObject ;StemH _cde .PdfObject ;AvgWidth _cde .PdfObject ;MaxWidth _cde .PdfObject ;MissingWidth _cde .PdfObject ;FontFile _cde .PdfObject ;FontFile2 _cde .PdfObject ;
FontFile3 _cde .PdfObject ;CharSet _cde .PdfObject ;_gdeacf int ;_afadf float64 ;*fontFile ;_faacg *_baf .TtfType ;

// Additional entries for CIDFonts
Style _cde .PdfObject ;Lang _cde .PdfObject ;FD _cde .PdfObject ;CIDSet _cde .PdfObject ;_bebgf *_cde .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the function.
func (_afba *PdfFunctionType0 )ToPdfObject ()_cde .PdfObject {if _afba ._eebg ==nil {_afba ._eebg =&_cde .PdfObjectStream {};};_fgdc :=_cde .MakeDict ();_fgdc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cde .MakeInteger (0));
_deeab :=&_cde .PdfObjectArray {};for _ ,_cddgf :=range _afba .Domain {_deeab .Append (_cde .MakeFloat (_cddgf ));};_fgdc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_deeab );_aadfea :=&_cde .PdfObjectArray {};for _ ,_cddd :=range _afba .Range {_aadfea .Append (_cde .MakeFloat (_cddd ));
};_fgdc .Set ("\u0052\u0061\u006eg\u0065",_aadfea );_ddcfc :=&_cde .PdfObjectArray {};for _ ,_edcac :=range _afba .Size {_ddcfc .Append (_cde .MakeInteger (int64 (_edcac )));};_fgdc .Set ("\u0053\u0069\u007a\u0065",_ddcfc );_fgdc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_cde .MakeInteger (int64 (_afba .BitsPerSample )));
if _afba .Order !=1{_fgdc .Set ("\u004f\u0072\u0064e\u0072",_cde .MakeInteger (int64 (_afba .Order )));};_fgdc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cde .MakeInteger (int64 (len (_afba ._cgebc ))));_afba ._eebg .Stream =_afba ._cgebc ;_afba ._eebg .PdfObjectDictionary =_fgdc ;
return _afba ._eebg ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_dac :=NewPdfAction ();_agg :=&PdfActionJavaScript {};_agg .PdfAction =_dac ;_dac .SetContext (_agg );return _agg ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_gbaae *PdfPageResources )GenerateXObjectName ()_cde .PdfObjectName {_gacag :=1;for {_dgeg :=_cde .MakeName (_a .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_gacag ));if !_gbaae .HasXObjectByName (*_dgeg ){return *_dgeg ;};_gacag ++;};};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_gac :=NewPdfAnnotation ();_ddgc :=&PdfAnnotationPolygon {};_ddgc .PdfAnnotation =_gac ;_ddgc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gac .SetContext (_ddgc );return _ddgc ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _cde .PdfObject ;NewWindow _cde .PdfObject ;};func (_eacga *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_cgcfe *PdfPage )GetContentStreamObjs ()[]_cde .PdfObject {if _cgcfe .Contents ==nil {return nil ;};_becc :=_cde .TraceToDirectObject (_cgcfe .Contents );if _fgbcg ,_egbda :=_becc .(*_cde .PdfObjectArray );_egbda {return _fgbcg .Elements ();};return []_cde .PdfObject {_becc };
};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_fbabc *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_cde .StreamEncoder ,error ){_ebaaa ,_efbee :=_fbabc ._eebba .(*_cde .PdfObjectStream );if !_efbee {_fb .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fbabc ._eebba );
return nil ,nil ,_cde .ErrTypeError ;};_fgdda ,_gfdfa :=_cde .DecodeStream (_ebaaa );if _gfdfa !=nil {_fb .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_gfdfa );
return nil ,nil ,_gfdfa ;};_efcab ,_gfdfa :=_cde .NewEncoderFromStream (_ebaaa );if _gfdfa !=nil {_fb .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_gfdfa );
return nil ,nil ,_gfdfa ;};return _fgdda ,_efcab ,nil ;};func (_abbb *PdfReader )newPdfAnnotationSquigglyFromDict (_adfc *_cde .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_gbgfd :=PdfAnnotationSquiggly {};_dfag ,_bfbg :=_abbb .newPdfAnnotationMarkupFromDict (_adfc );
if _bfbg !=nil {return nil ,_bfbg ;};_gbgfd .PdfAnnotationMarkup =_dfag ;_gbgfd .QuadPoints =_adfc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gbgfd ,nil ;};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_abgage *_cde .PdfObjectDictionary ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _cde .PdfObject ;Mac _cde .PdfObject ;Unix _cde .PdfObject ;NewWindow _cde .PdfObject ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the page using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened for the page.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
func (_ebbf *PdfPage )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {_cffe :=map[*PdfAnnotation ]bool {};_agad ,_aacgfd :=_ebbf .GetAnnotations ();if _aacgfd !=nil {return _aacgfd ;};_ggag :=false ;for _ ,_bgacg :=range _agad {if opts .AnnotFilterFunc !=nil {_cffe [_bgacg ]=opts .AnnotFilterFunc (_bgacg );
}else {_cffe [_bgacg ]=true ;};if _cffe [_bgacg ]{_ggag =true ;};};if !_ggag {return nil ;};return _ebbf .flattenFieldsWithOpts (appgen ,opts ,_cffe );};func (_dgcf *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";
};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_dgdg *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _eedce []*PdfField ;_affb :=map[*_cde .PdfIndirectObject ]struct{}{};for _ ,_dbbac :=range _dgdg .PageList {_cbbgb ,_abbbc :=_dbbac .GetAnnotations ();if _abbbc !=nil {return _abbbc ;
};for _ ,_fdbfa :=range _cbbgb {var _aagfga *PdfField ;switch _aedda :=_fdbfa .GetContext ().(type ){case *PdfAnnotationWidget :if _aedda ._aad !=nil {_aagfga =_aedda ._aad ;break ;};if _cdfcba ,_fegfaf :=_cde .GetIndirect (_aedda .Parent );_fegfaf {_aagfga ,_abbbc =_dgdg .newPdfFieldFromIndirectObject (_cdfcba ,nil );
if _abbbc ==nil {break ;};_fb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_cdfcba ,_abbbc );
};if _aedda ._gfg !=nil {_aagfga ,_abbbc =_dgdg .newPdfFieldFromIndirectObject (_aedda ._gfg ,nil );if _abbbc ==nil {break ;};_fb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_aedda ._gfg ,_abbbc );
};};if _aagfga ==nil {continue ;};if _ ,_egaab :=_affb [_aagfga ._gfed ];_egaab {continue ;};_affb [_aagfga ._gfed ]=struct{}{};_eedce =append (_eedce ,_aagfga );};};if len (_eedce )==0{return nil ;};if _dgdg .AcroForm ==nil {_dgdg .AcroForm =NewPdfAcroForm ();
};_dgdg .AcroForm .Fields =&_eedce ;return nil ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _gdd .Time ){_ggdeb .Lock ();defer _ggdeb .Unlock ();_faaae =modifiedDate ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cde .PdfObject ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _df .ReadSeeker )(*PdfReader ,error ){const _gfbae ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _deeac (rs ,&ReaderOpts {},false ,_gfbae );};func (_dedeg *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _ffff :=_dedeg ._bceac ;
_ffff !=nil {return _ffff ;};return _dedeg ._cefg ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_bgec *PdfFieldButton )SetType (btype ButtonType ){_baeb :=uint32 (0);if _bgec .Ff !=nil {_baeb =uint32 (*_bgec .Ff );};switch btype {case ButtonTypePush :_baeb |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_baeb |=FieldFlagRadio .Mask ();
};_bgec .Ff =_cde .MakeInteger (int64 (_baeb ));};type pdfFont interface{_baf .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_cde .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};func (_bfgbf *PdfWriter )hasObject (_aacaa _cde .PdfObject )bool {_ ,_daabd :=_bfgbf ._fdeab [_aacaa ];return _daabd ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_fbgga :=appender .Reader .DSS ;if _fbgga ==nil {_fbgga =NewDSS ();};if _fccg :=_fbgga .GenerateHashMaps ();_fccg !=nil {return nil ,_fccg ;};return &LTV {CertClient :_fdg .NewCertClient (),OCSPClient :_fdg .NewOCSPClient (),CRLClient :_fdg .NewCRLClient (),SkipExisting :true ,_cfdb :appender ,_fcdcb :_fbgga },nil ;
};

// Encoder returns the font's text encoder.
func (_gabfa *pdfFontSimple )Encoder ()_fab .TextEncoder {if _gabfa ._fecga !=nil {return _gabfa ._fecga ;};if _gabfa ._fegde !=nil {return _gabfa ._fegde ;};_bdeee ,_ :=_fab .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _bdeee ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_aafee *PdfPattern )GetContainingPdfObject ()_cde .PdfObject {return _aafee ._eebba };func (_cfe *PdfAppender )addNewObject (_dbbd _cde .PdfObject ){if _ ,_egge :=_cfe ._edaf [_dbbd ];!_egge {_cfe ._acbg =append (_cfe ._acbg ,_dbbd );_cfe ._edaf [_dbbd ]=struct{}{};
};};func (_cgc *PdfReader )newPdfActionThreadFromDict (_eea *_cde .PdfObjectDictionary )(*PdfActionThread ,error ){_gedd ,_gagg :=_bfc (_eea .Get ("\u0046"));if _gagg !=nil {return nil ,_gagg ;};return &PdfActionThread {D :_eea .Get ("\u0044"),B :_eea .Get ("\u0042"),F :_gedd },nil ;
};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_efgfaa *_cde .PdfObjectDictionary ;Type *_cde .PdfObjectName ;TransformMethod *_cde .PdfObjectName ;TransformParams _cde .PdfObject ;Data _cde .PdfObject ;DigestMethod *_cde .PdfObjectName ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_baab *PdfColorLab )GetNumComponents ()int {return 3};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_eaed *Outline )Insert (index uint ,item *OutlineItem ){_efgfd :=uint (len (_eaed .Entries ));if index > _efgfd {index =_efgfd ;};_eaed .Entries =append (_eaed .Entries [:index ],append ([]*OutlineItem {item },_eaed .Entries [index :]...)...);};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_fgdg *_cde .PdfIndirectObject ;};func _cbebb (_caeea *_cde .PdfObjectDictionary )(*PdfShadingType7 ,error ){_dbad :=PdfShadingType7 {};_geaeg :=_caeea .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _geaeg ==nil {_fb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ffbag ,_bbacd :=_geaeg .(*_cde .PdfObjectInteger );if !_bbacd {_fb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_geaeg );
return nil ,_cde .ErrTypeError ;};_dbad .BitsPerCoordinate =_ffbag ;_geaeg =_caeea .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _geaeg ==nil {_fb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ffbag ,_bbacd =_geaeg .(*_cde .PdfObjectInteger );if !_bbacd {_fb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_geaeg );
return nil ,_cde .ErrTypeError ;};_dbad .BitsPerComponent =_ffbag ;_geaeg =_caeea .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _geaeg ==nil {_fb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ffbag ,_bbacd =_geaeg .(*_cde .PdfObjectInteger );if !_bbacd {_fb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_geaeg );
return nil ,_cde .ErrTypeError ;};_dbad .BitsPerComponent =_ffbag ;_geaeg =_caeea .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _geaeg ==nil {_fb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_edgbg ,_bbacd :=_geaeg .(*_cde .PdfObjectArray );if !_bbacd {_fb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_geaeg );
return nil ,_cde .ErrTypeError ;};_dbad .Decode =_edgbg ;if _fgbag :=_caeea .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_fgbag !=nil {_dbad .Function =[]PdfFunction {};if _gddcg ,_eaccf :=_fgbag .(*_cde .PdfObjectArray );_eaccf {for _ ,_bcfdg :=range _gddcg .Elements (){_gcebgg ,_cadaa :=_bedaa (_bcfdg );
if _cadaa !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cadaa );return nil ,_cadaa ;};_dbad .Function =append (_dbad .Function ,_gcebgg );
};}else {_cgffd ,_fgdga :=_bedaa (_fgbag );if _fgdga !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fgdga );return nil ,_fgdga ;
};_dbad .Function =append (_dbad .Function ,_cgffd );};};return &_dbad ,nil ;};

// Write writes out the PDF.
func (_fagc *PdfWriter )Write (writer _df .Writer )error {_fb .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_caeebf :=_fagc .checkLicense ();if _caeebf !=nil {return _caeebf ;};if _caeebf =_fagc .writeOutlines ();_caeebf !=nil {return _caeebf ;
};if _caeebf =_fagc .writeAcroFormFields ();_caeebf !=nil {return _caeebf ;};if _caeebf =_fagc .writeNamesDictionary ();_caeebf !=nil {return _caeebf ;};_fagc .checkPendingObjects ();if _caeebf =_fagc .writeOutputIntents ();_caeebf !=nil {return _caeebf ;
};_fagc .setCatalogVersion ();_fagc .copyObjects ();if _caeebf =_fagc .optimize ();_caeebf !=nil {return _caeebf ;};if _caeebf =_fagc .optimizeDocument ();_caeebf !=nil {return _caeebf ;};var _adgff _e .Hash ;if _fagc ._dgcda {_adgff =_eg .New ();writer =_df .MultiWriter (_adgff ,writer );
};_fagc .setWriter (writer );_aafad :=_fagc .checkCrossReferenceStream ();_fcdcg ,_aafad :=_fagc .mapObjectStreams (_aafad );_fagc .adjustXRefAffectedVersion (_aafad );_fagc .writeDocumentVersion ();_fagc .updateObjectNumbers ();_fagc .writeObjects ();
if _caeebf =_fagc .writeObjectsInStreams (_fcdcg );_caeebf !=nil {return _caeebf ;};_cadcb :=_fagc ._gbacgg ;var _dadba int ;for _fbgfe :=range _fagc ._cegabf {if _fbgfe > _dadba {_dadba =_fbgfe ;};};if _fagc ._dgcda {if _caeebf =_fagc .setHashIDs (_adgff );
_caeebf !=nil {return _caeebf ;};};if _aafad {if _caeebf =_fagc .writeXRefStreams (_dadba ,_cadcb );_caeebf !=nil {return _caeebf ;};}else {_fagc .writeTrailer (_dadba );};_fagc .makeOffSetReference (_cadcb );if _caeebf =_fagc .flushWriter ();_caeebf !=nil {return _caeebf ;
};return nil ;};func (_dfcea *pdfFontSimple )updateStandard14Font (){_bdgd ,_acabg :=_dfcea .Encoder ().(_fab .SimpleEncoder );if !_acabg {_fb .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_dfcea .Encoder (),_dfcea );
return ;};_egde :=_bdgd .Charcodes ();_dfcea ._gceedd =make (map[_fab .CharCode ]float64 ,len (_egde ));for _ ,_dbgec :=range _egde {_aaef ,_ :=_bdgd .CharcodeToRune (_dbgec );_aggc ,_ :=_dfcea ._cgagf .Read (_aaef );_dfcea ._gceedd [_dbgec ]=_aggc .Wx ;
};};func _gbbbc (_deafe *_cde .PdfObjectArray )(float64 ,error ){_agafb ,_dfecf :=_deafe .ToFloat64Array ();if _dfecf !=nil {_fb .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_deafe ,_dfecf );
};switch len (_agafb ){case 1:return _agafb [0],nil ;case 3:_bdegf :=PdfColorspaceDeviceRGB {};_ffbee ,_fcaf :=_bdegf .ColorFromFloats (_agafb );if _fcaf !=nil {return 0.0,_fcaf ;};return _ffbee .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_bfcaa :=PdfColorspaceDeviceCMYK {};
_egcef ,_bfeb :=_bfcaa .ColorFromFloats (_agafb );if _bfeb !=nil {return 0.0,_bfeb ;};_gbaf ,_bfeb :=_bfcaa .ColorToRGB (_egcef .(*PdfColorDeviceCMYK ));if _bfeb !=nil {return 0.0,_bfeb ;};return _gbaf .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_dfecf =_gf .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_fb .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_deafe ,_dfecf );return 0.0,_dfecf ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _cde .PdfObject )(*PdfOutputIntent ,error ){_bedbc :=&PdfOutputIntent {};if _bcabc :=_bedbc .ParsePdfObject (object );_bcabc !=nil {return nil ,_bcabc ;};return _bedbc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_edg *PdfAnnotationRichMedia )ToPdfObject ()_cde .PdfObject {_edg .PdfAnnotation .ToPdfObject ();_caba :=_edg ._gfg ;_egad :=_caba .PdfObject .(*_cde .PdfObjectDictionary );_egad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_egad .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_edg .RichMediaSettings );_egad .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_edg .RichMediaContent );
return _caba ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gbcef pdfCIDFontType0 )GetRuneMetrics (r rune )(_baf .CharMetrics ,bool ){return _baf .CharMetrics {Wx :_gbcef ._ebbff },true ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_efcd *Image )ConvertToBinary ()error {if _efcd .ColorComponents ==1&&_efcd .BitsPerComponent ==1{return nil ;};_efgff ,_ddgbd :=_efcd .ToGoImage ();if _ddgbd !=nil {return _ddgbd ;};_ggdeef ,_ddgbd :=_bbb .MonochromeConverter .Convert (_efgff );
if _ddgbd !=nil {return _ddgbd ;};_efcd .Data =_ggdeef .Base ().Data ;_efcd ._cbcfe ,_ddgbd =_bbb .ScaleAlphaToMonochrome (_efcd ._cbcfe ,int (_efcd .Width ),int (_efcd .Height ));if _ddgbd !=nil {return _ddgbd ;};_efcd .BitsPerComponent =1;_efcd .ColorComponents =1;
_efcd ._gdbc =nil ;return nil ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_baga *PdfPageResources )SetShadingByName (keyName _cde .PdfObjectName ,shadingObj _cde .PdfObject )error {if _baga .Shading ==nil {_baga .Shading =_cde .MakeDict ();};_cffgg ,_cgfgd :=_cde .GetDict (_baga .Shading );if !_cgfgd {return _cde .ErrTypeError ;
};_cffgg .Set (keyName ,shadingObj );return nil ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_cacc :=PdfColorCalGray (grayVal );return &_cacc ;};

// PdfVersion returns version of the PDF file.
func (_afbab *PdfReader )PdfVersion ()_cde .Version {return _afbab ._fdccd .PdfVersion ()};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_gacf *PdfAppender )UpdateObject (obj _cde .PdfObject ){_gacf .replaceObject (obj ,obj );if _ ,_gdbf :=_gacf ._edaf [obj ];!_gdbf {_gacf ._acbg =append (_gacf ._acbg ,obj );_gacf ._edaf [obj ]=struct{}{};};};func _cfcgb (_cdbfg *_cde .PdfObjectDictionary )(*PdfShadingType2 ,error ){_ffacb :=PdfShadingType2 {};
_ggca :=_cdbfg .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _ggca ==nil {_fb .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_dfece ,_fgfbce :=_ggca .(*_cde .PdfObjectArray );if !_fgfbce {_fb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggca );
return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _dfece .Len ()!=4{_fb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dfece .Len ());
return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_ffacb .Coords =_dfece ;if _abfgb :=_cdbfg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_abfgb !=nil {_abfgb =_cde .TraceToDirectObject (_abfgb );
_dfabg ,_gbcae :=_abfgb .(*_cde .PdfObjectArray );if !_gbcae {_fb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_abfgb );return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ffacb .Domain =_dfabg ;};_ggca =_cdbfg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ggca ==nil {_fb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ffacb .Function =[]PdfFunction {};if _bdgdf ,_cccdd :=_ggca .(*_cde .PdfObjectArray );_cccdd {for _ ,_egbfb :=range _bdgdf .Elements (){_caeac ,_cddac :=_bedaa (_egbfb );if _cddac !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cddac );
return nil ,_cddac ;};_ffacb .Function =append (_ffacb .Function ,_caeac );};}else {_ecefbb ,_daafc :=_bedaa (_ggca );if _daafc !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_daafc );
return nil ,_daafc ;};_ffacb .Function =append (_ffacb .Function ,_ecefbb );};if _bdebf :=_cdbfg .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_bdebf !=nil {_bdebf =_cde .TraceToDirectObject (_bdebf );_aegdc ,_dggbd :=_bdebf .(*_cde .PdfObjectArray );if !_dggbd {_fb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdebf );
return nil ,_cde .ErrTypeError ;};if _aegdc .Len ()!=2{_fb .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_aegdc .Len ());return nil ,ErrInvalidAttribute ;
};_ffacb .Extend =_aegdc ;};return &_ffacb ,nil ;};func (_cfdc *PdfAppender )replaceObject (_faaa ,_bfad _cde .PdfObject ){switch _geedc :=_faaa .(type ){case *_cde .PdfIndirectObject :_cfdc ._ddbf [_bfad ]=_geedc .ObjectNumber ;case *_cde .PdfObjectStream :_cfdc ._ddbf [_bfad ]=_geedc .ObjectNumber ;
};};func _dfadg (_gdce *_cde .PdfObjectDictionary ,_ceefgb *fontCommon )(*pdfCIDFontType2 ,error ){if _ceefgb ._cfgg !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_fb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_ceefgb );
return nil ,_cde .ErrRangeError ;};_babb :=_gacd (_ceefgb );_aaed ,_bgedf :=_cde .GetDict (_gdce .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_bgedf {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ceefgb );
return nil ,ErrRequiredAttributeMissing ;};_babb .CIDSystemInfo =_aaed ;_babb .DW =_gdce .Get ("\u0044\u0057");_babb .W =_gdce .Get ("\u0057");_babb .DW2 =_gdce .Get ("\u0044\u0057\u0032");_babb .W2 =_gdce .Get ("\u0057\u0032");_babb .CIDToGIDMap =_gdce .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_babb ._bgbdd =1000.0;if _ebcb ,_edfbc :=_cde .GetNumberAsFloat (_babb .DW );_edfbc ==nil {_babb ._bgbdd =_ebcb ;};_eaddc ,_facfg :=_cccc (_babb .W );if _facfg !=nil {return nil ,_facfg ;};if _eaddc ==nil {_eaddc =map[_fab .CharCode ]float64 {};};_babb ._bcbee =_eaddc ;
return _babb ,nil ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_efaf :=NewPdfAnnotation ();_facd :=&PdfAnnotationMovie {};_facd .PdfAnnotation =_efaf ;_efaf .SetContext (_facd );return _facd ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_gdfb OutlineDest )ToPdfObject ()_cde .PdfObject {if (_gdfb .PageObj ==nil &&_gdfb .Page < 0)||_gdfb .Mode ==""{return _cde .MakeNull ();};_eaefe :=_cde .MakeArray ();if _gdfb .PageObj !=nil {_eaefe .Append (_gdfb .PageObj );}else {_eaefe .Append (_cde .MakeInteger (_gdfb .Page ));
};_eaefe .Append (_cde .MakeName (_gdfb .Mode ));switch _gdfb .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_eaefe .Append (_cde .MakeFloat (_gdfb .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_eaefe .Append (_cde .MakeFloat (_gdfb .X ));
case "\u0058\u0059\u005a":_eaefe .Append (_cde .MakeFloat (_gdfb .X ));_eaefe .Append (_cde .MakeFloat (_gdfb .Y ));_eaefe .Append (_cde .MakeFloat (_gdfb .Zoom ));default:_eaefe .Set (1,_cde .MakeName ("\u0046\u0069\u0074"));};return _eaefe ;};func (_bab *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";
};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_cccbf *PdfPageResources )SetColorspaceByName (keyName _cde .PdfObjectName ,cs PdfColorspace )error {_eafcd ,_acegee :=_cccbf .GetColorspaces ();if _acegee !=nil {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_acegee );
return _acegee ;};if _eafcd ==nil {_eafcd =NewPdfPageResourcesColorspaces ();_cccbf .SetColorSpace (_eafcd );};_eafcd .Set (keyName ,cs );return nil ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_bg :=NewPdfAction ();_daf :=&PdfActionSound {};_daf .PdfAction =_bg ;_bg .SetContext (_daf );return _daf ;};func (_eeefe *PdfReader )buildNameNodes (_edab *_cde .PdfIndirectObject ,_gacff map[_cde .PdfObject ]struct{})error {if _edab ==nil {return nil ;
};if _ ,_dcbae :=_gacff [_edab ];_dcbae {_fb .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_edab .ObjectNumber );
return nil ;};_gacff [_edab ]=struct{}{};_geeca ,_ebaef :=_edab .PdfObject .(*_cde .PdfObjectDictionary );if !_ebaef {return _gf .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _fbeff ,_bebfd :=_cde .GetDict (_geeca .Get ("\u0044\u0065\u0073t\u0073"));
_bebfd {_abedf ,_gcfcd :=_cde .GetArray (_fbeff .Get ("\u004b\u0069\u0064\u0073"));if !_gcfcd {return _gf .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_fb .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_abedf );
for _afab ,_bcgbe :=range _abedf .Elements (){_ccagc ,_fgfdf :=_cde .GetIndirect (_bcgbe );if !_fgfdf {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_ccagc );
return _gf .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_abedf .Set (_afab ,_ccagc );_beedb :=_eeefe .buildNameNodes (_ccagc ,_gacff );if _beedb !=nil {return _beedb ;
};};};if _deca ,_dbgdda :=_cde .GetDict (_geeca );_dbgdda {if !_cde .IsNullObject (_deca .Get ("\u004b\u0069\u0064\u0073")){if _dgeb ,_dabf :=_cde .GetArray (_deca .Get ("\u004b\u0069\u0064\u0073"));_dabf {for _afafb ,_gacdd :=range _dgeb .Elements (){if _eafdg ,_fdfb :=_cde .GetIndirect (_gacdd );
_fdfb {_dgeb .Set (_afafb ,_eafdg );_aedcgc :=_eeefe .buildNameNodes (_eafdg ,_gacff );if _aedcgc !=nil {return _aedcgc ;};};};};};};return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_fdcag *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_cde .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccff ,_cbeca :=_cde .GetNumbersAsFloat (objects );
if _cbeca !=nil {return nil ,_cbeca ;};return _fdcag .ColorFromFloats (_ccff );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_accb *PdfShadingType2 )ToPdfObject ()_cde .PdfObject {_accb .PdfShading .ToPdfObject ();_bcdgg ,_gdead :=_accb .getShadingDict ();if _gdead !=nil {_fb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bcdgg ==nil {_fb .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _accb .Coords !=nil {_bcdgg .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_accb .Coords );
};if _accb .Domain !=nil {_bcdgg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_accb .Domain );};if _accb .Function !=nil {if len (_accb .Function )==1{_bcdgg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_accb .Function [0].ToPdfObject ());}else {_gceag :=_cde .MakeArray ();
for _ ,_ggeea :=range _accb .Function {_gceag .Append (_ggeea .ToPdfObject ());};_bcdgg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gceag );};};if _accb .Extend !=nil {_bcdgg .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_accb .Extend );};
return _accb ._fdbgb ;};func (_bca *PdfReader )newPdfActionGotoRFromDict (_fdd *_cde .PdfObjectDictionary )(*PdfActionGoToR ,error ){_fag ,_ecdd :=_bfc (_fdd .Get ("\u0046"));if _ecdd !=nil {return nil ,_ecdd ;};return &PdfActionGoToR {D :_fdd .Get ("\u0044"),NewWindow :_fdd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_fag },nil ;
};func (_bebbb *PdfWriter )writeString (_fdafb string ){if _bebbb ._cbffd !=nil {return ;};_eafeg ,_fcbf :=_bebbb ._efccc .WriteString (_fdafb );_bebbb ._gbacgg +=int64 (_eafeg );_bebbb ._cbffd =_fcbf ;};

// GetFillImage get attached model.Image in push button.
func (_accd *PdfFieldButton )GetFillImage ()*Image {if _accd .IsPush (){return _accd ._ecda ;};return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_bdg *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_cde .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_faff ,_cbgea :=_cde .GetNumbersAsFloat (objects );
if _cbgea !=nil {return nil ,_cbgea ;};return _bdg .ColorFromFloats (_faff );};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_accg *XObjectImage )GetContainingPdfObject ()_cde .PdfObject {return _accg ._aaaag };

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_cde .PdfObject ;GetContainingPdfObject ()_cde .PdfObject ;};

// String implements interface PdfObject.
func (_ga *PdfAction )String ()string {_ab ,_gbd :=_ga .ToPdfObject ().(*_cde .PdfIndirectObject );if _gbd {return _a .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ga ._dfd ,_ab .PdfObject .String ());};return "";};func (_fcgda *PdfReader )lookupPageByObject (_dege _cde .PdfObject )(*PdfPage ,error ){return nil ,_gf .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_agaa :_cde .MakeIndirectObject (_cde .MakeDict ()),VRI :map[string ]*VRI {}};};

// ToPdfObject implements interface PdfModel.
func (_fgg *PdfActionTrans )ToPdfObject ()_cde .PdfObject {_fgg .PdfAction .ToPdfObject ();_gfb :=_fgg ._dfb ;_gfba :=_gfb .PdfObject .(*_cde .PdfObjectDictionary );_gfba .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeTrans )));_gfba .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_fgg .Trans );
return _gfb ;};

// AddWatermarkImage adds a watermark to the page.
func (_fcdfd *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_fcbd ,_fagbdf :=_fcdfd .GetMediaBox ();if _fagbdf !=nil {return _fagbdf ;};_dfbca :=_fcbd .Urx -_fcbd .Llx ;_dbgg :=_fcbd .Ury -_fcbd .Lly ;_bbaec :=float64 (*ximg .Width );
_gfeca :=(_dfbca -_bbaec )/2;if opt .FitToWidth {_bbaec =_dfbca ;_gfeca =0;};_fdfgf :=_dbgg ;_gabgf :=float64 (0);if opt .PreserveAspectRatio {_fdfgf =_bbaec *float64 (*ximg .Height )/float64 (*ximg .Width );_gabgf =(_dbgg -_fdfgf )/2;};if _fcdfd .Resources ==nil {_fcdfd .Resources =NewPdfPageResources ();
};_bfabfd :=0;_efaab :=_cde .PdfObjectName (_a .Sprintf ("\u0049\u006d\u0077%\u0064",_bfabfd ));for _fcdfd .Resources .HasXObjectByName (_efaab ){_bfabfd ++;_efaab =_cde .PdfObjectName (_a .Sprintf ("\u0049\u006d\u0077%\u0064",_bfabfd ));};_fagbdf =_fcdfd .AddImageResource (_efaab ,ximg );
if _fagbdf !=nil {return _fagbdf ;};_bfabfd =0;_gaecd :=_cde .PdfObjectName (_a .Sprintf ("\u0047\u0053\u0025\u0064",_bfabfd ));for _fcdfd .HasExtGState (_gaecd ){_bfabfd ++;_gaecd =_cde .PdfObjectName (_a .Sprintf ("\u0047\u0053\u0025\u0064",_bfabfd ));
};_fbege :=_cde .MakeDict ();_fbege .Set ("\u0042\u004d",_cde .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_fbege .Set ("\u0043\u0041",_cde .MakeFloat (opt .Alpha ));_fbege .Set ("\u0063\u0061",_cde .MakeFloat (opt .Alpha ));_fagbdf =_fcdfd .AddExtGState (_gaecd ,_fbege );
if _fagbdf !=nil {return _fagbdf ;};_fffca :=_a .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_gaecd ,_bbaec ,_fdfgf ,_gfeca ,_gabgf ,_efaab );
_fcdfd .AddContentStreamByString (_fffca );return nil ;};func (_gcec fontCommon )fontFlags ()int {if _gcec ._bceac ==nil {return 0;};return _gcec ._bceac ._gdeacf ;};func _cfffa (_bgbd *_cde .PdfObjectDictionary )(*PdfFieldChoice ,error ){_aeec :=&PdfFieldChoice {};
_aeec .Opt ,_ =_cde .GetArray (_bgbd .Get ("\u004f\u0070\u0074"));_aeec .TI ,_ =_cde .GetInt (_bgbd .Get ("\u0054\u0049"));_aeec .I ,_ =_cde .GetArray (_bgbd .Get ("\u0049"));return _aeec ,nil ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_geda *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// ToPdfObject implements interface PdfModel.
func (_agb *PdfAnnotation3D )ToPdfObject ()_cde .PdfObject {_agb .PdfAnnotation .ToPdfObject ();_eba :=_agb ._gfg ;_bbee :=_eba .PdfObject .(*_cde .PdfObjectDictionary );_bbee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0033\u0044"));
_bbee .SetIfNotNil ("\u0033\u0044\u0044",_agb .T3DD );_bbee .SetIfNotNil ("\u0033\u0044\u0056",_agb .T3DV );_bbee .SetIfNotNil ("\u0033\u0044\u0041",_agb .T3DA );_bbee .SetIfNotNil ("\u0033\u0044\u0049",_agb .T3DI );_bbee .SetIfNotNil ("\u0033\u0044\u0042",_agb .T3DB );
return _eba ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_aafcg *PdfReader )CheckAccessRights (password []byte )(bool ,_da .Permissions ,error ){return _aafcg ._fdccd .CheckAccessRights (password );};func (_adabag *pdfFontSimple )baseFields ()*fontCommon {return &_adabag .fontCommon };func _edcbf (_dgaabe _cde .PdfObject )(*PdfPageResourcesColorspaces ,error ){_cfdeb :=&PdfPageResourcesColorspaces {};
if _efefe ,_bdca :=_dgaabe .(*_cde .PdfIndirectObject );_bdca {_cfdeb ._aggbf =_efefe ;_dgaabe =_efefe .PdfObject ;};_bgdgf ,_acbfb :=_cde .GetDict (_dgaabe );if !_acbfb {return nil ,_gf .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_cfdeb .Names =[]string {};_cfdeb .Colorspaces =map[string ]PdfColorspace {};for _ ,_cffff :=range _bgdgf .Keys (){_cddf :=_bgdgf .Get (_cffff );_cfdeb .Names =append (_cfdeb .Names ,string (_cffff ));_abefc ,_agdcd :=NewPdfColorspaceFromPdfObject (_cddf );
if _agdcd !=nil {return nil ,_agdcd ;};_cfdeb .Colorspaces [string (_cffff )]=_abefc ;};return _cfdeb ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_eaea *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcea :=vals [0];if _bcea < 0.0||_bcea > 1.0{_fb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bcea );
return nil ,ErrColorOutOfRange ;};_gdgc :=NewPdfColorCalGray (_bcea );return _gdgc ,nil ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_cebcbc :=&PdfFieldSignature {};_cebcbc .PdfField =NewPdfField ();_cebcbc .PdfField .SetContext (_cebcbc );_cebcbc .PdfAnnotationWidget =NewPdfAnnotationWidget ();_cebcbc .PdfAnnotationWidget .SetContext (_cebcbc );
_cebcbc .PdfAnnotationWidget ._gfg =_cebcbc .PdfField ._gfed ;_cebcbc .T =_cde .MakeString ("");_cebcbc .F =_cde .MakeInteger (132);_cebcbc .V =signature ;return _cebcbc ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_cde .PdfObjectBool ;SigFlags *_cde .PdfObjectInteger ;CO *_cde .PdfObjectArray ;DR *PdfPageResources ;DA *_cde .PdfObjectString ;Q *_cde .PdfObjectInteger ;XFA _cde .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _cde .PdfObject ;_ddcfd *_cde .PdfIndirectObject ;_abcd bool ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _cde .PdfObject ;Name _cde .PdfObject ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_gacc *PdfPage )AddExtGState (name _cde .PdfObjectName ,egs *_cde .PdfObjectDictionary )error {if _gacc .Resources ==nil {_gacc .Resources =NewPdfPageResources ();};if _gacc .Resources .ExtGState ==nil {_gacc .Resources .ExtGState =_cde .MakeDict ();
};_cagfd ,_agcf :=_cde .TraceToDirectObject (_gacc .Resources .ExtGState ).(*_cde .PdfObjectDictionary );if !_agcf {_fb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_cde .TraceToDirectObject (_gacc .Resources .ExtGState ));
return _gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cagfd .Set (name ,egs );return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gfbf *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_cde .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfcad ,_cba :=_cde .GetNumbersAsFloat (objects );
if _cba !=nil {return nil ,_cba ;};return _gfbf .ColorFromFloats (_gfcad );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_eccfb *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _eccfb .UnderlyingCS ==nil {return nil ,_gf .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _eccfb .UnderlyingCS .ColorFromFloats (vals );};func (_cecae *PdfWriter )checkLicense ()error {_beccf :=_af .GetLicenseKey ();if (_beccf ==nil ||!_beccf .IsLicensed ())&&!_febcdg {_a .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_a .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _gf .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_fabc *_cde .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fccdd *PdfShadingType5 )ToPdfObject ()_cde .PdfObject {_fccdd .PdfShading .ToPdfObject ();_eebcfa ,_ddeeb :=_fccdd .getShadingDict ();if _ddeeb !=nil {_fb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fccdd .BitsPerCoordinate !=nil {_eebcfa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fccdd .BitsPerCoordinate );};if _fccdd .BitsPerComponent !=nil {_eebcfa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fccdd .BitsPerComponent );
};if _fccdd .VerticesPerRow !=nil {_eebcfa .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_fccdd .VerticesPerRow );};if _fccdd .Decode !=nil {_eebcfa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fccdd .Decode );
};if _fccdd .Function !=nil {if len (_fccdd .Function )==1{_eebcfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fccdd .Function [0].ToPdfObject ());}else {_bbbba :=_cde .MakeArray ();for _ ,_gfdgcf :=range _fccdd .Function {_bbbba .Append (_gfdgcf .ToPdfObject ());
};_eebcfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbbba );};};return _fccdd ._fdbgb ;};

// Add appends a top level outline item to the outline.
func (_aagfg *Outline )Add (item *OutlineItem ){_aagfg .Entries =append (_aagfg .Entries ,item )};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_gbbcf DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};func (_bdc *PdfReader )newPdfActionSubmitFormFromDict (_fea *_cde .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_cdfb ,_ffcg :=_bfc (_fea .Get ("\u0046"));
if _ffcg !=nil {return nil ,_ffcg ;};return &PdfActionSubmitForm {F :_cdfb ,Fields :_fea .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_fea .Get ("\u0046\u006c\u0061g\u0073")},nil ;};func (_dcdbdf *PdfWriter )optimizeDocument ()error {if _dcdbdf ._fdgff ==nil {return nil ;
};_fgdgc ,_bedg :=_cde .GetDict (_dcdbdf ._decfde );if !_bedg {return _gf .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bgfad :=_aae .Document {ID :[2]string {_dcdbdf ._fegb ,_dcdbdf ._dbbaa },Version :_dcdbdf ._dgccdd ,Objects :_dcdbdf ._abbc ,Info :_fgdgc ,Crypt :_dcdbdf ._febcf ,UseHashBasedID :_dcdbdf ._dgcda };if _fbbge :=_dcdbdf ._fdgff .ApplyStandard (&_bgfad );
_fbbge !=nil {return _fbbge ;};_dcdbdf ._fegb ,_dcdbdf ._dbbaa =_bgfad .ID [0],_bgfad .ID [1];_dcdbdf ._dgccdd =_bgfad .Version ;_dcdbdf ._abbc =_bgfad .Objects ;_dcdbdf ._decfde .PdfObject =_bgfad .Info ;_dcdbdf ._dgcda =_bgfad .UseHashBasedID ;_dcdbdf ._febcf =_bgfad .Crypt ;
_feebe :=make (map[_cde .PdfObject ]struct{},len (_dcdbdf ._abbc ));for _ ,_egcfd :=range _dcdbdf ._abbc {_feebe [_egcfd ]=struct{}{};};_dcdbdf ._fdeab =_feebe ;return nil ;};

// IsShading specifies if the pattern is a shading pattern.
func (_agfecc *PdfPattern )IsShading ()bool {return _agfecc .PatternType ==2};

// AllFields returns a flattened list of all fields in the form.
func (_gfedc *PdfAcroForm )AllFields ()[]*PdfField {if _gfedc ==nil {return nil ;};var _dfcc []*PdfField ;if _gfedc .Fields !=nil {for _ ,_agcba :=range *_gfedc .Fields {_dfcc =append (_dfcc ,_becde (_agcba )...);};};return _dfcc ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_eagfg :=PdfPage {};_eagfg ._bgdbb =_cde .MakeDict ();_eagfg .Resources =NewPdfPageResources ();_acfd :=_cde .PdfIndirectObject {};_acfd .PdfObject =_eagfg ._bgdbb ;_eagfg ._aaad =&_acfd ;_eagfg ._cgda =*_eagfg ._bgdbb ;return &_eagfg ;
};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_cde .PdfObjectString ;Q *_cde .PdfObjectInteger ;DS *_cde .PdfObjectString ;RV _cde .PdfObject ;};

// ToPdfObject generates a PdfObject representation of the Names struct.
func (_defbf *Names )ToPdfObject ()_cde .PdfObject {_ccbb :=_defbf ._adffb ;_cecef ,_dceaa :=_ccbb .PdfObject .(*_cde .PdfObjectDictionary );if !_dceaa {_fb .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
return _ccbb ;};if _defbf .EmbeddedFiles !=nil {_cecef .Set ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073",_cde .MakeIndirectObject (_defbf .EmbeddedFiles ));};return _ccbb ;};var _deeb =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _cde .PdfObject ;};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_cde .PdfObjectArray ;ExtGState _cde .PdfObject ;};

// SetDate sets the `M` field of the signature.
func (_fdfe *PdfSignature )SetDate (date _gdd .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_fdfe .M =_cde .MakeString (date .Format (format ));
};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};func (_ecgggg *PdfReader )newPdfSignatureReferenceFromDict (_bfcdd *_cde .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _ffaea ,_gbffa :=_ecgggg ._bgffc .GetModelFromPrimitive (_bfcdd ).(*PdfSignatureReference );
_gbffa {return _ffaea ,nil ;};_cefd :=&PdfSignatureReference {_efgfaa :_bfcdd ,Data :_bfcdd .Get ("\u0044\u0061\u0074\u0061")};var _ebgeb bool ;_cefd .Type ,_ =_cde .GetName (_bfcdd .Get ("\u0054\u0079\u0070\u0065"));_cefd .TransformMethod ,_ebgeb =_cde .GetName (_bfcdd .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_ebgeb {_fb .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_cefd .TransformParams ,_ =_cde .GetDict (_bfcdd .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_cefd .DigestMethod ,_ =_cde .GetName (_bfcdd .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _cefd ,nil ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_aef :=NewPdfAnnotation ();_cadd :=&PdfAnnotationSound {};_cadd .PdfAnnotation =_aef ;_cadd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aef .SetContext (_cadd );return _cadd ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};func (_affcg *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _affcg ._bceac };

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_aaadf *_aae .Document )error ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_cde .PdfIndirectObject ;SV *_cde .PdfIndirectObject ;};func (_bcdgc *PdfAcroForm )filteredFields (_ageb FieldFilterFunc ,_baefc bool )[]*PdfField {if _bcdgc ==nil {return nil ;
};return _aabda (_bcdgc .Fields ,_ageb ,_baefc );};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_ggcf *PdfColorspaceSpecialIndexed )ToPdfObject ()_cde .PdfObject {_dgaa :=_cde .MakeArray (_cde .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_dgaa .Append (_ggcf .Base .ToPdfObject ());_dgaa .Append (_cde .MakeInteger (int64 (_ggcf .HiVal )));
_dgaa .Append (_ggcf .Lookup );if _ggcf ._abeg !=nil {_ggcf ._abeg .PdfObject =_dgaa ;return _ggcf ._abeg ;};return _dgaa ;};func (_gddcaa *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _cfadb []*PdfFieldSignature ;for _ ,_gbgcg :=range _gddcaa .AllFields (){switch _fagb :=_gbgcg .GetContext ().(type ){case *PdfFieldSignature :_dafdf :=_fagb ;
_cfadb =append (_cfadb ,_dafdf );};};return _cfadb ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_eeabg *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cde .PdfObject ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//
//	f(x) = y_0, ..., y_(n-1)
//
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_bcege *_cde .PdfIndirectObject ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_deec FieldFlag )Mask ()uint32 {return uint32 (_deec )};

// ColorToRGB converts a Lab color to an RGB color.
func (_agdc *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_aeadf :=func (_cefe float64 )float64 {if _cefe >=6.0/29{return _cefe *_cefe *_cefe ;};return 108.0/841*(_cefe -4.0/29.0);};_fbcfc ,_dbff :=color .(*PdfColorLab );if !_dbff {_fb .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_fbcfc .L ();AStar :=_fbcfc .A ();BStar :=_fbcfc .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_agdc .WhitePoint [0]*_aeadf (L );Y :=_agdc .WhitePoint [1]*_aeadf (M );Z :=_agdc .WhitePoint [2]*_aeadf (N );_eccf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_fgda :=-0.969256*X +1.875992*Y +0.041556*Z ;_efae :=0.055648*X +-0.204043*Y +1.057311*Z ;_eccf =_ce .Min (_ce .Max (_eccf ,0),1.0);
_fgda =_ce .Min (_ce .Max (_fgda ,0),1.0);_efae =_ce .Min (_ce .Max (_efae ,0),1.0);return NewPdfColorDeviceRGB (_eccf ,_fgda ,_efae ),nil ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_ddeag *PdfPageResources )HasColorspaceByName (keyName _cde .PdfObjectName )bool {_caggac ,_fecag :=_ddeag .GetColorspaces ();if _fecag !=nil {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fecag );
return false ;};if _caggac ==nil {return false ;};_ ,_dfdd :=_caggac .Colorspaces [string (keyName )];return _dfdd ;};func _baedb (_gabc *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_gabc }};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_cgeec *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _cgeec ._fbged !=nil {return _cgeec ._fbged ,nil ;};if _cgeec .ColorSpace ==nil {return nil ,nil ;};_cfegb ,_gcaab :=_edcbf (_cgeec .ColorSpace );if _gcaab !=nil {return nil ,_gcaab ;
};_cgeec ._fbged =_cfegb ;return _cgeec ._fbged ,nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_gfff *PdfAnnotation )GetContext ()PdfModel {if _gfff ==nil {return nil ;};return _gfff ._ccfd ;};func _ebfa (_afcb *PdfPage )map[_cde .PdfObjectName ]_cde .PdfObject {_fcd :=make (map[_cde .PdfObjectName ]_cde .PdfObject );if _afcb .Resources ==nil {return _fcd ;
};if _afcb .Resources .Font !=nil {if _eca ,_geb :=_cde .GetDict (_afcb .Resources .Font );_geb {for _ ,_ddbfa :=range _eca .Keys (){_fcd [_ddbfa ]=_eca .Get (_ddbfa );};};};if _afcb .Resources .ExtGState !=nil {if _ecc ,_afed :=_cde .GetDict (_afcb .Resources .ExtGState );
_afed {for _ ,_bdfb :=range _ecc .Keys (){_fcd [_bdfb ]=_ecc .Get (_bdfb );};};};if _afcb .Resources .XObject !=nil {if _gfcd ,_gggc :=_cde .GetDict (_afcb .Resources .XObject );_gggc {for _ ,_egee :=range _gfcd .Keys (){_fcd [_egee ]=_gfcd .Get (_egee );
};};};if _afcb .Resources .Pattern !=nil {if _cffgd ,_egfg :=_cde .GetDict (_afcb .Resources .Pattern );_egfg {for _ ,_ddde :=range _cffgd .Keys (){_fcd [_ddde ]=_cffgd .Get (_ddde );};};};if _afcb .Resources .Shading !=nil {if _eeg ,_afce :=_cde .GetDict (_afcb .Resources .Shading );
_afce {for _ ,_fad :=range _eeg .Keys (){_fcd [_fad ]=_eeg .Get (_fad );};};};if _afcb .Resources .ProcSet !=nil {if _aece ,_gceed :=_cde .GetDict (_afcb .Resources .ProcSet );_gceed {for _ ,_aefaa :=range _aece .Keys (){_fcd [_aefaa ]=_aece .Get (_aefaa );
};};};if _afcb .Resources .Properties !=nil {if _bcfb ,_aebc :=_cde .GetDict (_afcb .Resources .Properties );_aebc {for _ ,_ccaa :=range _bcfb .Keys (){_fcd [_ccaa ]=_bcfb .Get (_ccaa );};};};return _fcd ;};

// SetVersion sets the PDF version of the output file.
func (_fdbbb *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_fdbbb ._dgccdd .Major =majorVersion ;_fdbbb ._dgccdd .Minor =minorVersion ;};func (_cebc *PdfReader )newPdfActionLaunchFromDict (_gedf *_cde .PdfObjectDictionary )(*PdfActionLaunch ,error ){_bfb ,_cdg :=_bfc (_gedf .Get ("\u0046"));
if _cdg !=nil {return nil ,_cdg ;};return &PdfActionLaunch {Win :_gedf .Get ("\u0057\u0069\u006e"),Mac :_gedf .Get ("\u004d\u0061\u0063"),Unix :_gedf .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_gedf .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bfb },nil ;
};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_cacdgc *PdfPageResources )SetXObjectByName (keyName _cde .PdfObjectName ,stream *_cde .PdfObjectStream )error {if _cacdgc .XObject ==nil {_cacdgc .XObject =_cde .MakeDict ();};_cfbc :=_cde .TraceToDirectObject (_cacdgc .XObject );_gddf ,_gcfa :=_cfbc .(*_cde .PdfObjectDictionary );
if !_gcfa {_fb .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_cacdgc .XObject ,_cfbc );return _gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gddf .Set (keyName ,stream );return nil ;};

// SetFlag sets the flag for the field.
func (_bdff *PdfField )SetFlag (flag FieldFlag ){_bdff .Ff =_cde .MakeInteger (int64 (flag ))};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_cgdf :=NewPdfAnnotation ();_afgc :=&PdfAnnotationStamp {};_afgc .PdfAnnotation =_cgdf ;_afgc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgdf .SetContext (_afgc );return _afgc ;};func _becde (_ccgge *PdfField )[]*PdfField {_cgagc :=[]*PdfField {_ccgge };
for _ ,_dfege :=range _ccgge .Kids {_cgagc =append (_cgagc ,_becde (_dfege )...);};return _cgagc ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_gebgg :=&PdfSignature {Type :_cde .MakeName ("\u0053\u0069\u0067"),Handler :handler };_fdcdd :=&pdfSignDictionary {PdfObjectDictionary :_cde .MakeDict (),_agfb :&handler ,_ecbaf :_gebgg };
_gebgg ._gfbaeg =_cde .MakeIndirectObject (_fdcdd );return _gebgg ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_fefb *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_cde .PdfObject )(PdfColor ,error ){if len (objects )!=_fefb .GetNumComponents (){return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cacb ,_dacdg :=_cde .GetNumbersAsFloat (objects );
if _dacdg !=nil {return nil ,_dacdg ;};return _fefb .ColorFromFloats (_cacb );};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _cde .PdfObject ;BS _cde .PdfObject ;};func (_cacd *PdfReader )newPdfActionMovieFromDict (_aafg *_cde .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_aafg .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_aafg .Get ("\u0054"),Operation :_aafg .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// IsValid checks if the given pdf output intent type is valid.
func (_ecdfg PdfOutputIntentType )IsValid ()bool {return _ecdfg >=PdfOutputIntentTypeA1 &&_ecdfg <=PdfOutputIntentTypeX ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_dfeaa *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _dfeaa ._afcgc .(*PdfTilingPattern );};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_bade *PdfPage )Duplicate ()*PdfPage {_faegf :=*_bade ;_faegf ._bgdbb =_cde .MakeDict ();_faegf ._aaad =_cde .MakeIndirectObject (_faegf ._bgdbb );_faegf ._cgda =*_faegf ._bgdbb ;return &_faegf ;};

// GetOptimizer returns current PDF optimizer.
func (_bcaac *PdfWriter )GetOptimizer ()Optimizer {return _bcaac ._fegcee };

// GetContainingPdfObject implements interface PdfModel.
func (_ccd *PdfAnnotation )GetContainingPdfObject ()_cde .PdfObject {return _ccd ._gfg };

// GetNumComponents returns the number of color components (1 for Separation).
func (_ece *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_eaegg *PdfPage )AddContentStreamByString (contentStr string )error {_efgca ,_gbacg :=_cde .MakeStream ([]byte (contentStr ),_cde .NewFlateEncoder ());if _gbacg !=nil {return _gbacg ;};if _eaegg .Contents ==nil {_eaegg .Contents =_efgca ;}else {_gbgg :=_cde .TraceToDirectObject (_eaegg .Contents );
_facbg ,_aebd :=_gbgg .(*_cde .PdfObjectArray );if !_aebd {_facbg =_cde .MakeArray (_gbgg );};_facbg .Append (_efgca );_eaegg .Contents =_facbg ;};return nil ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _cde .PdfObject ;Flags _cde .PdfObject ;};

// Fill populates `form` with values provided by `provider`.
func (_dgbgdg *PdfAcroForm )Fill (provider FieldValueProvider )error {return _dgbgdg .fill (provider ,nil );};

// AddOutlineTree adds outlines to a PDF file.
func (_bcbbf *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_bcbbf ._aabac =outlineTree };

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};func (_afdg *PdfWriter )writeDocumentVersion (){if _afdg ._ceaea {_afdg .writeString ("\u000a");}else {_afdg .writeString (_a .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_afdg ._dgccdd .Major ,_afdg ._dgccdd .Minor ));
_afdg .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// C returns the value of the C component of the color.
func (_fbab *PdfColorCalRGB )C ()float64 {return _fbab [2]};var (_afgeb =_cgg .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_abbaa =_cgg .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_fgecc =_cgg .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_ggbacf ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_agbb ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_bbefc ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_cde .PdfObjectArray ;Matrix *_cde .PdfObjectArray ;Function []PdfFunction ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_abffb *PdfPattern )GetContext ()PdfModel {return _abffb ._afcgc };

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_aggbf *_cde .PdfIndirectObject ;};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_ccgcc :=&PdfColorPatternType3 {};return _ccgcc ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_gfagb *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _gfagb ._afcgc .(*PdfShadingPattern );};func (_eebdd *PdfWriter )writeXRefStreams (_abcbc int ,_ddaccd int64 )error {_debge :=_abcbc +1;_eebdd ._cegabf [_debge ]=crossReference {Type :1,ObjectNumber :_debge ,Offset :_ddaccd };
_acbeb :=_bb .NewBuffer (nil );_bbbgf :=_cde .MakeArray ();for _agbgg :=0;_agbgg <=_abcbc ;{for ;_agbgg <=_abcbc ;_agbgg ++{_ccgdd ,_gcfea :=_eebdd ._cegabf [_agbgg ];if _gcfea &&(!_eebdd ._ceaea ||_eebdd ._ceaea &&(_ccgdd .Type ==1&&_ccgdd .Offset >=_eebdd ._fgcbc ||_ccgdd .Type ==0)){break ;
};};var _bbdbg int ;for _bbdbg =_agbgg +1;_bbdbg <=_abcbc ;_bbdbg ++{_fcccf ,_ebaf :=_eebdd ._cegabf [_bbdbg ];if _ebaf &&(!_eebdd ._ceaea ||_eebdd ._ceaea &&(_fcccf .Type ==1&&_fcccf .Offset > _eebdd ._fgcbc )){continue ;};break ;};_bbbgf .Append (_cde .MakeInteger (int64 (_agbgg )),_cde .MakeInteger (int64 (_bbdbg -_agbgg )));
for _abbgc :=_agbgg ;_abbgc < _bbdbg ;_abbgc ++{_bdacc :=_eebdd ._cegabf [_abbgc ];switch _bdacc .Type {case 0:_eb .Write (_acbeb ,_eb .BigEndian ,byte (0));_eb .Write (_acbeb ,_eb .BigEndian ,uint32 (0));_eb .Write (_acbeb ,_eb .BigEndian ,uint16 (0xFFFF));
case 1:_eb .Write (_acbeb ,_eb .BigEndian ,byte (1));_eb .Write (_acbeb ,_eb .BigEndian ,uint32 (_bdacc .Offset ));_eb .Write (_acbeb ,_eb .BigEndian ,uint16 (_bdacc .Generation ));case 2:_eb .Write (_acbeb ,_eb .BigEndian ,byte (2));_eb .Write (_acbeb ,_eb .BigEndian ,uint32 (_bdacc .ObjectNumber ));
_eb .Write (_acbeb ,_eb .BigEndian ,uint16 (_bdacc .Index ));};};_agbgg =_bbdbg +1;};_abgbf ,_aaacd :=_cde .MakeStream (_acbeb .Bytes (),_cde .NewFlateEncoder ());if _aaacd !=nil {return _aaacd ;};_abgbf .ObjectNumber =int64 (_debge );_abgbf .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_cde .MakeName ("\u0058\u0052\u0065\u0066"));
_abgbf .PdfObjectDictionary .Set ("\u0057",_cde .MakeArray (_cde .MakeInteger (1),_cde .MakeInteger (4),_cde .MakeInteger (2)));_abgbf .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_bbbgf );_abgbf .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_cde .MakeInteger (int64 (_debge )));
_abgbf .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_eebdd ._decfde );_abgbf .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_eebdd ._dbabf );if _eebdd ._ceaea &&_eebdd ._abdd > 0{_abgbf .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_cde .MakeInteger (_eebdd ._abdd ));
};if _eebdd ._febcf !=nil {_abgbf .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_eebdd ._fdbfc );};if _eebdd ._dgdef ==nil &&_eebdd ._fegb !=""&&_eebdd ._dbbaa !=""{_eebdd ._dgdef =_cde .MakeArray (_cde .MakeHexString (_eebdd ._fegb ),_cde .MakeHexString (_eebdd ._dbbaa ));
};if _eebdd ._dgdef !=nil {_fb .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_eebdd ._dgdef );_abgbf .Set ("\u0049\u0044",_eebdd ._dgdef );};_eebdd .writeObject (int (_abgbf .ObjectNumber ),_abgbf );return nil ;};func _cffcc (_cgffg _cde .PdfObject )[]*_cde .PdfObjectStream {if _cgffg ==nil {return nil ;
};_fbcce ,_ecfbgg :=_cde .GetArray (_cgffg );if !_ecfbgg ||_fbcce .Len ()==0{return nil ;};_dccbd :=make ([]*_cde .PdfObjectStream ,0,_fbcce .Len ());for _ ,_dgfc :=range _fbcce .Elements (){if _dfbdc ,_fdbcb :=_cde .GetStream (_dgfc );_fdbcb {_dccbd =append (_dccbd ,_dfbdc );
};};return _dccbd ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_cde .PdfIndirectObject )*PdfOutlineItem {_ffggc :=PdfOutlineItem {};_ffggc ._aeefd =&_ffggc ;_ffggc .Title =_cde .MakeString (title );_gage :=_cde .MakeArray ();_gage .Append (page );_gage .Append (_cde .MakeName ("\u0046\u0069\u0074"));
_ffggc .Dest =_gage ;return &_ffggc ;};func (_cdege *PdfWriter )updateObjectNumbers (){_ecgca :=_cdege .ObjNumOffset ;_bffea :=0;for _ ,_aaaef :=range _cdege ._abbc {_ceced :=int64 (_bffea +1+_ecgca );_gcbfe :=true ;if _cdege ._ceaea {if _eccag ,_dfbcf :=_cdege ._abebf [_aaaef ];
_dfbcf {_ceced =_eccag ;_gcbfe =false ;};};switch _dfegg :=_aaaef .(type ){case *_cde .PdfIndirectObject :_dfegg .ObjectNumber =_ceced ;_dfegg .GenerationNumber =0;case *_cde .PdfObjectStream :_dfegg .ObjectNumber =_ceced ;_dfegg .GenerationNumber =0;case *_cde .PdfObjectStreams :_dfegg .ObjectNumber =_ceced ;
_dfegg .GenerationNumber =0;default:_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_dfegg );continue ;
};if _gcbfe {_bffea ++;};};_efaca :=func (_dgafc _cde .PdfObject )int64 {switch _aefca :=_dgafc .(type ){case *_cde .PdfIndirectObject :return _aefca .ObjectNumber ;case *_cde .PdfObjectStream :return _aefca .ObjectNumber ;case *_cde .PdfObjectStreams :return _aefca .ObjectNumber ;
};return 0;};_cf .SliceStable (_cdege ._abbc ,func (_bfcag ,_cgdag int )bool {return _efaca (_cdege ._abbc [_bfcag ])< _efaca (_cdege ._abbc [_cgdag ])});};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_edceb *PdfWriter )SetOptimizer (optimizer Optimizer ){_edceb ._fegcee =optimizer };

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _cde .PdfObject ;Sy _cde .PdfObject ;};

// NewEmbeddedFileFromContent construct a new EmbeddedFile from supplied file content.
func NewEmbeddedFileFromContent (content []byte )(*EmbeddedFile ,error ){_gcgd :=_aaf .Detect (content );_afgg :=_eg .Sum (content );_ddcf :=&EmbeddedFile {Name :"\u0061\u0074\u0074\u0061\u0063\u0068\u006d\u0065\u006e\u0074",Content :content ,FileType :_gcgd .String (),Hash :_f .EncodeToString (_afgg [:])};
return _ddcf ,nil ;};func (_fbecf *PdfReader )resolveReference (_cbdde *_cde .PdfObjectReference )(_cde .PdfObject ,bool ,error ){_ffadb ,_bcdbf :=_fbecf ._fdccd .ObjCache [int (_cbdde .ObjectNumber )];if !_bcdbf {_fb .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_cbdde );
_febfc ,_ddfgg :=_fbecf ._fdccd .LookupByReference (*_cbdde );if _ddfgg !=nil {return nil ,false ,_ddfgg ;};_fbecf ._fdccd .ObjCache [int (_cbdde .ObjectNumber )]=_febfc ;return _febfc ,false ,nil ;};return _ffadb ,true ,nil ;};

// String returns a string representation of the field.
func (_bedag *PdfField )String ()string {if _efcc ,_gacfg :=_bedag .ToPdfObject ().(*_cde .PdfIndirectObject );_gacfg {return _a .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bedag ._cdfff ,_efcc .PdfObject .String ());};return "";};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_beccd *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _beccd ._fdccd .GetRevisionNumber ()==0{return nil ,_gf .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _aefac ,_aagcd :=_beccd ._abece [_beccd ];_aagcd {return _aefac ,nil ;};_gbfec ,_cbea :=_beccd ._fdccd .GetPreviousRevisionReadSeeker ();if _cbea !=nil {return nil ,_cbea ;};_deagg ,_cbea :=_deeac (_gbfec ,_beccd ._fafdd ,_beccd ._ggbga ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _cbea !=nil {return nil ,_cbea ;};_beccd ._egfff [_beccd ._fdccd .GetRevisionNumber ()-1]=_deagg ;_beccd ._abece [_beccd ]=_deagg ;_deagg ._abece =_beccd ._abece ;return _deagg ,nil ;};

// WriteToFile writes the output PDF to file.
func (_fbedf *PdfWriter )WriteToFile (outputFilePath string )error {_ccbfa ,_aeceb :=_cd .Create (outputFilePath );if _aeceb !=nil {return _aeceb ;};defer _ccbfa .Close ();return _fbedf .Write (_ccbfa );};

// Items returns all children outline items.
func (_afeaa *OutlineItem )Items ()[]*OutlineItem {return _afeaa .Entries };func (_acee *PdfWriter )setWriter (_acbcd _df .Writer ){_acee ._gbacgg =_acee ._adgdg ;_acee ._efccc =_g .NewWriter (_acbcd );};

// B returns the value of the B component of the color.
func (_gaae *PdfColorCalRGB )B ()float64 {return _gaae [1]};

// ToPdfObject implements interface PdfModel.
func (_fdad *PdfAnnotationWatermark )ToPdfObject ()_cde .PdfObject {_fdad .PdfAnnotation .ToPdfObject ();_dfef :=_fdad ._gfg ;_aeaf :=_dfef .PdfObject .(*_cde .PdfObjectDictionary );_aeaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_aeaf .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_fdad .FixedPrint );return _dfef ;};

// PartialName returns the partial name of the field.
func (_dfea *PdfField )PartialName ()string {_cecb :="";if _dfea .T !=nil {_cecb =_dfea .T .Decoded ();}else {_fb .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _cecb ;};func (_aedf *PdfReader )newPdfAnnotationLineFromDict (_aegc *_cde .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_becb :=PdfAnnotationLine {};_gaa ,_eec :=_aedf .newPdfAnnotationMarkupFromDict (_aegc );if _eec !=nil {return nil ,_eec ;
};_becb .PdfAnnotationMarkup =_gaa ;_becb .L =_aegc .Get ("\u004c");_becb .BS =_aegc .Get ("\u0042\u0053");_becb .LE =_aegc .Get ("\u004c\u0045");_becb .IC =_aegc .Get ("\u0049\u0043");_becb .LL =_aegc .Get ("\u004c\u004c");_becb .LLE =_aegc .Get ("\u004c\u004c\u0045");
_becb .Cap =_aegc .Get ("\u0043\u0061\u0070");_becb .IT =_aegc .Get ("\u0049\u0054");_becb .LLO =_aegc .Get ("\u004c\u004c\u004f");_becb .CP =_aegc .Get ("\u0043\u0050");_becb .Measure =_aegc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_becb .CO =_aegc .Get ("\u0043\u004f");
return &_becb ,nil ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_afbd *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _cebga []_fab .TextEncoder ;var _afaf _fab .CMapEncoder ;if _caea :=_afbd .baseFields ()._dcgd ;_caea !=nil {_afaf =_fab .NewCMapEncoder ("",nil ,_caea );};_fbfab :=_afbd .Encoder ();
if _fbfab !=nil {switch _eade :=_fbfab .(type ){case _fab .SimpleEncoder :_ggbadb :=_eade .BaseName ();if _ ,_abeab :=_dcga [_ggbadb ];_abeab {_cebga =append (_cebga ,_fbfab );};};};if len (_cebga )==0{if _afbd .baseFields ()._dcgd !=nil {_cebga =append (_cebga ,_afaf );
};if _fbfab !=nil {_cebga =append (_cebga ,_fbfab );};};var _cgbfe _bb .Buffer ;var _fcfe int ;for _ ,_ebeed :=range data {var _eegcf bool ;for _ ,_dafgd :=range _cebga {if _aagb :=_dafgd .Encode (string (_ebeed ));len (_aagb )> 0{_cgbfe .Write (_aagb );
_eegcf =true ;break ;};};if !_eegcf {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_ebeed );
_fcfe ++;};};if _fcfe !=0{_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_fcfe ,_afbd ,_cebga );
};return _cgbfe .Bytes (),_fcfe ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_cgea *PdfFont )BytesToCharcodes (data []byte )[]_fab .CharCode {_fb .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _gfcb ,_dgfff :=_cgea ._dcgb .(*pdfFontType0 );_dgfff &&_gfcb ._abefe !=nil {if _aegfe ,_ccdee :=_gfcb .bytesToCharcodes (data );_ccdee {return _aegfe ;};};var (_dfde =make ([]_fab .CharCode ,0,len (data )+len (data )%2);_aebfb =_cgea .baseFields ();
);if _aebfb ._dcgd !=nil {if _dabd ,_edbg :=_aebfb ._dcgd .BytesToCharcodes (data );_edbg {for _ ,_ffbg :=range _dabd {_dfde =append (_dfde ,_fab .CharCode (_ffbg ));};return _dfde ;};};if _aebfb .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _ccgec :=0;_ccgec < len (data );_ccgec +=2{_bdfcd :=uint16 (data [_ccgec ])<<8|uint16 (data [_ccgec +1]);_dfde =append (_dfde ,_fab .CharCode (_bdfcd ));};}else {for _ ,_faaeg :=range data {_dfde =append (_dfde ,_fab .CharCode (_faaeg ));
};};return _dfde ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_dgda *PdfFont )ToUnicode ()string {if _dgda .baseFields ()._dcgd ==nil {return "";};return _dgda .baseFields ()._dcgd .Name ();};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_gdc :=NewPdfAction ();_ebc :=&PdfActionImportData {};_ebc .PdfAction =_gdc ;_gdc .SetContext (_ebc );return _ebc ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_gced *PdfColorspaceLab )GetNumComponents ()int {return 3};func (_dbdg *PdfPage )getParentResources ()(*PdfPageResources ,error ){_daagb :=_dbdg .Parent ;for _daagb !=nil {_geedd ,_gggcg :=_cde .GetDict (_daagb );if !_gggcg {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_gf .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _gfcfc :=_geedd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gfcfc !=nil {_cggafb ,_fgaae :=_cde .GetDict (_gfcfc );
if !_fgaae {return nil ,_gf .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_gcdb ,_acbaab :=NewPdfPageResourcesFromDict (_cggafb );if _acbaab !=nil {return nil ,_acbaab ;};return _gcdb ,nil ;
};_daagb =_geedd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ffc *PdfActionJavaScript )ToPdfObject ()_cde .PdfObject {_ffc .PdfAction .ToPdfObject ();_cea :=_ffc ._dfb ;_ea :=_cea .PdfObject .(*_cde .PdfObjectDictionary );_ea .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeJavaScript )));_ea .SetIfNotNil ("\u004a\u0053",_ffc .JS );
return _cea ;};

// ToPdfObject implements interface PdfModel.
func (_bac *PdfActionGoToR )ToPdfObject ()_cde .PdfObject {_bac .PdfAction .ToPdfObject ();_gag :=_bac ._dfb ;_aed :=_gag .PdfObject .(*_cde .PdfObjectDictionary );_aed .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeGoToR )));if _bac .F !=nil {_aed .Set ("\u0046",_bac .F .ToPdfObject ());
};_aed .SetIfNotNil ("\u0044",_bac .D );_aed .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bac .NewWindow );return _gag ;};func (_dgg *PdfReader )newPdfActionResetFormFromDict (_ggf *_cde .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_ggf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_ggf .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_cd .File ,error ){const _bdafd ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_edbed ,_fedgb :=_cd .Open (pdfFile );if _fedgb !=nil {return nil ,nil ,_fedgb ;};_efabf ,_fedgb :=_deeac (_edbed ,opts ,true ,_bdafd );if _fedgb !=nil {_edbed .Close ();return nil ,nil ,_fedgb ;};return _efabf ,_edbed ,nil ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_gcee :=NewPdfAnnotation ();_cdca :=&PdfAnnotationRedact {};_cdca .PdfAnnotation =_gcee ;_cdca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gcee .SetContext (_cdca );return _cdca ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_cde .PdfObjectArray ;_ecda *Image ;};

// EmbeddedFile represents an embedded file.
type EmbeddedFile struct{Name string ;Content []byte ;FileType string ;Description string ;Relationship FileRelationship ;Hash string ;CreationTime _gdd .Time ;ModTime _gdd .Time ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_fgaef *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_cde .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adecd ,_bdef :=_cde .GetNumbersAsFloat (objects );
if _bdef !=nil {return nil ,_bdef ;};return _fgaef .ColorFromFloats (_adecd );};

// AddOCSPs adds OCSPs to DSS.
func (_gdef *DSS )AddOCSPs (ocsps [][]byte )([]*_cde .PdfObjectStream ,error ){return _gdef .add (&_gdef .OCSPs ,_gdef ._ddff ,ocsps );};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_afcgc PdfModel ;_eebba _cde .PdfObject ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ffdd pdfFontSimple )GetRuneMetrics (r rune )(_baf .CharMetrics ,bool ){if _ffdd ._cgagf !=nil {_cedbc ,_cffb :=_ffdd ._cgagf .Read (r );if _cffb {return _cedbc ,true ;};};_ggdb :=_ffdd .Encoder ();if _ggdb ==nil {_fb .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_ffdd );
return _baf .CharMetrics {},false ;};_fdccg ,_bgbaac :=_ggdb .RuneToCharcode (r );if !_bgbaac {if r !=' '{_fb .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_ffdd );
};return _baf .CharMetrics {},false ;};_dfabb ,_cggcd :=_ffdd .GetCharMetrics (_fdccg );return _dfabb ,_cggcd ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_gebb *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _cde .GetNumberAsFloat (_gebb .Descent );};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _cde .PdfObject ;MK _cde .PdfObject ;A _cde .PdfObject ;AA _cde .PdfObject ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_gfbaeg *_cde .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_cde .PdfObjectName ;Filter *_cde .PdfObjectName ;SubFilter *_cde .PdfObjectName ;Contents *_cde .PdfObjectString ;Cert _cde .PdfObject ;ByteRange *_cde .PdfObjectArray ;Reference *_cde .PdfObjectArray ;Changes *_cde .PdfObjectArray ;Name *_cde .PdfObjectString ;
M *_cde .PdfObjectString ;Location *_cde .PdfObjectString ;Reason *_cde .PdfObjectString ;ContactInfo *_cde .PdfObjectString ;R *_cde .PdfObjectInteger ;V *_cde .PdfObjectInteger ;PropBuild *_cde .PdfObjectDictionary ;PropAuthTime *_cde .PdfObjectInteger ;
PropAuthType *_cde .PdfObjectName ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _cde .PdfObject ;AN _cde .PdfObject ;OP _cde .PdfObject ;JS _cde .PdfObject ;};

// ToInteger convert to an integer format.
func (_gdea *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_agbge :=_ce .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_agbge *_gdea .A ()),uint32 (_agbge *_gdea .B ()),uint32 (_agbge *_gdea .C ())};};func (_cfad *PdfReader )newPdfFieldFromIndirectObject (_cbebc *_cde .PdfIndirectObject ,_bfbba *PdfField )(*PdfField ,error ){if _cffca ,_fgdf :=_cfad ._bgffc .GetModelFromPrimitive (_cbebc ).(*PdfField );
_fgdf {return _cffca ,nil ;};_fabca ,_bdga :=_cde .GetDict (_cbebc );if !_bdga {return nil ,_a .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gacbg :=NewPdfField ();_gacbg ._gfed =_cbebc ;_gacbg ._gfed .PdfObject =_fabca ;if _cgcc ,_dede :=_cde .GetName (_fabca .Get ("\u0046\u0054"));_dede {_gacbg .FT =_cgcc ;};if _bfbba !=nil {_gacbg .Parent =_bfbba ;};_gacbg .T ,_ =_fabca .Get ("\u0054").(*_cde .PdfObjectString );
_gacbg .TU ,_ =_fabca .Get ("\u0054\u0055").(*_cde .PdfObjectString );_gacbg .TM ,_ =_fabca .Get ("\u0054\u004d").(*_cde .PdfObjectString );_gacbg .Ff ,_ =_fabca .Get ("\u0046\u0066").(*_cde .PdfObjectInteger );_gacbg .V =_fabca .Get ("\u0056");_gacbg .DV =_fabca .Get ("\u0044\u0056");
_gacbg .AA =_fabca .Get ("\u0041\u0041");if DA :=_fabca .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_cde .GetString (DA );_gacbg .VariableText =&VariableText {DA :DA };Q ,_ :=_fabca .Get ("\u0051").(*_cde .PdfObjectInteger );DS ,_ :=_fabca .Get ("\u0044\u0053").(*_cde .PdfObjectString );
RV :=_fabca .Get ("\u0052\u0056");_gacbg .VariableText .Q =Q ;_gacbg .VariableText .DS =DS ;_gacbg .VariableText .RV =RV ;};_gcfcf :=_gacbg .FT ;if _gcfcf ==nil &&_bfbba !=nil {_gcfcf =_bfbba .FT ;};if _gcfcf !=nil {switch *_gcfcf {case "\u0054\u0078":_eeadf ,_fefbf :=_gaegf (_fabca );
if _fefbf !=nil {return nil ,_fefbf ;};_eeadf .PdfField =_gacbg ;_gacbg ._cdfff =_eeadf ;case "\u0043\u0068":_cecbf ,_eebaf :=_cfffa (_fabca );if _eebaf !=nil {return nil ,_eebaf ;};_cecbf .PdfField =_gacbg ;_gacbg ._cdfff =_cecbf ;case "\u0042\u0074\u006e":_afgd ,_bbfb :=_ddgf (_fabca );
if _bbfb !=nil {return nil ,_bbfb ;};_afgd .PdfField =_gacbg ;_gacbg ._cdfff =_afgd ;case "\u0053\u0069\u0067":_dbef ,_cdaaa :=_cfad .newPdfFieldSignatureFromDict (_fabca );if _cdaaa !=nil {return nil ,_cdaaa ;};_dbef .PdfField =_gacbg ;_gacbg ._cdfff =_dbef ;
default:_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_gacbg .FT );return nil ,_gf .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _ebcga ,_efccb :=_cde .GetName (_fabca .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_efccb {if *_ebcga =="\u0057\u0069\u0064\u0067\u0065\u0074"{_fdfff ,_ggea :=_cfad .newPdfAnnotationFromIndirectObject (_cbebc );if _ggea !=nil {return nil ,_ggea ;
};_adfac ,_aecb :=_fdfff .GetContext ().(*PdfAnnotationWidget );if !_aecb {return nil ,_gf .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_adfac ._aad =_gacbg ;_adfac .Parent =_gacbg ._gfed ;
_gacbg .Annotations =append (_gacbg .Annotations ,_adfac );return _gacbg ,nil ;};};_ggcd :=true ;if _ggbad ,_cggg :=_cde .GetArray (_fabca .Get ("\u004b\u0069\u0064\u0073"));_cggg {_adfb :=make ([]*_cde .PdfIndirectObject ,0,_ggbad .Len ());for _ ,_faab :=range _ggbad .Elements (){_gaad ,_dcad :=_cde .GetIndirect (_faab );
if !_dcad {_aafe ,_bdbee :=_cde .GetStream (_faab );if _bdbee &&_aafe .PdfObjectDictionary !=nil {_ggab ,_edfb :=_cde .GetNameVal (_aafe .Get ("\u0054\u0079\u0070\u0065"));if _edfb &&_ggab =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_fb .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_gf .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_adgf ,_egag :=_cde .GetDict (_gaad );
if !_egag {return nil ,ErrTypeCheck ;};if _ggcd {_ggcd =!_gcbee (_adgf );};_adfb =append (_adfb ,_gaad );};for _ ,_cggc :=range _adfb {if _ggcd {_acegg ,_cdcad :=_cfad .newPdfAnnotationFromIndirectObject (_cggc );if _cdcad !=nil {_fb .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_cdcad );
return nil ,_cdcad ;};_aaff ,_cdde :=_acegg ._ccfd .(*PdfAnnotationWidget );if !_cdde {return nil ,ErrTypeCheck ;};_aaff ._aad =_gacbg ;_gacbg .Annotations =append (_gacbg .Annotations ,_aaff );}else {_gceda ,_fgdd :=_cfad .newPdfFieldFromIndirectObject (_cggc ,_gacbg );
if _fgdd !=nil {_fb .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_fgdd );return nil ,_fgdd ;};_gacbg .Kids =append (_gacbg .Kids ,_gceda );
};};};return _gacbg ,nil ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_eedg :=&PdfFilespec {};_eedg ._dcef =_cde .MakeIndirectObject (_cde .MakeDict ());return _eedg ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// AddAnnotation appends `annot` to the list of page annotations.
func (_fgfc *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _fgfc ._babf ==nil {_fgfc .GetAnnotations ();};_fgfc ._babf =append (_fgfc ._babf ,annot );};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_feaea *PdfReader )GetOutlines ()(*Outline ,error ){if _feaea ==nil {return nil ,_gf .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_fbcfa :=_feaea .GetOutlineTree ();if _fbcfa ==nil {return nil ,_gf .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _fgbef func (_ecgfe *PdfOutlineTreeNode ,_gbeea *[]*OutlineItem );_fgbef =func (_fbcg *PdfOutlineTreeNode ,_bbdcab *[]*OutlineItem ){if _fbcg ==nil {return ;};if _fbcg ._aeefd ==nil {_fb .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _effecd *OutlineItem ;if _ffgd ,_fddgca :=_fbcg ._aeefd .(*PdfOutlineItem );_fddgca {_aafced :=_ffgd .Dest ;if (_aafced ==nil ||_cde .IsNullObject (_aafced ))&&_ffgd .A !=nil {if _egdga ,_gbbbbb :=_cde .GetDict (_ffgd .A );_gbbbbb {if _beed ,_eegfc :=_cde .GetArray (_egdga .Get ("\u0044"));
_eegfc {_aafced =_beed ;}else {_gfgab ,_dbabd :=_cde .GetString (_egdga .Get ("\u0044"));if !_dbabd {return ;};_ceeed ,_dbabd :=_feaea ._gaeed .Get ("\u004e\u0061\u006de\u0073").(*_cde .PdfObjectReference );if !_dbabd {return ;};_ebaae ,_cdebd :=_feaea ._fdccd .LookupByReference (*_ceeed );
if _cdebd !=nil {_fb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_cdebd .Error ());
return ;};_bdffa ,_dbabd :=_ebaae .(*_cde .PdfIndirectObject );if !_dbabd {return ;};_aeegc :=map[_cde .PdfObject ]struct{}{};_cdebd =_feaea .buildNameNodes (_bdffa ,_aeegc );if _cdebd !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_cdebd .Error ());
return ;};for _acbdg :=range _aeegc {_fggcb ,_babg :=_cde .GetDict (_acbdg );if !_babg {continue ;};_fbfc ,_babg :=_cde .GetArray (_fggcb .Get ("\u004e\u0061\u006de\u0073"));if !_babg {continue ;};for _bbcg ,_caaae :=range _fbfc .Elements (){switch _caaae .(type ){case *_cde .PdfObjectString :if _caaae .String ()==_gfgab .String (){if _edcda :=_fbfc .Get (_bbcg +1);
_edcda !=nil {if _cdfcb ,_ecbac :=_cde .GetDict (_edcda );_ecbac {_aafced =_cdfcb .Get ("\u0044");break ;};};};};};};};};};var _cgdg OutlineDest ;if _aafced !=nil &&!_cde .IsNullObject (_aafced ){if _cadba ,_gbfe :=_efdfb (_aafced ,_feaea );_gbfe ==nil {_cgdg =*_cadba ;
}else {_fb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_aafced ,_gbfe );
};};_effecd =NewOutlineItem (_ffgd .Title .Decoded (),_cgdg );*_bbdcab =append (*_bbdcab ,_effecd );if _ffgd .Next !=nil {_fgbef (_ffgd .Next ,_bbdcab );};};if _fbcg .First !=nil {if _effecd !=nil {_bbdcab =&_effecd .Entries ;};_fgbef (_fbcg .First ,_bbdcab );
};};_ceecg :=NewOutline ();_fgbef (_fbcfa ,&_ceecg .Entries );return _ceecg ,nil ;};func _adcda (_gbgfb string )(string ,error ){var _cdcga _bb .Buffer ;_cdcga .WriteString (_gbgfb );_gfdcg :=make ([]byte ,8+16);_adce :=_gdd .Now ().UTC ().UnixNano ();
_eb .BigEndian .PutUint64 (_gfdcg ,uint64 (_adce ));_ ,_bebec :=_ba .Read (_gfdcg [8:]);if _bebec !=nil {return "",_bebec ;};_cdcga .WriteString (_f .EncodeToString (_gfdcg ));return _cdcga .String (),nil ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_fccff *PdfField )SetContext (ctx PdfModel ){_fccff ._cdfff =ctx };func _ffcb (_aecec map[_baf .GID ]int ,_abbde uint16 )*_cde .PdfObjectArray {_dagc :=&_cde .PdfObjectArray {};_efcg :=_baf .GID (_abbde );for _eafdc :=_baf .GID (0);_eafdc < _efcg ;
{_dbcb ,_bacbc :=_aecec [_eafdc ];if !_bacbc {_eafdc ++;continue ;};_cdbd :=_eafdc ;for _befbf :=_cdbd +1;_befbf < _efcg ;_befbf ++{if _fcda ,_bbbb :=_aecec [_befbf ];!_bbbb ||_dbcb !=_fcda {break ;};_cdbd =_befbf ;};_dagc .Append (_cde .MakeInteger (int64 (_eafdc )));
_dagc .Append (_cde .MakeInteger (int64 (_cdbd )));_dagc .Append (_cde .MakeInteger (int64 (_dbcb )));_eafdc =_cdbd +1;};return _dagc ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_edfbcd *PdfShading )GetContext ()PdfModel {return _edfbcd ._fdea };

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_ecfa *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _ecfa .RunesToCharcodeBytes ([]rune (str ));};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_ccga *PdfPage )GetRotate ()(int64 ,error ){if _ccga .Rotate !=nil {return *_ccga .Rotate ,nil ;};_ffbea :=_ccga .Parent ;for _ffbea !=nil {_eaead ,_baeef :=_cde .GetDict (_ffbea );if !_baeef {return 0,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _cdbc :=_eaead .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_cdbc !=nil {_fdcb ,_cgffe :=_cde .GetInt (_cdbc );if !_cgffe {return 0,_gf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _fdcb !=nil {return int64 (*_fdcb ),nil ;
};return 0,_gf .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_ffbea =_eaead .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_gf .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};func (_adga *PdfFont )baseFields ()*fontCommon {if _adga ._dcgb ==nil {_fb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _adga ._dcgb .baseFields ();};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_affea :=&PdfOutlineItem {_baaeg :_cde .MakeIndirectObject (_cde .MakeDict ())};_affea ._aeefd =_affea ;return _affea ;};

// GetXObjectByName gets XObject by name.
func (_adca *PdfPage )GetXObjectByName (name _cde .PdfObjectName )(_cde .PdfObject ,bool ){_aaede ,_efgac :=_adca .Resources .XObject .(*_cde .PdfObjectDictionary );if !_efgac {return nil ,false ;};if _caed :=_aaede .Get (name );_caed !=nil {return _caed ,true ;
};return nil ,false ;};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_afbe :=&PdfShadingPatternType2 {};_afbe .Matrix =_cde .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_afbe .PdfPattern =&PdfPattern {};_afbe .PdfPattern .PatternType =int64 (*_cde .MakeInteger (2));
_afbe .PdfPattern ._afcgc =_afbe ;_afbe .PdfPattern ._eebba =_cde .MakeIndirectObject (_cde .MakeDict ());return _afbe ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_adbfg *PdfWriter )SetNamedDestinations (dests _cde .PdfObject )error {if dests ==nil {return nil ;};_fb .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_adbfg ._aaeef .Set ("\u0044\u0065\u0073t\u0073",dests );return _adbfg .addObjects (dests );};

// ColorToRGB converts gray -> rgb for a single color component.
func (_aaeg *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_fegd ,_gagbe :=color .(*PdfColorDeviceGray );if !_gagbe {_fb .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_fegd ),float64 (*_fegd ),float64 (*_fegd )),nil ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_bdgab *PdfPage )Size ()(float64 ,float64 ,error ){_cafbb ,_adbd :=_bdgab .GetMediaBox ();if _adbd !=nil {return 0,0,_adbd ;};_aggce ,_ceace :=_cafbb .Width (),_cafbb .Height ();_gagfb ,_adbd :=_bdgab .GetRotate ();if _adbd !=nil {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_adbd .Error ());
};if _cfde :=_gagfb ;_cfde %360!=0&&_cfde %90==0{if _deccd :=(360+_cfde %360)%360;_deccd ==90||_deccd ==270{_aggce ,_ceace =_ceace ,_aggce ;};};return _aggce ,_ceace ,nil ;};func _eggea (_ceafc _cde .PdfObject )(*PdfFontDescriptor ,error ){_caaa :=&PdfFontDescriptor {};
_ceafc =_cde .ResolveReference (_ceafc );if _ggfc ,_fgdbg :=_ceafc .(*_cde .PdfIndirectObject );_fgdbg {_caaa ._bebgf =_ggfc ;_ceafc =_ggfc .PdfObject ;};_dbaa ,_bgbaa :=_cde .GetDict (_ceafc );if !_bgbaa {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ceafc );
return nil ,_cde .ErrTypeError ;};if _cgeac :=_dbaa .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_cgeac !=nil {_caaa .FontName =_cgeac ;}else {_fb .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_eabdg ,_ :=_cde .GetName (_caaa .FontName );if _fefd :=_dbaa .Get ("\u0054\u0079\u0070\u0065");_fefd !=nil {_bfbe ,_bgcc :=_fefd .(*_cde .PdfObjectName );if !_bgcc ||string (*_bfbe )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_fb .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_fefd ,_eabdg ,_caaa .FontName );
};}else {_fb .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_eabdg ,_caaa .FontName );
};_caaa .FontFamily =_dbaa .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_caaa .FontStretch =_dbaa .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_caaa .FontWeight =_dbaa .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_caaa .Flags =_dbaa .Get ("\u0046\u006c\u0061g\u0073");_caaa .FontBBox =_dbaa .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_caaa .ItalicAngle =_dbaa .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_caaa .Ascent =_dbaa .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_caaa .Descent =_dbaa .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_caaa .Leading =_dbaa .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_caaa .CapHeight =_dbaa .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_caaa .XHeight =_dbaa .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_caaa .StemV =_dbaa .Get ("\u0053\u0074\u0065m\u0056");_caaa .StemH =_dbaa .Get ("\u0053\u0074\u0065m\u0048");_caaa .AvgWidth =_dbaa .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_caaa .MaxWidth =_dbaa .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_caaa .MissingWidth =_dbaa .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_caaa .FontFile =_dbaa .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_caaa .FontFile2 =_dbaa .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_caaa .FontFile3 =_dbaa .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_caaa .CharSet =_dbaa .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_caaa .Style =_dbaa .Get ("\u0053\u0074\u0079l\u0065");_caaa .Lang =_dbaa .Get ("\u004c\u0061\u006e\u0067");
_caaa .FD =_dbaa .Get ("\u0046\u0044");_caaa .CIDSet =_dbaa .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _caaa .Flags !=nil {if _agafc ,_fega :=_cde .GetIntVal (_caaa .Flags );_fega {_caaa ._gdeacf =_agafc ;};};if _caaa .MissingWidth !=nil {if _bdgg ,_bcbb :=_cde .GetNumberAsFloat (_caaa .MissingWidth );
_bcbb ==nil {_caaa ._afadf =_bdgg ;};};if _caaa .FontFile !=nil {_bgea ,_aefe :=_fcad (_caaa .FontFile );if _aefe !=nil {return _caaa ,_aefe ;};_fb .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_bgea );_caaa .fontFile =_bgea ;
};if _caaa .FontFile2 !=nil {_fggdd ,_ccad :=_baf .NewFontFile2FromPdfObject (_caaa .FontFile2 );if _ccad !=nil {return _caaa ,_ccad ;};_fb .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_fggdd .String ());_caaa ._faacg =&_fggdd ;
};return _caaa ,nil ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _cde .PdfObject ;_abbg []byte ;_abeg *_cde .PdfIndirectObject ;};func (_bgab *pdfCIDFontType0 )baseFields ()*fontCommon {return &_bgab .fontCommon };

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_fceb *PdfPage )GetContainingPdfObject ()_cde .PdfObject {return _fceb ._aaad };

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_cfb :=&PdfAction {};_cfb ._dfb =_cde .MakeIndirectObject (_cde .MakeDict ());return _cfb ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_deed :=&PdfAnnotation {};_deed ._gfg =_cde .MakeIndirectObject (_cde .MakeDict ());return _deed ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _cde .PdfObject ;LE _cde .PdfObject ;BS _cde .PdfObject ;IC _cde .PdfObject ;BE _cde .PdfObject ;IT _cde .PdfObject ;Measure _cde .PdfObject ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_dbcce *PdfOutputIntent )GetContainingPdfObject ()_cde .PdfObject {return _dbcce ._aadgd };func _edgbae (_gbgcaa []*_cde .PdfObjectStream )*_cde .PdfObjectArray {if len (_gbgcaa )==0{return nil ;};_dffgc :=make ([]_cde .PdfObject ,0,len (_gbgcaa ));
for _ ,_bcbf :=range _gbgcaa {_dffgc =append (_dffgc ,_bcbf );};return _cde .MakeArray (_dffgc ...);};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_eedc *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_eedc .updateObjectsDeep (dss .ToPdfObject (),nil );};_eedc ._bdbg =dss ;};func (_feac *LTV )buildCertChain (_abdfg ,_aggf []*_ff .Certificate )([]*_ff .Certificate ,map[string ]*_ff .Certificate ,error ){_fabee :=map[string ]*_ff .Certificate {};
for _ ,_egfdb :=range _abdfg {_fabee [_egfdb .Subject .CommonName ]=_egfdb ;};_beabe :=_abdfg ;for _ ,_bacbcc :=range _aggf {_eageb :=_bacbcc .Subject .CommonName ;if _ ,_ddebe :=_fabee [_eageb ];_ddebe {continue ;};_fabee [_eageb ]=_bacbcc ;_beabe =append (_beabe ,_bacbcc );
};if len (_beabe )==0{return nil ,nil ,ErrSignNoCertificates ;};var _feebg error ;for _ggeac :=_beabe [0];_ggeac !=nil &&!_feac .CertClient .IsCA (_ggeac );{_bcdcg ,_cdcdd :=_fabee [_ggeac .Issuer .CommonName ];if !_cdcdd {if _bcdcg ,_feebg =_feac .CertClient .GetIssuer (_ggeac );
_feebg !=nil {_fb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_feebg );
break ;};_fabee [_ggeac .Issuer .CommonName ]=_bcdcg ;_beabe =append (_beabe ,_bcdcg );};_ggeac =_bcdcg ;};return _beabe ,_fabee ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gdcd *PdfActionSubmitForm )ToPdfObject ()_cde .PdfObject {_gdcd .PdfAction .ToPdfObject ();_afg :=_gdcd ._dfb ;_agf :=_afg .PdfObject .(*_cde .PdfObjectDictionary );_agf .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeSubmitForm )));if _gdcd .F !=nil {_agf .Set ("\u0046",_gdcd .F .ToPdfObject ());
};_agf .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_gdcd .Fields );_agf .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_gdcd .Flags );return _afg ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_bcefc *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_fefde :=_bcefc .fill (provider ,appGen );if _fefde !=nil {return _fefde ;};if _ ,_edadd :=provider .(FieldImageProvider );_edadd {_fefde =_bcefc .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _fefde ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_beb :=NewPdfAnnotation ();_dff :=&PdfAnnotationPopup {};_dff .PdfAnnotation =_beb ;_beb .SetContext (_dff );return _dff ;};func (_cgca *Image )getSuitableEncoder ()(_cde .StreamEncoder ,error ){var (_gcde ,_defec =int (_cgca .Width ),int (_cgca .Height );
_ccdgc =make (map[string ]bool );_dbgde =true ;_bdfa =false ;_dfdbc =func ()*_cde .DCTEncoder {return _cde .NewDCTEncoder ()};_agge =func ()*_cde .DCTEncoder {_agadg :=_cde .NewDCTEncoder ();_agadg .BitsPerComponent =16;return _agadg };);for _dcffe :=0;
_dcffe < _defec ;_dcffe ++{for _dcaag :=0;_dcaag < _gcde ;_dcaag ++{_cdfc ,_gbgdf :=_cgca .ColorAt (_dcaag ,_dcffe );if _gbgdf !=nil {return nil ,_gbgdf ;};_caeb ,_bfcfae ,_cdbfb ,_fgdac :=_cdfc .RGBA ();if _dbgde &&(_caeb !=_bfcfae ||_caeb !=_cdbfb ||_bfcfae !=_cdbfb ){_dbgde =false ;
};if !_bdfa {switch _cdfc .(type ){case _d .NRGBA :_bdfa =_fgdac > 0;};};_ccdgc [_a .Sprintf ("\u0025\u0064\u002c\u0025\u0064\u002c\u0025\u0064",_caeb ,_bfcfae ,_cdbfb )]=true ;if len (_ccdgc )> 2&&_bdfa {return _agge (),nil ;};};};if _bdfa ||len (_cgca ._cbcfe )> 0{return _cde .NewFlateEncoder (),nil ;
};if len (_ccdgc )<=2{_bddae :=_cgca .ConvertToBinary ();if _bddae !=nil {return nil ,_bddae ;};return _cde .NewJBIG2Encoder (),nil ;};if _dbgde {return _dfdbc (),nil ;};if _cgca .ColorComponents ==1{if _cgca .BitsPerComponent ==1{return _cde .NewJBIG2Encoder (),nil ;
}else if _cgca .BitsPerComponent ==8{_ebfbe :=_cde .NewDCTEncoder ();_ebfbe .ColorComponents =1;return _ebfbe ,nil ;};}else if _cgca .ColorComponents ==3{if _cgca .BitsPerComponent ==8{return _dfdbc (),nil ;}else if _cgca .BitsPerComponent ==16{return _agge (),nil ;
};}else if _cgca .ColorComponents ==4{_cbdbc :=_agge ();_cbdbc .ColorComponents =4;return _cbdbc ,nil ;};return _agge (),nil ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_cde .PdfObjectName ;P *_cde .PdfObjectInteger ;V *_cde .PdfObjectName ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_ggaeg *PdfReader )GetIndirectObjectByNumber (number int )(_cde .PdfObject ,error ){_abdafb ,_gecdbd :=_ggaeg ._fdccd .LookupByNumber (number );return _abdafb ,_gecdbd ;};

// ToPdfObject implements interface PdfModel.
func (_cga *PdfActionThread )ToPdfObject ()_cde .PdfObject {_cga .PdfAction .ToPdfObject ();_aac :=_cga ._dfb ;_ebg :=_aac .PdfObject .(*_cde .PdfObjectDictionary );_ebg .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeThread )));if _cga .F !=nil {_ebg .Set ("\u0046",_cga .F .ToPdfObject ());
};_ebg .SetIfNotNil ("\u0044",_cga .D );_ebg .SetIfNotNil ("\u0042",_cga .B );return _aac ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};func _abefd (_daefg string )map[string ]string {_gcfcff :=_afea .Split (_daefg ,-1);_bgggd :=map[string ]string {};for _ ,_eacf :=range _gcfcff {_fgbeg :=_abbaa .FindStringSubmatch (_eacf );
if _fgbeg ==nil {continue ;};_cffea ,_dfbd :=_fgbeg [1],_fgbeg [2];_bgggd [_cffea ]=_dfbd ;};return _bgggd ;};

// C returns the value of the cyan component of the color.
func (_fcdf *PdfColorDeviceCMYK )C ()float64 {return _fcdf [0]};

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_ffddd :=&PdfShadingPatternType3 {};_ffddd .Matrix =_cde .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_ffddd .PdfPattern =&PdfPattern {};_ffddd .PdfPattern .PatternType =int64 (*_cde .MakeInteger (2));
_ffddd .PdfPattern ._afcgc =_ffddd ;_ffddd .PdfPattern ._eebba =_cde .MakeIndirectObject (_cde .MakeDict ());return _ffddd ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _cde .PdfObject ;Movie _cde .PdfObject ;A _cde .PdfObject ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_aebb *PdfPage )GetPageDict ()*_cde .PdfObjectDictionary {_gaabe :=_aebb ._bgdbb ;_gaabe .Clear ();_gaabe .Set ("\u0054\u0079\u0070\u0065",_cde .MakeName ("\u0050\u0061\u0067\u0065"));_gaabe .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aebb .Parent );
if _aebb .LastModified !=nil {_gaabe .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_aebb .LastModified .ToPdfObject ());};if _aebb .Resources !=nil {_gaabe .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_aebb .Resources .ToPdfObject ());
};if _aebb .CropBox !=nil {_gaabe .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_aebb .CropBox .ToPdfObject ());};if _aebb .MediaBox !=nil {_gaabe .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_aebb .MediaBox .ToPdfObject ());};if _aebb .BleedBox !=nil {_gaabe .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_aebb .BleedBox .ToPdfObject ());
};if _aebb .TrimBox !=nil {_gaabe .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_aebb .TrimBox .ToPdfObject ());};if _aebb .ArtBox !=nil {_gaabe .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_aebb .ArtBox .ToPdfObject ());};_gaabe .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_aebb .BoxColorInfo );
_gaabe .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_aebb .Contents );if _aebb .Rotate !=nil {_gaabe .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_cde .MakeInteger (*_aebb .Rotate ));};_gaabe .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_aebb .Group );
_gaabe .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_aebb .Thumb );_gaabe .SetIfNotNil ("\u0042",_aebb .B );_gaabe .SetIfNotNil ("\u0044\u0075\u0072",_aebb .Dur );_gaabe .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_aebb .Trans );_gaabe .SetIfNotNil ("\u0041\u0041",_aebb .AA );
_gaabe .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_aebb .Metadata );_gaabe .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_aebb .PieceInfo );_gaabe .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_aebb .StructParents );
_gaabe .SetIfNotNil ("\u0049\u0044",_aebb .ID );_gaabe .SetIfNotNil ("\u0050\u005a",_aebb .PZ );_gaabe .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_aebb .SeparationInfo );_gaabe .SetIfNotNil ("\u0054\u0061\u0062\u0073",_aebb .Tabs );
_gaabe .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_aebb .TemplateInstantiated );_gaabe .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_aebb .PresSteps );_gaabe .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_aebb .UserUnit );
_gaabe .SetIfNotNil ("\u0056\u0050",_aebb .VP );if _aebb ._babf !=nil {_bgebc :=_cde .MakeArray ();for _ ,_gdcda :=range _aebb ._babf {if _eacfe :=_gdcda .GetContext ();_eacfe !=nil {_bgebc .Append (_eacfe .ToPdfObject ());}else {_bgebc .Append (_gdcda .ToPdfObject ());
};};if _bgebc .Len ()> 0{_gaabe .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_bgebc );};}else if _aebb .Annots !=nil {_gaabe .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_aebb .Annots );};return _gaabe ;};

// GetAttachedFiles retrieves all the attached files info and content.
func (_cagaf *PdfReader )GetAttachedFiles ()([]*EmbeddedFile ,error ){_dada ,_cecbg :=_cagaf .GetNameDictionary ();if _cecbg !=nil {return nil ,_cecbg ;};_aeece :=_fgfe (_dada );if _aeece .EmbeddedFiles ==nil {return nil ,nil ;};_aaaa :=_aeece .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");
_gfdfb ,_cacbg :=_aaaa .(*_cde .PdfObjectArray );if !_cacbg {return nil ,_gf .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_dfefd :=[]*EmbeddedFile {};for _bfgge :=1;_bfgge < len (_gfdfb .Elements ());
_bfgge +=2{if _bfgge %2!=0{_fdcedd :=_gfdfb .Get (_bfgge );_bbbeeb ,_ffca :=NewPdfFilespecFromObj (_fdcedd );if _ffca !=nil {return nil ,_ffca ;};_cedbf ,_ffca :=NewEmbeddedFileFromObject (_bbbeeb .EF );if _ffca !=nil {return nil ,_ffca ;};_gddga ,_bbfgc :=_bbbeeb .F .(*_cde .PdfObjectString );
if _bbfgc {_cedbf .Name =_gddga .Str ();};_cedbf .Description =_bbbeeb .Desc .WriteString ();switch _bbbeeb .AFRelationship .WriteString (){case "\u0053\u006f\u0075\u0072\u0063\u0065":_cedbf .Relationship =RelationshipSource ;case "\u0044\u0061\u0074\u0061":_cedbf .Relationship =RelationshipData ;
case "A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065":_cedbf .Relationship =RelationshipAlternative ;case "\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074":_cedbf .Relationship =RelationshipSupplement ;default:_cedbf .Relationship =RelationshipUnspecified ;
};_dfefd =append (_dfefd ,_cedbf );};};return _dfefd ,nil ;};func _bcef (_fgdgg _cde .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_fbcbd :=NewPdfColorspaceSpecialSeparation ();if _cccd ,_edggc :=_fgdgg .(*_cde .PdfIndirectObject );_edggc {_fbcbd ._eaefb =_cccd ;
};_fgdgg =_cde .TraceToDirectObject (_fgdgg );_fdce ,_cfee :=_fgdgg .(*_cde .PdfObjectArray );if !_cfee {return nil ,_a .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _fdce .Len ()!=4{return nil ,_a .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_fgdgg =_fdce .Get (0);
_fgfa ,_cfee :=_fgdgg .(*_cde .PdfObjectName );if !_cfee {return nil ,_a .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_fgfa !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_a .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_fgdgg =_fdce .Get (1);_fgfa ,_cfee =_fgdgg .(*_cde .PdfObjectName );if !_cfee {return nil ,_a .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_fbcbd .ColorantName =_fgfa ;_fgdgg =_fdce .Get (2);_gccf ,_egeaf :=NewPdfColorspaceFromPdfObject (_fgdgg );if _egeaf !=nil {return nil ,_egeaf ;};_fbcbd .AlternateSpace =_gccf ;_dcbd ,_egeaf :=_bedaa (_fdce .Get (3));if _egeaf !=nil {return nil ,_egeaf ;
};_fbcbd .TintTransform =_dcbd ;return _fbcbd ,nil ;};func _efdfb (_fdadg _cde .PdfObject ,_bbbac *PdfReader )(*OutlineDest ,error ){_aeaa ,_bddc :=_cde .GetArray (_fdadg );if !_bddc {return nil ,_gf .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_gafbc :=_aeaa .Len ();if _gafbc < 2{return nil ,_a .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_gafbc );
};_cgab :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_bfadb :=_aeaa .Get (0);if _ffaeg ,_gcged :=_cde .GetIndirect (_bfadb );_gcged {if _ ,_dcdc ,_cbdgg :=_bbbac .PageFromIndirectObject (_ffaeg );_cbdgg ==nil {_cgab .Page =int64 (_dcdc -1);}else {_fb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_ffaeg );
};_cgab .PageObj =_ffaeg ;}else if _fadac ,_cdddf :=_cde .GetIntVal (_bfadb );_cdddf {if _fadac >=0&&_fadac < len (_bbbac .PageList ){_cgab .PageObj =_bbbac .PageList [_fadac ].GetPageAsIndirectObject ();}else {_fb .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_fadac );
};_cgab .Page =int64 (_fadac );}else {return nil ,_a .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_bfadb );};_gfdc ,_bddc :=_cde .GetNameVal (_aeaa .Get (1));
if !_bddc {_fb .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_aeaa .Get (1));
return _cgab ,nil ;};switch _gfdc {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _gafbc > 2{_cgab .Y ,_ =_cde .GetNumberAsFloat (_cde .TraceToDirectObject (_aeaa .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _gafbc > 2{_cgab .X ,_ =_cde .GetNumberAsFloat (_cde .TraceToDirectObject (_aeaa .Get (2)));
};case "\u0058\u0059\u005a":if _gafbc > 4{_cgab .X ,_ =_cde .GetNumberAsFloat (_cde .TraceToDirectObject (_aeaa .Get (2)));_cgab .Y ,_ =_cde .GetNumberAsFloat (_cde .TraceToDirectObject (_aeaa .Get (3)));_cgab .Zoom ,_ =_cde .GetNumberAsFloat (_cde .TraceToDirectObject (_aeaa .Get (4)));
};default:_gfdc ="\u0046\u0069\u0074";};_cgab .Mode =_gfdc ;return _cgab ,nil ;};func _dgbdf (_fffa *_cde .PdfObjectDictionary )*VRI {_cdgc ,_ :=_cde .GetString (_fffa .Get ("\u0054\u0055"));_gbbg ,_ :=_cde .GetString (_fffa .Get ("\u0054\u0053"));return &VRI {Cert :_cffcc (_fffa .Get ("\u0043\u0065\u0072\u0074")),OCSP :_cffcc (_fffa .Get ("\u004f\u0043\u0053\u0050")),CRL :_cffcc (_fffa .Get ("\u0043\u0052\u004c")),TU :_cdgc ,TS :_gbbg };
};func _edff ()string {_ggdeb .Lock ();defer _ggdeb .Unlock ();return _feddg };func _cgeb (_baef _cde .PdfObject )(*PdfColorspaceCalGray ,error ){_cfac :=NewPdfColorspaceCalGray ();if _aeeg ,_cfbaf :=_baef .(*_cde .PdfIndirectObject );_cfbaf {_cfac ._ccgf =_aeeg ;
};_baef =_cde .TraceToDirectObject (_baef );_ceee ,_cdcgc :=_baef .(*_cde .PdfObjectArray );if !_cdcgc {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ceee .Len ()!=2{return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_baef =_cde .TraceToDirectObject (_ceee .Get (0));_cdcf ,_cdcgc :=_baef .(*_cde .PdfObjectName );if !_cdcgc {return nil ,_a .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_cdcf !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_a .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_baef =_cde .TraceToDirectObject (_ceee .Get (1));
_gggf ,_cdcgc :=_baef .(*_cde .PdfObjectDictionary );if !_cdcgc {return nil ,_a .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_baef =_gggf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_baef =_cde .TraceToDirectObject (_baef );_cdda ,_cdcgc :=_baef .(*_cde .PdfObjectArray );if !_cdcgc {return nil ,_a .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _cdda .Len ()!=3{return nil ,_a .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_cegb ,_dafb :=_cdda .GetAsFloat64Slice ();
if _dafb !=nil {return nil ,_dafb ;};_cfac .WhitePoint =_cegb ;_baef =_gggf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _baef !=nil {_baef =_cde .TraceToDirectObject (_baef );_dbcc ,_efaa :=_baef .(*_cde .PdfObjectArray );if !_efaa {return nil ,_a .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");
};if _dbcc .Len ()!=3{return nil ,_a .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_fcga ,_bccf :=_dbcc .GetAsFloat64Slice ();
if _bccf !=nil {return nil ,_bccf ;};_cfac .BlackPoint =_fcga ;};_baef =_gggf .Get ("\u0047\u0061\u006dm\u0061");if _baef !=nil {_baef =_cde .TraceToDirectObject (_baef );_adef ,_bebe :=_cde .GetNumberAsFloat (_baef );if _bebe !=nil {return nil ,_a .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");
};_cfac .Gamma =_adef ;};return _cfac ,nil ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_dbdf *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_dbdf .GetNumComponents (){return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccbe ,_cffc :=_dbdf .TintTransform .Evaluate (vals );
if _cffc !=nil {return nil ,_cffc ;};_agdg ,_cffc :=_dbdf .AlternateSpace .ColorFromFloats (_ccbe );if _cffc !=nil {return nil ,_cffc ;};return _agdg ,nil ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;var _afea =_cgg .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_adee :=NewPdfAnnotation ();_gfca :=&PdfAnnotationSquiggly {};_gfca .PdfAnnotation =_adee ;_gfca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_adee .SetContext (_gfca );return _gfca ;};func (_afgba *PdfSignature )extractChainFromPKCS7 ()([]*_ff .Certificate ,error ){_acbdf ,_acaag :=_bf .Parse (_afgba .Contents .Bytes ());
if _acaag !=nil {return nil ,_acaag ;};return _acbdf .Certificates ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bcaf *PdfAnnotationFileAttachment )ToPdfObject ()_cde .PdfObject {_bcaf .PdfAnnotation .ToPdfObject ();_dbfg :=_bcaf ._gfg ;_dfec :=_dbfg .PdfObject .(*_cde .PdfObjectDictionary );_bcaf .PdfAnnotationMarkup .appendToPdfDictionary (_dfec );_dfec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_dfec .SetIfNotNil ("\u0046\u0053",_bcaf .FS );_dfec .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bcaf .Name );return _dbfg ;};type modelManager struct{_fdaa map[PdfModel ]_cde .PdfObject ;_ffdgf map[_cde .PdfObject ]PdfModel ;};

// G returns the value of the green component of the color.
func (_dfcge *PdfColorDeviceRGB )G ()float64 {return _dfcge [1]};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_abaaba *XObjectForm )SetContentStream (content []byte ,encoder _cde .StreamEncoder )error {_dbfcf :=content ;if encoder ==nil {if _abaaba .Filter !=nil {encoder =_abaaba .Filter ;}else {encoder =_cde .NewRawEncoder ();};};_ceegdf ,_eedgd :=encoder .EncodeBytes (_dbfcf );
if _eedgd !=nil {return _eedgd ;};_dbfcf =_ceegdf ;_abaaba .Stream =_dbfcf ;_abaaba .Filter =encoder ;return nil ;};func (_dbag *PdfReader )newPdfAnnotation3DFromDict (_dabb *_cde .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_acf :=PdfAnnotation3D {};
_acf .T3DD =_dabb .Get ("\u0033\u0044\u0044");_acf .T3DV =_dabb .Get ("\u0033\u0044\u0056");_acf .T3DA =_dabb .Get ("\u0033\u0044\u0041");_acf .T3DI =_dabb .Get ("\u0033\u0044\u0049");_acf .T3DB =_dabb .Get ("\u0033\u0044\u0042");return &_acf ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gcab *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_fb .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_gf .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_bcdbg :=&PdfColorspaceDeviceN {};return _bcdbg ;};func (_aaeda *fontFile )loadFromSegments (_fcbgg ,_gbfa []byte )error {_fb .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_fcbgg ),len (_gbfa ));
_dgdbbc :=_aaeda .parseASCIIPart (_fcbgg );if _dgdbbc !=nil {return _dgdbbc ;};_fb .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_aaeda );if len (_gbfa )==0{return nil ;};_fb .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_aaeda );
return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfed *PdfAnnotationLink )ToPdfObject ()_cde .PdfObject {_dfed .PdfAnnotation .ToPdfObject ();_bgdc :=_dfed ._gfg ;_efg :=_bgdc .PdfObject .(*_cde .PdfObjectDictionary );_efg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u004c\u0069\u006e\u006b"));
if _dfed ._bgg !=nil &&_dfed ._bgg ._dfd !=nil {_efg .Set ("\u0041",_dfed ._bgg ._dfd .ToPdfObject ());}else if _dfed .A !=nil {_efg .Set ("\u0041",_dfed .A );};_efg .SetIfNotNil ("\u0044\u0065\u0073\u0074",_dfed .Dest );_efg .SetIfNotNil ("\u0048",_dfed .H );
_efg .SetIfNotNil ("\u0050\u0041",_dfed .PA );_efg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dfed .QuadPoints );_efg .SetIfNotNil ("\u0042\u0053",_dfed .BS );return _bgdc ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_ebfb *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ebfb .Base ==nil {return nil ,_gf .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _ebfb .Base .ColorToRGB (color );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_adbbb *PdfColorspaceDeviceRGB )ToPdfObject ()_cde .PdfObject {return _cde .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// ToPdfObject returns the PDF representation of the function.
func (_cbdgd *PdfFunctionType2 )ToPdfObject ()_cde .PdfObject {_ddffbb :=_cde .MakeDict ();_ddffbb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cde .MakeInteger (2));_dccaa :=&_cde .PdfObjectArray {};for _ ,_acfga :=range _cbdgd .Domain {_dccaa .Append (_cde .MakeFloat (_acfga ));
};_ddffbb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dccaa );if _cbdgd .Range !=nil {_afaca :=&_cde .PdfObjectArray {};for _ ,_bdfdc :=range _cbdgd .Range {_afaca .Append (_cde .MakeFloat (_bdfdc ));};_ddffbb .Set ("\u0052\u0061\u006eg\u0065",_afaca );
};if _cbdgd .C0 !=nil {_defeg :=&_cde .PdfObjectArray {};for _ ,_ccccd :=range _cbdgd .C0 {_defeg .Append (_cde .MakeFloat (_ccccd ));};_ddffbb .Set ("\u0043\u0030",_defeg );};if _cbdgd .C1 !=nil {_adcbcc :=&_cde .PdfObjectArray {};for _ ,_gabaf :=range _cbdgd .C1 {_adcbcc .Append (_cde .MakeFloat (_gabaf ));
};_ddffbb .Set ("\u0043\u0031",_adcbcc );};_ddffbb .Set ("\u004e",_cde .MakeFloat (_cbdgd .N ));if _cbdgd ._bcege !=nil {_cbdgd ._bcege .PdfObject =_ddffbb ;return _cbdgd ._bcege ;};return _ddffbb ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_ecgf *PdfReader )GetCatalogStructTreeRoot ()(_cde .PdfObject ,bool ){if _ecgf ._gaeed ==nil {return nil ,false ;};_dbacd :=_ecgf ._gaeed .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _dbacd ,_dbacd !=nil ;
};func _egfef (_fcac *_cde .PdfObjectDictionary ,_gbgda *fontCommon )(*pdfCIDFontType0 ,error ){if _gbgda ._cfgg !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_fb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_gbgda );
return nil ,_cde .ErrRangeError ;};_abcab :=_baedb (_gbgda );_gabce ,_cgeg :=_cde .GetDict (_fcac .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_cgeg {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gbgda );
return nil ,ErrRequiredAttributeMissing ;};_abcab .CIDSystemInfo =_gabce ;_abcab .DW =_fcac .Get ("\u0044\u0057");_abcab .W =_fcac .Get ("\u0057");_abcab .DW2 =_fcac .Get ("\u0044\u0057\u0032");_abcab .W2 =_fcac .Get ("\u0057\u0032");_abcab ._ebbff =1000.0;
if _geage ,_edbda :=_cde .GetNumberAsFloat (_abcab .DW );_edbda ==nil {_abcab ._ebbff =_geage ;};_adbce ,_fdeg :=_cccc (_abcab .W );if _fdeg !=nil {return nil ,_fdeg ;};if _adbce ==nil {_adbce =map[_fab .CharCode ]float64 {};};_abcab ._baff =_adbce ;return _abcab ,nil ;
};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_bbebf *PdfPageResources )AddExtGState (gsName _cde .PdfObjectName ,gsDict _cde .PdfObject )error {if _bbebf .ExtGState ==nil {_bbebf .ExtGState =_cde .MakeDict ();};_fagd :=_bbebf .ExtGState ;_adgd ,_fgbcc :=_cde .TraceToDirectObject (_fagd ).(*_cde .PdfObjectDictionary );
if !_fgbcc {_fb .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_fagd ,_cde .TraceToDirectObject (_fagd ));
return _cde .ErrTypeError ;};_adgd .Set (gsName ,gsDict );return nil ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_cde .PdfObjectStream )(*XObjectImage ,error ){_adbed :=&XObjectImage {};_adbed ._aaaag =stream ;_gbagg :=*(stream .PdfObjectDictionary );_fbdd ,_efcgba :=_cde .NewEncoderFromStream (stream );if _efcgba !=nil {return nil ,_efcgba ;
};_adbed .Filter =_fbdd ;if _gcedaa :=_cde .TraceToDirectObject (_gbagg .Get ("\u0057\u0069\u0064t\u0068"));_gcedaa !=nil {_bacdc ,_caccd :=_gcedaa .(*_cde .PdfObjectInteger );if !_caccd {return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_bcbc :=int64 (*_bacdc );_adbed .Width =&_bcbc ;}else {return nil ,_gf .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _cbeab :=_cde .TraceToDirectObject (_gbagg .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_cbeab !=nil {_gbgcc ,_cfcb :=_cbeab .(*_cde .PdfObjectInteger );if !_cfcb {return nil ,_gf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_fagaa :=int64 (*_gbgcc );
_adbed .Height =&_fagaa ;}else {return nil ,_gf .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _addcc :=_cde .TraceToDirectObject (_gbagg .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_addcc !=nil {_gdcbf ,_acdgf :=NewPdfColorspaceFromPdfObject (_addcc );if _acdgf !=nil {return nil ,_acdgf ;};_adbed .ColorSpace =_gdcbf ;}else {_fb .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_adbed .ColorSpace =NewPdfColorspaceDeviceGray ();};if _dfge :=_cde .TraceToDirectObject (_gbagg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_dfge !=nil {_adaeee ,_dedea :=_dfge .(*_cde .PdfObjectInteger );
if !_dedea {return nil ,_gf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_febeb :=int64 (*_adaeee );_adbed .BitsPerComponent =&_febeb ;};_adbed .Intent =_gbagg .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_adbed .ImageMask =_gbagg .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_adbed .Mask =_gbagg .Get ("\u004d\u0061\u0073\u006b");_adbed .Decode =_gbagg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_adbed .Interpolate =_gbagg .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_adbed .Alternatives =_gbagg .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_adbed .SMask =_gbagg .Get ("\u0053\u004d\u0061s\u006b");_adbed .SMaskInData =_gbagg .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_adbed .Matte =_gbagg .Get ("\u004d\u0061\u0074t\u0065");_adbed .Name =_gbagg .Get ("\u004e\u0061\u006d\u0065");_adbed .StructParent =_gbagg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_adbed .ID =_gbagg .Get ("\u0049\u0044");
_adbed .OPI =_gbagg .Get ("\u004f\u0050\u0049");_adbed .Metadata =_gbagg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_adbed .OC =_gbagg .Get ("\u004f\u0043");_adbed .Stream =stream .Stream ;return _adbed ,nil ;};func _decfdb ()_gdd .Time {_ggdeb .Lock ();
defer _ggdeb .Unlock ();return _bcbfb };func _edaeb (_cface _cde .PdfObject )(*PdfColorspaceDeviceN ,error ){_ebcf :=NewPdfColorspaceDeviceN ();if _fcecdc ,_acgg :=_cface .(*_cde .PdfIndirectObject );_acgg {_ebcf ._gbdd =_fcecdc ;};_cface =_cde .TraceToDirectObject (_cface );
_gbdgd ,_daccf :=_cface .(*_cde .PdfObjectArray );if !_daccf {return nil ,_a .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _gbdgd .Len ()!=4&&_gbdgd .Len ()!=5{return nil ,_a .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_cface =_gbdgd .Get (0);_baeea ,_daccf :=_cface .(*_cde .PdfObjectName );if !_daccf {return nil ,_a .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_baeea !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_a .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_cface =_gbdgd .Get (1);
_cface =_cde .TraceToDirectObject (_cface );_egac ,_daccf :=_cface .(*_cde .PdfObjectArray );if !_daccf {return nil ,_a .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_ebcf .ColorantNames =_egac ;_cface =_gbdgd .Get (2);_eagd ,_face :=NewPdfColorspaceFromPdfObject (_cface );if _face !=nil {return nil ,_face ;};_ebcf .AlternateSpace =_eagd ;_bffbb ,_face :=_bedaa (_gbdgd .Get (3));if _face !=nil {return nil ,_face ;
};_ebcf .TintTransform =_bffbb ;if _gbdgd .Len ()==5{_gceb ,_fffc :=_dgcff (_gbdgd .Get (4));if _fffc !=nil {return nil ,_fffc ;};_ebcf .Attributes =_gceb ;};return _ebcf ,nil ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;
);

// ToPdfObject convert PdfInfo to pdf object.
func (_egbb *PdfInfo )ToPdfObject ()_cde .PdfObject {_dacg :=_cde .MakeDict ();_dacg .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_egbb .Title );_dacg .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_egbb .Author );_dacg .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_egbb .Subject );
_dacg .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_egbb .Keywords );_dacg .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_egbb .Creator );_dacg .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_egbb .Producer );
_dacg .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_egbb .Trapped );if _egbb .CreationDate !=nil {_dacg .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_egbb .CreationDate .ToPdfObject ());};if _egbb .ModifiedDate !=nil {_dacg .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_egbb .ModifiedDate .ToPdfObject ());
};for _ ,_efegd :=range _egbb ._bdcd .Keys (){_dacg .SetIfNotNil (_efegd ,_egbb ._bdcd .Get (_efegd ));};return _dacg ;};func (_bbcfb *PdfReader )newPdfSignatureFromIndirect (_affec *_cde .PdfIndirectObject )(*PdfSignature ,error ){_fbbgf ,_abaee :=_affec .PdfObject .(*_cde .PdfObjectDictionary );
if !_abaee {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _ccaeb ,_cafcb :=_bbcfb ._bgffc .GetModelFromPrimitive (_affec ).(*PdfSignature );_cafcb {return _ccaeb ,nil ;};_eedde :=&PdfSignature {};_eedde ._gfbaeg =_affec ;_eedde .Type ,_ =_cde .GetName (_fbbgf .Get ("\u0054\u0079\u0070\u0065"));
_eedde .Filter ,_abaee =_cde .GetName (_fbbgf .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_abaee {_fb .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_eedde .SubFilter ,_ =_cde .GetName (_fbbgf .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_eedde .Contents ,_abaee =_cde .GetString (_fbbgf .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_abaee {_fb .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _gfaec ,_dfee :=_cde .GetArray (_fbbgf .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_dfee {_eedde .Reference =_cde .MakeArray ();for _ ,_fdacdb :=range _gfaec .Elements (){_cccgd ,_bbcde :=_cde .GetDict (_fdacdb );
if !_bbcde {_fb .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_fcada ,_fgcdb :=_bbcfb .newPdfSignatureReferenceFromDict (_cccgd );if _fgcdb !=nil {return nil ,_fgcdb ;};_eedde .Reference .Append (_fcada .ToPdfObject ());};};_eedde .Cert =_fbbgf .Get ("\u0043\u0065\u0072\u0074");_eedde .ByteRange ,_ =_cde .GetArray (_fbbgf .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_eedde .Changes ,_ =_cde .GetArray (_fbbgf .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_eedde .Name ,_ =_cde .GetString (_fbbgf .Get ("\u004e\u0061\u006d\u0065"));_eedde .M ,_ =_cde .GetString (_fbbgf .Get ("\u004d"));_eedde .Location ,_ =_cde .GetString (_fbbgf .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_eedde .Reason ,_ =_cde .GetString (_fbbgf .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_eedde .ContactInfo ,_ =_cde .GetString (_fbbgf .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_eedde .R ,_ =_cde .GetInt (_fbbgf .Get ("\u0052"));
_eedde .V ,_ =_cde .GetInt (_fbbgf .Get ("\u0056"));_eedde .PropBuild ,_ =_cde .GetDict (_fbbgf .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_eedde .PropAuthTime ,_ =_cde .GetInt (_fbbgf .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_eedde .PropAuthType ,_ =_cde .GetName (_fbbgf .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_bbcfb ._bgffc .Register (_affec ,_eedde );return _eedde ,nil ;};func _fcad (_bdacg _cde .PdfObject )(*fontFile ,error ){_fb .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_bdacg );
_cegde :=&fontFile {};_bdacg =_cde .TraceToDirectObject (_bdacg );_bbbc ,_badad :=_bdacg .(*_cde .PdfObjectStream );if !_badad {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_bdacg );
return nil ,_cde .ErrTypeError ;};_cdgeb :=_bbbc .PdfObjectDictionary ;_efgaa ,_ddfgeb :=_cde .DecodeStream (_bbbc );if _ddfgeb !=nil {return nil ,_ddfgeb ;};_cgac ,_badad :=_cde .GetNameVal (_cdgeb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_badad {_cegde ._cdaag =_cgac ;
if _cgac =="\u0054\u0079\u0070\u0065\u0031\u0043"{_fb .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_fadf ,_ :=_cde .GetIntVal (_cdgeb .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_deedd ,_ :=_cde .GetIntVal (_cdgeb .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _fadf > len (_efgaa ){_fadf =len (_efgaa );
};if _fadf +_deedd > len (_efgaa ){_deedd =len (_efgaa )-_fadf ;};_aadfe :=_efgaa [:_fadf ];var _gdcdb []byte ;if _deedd > 0{_gdcdb =_efgaa [_fadf :_fadf +_deedd ];};if _fadf > 0&&_deedd > 0{_cbbga :=_cegde .loadFromSegments (_aadfe ,_gdcdb );if _cbbga !=nil {return nil ,_cbbga ;
};};return _cegde ,nil ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _cde .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {var _cfbga error ;encoder ,_cfbga =img .getSuitableEncoder ();if _cfbga !=nil {_fb .Log .Debug ("F\u0061\u0069l\u0075\u0072\u0065\u0020\u006f\u006e\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0069\u0074\u0061b\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072,\u0020\u0066\u0061\u006c\u006c\u0062\u0061\u0063\u006b\u0020\u0074\u006f\u0020R\u0061\u0077\u0045\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_cfbga );
encoder =_cde .NewRawEncoder ();};};encoder .UpdateParams (img .GetParamsDict ());_fbbaa ,_cfaff :=encoder .EncodeBytes (img .Data );if _cfaff !=nil {_fb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_cfaff );
return nil ,_cfaff ;};_efad :=NewXObjectImage ();_dgfbb :=img .Width ;_dccab :=img .Height ;_efad .Width =&_dgfbb ;_efad .Height =&_dccab ;_bfecc :=img .BitsPerComponent ;_efad .BitsPerComponent =&_bfecc ;_efad .Filter =encoder ;_efad .Stream =_fbbaa ;
if cs ==nil {if img .ColorComponents ==1{_efad .ColorSpace =NewPdfColorspaceDeviceGray ();if img .BitsPerComponent ==16{switch encoder .(type ){case *_cde .DCTEncoder :_efad .ColorSpace =NewPdfColorspaceDeviceRGB ();_bfecc =8;_efad .BitsPerComponent =&_bfecc ;
};};}else if img .ColorComponents ==3{_efad .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{switch encoder .(type ){case *_cde .DCTEncoder :_efad .ColorSpace =NewPdfColorspaceDeviceRGB ();default:_efad .ColorSpace =NewPdfColorspaceDeviceCMYK ();
};}else {return nil ,_gf .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_efad .ColorSpace =cs ;};if len (img ._cbcfe )!=0{_ecdaab :=NewXObjectImage ();_ecdaab .Filter =encoder ;_dfcef ,_fffcd :=encoder .EncodeBytes (img ._cbcfe );
if _fffcd !=nil {_fb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_fffcd );return nil ,_fffcd ;};_ecdaab .Stream =_dfcef ;_ecdaab .BitsPerComponent =_efad .BitsPerComponent ;
_ecdaab .Width =&img .Width ;_ecdaab .Height =&img .Height ;_ecdaab .ColorSpace =NewPdfColorspaceDeviceGray ();_efad .SMask =_ecdaab .ToPdfObject ();}else {_efad .SMask =xobjIn .SMask ;_efad .ImageMask =xobjIn .ImageMask ;if _efad .ColorSpace .GetNumComponents ()==1{_eaccc (_efad );
};};return _efad ,nil ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_aeceda *XObjectImage )SetFilter (encoder _cde .StreamEncoder )error {_cbcbf :=_aeceda .Stream ;_bbfdd ,_aaaeg :=_aeceda .Filter .DecodeBytes (_cbcbf );if _aaaeg !=nil {return _aaaeg ;};_aeceda .Filter =encoder ;encoder .UpdateParams (_aeceda .getParamsDict ());
_cbcbf ,_aaaeg =encoder .EncodeBytes (_bbfdd );if _aaaeg !=nil {return _aaaeg ;};_aeceda .Stream =_cbcbf ;return nil ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_fba :=NewPdfAction ();_ag :=&PdfActionGoTo {};_ag .PdfAction =_fba ;_fba .SetContext (_ag );return _ag ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// Y returns the value of the yellow component of the color.
func (_cbgc *PdfColorDeviceCMYK )Y ()float64 {return _cbgc [2]};func _bedaa (_dgacd _cde .PdfObject )(PdfFunction ,error ){_dgacd =_cde .ResolveReference (_dgacd );if _deega ,_ceagd :=_dgacd .(*_cde .PdfObjectStream );_ceagd {_gege :=_deega .PdfObjectDictionary ;
_bcaee ,_dbcfg :=_gege .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cde .PdfObjectInteger );if !_dbcfg {_fb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_gf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bcaee ==0{return _cfcga (_deega );}else if *_bcaee ==4{return _fcgf (_deega );
}else {return nil ,_gf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _becacg ,_fcfce :=_dgacd .(*_cde .PdfIndirectObject );_fcfce {_fffaf ,_cdbeg :=_becacg .PdfObject .(*_cde .PdfObjectDictionary );
if !_cdbeg {_fb .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_gf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_abbaf ,_cdbeg :=_fffaf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cde .PdfObjectInteger );
if !_cdbeg {_fb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_gf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_abbaf ==2{return _cebbc (_becacg );}else if *_abbaf ==3{return _dbfbc (_becacg );}else {return nil ,_gf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _dgbea ,_fbbcg :=_dgacd .(*_cde .PdfObjectDictionary );
_fbbcg {_fcgc ,_cfcee :=_dgbea .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cde .PdfObjectInteger );if !_cfcee {_fb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_gf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_fcgc ==2{return _cebbc (_dgbea );}else if *_fcgc ==3{return _dbfbc (_dgbea );
}else {return nil ,_gf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_fb .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_dgacd );
return nil ,_gf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_fgbf *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcbc :=vals [0];_aedde :=[]float64 {_dcbc };_deabe ,_feba :=_fgbf .TintTransform .Evaluate (_aedde );
if _feba !=nil {_fb .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_feba );_fb .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_fgbf .TintTransform );
return nil ,_feba ;};_fb .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_deabe ,_fgbf .AlternateSpace );
_eeca ,_feba :=_fgbf .AlternateSpace .ColorFromFloats (_deabe );if _feba !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_feba );
return nil ,_feba ;};return _eeca ,nil ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_dedc *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_aeea :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_aeea ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_gc :=NewPdfAction ();_gg :=&PdfActionGoToR {};_gg .PdfAction =_gc ;_gc .SetContext (_gg );return _gg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_febe *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfef :=vals [0];if _gfef < 0.0||_gfef > 1.0{_fb .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _gfef < 0.0{_gfef =0.0;}else if _gfef > 1.0{_gfef =1.0;};return NewPdfColorDeviceGray (_gfef ),nil ;};func (_ebeb *PdfReader )newPdfAnnotationMarkupFromDict (_faae *_cde .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_cabg :=&PdfAnnotationMarkup {};
if _bcb :=_faae .Get ("\u0054");_bcb !=nil {_cabg .T =_bcb ;};if _ceba :=_faae .Get ("\u0050\u006f\u0070u\u0070");_ceba !=nil {_gcfc ,_abba :=_ceba .(*_cde .PdfIndirectObject );if !_abba {if _ ,_egbe :=_ceba .(*_cde .PdfObjectNull );!_egbe {return nil ,_gf .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_gefa ,_cdb :=_ebeb .newPdfAnnotationFromIndirectObject (_gcfc );if _cdb !=nil {return nil ,_cdb ;};if _gefa !=nil {_ddgcb ,_dec :=_gefa ._ccfd .(*PdfAnnotationPopup );if !_dec {return nil ,_gf .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_cabg .Popup =_ddgcb ;};};};if _eebc :=_faae .Get ("\u0043\u0041");_eebc !=nil {_cabg .CA =_eebc ;};if _gbde :=_faae .Get ("\u0052\u0043");_gbde !=nil {_cabg .RC =_gbde ;};if _cbd :=_faae .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_cbd !=nil {_cabg .CreationDate =_cbd ;};if _bggc :=_faae .Get ("\u0049\u0052\u0054");_bggc !=nil {_cabg .IRT =_bggc ;};if _gefb :=_faae .Get ("\u0053\u0075\u0062\u006a");_gefb !=nil {_cabg .Subj =_gefb ;};if _fdecc :=_faae .Get ("\u0052\u0054");_fdecc !=nil {_cabg .RT =_fdecc ;
};if _gdgf :=_faae .Get ("\u0049\u0054");_gdgf !=nil {_cabg .IT =_gdgf ;};if _affa :=_faae .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_affa !=nil {_cabg .ExData =_affa ;};return _cabg ,nil ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_dafg *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_ccaee ,_ ,_ecccd :=_dafg .CharcodesToUnicodeWithStats (_dafg .BytesToCharcodes (data ));_gcgcd :=_fab .ExpandLigatures (_ccaee );return _gcgcd ,_aa .RuneCountInString (_gcgcd ),_ecccd ;
};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_fafb *PdfPage )ToPdfObject ()_cde .PdfObject {_bcdab :=_fafb ._aaad ;_fafb .GetPageDict ();return _bcdab ;};func (_dgeda *fontFile )parseASCIIPart (_gdge []byte )error {if len (_gdge )< 2||string (_gdge [:2])!="\u0025\u0021"{return _gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_ccfbd ,_cfcef ,_bceg :=_eaafd (_gdge );if _bceg !=nil {return _bceg ;};_gafbbc :=_abefd (_ccfbd );_dgeda ._befd =_gafbbc ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _dgeda ._befd ==""{_fb .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _cfcef !=""{_fefcc ,_gagcea :=_bbaeg (_cfcef );if _gagcea !=nil {return _gagcea ;};_befda ,_gagcea :=_fab .NewCustomSimpleTextEncoder (_fefcc ,nil );if _gagcea !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_gagcea );
return nil ;};_dgeda ._eace =_befda ;};return nil ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_bebb *PdfReader )GetPageLabels ()(_cde .PdfObject ,error ){_cdfec :=_cde .ResolveReference (_bebb ._gaeed .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _cdfec ==nil {return nil ,nil ;};if !_bebb ._gbeac {_dbdgb :=_bebb .traverseObjectData (_cdfec );
if _dbdgb !=nil {return nil ,_dbdgb ;};};return _cdfec ,nil ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//
//	// Convert RGB image to grayscale.
//	rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//	grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//	if err != nil {
//	  return err
//	}
//	// Resample as 1 bit.
//	grayImage.Resample(1)
func (_edcd *Image )Resample (targetBitsPerComponent int64 ){if _edcd .BitsPerComponent ==targetBitsPerComponent {return ;};_ddabb :=_edcd .GetSamples ();if targetBitsPerComponent < _edcd .BitsPerComponent {_fabec :=_edcd .BitsPerComponent -targetBitsPerComponent ;
for _caff :=range _ddabb {_ddabb [_caff ]>>=uint (_fabec );};}else if targetBitsPerComponent > _edcd .BitsPerComponent {_cfcd :=targetBitsPerComponent -_edcd .BitsPerComponent ;for _fbfe :=range _ddabb {_ddabb [_fbfe ]<<=uint (_cfcd );};};_edcd .BitsPerComponent =targetBitsPerComponent ;
if _edcd .BitsPerComponent < 8{_edcd .resampleLowBits (_ddabb );return ;};_befa :=_bbb .BytesPerLine (int (_edcd .Width ),int (_edcd .BitsPerComponent ),_edcd .ColorComponents );_caca :=make ([]byte ,_befa *int (_edcd .Height ));var (_acdc ,_dgabf ,_bdfdca ,_cdfef int ;
_cbgcc uint32 ;);for _bdfdca =0;_bdfdca < int (_edcd .Height );_bdfdca ++{_acdc =_bdfdca *_befa ;_dgabf =(_bdfdca +1)*_befa -1;_agafd :=_afa .ResampleUint32 (_ddabb [_acdc :_dgabf ],int (targetBitsPerComponent ),8);for _cdfef ,_cbgcc =range _agafd {_caca [_cdfef +_acdc ]=byte (_cbgcc );
};};_edcd .Data =_caca ;};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_cfegaa *PdfPageResources )HasPatternByName (keyName _cde .PdfObjectName )bool {_ ,_fcacb :=_cfegaa .GetPatternByName (keyName );return _fcacb ;};func (_afebf *PdfWriter )optimize ()error {if _afebf ._fegcee ==nil {return nil ;};var _egcgg error ;
_afebf ._abbc ,_egcgg =_afebf ._fegcee .Optimize (_afebf ._abbc );if _egcgg !=nil {return _egcgg ;};_dgec :=make (map[_cde .PdfObject ]struct{},len (_afebf ._abbc ));for _ ,_efcgg :=range _afebf ._abbc {_dgec [_efcgg ]=struct{}{};};_afebf ._fdeab =_dgec ;
return nil ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_ggdeb .Lock ();defer _ggdeb .Unlock ();_cacaae =subject };func _eeef (_afgbe _baf .StdFont )pdfFontSimple {_eede :=_afgbe .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_cfgg :"\u0054\u0079\u0070e\u0031",_bbdf :_afgbe .Name ()},_cgagf :_afgbe .GetMetricsTable (),_cefg :&PdfFontDescriptor {FontName :_cde .MakeName (string (_eede .Name )),FontFamily :_cde .MakeName (_eede .Family ),FontWeight :_cde .MakeFloat (float64 (_eede .Weight )),Flags :_cde .MakeInteger (int64 (_eede .Flags )),FontBBox :_cde .MakeArrayFromFloats (_eede .BBox [:]),ItalicAngle :_cde .MakeFloat (_eede .ItalicAngle ),Ascent :_cde .MakeFloat (_eede .Ascent ),Descent :_cde .MakeFloat (_eede .Descent ),CapHeight :_cde .MakeFloat (_eede .CapHeight ),XHeight :_cde .MakeFloat (_eede .XHeight ),StemV :_cde .MakeFloat (_eede .StemV ),StemH :_cde .MakeFloat (_eede .StemH )},_fegde :_afgbe .Encoder ()};
};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_cde .PdfObjectDictionary )(*PdfPageResources ,error ){_bagbb :=NewPdfPageResources ();if _cgdcf :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cgdcf !=nil {_bagbb .ExtGState =_cgdcf ;};if _cecff :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_cecff !=nil &&!_cde .IsNullObject (_cecff ){_bagbb .ColorSpace =_cecff ;};if _acbfba :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_acbfba !=nil {_bagbb .Pattern =_acbfba ;};if _fegg :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_fegg !=nil {_bagbb .Shading =_fegg ;
};if _dcae :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_dcae !=nil {_bagbb .XObject =_dcae ;};if _dbagce :=_cde .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_dbagce !=nil {_bagbb .Font =_dbagce ;};if _geebc :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_geebc !=nil {_bagbb .ProcSet =_geebc ;};if _ddeea :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_ddeea !=nil {_bagbb .Properties =_ddeea ;};return _bagbb ,nil ;};func (_gccb *PdfReader )newPdfActionSetOCGStateFromDict (_gbge *_cde .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_gbge .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_gbge .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_eegb *PdfReader )Decrypt (password []byte )(bool ,error ){_dfbcc ,_dgcdb :=_eegb ._fdccd .Decrypt (password );if _dgcdb !=nil {return false ,_dgcdb ;};if !_dfbcc {return false ,nil ;};_dgcdb =_eegb .loadStructure ();if _dgcdb !=nil {_fb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_dgcdb );
return false ,_dgcdb ;};return true ,nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_cggf :=NewPdfAction ();_cee :=&PdfActionSubmitForm {};_cee .PdfAction =_cggf ;_cggf .SetContext (_cee );return _cee ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_gefbb []_cde .PdfObject )([]_cde .PdfObject ,error );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_efefd pdfFontType0 )GetCharMetrics (code _fab .CharCode )(_baf .CharMetrics ,bool ){if _efefd .DescendantFont ==nil {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_efefd );
return _baf .CharMetrics {},false ;};return _efefd .DescendantFont .GetCharMetrics (code );};

// GenerateHashMaps generates DSS hashmaps for Certificates, OCSPs and CRLs to make sure they are unique.
func (_aafd *DSS )GenerateHashMaps ()error {_bcda ,_gfgf :=_aafd .generateHashMap (_aafd .Certs );if _gfgf !=nil {return _gfgf ;};_efgbd ,_gfgf :=_aafd .generateHashMap (_aafd .OCSPs );if _gfgf !=nil {return _gfgf ;};_ccbdc ,_gfgf :=_aafd .generateHashMap (_aafd .CRLs );
if _gfgf !=nil {return _gfgf ;};_aafd ._fdcd =_bcda ;_aafd ._ddff =_efgbd ;_aafd ._bcfgd =_ccbdc ;return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ddgbb *PdfSignatureReference )GetContainingPdfObject ()_cde .PdfObject {return _ddgbb ._efgfaa };

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_bedd *PdfWriter )SetNameDictionary (names _cde .PdfObject )error {if names ==nil {return nil ;};_bedd ._fafec =_fgfe (names );_fb .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_bedd ._aaeef .Set ("\u004e\u0061\u006de\u0073",names );return _bedd .addObjects (names );};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_bafg :=NewPdfAction ();_ddg :=&PdfActionNamed {};_ddg .PdfAction =_bafg ;_bafg .SetContext (_ddg );return _ddg ;};func (_eccfg *PdfWriter )mapObjectStreams (_fcbed bool )(map[_cde .PdfObject ]bool ,bool ){_dbddf :=make (map[_cde .PdfObject ]bool );
for _ ,_gdfdc :=range _eccfg ._abbc {if _ffadee ,_efgaca :=_gdfdc .(*_cde .PdfObjectStreams );_efgaca {_fcbed =true ;for _ ,_adcdcc :=range _ffadee .Elements (){_dbddf [_adcdcc ]=true ;if _feacb ,_gcgb :=_adcdcc .(*_cde .PdfIndirectObject );_gcgb {_dbddf [_feacb .PdfObject ]=true ;
};};};};return _dbddf ,_fcbed ;};

// ToPdfObject implements interface PdfModel.
func (_cbf *PdfActionGoTo3DView )ToPdfObject ()_cde .PdfObject {_cbf .PdfAction .ToPdfObject ();_bbg :=_cbf ._dfb ;_ecb :=_bbg .PdfObject .(*_cde .PdfObjectDictionary );_ecb .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeGoTo3DView )));_ecb .SetIfNotNil ("\u0054\u0041",_cbf .TA );
_ecb .SetIfNotNil ("\u0056",_cbf .V );return _bbg ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_baed *PdfField )GetContext ()PdfModel {return _baed ._cdfff };

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_ccdg *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ccdg .AlternateSpace ==nil {return nil ,_gf .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _ccdg .AlternateSpace .ColorToRGB (color );};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _cde .PdfObjectArray )(*PdfRectangle ,error ){_ddaee :=PdfRectangle {};if arr .Len ()!=4{return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _gfdca error ;_ddaee .Llx ,_gfdca =_cde .GetNumberAsFloat (arr .Get (0));if _gfdca !=nil {return nil ,_gfdca ;};_ddaee .Lly ,_gfdca =_cde .GetNumberAsFloat (arr .Get (1));if _gfdca !=nil {return nil ,_gfdca ;};_ddaee .Urx ,_gfdca =_cde .GetNumberAsFloat (arr .Get (2));
if _gfdca !=nil {return nil ,_gfdca ;};_ddaee .Ury ,_gfdca =_cde .GetNumberAsFloat (arr .Get (3));if _gfdca !=nil {return nil ,_gfdca ;};return &_ddaee ,nil ;};func _edeeaa (_cbeea _cde .PdfObject )(string ,error ){_cbeea =_cde .TraceToDirectObject (_cbeea );
switch _ddbba :=_cbeea .(type ){case *_cde .PdfObjectString :return _ddbba .Str (),nil ;case *_cde .PdfObjectStream :_ecfac ,_bdbae :=_cde .DecodeStream (_ddbba );if _bdbae !=nil {return "",_bdbae ;};return string (_ecfac ),nil ;};return "",_a .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_cbeea );
};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;func (_deaea *PdfReader )newPdfAnnotationScreenFromDict (_cdcgb *_cde .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_dfcd :=PdfAnnotationScreen {};_dfcd .T =_cdcgb .Get ("\u0054");_dfcd .MK =_cdcgb .Get ("\u004d\u004b");
_dfcd .A =_cdcgb .Get ("\u0041");_dfcd .AA =_cdcgb .Get ("\u0041\u0041");return &_dfcd ,nil ;};var (CourierName =_baf .CourierName ;CourierBoldName =_baf .CourierBoldName ;CourierObliqueName =_baf .CourierObliqueName ;CourierBoldObliqueName =_baf .CourierBoldObliqueName ;
HelveticaName =_baf .HelveticaName ;HelveticaBoldName =_baf .HelveticaBoldName ;HelveticaObliqueName =_baf .HelveticaObliqueName ;HelveticaBoldObliqueName =_baf .HelveticaBoldObliqueName ;SymbolName =_baf .SymbolName ;ZapfDingbatsName =_baf .ZapfDingbatsName ;
TimesRomanName =_baf .TimesRomanName ;TimesBoldName =_baf .TimesBoldName ;TimesItalicName =_baf .TimesItalicName ;TimesBoldItalicName =_baf .TimesBoldItalicName ;);

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _cde .StreamEncoder ;Intent _cde .PdfObject ;ImageMask _cde .PdfObject ;Mask _cde .PdfObject ;Matte _cde .PdfObject ;Decode _cde .PdfObject ;Interpolate _cde .PdfObject ;
Alternatives _cde .PdfObject ;SMask _cde .PdfObject ;SMaskInData _cde .PdfObject ;Name _cde .PdfObject ;StructParent _cde .PdfObject ;ID _cde .PdfObject ;OPI _cde .PdfObject ;Metadata _cde .PdfObject ;OC _cde .PdfObject ;Stream []byte ;_aaaag *_cde .PdfObjectStream ;
};func (_ggff *PdfReader )newPdfAnnotationFreeTextFromDict (_fdfg *_cde .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_afbg :=PdfAnnotationFreeText {};_ffgg ,_gcda :=_ggff .newPdfAnnotationMarkupFromDict (_fdfg );if _gcda !=nil {return nil ,_gcda ;
};_afbg .PdfAnnotationMarkup =_ffgg ;_afbg .DA =_fdfg .Get ("\u0044\u0041");_afbg .Q =_fdfg .Get ("\u0051");_afbg .RC =_fdfg .Get ("\u0052\u0043");_afbg .DS =_fdfg .Get ("\u0044\u0053");_afbg .CL =_fdfg .Get ("\u0043\u004c");_afbg .IT =_fdfg .Get ("\u0049\u0054");
_afbg .BE =_fdfg .Get ("\u0042\u0045");_afbg .RD =_fdfg .Get ("\u0052\u0044");_afbg .BS =_fdfg .Get ("\u0042\u0053");_afbg .LE =_fdfg .Get ("\u004c\u0045");return &_afbg ,nil ;};func (_aabg *PdfReader )newPdfAnnotationRichMediaFromDict (_aegf *_cde .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_dfbg :=&PdfAnnotationRichMedia {};
_dfbg .RichMediaSettings =_aegf .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_dfbg .RichMediaContent =_aegf .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _dfbg ,nil ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_edaaa *PdfReader )GetNamedDestinations ()(_cde .PdfObject ,error ){_begf :=_cde .ResolveReference (_edaaa ._gaeed .Get ("\u0044\u0065\u0073t\u0073"));if _begf ==nil {return nil ,nil ;};if !_edaaa ._gbeac {_eaaca :=_edaaa .traverseObjectData (_begf );
if _eaaca !=nil {return nil ,_eaaca ;};};return _begf ,nil ;};func (_efdfa *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _efdfa ._fdccd .GetCrypter ()!=nil &&!_efdfa ._fdccd .IsAuthenticated (){return nil ,_a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_adaff :=_efdfa ._gaeed ;_fggcf :=_adaff .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _fggcf ==nil {return nil ,nil ;};_fb .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_gedca :=_cde .ResolveReference (_fggcf );
_fb .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_gedca );if _defbe :=_cde .IsNullObject (_gedca );_defbe {_fb .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_ffcec ,_cebfd :=_gedca .(*_cde .PdfIndirectObject );if !_cebfd {if _ ,_fdbf :=_cde .GetDict (_gedca );!_fdbf {_fb .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_fb .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_ffcec =_cde .MakeIndirectObject (_gedca );};_ceccg ,_cebfd :=_ffcec .PdfObject .(*_cde .PdfObjectDictionary );if !_cebfd {return nil ,_gf .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_fb .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_ceccg );_cdgadf ,_ ,_acfgab :=_efdfa .buildOutlineTree (_ffcec ,nil ,nil ,nil );if _acfgab !=nil {return nil ,_acfgab ;};_fb .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_cdgadf );
return _cdgadf ,nil ;};func (_gagaf *pdfCIDFontType2 )baseFields ()*fontCommon {return &_gagaf .fontCommon };

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_edgb *PdfPageResources )GetContainingPdfObject ()_cde .PdfObject {return _edgb ._gcaaf };func (_adaf *PdfFunctionType0 )processSamples ()error {_fddgc :=_afa .ResampleBytes (_adaf ._cgebc ,_adaf .BitsPerSample );_adaf ._dcacd =_fddgc ;return nil ;
};

// ToPdfObject returns a stream object.
func (_bcbgb *XObjectForm )ToPdfObject ()_cde .PdfObject {_bccfb :=_bcbgb ._fbeeg ;_afcce :=_bccfb .PdfObjectDictionary ;if _bcbgb .Filter !=nil {_afcce =_bcbgb .Filter .MakeStreamDict ();_bccfb .PdfObjectDictionary =_afcce ;};_afcce .Set ("\u0054\u0079\u0070\u0065",_cde .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_afcce .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0046\u006f\u0072\u006d"));_afcce .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_bcbgb .FormType );_afcce .SetIfNotNil ("\u0042\u0042\u006f\u0078",_bcbgb .BBox );
_afcce .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_bcbgb .Matrix );if _bcbgb .Resources !=nil {_afcce .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bcbgb .Resources .ToPdfObject ());};_afcce .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_bcbgb .Group );
_afcce .SetIfNotNil ("\u0052\u0065\u0066",_bcbgb .Ref );_afcce .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_bcbgb .MetaData );_afcce .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_bcbgb .PieceInfo );_afcce .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_bcbgb .LastModified );
_afcce .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bcbgb .StructParent );_afcce .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_bcbgb .StructParents );_afcce .SetIfNotNil ("\u004f\u0050\u0049",_bcbgb .OPI );
_afcce .SetIfNotNil ("\u004f\u0043",_bcbgb .OC );_afcce .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bcbgb .Name );_afcce .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cde .MakeInteger (int64 (len (_bcbgb .Stream ))));_bccfb .Stream =_bcbgb .Stream ;return _bccfb ;
};func (_dgedg *DSS )add (_gba *[]*_cde .PdfObjectStream ,_fcddd map[string ]*_cde .PdfObjectStream ,_cebfa [][]byte )([]*_cde .PdfObjectStream ,error ){_ccabb :=make ([]*_cde .PdfObjectStream ,0,len (_cebfa ));for _ ,_bfee :=range _cebfa {_eefb ,_ebbe :=_efdfg (_bfee );
if _ebbe !=nil {return nil ,_ebbe ;};_aefc ,_cbac :=_fcddd [string (_eefb )];if !_cbac {_aefc ,_ebbe =_cde .MakeStream (_bfee ,_cde .NewRawEncoder ());if _ebbe !=nil {return nil ,_ebbe ;};_fcddd [string (_eefb )]=_aefc ;*_gba =append (*_gba ,_aefc );};
_ccabb =append (_ccabb ,_aefc );};return _ccabb ,nil ;};func _bfc (_aff _cde .PdfObject )(*PdfFilespec ,error ){if _aff ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_aff );};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_efe :=NewPdfAction ();_gcg :=&PdfActionSetOCGState {};_gcg .PdfAction =_efe ;_efe .SetContext (_gcg );return _gcg ;};func (_fdcg *PdfWriter )writeAcroFormFields ()error {if _fdcg ._fgfgf ==nil {return nil ;
};_fb .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_ebfed :=_fdcg ._fgfgf .ToPdfObject ();_fb .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_ebfed );
_fdcg ._aaeef .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ebfed );_cddec :=_fdcg .addObjects (_ebfed );if _cddec !=nil {return _cddec ;};return nil ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_bdcfec int64 ;_efbed int64 ;_acgbg int64 ;_fbgce int64 ;_bcbba int64 ;_geaeb int64 ;_ddbcg byte ;_bafff int64 ;_agedg int64 ;};

// SetContentStream sets the pattern cell's content stream.
func (_cfec *PdfTilingPattern )SetContentStream (content []byte ,encoder _cde .StreamEncoder )error {_cffba ,_bedagg :=_cfec ._eebba .(*_cde .PdfObjectStream );if !_bedagg {_fb .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfec ._eebba );
return _cde .ErrTypeError ;};if encoder ==nil {encoder =_cde .NewRawEncoder ();};_aceae :=_cffba .PdfObjectDictionary ;_bfaa :=encoder .MakeStreamDict ();_aceae .Merge (_bfaa );_bcfgb ,_edbfg :=encoder .EncodeBytes (content );if _edbfg !=nil {return _edbfg ;
};_aceae .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cde .MakeInteger (int64 (len (_bcfgb ))));_cffba .Stream =_bcfgb ;return nil ;};

// SetForms sets the Acroform for a PDF file.
func (_gggfb *PdfWriter )SetForms (form *PdfAcroForm )error {_gggfb ._fgfgf =form ;return nil };func _fcgf (_bdcbc *_cde .PdfObjectStream )(*PdfFunctionType4 ,error ){_ecdgc :=&PdfFunctionType4 {};_ecdgc ._geab =_bdcbc ;_eeaad :=_bdcbc .PdfObjectDictionary ;
_daeb ,_gedfd :=_cde .TraceToDirectObject (_eeaad .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cde .PdfObjectArray );if !_gedfd {_fb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _daeb .Len ()%2!=0{_fb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_gf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_feceg ,_cefee :=_daeb .ToFloat64Array ();
if _cefee !=nil {return nil ,_cefee ;};_ecdgc .Domain =_feceg ;_daeb ,_gedfd =_cde .TraceToDirectObject (_eeaad .Get ("\u0052\u0061\u006eg\u0065")).(*_cde .PdfObjectArray );if _gedfd {if _daeb .Len ()< 0||_daeb .Len ()%2!=0{return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ccgee ,_gabcd :=_daeb .ToFloat64Array ();if _gabcd !=nil {return nil ,_gabcd ;};_ecdgc .Range =_ccgee ;};_dbcg ,_cefee :=_cde .DecodeStream (_bdcbc );if _cefee !=nil {return nil ,_cefee ;};_ecdgc ._dbded =_dbcg ;_ccdgd :=_fe .NewPSParser (_dbcg );_gdba ,_cefee :=_ccdgd .Parse ();
if _cefee !=nil {return nil ,_cefee ;};_ecdgc .Program =_gdba ;return _ecdgc ,nil ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_dedgc *PdfWriter )SetOpenAction (dest _cde .PdfObject )error {if dest ==nil ||_cde .IsNullObject (dest ){return nil ;};_dedgc ._aaeef .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _dedgc .addObjects (dest );};


// ToPdfObject implements interface PdfModel.
func (_gfe *PdfActionSound )ToPdfObject ()_cde .PdfObject {_gfe .PdfAction .ToPdfObject ();_gbg :=_gfe ._dfb ;_ced :=_gbg .PdfObject .(*_cde .PdfObjectDictionary );_ced .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeSound )));_ced .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_gfe .Sound );
_ced .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_gfe .Volume );_ced .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_gfe .Synchronous );_ced .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gfe .Repeat );_ced .SetIfNotNil ("\u004d\u0069\u0078",_gfe .Mix );
return _gbg ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_gfebce *PdfPattern )IsTiling ()bool {return _gfebce .PatternType ==1};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_fafd *PdfOutlineTreeNode )GetContainingPdfObject ()_cde .PdfObject {return _fafd .GetContext ().GetContainingPdfObject ();};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_ecag *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_ecag .Base .GetNumComponents ();_abbdbb :=int (vals [0])*N ;
if _abbdbb < 0||(_abbdbb +N -1)>=len (_ecag ._abbg ){_fb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_abbdbb );return nil ,ErrColorOutOfRange ;};_cced :=_ecag ._abbg [_abbdbb :_abbdbb +N ];
var _ebff []float64 ;for _ ,_edf :=range _cced {_ebff =append (_ebff ,float64 (_edf )/255.0);};_efgb ,_cbge :=_ecag .Base .ColorFromFloats (_ebff );if _cbge !=nil {return nil ,_cbge ;};return _efgb ,nil ;};func _cabee (_gcfae *_cde .PdfObjectDictionary )(*PdfShadingType4 ,error ){_dagcb :=PdfShadingType4 {};
_bdgec :=_gcfae .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _bdgec ==nil {_fb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_aegea ,_gcef :=_bdgec .(*_cde .PdfObjectInteger );if !_gcef {_fb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdgec );
return nil ,_cde .ErrTypeError ;};_dagcb .BitsPerCoordinate =_aegea ;_bdgec =_gcfae .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bdgec ==nil {_fb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_aegea ,_gcef =_bdgec .(*_cde .PdfObjectInteger );if !_gcef {_fb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bdgec );
return nil ,_cde .ErrTypeError ;};_dagcb .BitsPerComponent =_aegea ;_bdgec =_gcfae .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bdgec ==nil {_fb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aegea ,_gcef =_bdgec .(*_cde .PdfObjectInteger );if !_gcef {_fb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bdgec );
return nil ,_cde .ErrTypeError ;};_dagcb .BitsPerComponent =_aegea ;_bdgec =_gcfae .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bdgec ==nil {_fb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_feega ,_gcef :=_bdgec .(*_cde .PdfObjectArray );if !_gcef {_fb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdgec );
return nil ,_cde .ErrTypeError ;};_dagcb .Decode =_feega ;_bdgec =_gcfae .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bdgec ==nil {_fb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dagcb .Function =[]PdfFunction {};if _abbe ,_ggfgb :=_bdgec .(*_cde .PdfObjectArray );_ggfgb {for _ ,_defg :=range _abbe .Elements (){_gbffb ,_ggfa :=_bedaa (_defg );if _ggfa !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggfa );
return nil ,_ggfa ;};_dagcb .Function =append (_dagcb .Function ,_gbffb );};}else {_aaccf ,_cffeb :=_bedaa (_bdgec );if _cffeb !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cffeb );
return nil ,_cffeb ;};_dagcb .Function =append (_dagcb .Function ,_aaccf );};return &_dagcb ,nil ;};func (_bcbg *PdfReader )buildOutlineTree (_babdg _cde .PdfObject ,_ggbfa *PdfOutlineTreeNode ,_fbeeb *PdfOutlineTreeNode ,_agfdc map[_cde .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _agfdc ==nil {_agfdc =map[_cde .PdfObject ]struct{}{};
};_agfdc [_babdg ]=struct{}{};_dcda ,_agec :=_babdg .(*_cde .PdfIndirectObject );if !_agec {return nil ,nil ,_a .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_babdg );
};_gcaa ,_caaf :=_dcda .PdfObject .(*_cde .PdfObjectDictionary );if !_caaf {return nil ,nil ,_gf .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fb .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_gcaa ,_dcda ,_dcda );
if _gdagc :=_gcaa .Get ("\u0054\u0069\u0074l\u0065");_gdagc !=nil {_ebbfb ,_cgegcg :=_bcbg .newPdfOutlineItemFromIndirectObject (_dcda );if _cgegcg !=nil {return nil ,nil ,_cgegcg ;};_ebbfb .Parent =_ggbfa ;_ebbfb .Prev =_fbeeb ;_cddcb :=_cde .ResolveReference (_gcaa .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_afeaf :=_agfdc [_cddcb ];_cddcb !=nil &&_cddcb !=_dcda &&!_afeaf {if !_cde .IsNullObject (_cddcb ){_dcbbf ,_cbafed ,_cfed :=_bcbg .buildOutlineTree (_cddcb ,&_ebbfb .PdfOutlineTreeNode ,nil ,_agfdc );if _cfed !=nil {_fb .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_cfed );
}else {_ebbfb .First =_dcbbf ;_ebbfb .Last =_cbafed ;};};};_bfdf :=_cde .ResolveReference (_gcaa .Get ("\u004e\u0065\u0078\u0074"));if _ ,_ecfggd :=_agfdc [_bfdf ];_bfdf !=nil &&_bfdf !=_dcda &&!_ecfggd {if !_cde .IsNullObject (_bfdf ){_dedec ,_baede ,_egbc :=_bcbg .buildOutlineTree (_bfdf ,_ggbfa ,&_ebbfb .PdfOutlineTreeNode ,_agfdc );
if _egbc !=nil {_fb .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_egbc );
}else {_ebbfb .Next =_dedec ;return &_ebbfb .PdfOutlineTreeNode ,_baede ,nil ;};};};return &_ebbfb .PdfOutlineTreeNode ,&_ebbfb .PdfOutlineTreeNode ,nil ;};_accac ,_aebae :=_fead (_dcda );if _aebae !=nil {return nil ,nil ,_aebae ;};_accac .Parent =_ggbfa ;
if _dacce :=_gcaa .Get ("\u0046\u0069\u0072s\u0074");_dacce !=nil {_dacce =_cde .ResolveReference (_dacce );if _ ,_degbe :=_agfdc [_dacce ];_dacce !=nil &&_dacce !=_dcda &&!_degbe {_ggeg :=_cde .TraceToDirectObject (_dacce );if _ ,_aafgc :=_ggeg .(*_cde .PdfObjectNull );
!_aafgc &&_ggeg !=nil {_eeefd ,_ffega ,_debe :=_bcbg .buildOutlineTree (_dacce ,&_accac .PdfOutlineTreeNode ,nil ,_agfdc );if _debe !=nil {_fb .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_debe );
}else {_accac .First =_eeefd ;_accac .Last =_ffega ;};};};};return &_accac .PdfOutlineTreeNode ,&_accac .PdfOutlineTreeNode ,nil ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_cde .PdfObjectInteger ;BitsPerComponent *_cde .PdfObjectInteger ;BitsPerFlag *_cde .PdfObjectInteger ;Decode *_cde .PdfObjectArray ;Function []PdfFunction ;};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_abcf *PdfTransformParamsDocMDP )String ()string {return _a .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_abcf .Type ,_abcf .P ,_abcf .V );};

// GetBorderWidth returns the border style's width.
func (_caee *PdfBorderStyle )GetBorderWidth ()float64 {if _caee .W ==nil {return 1;};return *_caee .W ;};

// GetAction returns the PDF action for the annotation link.
func (_fce *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _fce ._bgg !=nil {return _fce ._bgg ,nil ;};if _fce .A ==nil {return nil ,nil ;};if _fce ._efa ==nil {return nil ,nil ;};_bag ,_eac :=_fce ._efa .loadAction (_fce .A );if _eac !=nil {return nil ,_eac ;
};_fce ._bgg =_bag ;return _fce ._bgg ,nil ;};func (_bddb *PdfReader )loadAction (_ggfd _cde .PdfObject )(*PdfAction ,error ){if _cbgb ,_aafb :=_cde .GetIndirect (_ggfd );_aafb {_agce ,_cbc :=_bddb .newPdfActionFromIndirectObject (_cbgb );if _cbc !=nil {return nil ,_cbc ;
};return _agce ,nil ;}else if !_cde .IsNullObject (_ggfd ){return nil ,_gf .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _cde .PdfObject ;T _cde .PdfObject ;Operation _cde .PdfObject ;};

// GetVersion gets the document version.
func (_gccbb *PdfWriter )GetVersion ()_cde .Version {return _gccbb ._dgccdd };func _dgbgd (_cfcf _cde .PdfObject )(*_cde .PdfObjectDictionary ,*fontCommon ,error ){_gbgc :=&fontCommon {};if _geee ,_gbaa :=_cfcf .(*_cde .PdfIndirectObject );_gbaa {_gbgc ._aecf =_geee .ObjectNumber ;
};_agdgf ,_dfeag :=_cde .GetDict (_cfcf );if !_dfeag {_fb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cfcf );
return nil ,nil ,ErrFontNotSupported ;};_eedcg ,_dfeag :=_cde .GetNameVal (_agdgf .Get ("\u0054\u0079\u0070\u0065"));if !_dfeag {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _eedcg !="\u0046\u006f\u006e\u0074"{_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_eedcg ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_cde .ErrTypeError ;};_daegd ,_dfeag :=_cde .GetNameVal (_agdgf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dfeag {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_gbgc ._cfgg =_daegd ;_gfda ,_dfeag :=_cde .GetNameVal (_agdgf .Get ("\u004e\u0061\u006d\u0065"));if _dfeag {_gbgc ._edcec =_gfda ;};_bgff :=_agdgf .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _bgff !=nil {_gbgc ._aaegd =_cde .TraceToDirectObject (_bgff );
_afbgfc ,_fdefa :=_fdcf (_gbgc ._aaegd ,_gbgc );if _fdefa !=nil {return _agdgf ,_gbgc ,_fdefa ;};_gbgc ._dcgd =_afbgfc ;}else if _daegd =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_daegd =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_cgfee ,_cegaa :=_ega .NewCIDSystemInfo (_agdgf .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _cegaa !=nil {return _agdgf ,_gbgc ,_cegaa ;};_dgccc :=_a .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_cgfee .Registry ,_cgfee .Ordering );if _ega .IsPredefinedCMap (_dgccc ){_gbgc ._dcgd ,_cegaa =_ega .LoadPredefinedCMap (_dgccc );
if _cegaa !=nil {_fb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dgccc ,_cegaa );
};};};_ccfb :=_agdgf .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _ccfb !=nil {_ccgfe ,_gfeab :=_eggea (_ccfb );if _gfeab !=nil {_fb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gfeab );
return _agdgf ,_gbgc ,_gfeab ;};_gbgc ._bceac =_ccgfe ;};if _daegd !="\u0054\u0079\u0070e\u0033"{_gged ,_dgcd :=_cde .GetNameVal (_agdgf .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_dgcd {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _agdgf ,_gbgc ,ErrRequiredAttributeMissing ;};_gbgc ._bbdf =_gged ;};return _agdgf ,_gbgc ,nil ;};func _bfbd (_cadbcf *_cde .PdfObjectDictionary )(*PdfShadingType6 ,error ){_eabc :=PdfShadingType6 {};_eagddf :=_cadbcf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _eagddf ==nil {_fb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gaebd ,_ddabbf :=_eagddf .(*_cde .PdfObjectInteger );if !_ddabbf {_fb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eagddf );
return nil ,_cde .ErrTypeError ;};_eabc .BitsPerCoordinate =_gaebd ;_eagddf =_cadbcf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eagddf ==nil {_fb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gaebd ,_ddabbf =_eagddf .(*_cde .PdfObjectInteger );if !_ddabbf {_fb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eagddf );
return nil ,_cde .ErrTypeError ;};_eabc .BitsPerComponent =_gaebd ;_eagddf =_cadbcf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _eagddf ==nil {_fb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gaebd ,_ddabbf =_eagddf .(*_cde .PdfObjectInteger );if !_ddabbf {_fb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eagddf );
return nil ,_cde .ErrTypeError ;};_eabc .BitsPerComponent =_gaebd ;_eagddf =_cadbcf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eagddf ==nil {_fb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_abdac ,_ddabbf :=_eagddf .(*_cde .PdfObjectArray );if !_ddabbf {_fb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eagddf );
return nil ,_cde .ErrTypeError ;};_eabc .Decode =_abdac ;if _ceaff :=_cadbcf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ceaff !=nil {_eabc .Function =[]PdfFunction {};if _bcdfc ,_cceefc :=_ceaff .(*_cde .PdfObjectArray );_cceefc {for _ ,_dfgba :=range _bcdfc .Elements (){_ggda ,_ebfcc :=_bedaa (_dfgba );
if _ebfcc !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebfcc );return nil ,_ebfcc ;};_eabc .Function =append (_eabc .Function ,_ggda );
};}else {_agfde ,_gdbd :=_bedaa (_ceaff );if _gdbd !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gdbd );return nil ,_gdbd ;};
_eabc .Function =append (_eabc .Function ,_agfde );};};return &_eabc ,nil ;};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _fd .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_cde .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_cde .MakeInteger (int64 (permission )),V :_cde .MakeName ("\u0031\u002e\u0032")};
};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_aaeae *PdfFont )ToPdfObject ()_cde .PdfObject {if _aaeae ._dcgb ==nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _cde .MakeNull ();
};return _aaeae ._dcgb .ToPdfObject ();};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_caegb *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _caegb .Alternate ==nil {_fb .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _caegb .N ==1{_fb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_gbbc :=NewPdfColorspaceDeviceGray ();return _gbbc .ColorToRGB (color );}else if _caegb .N ==3{_fb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _caegb .N ==4{_fb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_bgdb :=NewPdfColorspaceDeviceCMYK ();return _bgdb .ColorToRGB (color );}else {return nil ,_gf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_fb .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_caegb );
return _caegb .Alternate .ColorToRGB (color );};

// ToInteger convert to an integer format.
func (_fdfa *PdfColorCalGray )ToInteger (bits int )uint32 {_bgfa :=_ce .Pow (2,float64 (bits ))-1;return uint32 (_bgfa *_fdfa .Val ());};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_abec *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_gagc :=_afa .NewReader (img .getBase ());_abed :=_bbb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_feecd :=_afa .NewWriter (_abed );
_acfcc :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;_eabab :=make ([]uint32 ,3);var (_bedf uint32 ;ANorm ,X ,Y ,Z ,_aaeac ,_gfbd ,_gagd float64 ;_cdbe error ;);for {_bedf ,_cdbe =_gagc .ReadSample ();if _cdbe ==_df .EOF {break ;}else if _cdbe !=nil {return img ,_cdbe ;
};ANorm =float64 (_bedf )/_acfcc ;X =_abec .WhitePoint [0]*_ce .Pow (ANorm ,_abec .Gamma );Y =_abec .WhitePoint [1]*_ce .Pow (ANorm ,_abec .Gamma );Z =_abec .WhitePoint [2]*_ce .Pow (ANorm ,_abec .Gamma );_aaeac =3.240479*X +-1.537150*Y +-0.498535*Z ;_gfbd =-0.969256*X +1.875992*Y +0.041556*Z ;
_gagd =0.055648*X +-0.204043*Y +1.057311*Z ;_aaeac =_ce .Min (_ce .Max (_aaeac ,0),1.0);_gfbd =_ce .Min (_ce .Max (_gfbd ,0),1.0);_gagd =_ce .Min (_ce .Max (_gagd ,0),1.0);_eabab [0]=uint32 (_aaeac *_acfcc );_eabab [1]=uint32 (_gfbd *_acfcc );_eabab [2]=uint32 (_gagd *_acfcc );
if _cdbe =_feecd .WriteSamples (_eabab );_cdbe !=nil {return img ,_cdbe ;};};return _edggb (&_abed ),nil ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_dgcfb *XObjectForm )GetContainingPdfObject ()_cde .PdfObject {return _dgcfb ._fbeeg };func _gacd (_geeeg *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_geeeg }};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_debg :=NewPdfAnnotation ();_cca :=&PdfAnnotationWatermark {};_cca .PdfAnnotation =_debg ;_debg .SetContext (_cca );return _cca ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_gbfc *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_eaaa :=_afa .NewReader (img .getBase ());_ddeb :=_bbb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_egdd :=_afa .NewWriter (_ddeb );
_gcgfe :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;_ddefg :=make ([]uint32 ,3);var (_efaag error ;_gbdg ,_dafbb ,_acgd ,_dbgd ,_daed ,_feeb float64 ;);for {_efaag =_eaaa .ReadSamples (_ddefg );if _efaag ==_df .EOF {break ;}else if _efaag !=nil {return img ,_efaag ;
};_gbdg =float64 (_ddefg [0])/_gcgfe ;_dafbb =float64 (_ddefg [1])/_gcgfe ;_acgd =float64 (_ddefg [2])/_gcgfe ;_dbgd =_gbfc .Matrix [0]*_ce .Pow (_gbdg ,_gbfc .Gamma [0])+_gbfc .Matrix [3]*_ce .Pow (_dafbb ,_gbfc .Gamma [1])+_gbfc .Matrix [6]*_ce .Pow (_acgd ,_gbfc .Gamma [2]);
_daed =_gbfc .Matrix [1]*_ce .Pow (_gbdg ,_gbfc .Gamma [0])+_gbfc .Matrix [4]*_ce .Pow (_dafbb ,_gbfc .Gamma [1])+_gbfc .Matrix [7]*_ce .Pow (_acgd ,_gbfc .Gamma [2]);_feeb =_gbfc .Matrix [2]*_ce .Pow (_gbdg ,_gbfc .Gamma [0])+_gbfc .Matrix [5]*_ce .Pow (_dafbb ,_gbfc .Gamma [1])+_gbfc .Matrix [8]*_ce .Pow (_acgd ,_gbfc .Gamma [2]);
_gbdg =3.240479*_dbgd +-1.537150*_daed +-0.498535*_feeb ;_dafbb =-0.969256*_dbgd +1.875992*_daed +0.041556*_feeb ;_acgd =0.055648*_dbgd +-0.204043*_daed +1.057311*_feeb ;_gbdg =_ce .Min (_ce .Max (_gbdg ,0),1.0);_dafbb =_ce .Min (_ce .Max (_dafbb ,0),1.0);
_acgd =_ce .Min (_ce .Max (_acgd ,0),1.0);_ddefg [0]=uint32 (_gbdg *_gcgfe );_ddefg [1]=uint32 (_dafbb *_gcgfe );_ddefg [2]=uint32 (_acgd *_gcgfe );if _efaag =_egdd .WriteSamples (_ddefg );_efaag !=nil {return img ,_efaag ;};};return _edggb (&_ddeb ),nil ;
};

// GetCharMetrics returns the char metrics for character code `code`.
func (_aggbb pdfFontType3 )GetCharMetrics (code _fab .CharCode )(_baf .CharMetrics ,bool ){if _gbeb ,_cefb :=_aggbb ._eaad [code ];_cefb {return _baf .CharMetrics {Wx :_gbeb },true ;};if _baf .IsStdFont (_baf .StdFontName (_aggbb ._bbdf )){return _baf .CharMetrics {Wx :250},true ;
};return _baf .CharMetrics {},false ;};

// WriteString outputs the object as it is to be written to file.
func (_abce *PdfTransformParamsDocMDP )WriteString ()string {return _abce .ToPdfObject ().WriteString ()};var (_ggdeb _c .Mutex ;_eadgce ="";_bcbfb _gdd .Time ;_bgeff ="";_feddg ="";_faaae _gdd .Time ;_fdbbf ="";_cacaae ="";_aeegb ="";);

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_ddbda *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_egfe ,_adbcb :=color .(*PdfColorDeviceRGB );if !_adbcb {_fb .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _egfe ,nil ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_baecf *PdfReader )GetOCProperties ()(_cde .PdfObject ,error ){_dceeg :=_baecf ._gaeed ;_aabae :=_dceeg .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_aabae =_cde .ResolveReference (_aabae );if !_baecf ._gbeac {_eafca :=_baecf .traverseObjectData (_aabae );
if _eafca !=nil {return nil ,_eafca ;};};return _aabae ,nil ;};func _afcba (_adcfg *PdfField ,_cgdc _cde .PdfObject )error {switch _adcfg .GetContext ().(type ){case *PdfFieldText :switch _bccb :=_cgdc .(type ){case *_cde .PdfObjectName :_eagdd :=_bccb ;
_fb .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_eagdd .String ());
_adcfg .V =_cde .MakeEncodedString (_bccb .String (),true );case *_cde .PdfObjectString :_adcfg .V =_cde .MakeEncodedString (_bccb .String (),true );default:_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_bccb ,_bccb );
};case *PdfFieldButton :switch _cgdc .(type ){case *_cde .PdfObjectName :if len (_cgdc .String ())> 0{_adcfg .V =_cgdc ;_fegda (_adcfg ,_cgdc );};case *_cde .PdfObjectString :if len (_cgdc .String ())> 0{_adcfg .V =_cde .MakeName (_cgdc .String ());_fegda (_adcfg ,_adcfg .V );
};default:_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_adcfg .PartialName (),_cgdc );_adcfg .V =_cgdc ;};case *PdfFieldChoice :switch _cgdc .(type ){case *_cde .PdfObjectName :if len (_cgdc .String ())> 0{_adcfg .V =_cde .MakeString (_cgdc .String ());
_fegda (_adcfg ,_cgdc );};case *_cde .PdfObjectString :if len (_cgdc .String ())> 0{_adcfg .V =_cgdc ;_fegda (_adcfg ,_cde .MakeName (_cgdc .String ()));};default:_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_adcfg .PartialName (),_cgdc );
_adcfg .V =_cgdc ;};case *PdfFieldSignature :_fb .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_adcfg .PartialName (),_cgdc );
};return nil ;};

// ToGoTime returns the date in time.Time format.
func (_bddea PdfDate )ToGoTime ()_gdd .Time {_abaeg :=int (_bddea ._bafff *60*60+_bddea ._agedg *60);switch _bddea ._ddbcg {case '-':_abaeg =-_abaeg ;case 'Z':_abaeg =0;};_bfgd :=_a .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_bddea ._ddbcg ,_bddea ._bafff ,_bddea ._agedg );
_fgbac :=_gdd .FixedZone (_bfgd ,_abaeg );return _gdd .Date (int (_bddea ._bdcfec ),_gdd .Month (_bddea ._efbed ),int (_bddea ._acgbg ),int (_bddea ._fbgce ),int (_bddea ._bcbba ),int (_bddea ._geaeb ),0,_fgbac );};func _gfdga ()*Names {return &Names {_adffb :_cde .MakeIndirectObject (_cde .MakeDict ())}};


// GetRevisionNumber returns the version of the current Pdf document
func (_dgfb *PdfReader )GetRevisionNumber ()int {return _dgfb ._fdccd .GetRevisionNumber ()};func _deeac (_adbdd _df .ReadSeeker ,_daae *ReaderOpts ,_afcd bool ,_deefb string )(*PdfReader ,error ){if _daae ==nil {_daae =NewReaderOpts ();};_ecggg :=*_daae ;
_beecd :=&PdfReader {_dfgb :_adbdd ,_acfcd :map[_cde .PdfObject ]struct{}{},_bgffc :_cccf (),_gbeac :_daae .LazyLoad ,_fbagga :_daae .ComplianceMode ,_ggbga :_afcd ,_fafdd :&_ecggg };_acebd ,_dfggdd :=_adcda ("\u0072");if _dfggdd !=nil {return nil ,_dfggdd ;
};_dfggdd =_af .Track (_acebd ,_deefb );if _dfggdd !=nil {return nil ,_dfggdd ;};_beecd ._gbaeb =_acebd ;var _cgfd *_cde .PdfParser ;if !_beecd ._fbagga {_cgfd ,_dfggdd =_cde .NewParser (_adbdd );}else {_cgfd ,_dfggdd =_cde .NewCompliancePdfParser (_adbdd );
};if _dfggdd !=nil {return nil ,_dfggdd ;};_beecd ._fdccd =_cgfd ;_cgeef ,_dfggdd :=_beecd .IsEncrypted ();if _dfggdd !=nil {return nil ,_dfggdd ;};if !_cgeef {_dfggdd =_beecd .loadStructure ();if _dfggdd !=nil {return nil ,_dfggdd ;};}else if _afcd {_defee ,_gcff :=_beecd .Decrypt ([]byte (_daae .Password ));
if _gcff !=nil {return nil ,_gcff ;};if !_defee {return nil ,_gf .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_beecd ._abece =make (map[*PdfReader ]*PdfReader );_beecd ._egfff =make ([]*PdfReader ,_cgfd .GetRevisionNumber ());return _beecd ,nil ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_adcd :=&PdfColorspaceCalGray {};_adcd .BlackPoint =[]float64 {0.0,0.0,0.0};_adcd .Gamma =1;return _adcd ;};

// WriteToFile writes the Appender output to file specified by path.
func (_debae *PdfAppender )WriteToFile (outputPath string )error {_fgc ,_bdcf :=_cd .Create (outputPath );if _bdcf !=nil {return _bdcf ;};defer _fgc .Close ();return _debae .Write (_fgc );};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;
ButtonTypeRadio ButtonType =iota ;);func (_efdbd *PdfAcroForm )fillImageWithAppearance (_bbdca FieldImageProvider ,_cfdadb FieldAppearanceGenerator )error {if _efdbd ==nil {return nil ;};_cgbcc ,_facg :=_bbdca .FieldImageValues ();if _facg !=nil {return _facg ;
};for _ ,_dccb :=range _efdbd .AllFields (){_cdgebb :=_dccb .PartialName ();_eafa ,_fbced :=_cgbcc [_cdgebb ];if !_fbced {if _facde ,_dbca :=_dccb .FullName ();_dbca ==nil {_eafa ,_fbced =_cgbcc [_facde ];};};if !_fbced {_fb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_cdgebb );
continue ;};switch _bdag :=_dccb .GetContext ().(type ){case *PdfFieldButton :if _bdag .IsPush (){_bdag .SetFillImage (_eafa );};};if _cfdadb ==nil {continue ;};for _ ,_baabf :=range _dccb .Annotations {_agda ,_edec :=_cfdadb .GenerateAppearanceDict (_efdbd ,_dccb ,_baabf );
if _edec !=nil {return _edec ;};_baabf .AP =_agda ;_baabf .ToPdfObject ();};};return nil ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_cde .PdfObjectInteger ;BitsPerComponent *_cde .PdfObjectInteger ;VerticesPerRow *_cde .PdfObjectInteger ;Decode *_cde .PdfObjectArray ;Function []PdfFunction ;};func (_bdd *PdfReader )newPdfActionFromIndirectObject (_cef *_cde .PdfIndirectObject )(*PdfAction ,error ){_ceac ,_eee :=_cef .PdfObject .(*_cde .PdfObjectDictionary );
if !_eee {return nil ,_a .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_bdd ._bgffc .GetModelFromPrimitive (_ceac );model !=nil {_eag ,_gee :=model .(*PdfAction );if !_gee {return nil ,_a .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _eag ,nil ;};_ggee :=&PdfAction {};_ggee ._dfb =_cef ;_bdd ._bgffc .Register (_ceac ,_ggee );if _abb :=_ceac .Get ("\u0054\u0079\u0070\u0065");_abb !=nil {_def ,_cdc :=_abb .(*_cde .PdfObjectName );if !_cdc {_fb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_abb );
}else {if *_def !="\u0041\u0063\u0074\u0069\u006f\u006e"{_fb .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_def );
};_ggee .Type =_def ;};};if _aca :=_ceac .Get ("\u004e\u0065\u0078\u0074");_aca !=nil {_ggee .Next =_aca ;};if _ceb :=_ceac .Get ("\u0053");_ceb !=nil {_ggee .S =_ceb ;};_bda ,_ecd :=_ggee .S .(*_cde .PdfObjectName );if !_ecd {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ggee .S );
return nil ,_a .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ggee .S );};_cebb :=PdfActionType (_bda .String ());
switch _cebb {case ActionTypeGoTo :_ceef ,_bcd :=_bdd .newPdfActionGotoFromDict (_ceac );if _bcd !=nil {return nil ,_bcd ;};_ceef .PdfAction =_ggee ;_ggee ._dfd =_ceef ;return _ggee ,nil ;case ActionTypeGoToR :_bdb ,_gec :=_bdd .newPdfActionGotoRFromDict (_ceac );
if _gec !=nil {return nil ,_gec ;};_bdb .PdfAction =_ggee ;_ggee ._dfd =_bdb ;return _ggee ,nil ;case ActionTypeGoToE :_fde ,_cdf :=_bdd .newPdfActionGotoEFromDict (_ceac );if _cdf !=nil {return nil ,_cdf ;};_fde .PdfAction =_ggee ;_ggee ._dfd =_fde ;return _ggee ,nil ;
case ActionTypeLaunch :_agfe ,_dfc :=_bdd .newPdfActionLaunchFromDict (_ceac );if _dfc !=nil {return nil ,_dfc ;};_agfe .PdfAction =_ggee ;_ggee ._dfd =_agfe ;return _ggee ,nil ;case ActionTypeThread :_cff ,_gae :=_bdd .newPdfActionThreadFromDict (_ceac );
if _gae !=nil {return nil ,_gae ;};_cff .PdfAction =_ggee ;_ggee ._dfd =_cff ;return _ggee ,nil ;case ActionTypeURI :_ffb ,_gfec :=_bdd .newPdfActionURIFromDict (_ceac );if _gfec !=nil {return nil ,_gfec ;};_ffb .PdfAction =_ggee ;_ggee ._dfd =_ffb ;return _ggee ,nil ;
case ActionTypeSound :_deb ,_cfd :=_bdd .newPdfActionSoundFromDict (_ceac );if _cfd !=nil {return nil ,_cfd ;};_deb .PdfAction =_ggee ;_ggee ._dfd =_deb ;return _ggee ,nil ;case ActionTypeMovie :_gfea ,_cag :=_bdd .newPdfActionMovieFromDict (_ceac );if _cag !=nil {return nil ,_cag ;
};_gfea .PdfAction =_ggee ;_ggee ._dfd =_gfea ;return _ggee ,nil ;case ActionTypeHide :_dccd ,_ddd :=_bdd .newPdfActionHideFromDict (_ceac );if _ddd !=nil {return nil ,_ddd ;};_dccd .PdfAction =_ggee ;_ggee ._dfd =_dccd ;return _ggee ,nil ;case ActionTypeNamed :_cadc ,_bgc :=_bdd .newPdfActionNamedFromDict (_ceac );
if _bgc !=nil {return nil ,_bgc ;};_cadc .PdfAction =_ggee ;_ggee ._dfd =_cadc ;return _ggee ,nil ;case ActionTypeSubmitForm :_ffce ,_cbgg :=_bdd .newPdfActionSubmitFormFromDict (_ceac );if _cbgg !=nil {return nil ,_cbgg ;};_ffce .PdfAction =_ggee ;_ggee ._dfd =_ffce ;
return _ggee ,nil ;case ActionTypeResetForm :_deff ,_aeg :=_bdd .newPdfActionResetFormFromDict (_ceac );if _aeg !=nil {return nil ,_aeg ;};_deff .PdfAction =_ggee ;_ggee ._dfd =_deff ;return _ggee ,nil ;case ActionTypeImportData :_bbbe ,_cbggf :=_bdd .newPdfActionImportDataFromDict (_ceac );
if _cbggf !=nil {return nil ,_cbggf ;};_bbbe .PdfAction =_ggee ;_ggee ._dfd =_bbbe ;return _ggee ,nil ;case ActionTypeSetOCGState :_db ,_fec :=_bdd .newPdfActionSetOCGStateFromDict (_ceac );if _fec !=nil {return nil ,_fec ;};_db .PdfAction =_ggee ;_ggee ._dfd =_db ;
return _ggee ,nil ;case ActionTypeRendition :_bbe ,_cadf :=_bdd .newPdfActionRenditionFromDict (_ceac );if _cadf !=nil {return nil ,_cadf ;};_bbe .PdfAction =_ggee ;_ggee ._dfd =_bbe ;return _ggee ,nil ;case ActionTypeTrans :_ecba ,_ged :=_bdd .newPdfActionTransFromDict (_ceac );
if _ged !=nil {return nil ,_ged ;};_ecba .PdfAction =_ggee ;_ggee ._dfd =_ecba ;return _ggee ,nil ;case ActionTypeGoTo3DView :_fc ,_gbgf :=_bdd .newPdfActionGoTo3DViewFromDict (_ceac );if _gbgf !=nil {return nil ,_gbgf ;};_fc .PdfAction =_ggee ;_ggee ._dfd =_fc ;
return _ggee ,nil ;case ActionTypeJavaScript :_agc ,_cabb :=_bdd .newPdfActionJavaScriptFromDict (_ceac );if _cabb !=nil {return nil ,_cabb ;};_agc .PdfAction =_ggee ;_ggee ._dfd =_agc ;return _ggee ,nil ;};_fb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_cebb );
return nil ,nil ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_aaec DefaultImageHandler )NewImageFromGoImage (goimg _cg .Image )(*Image ,error ){_ebda ,_ddbc :=_bbb .FromGoImage (goimg );if _ddbc !=nil {return nil ,_ddbc ;};_cacac :=_edggb (_ebda .Base ());return &_cacac ,nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_afccb *PdfOutlineItem )ToPdfObject ()_cde .PdfObject {_dggc :=_afccb ._baaeg ;_efdg :=_dggc .PdfObject .(*_cde .PdfObjectDictionary );_efdg .Set ("\u0054\u0069\u0074l\u0065",_afccb .Title );if _afccb .A !=nil {_efdg .Set ("\u0041",_afccb .A );};
if _ccdec :=_efdg .Get ("\u0053\u0045");_ccdec !=nil {_efdg .Remove ("\u0053\u0045");};if _afccb .C !=nil {_efdg .Set ("\u0043",_afccb .C );};if _afccb .Dest !=nil {_efdg .Set ("\u0044\u0065\u0073\u0074",_afccb .Dest );};if _afccb .F !=nil {_efdg .Set ("\u0046",_afccb .F );
};if _afccb .Count !=nil {_efdg .Set ("\u0043\u006f\u0075n\u0074",_cde .MakeInteger (*_afccb .Count ));};if _afccb .Next !=nil {_efdg .Set ("\u004e\u0065\u0078\u0074",_afccb .Next .ToPdfObject ());};if _afccb .First !=nil {_efdg .Set ("\u0046\u0069\u0072s\u0074",_afccb .First .ToPdfObject ());
};if _afccb .Prev !=nil {_efdg .Set ("\u0050\u0072\u0065\u0076",_afccb .Prev .GetContext ().GetContainingPdfObject ());};if _afccb .Last !=nil {_efdg .Set ("\u004c\u0061\u0073\u0074",_afccb .Last .GetContext ().GetContainingPdfObject ());};if _afccb .Parent !=nil {_efdg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_afccb .Parent .GetContext ().GetContainingPdfObject ());
};return _dggc ;};func (_ead *PdfReader )newPdfActionJavaScriptFromDict (_cebf *_cde .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_cebf .Get ("\u004a\u0053")},nil ;};func (_cbba *PdfWriter )writeOutlines ()error {if _cbba ._aabac ==nil {return nil ;
};_fb .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_cbba ._aabac );_ggcdb :=_cbba ._aabac .ToPdfObject ();_fb .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_ggcdb ,_ggcdb ,_ggcdb );
_cbba ._aaeef .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_ggcdb );_cccgg :=_cbba .addObjects (_ggcdb );if _cccgg !=nil {return _cccgg ;};return nil ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _df .ReadSeeker )(*PdfFont ,error ){_dfffb ,_dgcb :=_gd .ReadAll (r );if _dgcb !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_dgcb );
return nil ,_dgcb ;};_ceea ,_dgcb :=_baf .TtfParse (_bb .NewReader (_dfffb ));if _dgcb !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_dgcb );
return nil ,_dgcb ;};_dfce :=&pdfCIDFontType2 {fontCommon :fontCommon {_cfgg :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_cde .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_ceea .Widths )<=0{return nil ,_gf .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_aecg :=1000.0/float64 (_ceea .UnitsPerEm );_eccd :=_aecg *float64 (_ceea .Widths [0]);_efga :=make (map[rune ]int );_fgbfd :=make (map[_baf .GID ]int );_fecbcf :=_baf .GID (len (_ceea .Widths ));for _afdce ,_fcff :=range _ceea .Chars {if _fcff > _fecbcf -1{continue ;
};_geedcf :=int (_aecg *float64 (_ceea .Widths [_fcff ]));_efga [_afdce ]=_geedcf ;_fgbfd [_fcff ]=_geedcf ;};_dfce ._cagbc =_efga ;_dfce .DW =_cde .MakeInteger (int64 (_eccd ));_gbcb :=_ffcb (_fgbfd ,uint16 (_fecbcf ));_dfce .W =_cde .MakeIndirectObject (_gbcb );
_bcce :=_cde .MakeDict ();_bcce .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_cde .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_bcce .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_cde .MakeString ("\u0041\u0064\u006fb\u0065"));
_bcce .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_cde .MakeInteger (0));_dfce .CIDSystemInfo =_bcce ;_fdbd :=&PdfFontDescriptor {FontName :_cde .MakeName (_ceea .PostScriptName ),Ascent :_cde .MakeFloat (_aecg *float64 (_ceea .TypoAscender )),Descent :_cde .MakeFloat (_aecg *float64 (_ceea .TypoDescender )),CapHeight :_cde .MakeFloat (_aecg *float64 (_ceea .CapHeight )),FontBBox :_cde .MakeArrayFromFloats ([]float64 {_aecg *float64 (_ceea .Xmin ),_aecg *float64 (_ceea .Ymin ),_aecg *float64 (_ceea .Xmax ),_aecg *float64 (_ceea .Ymax )}),ItalicAngle :_cde .MakeFloat (_ceea .ItalicAngle ),MissingWidth :_cde .MakeFloat (_eccd )};
_ddcb ,_dgcb :=_cde .MakeStream (_dfffb ,_cde .NewFlateEncoder ());if _dgcb !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_dgcb );
return nil ,_dgcb ;};_ddcb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cde .MakeInteger (int64 (len (_dfffb ))));_fdbd .FontFile2 =_ddcb ;if _ceea .Bold {_fdbd .StemV =_cde .MakeInteger (120);}else {_fdbd .StemV =_cde .MakeInteger (70);
};_dfcdb :=_bcafe ;if _ceea .IsFixedPitch {_dfcdb |=_decg ;};if _ceea .ItalicAngle !=0{_dfcdb |=_gccgd ;};_fdbd .Flags =_cde .MakeInteger (int64 (_dfcdb ));_dfce ._bbdf =_ceea .PostScriptName ;_dfce ._bceac =_fdbd ;_cegea :=pdfFontType0 {fontCommon :fontCommon {_cfgg :"\u0054\u0079\u0070e\u0030",_bbdf :_ceea .PostScriptName },DescendantFont :&PdfFont {_dcgb :_dfce },Encoding :_cde .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_cecbfe :_ceea .NewEncoder ()};
if len (_ceea .Chars )> 0{_aedca :=make (map[_ega .CharCode ]rune ,len (_ceea .Chars ));for _ddfge ,_ggdee :=range _ceea .Chars {_eaacf :=_ega .CharCode (_ggdee );if _bgaba ,_gfcff :=_aedca [_eaacf ];!_gfcff ||(_gfcff &&_bgaba > _ddfge ){_aedca [_eaacf ]=_ddfge ;
};};_cegea ._dcgd =_ega .NewToUnicodeCMap (_aedca );};_ecga :=PdfFont {_dcgb :&_cegea };return &_ecga ,nil ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_cggfb *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_cggfb ._fbged =colorspace ;};func _aagg (_abda ,_gggb string )string {if _cce .Contains (_abda ,"\u002b"){_afgb :=_cce .Split (_abda ,"\u002b");if len (_afgb )==2{_abda =_afgb [1];
};};return _gggb +"\u002b"+_abda ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_afge *PdfFont )CharcodesToUnicode (charcodes []_fab .CharCode )[]rune {_cbbbd ,_ ,_ :=_afge .CharcodesToUnicodeWithStats (charcodes );return _cbbbd ;};func (_bad *PdfReader )newPdfAnnotationCaretFromDict (_efafe *_cde .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_caa :=PdfAnnotationCaret {};
_deag ,_deae :=_bad .newPdfAnnotationMarkupFromDict (_efafe );if _deae !=nil {return nil ,_deae ;};_caa .PdfAnnotationMarkup =_deag ;_caa .RD =_efafe .Get ("\u0052\u0044");_caa .Sy =_efafe .Get ("\u0053\u0079");return &_caa ,nil ;};func _egbg (_bcdf *_cde .PdfObjectDictionary ,_beag *fontCommon )(*pdfFontType0 ,error ){_baaa ,_dagbc :=_cde .GetArray (_bcdf .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_dagbc {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_beag );
return nil ,_cde .ErrRangeError ;};if _baaa .Len ()!=1{_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_baaa .Len ());return nil ,_cde .ErrRangeError ;
};_gdabf ,_caeeb :=_gbbgf (_baaa .Get (0),false );if _caeeb !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_caeeb ,_beag );
return nil ,_caeeb ;};_dfad :=_bcdf .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_befb :="";_badbb :=_afgcf (_beag );_badbb .DescendantFont =_gdabf ;switch _geedf :=_dfad .(type ){case *_cde .PdfObjectName :_befb ,_dagbc =_cde .GetNameVal (_dfad );
if _dagbc {if _befb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_befb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_badbb ._cecbfe =_fab .NewIdentityTextEncoder (_befb );}else if _ega .IsPredefinedCMap (_befb ){_badbb ._abefe ,_caeeb =_ega .LoadPredefinedCMap (_befb );
if _caeeb !=nil {_fb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_befb ,_caeeb );
};}else {_fb .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_befb );};};case *_cde .PdfObjectStream :if _badbb ._aaegd ==nil {_eaff ,_fdceb :=_ega .NewCIDSystemInfo (_geedf .PdfObjectDictionary .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _fdceb !=nil {_fb .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0043\u0049D\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0076",_fdceb );};_fcabf :=_a .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_eaff .Registry ,_eaff .Ordering );
if _ega .IsPredefinedCMap (_fcabf ){_badbb ._abefe ,_fdceb =_ega .LoadPredefinedCMap (_fcabf );if _fdceb !=nil {_fb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_fcabf ,_fdceb );
};}else {_fcabf =_geedf .PdfObjectDictionary .Get ("\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065").String ();_cbaf ,_becae :=_cde .DecodeStream (_geedf );if _becae !=nil {_fb .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020s\u0074\u0072\u0065a\u006d:\u0020\u0025\u0076",_becae );
return _badbb ,_becae ;};if _bgdf :=_fcabf =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0048"||_fcabf =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0056";_bgdf {_badbb ._abefe ,_becae =_ega .LoadCmapFromData (_cbaf ,_bgdf );
if _becae !=nil {_fb .Log .Debug ("\u0055\u006e\u0061\u0062\u006ce\u0020\u0074\u006f\u0020\u006c\u006f\u0061\u0064\u0020\u0043\u004d\u0061\u0070 \u0066\u0072\u006f\u006d\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076\u0020\u002d\u002d\u0020\u0025\u0076",_becae ,string (_cbaf ));
return _badbb ,_becae ;};_effa :=make (map[_ega .CharCode ]rune ,256);for _gdfac :=0x00;_gdfac <=0xFF;_gdfac ++{_effa [_ega .CharCode (_gdfac )]=rune (_gdfac );};_badbb ._dcgd =_ega .NewToUnicodeCMap (_effa );};};};};if _bacb :=_gdabf .baseFields ()._dcgd ;
_bacb !=nil {if _fdgfd :=_bacb .Name ();_fdgfd =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_fdgfd =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_fdgfd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_fdgfd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_badbb ._cecbfe =_fab .NewCMapEncoder (_befb ,_badbb ._abefe ,_bacb );
};};return _badbb ,nil ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_ddbag *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_fafddd :=RC4_128bit ;if options !=nil {_fafddd =options .Algorithm ;};_bfafg :=_da .PermOwner ;if options !=nil {_bfafg =options .Permissions ;};var _bcgee _ad .Filter ;
switch _fafddd {case RC4_128bit :_bcgee =_ad .NewFilterV2 (16);case AES_128bit :_bcgee =_ad .NewFilterAESV2 ();case AES_256bit :_bcgee =_ad .NewFilterAESV3 ();default:return _a .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_cggd ,_dcgaa ,_bccd :=_cde .PdfCryptNewEncrypt (_bcgee ,userPass ,ownerPass ,_bfafg );if _bccd !=nil {return _bccd ;};_ddbag ._febcf =_cggd ;if _dcgaa .Major !=0{_ddbag .SetVersion (_dcgaa .Major ,_dcgaa .Minor );};_ddbag ._aabaec =_dcgaa .Encrypt ;
_ddbag ._fegb ,_ddbag ._dbbaa =_dcgaa .ID0 ,_dcgaa .ID1 ;_edfcg :=_cde .MakeIndirectObject (_dcgaa .Encrypt );_ddbag ._fdbfc =_edfcg ;_ddbag .addObject (_edfcg );return nil ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_cde .PdfObjectStream ;Data []byte ;_ebcg *_cde .PdfIndirectObject ;_eaeab *_cde .PdfObjectStream ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_ggdeb .Lock ();defer _ggdeb .Unlock ();_bgeff =creator };

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_adfbf DefaultImageHandler )Read (reader _df .Reader )(*Image ,error ){_abeeg ,_ ,_gcfbdb :=_cg .Decode (reader );if _gcfbdb !=nil {_fb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_gcfbdb );
return nil ,_gcfbdb ;};return _adfbf .NewImageFromGoImage (_abeeg );};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_ddag :=NewPdfAnnotation ();_fgaf :=&PdfAnnotationSquare {};_fgaf .PdfAnnotation =_ddag ;_fgaf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddag .SetContext (_fgaf );return _fgaf ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_cedd *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_agcg :=_cedd .GetContentStreamObjs ();wrapContents =wrapContents &&len (_agcg )> 0;_ecaag :=_cde .NewFlateEncoder ();_affdfc :=_cde .MakeArray ();if wrapContents {_acafd ,_aded :=_cde .MakeStream ([]byte ("\u0071\u000a"),_ecaag );
if _aded !=nil {return _aded ;};_affdfc .Append (_acafd );};_affdfc .Append (_agcg ...);if wrapContents {_cbafe ,_fcfb :=_cde .MakeStream ([]byte ("\u000a\u0051\u000a"),_ecaag );if _fcfb !=nil {return _fcfb ;};_affdfc .Append (_cbafe );};_dcffd ,_eccdc :=_cde .MakeStream (cs ,_ecaag );
if _eccdc !=nil {return _eccdc ;};_affdfc .Append (_dcffd );_cedd .Contents =_affdfc ;return nil ;};

// Transform rectangle with the supplied matrix.
func (_ebccb *PdfRectangle )Transform (transformMatrix _bc .Matrix ){_ebccb .Llx ,_ebccb .Lly =transformMatrix .Transform (_ebccb .Llx ,_ebccb .Lly );_ebccb .Urx ,_ebccb .Ury =transformMatrix .Transform (_ebccb .Urx ,_ebccb .Ury );_ebccb .Normalize ();
};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _cde .PdfObject ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_cfedb *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_fdgec *PdfSignature ,_dfdbg Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_cacg *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_gcebab *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_dgbgc *PdfSignature ,_bgdcg Hasher )error ;};

// ToPdfObject implements interface PdfModel.
func (_be *PdfActionGoToE )ToPdfObject ()_cde .PdfObject {_be .PdfAction .ToPdfObject ();_aaea :=_be ._dfb ;_abe :=_aaea .PdfObject .(*_cde .PdfObjectDictionary );_abe .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeGoToE )));if _be .F !=nil {_abe .Set ("\u0046",_be .F .ToPdfObject ());
};_abe .SetIfNotNil ("\u0044",_be .D );_abe .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_be .NewWindow );_abe .SetIfNotNil ("\u0054",_be .T );return _aaea ;};func (_acec *PdfReader )newPdfAnnotationHighlightFromDict (_dea *_cde .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_cggb :=PdfAnnotationHighlight {};
_gcbg ,_fedb :=_acec .newPdfAnnotationMarkupFromDict (_dea );if _fedb !=nil {return nil ,_fedb ;};_cggb .PdfAnnotationMarkup =_gcbg ;_cggb .QuadPoints =_dea .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cggb ,nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_fgeff :=NewPdfOutline ();_fgeff ._aeefd =&_fgeff ;return _fgeff ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};func (_aadf *PdfPage )flattenFieldsWithOpts (_ceefg FieldAppearanceGenerator ,_gdabc *FieldFlattenOpts ,_aaab map[*PdfAnnotation ]bool )error {var _cfab []*PdfAnnotation ;if _ceefg !=nil {if _adaee :=_ceefg .WrapContentStream (_aadf );
_adaee !=nil {return _adaee ;};};_cbecb ,_bcgg :=_aadf .GetAnnotations ();if _bcgg !=nil {return _bcgg ;};for _ ,_fdbcd :=range _cbecb {_cfagd ,_babd :=_aaab [_fdbcd ];if !_babd &&_gdabc .AnnotFilterFunc !=nil {if _ ,_aafde :=_fdbcd .GetContext ().(*PdfAnnotationWidget );
!_aafde {_babd =_gdabc .AnnotFilterFunc (_fdbcd );};};if !_babd {_cfab =append (_cfab ,_fdbcd );continue ;};switch _fdbcd .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_egcbg ,_adefb ,_baae :=_bagca (_fdbcd );if _baae !=nil {if !_cfagd {_fb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_baae );
continue ;};if _egcbg ==nil {continue ;};_acaab :=_aadf .Resources .GenerateXObjectName ();_aadf .Resources .SetXObjectFormByName (_acaab ,_egcbg );_gbad ,_degb ,_baae :=_fadd (_egcbg );if _baae !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_baae );
}else {_afbgf :=_bc .IdentityMatrix ();_afbgf =_afbgf .Translate (-_gbad .Llx ,-_gbad .Lly );if _degb {_dgcc :=0.0;if _gbad .Width ()> 0{_dgcc =_adefb .Width ()/_gbad .Width ();};_gbba :=0.0;if _gbad .Height ()> 0{_gbba =_adefb .Height ()/_gbad .Height ();
};_afbgf =_afbgf .Scale (_dgcc ,_gbba );};_adefb .Transform (_afbgf );};_gaaeb :=_ce .Min (_adefb .Llx ,_adefb .Urx );_faba :=_ce .Min (_adefb .Lly ,_adefb .Ury );var _cggba []string ;_cggba =append (_cggba ,"\u0071");_cggba =append (_cggba ,_a .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_gaaeb ,_faba ));
_cggba =append (_cggba ,_a .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_acaab .String ()));_cggba =append (_cggba ,"\u0051");_gbedd :=_cce .Join (_cggba ,"\u000a");_baae =_aadf .AppendContentStream (_gbedd );if _baae !=nil {return _baae ;};if _egcbg .Resources !=nil {_ebbg ,_baeeg :=_cde .GetDict (_egcbg .Resources .Font );
if _baeeg {for _ ,_dcbb :=range _ebbg .Keys (){if !_aadf .Resources .HasFontByName (_dcbb ){_aadf .Resources .SetFontByName (_dcbb ,_ebbg .Get (_dcbb ));};};};};};if len (_cfab )> 0{_aadf ._babf =_cfab ;}else {_aadf ._babf =[]*PdfAnnotation {};};return nil ;
};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _cde .PdfObject ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_gfbe :=NewPdfAnnotation ();_gcce :=&PdfAnnotationLink {};_gcce .PdfAnnotation =_gfbe ;_gfbe .SetContext (_gcce );return _gcce ;};

// Encoder returns the font's text encoder.
func (_gdec pdfFontType3 )Encoder ()_fab .TextEncoder {return _gdec ._cgefe };

// ToPdfObject implements interface PdfModel.
func (_cdd *PdfActionGoTo )ToPdfObject ()_cde .PdfObject {_cdd .PdfAction .ToPdfObject ();_fbf :=_cdd ._dfb ;_dfg :=_fbf .PdfObject .(*_cde .PdfObjectDictionary );_dfg .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeGoTo )));_dfg .SetIfNotNil ("\u0044",_cdd .D );
return _fbf ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_gcebg *PdfPageResources )GetFontByName (keyName _cde .PdfObjectName )(_cde .PdfObject ,bool ){if _gcebg .Font ==nil {return nil ,false ;};_dfggde ,_gcfgg :=_cde .TraceToDirectObject (_gcebg .Font ).(*_cde .PdfObjectDictionary );if !_gcfgg {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cde .TraceToDirectObject (_gcebg .Font ));
return nil ,false ;};if _fedbf :=_dfggde .Get (keyName );_fedbf !=nil {return _fedbf ,true ;};return nil ,false ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _cde .PdfObject ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_ffceg *PdfPageResourcesColorspaces )Set (key _cde .PdfObjectName ,val PdfColorspace ){if _ ,_cgegc :=_ffceg .Colorspaces [string (key )];!_cgegc {_ffceg .Names =append (_ffceg .Names ,string (key ));};_ffceg .Colorspaces [string (key )]=val ;};func (_cddc *PdfReader )newPdfAnnotationPolyLineFromDict (_bea *_cde .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_bcf :=PdfAnnotationPolyLine {};
_dfa ,_bggg :=_cddc .newPdfAnnotationMarkupFromDict (_bea );if _bggg !=nil {return nil ,_bggg ;};_bcf .PdfAnnotationMarkup =_dfa ;_bcf .Vertices =_bea .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_bcf .LE =_bea .Get ("\u004c\u0045");_bcf .BS =_bea .Get ("\u0042\u0053");
_bcf .IC =_bea .Get ("\u0049\u0043");_bcf .BE =_bea .Get ("\u0042\u0045");_bcf .IT =_bea .Get ("\u0049\u0054");_bcf .Measure =_bea .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_bcf ,nil ;};func _eaccc (_cgddf *XObjectImage )error {if _cgddf .SMask ==nil {return nil ;
};_dcage ,_degde :=_cgddf .SMask .(*_cde .PdfObjectStream );if !_degde {_fb .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _cde .ErrTypeError ;};_aacce :=_dcage .PdfObjectDictionary ;_faafe :=_aacce .Get ("\u004d\u0061\u0074t\u0065");if _faafe ==nil {return nil ;};_eefc ,_aedfa :=_gbbbc (_faafe .(*_cde .PdfObjectArray ));if _aedfa !=nil {return _aedfa ;};_cdacc :=_cde .MakeArrayFromFloats ([]float64 {_eefc });
_aacce .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_cdacc );return nil ;};type fontFile struct{_befd string ;_cdaag string ;_eace _fab .SimpleEncoder ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_gdcdaa *PdfPageResources )SetPatternByName (keyName _cde .PdfObjectName ,pattern _cde .PdfObject )error {if _gdcdaa .Pattern ==nil {_gdcdaa .Pattern =_cde .MakeDict ();};_gfdfea ,_aabfe :=_cde .GetDict (_gdcdaa .Pattern );if !_aabfe {return _cde .ErrTypeError ;
};_gfdfea .Set (keyName ,pattern );return nil ;};func _gaggb ()string {_ggdeb .Lock ();defer _ggdeb .Unlock ();return _cacaae };

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_fcaag *PdfPageResources )SetXObjectFormByName (keyName _cde .PdfObjectName ,xform *XObjectForm )error {_agbba :=xform .ToPdfObject ().(*_cde .PdfObjectStream );_fbad :=_fcaag .SetXObjectByName (keyName ,_agbba );return _fbad ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_fgba *PdfField )Flags ()FieldFlag {var _cagb FieldFlag ;_fgcc ,_ddacc :=_fgba .inherit (func (_cffd *PdfField )bool {if _cffd .Ff !=nil {_cagb =FieldFlag (*_cffd .Ff );return true ;};return false ;});if _ddacc !=nil {_fb .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_ddacc );
};if !_fgcc {_fb .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _cagb ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gcbfa pdfCIDFontType2 )GetRuneMetrics (r rune )(_baf .CharMetrics ,bool ){_dcgde ,_edbb :=_gcbfa ._cagbc [r ];if !_edbb {_fgge ,_bdfff :=_cde .GetInt (_gcbfa .DW );if !_bdfff {return _baf .CharMetrics {},false ;};_dcgde =int (*_fgge );};return _baf .CharMetrics {Wx :float64 (_dcgde )},true ;
};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// ToPdfObject implements interface PdfModel.
func (_cdge *PdfAnnotationText )ToPdfObject ()_cde .PdfObject {_cdge .PdfAnnotation .ToPdfObject ();_edae :=_cdge ._gfg ;_bfed :=_edae .PdfObject .(*_cde .PdfObjectDictionary );if _cdge .PdfAnnotationMarkup !=nil {_cdge .PdfAnnotationMarkup .appendToPdfDictionary (_bfed );
};_bfed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0054\u0065\u0078\u0074"));_bfed .SetIfNotNil ("\u004f\u0070\u0065\u006e",_cdge .Open );_bfed .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cdge .Name );_bfed .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_cdge .State );
_bfed .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_cdge .StateModel );return _edae ;};func _bdebfb ()_gdd .Time {_ggdeb .Lock ();defer _ggdeb .Unlock ();return _faaae };

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_cde .PdfObjectArray ;TI *_cde .PdfObjectInteger ;I *_cde .PdfObjectArray ;};

// NewPdfAcroForm returns a new PdfAcroForm with an initialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_ddcfd :_cde .MakeIndirectObject (_cde .MakeDict ())};};

// ToPdfObject implements interface PdfModel.
func (_aeada *PdfTransformParamsDocMDP )ToPdfObject ()_cde .PdfObject {_ffded :=_cde .MakeDict ();_ffded .SetIfNotNil ("\u0054\u0079\u0070\u0065",_aeada .Type );_ffded .SetIfNotNil ("\u0056",_aeada .V );_ffded .SetIfNotNil ("\u0050",_aeada .P );return _ffded ;
};func (_fcdg *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// String returns a human readable description of `fontfile`.
func (_bgdga *fontFile )String ()string {_bbceg :="\u005b\u004e\u006f\u006e\u0065\u005d";if _bgdga ._eace !=nil {_bbceg =_bgdga ._eace .String ();};return _a .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_bgdga ._befd ,_bbceg );
};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_fdeeg *PdfSignature )GetDocMDPPermission ()(_fd .DocMDPPermission ,bool ){for _ ,_bgcf :=range _fdeeg .Reference .Elements (){if _bcad ,_ffgaca :=_cde .GetDict (_bgcf );_ffgaca {if _dfdcc ,_fdgeb :=_cde .GetNameVal (_bcad .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_fdgeb &&_dfdcc =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _edade ,_ecebd :=_cde .GetDict (_bcad .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_ecebd {if P ,_dgcbc :=_cde .GetIntVal (_edade .Get ("\u0050"));
_dgcbc {return _fd .DocMDPPermission (P ),true ;};};};};};return 0,false ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_efefb *PdfColorspaceCalRGB )ToPdfObject ()_cde .PdfObject {_agag :=&_cde .PdfObjectArray {};_agag .Append (_cde .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_aadb :=_cde .MakeDict ();if _efefb .WhitePoint !=nil {_acd :=_cde .MakeArray (_cde .MakeFloat (_efefb .WhitePoint [0]),_cde .MakeFloat (_efefb .WhitePoint [1]),_cde .MakeFloat (_efefb .WhitePoint [2]));
_aadb .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_acd );}else {_fb .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _efefb .BlackPoint !=nil {_dcaf :=_cde .MakeArray (_cde .MakeFloat (_efefb .BlackPoint [0]),_cde .MakeFloat (_efefb .BlackPoint [1]),_cde .MakeFloat (_efefb .BlackPoint [2]));_aadb .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_dcaf );
};if _efefb .Gamma !=nil {_efff :=_cde .MakeArray (_cde .MakeFloat (_efefb .Gamma [0]),_cde .MakeFloat (_efefb .Gamma [1]),_cde .MakeFloat (_efefb .Gamma [2]));_aadb .Set ("\u0047\u0061\u006dm\u0061",_efff );};if _efefb .Matrix !=nil {_dfdb :=_cde .MakeArray (_cde .MakeFloat (_efefb .Matrix [0]),_cde .MakeFloat (_efefb .Matrix [1]),_cde .MakeFloat (_efefb .Matrix [2]),_cde .MakeFloat (_efefb .Matrix [3]),_cde .MakeFloat (_efefb .Matrix [4]),_cde .MakeFloat (_efefb .Matrix [5]),_cde .MakeFloat (_efefb .Matrix [6]),_cde .MakeFloat (_efefb .Matrix [7]),_cde .MakeFloat (_efefb .Matrix [8]));
_aadb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dfdb );};_agag .Append (_aadb );if _efefb ._aacb !=nil {_efefb ._aacb .PdfObject =_agag ;return _efefb ._aacb ;};return _agag ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_beea *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_cdbecd :=_afa .NewReader (img .getBase ());_fbag :=_bbb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_beea .AlternateSpace .GetNumComponents (),nil ,img ._cbcfe ,nil );
_egcc :=_afa .NewWriter (_fbag );_eeba :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;_fb .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_fb .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_beea .TintTransform );_deagee :=_beea .AlternateSpace .DecodeArray ();var (_ffad uint32 ;_ebaa error ;);for {_ffad ,_ebaa =_cdbecd .ReadSample ();
if _ebaa ==_df .EOF {break ;};if _ebaa !=nil {return img ,_ebaa ;};_eada :=float64 (_ffad )/_eeba ;_ggdd ,_ddebg :=_beea .TintTransform .Evaluate ([]float64 {_eada });if _ddebg !=nil {return img ,_ddebg ;};for _bdgb ,_ccee :=range _ggdd {_aadba :=_bbb .LinearInterpolate (_ccee ,_deagee [_bdgb *2],_deagee [_bdgb *2+1],0,1);
if _ddebg =_egcc .WriteSample (uint32 (_aadba *_eeba ));_ddebg !=nil {return img ,_ddebg ;};};};return _beea .AlternateSpace .ImageToRGB (_edggb (&_fbag ));};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_bgd :=NewPdfAction ();_fg :=&PdfActionResetForm {};_fg .PdfAction =_bgd ;_bgd .SetContext (_fg );return _fg ;};func (_baac *LTV )validateSig (_dbbec *PdfSignature )error {if _dbbec ==nil ||_dbbec .Contents ==nil ||len (_dbbec .Contents .Bytes ())==0{return _a .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_dbbec );
};return nil ;};func _cgefg (_egfd StdFontName )(pdfFontSimple ,error ){_aggbe ,_cbbb :=_baf .NewStdFontByName (_egfd );if !_cbbb {return pdfFontSimple {},ErrFontNotSupported ;};_aadg :=_eeef (_aggbe );return _aadg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fage *PdfAnnotationProjection )ToPdfObject ()_cde .PdfObject {_fage .PdfAnnotation .ToPdfObject ();_fbbd :=_fage ._gfg ;_cdcb :=_fbbd .PdfObject .(*_cde .PdfObjectDictionary );_fage .PdfAnnotationMarkup .appendToPdfDictionary (_cdcb );return _fbbd ;
};func (_edee *PdfReader )newPdfAnnotationSquareFromDict (_bff *_cde .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_addcf :=PdfAnnotationSquare {};_eda ,_aacg :=_edee .newPdfAnnotationMarkupFromDict (_bff );if _aacg !=nil {return nil ,_aacg ;};_addcf .PdfAnnotationMarkup =_eda ;
_addcf .BS =_bff .Get ("\u0042\u0053");_addcf .IC =_bff .Get ("\u0049\u0043");_addcf .BE =_bff .Get ("\u0042\u0045");_addcf .RD =_bff .Get ("\u0052\u0044");return &_addcf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_beg *PdfAnnotationCircle )ToPdfObject ()_cde .PdfObject {_beg .PdfAnnotation .ToPdfObject ();_aec :=_beg ._gfg ;_eaaf :=_aec .PdfObject .(*_cde .PdfObjectDictionary );_beg .PdfAnnotationMarkup .appendToPdfDictionary (_eaaf );_eaaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_eaaf .SetIfNotNil ("\u0042\u0053",_beg .BS );_eaaf .SetIfNotNil ("\u0049\u0043",_beg .IC );_eaaf .SetIfNotNil ("\u0042\u0045",_beg .BE );_eaaf .SetIfNotNil ("\u0052\u0044",_beg .RD );return _aec ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_abfb *PdfFieldButton )GetType ()ButtonType {_eegf :=ButtonTypeCheckbox ;if _abfb .Ff !=nil {if (uint32 (*_abfb .Ff )&FieldFlagPushbutton .Mask ())> 0{_eegf =ButtonTypePush ;}else if (uint32 (*_abfb .Ff )&FieldFlagRadio .Mask ())> 0{_eegf =ButtonTypeRadio ;
};};return _eegf ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ggcfag pdfFontType0 )GetRuneMetrics (r rune )(_baf .CharMetrics ,bool ){if _ggcfag .DescendantFont ==nil {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_ggcfag );
return _baf .CharMetrics {},false ;};return _ggcfag .DescendantFont .GetRuneMetrics (r );};func _afbc ()string {_ggdeb .Lock ();defer _ggdeb .Unlock ();_ggeee :=_af .GetLicenseKey ();if len (_fdbbf )> 0&&(_ggeee .IsLicensed ()||_febcdg ){return _fdbbf ;
};return _a .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_cebca (),_ggeee .TypeToString ());};func (_afgca *PdfWriter )checkPendingObjects (){for _dbbb ,_cfbed :=range _afgca ._ffed {if !_afgca .hasObject (_dbbb ){_fb .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_dbbb ,_dbbb ,_dbbb );
for _ ,_adfga :=range _cfbed {for _ ,_fbgca :=range _adfga .Keys (){_cebbe :=_adfga .Get (_fbgca );if _cebbe ==_dbbb {_fb .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_adfga .Set (_fbgca ,_cde .MakeNull ());break ;};};};};};};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_dfeb *PdfOutlineTreeNode )ToPdfObject ()_cde .PdfObject {return _dfeb .GetContext ().ToPdfObject ();};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_cbg :=NewPdfAction ();_ec :=&PdfActionThread {};_ec .PdfAction =_cbg ;_cbg .SetContext (_ec );return _ec ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_dcdb *PdfInfo )AddCustomInfo (name string ,value string )error {if _dcdb ._bdcd ==nil {_dcdb ._bdcd =_cde .MakeDict ();};if _ ,_bbce :=_deeb [name ];_bbce {return _a .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_dcdb ._bdcd .SetIfNotNil (*_cde .MakeName (name ),_cde .MakeString (value ));return nil ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_cde .PdfObjectName ;Colorants _cde .PdfObject ;Process _cde .PdfObject ;MixingHints _cde .PdfObject ;_gcfba *_cde .PdfIndirectObject ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_addfg :=&XObjectImage {};_ecea :=&_cde .PdfObjectStream {};_ecea .PdfObjectDictionary =_cde .MakeDict ();_addfg ._aaaag =_ecea ;return _addfg ;};func (_gbdf PdfFont )actualFont ()pdfFont {if _gbdf ._dcgb ==nil {_fb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gbdf );
};return _gbdf ._dcgb ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_bfde *PdfReader )GetTrailer ()(*_cde .PdfObjectDictionary ,error ){_geedcb :=_bfde ._fdccd .GetTrailer ();if _geedcb ==nil {return nil ,_gf .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _geedcb ,nil ;
};func (_baecfb *PdfWriter )addObjects (_dagec _cde .PdfObject )error {_fb .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _dbgda ,_caafd :=_dagec .(*_cde .PdfIndirectObject );_caafd {_fb .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");
_fb .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_dagec ,_dbgda );_fb .Log .Trace ("\u002d\u0020\u0025\u0073",_dbgda .PdfObject );if _baecfb .addObject (_dbgda ){_cdedf :=_baecfb .addObjects (_dbgda .PdfObject );if _cdedf !=nil {return _cdedf ;
};};return nil ;};if _gbgga ,_ebbbg :=_dagec .(*_cde .PdfObjectStream );_ebbbg {_fb .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_fb .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_dagec ,_dagec );if _baecfb .addObject (_gbgga ){_fgefc :=_baecfb .addObjects (_gbgga .PdfObjectDictionary );
if _fgefc !=nil {return _fgefc ;};};return nil ;};if _ffeea ,_egaec :=_dagec .(*_cde .PdfObjectDictionary );_egaec {_fb .Log .Trace ("\u0044\u0069\u0063\u0074");_fb .Log .Trace ("\u002d\u0020\u0025\u0073",_dagec );for _ ,_eddc :=range _ffeea .Keys (){_bdbde :=_ffeea .Get (_eddc );
if _edfge ,_cbcge :=_bdbde .(*_cde .PdfObjectReference );_cbcge {_bdbde =_edfge .Resolve ();_ffeea .Set (_eddc ,_bdbde );};if _eddc !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _ffdeg :=_baecfb .addObjects (_bdbde );_ffdeg !=nil {return _ffdeg ;};}else {if _ ,_bdacd :=_bdbde .(*_cde .PdfObjectNull );
_bdacd {continue ;};if _egabb :=_baecfb .hasObject (_bdbde );!_egabb {_fb .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_bdbde ,_bdbde ,_bdbde );
_baecfb ._ffed [_bdbde ]=append (_baecfb ._ffed [_bdbde ],_ffeea );};};};return nil ;};if _gefbc ,_fgbg :=_dagec .(*_cde .PdfObjectArray );_fgbg {_fb .Log .Trace ("\u0041\u0072\u0072a\u0079");_fb .Log .Trace ("\u002d\u0020\u0025\u0073",_dagec );if _gefbc ==nil {return _gf .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _daeff ,_bbgga :=range _gefbc .Elements (){if _gecfb ,_ebeeb :=_bbgga .(*_cde .PdfObjectReference );_ebeeb {_bbgga =_gecfb .Resolve ();_gefbc .Set (_daeff ,_bbgga );};if _dfgd :=_baecfb .addObjects (_bbgga );_dfgd !=nil {return _dfgd ;};};return nil ;
};if _ ,_gcgeb :=_dagec .(*_cde .PdfObjectReference );_gcgeb {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_dagec );
return _gf .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfff *PdfAnnotationStrikeOut )ToPdfObject ()_cde .PdfObject {_dfff .PdfAnnotation .ToPdfObject ();_fbd :=_dfff ._gfg ;_dca :=_fbd .PdfObject .(*_cde .PdfObjectDictionary );_dfff .PdfAnnotationMarkup .appendToPdfDictionary (_dca );_dca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_dca .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dfff .QuadPoints );return _fbd ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_ggbf *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// ColorToRGB converts a CalGray color to an RGB color.
func (_cgcf *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_caf ,_gfbg :=color .(*PdfColorCalGray );if !_gfbg {_fb .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_caf .Val ();X :=_cgcf .WhitePoint [0]*_ce .Pow (ANorm ,_cgcf .Gamma );Y :=_cgcf .WhitePoint [1]*_ce .Pow (ANorm ,_cgcf .Gamma );Z :=_cgcf .WhitePoint [2]*_ce .Pow (ANorm ,_cgcf .Gamma );
_abadf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cadab :=-0.969256*X +1.875992*Y +0.041556*Z ;_fadg :=0.055648*X +-0.204043*Y +1.057311*Z ;_abadf =_ce .Min (_ce .Max (_abadf ,0),1.0);_cadab =_ce .Min (_ce .Max (_cadab ,0),1.0);_fadg =_ce .Min (_ce .Max (_fadg ,0),1.0);
return NewPdfColorDeviceRGB (_abadf ,_cadab ,_fadg ),nil ;};

// Items returns all children outline items.
func (_eaafb *Outline )Items ()[]*OutlineItem {return _eaafb .Entries };

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _cde .PdfObject ;RichMediaContent _cde .PdfObject ;};

// ToPdfObject converts the font to a PDF representation.
func (_baagb *pdfFontType0 )ToPdfObject ()_cde .PdfObject {if _baagb ._dfdg ==nil {_baagb ._dfdg =&_cde .PdfIndirectObject {};};_daagf :=_baagb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_baagb ._dfdg .PdfObject =_daagf ;if _baagb .Encoding !=nil {_daagf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_baagb .Encoding );
}else if _baagb ._cecbfe !=nil {_daagf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_baagb ._cecbfe .ToPdfObject ());};if _baagb .DescendantFont !=nil {_daagf .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_cde .MakeArray (_baagb .DescendantFont .ToPdfObject ()));
};return _baagb ._dfdg ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_afgbb *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_afgbb .ToPdfOutline ().PdfOutlineTreeNode ;};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_eeecd PdfOutputIntentType )String ()string {switch _eeecd {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// Evaluate runs the function on the passed in slice and returns the results.
func (_aecd *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_aecd .NumInputs {_fb .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_gf .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _aecd ._dcacd ==nil {_bdgda :=_aecd .processSamples ();if _bdgda !=nil {return nil ,_bdgda ;};};_ccage :=_aecd .Encode ;if _ccage ==nil {_ccage =[]float64 {};
for _gfafb :=0;_gfafb < len (_aecd .Size );_gfafb ++{_ccage =append (_ccage ,0);_ccage =append (_ccage ,float64 (_aecd .Size [_gfafb ]-1));};};_ceagf :=_aecd .Decode ;if _ceagf ==nil {_ceagf =_aecd .Range ;};_baaf :=make ([]int ,len (x ));for _fbbgg :=0;
_fbbgg < len (x );_fbbgg ++{_befba :=x [_fbbgg ];_eafc :=_ce .Min (_ce .Max (_befba ,_aecd .Domain [2*_fbbgg ]),_aecd .Domain [2*_fbbgg +1]);_aaag :=_bbb .LinearInterpolate (_eafc ,_aecd .Domain [2*_fbbgg ],_aecd .Domain [2*_fbbgg +1],_ccage [2*_fbbgg ],_ccage [2*_fbbgg +1]);
_dceac :=_ce .Min (_ce .Max (_aaag ,0),float64 (_aecd .Size [_fbbgg ]-1));_cfbb :=int (_ce .Floor (_dceac +0.5));if _cfbb < 0{_cfbb =0;}else if _cfbb > _aecd .Size [_fbbgg ]{_cfbb =_aecd .Size [_fbbgg ]-1;};_baaf [_fbbgg ]=_cfbb ;};_cgde :=_baaf [0];for _gggbd :=1;
_gggbd < _aecd .NumInputs ;_gggbd ++{_bebde :=_baaf [_gggbd ];for _gegeb :=0;_gegeb < _gggbd ;_gegeb ++{_bebde *=_aecd .Size [_gegeb ];};_cgde +=_bebde ;};_cgde *=_aecd .NumOutputs ;var _cacdg []float64 ;for _ddfff :=0;_ddfff < _aecd .NumOutputs ;_ddfff ++{_cecbfg :=_cgde +_ddfff ;
if _cecbfg >=len (_aecd ._dcacd ){_fb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_fbceg :=_aecd ._dcacd [_cecbfg ];_gbacf :=_bbb .LinearInterpolate (float64 (_fbceg ),0,_ce .Pow (2,float64 (_aecd .BitsPerSample )),_ceagf [2*_ddfff ],_ceagf [2*_ddfff +1]);_gbca :=_ce .Min (_ce .Max (_gbacf ,_aecd .Range [2*_ddfff ]),_aecd .Range [2*_ddfff +1]);
_cacdg =append (_cacdg ,_gbca );};return _cacdg ,nil ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_gdfa *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_bfgg :=func (_eaagc float64 )float64 {if _eaagc >=6.0/29{return _eaagc *_eaagc *_eaagc ;};return 108.0/841*(_eaagc -4.0/29.0);};_afcea :=img ._gdbc ;if len (_afcea )!=6{_fb .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_afcea =_gdfa .DecodeArray ();};_cede :=_afa .NewReader (img .getBase ());_daea :=_bbb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._cbcfe ,img ._gdbc );_bbggc :=_afa .NewWriter (_daea );_afbgc :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;
_bbfg :=make ([]uint32 ,3);var (_fbbdg error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_beeg ,_gaeg ,_feeaf float64 ;);for {_fbbdg =_cede .ReadSamples (_bbfg );if _fbbdg ==_df .EOF {break ;}else if _fbbdg !=nil {return img ,_fbbdg ;};Ls =float64 (_bbfg [0])/_afbgc ;
As =float64 (_bbfg [1])/_afbgc ;Bs =float64 (_bbfg [2])/_afbgc ;Ls =_bbb .LinearInterpolate (Ls ,0.0,1.0,_afcea [0],_afcea [1]);As =_bbb .LinearInterpolate (As ,0.0,1.0,_afcea [2],_afcea [3]);Bs =_bbb .LinearInterpolate (Bs ,0.0,1.0,_afcea [4],_afcea [5]);
L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_gdfa .WhitePoint [0]*_bfgg (L );Y =_gdfa .WhitePoint [1]*_bfgg (M );Z =_gdfa .WhitePoint [2]*_bfgg (N );_beeg =3.240479*X +-1.537150*Y +-0.498535*Z ;_gaeg =-0.969256*X +1.875992*Y +0.041556*Z ;
_feeaf =0.055648*X +-0.204043*Y +1.057311*Z ;_beeg =_ce .Min (_ce .Max (_beeg ,0),1.0);_gaeg =_ce .Min (_ce .Max (_gaeg ,0),1.0);_feeaf =_ce .Min (_ce .Max (_feeaf ,0),1.0);_bbfg [0]=uint32 (_beeg *_afbgc );_bbfg [1]=uint32 (_gaeg *_afbgc );_bbfg [2]=uint32 (_feeaf *_afbgc );
if _fbbdg =_bbggc .WriteSamples (_bbfg );_fbbdg !=nil {return img ,_fbbdg ;};};return _edggb (&_daea ),nil ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_fffgd *PdfReader )GetEncryptionMethod ()string {_acag :=_fffgd ._fdccd .GetCrypter ();return _acag .String ();};

// Width returns the width of `rect`.
func (_befbfd *PdfRectangle )Width ()float64 {return _ce .Abs (_befbfd .Urx -_befbfd .Llx )};func _cfcga (_cecc *_cde .PdfObjectStream )(*PdfFunctionType0 ,error ){_edfc :=&PdfFunctionType0 {};_edfc ._eebg =_cecc ;_eefda :=_cecc .PdfObjectDictionary ;_eaab ,_gegb :=_cde .TraceToDirectObject (_eefda .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cde .PdfObjectArray );
if !_gegb {_fb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _eaab .Len ()< 0||_eaab .Len ()%2!=0{_fb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_gf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_edfc .NumInputs =_eaab .Len ()/2;_ccdbc ,_cggfg :=_eaab .ToFloat64Array ();if _cggfg !=nil {return nil ,_cggfg ;};_edfc .Domain =_ccdbc ;_eaab ,_gegb =_cde .TraceToDirectObject (_eefda .Get ("\u0052\u0061\u006eg\u0065")).(*_cde .PdfObjectArray );if !_gegb {_fb .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _eaab .Len ()< 0||_eaab .Len ()%2!=0{return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_edfc .NumOutputs =_eaab .Len ()/2;_fcefd ,_cggfg :=_eaab .ToFloat64Array ();if _cggfg !=nil {return nil ,_cggfg ;};_edfc .Range =_fcefd ;_eaab ,_gegb =_cde .TraceToDirectObject (_eefda .Get ("\u0053\u0069\u007a\u0065")).(*_cde .PdfObjectArray );if !_gegb {_fb .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dcdga ,_cggfg :=_eaab .ToIntegerArray ();
if _cggfg !=nil {return nil ,_cggfg ;};if len (_dcdga )!=_edfc .NumInputs {_fb .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edfc .Size =_dcdga ;_geggeg ,_gegb :=_cde .TraceToDirectObject (_eefda .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_cde .PdfObjectInteger );
if !_gegb {_fb .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_geggeg !=1&&*_geggeg !=2&&*_geggeg !=4&&*_geggeg !=8&&*_geggeg !=12&&*_geggeg !=16&&*_geggeg !=24&&*_geggeg !=32{_fb .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_geggeg );
return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edfc .BitsPerSample =int (*_geggeg );_edfc .Order =1;_cecbb ,_gegb :=_cde .TraceToDirectObject (_eefda .Get ("\u004f\u0072\u0064e\u0072")).(*_cde .PdfObjectInteger );
if _gegb {if *_cecbb !=1&&*_cecbb !=3{_fb .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_cecbb );return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edfc .Order =int (*_cecbb );
};_eaab ,_gegb =_cde .TraceToDirectObject (_eefda .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_cde .PdfObjectArray );if _gegb {_dacdf ,_ecfeg :=_eaab .ToFloat64Array ();if _ecfeg !=nil {return nil ,_ecfeg ;};_edfc .Encode =_dacdf ;};_eaab ,_gegb =_cde .TraceToDirectObject (_eefda .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_cde .PdfObjectArray );
if _gegb {_ggdf ,_cgebb :=_eaab .ToFloat64Array ();if _cgebb !=nil {return nil ,_cgebb ;};_edfc .Decode =_ggdf ;};_accdf ,_cggfg :=_cde .DecodeStream (_cecc );if _cggfg !=nil {return nil ,_cggfg ;};_edfc ._cgebc =_accdf ;return _edfc ,nil ;};func (_dbbce *PdfWriter )checkCrossReferenceStream ()bool {_ecaaf :=_dbbce ._dgccdd .Major > 1||(_dbbce ._dgccdd .Major ==1&&_dbbce ._dgccdd .Minor > 4);
if _dbbce ._bacg !=nil {_ecaaf =*_dbbce ._bacg ;};return _ecaaf ;};

// SetFillImage attach a model.Image to push button.
func (_dadb *PdfFieldButton )SetFillImage (image *Image ){if _dadb .IsPush (){_dadb ._ecda =image ;};};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_gafd *PdfPage )error ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_aabf :=&PdfColorspaceSpecialSeparation {};return _aabf ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_cgage :=&PdfOutline {_abcb :_cde .MakeIndirectObject (_cde .MakeDict ())};_cgage ._aeefd =_cgage ;return _cgage ;};func _bagca (_acbc *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_ccgcdb ,_bbcf :=_cde .GetDict (_acbc .AP );
if !_bbcf {return nil ,nil ,_gf .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _ccgcdb ==nil {return nil ,nil ,nil ;};_edca ,_bbcf :=_cde .GetArray (_acbc .Rect );
if !_bbcf ||_edca .Len ()!=4{return nil ,nil ,_gf .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_cadg ,_aada :=NewPdfRectangle (*_edca );if _aada !=nil {return nil ,nil ,_aada ;};_gbfg :=_cde .TraceToDirectObject (_ccgcdb .Get ("\u004e"));
switch _deeba :=_gbfg .(type ){case *_cde .PdfObjectStream :_cegd :=_deeba ;_dcff ,_ababb :=NewXObjectFormFromStream (_cegd );return _dcff ,_cadg ,_ababb ;case *_cde .PdfObjectDictionary :_fege :=_deeba ;var _cdfbe _cde .PdfObject ;_abfg ,_fbeg :=_cde .GetName (_acbc .AS );
if _fbeg {_cdfbe =_fege .Get (*_abfg );}else {_bbdbb :=_acbc ._gfg .PdfObject .(*_cde .PdfObjectDictionary );if _ebbb :=_bbdbb .Get ("\u0056");_ebbb !=nil {_cdfbe =_fege .Get (_cde .PdfObjectName (_ebbb .String ()));};};if _cdfbe ==nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_bgfd ,_fbeg :=_cde .GetStream (_cdfbe );if !_fbeg {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_abfg );
return nil ,nil ,_gf .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_dbccd ,_cedf :=NewXObjectFormFromStream (_bgfd );return _dbccd ,_cadg ,_cedf ;};_fb .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_gbfg );
return nil ,nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_dceee _df .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_bbega _cg .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_dedgb _cg .Image )(*Image ,error );

// Compress an image.
Compress (_geafb *Image ,_fbbbf int64 )(*Image ,error );};func (_acbd *PdfReader )loadAnnotations (_beabb _cde .PdfObject )([]*PdfAnnotation ,error ){_eagee ,_fffg :=_cde .GetArray (_beabb );if !_fffg {return nil ,_a .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _fdfcg []*PdfAnnotation ;for _ ,_gdgecc :=range _eagee .Elements (){_gdgecc =_cde .ResolveReference (_gdgecc );if _ ,_dcbf :=_gdgecc .(*_cde .PdfObjectNull );_dcbf {continue ;};_bgggg ,_dagfg :=_gdgecc .(*_cde .PdfObjectDictionary );_gdfd ,_efbc :=_gdgecc .(*_cde .PdfIndirectObject );
if _dagfg {_gdfd =&_cde .PdfIndirectObject {};_gdfd .PdfObject =_bgggg ;}else {if !_efbc {return nil ,_a .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_dcgfc ,_gcfg :=_acbd .newPdfAnnotationFromIndirectObject (_gdfd );if _gcfg !=nil {return nil ,_gcfg ;};switch _dcbcb :=_dcgfc .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_dgabfb :=range _acbd .AcroForm .AllFields (){if _dgabfb ._gfed ==_dcbcb .Parent {_dcbcb ._aad =_dgabfb ;
break ;};};};if _dcgfc !=nil {_fdfcg =append (_fdfcg ,_dcgfc );};};return _fdfcg ,nil ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_fac :=NewPdfAnnotation ();_cec :=&PdfAnnotationPolyLine {};_cec .PdfAnnotation =_fac ;_cec .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fac .SetContext (_cec );return _cec ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _cde .PdfObject ;Name _cde .PdfObject ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_dgdfa *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_gegef ,_ddefb :=_cde .GetDict (_dgdfa ._aaeef .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_ddefb {_gegef =_cde .MakeDict ();_dgdfa ._aaeef .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_gegef );
};_cgfac ,_ddefb :=_cde .GetDict (_gegef .Get (_cde .PdfObjectName (extName )));if !_ddefb {_cgfac =_cde .MakeDict ();_gegef .Set (_cde .PdfObjectName (extName ),_cgfac );};if _gdacg ,_ :=_cde .GetNameVal (_cgfac .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_gdacg !=baseVersion {_cgfac .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_cde .MakeName (baseVersion ));};if _efbfd ,_ :=_cde .GetIntVal (_cgfac .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_efbfd !=extLevel {_cgfac .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_cde .MakeInteger (int64 (extLevel )));};};

// NewEmbeddedFile constructs a new EmbeddedFile object from supplied file.
// The file type of the file would be detected automatically.
func NewEmbeddedFile (path string )(*EmbeddedFile ,error ){_bacd ,_fcbg :=_cd .ReadFile (path );if _fcbg !=nil {return nil ,_fcbg ;};_feda :=_aaf .Detect (_bacd );_adgc :=_eg .Sum (_bacd );_afaa :=&EmbeddedFile {Name :_dg .Base (path ),Content :_bacd ,FileType :_feda .String (),Hash :_f .EncodeToString (_adgc [:])};
return _afaa ,nil ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_fdff *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func (_cccb *PdfReader )newPdfActionSoundFromDict (_acaf *_cde .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_acaf .Get ("\u0053\u006f\u0075n\u0064"),Volume :_acaf .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_acaf .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_acaf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_acaf .Get ("\u004d\u0069\u0078")},nil ;
};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_cdfee *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_fb .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_fb .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_fb .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_fb .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_effea ,_afad :=_bbb .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cbcfe ,img ._gdbc );if _afad !=nil {return Image {},_afad ;};_fccd ,_afad :=_bbb .NRGBAConverter .Convert (_effea );
if _afad !=nil {return Image {},_afad ;};return _edggb (_fccd .Base ()),nil ;};func (_ggdea *PdfWriter )getPdfVersion ()string {return _a .Sprintf ("\u0025\u0064\u002e%\u0064",_ggdea ._dgccdd .Major ,_ggdea ._dgccdd .Minor );};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_deafg *PdfWriter )SetPageLabels (pageLabels _cde .PdfObject )error {if pageLabels ==nil {return nil ;};_fb .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_deafg ._aaeef .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _deafg .addObjects (pageLabels );};

// ToPdfObject implements interface PdfModel.
func (_egbf *PdfFilespec )ToPdfObject ()_cde .PdfObject {_afeec :=_egbf .getDict ();_afeec .Clear ();_afeec .Set ("\u0054\u0079\u0070\u0065",_cde .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_afeec .SetIfNotNil ("\u0046\u0053",_egbf .FS );
_afeec .SetIfNotNil ("\u0046",_egbf .F );_afeec .SetIfNotNil ("\u0055\u0046",_egbf .UF );_afeec .SetIfNotNil ("\u0044\u004f\u0053",_egbf .DOS );_afeec .SetIfNotNil ("\u004d\u0061\u0063",_egbf .Mac );_afeec .SetIfNotNil ("\u0055\u006e\u0069\u0078",_egbf .Unix );
_afeec .SetIfNotNil ("\u0049\u0044",_egbf .ID );_afeec .SetIfNotNil ("\u0056",_egbf .V );_afeec .SetIfNotNil ("\u0045\u0046",_egbf .EF );_afeec .SetIfNotNil ("\u0052\u0046",_egbf .RF );_afeec .SetIfNotNil ("\u0044\u0065\u0073\u0063",_egbf .Desc );_afeec .SetIfNotNil ("\u0043\u0049",_egbf .CI );
_afeec .SetIfNotNil ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070",_egbf .AFRelationship );return _egbf ._dcef ;};func _ccdb (_bcgbf *_cde .PdfObjectDictionary ){_fbabb ,_eaccd :=_cde .GetArray (_bcgbf .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));
_ecec ,_ecbcca :=_cde .GetIntVal (_bcgbf .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_ebae ,_fdced :=_cde .GetIntVal (_bcgbf .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _eaccd &&_ecbcca &&_fdced {_fecbc :=_fbabb .Len ();if _fecbc !=_ebae -_ecec +1{_fb .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_fecbc ,_ebae );
_fdfc :=_cde .PdfObjectInteger (_ecec +_fecbc -1);_bcgbf .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_fdfc );};};};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_aggbbd *PdfReader )GetObjectNums ()[]int {return _aggbbd ._fdccd .GetObjectNums ()};

// ToPdfObject implements model.PdfModel interface.
func (_edgc *PdfOutputIntent )ToPdfObject ()_cde .PdfObject {if _edgc ._aadgd ==nil {_edgc ._aadgd =_cde .MakeDict ();};_dbgdd :=_edgc ._aadgd ;if _edgc .Type !=""{_dbgdd .Set ("\u0054\u0079\u0070\u0065",_cde .MakeName (_edgc .Type ));};_dbgdd .Set ("\u0053",_cde .MakeName (_edgc .S .String ()));
if _edgc .OutputCondition !=""{_dbgdd .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_cde .MakeString (_edgc .OutputCondition ));};_dbgdd .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_cde .MakeString (_edgc .OutputConditionIdentifier ));
_dbgdd .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_cde .MakeString (_edgc .RegistryName ));if _edgc .Info !=""{_dbgdd .Set ("\u0049\u006e\u0066\u006f",_cde .MakeString (_edgc .Info ));};if len (_edgc .DestOutputProfile )!=0{_ggdca ,_fbea :=_cde .MakeStream (_edgc .DestOutputProfile ,_cde .NewFlateEncoder ());
if _fbea !=nil {_fb .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_fbea );
};_ggdca .PdfObjectDictionary .Set ("\u004e",_cde .MakeInteger (int64 (_edgc .ColorComponents )));_geec :=make ([]float64 ,_edgc .ColorComponents *2);for _cdffc :=0;_cdffc < _edgc .ColorComponents *2;_cdffc ++{_abdaf :=0.0;if _cdffc %2!=0{_abdaf =1.0;};
_geec [_cdffc ]=_abdaf ;};_ggdca .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_cde .MakeArrayFromFloats (_geec ));_dbgdd .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_ggdca );};return _dbgdd ;
};func (_ecfeb *PdfWriter )setCatalogVersion (){_ecfeb ._aaeef .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_cde .MakeName (_a .Sprintf ("\u0025\u0064\u002e%\u0064",_ecfeb ._dgccdd .Major ,_ecfeb ._dgccdd .Minor )));};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _cde .PdfObject ;Open _cde .PdfObject ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_dgd :=NewPdfAnnotation ();_ada :=&PdfAnnotationTrapNet {};_ada .PdfAnnotation =_dgd ;_dgd .SetContext (_ada );return _ada ;};func (_ggeeg *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};


// ToPdfObject returns the PDF representation of the colorspace.
func (_acg *PdfColorspaceDeviceGray )ToPdfObject ()_cde .PdfObject {return _cde .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// GetDSS gets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_adec *PdfAppender )GetDSS ()(_baea *DSS ){return _adec ._bdbg };

// SetLocation sets the `Location` field of the signature.
func (_ebed *PdfSignature )SetLocation (location string ){_ebed .Location =_cde .MakeString (location )};

// ToPdfObject returns the PDF representation of the pattern.
func (_dbece *PdfPattern )ToPdfObject ()_cde .PdfObject {_bgabb :=_dbece .getDict ();_bgabb .Set ("\u0054\u0079\u0070\u0065",_cde .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_bgabb .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_cde .MakeInteger (_dbece .PatternType ));
return _dbece ._eebba ;};func (_fgfce *PdfWriter )writeBytes (_eaagd []byte ){if _fgfce ._cbffd !=nil {return ;};_ebfe ,_efebb :=_fgfce ._efccc .Write (_eaagd );_fgfce ._gbacgg +=int64 (_ebfe );_fgfce ._cbffd =_efebb ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_ggdeb .Lock ();defer _ggdeb .Unlock ();_fdbbf =producer };type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_fdccd *_cde .PdfParser ;_gbgbc _cde .PdfObject ;_aedcc *_cde .PdfIndirectObject ;_gfeafe *_cde .PdfObjectDictionary ;_adfcd []*_cde .PdfIndirectObject ;PageList []*PdfPage ;_gfbdc int ;_gaeed *_cde .PdfObjectDictionary ;_cbbd *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_ddcee *Permissions ;_abece map[*PdfReader ]*PdfReader ;_egfff []*PdfReader ;_bgffc *modelManager ;_gbeac bool ;_acfcd map[_cde .PdfObject ]struct{};_dfgb _df .ReadSeeker ;_gbaeb string ;_fbagga bool ;_fafdd *ReaderOpts ;
_ggbga bool ;};func _cdacfe (_aaccge _cde .PdfObject )(*PdfShading ,error ){_ffade :=&PdfShading {};var _egbad *_cde .PdfObjectDictionary ;if _agedb ,_gadc :=_cde .GetIndirect (_aaccge );_gadc {_ffade ._fdbgb =_agedb ;_gdfba ,_cebae :=_agedb .PdfObject .(*_cde .PdfObjectDictionary );
if !_cebae {_fb .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_cde .ErrTypeError ;};_egbad =_gdfba ;}else if _egdf ,_babfd :=_cde .GetStream (_aaccge );
_babfd {_ffade ._fdbgb =_egdf ;_egbad =_egdf .PdfObjectDictionary ;}else if _fedc ,_edac :=_cde .GetDict (_aaccge );_edac {_ffade ._fdbgb =_fedc ;_egbad =_fedc ;}else {_fb .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_aaccge );
return nil ,_cde .ErrTypeError ;};if _egbad ==nil {_fb .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_gf .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_aaccge =_egbad .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _aaccge ==nil {_fb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aaccge =_cde .TraceToDirectObject (_aaccge );_gedcb ,_eecf :=_aaccge .(*_cde .PdfObjectInteger );if !_eecf {_fb .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_aaccge );
return nil ,_cde .ErrTypeError ;};if *_gedcb < 1||*_gedcb > 7{_fb .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_gedcb );
return nil ,_cde .ErrTypeError ;};_ffade .ShadingType =_gedcb ;_aaccge =_egbad .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _aaccge ==nil {_fb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_efdea ,_ccedb :=NewPdfColorspaceFromPdfObject (_aaccge );if _ccedb !=nil {_fb .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_ccedb );
return nil ,_ccedb ;};_ffade .ColorSpace =_efdea ;_aaccge =_egbad .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _aaccge !=nil {_aaccge =_cde .TraceToDirectObject (_aaccge );_fbbfa ,_effd :=_aaccge .(*_cde .PdfObjectArray );if !_effd {_fb .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_aaccge );
return nil ,_cde .ErrTypeError ;};_ffade .Background =_fbbfa ;};_aaccge =_egbad .Get ("\u0042\u0042\u006f\u0078");if _aaccge !=nil {_aaccge =_cde .TraceToDirectObject (_aaccge );_gfcde ,_cfbg :=_aaccge .(*_cde .PdfObjectArray );if !_cfbg {_fb .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_aaccge );
return nil ,_cde .ErrTypeError ;};_bcedb ,_ggffec :=NewPdfRectangle (*_gfcde );if _ggffec !=nil {_fb .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ggffec );return nil ,_ggffec ;};_ffade .BBox =_bcedb ;};
_aaccge =_egbad .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _aaccge !=nil {_aaccge =_cde .TraceToDirectObject (_aaccge );_cabgcf ,_dgfef :=_aaccge .(*_cde .PdfObjectBool );if !_dgfef {_fb .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aaccge );
return nil ,_cde .ErrTypeError ;};_ffade .AntiAlias =_cabgcf ;};switch *_gedcb {case 1:_afgef ,_ddafc :=_aadaf (_egbad );if _ddafc !=nil {return nil ,_ddafc ;};_afgef .PdfShading =_ffade ;_ffade ._fdea =_afgef ;return _ffade ,nil ;case 2:_bgge ,_cgacc :=_cfcgb (_egbad );
if _cgacc !=nil {return nil ,_cgacc ;};_bgge .PdfShading =_ffade ;_ffade ._fdea =_bgge ;return _ffade ,nil ;case 3:_fgdbd ,_bbfge :=_fagba (_egbad );if _bbfge !=nil {return nil ,_bbfge ;};_fgdbd .PdfShading =_ffade ;_ffade ._fdea =_fgdbd ;return _ffade ,nil ;
case 4:_gdgfg ,_ecac :=_cabee (_egbad );if _ecac !=nil {return nil ,_ecac ;};_gdgfg .PdfShading =_ffade ;_ffade ._fdea =_gdgfg ;return _ffade ,nil ;case 5:_dgedcg ,_ccaba :=_fagdf (_egbad );if _ccaba !=nil {return nil ,_ccaba ;};_dgedcg .PdfShading =_ffade ;
_ffade ._fdea =_dgedcg ;return _ffade ,nil ;case 6:_aecaf ,_cfge :=_bfbd (_egbad );if _cfge !=nil {return nil ,_cfge ;};_aecaf .PdfShading =_ffade ;_ffade ._fdea =_aecaf ;return _ffade ,nil ;case 7:_gcceb ,_deebag :=_cbebb (_egbad );if _deebag !=nil {return nil ,_deebag ;
};_gcceb .PdfShading =_ffade ;_ffade ._fdea =_gcceb ;return _ffade ,nil ;};return nil ,_gf .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_dgefa *PdfColorspaceLab )DecodeArray ()[]float64 {_dfdc :=[]float64 {0,100};if _dgefa .Range !=nil &&len (_dgefa .Range )==4{_dfdc =append (_dfdc ,_dgefa .Range ...);}else {_dfdc =append (_dfdc ,-100,100,-100,100);};return _dfdc ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gaedb *PdfShadingType7 )ToPdfObject ()_cde .PdfObject {_gaedb .PdfShading .ToPdfObject ();_dgeff ,_aabaac :=_gaedb .getShadingDict ();if _aabaac !=nil {_fb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gaedb .BitsPerCoordinate !=nil {_dgeff .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gaedb .BitsPerCoordinate );};if _gaedb .BitsPerComponent !=nil {_dgeff .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gaedb .BitsPerComponent );
};if _gaedb .BitsPerFlag !=nil {_dgeff .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gaedb .BitsPerFlag );};if _gaedb .Decode !=nil {_dgeff .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gaedb .Decode );};if _gaedb .Function !=nil {if len (_gaedb .Function )==1{_dgeff .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gaedb .Function [0].ToPdfObject ());
}else {_befbfe :=_cde .MakeArray ();for _ ,_bbabb :=range _gaedb .Function {_befbfe .Append (_bbabb .ToPdfObject ());};_dgeff .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_befbfe );};};return _gaedb ._fdbgb ;};

// ToPdfObject implements interface PdfModel.
func (_faa *PdfActionLaunch )ToPdfObject ()_cde .PdfObject {_faa .PdfAction .ToPdfObject ();_adf :=_faa ._dfb ;_cac :=_adf .PdfObject .(*_cde .PdfObjectDictionary );_cac .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeLaunch )));if _faa .F !=nil {_cac .Set ("\u0046",_faa .F .ToPdfObject ());
};_cac .SetIfNotNil ("\u0057\u0069\u006e",_faa .Win );_cac .SetIfNotNil ("\u004d\u0061\u0063",_faa .Mac );_cac .SetIfNotNil ("\u0055\u006e\u0069\u0078",_faa .Unix );_cac .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_faa .NewWindow );return _adf ;
};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_abge *BorderStyle )GetPdfName ()string {switch *_abge {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_fced :=NewPdfAnnotation ();_cffg :=&PdfAnnotationText {};_cffg .PdfAnnotation =_fced ;_cffg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fced .SetContext (_cffg );return _cffg ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_cgefef :=PdfWriter {};_cgefef ._fdeab =map[_cde .PdfObject ]struct{}{};_cgefef ._abbc =[]_cde .PdfObject {};_cgefef ._ffed =map[_cde .PdfObject ][]*_cde .PdfObjectDictionary {};_cgefef ._fcadd =map[_cde .PdfObject ]struct{}{};
_cgefef ._dgccdd .Major =1;_cgefef ._dgccdd .Minor =3;_cfade :=_cde .MakeDict ();_bagbc :=[]struct{_dfefe _cde .PdfObjectName ;_aadga string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_afbc ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_cbffe ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_ddcd ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_gaggb ()},{"\u0054\u0069\u0074l\u0065",_egbge ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_edff ()}};
for _ ,_agggf :=range _bagbc {if _agggf ._aadga !=""{_cfade .Set (_agggf ._dfefe ,_cde .MakeString (_agggf ._aadga ));};};if _ffab :=_decfdb ();!_ffab .IsZero (){if _dgeea ,_bddg :=NewPdfDateFromTime (_ffab );_bddg ==nil {_cfade .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dgeea .ToPdfObject ());
};};if _bggfb :=_bdebfb ();!_bggfb .IsZero (){if _gfaa ,_bcfdb :=NewPdfDateFromTime (_bggfb );_bcfdb ==nil {_cfade .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_gfaa .ToPdfObject ());};};_dbbca :=_cde .PdfIndirectObject {};_dbbca .PdfObject =_cfade ;_cgefef ._decfde =&_dbbca ;
_cgefef .addObject (&_dbbca );_ebgfb :=_cde .PdfIndirectObject {};_ageff :=_cde .MakeDict ();_ageff .Set ("\u0054\u0079\u0070\u0065",_cde .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_ebgfb .PdfObject =_ageff ;_cgefef ._dbabf =&_ebgfb ;_cgefef .addObject (_cgefef ._dbabf );
_caead ,_eadb :=_adcda ("\u0077");if _eadb !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eadb );};_cgefef ._abedd =_caead ;_addf :=_cde .PdfIndirectObject {};_dagd :=_cde .MakeDict ();_dagd .Set ("\u0054\u0079\u0070\u0065",_cde .MakeName ("\u0050\u0061\u0067e\u0073"));
_dadce :=_cde .PdfObjectArray {};_dagd .Set ("\u004b\u0069\u0064\u0073",&_dadce );_dagd .Set ("\u0043\u006f\u0075n\u0074",_cde .MakeInteger (0));_addf .PdfObject =_dagd ;_cgefef ._gabdc =&_addf ;_cgefef ._faag =map[_cde .PdfObject ]struct{}{};_cgefef .addObject (_cgefef ._gabdc );
_ageff .Set ("\u0050\u0061\u0067e\u0073",&_addf );_cgefef ._aaeef =_ageff ;_fb .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_ebgfb );return _cgefef ;};

// SetReason sets the `Reason` field of the signature.
func (_cgfdg *PdfSignature )SetReason (reason string ){_cgfdg .Reason =_cde .MakeEncodedString (reason ,true );};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_cadbc FieldFlag )Has (fl FieldFlag )bool {return (_cadbc .Mask ()&fl .Mask ())> 0};

// ToPdfObject implements interface PdfModel.
func (_dged *PdfAnnotationPopup )ToPdfObject ()_cde .PdfObject {_dged .PdfAnnotation .ToPdfObject ();_dgce :=_dged ._gfg ;_acafg :=_dgce .PdfObject .(*_cde .PdfObjectDictionary );_acafg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0050\u006f\u0070u\u0070"));
_acafg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dged .Parent );_acafg .SetIfNotNil ("\u004f\u0070\u0065\u006e",_dged .Open );return _dgce ;};

// ToPdfObject implements interface PdfModel.
func (_bbaa *PdfAnnotationCaret )ToPdfObject ()_cde .PdfObject {_bbaa .PdfAnnotation .ToPdfObject ();_afcc :=_bbaa ._gfg ;_gbb :=_afcc .PdfObject .(*_cde .PdfObjectDictionary );_bbaa .PdfAnnotationMarkup .appendToPdfDictionary (_gbb );_gbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0043\u0061\u0072e\u0074"));
_gbb .SetIfNotNil ("\u0052\u0044",_bbaa .RD );_gbb .SetIfNotNil ("\u0053\u0079",_bbaa .Sy );return _afcc ;};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_bgdg *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _cde .GetNumberAsFloat (_bgdg .XHeight );};

// RemovePage removes a page by number.
func (_egfc *PdfAppender )RemovePage (pageNum int ){_agfd :=pageNum -1;_egfc ._dbaf =append (_egfc ._dbaf [0:_agfd ],_egfc ._dbaf [pageNum :]...);};

// A returns the value of the A component of the color.
func (_ebcc *PdfColorLab )A ()float64 {return _ebcc [1]};func (_eedcea *PdfWriter )adjustXRefAffectedVersion (_cddag bool ){if _cddag &&_eedcea ._dgccdd .Major ==1&&_eedcea ._dgccdd .Minor < 5{_eedcea ._dgccdd .Minor =5;};};func (_acece *PdfAcroForm )fill (_bcbbb FieldValueProvider ,_fbde FieldAppearanceGenerator )error {if _acece ==nil {return nil ;
};_egcgc ,_abgab :=_bcbbb .FieldValues ();if _abgab !=nil {return _abgab ;};for _ ,_aeae :=range _acece .AllFields (){_effaa :=_aeae .PartialName ();_dacgd ,_cbcc :=_egcgc [_effaa ];if !_cbcc {if _feede ,_fbac :=_aeae .FullName ();_fbac ==nil {_dacgd ,_cbcc =_egcgc [_feede ];
};};if !_cbcc {_fb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_effaa );
continue ;};if _fgaee :=_afcba (_aeae ,_dacgd );_fgaee !=nil {return _fgaee ;};if _fbde ==nil {continue ;};for _ ,_afegf :=range _aeae .Annotations {_fbeed ,_afccf :=_fbde .GenerateAppearanceDict (_acece ,_aeae ,_afegf );if _afccf !=nil {return _afccf ;
};_afegf .AP =_fbeed ;_afegf .ToPdfObject ();};};return nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_ffgac *PdfPageResources )SetXObjectImageByName (keyName _cde .PdfObjectName ,ximg *XObjectImage )error {_ffacfb :=ximg .ToPdfObject ().(*_cde .PdfObjectStream );_aebe :=_ffgac .SetXObjectByName (keyName ,_ffacfb );return _aebe ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_fddgbd *PdfPageResources )HasExtGState (keyName _cde .PdfObjectName )bool {_ ,_fffae :=_fddgbd .GetFontByName (keyName );return _fffae ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_cde .PdfObjectArray ;Domain *_cde .PdfObjectArray ;Function []PdfFunction ;Extend *_cde .PdfObjectArray ;};func (_dfaf *PdfReader )newPdfAnnotationFileAttachmentFromDict (_ffdb *_cde .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_aadcg :=PdfAnnotationFileAttachment {};
_ccae ,_eff :=_dfaf .newPdfAnnotationMarkupFromDict (_ffdb );if _eff !=nil {return nil ,_eff ;};_aadcg .PdfAnnotationMarkup =_ccae ;_aadcg .FS =_ffdb .Get ("\u0046\u0053");_aadcg .Name =_ffdb .Get ("\u004e\u0061\u006d\u0065");return &_aadcg ,nil ;};func _bgcd (_ggffd _cde .PdfObject )(*PdfColorspaceLab ,error ){_cdfa :=NewPdfColorspaceLab ();
if _acgf ,_abgf :=_ggffd .(*_cde .PdfIndirectObject );_abgf {_cdfa ._fabc =_acgf ;};_ggffd =_cde .TraceToDirectObject (_ggffd );_gcfb ,_aedg :=_ggffd .(*_cde .PdfObjectArray );if !_aedg {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _gcfb .Len ()!=2{return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_ggffd =_cde .TraceToDirectObject (_gcfb .Get (0));_cdbec ,_aedg :=_ggffd .(*_cde .PdfObjectName );
if !_aedg {return nil ,_a .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_cdbec !="\u004c\u0061\u0062"{return nil ,_a .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");
};_ggffd =_cde .TraceToDirectObject (_gcfb .Get (1));_cega ,_aedg :=_ggffd .(*_cde .PdfObjectDictionary );if !_aedg {return nil ,_a .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");
};_ggffd =_cega .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_ggffd =_cde .TraceToDirectObject (_ggffd );_begge ,_aedg :=_ggffd .(*_cde .PdfObjectArray );if !_aedg {return nil ,_a .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _begge .Len ()!=3{return nil ,_a .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_edgg ,_gdgcf :=_begge .GetAsFloat64Slice ();
if _gdgcf !=nil {return nil ,_gdgcf ;};_cdfa .WhitePoint =_edgg ;_ggffd =_cega .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _ggffd !=nil {_ggffd =_cde .TraceToDirectObject (_ggffd );_agfc ,_ffge :=_ggffd .(*_cde .PdfObjectArray );
if !_ffge {return nil ,_a .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _agfc .Len ()!=3{return nil ,_a .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_defa ,_dcea :=_agfc .GetAsFloat64Slice ();if _dcea !=nil {return nil ,_dcea ;};_cdfa .BlackPoint =_defa ;};_ggffd =_cega .Get ("\u0052\u0061\u006eg\u0065");if _ggffd !=nil {_ggffd =_cde .TraceToDirectObject (_ggffd );_eaee ,_bfbgd :=_ggffd .(*_cde .PdfObjectArray );
if !_bfbgd {_fb .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_a .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eaee .Len ()!=4{_fb .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_a .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_egda ,_fbge :=_eaee .GetAsFloat64Slice ();if _fbge !=nil {return nil ,_fbge ;};_cdfa .Range =_egda ;};return _cdfa ,nil ;};

// SetContext sets the sub action (context).
func (_gff *PdfAction )SetContext (ctx PdfModel ){_gff ._dfd =ctx };

// SetContext set the sub annotation (context).
func (_baadc *PdfShading )SetContext (ctx PdfModel ){_baadc ._fdea =ctx };

// ToPdfObject implements interface PdfModel.
func (_dge *PdfActionResetForm )ToPdfObject ()_cde .PdfObject {_dge .PdfAction .ToPdfObject ();_fdgc :=_dge ._dfb ;_aacc :=_fdgc .PdfObject .(*_cde .PdfObjectDictionary );_aacc .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeResetForm )));_aacc .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_dge .Fields );
_aacc .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_dge .Flags );return _fdgc ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_gbc :=NewPdfAction ();_bd :=&PdfActionLaunch {};_bd .PdfAction =_gbc ;_gbc .SetContext (_bd );return _bd ;};func (_eafag *LTV )getOCSPs (_fgadd []*_ff .Certificate ,_bgef map[string ]*_ff .Certificate )([][]byte ,error ){_bfaea :=make ([][]byte ,0,len (_fgadd ));
for _ ,_bccfd :=range _fgadd {for _ ,_eeefg :=range _bccfd .OCSPServer {if _eafag .CertClient .IsCA (_bccfd ){continue ;};_eabg ,_bcdd :=_bgef [_bccfd .Issuer .CommonName ];if !_bcdd {_fb .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_bcfab ,_dgbb :=_eafag .OCSPClient .MakeRequest (_eeefg ,_bccfd ,_eabg );if _dgbb !=nil {_fb .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_dgbb );
continue ;};_bfaea =append (_bfaea ,_bcfab );};};return _bfaea ,nil ;};func (_dfbc *PdfReader )newPdfAnnotationStampFromDict (_bace *_cde .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_geg :=PdfAnnotationStamp {};_dcd ,_ecf :=_dfbc .newPdfAnnotationMarkupFromDict (_bace );
if _ecf !=nil {return nil ,_ecf ;};_geg .PdfAnnotationMarkup =_dcd ;_geg .Name =_bace .Get ("\u004e\u0061\u006d\u0065");return &_geg ,nil ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_efea *pdfCIDFontType2 )ToPdfObject ()_cde .PdfObject {if _efea ._dbefe ==nil {_efea ._dbefe =&_cde .PdfIndirectObject {};};_fgef :=_efea .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_efea ._dbefe .PdfObject =_fgef ;if _efea .CIDSystemInfo !=nil {_fgef .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_efea .CIDSystemInfo );};if _efea .DW !=nil {_fgef .Set ("\u0044\u0057",_efea .DW );};if _efea .DW2 !=nil {_fgef .Set ("\u0044\u0057\u0032",_efea .DW2 );
};if _efea .W !=nil {_fgef .Set ("\u0057",_efea .W );};if _efea .W2 !=nil {_fgef .Set ("\u0057\u0032",_efea .W2 );};if _efea .CIDToGIDMap !=nil {_fgef .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_efea .CIDToGIDMap );};return _efea ._dbefe ;
};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_ge :=NewPdfAction ();_bge :=&PdfActionMovie {};_bge .PdfAction =_ge ;_ge .SetContext (_bge );return _bge ;};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_cde .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_cde .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};func (_abgec *PdfWriter )writeObjects (){_fb .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_abgec ._abbc ));_abgec ._cegabf =make (map[int ]crossReference );_abgec ._cegabf [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};
if _abgec ._daefcg .ObjectMap !=nil {for _cdcfa ,_ccbea :=range _abgec ._daefcg .ObjectMap {if _cdcfa ==0{continue ;};if _ccbea .XType ==_cde .XrefTypeObjectStream {_gffg :=crossReference {Type :2,ObjectNumber :_ccbea .OsObjNumber ,Index :_ccbea .OsObjIndex };
_abgec ._cegabf [_cdcfa ]=_gffg ;};if _ccbea .XType ==_cde .XrefTypeTableEntry {_gaddd :=crossReference {Type :1,ObjectNumber :_ccbea .ObjectNumber ,Offset :_ccbea .Offset };_abgec ._cegabf [_cdcfa ]=_gaddd ;};};};};

// ToPdfObject implements interface PdfModel.
func (_gcae *EmbeddedFile )ToPdfObject ()_cde .PdfObject {_eccc :=_cde .NewFlateEncoder ();_agac ,_fabe :=_cde .MakeStream (_gcae .Content ,_eccc );if _fabe !=nil {_fb .Log .Debug ("\u0046\u0061\u0069\u006c\u0065d\u0020\u0074\u006f\u0020\u0063\u0072\u0065\u0061\u0074\u0065\u0020\u0065\u006db\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_fabe );
return nil ;};_ccfc :=_agac .PdfObjectDictionary ;_ccfc .Set ("\u0054\u0079\u0070\u0065",_cde .MakeName ("\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065"));_ccfc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeEncodedString ("\u0074\u0065\u0078\u0074\u002f\u0070\u006c\u0061\u0069\u006e",true ));
_ecbf :=_cde .MakeDict ();_ecbf .Set ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d",_cde .MakeString (_gcae .Hash [:]));_ecbf .Set ("\u0053\u0069\u007a\u0065",_cde .MakeInteger (int64 (len (_gcae .Content ))));_cfda :=_gcae .CreationTime ;if _cfda .IsZero (){_cfda =_gdd .Now ();
};_gbac :=_gcae .ModTime ;if _gbac .IsZero (){_gbac =_cfda ;};_bdfg ,_fabe :=NewPdfDateFromTime (_cfda );if _fabe !=nil {_fb .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_fabe );
return nil ;};_aegg ,_fabe :=NewPdfDateFromTime (_gbac );if _fabe !=nil {_fb .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_fabe );
return nil ;};_ecbf .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bdfg .ToPdfObject ());_ecbf .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_aegg .ToPdfObject ());_ccfc .Set ("\u0050\u0061\u0072\u0061\u006d\u0073",_ecbf );
_gagce :=_cde .MakeDict ();_gagce .Set (*_cde .MakeName ("\u0046"),_agac );return _gagce ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_dbabb *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// GetNumComponents returns the number of color components.
func (_bbff *PdfColorspaceICCBased )GetNumComponents ()int {return _bbff .N };

// ToInteger convert to an integer format.
func (_eded *PdfColorDeviceGray )ToInteger (bits int )uint32 {_eeff :=_ce .Pow (2,float64 (bits ))-1;return uint32 (_eeff *_eded .Val ());};

// HasExtGState checks if ExtGState name is available.
func (_gacdg *PdfPage )HasExtGState (name _cde .PdfObjectName )bool {if _gacdg .Resources ==nil {return false ;};if _gacdg .Resources .ExtGState ==nil {return false ;};_bffbe ,_cagdf :=_cde .TraceToDirectObject (_gacdg .Resources .ExtGState ).(*_cde .PdfObjectDictionary );
if !_cagdf {_fb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_cde .TraceToDirectObject (_gacdg .Resources .ExtGState ));
return false ;};_gceaf :=_bffbe .Get (name );_aegd :=_gceaf !=nil ;return _aegd ;};

// Height returns the height of `rect`.
func (_eggda *PdfRectangle )Height ()float64 {return _ce .Abs (_eggda .Ury -_eggda .Lly )};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_bfda *PdfShadingPatternType3 )ToPdfObject ()_cde .PdfObject {_bfda .PdfPattern .ToPdfObject ();_aeacc :=_bfda .getDict ();if _bfda .Shading !=nil {_aeacc .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bfda .Shading .ToPdfObject ());};if _bfda .Matrix !=nil {_aeacc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bfda .Matrix );
};if _bfda .ExtGState !=nil {_aeacc .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bfda .ExtGState );};return _bfda ._eebba ;};func _bbgad (_fadga _cde .PdfObject )(*PdfPattern ,error ){_fbefg :=&PdfPattern {};var _ecfab *_cde .PdfObjectDictionary ;
if _bedbg ,_edadde :=_cde .GetIndirect (_fadga );_edadde {_fbefg ._eebba =_bedbg ;_aggef ,_afae :=_bedbg .PdfObject .(*_cde .PdfObjectDictionary );if !_afae {_fb .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_bedbg .PdfObject );
return nil ,_cde .ErrTypeError ;};_ecfab =_aggef ;}else if _bbcb ,_cbbgd :=_cde .GetStream (_fadga );_cbbgd {_fbefg ._eebba =_bbcb ;_ecfab =_bbcb .PdfObjectDictionary ;}else {_fb .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_fadga );
return nil ,_cde .ErrTypeError ;};_bfbbae :=_ecfab .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _bfbbae ==nil {_fb .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fgeba ,_agbdb :=_bfbbae .(*_cde .PdfObjectInteger );if !_agbdb {_fb .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bfbbae );
return nil ,_cde .ErrTypeError ;};if *_fgeba !=1&&*_fgeba !=2{_fb .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_fgeba );return nil ,_cde .ErrRangeError ;
};_fbefg .PatternType =int64 (*_fgeba );switch *_fgeba {case 1:_dbed ,_cbdd :=_adbg (_ecfab );if _cbdd !=nil {return nil ,_cbdd ;};_dbed .PdfPattern =_fbefg ;_fbefg ._afcgc =_dbed ;return _fbefg ,nil ;case 2:_edgadf ,_bgfdf :=_bffe (_ecfab );if _bgfdf !=nil {return nil ,_bgfdf ;
};_edgadf .PdfPattern =_fbefg ;_fbefg ._afcgc =_edgadf ;return _fbefg ,nil ;};return nil ,_gf .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_bebge *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _cde .GetNumberAsFloat (_bebge .CapHeight );};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_bbdcb ,_ggaec :=_gb .ParsePdfTime (dateStr );if _ggaec !=nil {return PdfDate {},_ggaec ;};return NewPdfDateFromTime (_bbdcb );};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_bdgf *PdfReader )GetCatalogMetadata ()(_cde .PdfObject ,bool ){if _bdgf ._gaeed ==nil {return nil ,false ;};_acdgd :=_bdgf ._gaeed .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _acdgd ,_acdgd !=nil ;};func (_edfbb fontCommon )asPdfObjectDictionary (_acbgd string )*_cde .PdfObjectDictionary {if _acbgd !=""&&_edfbb ._cfgg !=""&&_acbgd !=_edfbb ._cfgg {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_acbgd ,_edfbb );
}else if _acbgd ==""&&_edfbb ._cfgg ==""{_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_edfbb );
}else if _edfbb ._cfgg ==""{_edfbb ._cfgg =_acbgd ;};_cfeg :=_cde .MakeDict ();_cfeg .Set ("\u0054\u0079\u0070\u0065",_cde .MakeName ("\u0046\u006f\u006e\u0074"));_cfeg .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_cde .MakeName (_edfbb ._bbdf ));
_cfeg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName (_edfbb ._cfgg ));if _edfbb ._bceac !=nil {_cfeg .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_edfbb ._bceac .ToPdfObject ());};if _edfbb ._aaegd !=nil {_cfeg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_edfbb ._aaegd );
}else if _edfbb ._dcgd !=nil {_ccdd ,_dgdf :=_edfbb ._dcgd .Stream ();if _dgdf !=nil {_fb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_dgdf );
}else {_cfeg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_ccdd );};};return _cfeg ;};

// ToPdfObject implements interface PdfModel.
func (_dbg *PdfAnnotationPolyLine )ToPdfObject ()_cde .PdfObject {_dbg .PdfAnnotation .ToPdfObject ();_aafc :=_dbg ._gfg ;_fcab :=_aafc .PdfObject .(*_cde .PdfObjectDictionary );_dbg .PdfAnnotationMarkup .appendToPdfDictionary (_fcab );_fcab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_fcab .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_dbg .Vertices );_fcab .SetIfNotNil ("\u004c\u0045",_dbg .LE );_fcab .SetIfNotNil ("\u0042\u0053",_dbg .BS );_fcab .SetIfNotNil ("\u0049\u0043",_dbg .IC );_fcab .SetIfNotNil ("\u0042\u0045",_dbg .BE );
_fcab .SetIfNotNil ("\u0049\u0054",_dbg .IT );_fcab .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dbg .Measure );return _aafc ;};func (_dee *PdfReader )newPdfActionGotoEFromDict (_ddb *_cde .PdfObjectDictionary )(*PdfActionGoToE ,error ){_adbc ,_cbga :=_bfc (_ddb .Get ("\u0046"));
if _cbga !=nil {return nil ,_cbga ;};return &PdfActionGoToE {D :_ddb .Get ("\u0044"),NewWindow :_ddb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_ddb .Get ("\u0054"),F :_adbc },nil ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// ToPdfObject returns a stream object.
func (_bfcac *XObjectImage )ToPdfObject ()_cde .PdfObject {_fgdag :=_bfcac ._aaaag ;_dfga :=_fgdag .PdfObjectDictionary ;if _bfcac .Filter !=nil {_dfga =_bfcac .Filter .MakeStreamDict ();_fgdag .PdfObjectDictionary =_dfga ;};_dfga .Set ("\u0054\u0079\u0070\u0065",_cde .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_dfga .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0049\u006d\u0061g\u0065"));_dfga .Set ("\u0057\u0069\u0064t\u0068",_cde .MakeInteger (*(_bfcac .Width )));_dfga .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cde .MakeInteger (*(_bfcac .Height )));
if _bfcac .BitsPerComponent !=nil {_dfga .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cde .MakeInteger (*(_bfcac .BitsPerComponent )));};if _bfcac .ColorSpace !=nil {_dfga .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bfcac .ColorSpace .ToPdfObject ());
};_dfga .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_bfcac .Intent );_dfga .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_bfcac .ImageMask );_dfga .SetIfNotNil ("\u004d\u0061\u0073\u006b",_bfcac .Mask );_gagae :=_dfga .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _bfcac .Decode ==nil &&_gagae {_dfga .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _bfcac .Decode !=nil {_dfga .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bfcac .Decode );};_dfga .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_bfcac .Interpolate );
_dfga .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_bfcac .Alternatives );_dfga .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_bfcac .SMask );_dfga .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_bfcac .SMaskInData );
_dfga .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_bfcac .Matte );_dfga .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bfcac .Name );_dfga .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bfcac .StructParent );_dfga .SetIfNotNil ("\u0049\u0044",_bfcac .ID );
_dfga .SetIfNotNil ("\u004f\u0050\u0049",_bfcac .OPI );_dfga .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bfcac .Metadata );_dfga .SetIfNotNil ("\u004f\u0043",_bfcac .OC );_dfga .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cde .MakeInteger (int64 (len (_bfcac .Stream ))));
_fgdag .Stream =_bfcac .Stream ;return _fgdag ;};func (_dbac *PdfReader )newPdfAnnotationProjectionFromDict (_bfe *_cde .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_feaf :=&PdfAnnotationProjection {};_dbab ,_eebb :=_dbac .newPdfAnnotationMarkupFromDict (_bfe );
if _eebb !=nil {return nil ,_eebb ;};_feaf .PdfAnnotationMarkup =_dbab ;return _feaf ,nil ;};func (_dbdda *PdfWriter )writeOutputIntents ()error {if len (_dbdda ._afefbc )==0{return nil ;};_fdfbd :=make ([]_cde .PdfObject ,len (_dbdda ._afefbc ));for _fedbfd ,_fcba :=range _dbdda ._afefbc {_dcfe :=_fcba .ToPdfObject ();
_fdfbd [_fedbfd ]=_cde .MakeIndirectObject (_dcfe );};_fbabd :=_cde .MakeIndirectObject (_cde .MakeArray (_fdfbd ...));_dbdda ._aaeef .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_fbabd );if _cbfc :=_dbdda .addObjects (_fbabd );
_cbfc !=nil {return _cbfc ;};return nil ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_bfbge *PdfInfo )GetCustomInfo (name string )*_cde .PdfObjectString {var _aeag *_cde .PdfObjectString ;if _bfbge ._bdcd ==nil {return _aeag ;};if _dcge ,_efge :=_bfbge ._bdcd .Get (*_cde .MakeName (name )).(*_cde .PdfObjectString );_efge {_aeag =_dcge ;
};return _aeag ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_aageb *PdfOutlineItem )GetContainingPdfObject ()_cde .PdfObject {return _aageb ._baaeg };

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _cde .PdfObject ;FS _cde .PdfObject ;F _cde .PdfObject ;UF _cde .PdfObject ;DOS _cde .PdfObject ;Mac _cde .PdfObject ;Unix _cde .PdfObject ;ID _cde .PdfObject ;V _cde .PdfObject ;EF _cde .PdfObject ;RF _cde .PdfObject ;Desc _cde .PdfObject ;
CI _cde .PdfObject ;AFRelationship _cde .PdfObject ;_dcef _cde .PdfObject ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_gcf :=NewPdfAnnotation ();_deg :=&PdfAnnotationCaret {};_deg .PdfAnnotation =_gcf ;_deg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gcf .SetContext (_deg );return _deg ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_cddbb *PdfFieldButton )IsCheckbox ()bool {return _cddbb .GetType ()==ButtonTypeCheckbox };

// Clear clears flag fl from the flag and returns the resulting flag.
func (_cgfa FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_cgfa .Mask ()&^fl .Mask ())};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_deagf *PdfAcroForm )ToPdfObject ()_cde .PdfObject {_cacfc :=_deagf ._ddcfd ;_gfbaaa :=_cacfc .PdfObject .(*_cde .PdfObjectDictionary );if _deagf .Fields !=nil {_egdaf :=_cde .PdfObjectArray {};for _ ,_cbfg :=range *_deagf .Fields {_fagea :=_cbfg .GetContext ();
if _fagea !=nil {_egdaf .Append (_fagea .ToPdfObject ());}else {_egdaf .Append (_cbfg .ToPdfObject ());};};_gfbaaa .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_egdaf );};if _deagf .NeedAppearances !=nil {_gfbaaa .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_deagf .NeedAppearances );
}else {if _gbag :=_gfbaaa .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_gbag !=nil {_gfbaaa .Remove ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");};};if _deagf .SigFlags !=nil {_gfbaaa .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_deagf .SigFlags );
};if _deagf .CO !=nil {_gfbaaa .Set ("\u0043\u004f",_deagf .CO );};if _deagf .DR !=nil {_gfbaaa .Set ("\u0044\u0052",_deagf .DR .ToPdfObject ());};if _deagf .DA !=nil {_gfbaaa .Set ("\u0044\u0041",_deagf .DA );};if _deagf .Q !=nil {_gfbaaa .Set ("\u0051",_deagf .Q );
};if _deagf .XFA !=nil {_gfbaaa .Set ("\u0058\u0046\u0041",_deagf .XFA );};if _deagf .ADBEEchoSign !=nil {_gfbaaa .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_deagf .ADBEEchoSign );};return _cacfc ;};func (_bdcba *PdfReader )newPdfAnnotationTrapNetFromDict (_aag *_cde .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_dfcg :=PdfAnnotationTrapNet {};
return &_dfcg ,nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_ecgd *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _ecgd .MediaBox !=nil {return _ecgd .MediaBox ,nil ;};_gggccd :=_ecgd .Parent ;for _gggccd !=nil {_agfec ,_daeda :=_cde .GetDict (_gggccd );if !_daeda {return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _cffgb :=_agfec .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_cffgb !=nil {_fabcc ,_dfggd :=_cde .GetArray (_cffgb );if !_dfggd {return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_fgbcb ,_caccc :=NewPdfRectangle (*_fabcc );if _caccc !=nil {return nil ,_caccc ;};return _fgbcb ,nil ;};_gggccd =_agfec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_gf .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_dbfd *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_faabe :=_dbfd .actualFont ();if _faabe ==nil {_fb .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_dbfd ._dcgb );
return _baf .CharMetrics {},false ;};if _fcfcd ,_daag :=_faabe .GetRuneMetrics (r );_daag {return _fcfcd ,true ;};if _gafa ,_bfcf :=_dbfd .GetFontDescriptor ();_bfcf ==nil &&_gafa !=nil {return _baf .CharMetrics {Wx :_gafa ._afadf },true ;};_fb .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dbfd );
return _baf .CharMetrics {},false ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_beggg *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecdg :=vals [0];if _ecdg < 0.0||_ecdg > 1.0{_fb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ecdg );
return nil ,ErrColorOutOfRange ;};_gcafa :=vals [1];if _gcafa < 0.0||_gcafa > 1.0{_fb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ecdg );return nil ,ErrColorOutOfRange ;
};_cdggc :=vals [2];if _cdggc < 0.0||_cdggc > 1.0{_fb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ecdg );return nil ,ErrColorOutOfRange ;};_adcb :=NewPdfColorDeviceRGB (_ecdg ,_gcafa ,_cdggc );
return _adcb ,nil ;};

// K returns the value of the key component of the color.
func (_gbee *PdfColorDeviceCMYK )K ()float64 {return _gbee [3]};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_fggc *PdfFieldText )ToPdfObject ()_cde .PdfObject {_fggc .PdfField .ToPdfObject ();_beaeb :=_fggc ._gfed ;_caac :=_beaeb .PdfObject .(*_cde .PdfObjectDictionary );_caac .Set ("\u0046\u0054",_cde .MakeName ("\u0054\u0078"));if _fggc .DA !=nil {_caac .Set ("\u0044\u0041",_fggc .DA );
};if _fggc .Q !=nil {_caac .Set ("\u0051",_fggc .Q );};if _fggc .DS !=nil {_caac .Set ("\u0044\u0053",_fggc .DS );};if _fggc .RV !=nil {_caac .Set ("\u0052\u0056",_fggc .RV );};if _fggc .MaxLen !=nil {_caac .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_fggc .MaxLen );
};return _beaeb ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_ecbg :=PdfColorCalRGB {a ,b ,c };return &_ecbg ;};func _fagdf (_dddg *_cde .PdfObjectDictionary )(*PdfShadingType5 ,error ){_adbf :=PdfShadingType5 {};_beagb :=_dddg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _beagb ==nil {_fb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ecgab ,_bacbd :=_beagb .(*_cde .PdfObjectInteger );if !_bacbd {_fb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_beagb );
return nil ,_cde .ErrTypeError ;};_adbf .BitsPerCoordinate =_ecgab ;_beagb =_dddg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _beagb ==nil {_fb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ecgab ,_bacbd =_beagb .(*_cde .PdfObjectInteger );if !_bacbd {_fb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_beagb );
return nil ,_cde .ErrTypeError ;};_adbf .BitsPerComponent =_ecgab ;_beagb =_dddg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _beagb ==nil {_fb .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_ecgab ,_bacbd =_beagb .(*_cde .PdfObjectInteger );if !_bacbd {_fb .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_beagb );
return nil ,_cde .ErrTypeError ;};_adbf .VerticesPerRow =_ecgab ;_beagb =_dddg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _beagb ==nil {_fb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ddffe ,_bacbd :=_beagb .(*_cde .PdfObjectArray );if !_bacbd {_fb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_beagb );
return nil ,_cde .ErrTypeError ;};_adbf .Decode =_ddffe ;if _bcga :=_dddg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bcga !=nil {_adbf .Function =[]PdfFunction {};if _gbbgb ,_geaab :=_bcga .(*_cde .PdfObjectArray );_geaab {for _ ,_gaed :=range _gbbgb .Elements (){_bbdaa ,_dbgbf :=_bedaa (_gaed );
if _dbgbf !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dbgbf );return nil ,_dbgbf ;};_adbf .Function =append (_adbf .Function ,_bbdaa );
};}else {_faafa ,_ggdbe :=_bedaa (_bcga );if _ggdbe !=nil {_fb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggdbe );return nil ,_ggdbe ;
};_adbf .Function =append (_adbf .Function ,_faafa );};};return &_adbf ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_bbad *PdfColorspaceICCBased )ToPdfObject ()_cde .PdfObject {_adefd :=&_cde .PdfObjectArray {};_adefd .Append (_cde .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _egfcd *_cde .PdfObjectStream ;if _bbad ._eaeab !=nil {_egfcd =_bbad ._eaeab ;
}else {_egfcd =&_cde .PdfObjectStream {};};_dgbd :=_cde .MakeDict ();_dgbd .Set ("\u004e",_cde .MakeInteger (int64 (_bbad .N )));if _bbad .Alternate !=nil {_dgbd .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_bbad .Alternate .ToPdfObject ());};if _bbad .Metadata !=nil {_dgbd .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bbad .Metadata );
};if _bbad .Range !=nil {var _eegc []_cde .PdfObject ;for _ ,_afbge :=range _bbad .Range {_eegc =append (_eegc ,_cde .MakeFloat (_afbge ));};_dgbd .Set ("\u0052\u0061\u006eg\u0065",_cde .MakeArray (_eegc ...));};_dgbd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cde .MakeInteger (int64 (len (_bbad .Data ))));
_egfcd .Stream =_bbad .Data ;_egfcd .PdfObjectDictionary =_dgbd ;_adefd .Append (_egfcd );if _bbad ._ebcg !=nil {_bbad ._ebcg .PdfObject =_adefd ;return _bbad ._ebcg ;};return _adefd ;};func _adeg (_fbee _cde .PdfObject )(*PdfColorspaceCalRGB ,error ){_cgdfg :=NewPdfColorspaceCalRGB ();
if _abef ,_fgcd :=_fbee .(*_cde .PdfIndirectObject );_fgcd {_cgdfg ._aacb =_abef ;};_fbee =_cde .TraceToDirectObject (_fbee );_ddef ,_gefba :=_fbee .(*_cde .PdfObjectArray );if !_gefba {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _ddef .Len ()!=2{return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_fbee =_cde .TraceToDirectObject (_ddef .Get (0));_aeeaa ,_gefba :=_fbee .(*_cde .PdfObjectName );
if !_gefba {return nil ,_a .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_aeeaa !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_a .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_fbee =_cde .TraceToDirectObject (_ddef .Get (1));_gaabb ,_gefba :=_fbee .(*_cde .PdfObjectDictionary );if !_gefba {return nil ,_a .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_fbee =_gaabb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fbee =_cde .TraceToDirectObject (_fbee );_bbae ,_gefba :=_fbee .(*_cde .PdfObjectArray );if !_gefba {return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _bbae .Len ()!=3{return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_acbgf ,_bbab :=_bbae .GetAsFloat64Slice ();
if _bbab !=nil {return nil ,_bbab ;};_cgdfg .WhitePoint =_acbgf ;_fbee =_gaabb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fbee !=nil {_fbee =_cde .TraceToDirectObject (_fbee );_fgad ,_gabe :=_fbee .(*_cde .PdfObjectArray );
if !_gabe {return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _fgad .Len ()!=3{return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_baee ,_efca :=_fgad .GetAsFloat64Slice ();if _efca !=nil {return nil ,_efca ;};_cgdfg .BlackPoint =_baee ;};_fbee =_gaabb .Get ("\u0047\u0061\u006dm\u0061");if _fbee !=nil {_fbee =_cde .TraceToDirectObject (_fbee );_cfaef ,_dfbcg :=_fbee .(*_cde .PdfObjectArray );
if !_dfbcg {return nil ,_a .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _cfaef .Len ()!=3{return nil ,_a .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_dbgf ,_fbcf :=_cfaef .GetAsFloat64Slice ();if _fbcf !=nil {return nil ,_fbcf ;};_cgdfg .Gamma =_dbgf ;};_fbee =_gaabb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _fbee !=nil {_fbee =_cde .TraceToDirectObject (_fbee );_gefac ,_beff :=_fbee .(*_cde .PdfObjectArray );
if !_beff {return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _gefac .Len ()!=9{_fb .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_gefac .String ());
return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_cbdg ,_beda :=_gefac .GetAsFloat64Slice ();if _beda !=nil {return nil ,_beda ;
};_cgdfg .Matrix =_cbdg ;};return _cgdfg ,nil ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _cde .PdfObject ;B _cde .PdfObject ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_cgag *DSS )ToPdfObject ()_cde .PdfObject {_geddf :=_cgag ._agaa .PdfObject .(*_cde .PdfObjectDictionary );_geddf .Clear ();_egfcf :=_cde .MakeDict ();for _cggaf ,_bdefc :=range _cgag .VRI {_egfcf .Set (*_cde .MakeName (_cggaf ),_bdefc .ToPdfObject ());
};_geddf .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_edgbae (_cgag .Certs ));_geddf .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_edgbae (_cgag .OCSPs ));_geddf .SetIfNotNil ("\u0043\u0052\u004c\u0073",_edgbae (_cgag .CRLs ));_geddf .Set ("\u0056\u0052\u0049",_egfcf );
return _cgag ._agaa ;};

// SetAction sets the PDF action for the annotation link.
func (_cbb *PdfAnnotationLink )SetAction (action *PdfAction ){_cbb ._bgg =action ;if action ==nil {_cbb .A =nil ;};};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_gfbdb byte )byte ;

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_ffae *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_fab .SimpleEncoder ,error ){_afcbb ,_fgcfd :=_cgefg (basefont );if _fgcfd !=nil {return nil ,nil ,_fgcfd ;};_bfae ,_gafg :=_afcbb .Encoder ().(_fab .SimpleEncoder );
if !_gafg {return nil ,nil ,_a .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_afcbb .Encoder ());
};_bgfgg :=make (map[rune ]_fab .GlyphName );for _dgdac :=range alphabet {if _ ,_fadae :=_bfae .RuneToCharcode (_dgdac );!_fadae {_ ,_fbed :=_afcbb ._cgagf .Read (_dgdac );if !_fbed {_fb .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_dgdac ,_dgdac );
continue ;};_fgbb ,_fbed :=_fab .RuneToGlyph (_dgdac );if !_fbed {_fb .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_dgdac ,_dgdac );continue ;};if len (_bgfgg )>=255{return nil ,nil ,_gf .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_bgfgg [_dgdac ]=_fgbb ;};};var (_ecee []_fab .CharCode ;_acgc []_fab .CharCode ;);for _aacd :=_fab .CharCode (1);_aacd <=0xff;_aacd ++{_gggd ,_dfcdc :=_bfae .CharcodeToRune (_aacd );if !_dfcdc {_ecee =append (_ecee ,_aacd );continue ;};if _ ,_dfcdc =alphabet [_gggd ];
!_dfcdc {_acgc =append (_acgc ,_aacd );};};_feca :=append (_ecee ,_acgc ...);if len (_feca )< len (_bgfgg ){return nil ,nil ,_a .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_bgfgg ),len (_feca ));
};_dfgc :=make ([]rune ,0,len (_bgfgg ));for _ccba :=range _bgfgg {_dfgc =append (_dfgc ,_ccba );};_cf .Slice (_dfgc ,func (_abdf ,_eeadd int )bool {return _dfgc [_abdf ]< _dfgc [_eeadd ]});_effef :=make (map[_fab .CharCode ]_fab .GlyphName ,len (_dfgc ));
for _ ,_ddaf :=range _dfgc {_fbdad :=_feca [0];_feca =_feca [1:];_effef [_fbdad ]=_bgfgg [_ddaf ];};_bfae =_fab .ApplyDifferences (_bfae ,_effef );_afcbb .SetEncoder (_bfae );return &PdfFont {_dcgb :&_afcbb },_bfae ,nil ;};func _cbffe ()string {_ggdeb .Lock ();
defer _ggdeb .Unlock ();if len (_bgeff )> 0{return _bgeff ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};func (_baade *PdfReader )newPdfAcroFormFromDict (_ddga *_cde .PdfIndirectObject ,_cdgag *_cde .PdfObjectDictionary )(*PdfAcroForm ,error ){_gfbfc :=NewPdfAcroForm ();
if _ddga !=nil {_gfbfc ._ddcfd =_ddga ;_ddga .PdfObject =_cde .MakeDict ();};if _eabac :=_cdgag .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_eabac !=nil &&!_cde .IsNullObject (_eabac ){_ccefg ,_ceag :=_cde .GetArray (_eabac );if !_ceag {return nil ,_a .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_eabac );
};var _fgdgb []*PdfField ;for _ ,_caeed :=range _ccefg .Elements (){_fbgg ,_efac :=_cde .GetIndirect (_caeed );if !_efac {if _ ,_fdbe :=_caeed .(*_cde .PdfObjectNull );_fdbe {_fb .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_fb .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_caeed );
return nil ,_a .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ddee ,_gacg :=_baade .newPdfFieldFromIndirectObject (_fbgg ,nil );
if _gacg !=nil {return nil ,_gacg ;};_fb .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_ddee );_fgdgb =append (_fgdgb ,_ddee );};_gfbfc .Fields =&_fgdgb ;};if _afgdb :=_cdgag .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_afgdb !=nil {_cdbf ,_aedcbf :=_cde .GetBool (_afgdb );if _aedcbf {_gfbfc .NeedAppearances =_cdbf ;}else {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_afgdb );
};};if _ddba :=_cdgag .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_ddba !=nil {_badd ,_aabd :=_cde .GetInt (_ddba );if _aabd {_gfbfc .SigFlags =_badd ;}else {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddba );
};};if _efeef :=_cdgag .Get ("\u0043\u004f");_efeef !=nil {_aabdd ,_ffafb :=_cde .GetArray (_efeef );if _ffafb {_gfbfc .CO =_aabdd ;}else {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_efeef );
};};if _ffcee :=_cdgag .Get ("\u0044\u0052");_ffcee !=nil {if _bgccf ,_faec :=_cde .GetDict (_ffcee );_faec {_efedf ,_gbbb :=NewPdfPageResourcesFromDict (_bgccf );if _gbbb !=nil {_fb .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_gbbb );
return nil ,_gbbb ;};_gfbfc .DR =_efedf ;}else {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ffcee );};};if _eedda :=_cdgag .Get ("\u0044\u0041");
_eedda !=nil {_ffcd ,_adegb :=_cde .GetString (_eedda );if _adegb {_gfbfc .DA =_ffcd ;}else {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_eedda );
};};if _aeefb :=_cdgag .Get ("\u0051");_aeefb !=nil {_bcag ,_efgag :=_cde .GetInt (_aeefb );if _efgag {_gfbfc .Q =_bcag ;}else {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_aeefb );
};};if _bgdeg :=_cdgag .Get ("\u0058\u0046\u0041");_bgdeg !=nil {_gfbfc .XFA =_bgdeg ;};if _ebba :=_cdgag .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_ebba !=nil {_gfbfc .ADBEEchoSign =_ebba ;};_gfbfc .ToPdfObject ();
return _gfbfc ,nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_dbeb *PdfFieldChoice )ToPdfObject ()_cde .PdfObject {_dbeb .PdfField .ToPdfObject ();_aegb :=_dbeb ._gfed ;_bedcc :=_aegb .PdfObject .(*_cde .PdfObjectDictionary );_bedcc .Set ("\u0046\u0054",_cde .MakeName ("\u0043\u0068"));if _dbeb .Opt !=nil {_bedcc .Set ("\u004f\u0070\u0074",_dbeb .Opt );
};if _dbeb .TI !=nil {_bedcc .Set ("\u0054\u0049",_dbeb .TI );};if _dbeb .I !=nil {_bedcc .Set ("\u0049",_dbeb .I );};return _aegb ;};

// Encoder returns the font's text encoder.
func (_eebd pdfFontType0 )Encoder ()_fab .TextEncoder {return _eebd ._cecbfe };

// GetContentStreams returns the content stream as an array of strings.
func (_agdfa *PdfPage )GetContentStreams ()([]string ,error ){_egbeaa :=_agdfa .GetContentStreamObjs ();var _dcafg []string ;for _ ,_aeefdc :=range _egbeaa {_bbged ,_edcg :=_edeeaa (_aeefdc );if _edcg !=nil {return nil ,_edcg ;};_dcafg =append (_dcafg ,_bbged );
};return _dcafg ,nil ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_ebe :=NewPdfAnnotation ();_bed :=&PdfAnnotationScreen {};_bed .PdfAnnotation =_ebe ;_ebe .SetContext (_bed );return _bed ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _cde .PdfObject )(*PdfFilespec ,error ){_ebbc :=&PdfFilespec {};var _cffda *_cde .PdfObjectDictionary ;if _cege ,_gcfe :=_cde .GetIndirect (obj );_gcfe {_ebbc ._dcef =_cege ;_ffdg ,_bdfbb :=_cde .GetDict (_cege .PdfObject );
if !_bdfbb {_fb .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_cde .ErrTypeError ;};_cffda =_ffdg ;}else if _badg ,_ddgb :=_cde .GetDict (obj );
_ddgb {_ebbc ._dcef =_badg ;_cffda =_badg ;}else {_fb .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_cde .ErrTypeError ;};if _cffda ==nil {_fb .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_gf .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _aedea :=_cffda .Get ("\u0054\u0079\u0070\u0065");_aedea !=nil {_gbgb ,_egagf :=_aedea .(*_cde .PdfObjectName );if !_egagf {_fb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_aedea );
}else {if *_gbgb !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_fb .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_gbgb );
};};};if _dbcfe :=_cffda .Get ("\u0046\u0053");_dbcfe !=nil {_ebbc .FS =_dbcfe ;};if _eedfg :=_cffda .Get ("\u0046");_eedfg !=nil {_ebbc .F =_eedfg ;};if _cbfdd :=_cffda .Get ("\u0055\u0046");_cbfdd !=nil {_ebbc .UF =_cbfdd ;};if _dcadb :=_cffda .Get ("\u0044\u004f\u0053");
_dcadb !=nil {_ebbc .DOS =_dcadb ;};if _acfb :=_cffda .Get ("\u004d\u0061\u0063");_acfb !=nil {_ebbc .Mac =_acfb ;};if _efgg :=_cffda .Get ("\u0055\u006e\u0069\u0078");_efgg !=nil {_ebbc .Unix =_efgg ;};if _defc :=_cffda .Get ("\u0049\u0044");_defc !=nil {_ebbc .ID =_defc ;
};if _bdcfe :=_cffda .Get ("\u0056");_bdcfe !=nil {_ebbc .V =_bdcfe ;};if _cdab :=_cffda .Get ("\u0045\u0046");_cdab !=nil {_ebbc .EF =_cdab ;};if _edbe :=_cffda .Get ("\u0052\u0046");_edbe !=nil {_ebbc .RF =_edbe ;};if _gfae :=_cffda .Get ("\u0044\u0065\u0073\u0063");
_gfae !=nil {_ebbc .Desc =_gfae ;};if _ffeef :=_cffda .Get ("\u0043\u0049");_ffeef !=nil {_ebbc .CI =_ffeef ;};if _aabaa :=_cffda .Get ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070");_aabaa !=nil {_ebbc .AFRelationship =_aabaa ;
};return _ebbc ,nil ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_cbcfg *LTV )EnableByName (name string ,extraCerts []*_ff .Certificate )error {_dcfa :=_cbcfg ._cfdb ._dbb .AcroForm ;for _ ,_bfabf :=range _dcfa .AllFields (){_bafga ,_ :=_bfabf .GetContext ().(*PdfFieldSignature );if _bafga ==nil {continue ;};if _faed :=_bafga .PartialName ();
_faed !=name {continue ;};return _cbcfg .Enable (_bafga .V ,extraCerts );};return nil ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_fcead ,_gbceb :=_cd .Open (filePath );if _gbceb !=nil {_fb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gbceb );
return nil ,_gbceb ;};defer _fcead .Close ();return NewCompositePdfFontFromTTF (_fcead );};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_abcb *_cde .PdfIndirectObject ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_gegge *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _dcggc []float64 ;for _afcg :=0;_afcg < _gegge .GetNumComponents ();_afcg ++{_dcggc =append (_dcggc ,0.0,1.0);};return _dcggc ;};func (_gfggb *PdfWriter )setDocInfo (_bcdbgg _cde .PdfObject ){if _gfggb .hasObject (_gfggb ._decfde ){delete (_gfggb ._fdeab ,_gfggb ._decfde );
delete (_gfggb ._fcadd ,_gfggb ._decfde );for _fafea ,_fccab :=range _gfggb ._abbc {if _fccab ==_gfggb ._decfde {copy (_gfggb ._abbc [_fafea :],_gfggb ._abbc [_fafea +1:]);_gfggb ._abbc [len (_gfggb ._abbc )-1]=nil ;_gfggb ._abbc =_gfggb ._abbc [:len (_gfggb ._abbc )-1];
break ;};};};_cfeag :=_cde .PdfIndirectObject {};_cfeag .PdfObject =_bcdbgg ;_gfggb ._decfde =&_cfeag ;_gfggb .addObject (&_cfeag );};func (_fgcdd *PdfWriter )copyObject (_efedfb _cde .PdfObject ,_efcabf map[_cde .PdfObject ]_cde .PdfObject ,_dgfcf map[_cde .PdfObject ]struct{},_eebcc bool )_cde .PdfObject {_agbe :=!_fgcdd ._ceaea &&_dgfcf !=nil ;
if _cfbfg ,_geebca :=_efcabf [_efedfb ];_geebca {if _agbe &&!_eebcc {delete (_dgfcf ,_efedfb );};return _cfbfg ;};if _efedfb ==nil {_bgae :=_cde .MakeNull ();return _bgae ;};_afeaac :=_efedfb ;switch _deecf :=_efedfb .(type ){case *_cde .PdfObjectArray :_dgbeg :=_cde .MakeArray ();
_afeaac =_dgbeg ;_efcabf [_efedfb ]=_afeaac ;for _ ,_eega :=range _deecf .Elements (){_dgbeg .Append (_fgcdd .copyObject (_eega ,_efcabf ,_dgfcf ,_eebcc ));};case *_cde .PdfObjectStreams :_gbfce :=&_cde .PdfObjectStreams {PdfObjectReference :_deecf .PdfObjectReference };
_afeaac =_gbfce ;_efcabf [_efedfb ]=_afeaac ;for _ ,_bffdg :=range _deecf .Elements (){_gbfce .Append (_fgcdd .copyObject (_bffdg ,_efcabf ,_dgfcf ,_eebcc ));};case *_cde .PdfObjectStream :_bffddd :=&_cde .PdfObjectStream {Stream :_deecf .Stream ,PdfObjectReference :_deecf .PdfObjectReference };
_afeaac =_bffddd ;_efcabf [_efedfb ]=_afeaac ;_bffddd .PdfObjectDictionary =_fgcdd .copyObject (_deecf .PdfObjectDictionary ,_efcabf ,_dgfcf ,_eebcc ).(*_cde .PdfObjectDictionary );case *_cde .PdfObjectDictionary :var _ffag bool ;if _agbe &&!_eebcc {if _ffacc ,_ :=_cde .GetNameVal (_deecf .Get ("\u0054\u0079\u0070\u0065"));
_ffacc =="\u0050\u0061\u0067\u0065"{_ ,_bgdag :=_fgcdd ._faag [_deecf ];_eebcc =!_bgdag ;_ffag =_eebcc ;};};_egdcg :=_cde .MakeDict ();_afeaac =_egdcg ;_efcabf [_efedfb ]=_afeaac ;for _ ,_afced :=range _deecf .Keys (){_egdcg .Set (_afced ,_fgcdd .copyObject (_deecf .Get (_afced ),_efcabf ,_dgfcf ,_eebcc ));
};if _ffag {_afeaac =_cde .MakeNull ();_eebcc =false ;};case *_cde .PdfIndirectObject :_caaab :=&_cde .PdfIndirectObject {PdfObjectReference :_deecf .PdfObjectReference };_afeaac =_caaab ;_efcabf [_efedfb ]=_afeaac ;_caaab .PdfObject =_fgcdd .copyObject (_deecf .PdfObject ,_efcabf ,_dgfcf ,_eebcc );
case *_cde .PdfObjectString :_dfcee :=*_deecf ;_afeaac =&_dfcee ;_efcabf [_efedfb ]=_afeaac ;case *_cde .PdfObjectName :_gffab :=*_deecf ;_afeaac =&_gffab ;_efcabf [_efedfb ]=_afeaac ;case *_cde .PdfObjectNull :_afeaac =_cde .MakeNull ();_efcabf [_efedfb ]=_afeaac ;
case *_cde .PdfObjectInteger :_caacc :=*_deecf ;_afeaac =&_caacc ;_efcabf [_efedfb ]=_afeaac ;case *_cde .PdfObjectReference :_gabgbg :=*_deecf ;_afeaac =&_gabgbg ;_efcabf [_efedfb ]=_afeaac ;case *_cde .PdfObjectFloat :_gfcdfd :=*_deecf ;_afeaac =&_gfcdfd ;
_efcabf [_efedfb ]=_afeaac ;case *_cde .PdfObjectBool :_eebgg :=*_deecf ;_afeaac =&_eebgg ;_efcabf [_efedfb ]=_afeaac ;case *pdfSignDictionary :_fabfa :=&pdfSignDictionary {PdfObjectDictionary :_cde .MakeDict (),_agfb :_deecf ._agfb ,_ecbaf :_deecf ._ecbaf };
_afeaac =_fabfa ;_efcabf [_efedfb ]=_afeaac ;for _ ,_cedfd :=range _deecf .Keys (){_fabfa .Set (_cedfd ,_fgcdd .copyObject (_deecf .Get (_cedfd ),_efcabf ,_dgfcf ,_eebcc ));};default:_fb .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_efedfb );
};if _agbe &&_eebcc {_dgfcf [_efedfb ]=struct{}{};};return _afeaac ;};

// Encoder returns the font's text encoder.
func (_eegfb pdfCIDFontType0 )Encoder ()_fab .TextEncoder {return _eegfb ._fddgfc };func _ddgf (_ggde *_cde .PdfObjectDictionary )(*PdfFieldButton ,error ){_cegf :=&PdfFieldButton {};_cegf .PdfField =NewPdfField ();_cegf .PdfField .SetContext (_cegf );
_cegf .Opt ,_ =_cde .GetArray (_ggde .Get ("\u004f\u0070\u0074"));_cdcgcg :=NewPdfAnnotationWidget ();_cdcgcg .A ,_ =_cde .GetDict (_ggde .Get ("\u0041"));_cdcgcg .AP ,_ =_cde .GetDict (_ggde .Get ("\u0041\u0050"));_cdcgcg .SetContext (_cegf );_cegf .PdfField .Annotations =append (_cegf .PdfField .Annotations ,_cdcgcg );
return _cegf ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_cbdb *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _cbdb .Alternate ==nil {if _cbdb .N ==1{_cebbd :=NewPdfColorspaceDeviceGray ();return _cebbd .ColorFromFloats (vals );}else if _cbdb .N ==3{_cbcb :=NewPdfColorspaceDeviceRGB ();
return _cbcb .ColorFromFloats (vals );}else if _cbdb .N ==4{_cbcfd :=NewPdfColorspaceDeviceCMYK ();return _cbcfd .ColorFromFloats (vals );}else {return nil ,_gf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _cbdb .Alternate .ColorFromFloats (vals );};

// GetStandardApplier gets currently used StandardApplier..
func (_dbeae *PdfWriter )GetStandardApplier ()StandardApplier {return _dbeae ._fdgff };

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_bebf :=NewPdfAnnotation ();_fecd :=&PdfAnnotationProjection {};_fecd .PdfAnnotation =_bebf ;_fecd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bebf .SetContext (_fecd );return _fecd ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_gcbgc *Image )ToGoImage ()(_cg .Image ,error ){_fb .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_cgfb ,_cegead :=_bbb .NewImage (int (_gcbgc .Width ),int (_gcbgc .Height ),int (_gcbgc .BitsPerComponent ),_gcbgc .ColorComponents ,_gcbgc .Data ,_gcbgc ._cbcfe ,_gcbgc ._gdbc );
if _cegead !=nil {return nil ,_cegead ;};return _cgfb ,nil ;};

// Encoder returns the font's text encoder.
func (_dcac *PdfFont )Encoder ()_fab .TextEncoder {_feeg :=_dcac .actualFont ();if _feeg ==nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_dcac ._dcgb );
return nil ;};return _feeg .Encoder ();};

// GetAscent returns the Ascent of the font `descriptor`.
func (_abdc *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _cde .GetNumberAsFloat (_abdc .Ascent );};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_gdcf *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// ToPdfObject implements interface PdfModel.
func (_gabg *PdfAnnotationSquiggly )ToPdfObject ()_cde .PdfObject {_gabg .PdfAnnotation .ToPdfObject ();_ebcd :=_gabg ._gfg ;_eeec :=_ebcd .PdfObject .(*_cde .PdfObjectDictionary );_gabg .PdfAnnotationMarkup .appendToPdfDictionary (_eeec );_eeec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_eeec .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gabg .QuadPoints );return _ebcd ;};

// ToPdfObject implements interface PdfModel.
func (_eed *PdfActionNamed )ToPdfObject ()_cde .PdfObject {_eed .PdfAction .ToPdfObject ();_efc :=_eed ._dfb ;_gce :=_efc .PdfObject .(*_cde .PdfObjectDictionary );_gce .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeNamed )));_gce .SetIfNotNil ("\u004e",_eed .N );
return _efc ;};

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_ebefa :=&PdfShadingType3 {};_ebefa .PdfShading =&PdfShading {};_ebefa .PdfShading ._fdbgb =_cde .MakeIndirectObject (_cde .MakeDict ());_ebefa .PdfShading ._fdea =_ebefa ;return _ebefa ;};

// GetContainingPdfObject implements interface PdfModel.
func (_baafc *Permissions )GetContainingPdfObject ()_cde .PdfObject {return _baafc ._abgage };func (_ggedc *PdfWriter )setDocumentIDs (_gbda ,_debeg string ){_ggedc ._dgdef =_cde .MakeArray (_cde .MakeHexString (_gbda ),_cde .MakeHexString (_debeg ));};


// ColorToRGB converts a CMYK32 color to an RGB color.
func (_bgdae *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_dacc ,_fddce :=color .(*PdfColorDeviceCMYK );if !_fddce {_fb .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecab :=_dacc .C ();_efd :=_dacc .M ();_bfef :=_dacc .Y ();_fddf :=_dacc .K ();_ecab =_ecab *(1-_fddf )+_fddf ;_efd =_efd *(1-_fddf )+_fddf ;
_bfef =_bfef *(1-_fddf )+_fddf ;_gbed :=1-_ecab ;_gfag :=1-_efd ;_gfcdd :=1-_bfef ;return NewPdfColorDeviceRGB (_gbed ,_gfag ,_gfcdd ),nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_bbgc *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afbgb :=vals [0];if _afbgb < 0.0||_afbgb > 1.0{_fb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afbgb );
return nil ,ErrColorOutOfRange ;};_geeg :=vals [1];if _geeg < 0.0||_geeg > 1.0{_fb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_geeg );return nil ,ErrColorOutOfRange ;
};_fecg :=vals [2];if _fecg < 0.0||_fecg > 1.0{_fb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fecg );return nil ,ErrColorOutOfRange ;};_deea :=NewPdfColorCalRGB (_afbgb ,_geeg ,_fecg );
return _deea ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ddae *PdfActionSetOCGState )ToPdfObject ()_cde .PdfObject {_ddae .PdfAction .ToPdfObject ();_gdcc :=_ddae ._dfb ;_fdf :=_gdcc .PdfObject .(*_cde .PdfObjectDictionary );_fdf .SetIfNotNil ("\u0053",_cde .MakeName (string (ActionTypeSetOCGState )));
_fdf .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_ddae .State );_fdf .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_ddae .PreserveRB );return _gdcc ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_cde .PdfObjectString ;Author *_cde .PdfObjectString ;Subject *_cde .PdfObjectString ;Keywords *_cde .PdfObjectString ;Creator *_cde .PdfObjectString ;Producer *_cde .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_cde .PdfObjectName ;_bdcd *_cde .PdfObjectDictionary ;};var _ecdgb =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_ffgc *PdfColorspaceCalGray )ToPdfObject ()_cde .PdfObject {_badb :=&_cde .PdfObjectArray {};_badb .Append (_cde .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_efdd :=_cde .MakeDict ();if _ffgc .WhitePoint !=nil {_efdd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cde .MakeArray (_cde .MakeFloat (_ffgc .WhitePoint [0]),_cde .MakeFloat (_ffgc .WhitePoint [1]),_cde .MakeFloat (_ffgc .WhitePoint [2])));
}else {_fb .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _ffgc .BlackPoint !=nil {_efdd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cde .MakeArray (_cde .MakeFloat (_ffgc .BlackPoint [0]),_cde .MakeFloat (_ffgc .BlackPoint [1]),_cde .MakeFloat (_ffgc .BlackPoint [2])));
};_efdd .Set ("\u0047\u0061\u006dm\u0061",_cde .MakeFloat (_ffgc .Gamma ));_badb .Append (_efdd );if _ffgc ._ccgf !=nil {_ffgc ._ccgf .PdfObject =_badb ;return _ffgc ._ccgf ;};return _badb ;};func _fadd (_eabd *XObjectForm )(*PdfRectangle ,bool ,error ){if _gcbc ,_dcag :=_eabd .BBox .(*_cde .PdfObjectArray );
_dcag {_cefc ,_bddf :=NewPdfRectangle (*_gcbc );if _bddf !=nil {return nil ,false ,_bddf ;};if _cgbf ,_eeaf :=_eabd .Matrix .(*_cde .PdfObjectArray );_eeaf {_dcggd ,_gefe :=_cgbf .ToFloat64Array ();if _gefe !=nil {return nil ,false ,_gefe ;};_bgegg :=_bc .IdentityMatrix ();
if len (_dcggd )==6{_bgegg =_bc .NewMatrix (_dcggd [0],_dcggd [1],_dcggd [2],_dcggd [3],_dcggd [4],_dcggd [5]);};_cefc .Transform (_bgegg );return _cefc ,true ,nil ;};return _cefc ,false ,nil ;};return nil ,false ,_gf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_addcb *PdfColorspaceLab )ColorFromPdfObjects (objects []_cde .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dedcc ,_efeb :=_cde .GetNumbersAsFloat (objects );
if _efeb !=nil {return nil ,_efeb ;};return _addcb .ColorFromFloats (_dedcc );};func (_eae *PdfReader )newPdfAnnotationPrinterMarkFromDict (_bebd *_cde .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_ebee :=PdfAnnotationPrinterMark {};_ebee .MN =_bebd .Get ("\u004d\u004e");
return &_ebee ,nil ;};

// BaseFont returns the font's "BaseFont" field.
func (_cagc *PdfFont )BaseFont ()string {return _cagc .baseFields ()._bbdf };func _cccc (_gabcg _cde .PdfObject )(map[_fab .CharCode ]float64 ,error ){if _gabcg ==nil {return nil ,nil ;};_bagcf ,_cfcg :=_cde .GetArray (_gabcg );if !_cfcg {return nil ,nil ;
};_bdbge :=map[_fab .CharCode ]float64 {};_fgfbc :=_bagcf .Len ();for _dffa :=0;_dffa < _fgfbc -1;_dffa ++{_acdba :=_cde .TraceToDirectObject (_bagcf .Get (_dffa ));_gdfc ,_bbeb :=_cde .GetIntVal (_acdba );if !_bbeb {return nil ,_a .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_dffa ,_acdba );
};_dffa ++;if _dffa > _fgfbc -1{return nil ,_a .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bagcf );};_dacbe :=_cde .TraceToDirectObject (_bagcf .Get (_dffa ));
switch _dacbe .(type ){case *_cde .PdfObjectArray :_gdfae ,_ :=_cde .GetArray (_dacbe );if _bdbf ,_ccddf :=_gdfae .ToFloat64Array ();_ccddf ==nil {for _eddac :=0;_eddac < len (_bdbf );_eddac ++{_bdbge [_fab .CharCode (_gdfc +_eddac )]=_bdbf [_eddac ];};
}else {return nil ,_a .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dffa ,_dacbe );};case *_cde .PdfObjectInteger :_cdffb ,_fgddd :=_cde .GetIntVal (_dacbe );
if !_fgddd {return nil ,_a .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dffa ,_dacbe );};_dffa ++;if _dffa > _fgfbc -1{return nil ,_a .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bagcf );
};_ebge :=_bagcf .Get (_dffa );_cdef ,_aefdd :=_cde .GetNumberAsFloat (_ebge );if _aefdd !=nil {return nil ,_a .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dffa ,_ebge );
};for _bcdcd :=_gdfc ;_bcdcd <=_cdffb ;_bcdcd ++{_bdbge [_fab .CharCode (_bcdcd )]=_cdef ;};default:return nil ,_a .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dffa ,_dacbe );
};};return _bdbge ,nil ;};

// Val returns the color value.
func (_fbbde *PdfColorDeviceGray )Val ()float64 {return float64 (*_fbbde )};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_bccba *PdfPageResources )GetXObjectByName (keyName _cde .PdfObjectName )(*_cde .PdfObjectStream ,XObjectType ){if _bccba .XObject ==nil {return nil ,XObjectTypeUndefined ;};_ecbgc ,_gacgc :=_cde .TraceToDirectObject (_bccba .XObject ).(*_cde .PdfObjectDictionary );
if !_gacgc {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cde .TraceToDirectObject (_bccba .XObject ));
return nil ,XObjectTypeUndefined ;};if _edcfe :=_ecbgc .Get (keyName );_edcfe !=nil {_fddgg ,_aebba :=_cde .GetStream (_edcfe );if !_aebba {_fb .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_edcfe );
return nil ,XObjectTypeUndefined ;};_gdbb :=_fddgg .PdfObjectDictionary ;_efgfdb ,_aebba :=_cde .TraceToDirectObject (_gdbb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_cde .PdfObjectName );if !_aebba {_fb .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_gdbb .String ());
return nil ,XObjectTypeUndefined ;};if *_efgfdb =="\u0049\u006d\u0061g\u0065"{return _fddgg ,XObjectTypeImage ;}else if *_efgfdb =="\u0046\u006f\u0072\u006d"{return _fddgg ,XObjectTypeForm ;}else if *_efgfdb =="\u0050\u0053"{return _fddgg ,XObjectTypePS ;
}else {_fb .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_efgfdb );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_fggea ,_baccc :=_cd .Open (filePath );if _baccc !=nil {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_baccc );
return nil ,_baccc ;};defer _fggea .Close ();return NewPdfFontFromTTF (_fggea );};func _dfdf (_cfgcad []byte )[]byte {const _fddd =52845;const _dggeb =22719;_deecc :=55665;for _ ,_bdfgb :=range _cfgcad [:4]{_deecc =(int (_bdfgb )+_deecc )*_fddd +_dggeb ;
};_gadag :=make ([]byte ,len (_cfgcad )-4);for _dgdaf ,_gfabg :=range _cfgcad [4:]{_gadag [_dgdaf ]=byte (int (_gfabg )^_deecc >>8);_deecc =(int (_gfabg )+_deecc )*_fddd +_dggeb ;};return _gadag ;};func _fbbab (_dafa _cde .PdfObject ){_fb .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_dafa ,_dafa .String ());
if _afeb ,_aebab :=_dafa .(*_cde .PdfObjectStream );_aebab {_gaecg ,_gecf :=_cde .DecodeStream (_afeb );if _gecf !=nil {_fb .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_gecf );return ;};_fb .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_gaecg );
}else if _geeaf ,_gfcfb :=_dafa .(*_cde .PdfIndirectObject );_gfcfb {_fb .Log .Debug ("\u0025\u0054\u0020%\u0076",_geeaf .PdfObject ,_geeaf .PdfObject );_fb .Log .Debug ("\u0025\u0073",_geeaf .PdfObject .String ());};};

// IsEncrypted returns true if the PDF file is encrypted.
func (_cedg *PdfReader )IsEncrypted ()(bool ,error ){return _cedg ._fdccd .IsEncrypted ()};func (_ecfgg *PdfReader )newPdfOutlineItemFromIndirectObject (_deaeba *_cde .PdfIndirectObject )(*PdfOutlineItem ,error ){_fbacf ,_gddgd :=_deaeba .PdfObject .(*_cde .PdfObjectDictionary );
if !_gddgd {return nil ,_a .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cacdgg :=NewPdfOutlineItem ();_aagc :=_fbacf .Get ("\u0054\u0069\u0074l\u0065");
if _aagc ==nil {return nil ,_a .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_gfbfa ,_gefg :=_cde .GetString (_aagc );if !_gefg {return nil ,_a .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_aagc );};_cacdgg .Title =_gfbfa ;if _gceba :=_fbacf .Get ("\u0043\u006f\u0075n\u0074");
_gceba !=nil {_dbbc ,_fefa :=_gceba .(*_cde .PdfObjectInteger );if !_fefa {return nil ,_a .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_gceba );};_cagd :=int64 (*_dbbc );
_cacdgg .Count =&_cagd ;};if _bdfad :=_fbacf .Get ("\u0044\u0065\u0073\u0074");_bdfad !=nil {_cacdgg .Dest =_cde .ResolveReference (_bdfad );if !_ecfgg ._gbeac {_cffga :=_ecfgg .traverseObjectData (_cacdgg .Dest );if _cffga !=nil {return nil ,_cffga ;};
};};if _fcgg :=_fbacf .Get ("\u0041");_fcgg !=nil {_cacdgg .A =_cde .ResolveReference (_fcgg );if !_ecfgg ._gbeac {_aaefe :=_ecfgg .traverseObjectData (_cacdgg .A );if _aaefe !=nil {return nil ,_aaefe ;};};};if _cfgb :=_fbacf .Get ("\u0053\u0045");_cfgb !=nil {_cacdgg .SE =nil ;
};if _aeadc :=_fbacf .Get ("\u0043");_aeadc !=nil {_cacdgg .C =_cde .ResolveReference (_aeadc );};if _fdacd :=_fbacf .Get ("\u0046");_fdacd !=nil {_cacdgg .F =_cde .ResolveReference (_fdacd );};return _cacdgg ,nil ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_gfaf *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_gfaf .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_gfaf ._deffb =acroForm ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_bcae *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_cde .PdfObject )(PdfColor ,error ){if _bcae .Alternate ==nil {if _bcae .N ==1{_cdgf :=NewPdfColorspaceDeviceGray ();return _cdgf .ColorFromPdfObjects (objects );}else if _bcae .N ==3{_fbfg :=NewPdfColorspaceDeviceRGB ();
return _fbfg .ColorFromPdfObjects (objects );}else if _bcae .N ==4{_affdc :=NewPdfColorspaceDeviceCMYK ();return _affdc .ColorFromPdfObjects (objects );}else {return nil ,_gf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _bcae .Alternate .ColorFromPdfObjects (objects );};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_eccdca *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_cfea :=_eccdca ._fdccd .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _cfea {return nil ,_gf .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_cfea {return _eccdca ,nil ;};if _eccdca ._egfff [revisionNumber ]!=nil {return _eccdca ._egfff [revisionNumber ],nil ;};_cebe :=_eccdca ;for _afbdb :=_cfea -1;_afbdb >=revisionNumber ;_afbdb --{_dbdfd ,_fgcb :=_cebe .GetPreviousRevision ();
if _fgcb !=nil {return nil ,_fgcb ;};_eccdca ._egfff [_afbdb ]=_dbdfd ;_cebe =_dbdfd ;};return _cebe ,nil ;};type pdfSignDictionary struct{*_cde .PdfObjectDictionary ;_agfb *SignatureHandler ;_ecbaf *PdfSignature ;_gdbda int64 ;_bcdcga int ;_bebgc int ;
_acgb int ;_fefcca int ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_ffbacf *LTV )Enable (sig *PdfSignature ,extraCerts []*_ff .Certificate )error {if _eefdg :=_ffbacf .validateSig (sig );_eefdg !=nil {return _eefdg ;};_deaga ,_ebdad :=_ffbacf .generateVRIKey (sig );if _ebdad !=nil {return _ebdad ;};if _ ,_bgega :=_ffbacf ._fcdcb .VRI [_deaga ];
_bgega &&_ffbacf .SkipExisting {return nil ;};_fegc ,_ebdad :=sig .GetCerts ();if _ebdad !=nil {return _ebdad ;};return _ffbacf .enable (_fegc ,extraCerts ,_deaga );};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_fdef *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_fdef .HiVal )};};

// AddFont adds a font dictionary to the Font resources.
func (_ggbbg *PdfPage )AddFont (name _cde .PdfObjectName ,font _cde .PdfObject )error {if _ggbbg .Resources ==nil {_ggbbg .Resources =NewPdfPageResources ();};if _ggbbg .Resources .Font ==nil {_ggbbg .Resources .Font =_cde .MakeDict ();};_aadea ,_cbbbc :=_cde .TraceToDirectObject (_ggbbg .Resources .Font ).(*_cde .PdfObjectDictionary );
if !_cbbbc {_fb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_cde .TraceToDirectObject (_ggbbg .Resources .Font ));
return _gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aadea .Set (name ,font );return nil ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_gdga *Image )GetParamsDict ()*_cde .PdfObjectDictionary {_fcacf :=_cde .MakeDict ();_fcacf .Set ("\u0057\u0069\u0064t\u0068",_cde .MakeInteger (_gdga .Width ));_fcacf .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cde .MakeInteger (_gdga .Height ));
_fcacf .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cde .MakeInteger (int64 (_gdga .ColorComponents )));_fcacf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cde .MakeInteger (_gdga .BitsPerComponent ));
return _fcacf ;};var _aebcb =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_fcege *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _bfeec []*PdfField ;if _fcege .AcroForm !=nil {_bfeec =_fcege .AcroForm .AllFields ();};_efcf :=make (map[*PdfField ]struct{},len (_bfeec ));for _ ,_gbbfg :=range _bfeec {_efcf [_gbbfg ]=struct{}{};
};for _ ,_fefg :=range _fcege .PageList {_ggbfc ,_fggcg :=_fefg .GetAnnotations ();if _fggcg !=nil {return false ,_fggcg ;};for _ ,_egae :=range _ggbfc {_ffaef ,_dbdfc :=_egae .GetContext ().(*PdfAnnotationWidget );if !_dbdfc {continue ;};_ddabf :=_ffaef .Field ();
if _ddabf ==nil {return true ,nil ;};if _ ,_geefb :=_efcf [_ddabf ];!_geefb {return true ,nil ;};};};return false ,nil ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_aeca *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_gf .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_afbb ,_bcgb :=_bbb .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._cbcfe ,img ._gdbc );if _bcgb !=nil {return img ,_bcgb ;};_addg ,_bcgb :=_bbb .NRGBAConverter .Convert (_afbb );if _bcgb !=nil {return img ,_bcgb ;
};_ffbe :=_edggb (_addg .Base ());_fb .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_fb .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_fb .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_ffbe .Data );
_fb .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_ffbe );return _ffbe ,nil ;};func (_ccgd *PdfReader )traverseObjectData (_gbcbc _cde .PdfObject )error {return _cde .ResolveReferencesDeep (_gbcbc ,_ccgd ._acfcd );};

// R returns the value of the red component of the color.
func (_egbea *PdfColorDeviceRGB )R ()float64 {return _egbea [0]};

// ToPdfObject implements interface PdfModel.
func (_deef *PdfAnnotationPrinterMark )ToPdfObject ()_cde .PdfObject {_deef .PdfAnnotation .ToPdfObject ();_dacd :=_deef ._gfg ;_egc :=_dacd .PdfObject .(*_cde .PdfObjectDictionary );_egc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cde .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_egc .SetIfNotNil ("\u004d\u004e",_deef .MN );return _dacd ;};func (_dgee *PdfReader )newPdfActionRenditionFromDict (_cge *_cde .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_cge .Get ("\u0052"),AN :_cge .Get ("\u0041\u004e"),OP :_cge .Get ("\u004f\u0050"),JS :_cge .Get ("\u004a\u0053")},nil ;
};func _bggfd (_eebbea *EmbeddedFile )*PdfFilespec {_cecf :=&PdfFilespec {};_cecf ._dcef =_cde .MakeIndirectObject (_cde .MakeDict ());_cecf .Desc =_cde .MakeString (_eebbea .Description );_cecf .EF =_eebbea .ToPdfObject ();_cecf .F =_cde .MakeString (_eebbea .Name );
_cecf .UF =_cde .MakeEncodedString (_eebbea .Name ,true );_egdg :="U\u006e\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064";switch _eebbea .Relationship {case RelationshipSource :_egdg ="\u0053\u006f\u0075\u0072\u0063\u0065";case RelationshipData :_egdg ="\u0044\u0061\u0074\u0061";
case RelationshipAlternative :_egdg ="A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065";case RelationshipSupplement :_egdg ="\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074";};_cecf .AFRelationship =_cde .MakeName (_egdg );return _cecf ;
};

// ToPdfObject returns the PDF representation of the function.
func (_bddd *PdfFunctionType3 )ToPdfObject ()_cde .PdfObject {_edfe :=_cde .MakeDict ();_edfe .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cde .MakeInteger (3));_acfe :=&_cde .PdfObjectArray {};for _ ,_ecfga :=range _bddd .Domain {_acfe .Append (_cde .MakeFloat (_ecfga ));
};_edfe .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_acfe );if _bddd .Range !=nil {_bfge :=&_cde .PdfObjectArray {};for _ ,_faffb :=range _bddd .Range {_bfge .Append (_cde .MakeFloat (_faffb ));};_edfe .Set ("\u0052\u0061\u006eg\u0065",_bfge );};if _bddd .Functions !=nil {_bfcd :=&_cde .PdfObjectArray {};
for _ ,_bgdcf :=range _bddd .Functions {_bfcd .Append (_bgdcf .ToPdfObject ());};_edfe .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_bfcd );};if _bddd .Bounds !=nil {_dgaab :=&_cde .PdfObjectArray {};for _ ,_gfaeb :=range _bddd .Bounds {_dgaab .Append (_cde .MakeFloat (_gfaeb ));
};_edfe .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_dgaab );};if _bddd .Encode !=nil {_bbede :=&_cde .PdfObjectArray {};for _ ,_fcdeb :=range _bddd .Encode {_bbede .Append (_cde .MakeFloat (_fcdeb ));};_edfe .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_bbede );
};if _bddd ._dbgcf !=nil {_bddd ._dbgcf .PdfObject =_edfe ;return _bddd ._dbgcf ;};return _edfe ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _cde .PdfObject ;IC _cde .PdfObject ;BE _cde .PdfObject ;RD _cde .PdfObject ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cgcfd *PdfPageResources )GetShadingByName (keyName _cde .PdfObjectName )(*PdfShading ,bool ){if _cgcfd .Shading ==nil {return nil ,false ;};_fagec ,_dedgeg :=_cde .TraceToDirectObject (_cgcfd .Shading ).(*_cde .PdfObjectDictionary );if !_dedgeg {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cgcfd .Shading );
return nil ,false ;};if _cdddc :=_fagec .Get (keyName );_cdddc !=nil {_eafg ,_efedb :=_cdacfe (_cdddc );if _efedb !=nil {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_efedb );
return nil ,false ;};return _eafg ,true ;};return nil ,false ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dcca *PdfColorspaceDeviceCMYK )ToPdfObject ()_cde .PdfObject {return _cde .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};func _decdf (_dbgfe *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_dbgfe }};type pdfFontType0 struct{fontCommon ;
_dfdg *_cde .PdfIndirectObject ;_cecbfe _fab .TextEncoder ;Encoding _cde .PdfObject ;DescendantFont *PdfFont ;_abefe *_ega .CMap ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_aadgd *_cde .PdfObjectDictionary ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_babc *PdfFieldButton )IsPush ()bool {return _babc .GetType ()==ButtonTypePush };func (_cfce *PdfReader )newPdfAnnotationCircleFromDict (_cddg *_cde .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_ggb :=PdfAnnotationCircle {};_faac ,_deda :=_cfce .newPdfAnnotationMarkupFromDict (_cddg );
if _deda !=nil {return nil ,_deda ;};_ggb .PdfAnnotationMarkup =_faac ;_ggb .BS =_cddg .Get ("\u0042\u0053");_ggb .IC =_cddg .Get ("\u0049\u0043");_ggb .BE =_cddg .Get ("\u0042\u0045");_ggb .RD =_cddg .Get ("\u0052\u0044");return &_ggb ,nil ;};func (_fdgcb *PdfReader )newPdfFieldSignatureFromDict (_abde *_cde .PdfObjectDictionary )(*PdfFieldSignature ,error ){_cgcb :=&PdfFieldSignature {};
_adaa ,_gdab :=_cde .GetIndirect (_abde .Get ("\u0056"));if _gdab {var _gfbab error ;_cgcb .V ,_gfbab =_fdgcb .newPdfSignatureFromIndirect (_adaa );if _gfbab !=nil {return nil ,_gfbab ;};};_cgcb .Lock ,_ =_cde .GetIndirect (_abde .Get ("\u004c\u006f\u0063\u006b"));
_cgcb .SV ,_ =_cde .GetIndirect (_abde .Get ("\u0053\u0056"));return _cgcb ,nil ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_agdf *PdfOutline )GetContainingPdfObject ()_cde .PdfObject {return _agdf ._abcb };

// GetNumComponents returns the number of color components (3 for RGB).
func (_fgece *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _cde .PdfObject ;};func _dbfbc (_efbdb _cde .PdfObject )(*PdfFunctionType3 ,error ){_acde :=&PdfFunctionType3 {};var _bbag *_cde .PdfObjectDictionary ;if _baccg ,_gcddc :=_efbdb .(*_cde .PdfIndirectObject );_gcddc {_efddc ,_gaaee :=_baccg .PdfObject .(*_cde .PdfObjectDictionary );
if !_gaaee {return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_acde ._dbgcf =_baccg ;_bbag =_efddc ;}else if _cdcce ,_cfggc :=_efbdb .(*_cde .PdfObjectDictionary );_cfggc {_bbag =_cdcce ;}else {return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_geaef ,_bcaga :=_cde .TraceToDirectObject (_bbag .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cde .PdfObjectArray );if !_bcaga {_fb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _geaef .Len ()!=2{_fb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_gf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cdacb ,_agcc :=_geaef .ToFloat64Array ();if _agcc !=nil {return nil ,_agcc ;};_acde .Domain =_cdacb ;_geaef ,_bcaga =_cde .TraceToDirectObject (_bbag .Get ("\u0052\u0061\u006eg\u0065")).(*_cde .PdfObjectArray );
if _bcaga {if _geaef .Len ()< 0||_geaef .Len ()%2!=0{return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_gacfc ,_bcgge :=_geaef .ToFloat64Array ();if _bcgge !=nil {return nil ,_bcgge ;};_acde .Range =_gacfc ;
};_geaef ,_bcaga =_cde .TraceToDirectObject (_bbag .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_cde .PdfObjectArray );if !_bcaga {_fb .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_acde .Functions =[]PdfFunction {};
for _ ,_gbeg :=range _geaef .Elements (){_cagbd ,_adgga :=_bedaa (_gbeg );if _adgga !=nil {return nil ,_adgga ;};_acde .Functions =append (_acde .Functions ,_cagbd );};_geaef ,_bcaga =_cde .TraceToDirectObject (_bbag .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_cde .PdfObjectArray );
if !_bcaga {_fb .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_agbf ,_agcc :=_geaef .ToFloat64Array ();if _agcc !=nil {return nil ,_agcc ;};_acde .Bounds =_agbf ;if len (_acde .Bounds )!=len (_acde .Functions )-1{_fb .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_acde .Bounds ),len (_acde .Functions ));
return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_geaef ,_bcaga =_cde .TraceToDirectObject (_bbag .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_cde .PdfObjectArray );if !_bcaga {_fb .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bfac ,_agcc :=_geaef .ToFloat64Array ();
if _agcc !=nil {return nil ,_agcc ;};_acde .Encode =_bfac ;if len (_acde .Encode )!=2*len (_acde .Functions ){_fb .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_acde .Encode ),len (_acde .Functions ));
return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _acde ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cccbd pdfCIDFontType0 )GetCharMetrics (code _fab .CharCode )(_baf .CharMetrics ,bool ){_bbggcc :=_cccbd ._ebbff ;if _fbgc ,_dbbe :=_cccbd ._baff [code ];_dbbe {_bbggcc =_fbgc ;};return _baf .CharMetrics {Wx :_bbggcc },true ;};func _efdfg (_gdccb []byte )([]byte ,error ){_dgedcgc :=_dda .New ();
if _ ,_bfaad :=_df .Copy (_dgedcgc ,_bb .NewReader (_gdccb ));_bfaad !=nil {return nil ,_bfaad ;};return _dgedcgc .Sum (nil ),nil ;};

// SetAnnotations sets the annotations list.
func (_cddcc *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_cddcc ._babf =annotations };

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_cde .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_gbdd *_cde .PdfIndirectObject ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_badbbd *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_cgaee :=NewPdfOutlineItem ();_cgaee .Title =_cde .MakeEncodedString (_badbbd .Title ,true );_cgaee .Dest =_badbbd .Dest .ToPdfObject ();var _cbaa []*PdfOutlineItem ;var _dgffa int64 ;
var _aagdd *PdfOutlineItem ;for _ ,_dbae :=range _badbbd .Entries {_abac ,_gaec :=_dbae .ToPdfOutlineItem ();_abac .Parent =&_cgaee .PdfOutlineTreeNode ;if _aagdd !=nil {_aagdd .Next =&_abac .PdfOutlineTreeNode ;_abac .Prev =&_aagdd .PdfOutlineTreeNode ;
};_cbaa =append (_cbaa ,_abac );_dgffa +=_gaec ;_aagdd =_abac ;};_fbbf :=len (_cbaa );_dgffa +=int64 (_fbbf );if _fbbf > 0{_cgaee .First =&_cbaa [0].PdfOutlineTreeNode ;_cgaee .Last =&_cbaa [_fbbf -1].PdfOutlineTreeNode ;_cgaee .Count =&_dgffa ;};return _cgaee ,_dgffa ;
};

// GetContainingPdfObject implements interface PdfModel.
func (_bce *PdfAction )GetContainingPdfObject ()_cde .PdfObject {return _bce ._dfb };

// SetFontByName sets the font specified by keyName to the given object.
func (_acdcf *PdfPageResources )SetFontByName (keyName _cde .PdfObjectName ,obj _cde .PdfObject )error {if _acdcf .Font ==nil {_acdcf .Font =_cde .MakeDict ();};_afgbbc ,_dacbf :=_cde .TraceToDirectObject (_acdcf .Font ).(*_cde .PdfObjectDictionary );if !_dacbf {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cde .TraceToDirectObject (_acdcf .Font ));
return _cde .ErrTypeError ;};_afgbbc .Set (keyName ,obj );return nil ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _cde .PdfObject ;IC _cde .PdfObject ;BE _cde .PdfObject ;RD _cde .PdfObject ;};

// Names represents a PDF name tree.
//
// Ref: PDF32000_2008 chapter 7.7.4.
type Names struct{_adffb *_cde .PdfIndirectObject ;

// Dests is a name tree mapping name string to destinations.
Dests *_cde .PdfObjectDictionary ;

// AP is a name tree mapping name strings to annotation appearance streams.
AP *_cde .PdfObjectDictionary ;

// JavaScript is a name tree mapping name strings to JavaScript actions.
JavaScript *_cde .PdfObjectDictionary ;

// Pages is a name tree mapping name strings to visible pages for use in interactive forms.
Pages *_cde .PdfObjectDictionary ;

// Templates is a name tree mapping name strings to invisible (template) pages for use in interactive forms.
Templates *_cde .PdfObjectDictionary ;

// IDS is a name tree mapping digital identifies to Web Capture content sets.
IDS *_cde .PdfObjectDictionary ;

// URLS is a name tree mapping URLs to Web Capture content sets.
URLS *_cde .PdfObjectDictionary ;

// EmbeddedFiles is a name tree mapping name strings to file specifications for embedded file streams.
EmbeddedFiles *_cde .PdfObjectDictionary ;

// AlternatePresentations is a name tree mapping name strings to alternate presentations.
AlternatePresentations *_cde .PdfObjectDictionary ;

// Renditions is a name tree mapping name strings (which shall have Unicode encoding) to rendition objects.
Renditions *_cde .PdfObjectDictionary ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_eedf *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_cde .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_gf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edda ,_gceg :=_cde .GetNumbersAsFloat (objects );
if _gceg !=nil {return nil ,_gceg ;};return _eedf .ColorFromFloats (_edda );};func (_dgf *PdfReader )newPdfActionImportDataFromDict (_abea *_cde .PdfObjectDictionary )(*PdfActionImportData ,error ){_dgc ,_gdg :=_bfc (_abea .Get ("\u0046"));if _gdg !=nil {return nil ,_gdg ;
};return &PdfActionImportData {F :_dgc },nil ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_bfecg *PdfPageResources )GetXObjectImageByName (keyName _cde .PdfObjectName )(*XObjectImage ,error ){_beaga ,_dfbbd :=_bfecg .GetXObjectByName (keyName );if _beaga ==nil {return nil ,nil ;};if _dfbbd !=XObjectTypeImage {return nil ,_gf .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_dageb ,_gbfeg :=NewXObjectImageFromStream (_beaga );if _gbfeg !=nil {return nil ,_gbfeg ;};return _dageb ,nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_cde .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_eaefb *_cde .PdfIndirectObject ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;
BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_acbdc *PdfPageResources )GetColorspaceByName (keyName _cde .PdfObjectName )(PdfColorspace ,bool ){_geaa ,_abedfa :=_acbdc .GetColorspaces ();if _abedfa !=nil {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_abedfa );
return nil ,false ;};if _geaa ==nil {return nil ,false ;};_abcdaa ,_bbbge :=_geaa .Colorspaces [string (keyName )];if !_bbbge {return nil ,false ;};return _abcdaa ,true ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_ffaf *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};func (_dfbfe *PdfWriter )writeTrailer (_fbacfa int ){_dfbfe .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _decfa :=0;_decfa <=_fbacfa ;{for ;_decfa <=_fbacfa ;
_decfa ++{_acffc ,_gcfaeg :=_dfbfe ._cegabf [_decfa ];if _gcfaeg &&(!_dfbfe ._ceaea ||_dfbfe ._ceaea &&(_acffc .Type ==1&&_acffc .Offset >=_dfbfe ._fgcbc ||_acffc .Type ==0)){break ;};};var _dcbdc int ;for _dcbdc =_decfa +1;_dcbdc <=_fbacfa ;_dcbdc ++{_dccbdf ,_bddbgg :=_dfbfe ._cegabf [_dcbdc ];
if _bddbgg &&(!_dfbfe ._ceaea ||_dfbfe ._ceaea &&(_dccbdf .Type ==1&&_dccbdf .Offset > _dfbfe ._fgcbc )){continue ;};break ;};_cgaba :=_a .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_decfa ,_dcbdc -_decfa );_dfbfe .writeString (_cgaba );for _gfabf :=_decfa ;
_gfabf < _dcbdc ;_gfabf ++{_cfecf :=_dfbfe ._cegabf [_gfabf ];switch _cfecf .Type {case 0:_cgaba =_a .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_dfbfe .writeString (_cgaba );case 1:_cgaba =_a .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_cfecf .Offset ,0);
_dfbfe .writeString (_cgaba );};};_decfa =_dcbdc +1;};_cbfb :=_cde .MakeDict ();_cbfb .Set ("\u0049\u006e\u0066\u006f",_dfbfe ._decfde );_cbfb .Set ("\u0052\u006f\u006f\u0074",_dfbfe ._dbabf );_cbfb .Set ("\u0053\u0069\u007a\u0065",_cde .MakeInteger (int64 (_fbacfa +1)));
if _dfbfe ._ceaea &&_dfbfe ._abdd > 0{_cbfb .Set ("\u0050\u0072\u0065\u0076",_cde .MakeInteger (_dfbfe ._abdd ));};if _dfbfe ._febcf !=nil {_cbfb .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_dfbfe ._fdbfc );};if _dfbfe ._dgdef ==nil &&_dfbfe ._fegb !=""&&_dfbfe ._dbbaa !=""{_dfbfe ._dgdef =_cde .MakeArray (_cde .MakeHexString (_dfbfe ._fegb ),_cde .MakeHexString (_dfbfe ._dbbaa ));
};if _dfbfe ._dgdef !=nil {_cbfb .Set ("\u0049\u0044",_dfbfe ._dgdef );_fb .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_dfbfe ._dgdef );};_dfbfe .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_dfbfe .writeString (_cbfb .WriteString ());
_dfbfe .writeString ("\u000a");};

// ToPdfObject implements interface PdfModel.
func (_aaeca *PdfSignatureReference )ToPdfObject ()_cde .PdfObject {_bgce :=_cde .MakeDict ();_bgce .SetIfNotNil ("\u0054\u0079\u0070\u0065",_aaeca .Type );_bgce .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_aaeca .TransformMethod );
_bgce .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_aaeca .TransformParams );_bgce .SetIfNotNil ("\u0044\u0061\u0074\u0061",_aaeca .Data );_bgce .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_aaeca .DigestMethod );
return _bgce ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_adbb :=NewPdfAnnotation ();_gfc :=&PdfAnnotationCircle {};_gfc .PdfAnnotation =_adbb ;_gfc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_adbb .SetContext (_gfc );return _gfc ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_fcccd *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_ddfgc :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_eggec ,_cbce :=_fcccd .GetNumPages ();if _cbce !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbce );
return nil ,_cbce ;};for _gcbd :=1;_gcbd <=_eggec ;_gcbd ++{_cccae ,_gdcde :=_fcccd .GetPage (_gcbd );if _gdcde !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdcde );return nil ,_gdcde ;};if opts .PageProcessCallback !=nil {_gdcde =opts .PageProcessCallback (_gcbd ,_cccae );
if _gdcde !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdcde );return nil ,_gdcde ;};}else if opts .PageCallback !=nil {opts .PageCallback (_gcbd ,_cccae );};_gdcde =_ddfgc .AddPage (_cccae );if _gdcde !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdcde );
return nil ,_gdcde ;};};_ddfgc ._dgccdd =_fcccd .PdfVersion ();if !opts .SkipInfo {_efeee ,_eebafc :=_fcccd .GetPdfInfo ();if _eebafc !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eebafc );}else {_ddfgc ._decfde .PdfObject =_efeee .ToPdfObject ();
};};if !opts .SkipMetadata {if _ffcgc :=_fcccd ._gaeed .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ffcgc !=nil {if _dabeg :=_ddfgc .SetCatalogMetadata (_ffcgc );_dabeg !=nil {return nil ,_dabeg ;};};};if !opts .SkipAcroForm {_beecf :=_ddfgc .SetForms (_fcccd .AcroForm );
if _beecf !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_beecf );return nil ,_beecf ;};};if !opts .SkipOutlines {_ddfgc .AddOutlineTree (_fcccd .GetOutlineTree ());};if !opts .SkipOCProperties {_efacc ,_fcdb :=_fcccd .GetOCProperties ();
if _fcdb !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcdb );}else {_fcdb =_ddfgc .SetOCProperties (_efacc );if _fcdb !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcdb );};};};if !opts .SkipPageLabels {_baabd ,_cgeacc :=_fcccd .GetPageLabels ();
if _cgeacc !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgeacc );}else {_cgeacc =_ddfgc .SetPageLabels (_baabd );if _cgeacc !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgeacc );};};};if !opts .SkipNamedDests {_bbbaa ,_fgde :=_fcccd .GetNamedDestinations ();
if _fgde !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fgde );}else {_fgde =_ddfgc .SetNamedDestinations (_bbbaa );if _fgde !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fgde );};};};if !opts .SkipNameDictionary {_fcgcb ,_ffeg :=_fcccd .GetNameDictionary ();
if _ffeg !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ffeg );}else {_ffeg =_ddfgc .SetNameDictionary (_fcgcb );if _ffeg !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ffeg );};};};if !opts .SkipRotation &&_fcccd .Rotate !=nil {if _ccfdg :=_ddfgc .SetRotation (*_fcccd .Rotate );
_ccfdg !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccfdg );};};return &_ddfgc ,nil ;};func (_egaf *PdfSignature )extractChainFromCert ()([]*_ff .Certificate ,error ){var _fdfcgd *_cde .PdfObjectArray ;switch _dcdd :=_egaf .Cert .(type ){case *_cde .PdfObjectString :_fdfcgd =_cde .MakeArray (_dcdd );
case *_cde .PdfObjectArray :_fdfcgd =_dcdd ;default:return nil ,_a .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_dcdd );
};var _bcafeg _bb .Buffer ;for _ ,_ggfab :=range _fdfcgd .Elements (){_gcffg ,_edgba :=_cde .GetString (_ggfab );if !_edgba {return nil ,_a .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_ggfab );
};if _ ,_agedbf :=_bcafeg .Write (_gcffg .Bytes ());_agedbf !=nil {return nil ,_agedbf ;};};return _ff .ParseCertificates (_bcafeg .Bytes ());};func (_dbfb *PdfReader )newPdfAnnotationLinkFromDict (_addc *_cde .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_fbfa :=PdfAnnotationLink {};
_fbfa .A =_addc .Get ("\u0041");_fbfa .Dest =_addc .Get ("\u0044\u0065\u0073\u0074");_fbfa .H =_addc .Get ("\u0048");_fbfa .PA =_addc .Get ("\u0050\u0041");_fbfa .QuadPoints =_addc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fbfa .BS =_addc .Get ("\u0042\u0053");
return &_fbfa ,nil ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_deab _cde .PdfObject ;};func (_fafcg *PdfReader )loadPerms ()(*Permissions ,error ){if _gfdd :=_fafcg ._gaeed .Get ("\u0050\u0065\u0072m\u0073");_gfdd !=nil {if _gfceda ,_baba :=_cde .GetDict (_gfdd );
_baba {_dacge :=_gfceda .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _dacge ==nil {return nil ,nil ;};if _fgee ,_ecefb :=_cde .GetIndirect (_dacge );_ecefb {_eeagg ,_gdccge :=_fafcg .newPdfSignatureFromIndirect (_fgee );if _gdccge !=nil {return nil ,_gdccge ;
};return NewPermissions (_eeagg ),nil ;};return nil ,_a .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");};return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");
};return nil ,nil ;};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_cgaf :=&PdfColorPattern {};return _cgaf };func _cebbc (_bgabf _cde .PdfObject )(*PdfFunctionType2 ,error ){_bgfb :=&PdfFunctionType2 {};var _eeada *_cde .PdfObjectDictionary ;if _faaeb ,_dgagc :=_bgabf .(*_cde .PdfIndirectObject );
_dgagc {_cdcdg ,_daege :=_faaeb .PdfObject .(*_cde .PdfObjectDictionary );if !_daege {return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bgfb ._bcege =_faaeb ;_eeada =_cdcdg ;}else if _gfcdbde ,_bbea :=_bgabf .(*_cde .PdfObjectDictionary );
_bbea {_eeada =_gfcdbde ;}else {return nil ,_gf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fb .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_eeada .String ());_cadcf ,_agga :=_cde .TraceToDirectObject (_eeada .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cde .PdfObjectArray );
if !_agga {_fb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_gf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cadcf .Len ()< 0||_cadcf .Len ()%2!=0{_fb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_gf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_bfab ,_daccc :=_cadcf .ToFloat64Array ();if _daccc !=nil {return nil ,_daccc ;};_bgfb .Domain =_bfab ;_cadcf ,_agga =_cde .TraceToDirectObject (_eeada .Get ("\u0052\u0061\u006eg\u0065")).(*_cde .PdfObjectArray );if _agga {if _cadcf .Len ()< 0||_cadcf .Len ()%2!=0{return nil ,_gf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_fdge ,_fcde :=_cadcf .ToFloat64Array ();if _fcde !=nil {return nil ,_fcde ;};_bgfb .Range =_fdge ;};_cadcf ,_agga =_cde .TraceToDirectObject (_eeada .Get ("\u0043\u0030")).(*_cde .PdfObjectArray );if _agga {_bcegb ,_befdf :=_cadcf .ToFloat64Array ();
if _befdf !=nil {return nil ,_befdf ;};_bgfb .C0 =_bcegb ;};_cadcf ,_agga =_cde .TraceToDirectObject (_eeada .Get ("\u0043\u0031")).(*_cde .PdfObjectArray );if _agga {_afgdd ,_affdd :=_cadcf .ToFloat64Array ();if _affdd !=nil {return nil ,_affdd ;};_bgfb .C1 =_afgdd ;
};if len (_bgfb .C0 )!=len (_bgfb .C1 ){_fb .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_cde .ErrRangeError ;};N ,_daccc :=_cde .GetNumberAsFloat (_cde .TraceToDirectObject (_eeada .Get ("\u004e")));
if _daccc !=nil {_fb .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_eeada .String ());return nil ,_daccc ;};_bgfb .N =N ;
return _bgfb ,nil ;};

// GetNumPages returns the number of pages in the document.
func (_fdee *PdfReader )GetNumPages ()(int ,error ){if _fdee ._fdccd .GetCrypter ()!=nil &&!_fdee ._fdccd .IsAuthenticated (){return 0,_a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_fdee ._adfcd ),nil ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_dcgaf *PdfRectangle )Normalize (){if _dcgaf .Llx > _dcgaf .Urx {_dcgaf .Llx ,_dcgaf .Urx =_dcgaf .Urx ,_dcgaf .Llx ;};if _dcgaf .Lly > _dcgaf .Ury {_dcgaf .Lly ,_dcgaf .Ury =_dcgaf .Ury ,_dcgaf .Lly ;};};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_eebbe *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_gcbb :=0.3*_eebbe .R ()+0.59*_eebbe .G ()+0.11*_eebbe .B ();_gcbb =_ce .Min (_ce .Max (_gcbb ,0.0),1.0);return NewPdfColorDeviceGray (_gcbb );};func (_afeadf *PdfReader )loadStructure ()error {if _afeadf ._fdccd .GetCrypter ()!=nil &&!_afeadf ._fdccd .IsAuthenticated (){return _a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gagec :=_afeadf ._fdccd .GetTrailer ();if _gagec ==nil {return _a .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_gfcee ,_ddebc :=_gagec .Get ("\u0052\u006f\u006f\u0074").(*_cde .PdfObjectReference );if !_ddebc {return _a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_gagec );
};_cfdd ,_dbfag :=_afeadf ._fdccd .LookupByReference (*_gfcee );if _dbfag !=nil {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dbfag );
return _dbfag ;};_facgd ,_ddebc :=_cfdd .(*_cde .PdfIndirectObject );if !_ddebc {_fb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_cfdd ,*_gagec );
return _gf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fgbab ,_ddebc :=(*_facgd ).PdfObject .(*_cde .PdfObjectDictionary );if !_ddebc {_fb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_facgd .PdfObject );
return _gf .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fb .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_fgbab );_fcgb ,_ddebc :=_fgbab .Get ("\u0050\u0061\u0067e\u0073").(*_cde .PdfObjectReference );
if !_ddebc {return _gf .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_befe ,_dbfag :=_afeadf ._fdccd .LookupByReference (*_fcgb );
if _dbfag !=nil {_fb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _dbfag ;};_bdcag ,_ddebc :=_befe .(*_cde .PdfIndirectObject );if !_ddebc {_fb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_fb .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_bdcag );return _gf .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_dcadd ,_ddebc :=_bdcag .PdfObject .(*_cde .PdfObjectDictionary );if !_ddebc {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_bdcag );
return _gf .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_bbefe ,_ddebc :=_cde .GetInt (_dcadd .Get ("\u0043\u006f\u0075n\u0074"));if !_ddebc {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _gf .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_ddebc =_cde .GetName (_dcadd .Get ("\u0054\u0079\u0070\u0065"));!_ddebc {_fb .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_dcadd .Set ("\u0054\u0079\u0070\u0065",_cde .MakeName ("\u0050\u0061\u0067e\u0073"));};if _cfgd ,_gfde :=_cde .GetInt (_dcadd .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_gfde {_gbacfe :=int64 (*_cfgd );_afeadf .Rotate =&_gbacfe ;};_afeadf ._gbgbc =_gfcee ;
_afeadf ._gaeed =_fgbab ;_afeadf ._gfeafe =_dcadd ;_afeadf ._aedcc =_bdcag ;_afeadf ._gfbdc =int (*_bbefe );_afeadf ._adfcd =[]*_cde .PdfIndirectObject {};_ddfc :=map[_cde .PdfObject ]struct{}{};_dbfag =_afeadf .buildPageList (_bdcag ,nil ,_ddfc );if _dbfag !=nil {return _dbfag ;
};_fb .Log .Trace ("\u002d\u002d\u002d");_fb .Log .Trace ("\u0054\u004f\u0043");_fb .Log .Trace ("\u0050\u0061\u0067e\u0073");_fb .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_afeadf ._adfcd ),_afeadf ._adfcd );_afeadf ._cbbd ,_dbfag =_afeadf .loadOutlines ();
if _dbfag !=nil {_fb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_dbfag );
return _dbfag ;};_afeadf .AcroForm ,_dbfag =_afeadf .loadForms ();if _dbfag !=nil {return _dbfag ;};_afeadf .DSS ,_dbfag =_afeadf .loadDSS ();if _dbfag !=nil {return _dbfag ;};_afeadf ._ddcee ,_dbfag =_afeadf .loadPerms ();if _dbfag !=nil {return _dbfag ;
};return nil ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_gbcc *PdfWriter )ApplyStandard (optimizer StandardApplier ){_gbcc ._fdgff =optimizer };

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_fddc :=NewPdfAnnotation ();_egf :=&PdfAnnotationHighlight {};_egf .PdfAnnotation =_fddc ;_egf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fddc .SetContext (_egf );return _egf ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_egfdf *PdfPageResourcesColorspaces )ToPdfObject ()_cde .PdfObject {_fecgac :=_cde .MakeDict ();for _ ,_dbfae :=range _egfdf .Names {_fecgac .Set (_cde .PdfObjectName (_dbfae ),_egfdf .Colorspaces [_dbfae ].ToPdfObject ());};if _egfdf ._aggbf !=nil {_egfdf ._aggbf .PdfObject =_fecgac ;
return _egfdf ._aggbf ;};return _fecgac ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_dbabf *_cde .PdfIndirectObject ;_gabdc *_cde .PdfIndirectObject ;_faag map[_cde .PdfObject ]struct{};_abbc []_cde .PdfObject ;_fdeab map[_cde .PdfObject ]struct{};_dbfe []*_cde .PdfIndirectObject ;_aabac *PdfOutlineTreeNode ;_aaeef *_cde .PdfObjectDictionary ;
_ffafd []_cde .PdfObject ;_decfde *_cde .PdfIndirectObject ;_efccc *_g .Writer ;_gbacgg int64 ;_cbffd error ;_febcf *_cde .PdfCrypt ;_aabaec *_cde .PdfObjectDictionary ;_fdbfc *_cde .PdfIndirectObject ;_dgdef *_cde .PdfObjectArray ;_dgccdd _cde .Version ;
_bacg *bool ;_ffed map[_cde .PdfObject ][]*_cde .PdfObjectDictionary ;_fgfgf *PdfAcroForm ;_fafec *Names ;_fegcee Optimizer ;_fdgff StandardApplier ;_cegabf map[int ]crossReference ;_adgdg int64 ;ObjNumOffset int ;_ceaea bool ;_daefcg _cde .XrefTable ;
_abdd int64 ;_fgcbc int64 ;_abebf map[_cde .PdfObject ]int64 ;_fcadd map[_cde .PdfObject ]struct{};_abedd string ;_afefbc []*PdfOutputIntent ;_dgcda bool ;_fegb ,_dbbaa string ;};func (_eabca *PdfWriter )setHashIDs (_eadaa _e .Hash )error {_egcggc :=_eadaa .Sum (nil );
if _eabca ._fegb ==""{_eabca ._fegb =_f .EncodeToString (_egcggc [:8]);};_eabca .setDocumentIDs (_eabca ._fegb ,_f .EncodeToString (_egcggc [8:]));return nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);