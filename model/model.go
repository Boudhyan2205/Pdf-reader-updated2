//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_e "bufio";_cb "bytes";_g "crypto/md5";_ae "crypto/rand";_dc "crypto/sha1";_bc "crypto/x509";_ee "encoding/binary";_b "encoding/hex";_fef "errors";_f "fmt";_bfd "github.com/unidoc/pkcs7";_gb "github.com/unidoc/unipdf/v3/common";_fb "github.com/unidoc/unipdf/v3/core";
_bcf "github.com/unidoc/unipdf/v3/core/security";_bb "github.com/unidoc/unipdf/v3/core/security/crypt";_edb "github.com/unidoc/unipdf/v3/internal/cmap";_egf "github.com/unidoc/unipdf/v3/internal/imageutil";_ge "github.com/unidoc/unipdf/v3/internal/license";
_dg "github.com/unidoc/unipdf/v3/internal/sampling";_gc "github.com/unidoc/unipdf/v3/internal/textencoding";_fc "github.com/unidoc/unipdf/v3/internal/transform";_cbe "github.com/unidoc/unipdf/v3/internal/xmp";_da "github.com/unidoc/unipdf/v3/model/internal/docutil";
_ba "github.com/unidoc/unipdf/v3/model/internal/fonts";_edaf "github.com/unidoc/unipdf/v3/model/sigutil";_faf "github.com/unidoc/unipdf/v3/ps";_ef "github.com/unidoc/unitype";_dd "golang.org/x/xerrors";_fe "hash";_fa "image";_ad "image/color";_ "image/gif";
_ "image/png";_ac "io";_aa "io/ioutil";_eda "math";_ec "math/rand";_ff "os";_bf "regexp";_cd "sort";_deg "strconv";_eg "strings";_c "sync";_a "time";_gg "unicode";_aaf "unicode/utf8";);func _bgbb (_dagad *_fb .PdfObjectDictionary )(*PdfShadingType3 ,error ){_cbaegb :=PdfShadingType3 {};
_dddb :=_dagad .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _dddb ==nil {_gb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_feca ,_ffbac :=_dddb .(*_fb .PdfObjectArray );if !_ffbac {_gb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dddb );
return nil ,_fb .ErrTypeError ;};if _feca .Len ()!=6{_gb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_feca .Len ());return nil ,ErrInvalidAttribute ;
};_cbaegb .Coords =_feca ;if _afeg :=_dagad .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_afeg !=nil {_afeg =_fb .TraceToDirectObject (_afeg );_efefg ,_fefee :=_afeg .(*_fb .PdfObjectArray );if !_fefee {_gb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_afeg );
return nil ,_fb .ErrTypeError ;};_cbaegb .Domain =_efefg ;};_dddb =_dagad .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _dddb ==nil {_gb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cbaegb .Function =[]PdfFunction {};if _aaacc ,_fcfee :=_dddb .(*_fb .PdfObjectArray );_fcfee {for _ ,_bdgea :=range _aaacc .Elements (){_eabc ,_cfgba :=_ggfef (_bdgea );if _cfgba !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfgba );
return nil ,_cfgba ;};_cbaegb .Function =append (_cbaegb .Function ,_eabc );};}else {_geedc ,_dbfbf :=_ggfef (_dddb );if _dbfbf !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dbfbf );
return nil ,_dbfbf ;};_cbaegb .Function =append (_cbaegb .Function ,_geedc );};if _edgff :=_dagad .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_edgff !=nil {_edgff =_fb .TraceToDirectObject (_edgff );_cadbgc ,_bggca :=_edgff .(*_fb .PdfObjectArray );if !_bggca {_gb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_edgff );
return nil ,_fb .ErrTypeError ;};if _cadbgc .Len ()!=2{_gb .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cadbgc .Len ());return nil ,ErrInvalidAttribute ;
};_cbaegb .Extend =_cadbgc ;};return &_cbaegb ,nil ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_afgb *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_bbfc :=func (_dcga float64 )float64 {if _dcga >=6.0/29{return _dcga *_dcga *_dcga ;};return 108.0/841*(_dcga -4/29);};_aebe :=img ._cdgb ;if len (_aebe )!=6{_gb .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_aebe =_afgb .DecodeArray ();};_bfcf :=_dg .NewReader (img .getBase ());_dfd :=_egf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._adecb ,img ._cdgb );_dddg :=_dg .NewWriter (_dfd );_egcc :=_eda .Pow (2,float64 (img .BitsPerComponent ))-1;
_aabe :=make ([]uint32 ,3);var (_bea error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_geag ,_dgdge ,_gabga float64 ;);for {_bea =_bfcf .ReadSamples (_aabe );if _bea ==_ac .EOF {break ;}else if _bea !=nil {return img ,_bea ;};Ls =float64 (_aabe [0])/_egcc ;As =float64 (_aabe [1])/_egcc ;
Bs =float64 (_aabe [2])/_egcc ;Ls =_egf .LinearInterpolate (Ls ,0.0,1.0,_aebe [0],_aebe [1]);As =_egf .LinearInterpolate (As ,0.0,1.0,_aebe [2],_aebe [3]);Bs =_egf .LinearInterpolate (Bs ,0.0,1.0,_aebe [4],_aebe [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;
N =(Ls +16)/116-Bs /200;X =_afgb .WhitePoint [0]*_bbfc (L );Y =_afgb .WhitePoint [1]*_bbfc (M );Z =_afgb .WhitePoint [2]*_bbfc (N );_geag =3.240479*X +-1.537150*Y +-0.498535*Z ;_dgdge =-0.969256*X +1.875992*Y +0.041556*Z ;_gabga =0.055648*X +-0.204043*Y +1.057311*Z ;
_geag =_eda .Min (_eda .Max (_geag ,0),1.0);_dgdge =_eda .Min (_eda .Max (_dgdge ,0),1.0);_gabga =_eda .Min (_eda .Max (_gabga ,0),1.0);_aabe [0]=uint32 (_geag *_egcc );_aabe [1]=uint32 (_dgdge *_egcc );_aabe [2]=uint32 (_gabga *_egcc );if _bea =_dddg .WriteSamples (_aabe );
_bea !=nil {return img ,_bea ;};};return _gaaa (&_dfd ),nil ;};

// NewDetailedPdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewDetailedPdfReader (rs _ac .ReadSeeker )(*DetailedPdfReader ,error ){const _abceg ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0044\u0065t\u0061\u0069\u006c\u0065\u0064\u0050\u0064\u0066\u0052\u0065a\u0064\u0065\u0072";_bcfee ,_dbbb :=_gbdfce (rs ,&ReaderOpts {DetailedFlags :true },true ,_abceg );
if _dbbb !=nil {return nil ,_dbbb ;};_bbdba ,_dbbb :=_bcfee ._cecbb .ParserMetadata ();if _dbbb !=nil {return nil ,_dbbb ;};return &DetailedPdfReader {PdfReader :_bcfee ,_gfcd :_bbdba },nil ;};func _abbdf ()*modelManager {_adbb :=modelManager {};_adbb ._bfacf =map[PdfModel ]_fb .PdfObject {};
_adbb ._eadbg =map[_fb .PdfObject ]PdfModel {};return &_adbb ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_fcdcd *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_fabf ,_afg :=color .(*PdfColorDeviceCMYK );if !_afg {_gb .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fded :=_fabf .C ();_aadc :=_fabf .M ();_cdca :=_fabf .Y ();_cfa :=_fabf .K ();_fded =_fded *(1-_cfa )+_cfa ;_aadc =_aadc *(1-_cfa )+_cfa ;
_cdca =_cdca *(1-_cfa )+_cfa ;_dbcbc :=1-_fded ;_bgag :=1-_aadc ;_gebad :=1-_cdca ;return NewPdfColorDeviceRGB (_dbcbc ,_bgag ,_gebad ),nil ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_fb .PdfObjectArray ;ExtGState _fb .PdfObject ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _fb .PdfObject ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_ddgabg *PdfReader )Inspect ()(map[string ]int ,error ){return _ddgabg ._cecbb .Inspect ()};func (_addb *PdfReader )newPdfAnnotationWidgetFromDict (_ffba *_fb .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_ffab :=PdfAnnotationWidget {};_ffab .H =_ffba .Get ("\u0048");
_ffab .MK =_ffba .Get ("\u004d\u004b");_ffab .A =_ffba .Get ("\u0041");_ffab .AA =_ffba .Get ("\u0041\u0041");_ffab .BS =_ffba .Get ("\u0042\u0053");_ffab .Parent =_ffba .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_ffab ,nil ;};func _bedd (_ecgc _fb .PdfObject )(*PdfPattern ,error ){_acdb :=&PdfPattern {};
var _bcaed *_fb .PdfObjectDictionary ;if _gfecf ,_ecabb :=_fb .GetIndirect (_ecgc );_ecabb {_acdb ._aadcb =_gfecf ;_eabba ,_bgfa :=_gfecf .PdfObject .(*_fb .PdfObjectDictionary );if !_bgfa {_gb .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_gfecf .PdfObject );
return nil ,_fb .ErrTypeError ;};_bcaed =_eabba ;}else if _fcafc ,_eedf :=_fb .GetStream (_ecgc );_eedf {_acdb ._aadcb =_fcafc ;_bcaed =_fcafc .PdfObjectDictionary ;}else {_gb .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_ecgc );
return nil ,_fb .ErrTypeError ;};_ffeg :=_bcaed .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _ffeg ==nil {_gb .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ebddd ,_ccecg :=_ffeg .(*_fb .PdfObjectInteger );if !_ccecg {_gb .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ffeg );
return nil ,_fb .ErrTypeError ;};if *_ebddd !=1&&*_ebddd !=2{_gb .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_ebddd );return nil ,_fb .ErrRangeError ;
};_acdb .PatternType =int64 (*_ebddd );switch *_ebddd {case 1:_dcefga ,_geed :=_bbeb (_bcaed );if _geed !=nil {return nil ,_geed ;};_dcefga .PdfPattern =_acdb ;_acdb ._cfdcd =_dcefga ;return _acdb ,nil ;case 2:_dafad ,_fdegdb :=_gebgc (_bcaed );if _fdegdb !=nil {return nil ,_fdegdb ;
};_dafad .PdfPattern =_acdb ;_acdb ._cfdcd =_dafad ;return _acdb ,nil ;};return nil ,_fef .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_cbafc *PdfPage )GetPageAsIndirectObject ()*_fb .PdfIndirectObject {return _cbafc ._dfbd };

// ToInteger convert to an integer format.
func (_ggccd *PdfColorDeviceGray )ToInteger (bits int )uint32 {_ccab :=_eda .Pow (2,float64 (bits ))-1;return uint32 (_ccab *_ggccd .Val ());};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_gfge *PdfColorspaceDeviceN )ToPdfObject ()_fb .PdfObject {_gfabe :=_fb .MakeArray (_fb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_gfabe .Append (_gfge .ColorantNames );_gfabe .Append (_gfge .AlternateSpace .ToPdfObject ());_gfabe .Append (_gfge .TintTransform .ToPdfObject ());
if _gfge .Attributes !=nil {_gfabe .Append (_gfge .Attributes .ToPdfObject ());};if _gfge ._cafag !=nil {_gfge ._cafag .PdfObject =_gfabe ;return _gfge ._cafag ;};return _gfabe ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_deaa *PdfInfo )ToPdfObject ()_fb .PdfObject {_cbdb :=_fb .MakeDict ();_cbdb .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_deaa .Title );_cbdb .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_deaa .Author );_cbdb .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_deaa .Subject );
_cbdb .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_deaa .Keywords );_cbdb .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_deaa .Creator );_cbdb .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_deaa .Producer );
_cbdb .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_deaa .Trapped );if _deaa .CreationDate !=nil {_cbdb .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_deaa .CreationDate .ToPdfObject ());};if _deaa .ModifiedDate !=nil {_cbdb .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_deaa .ModifiedDate .ToPdfObject ());
};for _ ,_aaca :=range _deaa ._abdg .Keys (){_cbdb .SetIfNotNil (_aaca ,_deaa ._abdg .Get (_aaca ));};return _cbdb ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_afff :=NewPdfAnnotation ();_afd :=&PdfAnnotationFreeText {};_afd .PdfAnnotation =_afff ;_afd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afff .SetContext (_afd );return _afd ;};

// HasXObjectByName checks if has XObject resource by name.
func (_facg *PdfPage )HasXObjectByName (name _fb .PdfObjectName )bool {_abdeg ,_gcebd :=_facg .Resources .XObject .(*_fb .PdfObjectDictionary );if !_gcebd {return false ;};if _bfff :=_abdeg .Get (name );_bfff !=nil {return true ;};return false ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_bgccd *PdfPageResources )GetExtGState (keyName _fb .PdfObjectName )(_fb .PdfObject ,bool ){if _bgccd .ExtGState ==nil {return nil ,false ;};_bcagg ,_defgf :=_fb .TraceToDirectObject (_bgccd .ExtGState ).(*_fb .PdfObjectDictionary );if !_defgf {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bgccd .ExtGState );
return nil ,false ;};if _dcbg :=_bcagg .Get (keyName );_dcbg !=nil {return _dcbg ,true ;};return nil ,false ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_ffee :=NewPdfAnnotation ();_dbe :=&PdfAnnotationStrikeOut {};_dbe .PdfAnnotation =_ffee ;_dbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffee .SetContext (_dbe );return _dbe ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_gcea *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbeg :=vals [0];if _bbeg < 0.0||_bbeg > 1.0{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_ebcfg :=vals [1];if _ebcfg < 0.0||_ebcfg > 1.0{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_geafa :=vals [2];if _geafa < 0.0||_geafa > 1.0{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_bdbc :=NewPdfColorCalRGB (_bbeg ,_ebcfg ,_geafa );return _bdbc ,nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_acdggc *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _acdggc .MediaBox !=nil {return _acdggc .MediaBox ,nil ;};_bbgdd :=_acdggc .Parent ;for _bbgdd !=nil {_aaea ,_ecfdb :=_fb .GetDict (_bbgdd );if !_ecfdb {return nil ,_fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _ggcdg :=_aaea .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_ggcdg !=nil {_cedgc ,_gdeda :=_fb .GetArray (_ggcdg );if !_gdeda {return nil ,_fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_aaad ,_abcad :=NewPdfRectangle (*_cedgc );if _abcad !=nil {return nil ,_abcad ;};return _aaad ,nil ;};_bbgdd =_aaea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_fef .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// GetDescent returns the Descent of the font `descriptor`.
func (_gbfe *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _fb .GetNumberAsFloat (_gbfe .Descent );};

// SetDecode sets the decode image float slice.
func (_effg *Image )SetDecode (decode []float64 ){_effg ._cdgb =decode };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_accf *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _accf .UnderlyingCS ==nil {return nil ,_fef .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _accf .UnderlyingCS .ColorFromFloats (vals );};func _bfca (_ggea _ba .StdFont )pdfFontSimple {_adabb :=_ggea .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_aaab :"\u0054\u0079\u0070e\u0031",_beeg :_ggea .Name ()},_caga :_ggea .GetMetricsTable (),_aeaaf :&PdfFontDescriptor {FontName :_fb .MakeName (string (_adabb .Name )),FontFamily :_fb .MakeName (_adabb .Family ),FontWeight :_fb .MakeFloat (float64 (_adabb .Weight )),Flags :_fb .MakeInteger (int64 (_adabb .Flags )),FontBBox :_fb .MakeArrayFromFloats (_adabb .BBox [:]),ItalicAngle :_fb .MakeFloat (_adabb .ItalicAngle ),Ascent :_fb .MakeFloat (_adabb .Ascent ),Descent :_fb .MakeFloat (_adabb .Descent ),CapHeight :_fb .MakeFloat (_adabb .CapHeight ),XHeight :_fb .MakeFloat (_adabb .XHeight ),StemV :_fb .MakeFloat (_adabb .StemV ),StemH :_fb .MakeFloat (_adabb .StemH )},_cegf :_ggea .Encoder ()};
};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_defd *PdfOutlineItem )ToPdfObject ()_fb .PdfObject {_abcb :=_defd ._fbdgb ;_ddbaa :=_abcb .PdfObject .(*_fb .PdfObjectDictionary );_ddbaa .Set ("\u0054\u0069\u0074l\u0065",_defd .Title );if _defd .A !=nil {_ddbaa .Set ("\u0041",_defd .A );};if _dcgfc :=_ddbaa .Get ("\u0053\u0045");
_dcgfc !=nil {_ddbaa .Remove ("\u0053\u0045");};if _defd .C !=nil {_ddbaa .Set ("\u0043",_defd .C );};if _defd .Dest !=nil {_ddbaa .Set ("\u0044\u0065\u0073\u0074",_defd .Dest );};if _defd .F !=nil {_ddbaa .Set ("\u0046",_defd .F );};if _defd .Count !=nil {_ddbaa .Set ("\u0043\u006f\u0075n\u0074",_fb .MakeInteger (*_defd .Count ));
};if _defd .Next !=nil {_ddbaa .Set ("\u004e\u0065\u0078\u0074",_defd .Next .ToPdfObject ());};if _defd .First !=nil {_ddbaa .Set ("\u0046\u0069\u0072s\u0074",_defd .First .ToPdfObject ());};if _defd .Prev !=nil {_ddbaa .Set ("\u0050\u0072\u0065\u0076",_defd .Prev .GetContext ().GetContainingPdfObject ());
};if _defd .Last !=nil {_ddbaa .Set ("\u004c\u0061\u0073\u0074",_defd .Last .GetContext ().GetContainingPdfObject ());};if _defd .Parent !=nil {_ddbaa .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_defd .Parent .GetContext ().GetContainingPdfObject ());
};return _abcb ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_ecdbf *PdfReader )GetOCProperties ()(_fb .PdfObject ,error ){_aagffb :=_ecdbf ._aaegf ;_gadea :=_aagffb .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_gadea =_fb .ResolveReference (_gadea );if !_ecdbf ._fdcaf {_ccebe :=_ecdbf .traverseObjectData (_gadea );
if _ccebe !=nil {return nil ,_ccebe ;};};return _gadea ,nil ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_edfab *PdfPageResources )SetXObjectFormByName (keyName _fb .PdfObjectName ,xform *XObjectForm )error {_afcgc :=xform .ToPdfObject ().(*_fb .PdfObjectStream );_faafe :=_edfab .SetXObjectByName (keyName ,_afcgc );return _faafe ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_gcaf *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _fbdg []float64 ;for _aabb :=0;_aabb < _gcaf .GetNumComponents ();_aabb ++{_fbdg =append (_fbdg ,0.0,1.0);};return _fbdg ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _fb .PdfObject ;IC _fb .PdfObject ;BE _fb .PdfObject ;RD _fb .PdfObject ;};func (_degef *Image )resampleLowBits (_aafba []uint32 ){_aebaa :=_egf .BytesPerLine (int (_degef .Width ),int (_degef .BitsPerComponent ),_degef .ColorComponents );
_beccc :=make ([]byte ,_degef .ColorComponents *_aebaa *int (_degef .Height ));_dgea :=int (_degef .BitsPerComponent )*_degef .ColorComponents *int (_degef .Width );_aaeeb :=uint8 (8);var (_eaeee ,_dgaf int ;_gabgf uint32 ;);for _fgcde :=0;_fgcde < int (_degef .Height );
_fgcde ++{_dgaf =_fgcde *_aebaa ;for _ebgaa :=0;_ebgaa < _dgea ;_ebgaa ++{_gabgf =_aafba [_eaeee ];_aaeeb -=uint8 (_degef .BitsPerComponent );_beccc [_dgaf ]|=byte (_gabgf )<<_aaeeb ;if _aaeeb ==0{_aaeeb =8;_dgaf ++;};_eaeee ++;};};_degef .Data =_beccc ;
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_acdec *PdfColorspaceDeviceCMYK )ToPdfObject ()_fb .PdfObject {return _fb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _fb .PdfObject ;ColorSpace _fb .PdfObject ;Pattern _fb .PdfObject ;Shading _fb .PdfObject ;XObject _fb .PdfObject ;Font _fb .PdfObject ;ProcSet _fb .PdfObject ;Properties _fb .PdfObject ;_aeefa *_fb .PdfObjectDictionary ;
_acfcf *PdfPageResourcesColorspaces ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_agb :=NewPdfAction ();_fce :=&PdfActionTrans {};_fce .PdfAction =_agb ;_agb .SetContext (_fce );return _fce ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_bcgag *PdfPage )GetContentStreamObjs ()[]_fb .PdfObject {if _bcgag .Contents ==nil {return nil ;};_bfdc :=_fb .TraceToDirectObject (_bcgag .Contents );if _dgebd ,_dbfca :=_bfdc .(*_fb .PdfObjectArray );_dbfca {return _dgebd .Elements ();};return []_fb .PdfObject {_bfdc };
};

// DetailedPdfReader is a wrapper over PdfReader that is used for detailed document read standard validation.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type DetailedPdfReader struct{*PdfReader ;_gfcd _fb .ParserMetadata ;};

// SetVersion sets the PDF version of the output file.
func (_fbdbg *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_fbdbg ._effda .Major =majorVersion ;_fbdbg ._effda .Minor =minorVersion ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fabef pdfCIDFontType2 )GetRuneMetrics (r rune )(_ba .CharMetrics ,bool ){_eedg ,_feaccb :=_fabef ._ecfe [r ];if !_feaccb {_eddcd ,_bebc :=_fb .GetInt (_fabef .DW );if !_bebc {return _ba .CharMetrics {},false ;};_eedg =int (*_eddcd );};return _ba .CharMetrics {Wx :float64 (_eedg )},true ;
};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_bfee :=&XObjectForm {};_abdfa :=&_fb .PdfObjectStream {};_abdfa .PdfObjectDictionary =_fb .MakeDict ();_bfee ._deaaa =_abdfa ;return _bfee ;};func (_dbaee PdfOutputIntentType )String ()string {switch _dbaee {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413";case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";
default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_agee *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _agee .flattenFieldsWithOpts (false ,appgen ,opts );};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;func _bded (_gfce *_fb .PdfObjectDictionary )bool {for _ ,_adcc :=range _gfce .Keys (){if _ ,_fddc :=_eecb [_adcc .String ()];_fddc {return true ;};};return false ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_cegc *BorderStyle )GetPdfName ()string {switch *_cegc {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_gebd *Outline )ToPdfOutline ()*PdfOutline {_dedgg :=NewPdfOutline ();var _fbfcg []*PdfOutlineItem ;var _eabfc int64 ;var _begaf *PdfOutlineItem ;for _ ,_ebgbda :=range _gebd .Entries {_agdgd ,_edfca :=_ebgbda .ToPdfOutlineItem ();_agdgd .Parent =&_dedgg .PdfOutlineTreeNode ;
if _begaf !=nil {_begaf .Next =&_agdgd .PdfOutlineTreeNode ;_agdgd .Prev =&_begaf .PdfOutlineTreeNode ;};_fbfcg =append (_fbfcg ,_agdgd );_eabfc +=_edfca ;_begaf =_agdgd ;};_aggaf :=int64 (len (_fbfcg ));_eabfc +=_aggaf ;if _aggaf > 0{_dedgg .First =&_fbfcg [0].PdfOutlineTreeNode ;
_dedgg .Last =&_fbfcg [_aggaf -1].PdfOutlineTreeNode ;_dedgg .Count =&_eabfc ;};return _dedgg ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_abea *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _abea .baseFields ()._bgdf !=nil {return _abea .baseFields ()._bgdf ;};if _aefg :=_abea ._gcfd .getFontDescriptor ();_aefg !=nil {return _aefg ;};_gb .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_abea );
return nil ;};func _cacaa (_fefc _fb .PdfObject ,_ccba bool )(*PdfFont ,error ){_aefaag ,_bffgc ,_ggaabf :=_baag (_fefc );if _ggaabf !=nil {if _ggaabf ==ErrType1CFontNotSupported {_face ,_gfdbaa :=_egabe (_aefaag ,_bffgc ,nil );if _gfdbaa !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bffgc ,_gfdbaa );
return nil ,_ggaabf ;};return &PdfFont {_gcfd :_face },_ggaabf ;};return nil ,_ggaabf ;};_caacg :=&PdfFont {};switch _bffgc ._aaab {case "\u0054\u0079\u0070e\u0030":if !_ccba {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bffgc );
return nil ,_fef .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_caba ,_dfbgd :=_eeccf (_aefaag ,_bffgc );if _dfbgd !=nil {_gb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bffgc ,_dfbgd );
return nil ,_dfbgd ;};_caacg ._gcfd =_caba ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _agga *pdfFontSimple ;_fceg ,_ddabf :=_ba .NewStdFontByName (_ba .StdFontName (_bffgc ._beeg ));
if _ddabf {_fcaab :=_bfca (_fceg );_caacg ._gcfd =&_fcaab ;_bedb :=_fb .TraceToDirectObject (_fcaab .ToPdfObject ());_fdbb ,_facc ,_fgdga :=_baag (_bedb );if _fgdga !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bffgc ,_fcaab );
return nil ,_fgdga ;};for _ ,_daca :=range _aefaag .Keys (){_fdbb .Set (_daca ,_aefaag .Get (_daca ));};_agga ,_fgdga =_egabe (_fdbb ,_facc ,_fcaab ._cegf );if _fgdga !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bffgc ,_fcaab );
return nil ,_fgdga ;};_agga ._bdac =_fcaab ._bdac ;_agga ._caga =_fcaab ._caga ;}else {_agga ,_ggaabf =_egabe (_aefaag ,_bffgc ,nil );if _ggaabf !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bffgc ,_ggaabf );
return nil ,_ggaabf ;};};_ggaabf =_agga .addEncoding ();if _ggaabf !=nil {return nil ,_ggaabf ;};if _ddabf {_agga .updateStandard14Font ();};if _ddabf &&_agga ._fabfd ==nil &&_agga ._cegf ==nil {_gb .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_agga );
_gb .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_fceg );};if len (_agga ._bdac )==0{_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_agga );};_caacg ._gcfd =_agga ;
case "\u0054\u0079\u0070e\u0033":_gbcg ,_fdccf :=_febge (_aefaag ,_bffgc );if _fdccf !=nil {_gb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_fdccf );
return nil ,_fdccf ;};_caacg ._gcfd =_gbcg ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_cabfa ,_dgace :=_abbe (_aefaag ,_bffgc );if _dgace !=nil {_gb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_dgace );
return nil ,_dgace ;};_caacg ._gcfd =_cabfa ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_daga ,_gedgf :=_eadca (_aefaag ,_bffgc );if _gedgf !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bffgc ,_gedgf );
return nil ,_gedgf ;};_caacg ._gcfd =_daga ;default:_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_bffgc );
return nil ,_f .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bffgc );};return _caacg ,nil ;};func _cdda (_bfbbe _fb .PdfObject )(*PdfPageResourcesColorspaces ,error ){_ddaa :=&PdfPageResourcesColorspaces {};
if _agdcg ,_gegcd :=_bfbbe .(*_fb .PdfIndirectObject );_gegcd {_ddaa ._gaag =_agdcg ;_bfbbe =_agdcg .PdfObject ;};_babe ,_afgd :=_fb .GetDict (_bfbbe );if !_afgd {return nil ,_fef .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_ddaa .Names =[]string {};_ddaa .Colorspaces =map[string ]PdfColorspace {};for _ ,_gdgc :=range _babe .Keys (){_aebfd :=_babe .Get (_gdgc );_ddaa .Names =append (_ddaa .Names ,string (_gdgc ));_dfbcg ,_aafbf :=NewPdfColorspaceFromPdfObject (_aebfd );
if _aafbf !=nil {return nil ,_aafbf ;};_ddaa .Colorspaces [string (_gdgc )]=_dfbcg ;};return _ddaa ,nil ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_fb .PdfObjectArray ;Domain *_fb .PdfObjectArray ;Function []PdfFunction ;Extend *_fb .PdfObjectArray ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_agff :=&PdfOutlineItem {_fbdgb :_fb .MakeIndirectObject (_fb .MakeDict ())};_agff ._eafe =_agff ;return _agff ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_fdbe :=NewPdfAnnotation ();_abd :=&PdfAnnotationLink {};_abd .PdfAnnotation =_fdbe ;_fdbe .SetContext (_abd );return _abd ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_faddc *PdfReader )GetNamedDestinations ()(_fb .PdfObject ,error ){_gdgeg :=_fb .ResolveReference (_faddc ._aaegf .Get ("\u0044\u0065\u0073t\u0073"));if _gdgeg ==nil {return nil ,nil ;};if !_faddc ._fdcaf {_aggafe :=_faddc .traverseObjectData (_gdgeg );
if _aggafe !=nil {return nil ,_aggafe ;};};return _gdgeg ,nil ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_egabba :=&PdfFieldSignature {};_egabba .PdfField =NewPdfField ();_egabba .PdfField .SetContext (_egabba );_egabba .PdfAnnotationWidget =NewPdfAnnotationWidget ();_egabba .PdfAnnotationWidget .SetContext (_egabba );
_egabba .PdfAnnotationWidget ._caa =_egabba .PdfField ._cdcae ;_egabba .T =_fb .MakeString ("");_egabba .F =_fb .MakeInteger (132);_egabba .V =signature ;return _egabba ;};func (_ceafg *PdfWriter )writeObjectsInStreams (_cfbaf map[_fb .PdfObject ]bool )error {for _ ,_bdgeac :=range _ceafg ._cgdaa {if _edfcf :=_cfbaf [_bdgeac ];
_edfcf {continue ;};_cbfda :=int64 (0);switch _dfaggf :=_bdgeac .(type ){case *_fb .PdfIndirectObject :_cbfda =_dfaggf .ObjectNumber ;case *_fb .PdfObjectStream :_cbfda =_dfaggf .ObjectNumber ;case *_fb .PdfObjectStreams :_cbfda =_dfaggf .ObjectNumber ;
default:_gb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_bdgeac );
return ErrTypeCheck ;};if _ceafg ._cbfbc !=nil &&_bdgeac !=_ceafg ._bgdbe {_gffaa :=_ceafg ._cbfbc .Encrypt (_bdgeac ,_cbfda ,0);if _gffaa !=nil {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_gffaa );
return _gffaa ;};};_ceafg .writeObject (int (_cbfda ),_bdgeac );};return nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ccffd *PdfColorspaceSpecialSeparation )ToPdfObject ()_fb .PdfObject {_bdga :=_fb .MakeArray (_fb .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_bdga .Append (_ccffd .ColorantName );_bdga .Append (_ccffd .AlternateSpace .ToPdfObject ());
_bdga .Append (_ccffd .TintTransform .ToPdfObject ());if _ccffd ._dfbf !=nil {_ccffd ._dfbf .PdfObject =_bdga ;return _ccffd ._dfbf ;};return _bdga ;};

// B returns the value of the B component of the color.
func (_eebe *PdfColorLab )B ()float64 {return _eebe [2]};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_dafe ,_egcgf :=_ff .Open (filePath );if _egcgf !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_egcgf );
return nil ,_egcgf ;};defer _dafe .Close ();return NewPdfFontFromTTF (_dafe );};func (_fefac *PdfReader )newPdfActionGotoEFromDict (_cgg *_fb .PdfObjectDictionary )(*PdfActionGoToE ,error ){_fga ,_bcc :=_bg (_cgg .Get ("\u0046"));if _bcc !=nil {return nil ,_bcc ;
};return &PdfActionGoToE {D :_cgg .Get ("\u0044"),NewWindow :_cgg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_cgg .Get ("\u0054"),F :_fga },nil ;};func _gbdfce (_gceff _ac .ReadSeeker ,_gdgad *ReaderOpts ,_cgbf bool ,_afeed string )(*PdfReader ,error ){if _gdgad ==nil {_gdgad =NewReaderOpts ();
};_fabbe :=&PdfReader {_abae :_gceff ,_fgccc :map[_fb .PdfObject ]struct{}{},_fagc :_abbdf (),_fdcaf :_gdgad .LazyLoad ,_fdbbf :_gdgad .DetailedFlags };_dcgac ,_ggbcb :=_gfag ("\u0072");if _ggbcb !=nil {return nil ,_ggbcb ;};_ggbcb =_ge .Track (_dcgac ,_afeed );
if _ggbcb !=nil {return nil ,_ggbcb ;};_fabbe ._cbea =_dcgac ;var _aefge *_fb .PdfParser ;if !_fabbe ._fdbbf {_aefge ,_ggbcb =_fb .NewParser (_gceff );}else {_aefge ,_ggbcb =_fb .NewDetailedPdfParser (_gceff );};if _ggbcb !=nil {return nil ,_ggbcb ;};_fabbe ._cecbb =_aefge ;
_eega ,_ggbcb :=_fabbe .IsEncrypted ();if _ggbcb !=nil {return nil ,_ggbcb ;};if !_eega {_ggbcb =_fabbe .loadStructure ();if _ggbcb !=nil {return nil ,_ggbcb ;};}else if _cgbf {_cbbgg ,_dcfb :=_fabbe .Decrypt ([]byte (_gdgad .Password ));if _dcfb !=nil {return nil ,_dcfb ;
};if !_cbbgg {return nil ,_fef .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};return _fabbe ,nil ;};func (_badgc *PdfWriter )setCatalogVersion (){_badgc ._aeab .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_fb .MakeName (_f .Sprintf ("\u0025\u0064\u002e%\u0064",_badgc ._effda .Major ,_badgc ._effda .Minor )));};func _gfag (_defa string )(string ,error ){var _egee _cb .Buffer ;
_egee .WriteString (_defa );_gegbe :=make ([]byte ,8+16);_edddac :=_a .Now ().UTC ().UnixNano ();_ee .BigEndian .PutUint64 (_gegbe ,uint64 (_edddac ));_ ,_afdda :=_ae .Read (_gegbe [8:]);if _afdda !=nil {return "",_afdda ;};_egee .WriteString (_b .EncodeToString (_gegbe ));
return _egee .String (),nil ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_egfg :=&PdfAnnotation {};_egfg ._caa =_fb .MakeIndirectObject (_fb .MakeDict ());return _egfg ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_gedd *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gedd .Alternate ==nil {_gb .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _gedd .N ==1{_gb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_fggdb :=NewPdfColorspaceDeviceGray ();return _fggdb .ColorToRGB (color );}else if _gedd .N ==3{_gb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _gedd .N ==4{_gb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_fccgc :=NewPdfColorspaceDeviceCMYK ();return _fccgc .ColorToRGB (color );}else {return nil ,_fef .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_gb .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_gedd );
return _gedd .Alternate .ColorToRGB (color );};func (_acfe *LTV )buildCertChain (_aacb ,_gfefe []*_bc .Certificate )([]*_bc .Certificate ,map[string ]*_bc .Certificate ,error ){_adfad :=map[string ]*_bc .Certificate {};for _ ,_cadbg :=range _aacb {_adfad [_cadbg .Subject .CommonName ]=_cadbg ;
};_dbbec :=_aacb ;for _ ,_eageg :=range _gfefe {_ebdde :=_eageg .Subject .CommonName ;if _ ,_eddef :=_adfad [_ebdde ];_eddef {continue ;};_adfad [_ebdde ]=_eageg ;_dbbec =append (_dbbec ,_eageg );};if len (_dbbec )==0{return nil ,nil ,ErrSignNoCertificates ;
};var _gbfac error ;for _fbfc :=_dbbec [0];_fbfc !=nil &&!_acfe .CertClient .IsCA (_fbfc );{_ggdfe ,_gecb :=_adfad [_fbfc .Issuer .CommonName ];if !_gecb {if _ggdfe ,_gbfac =_acfe .CertClient .GetIssuer (_fbfc );_gbfac !=nil {_gb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_gbfac );
break ;};_adfad [_fbfc .Issuer .CommonName ]=_ggdfe ;_dbbec =append (_dbbec ,_ggdfe );};_fbfc =_ggdfe ;};return _dbbec ,_adfad ,nil ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_cgb :=NewPdfAnnotation ();_efg :=&PdfAnnotationLine {};_efg .PdfAnnotation =_cgb ;_efg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgb .SetContext (_efg );return _efg ;};

// ImageToRGB convert an indexed image to RGB.
func (_bgea *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_bgea .Base .GetNumComponents ();if N < 1{return Image {},_f .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_adab :=_egf .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._adecb ,img ._cdgb );_afdf :=_dg .NewReader (img .getBase ());_cdcgc :=_dg .NewWriter (_adab );var (_ggde uint32 ;_egcbc int ;_cabd error ;);for {_ggde ,_cabd =_afdf .ReadSample ();
if _cabd ==_ac .EOF {break ;}else if _cabd !=nil {return img ,_cabd ;};_egcbc =int (_ggde );_gb .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_egcbc ,N ,len (_bgea ._cdcac ));
if (_egcbc +1)*N > len (_bgea ._cdcac ){_egcbc =len (_bgea ._cdcac )/N -1;_gb .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_egcbc );if _egcbc < 0{_gb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _fdd :=_egcbc *N ;_fdd < (_egcbc +1)*N ;_fdd ++{if _cabd =_cdcgc .WriteSample (uint32 (_bgea ._cdcac [_fdd ]));_cabd !=nil {return img ,_cabd ;};};};return _bgea .Base .ImageToRGB (_gaaa (&_adab ));};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fb .PdfObject ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_bgbf *XObjectForm )SetContentStream (content []byte ,encoder _fb .StreamEncoder )error {_dedgd :=content ;if encoder ==nil {if _bgbf .Filter !=nil {encoder =_bgbf .Filter ;}else {encoder =_fb .NewRawEncoder ();};};_ccaaf ,_ebafa :=encoder .EncodeBytes (_dedgd );
if _ebafa !=nil {return _ebafa ;};_dedgd =_ccaaf ;_bgbf .Stream =_dedgd ;_bgbf .Filter =encoder ;return nil ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _bcf .Permissions ;Algorithm EncryptionAlgorithm ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_defc *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aefac ,_aece :=_fb .GetNumbersAsFloat (objects );
if _aece !=nil {return nil ,_aece ;};return _defc .ColorFromFloats (_aefac );};

// AddPages adds pages to be appended to the end of the source PDF.
func (_bbdb *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_gfab :=range pages {_gfab =_gfab .Duplicate ();_cbeab (_gfab );_bbdb ._bdf =append (_bbdb ._bdf ,_gfab );};};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_bad :=NewPdfAction ();_ffe :=&PdfActionThread {};_ffe .PdfAction =_bad ;_bad .SetContext (_ffe );return _ffe ;};

// ToPdfObject implements interface PdfModel.
func (_cbc *PdfActionSound )ToPdfObject ()_fb .PdfObject {_cbc .PdfAction .ToPdfObject ();_bcg :=_cbc ._ege ;_aed :=_bcg .PdfObject .(*_fb .PdfObjectDictionary );_aed .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeSound )));_aed .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_cbc .Sound );
_aed .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_cbc .Volume );_aed .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_cbc .Synchronous );_aed .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_cbc .Repeat );_aed .SetIfNotNil ("\u004d\u0069\u0078",_cbc .Mix );
return _bcg ;};func (_bedg fontCommon )coreString ()string {_adfa :="";if _bedg ._bgdf !=nil {_adfa =_bedg ._bgdf .String ();};return _f .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_bedg ._aaab ,_bedg ._beeg ,_bedg ._ebdbb ,_bedg ._adgd ,_bedg ._daag !=nil ,_bedg .fontFlags (),_adfa );
};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_dbadf *PdfPageResources )HasColorspaceByName (keyName _fb .PdfObjectName )bool {_bdcag ,_gddb :=_dbadf .GetColorspaces ();if _gddb !=nil {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gddb );
return false ;};if _bdcag ==nil {return false ;};_ ,_gacdgb :=_bdcag .Colorspaces [string (keyName )];return _gacdgb ;};func _acgdb (_edbef _fb .PdfObject )(*PdfColorspaceCalGray ,error ){_fccd :=NewPdfColorspaceCalGray ();if _gfbe ,_gfgae :=_edbef .(*_fb .PdfIndirectObject );
_gfgae {_fccd ._bfgea =_gfbe ;};_edbef =_fb .TraceToDirectObject (_edbef );_eeac ,_defe :=_edbef .(*_fb .PdfObjectArray );if !_defe {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eeac .Len ()!=2{return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_edbef =_fb .TraceToDirectObject (_eeac .Get (0));_ebbg ,_defe :=_edbef .(*_fb .PdfObjectName );if !_defe {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_ebbg !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_f .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_edbef =_fb .TraceToDirectObject (_eeac .Get (1));
_eaa ,_defe :=_edbef .(*_fb .PdfObjectDictionary );if !_defe {return nil ,_f .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};
_edbef =_eaa .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_edbef =_fb .TraceToDirectObject (_edbef );_aefc ,_defe :=_edbef .(*_fb .PdfObjectArray );if !_defe {return nil ,_f .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _aefc .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_egbc ,_ebgc :=_aefc .GetAsFloat64Slice ();
if _ebgc !=nil {return nil ,_ebgc ;};_fccd .WhitePoint =_egbc ;_edbef =_eaa .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _edbef !=nil {_edbef =_fb .TraceToDirectObject (_edbef );_ddcca ,_cade :=_edbef .(*_fb .PdfObjectArray );
if !_cade {return nil ,_f .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _ddcca .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_afaf ,_fcgce :=_ddcca .GetAsFloat64Slice ();if _fcgce !=nil {return nil ,_fcgce ;};_fccd .BlackPoint =_afaf ;};_edbef =_eaa .Get ("\u0047\u0061\u006dm\u0061");if _edbef !=nil {_edbef =_fb .TraceToDirectObject (_edbef );_gec ,_aeea :=_fb .GetNumberAsFloat (_edbef );
if _aeea !=nil {return nil ,_f .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_fccd .Gamma =_gec ;};return _fccd ,nil ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_dacde *modelManager )GetModelFromPrimitive (primitive _fb .PdfObject )PdfModel {model ,_gfac :=_dacde ._eadbg [primitive ];if !_gfac {return nil ;};return model ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_fb .PdfObjectArray ;Domain *_fb .PdfObjectArray ;Function []PdfFunction ;Extend *_fb .PdfObjectArray ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// Flags returns the field flags for the field accounting for any inherited flags.
func (_fabfc *PdfField )Flags ()FieldFlag {var _fcbbb FieldFlag ;_ffcg ,_caca :=_fabfc .inherit (func (_ggfca *PdfField )bool {if _ggfca .Ff !=nil {_fcbbb =FieldFlag (*_ggfca .Ff );return true ;};return false ;});if _caca !=nil {_gb .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_caca );
};if !_ffcg {_gb .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _fcbbb ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;func (_dgfde *pdfFontType0 )subsetRegistered ()error {_gefde ,_ddec :=_dgfde .DescendantFont ._gcfd .(*pdfCIDFontType2 );if !_ddec {_gb .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_dgfde .DescendantFont );
return nil ;};if _gefde ==nil {return nil ;};if _gefde ._bgdf ==nil {_gb .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _dgfde ._bcfef ==nil {_gb .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_dcedd ,_ddec :=_fb .GetStream (_gefde ._bgdf .FontFile2 );if !_ddec {_gb .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _fef .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cgab ,_efce :=_fb .DecodeStream (_dcedd );if _efce !=nil {_gb .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_efce );
return _efce ;};_gdde ,_efce :=_ef .Parse (_cb .NewReader (_cgab ));if _efce !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_dcedd .Stream ));
return _efce ;};var _fdbed []rune ;var _adfb *_ef .Font ;switch _bfdg :=_dgfde ._bcfef .(type ){case *_gc .TrueTypeFontEncoder :_fdbed =_bfdg .RegisteredRunes ();_adfb ,_efce =_gdde .SubsetKeepRunes (_fdbed );if _efce !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efce );
return _efce ;};_bfdg .SubsetRegistered ();case *_gc .IdentityEncoder :_fdbed =_bfdg .RegisteredRunes ();_agbge :=make ([]_ef .GlyphIndex ,len (_fdbed ));for _bdad ,_ebbb :=range _fdbed {_agbge [_bdad ]=_ef .GlyphIndex (_ebbb );};_adfb ,_efce =_gdde .SubsetKeepIndices (_agbge );
if _efce !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efce );return _efce ;};case _gc .SimpleEncoder :_cebgc :=_bfdg .Charcodes ();for _ ,_feace :=range _cebgc {_aagge ,_ffdce :=_bfdg .CharcodeToRune (_feace );if !_ffdce {_gb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_feace );
continue ;};_fdbed =append (_fdbed ,_aagge );};default:return _f .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_dgfde ._bcfef );
};var _cfac _cb .Buffer ;_efce =_adfb .Write (&_cfac );if _efce !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efce );return _efce ;};if _dgfde ._acfd !=nil {_ccbca :=make (map[_edb .CharCode ]rune ,len (_fdbed ));for _ ,_gffb :=range _fdbed {_fffb ,_dcfac :=_dgfde ._bcfef .RuneToCharcode (_gffb );
if !_dcfac {continue ;};_ccbca [_edb .CharCode (_fffb )]=_gffb ;};_dgfde ._acfd =_edb .NewToUnicodeCMap (_ccbca );};_dcedd ,_efce =_fb .MakeStream (_cfac .Bytes (),_fb .NewFlateEncoder ());if _efce !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efce );
return _efce ;};_dcedd .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fb .MakeInteger (int64 (_cfac .Len ())));if _feea ,_bfcdc :=_fb .GetStream (_gefde ._bgdf .FontFile2 );_bfcdc {*_feea =*_dcedd ;}else {_gefde ._bgdf .FontFile2 =_dcedd ;};_aagff :=_cfdde ();
if len (_dgfde ._beeg )> 0{_dgfde ._beeg =_ebgad (_dgfde ._beeg ,_aagff );};if len (_gefde ._beeg )> 0{_gefde ._beeg =_ebgad (_gefde ._beeg ,_aagff );};if len (_dgfde ._ebdbb )> 0{_dgfde ._ebdbb =_ebgad (_dgfde ._ebdbb ,_aagff );};if _gefde ._bgdf !=nil {_gdcde ,_eeab :=_fb .GetName (_gefde ._bgdf .FontName );
if _eeab &&len (_gdcde .String ())> 0{_bbfb :=_ebgad (_gdcde .String (),_aagff );_gefde ._bgdf .FontName =_fb .MakeName (_bbfb );};};return nil ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _fb .PdfObjectName ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// C returns the value of the cyan component of the color.
func (_dcdde *PdfColorDeviceCMYK )C ()float64 {return _dcdde [0]};func (_egfa *LTV )validateSig (_cgaba *PdfSignature )error {if _cgaba ==nil ||_cgaba .Contents ==nil ||len (_cgaba .Contents .Bytes ())==0{return _f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_cgaba );
};return nil ;};

// Val returns the value of the color.
func (_gbed *PdfColorCalGray )Val ()float64 {return float64 (*_gbed )};func (_fafba *PdfReader )loadAnnotations (_befa _fb .PdfObject )([]*PdfAnnotation ,error ){_bgae ,_aeggc :=_fb .GetArray (_befa );if !_aeggc {return nil ,_f .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _begfcc []*PdfAnnotation ;for _ ,_abba :=range _bgae .Elements (){_abba =_fb .ResolveReference (_abba );if _ ,_aada :=_abba .(*_fb .PdfObjectNull );_aada {continue ;};_eedaa ,_dccc :=_abba .(*_fb .PdfObjectDictionary );_fgbag ,_cbcdc :=_abba .(*_fb .PdfIndirectObject );
if _dccc {_fgbag =&_fb .PdfIndirectObject {};_fgbag .PdfObject =_eedaa ;}else {if !_cbcdc {return nil ,_f .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_gfgag ,_caadg :=_fafba .newPdfAnnotationFromIndirectObject (_fgbag );if _caadg !=nil {return nil ,_caadg ;};switch _cbba :=_gfgag .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_deae :=range _fafba .AcroForm .AllFields (){if _deae ._cdcae ==_cbba .Parent {_cbba ._dea =_deae ;
break ;};};};if _gfgag !=nil {_begfcc =append (_begfcc ,_gfgag );};};return _begfcc ,nil ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_cdbbb *PdfPattern )IsTiling ()bool {return _cdbbb .PatternType ==1};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_cfdcd PdfModel ;_aadcb _fb .PdfObject ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _fb .PdfObject ;};func (_ccec *PdfReader )newPdfAnnotationSoundFromDict (_cdab *_fb .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_dba :=PdfAnnotationSound {};_ged ,_afbgg :=_ccec .newPdfAnnotationMarkupFromDict (_cdab );
if _afbgg !=nil {return nil ,_afbgg ;};_dba .PdfAnnotationMarkup =_ged ;_dba .Name =_cdab .Get ("\u004e\u0061\u006d\u0065");_dba .Sound =_cdab .Get ("\u0053\u006f\u0075n\u0064");return &_dba ,nil ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _fb .PdfObject ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _fb .PdfObject ;Sy _fb .PdfObject ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_fada *PdfWriter )SetPageLabels (pageLabels _fb .PdfObject )error {if pageLabels ==nil {return nil ;};_gb .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_fada ._aeab .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _fada .addObjects (pageLabels );};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// Y returns the value of the yellow component of the color.
func (_dfaf *PdfColorDeviceCMYK )Y ()float64 {return _dfaf [2]};

// GetNumComponents returns the number of color components (3 for RGB).
func (_ccffa *PdfColorDeviceRGB )GetNumComponents ()int {return 3};func (_cggfd *PdfSignature )extractChainFromPKCS7 ()([]*_bc .Certificate ,error ){_bcbca ,_eadd :=_bfd .Parse (_cggfd .Contents .Bytes ());if _eadd !=nil {return nil ,_eadd ;};return _bcbca .Certificates ,nil ;
};func (_cfdba *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;func (_fcaa *PdfReader )newPdfAnnotationRedactFromDict (_gbfa *_fb .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_bbac :=PdfAnnotationRedact {};_ebdg ,_eccb :=_fcaa .newPdfAnnotationMarkupFromDict (_gbfa );
if _eccb !=nil {return nil ,_eccb ;};_bbac .PdfAnnotationMarkup =_ebdg ;_bbac .QuadPoints =_gbfa .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_bbac .IC =_gbfa .Get ("\u0049\u0043");_bbac .RO =_gbfa .Get ("\u0052\u004f");_bbac .OverlayText =_gbfa .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_bbac .Repeat =_gbfa .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_bbac .DA =_gbfa .Get ("\u0044\u0041");_bbac .Q =_gbfa .Get ("\u0051");return &_bbac ,nil ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_cceee *pdfFontSimple )SetEncoder (encoder _gc .TextEncoder ){_cceee ._fabfd =encoder };

// ToPdfObject implements interface PdfModel.
func (_fgbd *PdfAnnotationMovie )ToPdfObject ()_fb .PdfObject {_fgbd .PdfAnnotation .ToPdfObject ();_agba :=_fgbd ._caa ;_abdc :=_agba .PdfObject .(*_fb .PdfObjectDictionary );_abdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u004d\u006f\u0076i\u0065"));
_abdc .SetIfNotNil ("\u0054",_fgbd .T );_abdc .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_fgbd .Movie );_abdc .SetIfNotNil ("\u0041",_fgbd .A );return _agba ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_fb .PdfObjectStream )(*XObjectImage ,error ){_ceebd :=&XObjectImage {};_ceebd ._badaab =stream ;_ddffg :=*(stream .PdfObjectDictionary );_bgebe ,_bbgcc :=_fb .NewEncoderFromStream (stream );if _bbgcc !=nil {return nil ,_bbgcc ;
};_ceebd .Filter =_bgebe ;if _cfed :=_fb .TraceToDirectObject (_ddffg .Get ("\u0057\u0069\u0064t\u0068"));_cfed !=nil {_ebbdc ,_adfee :=_cfed .(*_fb .PdfObjectInteger );if !_adfee {return nil ,_fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_acbea :=int64 (*_ebbdc );_ceebd .Width =&_acbea ;}else {return nil ,_fef .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _gcgag :=_fb .TraceToDirectObject (_ddffg .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_gcgag !=nil {_fcfg ,_efgf :=_gcgag .(*_fb .PdfObjectInteger );if !_efgf {return nil ,_fef .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_fgcf :=int64 (*_fcfg );
_ceebd .Height =&_fgcf ;}else {return nil ,_fef .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _fbfcd :=_fb .TraceToDirectObject (_ddffg .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_fbfcd !=nil {_dgdbb ,_fced :=NewPdfColorspaceFromPdfObject (_fbfcd );if _fced !=nil {return nil ,_fced ;};_ceebd .ColorSpace =_dgdbb ;}else {_gb .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");
_ceebd .ColorSpace =NewPdfColorspaceDeviceGray ();};if _fabab :=_fb .TraceToDirectObject (_ddffg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_fabab !=nil {_agfcc ,_edggc :=_fabab .(*_fb .PdfObjectInteger );
if !_edggc {return nil ,_fef .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bceec :=int64 (*_agfcc );_ceebd .BitsPerComponent =&_bceec ;};_ceebd .Intent =_ddffg .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_ceebd .ImageMask =_ddffg .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_ceebd .Mask =_ddffg .Get ("\u004d\u0061\u0073\u006b");_ceebd .Decode =_ddffg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_ceebd .Interpolate =_ddffg .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_ceebd .Alternatives =_ddffg .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_ceebd .SMask =_ddffg .Get ("\u0053\u004d\u0061s\u006b");_ceebd .SMaskInData =_ddffg .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_ceebd .Matte =_ddffg .Get ("\u004d\u0061\u0074t\u0065");_ceebd .Name =_ddffg .Get ("\u004e\u0061\u006d\u0065");_ceebd .StructParent =_ddffg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ceebd .ID =_ddffg .Get ("\u0049\u0044");
_ceebd .OPI =_ddffg .Get ("\u004f\u0050\u0049");_ceebd .Metadata =_ddffg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ceebd .OC =_ddffg .Get ("\u004f\u0043");_ceebd .Stream =stream .Stream ;return _ceebd ,nil ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_adbge *Image )ToJBIG2Image ()(*_fb .JBIG2Image ,error ){_ddgbc ,_ffff :=_adbge .ToGoImage ();if _ffff !=nil {return nil ,_ffff ;};return _fb .GoImageToJBIG2 (_ddgbc ,_fb .JB2ImageAutoThreshold );};

// ToPdfObject implements interface PdfModel.
func (_ce *PdfAction )ToPdfObject ()_fb .PdfObject {_gbb :=_ce ._ege ;_baf :=_gbb .PdfObject .(*_fb .PdfObjectDictionary );_baf .Clear ();_baf .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_baf .SetIfNotNil ("\u0053",_ce .S );
_baf .SetIfNotNil ("\u004e\u0065\u0078\u0074",_ce .Next );return _gbb ;};

// ToPdfObject implements interface PdfModel.
func (_eeeb *PdfActionResetForm )ToPdfObject ()_fb .PdfObject {_eeeb .PdfAction .ToPdfObject ();_bcd :=_eeeb ._ege ;_fdaf :=_bcd .PdfObject .(*_fb .PdfObjectDictionary );_fdaf .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeResetForm )));_fdaf .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_eeeb .Fields );
_fdaf .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_eeeb .Flags );return _bcd ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_bd PdfModel ;Type _fb .PdfObject ;S _fb .PdfObject ;Next _fb .PdfObject ;_ege *_fb .PdfIndirectObject ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_edaf .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_edaf .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_edaf .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_cfaa *PdfAppender ;_bafcg *DSS ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _fb .PdfObject ;};func (_dbedf *PdfWriter )writeDocumentVersion (){if _dbedf ._geefd {_dbedf .writeString ("\u000a");}else {_dbedf .writeString (_f .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_dbedf ._effda .Major ,_dbedf ._effda .Minor ));
_dbedf .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// C returns the value of the C component of the color.
func (_aedc *PdfColorCalRGB )C ()float64 {return _aedc [2]};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_fb .PdfIndirectObject )*PdfOutlineItem {_fdab :=PdfOutlineItem {};_fdab ._eafe =&_fdab ;_fdab .Title =_fb .MakeString (title );_cacc :=_fb .MakeArray ();_cacc .Append (page );_cacc .Append (_fb .MakeName ("\u0046\u0069\u0074"));
_fdab .Dest =_cacc ;return &_fdab ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_egdc *PdfReader )Decrypt (password []byte )(bool ,error ){_beaec ,_bagdf :=_egdc ._cecbb .Decrypt (password );if _bagdf !=nil {return false ,_bagdf ;};if !_beaec {return false ,nil ;};_bagdf =_egdc .loadStructure ();if _bagdf !=nil {_gb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_bagdf );
return false ,_bagdf ;};return true ,nil ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_ddea *PdfField )GetContainingPdfObject ()_fb .PdfObject {return _ddea ._cdcae };func _ebcfb (_bafffc _fb .PdfObject )(*PdfColorspaceICCBased ,error ){_bcde :=&PdfColorspaceICCBased {};if _cgec ,_edgc :=_bafffc .(*_fb .PdfIndirectObject );_edgc {_bcde ._dfea =_cgec ;
};_bafffc =_fb .TraceToDirectObject (_bafffc );_egbe ,_bfcgc :=_bafffc .(*_fb .PdfObjectArray );if !_bfcgc {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _egbe .Len ()!=2{return nil ,_f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_bafffc =_fb .TraceToDirectObject (_egbe .Get (0));_ddga ,_bfcgc :=_bafffc .(*_fb .PdfObjectName );if !_bfcgc {return nil ,_f .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_ddga !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_f .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_bafffc =_egbe .Get (1);
_cfec ,_bfcgc :=_fb .GetStream (_bafffc );if !_bfcgc {_gb .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_bafffc );
return nil ,_f .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_gdad :=_cfec .PdfObjectDictionary ;_gcec ,_bfcgc :=_gdad .Get ("\u004e").(*_fb .PdfObjectInteger );
if !_bfcgc {return nil ,_f .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_gcec !=1&&*_gcec !=3&&*_gcec !=4{return nil ,_f .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_bcde .N =int (*_gcec );if _bgacf :=_gdad .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_bgacf !=nil {_ebcaa ,_befb :=NewPdfColorspaceFromPdfObject (_bgacf );if _befb !=nil {return nil ,_befb ;};_bcde .Alternate =_ebcaa ;};if _dfbaf :=_gdad .Get ("\u0052\u0061\u006eg\u0065");
_dfbaf !=nil {_dfbaf =_fb .TraceToDirectObject (_dfbaf );_fgcef ,_edgg :=_dfbaf .(*_fb .PdfObjectArray );if !_edgg {return nil ,_f .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _fgcef .Len ()!=2*_bcde .N {return nil ,_f .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_bdgd ,_dadgc :=_fgcef .GetAsFloat64Slice ();if _dadgc !=nil {return nil ,_dadgc ;};_bcde .Range =_bdgd ;}else {_bcde .Range =make ([]float64 ,2*_bcde .N );for _aafda :=0;_aafda < _bcde .N ;_aafda ++{_bcde .Range [2*_aafda ]=0.0;_bcde .Range [2*_aafda +1]=1.0;
};};if _bdbb :=_gdad .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bdbb !=nil {_cgde ,_dggb :=_bdbb .(*_fb .PdfObjectStream );if !_dggb {return nil ,_f .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_bcde .Metadata =_cgde ;};_befde ,_dccd :=_fb .DecodeStream (_cfec );if _dccd !=nil {return nil ,_dccd ;};_bcde .Data =_befde ;_bcde ._aeac =_cfec ;return _bcde ,nil ;};func _febgb (_fgaag _fb .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_gb .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_fgaag .String (),_fgaag );
_gaggf :=NewPdfColorspaceSpecialPattern ();if _ddbd ,_dcedb :=_fgaag .(*_fb .PdfIndirectObject );_dcedb {_gaggf ._fccbc =_ddbd ;};_fgaag =_fb .TraceToDirectObject (_fgaag );if _fdcc ,_cede :=_fgaag .(*_fb .PdfObjectName );_cede {if *_fdcc !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_f .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _gaggf ,nil ;};_efec ,_eabd :=_fgaag .(*_fb .PdfObjectArray );if !_eabd {_gb .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_fgaag );
return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _efec .Len ()!=1&&_efec .Len ()!=2{_gb .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_efec );
return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_fgaag =_efec .Get (0);if _aacg ,_dfed :=_fgaag .(*_fb .PdfObjectName );_dfed {if *_aacg !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_gb .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_aacg );
return nil ,_f .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _efec .Len ()> 1{_fgaag =_efec .Get (1);_fgaag =_fb .TraceToDirectObject (_fgaag );_dega ,_bbea :=NewPdfColorspaceFromPdfObject (_fgaag );if _bbea !=nil {return nil ,_bbea ;
};_gaggf .UnderlyingCS =_dega ;};_gb .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_gaggf .UnderlyingCS );
return _gaggf ,nil ;};func (_egac *PdfReader )newPdfAnnotationLineFromDict (_cbeda *_fb .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_gfdb :=PdfAnnotationLine {};_ddd ,_afdb :=_egac .newPdfAnnotationMarkupFromDict (_cbeda );if _afdb !=nil {return nil ,_afdb ;
};_gfdb .PdfAnnotationMarkup =_ddd ;_gfdb .L =_cbeda .Get ("\u004c");_gfdb .BS =_cbeda .Get ("\u0042\u0053");_gfdb .LE =_cbeda .Get ("\u004c\u0045");_gfdb .IC =_cbeda .Get ("\u0049\u0043");_gfdb .LL =_cbeda .Get ("\u004c\u004c");_gfdb .LLE =_cbeda .Get ("\u004c\u004c\u0045");
_gfdb .Cap =_cbeda .Get ("\u0043\u0061\u0070");_gfdb .IT =_cbeda .Get ("\u0049\u0054");_gfdb .LLO =_cbeda .Get ("\u004c\u004c\u004f");_gfdb .CP =_cbeda .Get ("\u0043\u0050");_gfdb .Measure =_cbeda .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_gfdb .CO =_cbeda .Get ("\u0043\u004f");
return &_gfdb ,nil ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _fb .StreamEncoder ;Intent _fb .PdfObject ;ImageMask _fb .PdfObject ;Mask _fb .PdfObject ;Matte _fb .PdfObject ;Decode _fb .PdfObject ;Interpolate _fb .PdfObject ;Alternatives _fb .PdfObject ;
SMask _fb .PdfObject ;SMaskInData _fb .PdfObject ;Name _fb .PdfObject ;StructParent _fb .PdfObject ;ID _fb .PdfObject ;OPI _fb .PdfObject ;Metadata _fb .PdfObject ;OC _fb .PdfObject ;Stream []byte ;_badaab *_fb .PdfObjectStream ;};func _dffc (_cbfc _fb .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_bbee :=NewPdfColorspaceSpecialIndexed ();
if _eccbg ,_ggd :=_cbfc .(*_fb .PdfIndirectObject );_ggd {_bbee ._cefcb =_eccbg ;};_cbfc =_fb .TraceToDirectObject (_cbfc );_eggb ,_dbbdc :=_cbfc .(*_fb .PdfObjectArray );if !_dbbdc {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _eggb .Len ()!=4{return nil ,_f .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_cbfc =_eggb .Get (0);
_fdbd ,_dbbdc :=_cbfc .(*_fb .PdfObjectName );if !_dbbdc {return nil ,_f .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_fdbd !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_f .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_cbfc =_eggb .Get (1);_afed ,_aceeb :=DetermineColorspaceNameFromPdfObject (_cbfc );if _aceeb !=nil {return nil ,_aceeb ;};if _afed =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_afed =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_gb .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_afed );
return nil ,_dgbe ;};_gdgb ,_aceeb :=NewPdfColorspaceFromPdfObject (_cbfc );if _aceeb !=nil {return nil ,_aceeb ;};_bbee .Base =_gdgb ;_cbfc =_eggb .Get (2);_eeda ,_aceeb :=_fb .GetNumberAsInt64 (_cbfc );if _aceeb !=nil {return nil ,_aceeb ;};if _eeda > 255{return nil ,_f .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_bbee .HiVal =int (_eeda );_cbfc =_eggb .Get (3);_bbee .Lookup =_cbfc ;_cbfc =_fb .TraceToDirectObject (_cbfc );var _ecaec []byte ;if _eadcb ,_dbadb :=_cbfc .(*_fb .PdfObjectString );_dbadb {_ecaec =_eadcb .Bytes ();_gb .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_ecaec );
}else if _agde ,_afffc :=_cbfc .(*_fb .PdfObjectStream );_afffc {_gb .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_cbfc .String ());_gb .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_agde .Stream ),_agde .Stream );
_fggb ,_ffdf :=_fb .DecodeStream (_agde );if _ffdf !=nil {return nil ,_ffdf ;};_gb .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_fggb ),_fggb );_ecaec =_fggb ;}else {_gb .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_cbfc );
return nil ,_f .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_ecaec )< _bbee .Base .GetNumComponents ()*(_bbee .HiVal +1){_gb .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_gb .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_ecaec ),_bbee .Base .GetNumComponents (),_bbee .HiVal );
}else {_ecaec =_ecaec [:_bbee .Base .GetNumComponents ()*(_bbee .HiVal +1)];};_bbee ._cdcac =_ecaec ;return _bbee ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_cedg *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddfg :=vals [0];_cfef :=[]float64 {_ddfg };_gabd ,_cdcaa :=_cedg .TintTransform .Evaluate (_cfef );
if _cdcaa !=nil {_gb .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_cdcaa );_gb .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cedg .TintTransform );
return nil ,_cdcaa ;};_gb .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_gabd ,_cedg .AlternateSpace );
_gdee ,_cdcaa :=_cedg .AlternateSpace .ColorFromFloats (_gabd );if _cdcaa !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_cdcaa );
return nil ,_cdcaa ;};return _gdee ,nil ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _fb .PdfObject ;Open _fb .PdfObject ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_dfac *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggb ,_bcag :=_fb .GetNumbersAsFloat (objects );
if _bcag !=nil {return nil ,_bcag ;};return _dfac .ColorFromFloats (_ggb );};func (_daeb *PdfReader )newPdfAnnotationUnderlineFromDict (_ffa *_fb .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_dceg :=PdfAnnotationUnderline {};_dac ,_agg :=_daeb .newPdfAnnotationMarkupFromDict (_ffa );
if _agg !=nil {return nil ,_agg ;};_dceg .PdfAnnotationMarkup =_dac ;_dceg .QuadPoints =_ffa .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_dceg ,nil ;};func _fdde (_gdceg _fb .PdfObject )(string ,error ){_gdceg =_fb .TraceToDirectObject (_gdceg );
switch _eede :=_gdceg .(type ){case *_fb .PdfObjectString :return _eede .Str (),nil ;case *_fb .PdfObjectStream :_gdcf ,_bacebc :=_fb .DecodeStream (_eede );if _bacebc !=nil {return "",_bacebc ;};return string (_gdcf ),nil ;};return "",_f .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_gdceg );
};type fontCommon struct{_beeg string ;_aaab string ;_ebdbb string ;_daag _fb .PdfObject ;_acfd *_edb .CMap ;_bgdf *PdfFontDescriptor ;_adgd int64 ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_gcacd *PdfPage )AppendContentStream (contentStr string )error {_ggefe ,_gefg :=_gcacd .GetContentStreams ();if _gefg !=nil {return _gefg ;};if len (_ggefe )==0{_ggefe =[]string {contentStr };return _gcacd .SetContentStreams (_ggefe ,_fb .NewFlateEncoder ());
};var _ccdge _cb .Buffer ;_ccdge .WriteString (_ggefe [len (_ggefe )-1]);_ccdge .WriteString ("\u000a");_ccdge .WriteString (contentStr );_ggefe [len (_ggefe )-1]=_ccdge .String ();return _gcacd .SetContentStreams (_ggefe ,_fb .NewFlateEncoder ());};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_cacda .Lock ();defer _cacda .Unlock ();_efagd =title };

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_cacda .Lock ();defer _cacda .Unlock ();_bggfc =creator };func (_ccd *PdfReader )newPdfActionFromIndirectObject (_cba *_fb .PdfIndirectObject )(*PdfAction ,error ){_gef ,_edaa :=_cba .PdfObject .(*_fb .PdfObjectDictionary );
if !_edaa {return nil ,_f .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_ccd ._fagc .GetModelFromPrimitive (_gef );model !=nil {_fead ,_ffb :=model .(*PdfAction );if !_ffb {return nil ,_f .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _fead ,nil ;};_aba :=&PdfAction {};_aba ._ege =_cba ;_ccd ._fagc .Register (_gef ,_aba );if _fdg :=_gef .Get ("\u0054\u0079\u0070\u0065");_fdg !=nil {_dgdb ,_ffbd :=_fdg .(*_fb .PdfObjectName );if !_ffbd {_gb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fdg );
}else {if *_dgdb !="\u0041\u0063\u0074\u0069\u006f\u006e"{_gb .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_dgdb );
};_aba .Type =_dgdb ;};};if _bbb :=_gef .Get ("\u004e\u0065\u0078\u0074");_bbb !=nil {_aba .Next =_bbb ;};if _add :=_gef .Get ("\u0053");_add !=nil {_aba .S =_add ;};_gbg ,_eca :=_aba .S .(*_fb .PdfObjectName );if !_eca {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_aba .S );
return nil ,_f .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_aba .S );};_def :=PdfActionType (_gbg .String ());
switch _def {case ActionTypeGoTo :_fdge ,_gae :=_ccd .newPdfActionGotoFromDict (_gef );if _gae !=nil {return nil ,_gae ;};_fdge .PdfAction =_aba ;_aba ._bd =_fdge ;return _aba ,nil ;case ActionTypeGoToR :_df ,_deb :=_ccd .newPdfActionGotoRFromDict (_gef );
if _deb !=nil {return nil ,_deb ;};_df .PdfAction =_aba ;_aba ._bd =_df ;return _aba ,nil ;case ActionTypeGoToE :_ccf ,_eb :=_ccd .newPdfActionGotoEFromDict (_gef );if _eb !=nil {return nil ,_eb ;};_ccf .PdfAction =_aba ;_aba ._bd =_ccf ;return _aba ,nil ;
case ActionTypeLaunch :_fdae ,_edbb :=_ccd .newPdfActionLaunchFromDict (_gef );if _edbb !=nil {return nil ,_edbb ;};_fdae .PdfAction =_aba ;_aba ._bd =_fdae ;return _aba ,nil ;case ActionTypeThread :_acg ,_caf :=_ccd .newPdfActionThreadFromDict (_gef );
if _caf !=nil {return nil ,_caf ;};_acg .PdfAction =_aba ;_aba ._bd =_acg ;return _aba ,nil ;case ActionTypeURI :_bdd ,_affd :=_ccd .newPdfActionURIFromDict (_gef );if _affd !=nil {return nil ,_affd ;};_bdd .PdfAction =_aba ;_aba ._bd =_bdd ;return _aba ,nil ;
case ActionTypeSound :_gad ,_fbd :=_ccd .newPdfActionSoundFromDict (_gef );if _fbd !=nil {return nil ,_fbd ;};_gad .PdfAction =_aba ;_aba ._bd =_gad ;return _aba ,nil ;case ActionTypeMovie :_aee ,_ceda :=_ccd .newPdfActionMovieFromDict (_gef );if _ceda !=nil {return nil ,_ceda ;
};_aee .PdfAction =_aba ;_aba ._bd =_aee ;return _aba ,nil ;case ActionTypeHide :_aecf ,_dfa :=_ccd .newPdfActionHideFromDict (_gef );if _dfa !=nil {return nil ,_dfa ;};_aecf .PdfAction =_aba ;_aba ._bd =_aecf ;return _aba ,nil ;case ActionTypeNamed :_ebd ,_eeg :=_ccd .newPdfActionNamedFromDict (_gef );
if _eeg !=nil {return nil ,_eeg ;};_ebd .PdfAction =_aba ;_aba ._bd =_ebd ;return _aba ,nil ;case ActionTypeSubmitForm :_eef ,_dfg :=_ccd .newPdfActionSubmitFormFromDict (_gef );if _dfg !=nil {return nil ,_dfg ;};_eef .PdfAction =_aba ;_aba ._bd =_eef ;
return _aba ,nil ;case ActionTypeResetForm :_fg ,_fdb :=_ccd .newPdfActionResetFormFromDict (_gef );if _fdb !=nil {return nil ,_fdb ;};_fg .PdfAction =_aba ;_aba ._bd =_fg ;return _aba ,nil ;case ActionTypeImportData :_eab ,_bfg :=_ccd .newPdfActionImportDataFromDict (_gef );
if _bfg !=nil {return nil ,_bfg ;};_eab .PdfAction =_aba ;_aba ._bd =_eab ;return _aba ,nil ;case ActionTypeSetOCGState :_agbf ,_acab :=_ccd .newPdfActionSetOCGStateFromDict (_gef );if _acab !=nil {return nil ,_acab ;};_agbf .PdfAction =_aba ;_aba ._bd =_agbf ;
return _aba ,nil ;case ActionTypeRendition :_bbc ,_fcg :=_ccd .newPdfActionRenditionFromDict (_gef );if _fcg !=nil {return nil ,_fcg ;};_bbc .PdfAction =_aba ;_aba ._bd =_bbc ;return _aba ,nil ;case ActionTypeTrans :_cbd ,_cbab :=_ccd .newPdfActionTransFromDict (_gef );
if _cbab !=nil {return nil ,_cbab ;};_cbd .PdfAction =_aba ;_aba ._bd =_cbd ;return _aba ,nil ;case ActionTypeGoTo3DView :_gag ,_fdf :=_ccd .newPdfActionGoTo3DViewFromDict (_gef );if _fdf !=nil {return nil ,_fdf ;};_gag .PdfAction =_aba ;_aba ._bd =_gag ;
return _aba ,nil ;case ActionTypeJavaScript :_cedaf ,_dbg :=_ccd .newPdfActionJavaScriptFromDict (_gef );if _dbg !=nil {return nil ,_dbg ;};_cedaf .PdfAction =_aba ;_aba ._bd =_cedaf ;return _aba ,nil ;};_gb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_def );
return nil ,nil ;};func (_bccfe *PdfWriter )checkPendingObjects (){for _adeda ,_bbcfc :=range _bccfe ._eccf {if !_bccfe .hasObject (_adeda ){_gb .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_adeda ,_adeda ,_adeda );
for _ ,_aaaec :=range _bbcfc {for _ ,_fgdgc :=range _aaaec .Keys (){_cfdfa :=_aaaec .Get (_fgdgc );if _cfdfa ==_adeda {_gb .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_aaaec .Set (_fgdgc ,_fb .MakeNull ());break ;};};};};};};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);
FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);
FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26);
);

// GetContentStream returns the XObject Form's content stream.
func (_eccgc *XObjectForm )GetContentStream ()([]byte ,error ){_dcbb ,_cbgff :=_fb .DecodeStream (_eccgc ._deaaa );if _cbgff !=nil {return nil ,_cbgff ;};return _dcbb ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fadg *PdfColorspaceLab )ToPdfObject ()_fb .PdfObject {_ggbd :=_fb .MakeArray ();_ggbd .Append (_fb .MakeName ("\u004c\u0061\u0062"));_bgef :=_fb .MakeDict ();if _fadg .WhitePoint !=nil {_dbda :=_fb .MakeArray (_fb .MakeFloat (_fadg .WhitePoint [0]),_fb .MakeFloat (_fadg .WhitePoint [1]),_fb .MakeFloat (_fadg .WhitePoint [2]));
_bgef .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_dbda );}else {_gb .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _fadg .BlackPoint !=nil {_dddf :=_fb .MakeArray (_fb .MakeFloat (_fadg .BlackPoint [0]),_fb .MakeFloat (_fadg .BlackPoint [1]),_fb .MakeFloat (_fadg .BlackPoint [2]));_bgef .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_dddf );
};if _fadg .Range !=nil {_bdcf :=_fb .MakeArray (_fb .MakeFloat (_fadg .Range [0]),_fb .MakeFloat (_fadg .Range [1]),_fb .MakeFloat (_fadg .Range [2]),_fb .MakeFloat (_fadg .Range [3]));_bgef .Set ("\u0052\u0061\u006eg\u0065",_bdcf );};_ggbd .Append (_bgef );
if _fadg ._dccg !=nil {_fadg ._dccg .PdfObject =_ggbd ;return _fadg ._dccg ;};return _ggbd ;};func (_dced *PdfReader )newPdfAnnotationFromIndirectObject (_fgd *_fb .PdfIndirectObject )(*PdfAnnotation ,error ){_adcb ,_gbgf :=_fgd .PdfObject .(*_fb .PdfObjectDictionary );
if !_gbgf {return nil ,_f .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_dced ._fagc .GetModelFromPrimitive (_adcb );model !=nil {_gbdd ,_bfc :=model .(*PdfAnnotation );if !_bfc {return nil ,_f .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _gbdd ,nil ;};_dfab :=&PdfAnnotation {};_dfab ._caa =_fgd ;_dced ._fagc .Register (_adcb ,_dfab );if _bceb :=_adcb .Get ("\u0054\u0079\u0070\u0065");_bceb !=nil {_gdafb ,_fgc :=_bceb .(*_fb .PdfObjectName );if !_fgc {_gb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bceb );
}else {if *_gdafb !="\u0041\u006e\u006eo\u0074"{_gb .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_gdafb );};};
};if _gce :=_adcb .Get ("\u0052\u0065\u0063\u0074");_gce !=nil {_dfab .Rect =_gce ;};if _acce :=_adcb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_acce !=nil {_dfab .Contents =_acce ;};if _bdb :=_adcb .Get ("\u0050");_bdb !=nil {_dfab .P =_bdb ;
};if _fca :=_adcb .Get ("\u004e\u004d");_fca !=nil {_dfab .NM =_fca ;};if _gge :=_adcb .Get ("\u004d");_gge !=nil {_dfab .M =_gge ;};if _cbdf :=_adcb .Get ("\u0046");_cbdf !=nil {_dfab .F =_cbdf ;};if _eegb :=_adcb .Get ("\u0041\u0050");_eegb !=nil {_dfab .AP =_eegb ;
};if _ffc :=_adcb .Get ("\u0041\u0053");_ffc !=nil {_dfab .AS =_ffc ;};if _ddf :=_adcb .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_ddf !=nil {_dfab .Border =_ddf ;};if _ebc :=_adcb .Get ("\u0043");_ebc !=nil {_dfab .C =_ebc ;};if _bcdf :=_adcb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_bcdf !=nil {_dfab .StructParent =_bcdf ;};if _ebdf :=_adcb .Get ("\u004f\u0043");_ebdf !=nil {_dfab .OC =_ebdf ;};_fgdd :=_adcb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _fgdd ==nil {_gb .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_dfab ._bfda =nil ;return _dfab ,nil ;};_gcbd ,_aac :=_fgdd .(*_fb .PdfObjectName );if !_aac {_gb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fgdd );
return nil ,_f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_fgdd );};switch *_gcbd {case "\u0054\u0065\u0078\u0074":_ffbdg ,_aad :=_dced .newPdfAnnotationTextFromDict (_adcb );
if _aad !=nil {return nil ,_aad ;};_ffbdg .PdfAnnotation =_dfab ;_dfab ._bfda =_ffbdg ;return _dfab ,nil ;case "\u004c\u0069\u006e\u006b":_cad ,_bae :=_dced .newPdfAnnotationLinkFromDict (_adcb );if _bae !=nil {return nil ,_bae ;};_cad .PdfAnnotation =_dfab ;
_dfab ._bfda =_cad ;return _dfab ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_cee ,_gaa :=_dced .newPdfAnnotationFreeTextFromDict (_adcb );if _gaa !=nil {return nil ,_gaa ;};_cee .PdfAnnotation =_dfab ;_dfab ._bfda =_cee ;return _dfab ,nil ;
case "\u004c\u0069\u006e\u0065":_edca ,_egaf :=_dced .newPdfAnnotationLineFromDict (_adcb );if _egaf !=nil {return nil ,_egaf ;};_edca .PdfAnnotation =_dfab ;_dfab ._bfda =_edca ;_gb .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_dfab ,_dfab );
_gb .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_edca ,_edca );_gb .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_edca .PdfAnnotationMarkup ,_edca .PdfAnnotationMarkup );
return _dfab ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_bge ,_dga :=_dced .newPdfAnnotationSquareFromDict (_adcb );if _dga !=nil {return nil ,_dga ;};_bge .PdfAnnotation =_dfab ;_dfab ._bfda =_bge ;return _dfab ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_aebf ,_fdba :=_dced .newPdfAnnotationCircleFromDict (_adcb );
if _fdba !=nil {return nil ,_fdba ;};_aebf .PdfAnnotation =_dfab ;_dfab ._bfda =_aebf ;return _dfab ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_edg ,_feacc :=_dced .newPdfAnnotationPolygonFromDict (_adcb );if _feacc !=nil {return nil ,_feacc ;};
_edg .PdfAnnotation =_dfab ;_dfab ._bfda =_edg ;return _dfab ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_fgde ,_baa :=_dced .newPdfAnnotationPolyLineFromDict (_adcb );if _baa !=nil {return nil ,_baa ;};_fgde .PdfAnnotation =_dfab ;_dfab ._bfda =_fgde ;
return _dfab ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_acf ,_fffa :=_dced .newPdfAnnotationHighlightFromDict (_adcb );if _fffa !=nil {return nil ,_fffa ;};_acf .PdfAnnotation =_dfab ;_dfab ._bfda =_acf ;return _dfab ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_gbe ,_eeebe :=_dced .newPdfAnnotationUnderlineFromDict (_adcb );
if _eeebe !=nil {return nil ,_eeebe ;};_gbe .PdfAnnotation =_dfab ;_dfab ._bfda =_gbe ;return _dfab ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_gcfa ,_cbae :=_dced .newPdfAnnotationSquigglyFromDict (_adcb );if _cbae !=nil {return nil ,_cbae ;
};_gcfa .PdfAnnotation =_dfab ;_dfab ._bfda =_gcfa ;return _dfab ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_caad ,_cbcd :=_dced .newPdfAnnotationStrikeOut (_adcb );if _cbcd !=nil {return nil ,_cbcd ;};_caad .PdfAnnotation =_dfab ;_dfab ._bfda =_caad ;
return _dfab ,nil ;case "\u0043\u0061\u0072e\u0074":_bfgg ,_bed :=_dced .newPdfAnnotationCaretFromDict (_adcb );if _bed !=nil {return nil ,_bed ;};_bfgg .PdfAnnotation =_dfab ;_dfab ._bfda =_bfgg ;return _dfab ,nil ;case "\u0053\u0074\u0061m\u0070":_afbc ,_cfdb :=_dced .newPdfAnnotationStampFromDict (_adcb );
if _cfdb !=nil {return nil ,_cfdb ;};_afbc .PdfAnnotation =_dfab ;_dfab ._bfda =_afbc ;return _dfab ,nil ;case "\u0049\u006e\u006b":_baad ,_dae :=_dced .newPdfAnnotationInkFromDict (_adcb );if _dae !=nil {return nil ,_dae ;};_baad .PdfAnnotation =_dfab ;
_dfab ._bfda =_baad ;return _dfab ,nil ;case "\u0050\u006f\u0070u\u0070":_ceef ,_bfed :=_dced .newPdfAnnotationPopupFromDict (_adcb );if _bfed !=nil {return nil ,_bfed ;};_ceef .PdfAnnotation =_dfab ;_dfab ._bfda =_ceef ;return _dfab ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_bff ,_fec :=_dced .newPdfAnnotationFileAttachmentFromDict (_adcb );
if _fec !=nil {return nil ,_fec ;};_bff .PdfAnnotation =_dfab ;_dfab ._bfda =_bff ;return _dfab ,nil ;case "\u0053\u006f\u0075n\u0064":_cbad ,_egab :=_dced .newPdfAnnotationSoundFromDict (_adcb );if _egab !=nil {return nil ,_egab ;};_cbad .PdfAnnotation =_dfab ;
_dfab ._bfda =_cbad ;return _dfab ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_cfe ,_fccb :=_dced .newPdfAnnotationRichMediaFromDict (_adcb );if _fccb !=nil {return nil ,_fccb ;};_cfe .PdfAnnotation =_dfab ;_dfab ._bfda =_cfe ;return _dfab ,nil ;
case "\u004d\u006f\u0076i\u0065":_degb ,_geb :=_dced .newPdfAnnotationMovieFromDict (_adcb );if _geb !=nil {return nil ,_geb ;};_degb .PdfAnnotation =_dfab ;_dfab ._bfda =_degb ;return _dfab ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_cda ,_agcd :=_dced .newPdfAnnotationScreenFromDict (_adcb );
if _agcd !=nil {return nil ,_agcd ;};_cda .PdfAnnotation =_dfab ;_dfab ._bfda =_cda ;return _dfab ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_ecba ,_deee :=_dced .newPdfAnnotationWidgetFromDict (_adcb );if _deee !=nil {return nil ,_deee ;};_ecba .PdfAnnotation =_dfab ;
_dfab ._bfda =_ecba ;return _dfab ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_caac ,_ecad :=_dced .newPdfAnnotationPrinterMarkFromDict (_adcb );if _ecad !=nil {return nil ,_ecad ;};_caac .PdfAnnotation =_dfab ;_dfab ._bfda =_caac ;
return _dfab ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_dcc ,_cceb :=_dced .newPdfAnnotationTrapNetFromDict (_adcb );if _cceb !=nil {return nil ,_cceb ;};_dcc .PdfAnnotation =_dfab ;_dfab ._bfda =_dcc ;return _dfab ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_gcd ,_ceeg :=_dced .newPdfAnnotationWatermarkFromDict (_adcb );
if _ceeg !=nil {return nil ,_ceeg ;};_gcd .PdfAnnotation =_dfab ;_dfab ._bfda =_gcd ;return _dfab ,nil ;case "\u0033\u0044":_ebb ,_aceag :=_dced .newPdfAnnotation3DFromDict (_adcb );if _aceag !=nil {return nil ,_aceag ;};_ebb .PdfAnnotation =_dfab ;_dfab ._bfda =_ebb ;
return _dfab ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_cead ,_cga :=_dced .newPdfAnnotationProjectionFromDict (_adcb );if _cga !=nil {return nil ,_cga ;};_cead .PdfAnnotation =_dfab ;_dfab ._bfda =_cead ;return _dfab ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_gadg ,_fgg :=_dced .newPdfAnnotationRedactFromDict (_adcb );if _fgg !=nil {return nil ,_fgg ;};_gadg .PdfAnnotation =_dfab ;_dfab ._bfda =_gadg ;return _dfab ,nil ;};_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_gcbd );
return nil ,nil ;};

// GetNumPages returns the number of pages in the document.
func (_fdbce *PdfReader )GetNumPages ()(int ,error ){if _fdbce ._cecbb .GetCrypter ()!=nil &&!_fdbce ._cecbb .IsAuthenticated (){return 0,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_fdbce ._fdbgc ),nil ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_aecef :_fb .MakeIndirectObject (_fb .MakeDict ()),VRI :map[string ]*VRI {}};};func (_ecda *PdfReader )newPdfAnnotationHighlightFromDict (_efee *_fb .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_dgab :=PdfAnnotationHighlight {};
_cgf ,_ggag :=_ecda .newPdfAnnotationMarkupFromDict (_efee );if _ggag !=nil {return nil ,_ggag ;};_dgab .PdfAnnotationMarkup =_cgf ;_dgab .QuadPoints =_efee .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_dgab ,nil ;};func _feadfd (_ddcae _fb .PdfObject )(*fontFile ,error ){_gb .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_ddcae );
_gccbd :=&fontFile {};_ddcae =_fb .TraceToDirectObject (_ddcae );_bacc ,_abedd :=_ddcae .(*_fb .PdfObjectStream );if !_abedd {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_ddcae );
return nil ,_fb .ErrTypeError ;};_bgdff :=_bacc .PdfObjectDictionary ;_addbf ,_baec :=_fb .DecodeStream (_bacc );if _baec !=nil {return nil ,_baec ;};_cgceb ,_abedd :=_fb .GetNameVal (_bgdff .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_abedd {_gccbd ._bdgb =_cgceb ;
if _cgceb =="\u0054\u0079\u0070\u0065\u0031\u0043"{_gb .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_bbcec ,_ :=_fb .GetIntVal (_bgdff .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_bcgf ,_ :=_fb .GetIntVal (_bgdff .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _bbcec > len (_addbf ){_bbcec =len (_addbf );
};if _bbcec +_bcgf > len (_addbf ){_bcgf =len (_addbf )-_bbcec ;};_dgge :=_addbf [:_bbcec ];var _fegc []byte ;if _bcgf > 0{_fegc =_addbf [_bbcec :_bbcec +_bcgf ];};if _bbcec > 0&&_bcgf > 0{_ccgaa :=_gccbd .loadFromSegments (_dgge ,_fegc );if _ccgaa !=nil {return nil ,_ccgaa ;
};};return _gccbd ,nil ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_dbbdf *PdfRectangle )Normalize (){if _dbbdf .Llx > _dbbdf .Urx {_dbbdf .Llx ,_dbbdf .Urx =_dbbdf .Urx ,_dbbdf .Llx ;};if _dbbdf .Lly > _dbbdf .Ury {_dbbdf .Lly ,_dbbdf .Ury =_dbbdf .Ury ,_dbbdf .Lly ;};};

// GetBorderWidth returns the border style's width.
func (_gagfe *PdfBorderStyle )GetBorderWidth ()float64 {if _gagfe .W ==nil {return 1;};return *_gagfe .W ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_cgce :=map[rune ]int {};for _ ,_deadce :=range text {_cgce [_deadce ]++;};return _cgce ;};func (_cccce *PdfReader )newPdfFieldSignatureFromDict (_gcfad *_fb .PdfObjectDictionary )(*PdfFieldSignature ,error ){_decdg :=&PdfFieldSignature {};
_cbbg ,_gaecdc :=_fb .GetIndirect (_gcfad .Get ("\u0056"));if _gaecdc {var _aabeb error ;_decdg .V ,_aabeb =_cccce .newPdfSignatureFromIndirect (_cbbg );if _aabeb !=nil {return nil ,_aabeb ;};};_decdg .Lock ,_ =_fb .GetIndirect (_gcfad .Get ("\u004c\u006f\u0063\u006b"));
_decdg .SV ,_ =_fb .GetIndirect (_gcfad .Get ("\u0053\u0056"));return _decdg ,nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_fb .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_dfbf *_fb .PdfIndirectObject ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_adca *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_efaaa *PdfWriter )writeAcroFormFields ()error {if _efaaa ._agadb ==nil {return nil ;};_gb .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_ceede :=_efaaa ._agadb .ToPdfObject ();_gb .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_ceede );_efaaa ._aeab .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ceede );_ebdfc :=_efaaa .addObjects (_ceede );
if _ebdfc !=nil {return _ebdfc ;};return nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cdggg pdfCIDFontType0 )GetCharMetrics (code _gc .CharCode )(_ba .CharMetrics ,bool ){_efag :=_cdggg ._dgcbg ;if _afagb ,_fdfgc :=_cdggg ._ceeb [code ];_fdfgc {_efag =_afagb ;};return _ba .CharMetrics {Wx :_efag },true ;};func _cfdde ()string {_facb :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _ddbae _cb .Buffer ;for _dfafg :=0;_dfafg < 6;_dfafg ++{_ddbae .WriteRune (rune (_facb [_ec .Intn (len (_facb ))]));};return _ddbae .String ();};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_eeggd *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _dcge []_gc .TextEncoder ;var _cefe _gc .CMapEncoder ;if _agdc :=_eeggd .baseFields ()._acfd ;_agdc !=nil {_cefe =_gc .NewCMapEncoder ("",nil ,_agdc );};_fgfda :=_eeggd .Encoder ();
if _fgfda !=nil {switch _bfgfd :=_fgfda .(type ){case _gc .SimpleEncoder :_aggb :=_bfgfd .BaseName ();if _ ,_dgbga :=_fcgcd [_aggb ];_dgbga {_dcge =append (_dcge ,_fgfda );};};};if len (_dcge )==0{if _eeggd .baseFields ()._acfd !=nil {_dcge =append (_dcge ,_cefe );
};if _fgfda !=nil {_dcge =append (_dcge ,_fgfda );};};var _ggcgd _cb .Buffer ;var _dfdea int ;for _ ,_efcde :=range data {var _acgc bool ;for _ ,_adafg :=range _dcge {if _ebcgf :=_adafg .Encode (string (_efcde ));len (_ebcgf )> 0{_ggcgd .Write (_ebcgf );
_acgc =true ;break ;};};if !_acgc {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_efcde );
_dfdea ++;};};if _dfdea !=0{_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_dfdea ,_eeggd ,_dcge );
};return _ggcgd .Bytes (),_dfdea ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gadfg *PdfShadingType4 )ToPdfObject ()_fb .PdfObject {_gadfg .PdfShading .ToPdfObject ();_bcaae ,_dbecd :=_gadfg .getShadingDict ();if _dbecd !=nil {_gb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gadfg .BitsPerCoordinate !=nil {_bcaae .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gadfg .BitsPerCoordinate );};if _gadfg .BitsPerComponent !=nil {_bcaae .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gadfg .BitsPerComponent );
};if _gadfg .BitsPerFlag !=nil {_bcaae .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gadfg .BitsPerFlag );};if _gadfg .Decode !=nil {_bcaae .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gadfg .Decode );};if _gadfg .Function !=nil {if len (_gadfg .Function )==1{_bcaae .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gadfg .Function [0].ToPdfObject ());
}else {_adfg :=_fb .MakeArray ();for _ ,_cbbbc :=range _gadfg .Function {_adfg .Append (_cbbbc .ToPdfObject ());};_bcaae .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_adfg );};};return _gadfg ._bbdbag ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_acbge *PdfPageResources )GetXObjectImageByName (keyName _fb .PdfObjectName )(*XObjectImage ,error ){_gfcc ,_babab :=_acbge .GetXObjectByName (keyName );if _gfcc ==nil {return nil ,nil ;};if _babab !=XObjectTypeImage {return nil ,_fef .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_bdedff ,_faec :=NewXObjectImageFromStream (_gfcc );if _faec !=nil {return nil ,_faec ;};return _bdedff ,nil ;};func (_gaeeg *PdfWriter )copyObjects (){_ecgb :=make (map[_fb .PdfObject ]_fb .PdfObject );_babg :=make ([]_fb .PdfObject ,0,len (_gaeeg ._cgdaa ));
_cdcbeb :=make (map[_fb .PdfObject ]struct{},len (_gaeeg ._cgdaa ));_bfccd :=make (map[_fb .PdfObject ]struct{});for _ ,_eabae :=range _gaeeg ._cgdaa {_eeeg :=_gaeeg .copyObject (_eabae ,_ecgb ,_bfccd ,false );if _ ,_eeafe :=_bfccd [_eabae ];_eeafe {continue ;
};_babg =append (_babg ,_eeeg );_cdcbeb [_eeeg ]=struct{}{};};_gaeeg ._cgdaa =_babg ;_gaeeg ._bddff =_cdcbeb ;_gaeeg ._gbaa =_gaeeg .copyObject (_gaeeg ._gbaa ,_ecgb ,nil ,false ).(*_fb .PdfIndirectObject );_gaeeg ._aebagd =_gaeeg .copyObject (_gaeeg ._aebagd ,_ecgb ,nil ,false ).(*_fb .PdfIndirectObject );
if _gaeeg ._bgdbe !=nil {_gaeeg ._bgdbe =_gaeeg .copyObject (_gaeeg ._bgdbe ,_ecgb ,nil ,false ).(*_fb .PdfIndirectObject );};if _gaeeg ._geefd {_dgeea :=make (map[_fb .PdfObject ]int64 );for _cccbd ,_dfacc :=range _gaeeg ._cgefe {if _babda ,_acaee :=_ecgb [_cccbd ];
_acaee {_dgeea [_babda ]=_dfacc ;}else {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_gaeeg ._cgefe =_dgeea ;};};func (_ecab *PdfReader )newPdfActionRenditionFromDict (_dbc *_fb .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_dbc .Get ("\u0052"),AN :_dbc .Get ("\u0041\u004e"),OP :_dbc .Get ("\u004f\u0050"),JS :_dbc .Get ("\u004a\u0053")},nil ;
};func (_bcfa *PdfReader )newPdfAcroFormFromDict (_begaa *_fb .PdfIndirectObject ,_fedgd *_fb .PdfObjectDictionary )(*PdfAcroForm ,error ){_acgda :=NewPdfAcroForm ();if _begaa !=nil {_acgda ._degd =_begaa ;_begaa .PdfObject =_fb .MakeDict ();};if _ggeg :=_fedgd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");
_ggeg !=nil {_bcbe ,_fedcg :=_fb .GetArray (_ggeg );if !_fedcg {return nil ,_f .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_ggeg );};var _edeec []*PdfField ;
for _ ,_cceba :=range _bcbe .Elements (){_daaa ,_aaafe :=_fb .GetIndirect (_cceba );if !_aaafe {if _ ,_adcg :=_cceba .(*_fb .PdfObjectNull );_adcg {_gb .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_gb .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_cceba );
return nil ,_f .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dagdg ,_ggbg :=_bcfa .newPdfFieldFromIndirectObject (_daaa ,nil );
if _ggbg !=nil {return nil ,_ggbg ;};_gb .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_dagdg );_edeec =append (_edeec ,_dagdg );};_acgda .Fields =&_edeec ;};if _edefe :=_fedgd .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_edefe !=nil {_gfbg ,_aaeg :=_fb .GetBool (_edefe );if _aaeg {_acgda .NeedAppearances =_gfbg ;}else {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_edefe );
};};if _bgaaa :=_fedgd .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_bgaaa !=nil {_bagag ,_cfgc :=_fb .GetInt (_bgaaa );if _cfgc {_acgda .SigFlags =_bagag ;}else {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bgaaa );
};};if _cacgf :=_fedgd .Get ("\u0043\u004f");_cacgf !=nil {_acag ,_afef :=_fb .GetArray (_cacgf );if _afef {_acgda .CO =_acag ;}else {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_cacgf );
};};if _eggg :=_fedgd .Get ("\u0044\u0052");_eggg !=nil {if _geaeb ,_ccda :=_fb .GetDict (_eggg );_ccda {_bebcf ,_adfba :=NewPdfPageResourcesFromDict (_geaeb );if _adfba !=nil {_gb .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_adfba );
return nil ,_adfba ;};_acgda .DR =_bebcf ;}else {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_eggg );};};if _gbea :=_fedgd .Get ("\u0044\u0041");
_gbea !=nil {_baeed ,_egceb :=_fb .GetString (_gbea );if _egceb {_acgda .DA =_baeed ;}else {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gbea );
};};if _gbecc :=_fedgd .Get ("\u0051");_gbecc !=nil {_dfgg ,_cecda :=_fb .GetInt (_gbecc );if _cecda {_acgda .Q =_dfgg ;}else {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gbecc );
};};if _gggcbe :=_fedgd .Get ("\u0058\u0046\u0041");_gggcbe !=nil {_acgda .XFA =_gggcbe ;};_acgda .ToPdfObject ();return _acgda ,nil ;};func _fcdb (_afbd []byte )(_edgef ,_eddfd string ,_agbcc error ){_gb .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_afbd ));
_fadge :=_acfge .FindIndex (_afbd );if _fadge ==nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_fb .ErrTypeError ;};_aedce :=_fadge [1];_eddda :=_eg .Index (string (_afbd [_aedce :]),_fadgg );if _eddda < 0{_edgef =string (_afbd [_aedce :]);return _edgef ,"",nil ;};_dgdad :=_aedce +_eddda ;_edgef =string (_afbd [_aedce :_dgdad ]);_acgde :=_dgdad ;
_eddda =_eg .Index (string (_afbd [_acgde :]),_gdgd );if _eddda < 0{_gb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_agbcc );
return "","",_fb .ErrTypeError ;};_ceebg :=_acgde +_eddda ;_eddfd =string (_afbd [_acgde :_ceebg ]);return _edgef ,_eddfd ,nil ;};func _aedca (_gceb string )(map[_gc .CharCode ]_gc .GlyphName ,error ){_facbf :=_eg .Split (_gceb ,"\u000a");_abbb :=make (map[_gc .CharCode ]_gc .GlyphName );
for _ ,_ecfac :=range _facbf {_bcged :=_bbfbf .FindStringSubmatch (_ecfac );if _bcged ==nil {continue ;};_ebcd ,_abaab :=_bcged [1],_bcged [2];_abfc ,_deebcc :=_deg .Atoi (_ebcd );if _deebcc !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_ecfac );
return nil ,_fb .ErrTypeError ;};_abbb [_gc .CharCode (_abfc )]=_gc .GlyphName (_abaab );};_gb .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_abbb );
return _abbb ,nil ;};

// ToInteger convert to an integer format.
func (_bccgb *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_cggee :=_eda .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_cggee *_bccgb .C ()),uint32 (_cggee *_bccgb .M ()),uint32 (_cggee *_bccgb .Y ()),uint32 (_cggee *_bccgb .K ())};};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _ac .ReadSeeker )(*PdfReader ,error ){const _ggce ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _gbdfce (rs ,&ReaderOpts {},false ,_ggce );};

// ToInteger convert to an integer format.
func (_ebec *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_cceda :=_eda .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cceda *_ebec .A ()),uint32 (_cceda *_ebec .B ()),uint32 (_cceda *_ebec .C ())};};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_badab *PdfField )IsTerminal ()bool {return len (_badab .Kids )==0};func (_ccfd *DSS )generateHashMap (_cdgce []*_fb .PdfObjectStream )(map[string ]*_fb .PdfObjectStream ,error ){_cgaed :=map[string ]*_fb .PdfObjectStream {};for _ ,_fdda :=range _cdgce {_gbegf ,_fedbb :=_fb .DecodeStream (_fdda );
if _fedbb !=nil {return nil ,_fedbb ;};_bdbag ,_fedbb :=_afccc (_gbegf );if _fedbb !=nil {return nil ,_fedbb ;};_cgaed [string (_bdbag )]=_fdda ;};return _cgaed ,nil ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_gfbf *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_eefa :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_eaba ,_cfagd :=_gfbf .GetNumPages ();if _cfagd !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cfagd );
return nil ,_cfagd ;};for _geeb :=1;_geeb <=_eaba ;_geeb ++{_bgefc ,_agfe :=_gfbf .GetPage (_geeb );if _agfe !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agfe );return nil ,_agfe ;};if opts .PageProcessCallback !=nil {_agfe =opts .PageProcessCallback (_geeb ,_bgefc );
if _agfe !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agfe );return nil ,_agfe ;};}else if opts .PageCallback !=nil {opts .PageCallback (_geeb ,_bgefc );};_agfe =_eefa .AddPage (_bgefc );if _agfe !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agfe );
return nil ,_agfe ;};};_eefa ._effda =_gfbf .PdfVersion ();if !opts .SkipInfo {_eedee ,_edegd :=_gfbf .GetPdfInfo ();if _edegd !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_edegd );}else {_eefa ._gbaa .PdfObject =_eedee .ToPdfObject ();
};};if !opts .SkipAcroForm {_fbfcc :=_eefa .SetForms (_gfbf .AcroForm );if _fbfcc !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbfcc );return nil ,_fbfcc ;};};if !opts .SkipOutlines {_eefa .AddOutlineTree (_gfbf .GetOutlineTree ());
};if !opts .SkipOCProperties {_caff ,_gbbgfe :=_gfbf .GetOCProperties ();if _gbbgfe !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbbgfe );}else {_gbbgfe =_eefa .SetOCProperties (_caff );if _gbbgfe !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbbgfe );
};};};if !opts .SkipPageLabels {_fgdfb ,_fbgdc :=_gfbf .GetPageLabels ();if _fbgdc !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbgdc );}else {_fbgdc =_eefa .SetPageLabels (_fgdfb );if _fbgdc !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbgdc );
};};};if !opts .SkipNamedDests {_aefae ,_bfebg :=_gfbf .GetNamedDestinations ();if _bfebg !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfebg );}else {_bfebg =_eefa .SetNamedDestinations (_aefae );if _bfebg !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfebg );
};};};if !opts .SkipNameDictionary {_agec ,_cddbg :=_gfbf .GetNameDictionary ();if _cddbg !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cddbg );}else {_cddbg =_eefa .SetNameDictionary (_agec );if _cddbg !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cddbg );
};};};if !opts .SkipRotation &&_gfbf .Rotate !=nil {if _ddffd :=_eefa .SetRotation (*_gfbf .Rotate );_ddffd !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddffd );};};return &_eefa ,nil ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_gfee *PdfPage )GetAllContentStreams ()(string ,error ){_fabca ,_aegac :=_gfee .GetContentStreams ();if _aegac !=nil {return "",_aegac ;};return _eg .Join (_fabca ,"\u0020"),nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_cbecf *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbcf :=vals [0];if _fbcf < 0.0||_fbcf > 100.0{_gb .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_fbcf );
return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aagb :=vals [1];_faaa :=float64 (-100);_bdgf :=float64 (100);if len (_cbecf .Range )> 1{_faaa =_cbecf .Range [0];_bdgf =_cbecf .Range [1];};if _aagb < _faaa ||_aagb > _bdgf {_gb .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_aagb ,_faaa ,_bdgf );
return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dagdb :=vals [2];_bbcb :=float64 (-100);_bgaa :=float64 (100);if len (_cbecf .Range )> 3{_bbcb =_cbecf .Range [2];_bgaa =_cbecf .Range [3];};if _dagdb < _bbcb ||_dagdb > _bgaa {_gb .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_dagdb ,_bbcb ,_bgaa );
return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_caae :=NewPdfColorLab (_fbcf ,_aagb ,_dagdb );return _caae ,nil ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_addbbg *PdfPage )AddContentStreamByString (contentStr string )error {_agcdc ,_fcad :=_fb .MakeStream ([]byte (contentStr ),_fb .NewFlateEncoder ());if _fcad !=nil {return _fcad ;};if _addbbg .Contents ==nil {_addbbg .Contents =_agcdc ;}else {_eaegf :=_fb .TraceToDirectObject (_addbbg .Contents );
_ceddc ,_eaead :=_eaegf .(*_fb .PdfObjectArray );if !_eaead {_ceddc =_fb .MakeArray (_eaegf );};_ceddc .Append (_agcdc );_addbbg .Contents =_ceddc ;};return nil ;};func _ecbd (_deff _fb .PdfObject )(*PdfBorderStyle ,error ){_gfad :=&PdfBorderStyle {};_gfad ._adga =_deff ;
var _edde *_fb .PdfObjectDictionary ;_deff =_fb .TraceToDirectObject (_deff );_edde ,_cgdb :=_deff .(*_fb .PdfObjectDictionary );if !_cgdb {return nil ,_fef .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _dedff :=_edde .Get ("\u0054\u0079\u0070\u0065");
_dedff !=nil {_efaf ,_gdd :=_dedff .(*_fb .PdfObjectName );if !_gdd {_gb .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_dedff );
}else {if *_efaf !="\u0042\u006f\u0072\u0064\u0065\u0072"{_gb .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_efaf );};};};if _agcg :=_edde .Get ("\u0057");
_agcg !=nil {_dbd ,_gdga :=_fb .GetNumberAsFloat (_agcg );if _gdga !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_gdga );return nil ,_gdga ;};_gfad .W =&_dbd ;
};if _bfgf :=_edde .Get ("\u0053");_bfgf !=nil {_eeec ,_fac :=_bfgf .(*_fb .PdfObjectName );if !_fac {return nil ,_fef .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _dddc BorderStyle ;switch *_eeec {case "\u0053":_dddc =BorderStyleSolid ;case "\u0044":_dddc =BorderStyleDashed ;case "\u0042":_dddc =BorderStyleBeveled ;case "\u0049":_dddc =BorderStyleInset ;case "\u0055":_dddc =BorderStyleUnderline ;default:_gb .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_eeec );
return nil ,_fef .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_gfad .S =&_dddc ;};if _bee :=_edde .Get ("\u0044");_bee !=nil {_ffcb ,_cbb :=_bee .(*_fb .PdfObjectArray );
if !_cbb {_gb .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_bee );return nil ,_fef .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_fgbc ,_dege :=_ffcb .ToIntegerArray ();if _dege !=nil {_gb .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_dege );
return nil ,_dege ;};_gfad .D =&_fgbc ;};return _gfad ,nil ;};type pdfCIDFontType2 struct{fontCommon ;_gggb *_fb .PdfIndirectObject ;_cggb _gc .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_fb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _fb .PdfObject ;W _fb .PdfObject ;DW2 _fb .PdfObject ;W2 _fb .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _fb .PdfObject ;_ecbf map[_gc .CharCode ]float64 ;_becd float64 ;_ecfe map[rune ]int ;};var (_acfge =_bf .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_cbgdg =_bf .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_bbfbf =_bf .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_fadgg ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_gdgd ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_feed ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);func (_dbab *DSS )add (_cebg *[]*_fb .PdfObjectStream ,_fgcb map[string ]*_fb .PdfObjectStream ,_daceb [][]byte )([]*_fb .PdfObjectStream ,error ){_ebaa :=make ([]*_fb .PdfObjectStream ,0,len (_daceb ));for _ ,_dgeb :=range _daceb {_cabg ,_ffcbb :=_afccc (_dgeb );
if _ffcbb !=nil {return nil ,_ffcbb ;};_bgead ,_aaedb :=_fgcb [string (_cabg )];if !_aaedb {_bgead ,_ffcbb =_fb .MakeStream (_dgeb ,_fb .NewRawEncoder ());if _ffcbb !=nil {return nil ,_ffcbb ;};_fgcb [string (_cabg )]=_bgead ;*_cebg =append (*_cebg ,_bgead );
};_ebaa =append (_ebaa ,_bgead );};return _ebaa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cgaa *PdfAnnotationPolyLine )ToPdfObject ()_fb .PdfObject {_cgaa .PdfAnnotation .ToPdfObject ();_gdbb :=_cgaa ._caa ;_eeef :=_gdbb .PdfObject .(*_fb .PdfObjectDictionary );_cgaa .PdfAnnotationMarkup .appendToPdfDictionary (_eeef );_eeef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_eeef .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cgaa .Vertices );_eeef .SetIfNotNil ("\u004c\u0045",_cgaa .LE );_eeef .SetIfNotNil ("\u0042\u0053",_cgaa .BS );_eeef .SetIfNotNil ("\u0049\u0043",_cgaa .IC );_eeef .SetIfNotNil ("\u0042\u0045",_cgaa .BE );
_eeef .SetIfNotNil ("\u0049\u0054",_cgaa .IT );_eeef .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cgaa .Measure );return _gdbb ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_aaed :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_aaed ;};func _cgaea (_eafa _fb .PdfObject ,_dbgca *fontCommon )(*_edb .CMap ,error ){_accfc ,_badca :=_fb .GetStream (_eafa );if !_badca {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_eafa );
return nil ,_fb .ErrTypeError ;};_aacge ,_adfe :=_fb .DecodeStream (_accfc );if _adfe !=nil {return nil ,_adfe ;};_abeb ,_adfe :=_edb .LoadCmapFromData (_aacge ,!_dbgca .isCIDFont ());if _adfe !=nil {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_accfc .ObjectNumber ,_adfe );
};return _abeb ,_adfe ;};

// BaseFont returns the font's "BaseFont" field.
func (_aced *PdfFont )BaseFont ()string {return _aced .baseFields ()._beeg };

// GetContainingPdfObject implements model.PdfModel interface.
func (_cdedd *PdfOutputIntent )GetContainingPdfObject ()_fb .PdfObject {return _cdedd ._febgd };func _cggec (_dcddc *_fb .PdfObjectDictionary )*VRI {_addc ,_ :=_fb .GetString (_dcddc .Get ("\u0054\u0055"));_ecdb ,_ :=_fb .GetString (_dcddc .Get ("\u0054\u0053"));
return &VRI {Cert :_fbcecb (_dcddc .Get ("\u0043\u0065\u0072\u0074")),OCSP :_fbcecb (_dcddc .Get ("\u004f\u0043\u0053\u0050")),CRL :_fbcecb (_dcddc .Get ("\u0043\u0052\u004c")),TU :_addc ,TS :_ecdb };};func (_bbgd *PdfReader )newPdfAnnotationFileAttachmentFromDict (_fcdc *_fb .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_aceb :=PdfAnnotationFileAttachment {};
_cde ,_bdg :=_bbgd .newPdfAnnotationMarkupFromDict (_fcdc );if _bdg !=nil {return nil ,_bdg ;};_aceb .PdfAnnotationMarkup =_cde ;_aceb .FS =_fcdc .Get ("\u0046\u0053");_aceb .Name =_fcdc .Get ("\u004e\u0061\u006d\u0065");return &_aceb ,nil ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_afgca *PdfPageResources )GetContainingPdfObject ()_fb .PdfObject {return _afgca ._aeefa };

// A returns the value of the A component of the color.
func (_dddcf *PdfColorCalRGB )A ()float64 {return _dddcf [0]};

// Register registers (caches) a model to primitive object relationship.
func (_dgfdea *modelManager )Register (primitive _fb .PdfObject ,model PdfModel ){_dgfdea ._bfacf [model ]=primitive ;_dgfdea ._eadbg [primitive ]=model ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _fb .PdfObject ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_fee :=NewPdfAction ();_ddc :=&PdfActionJavaScript {};_ddc .PdfAction =_fee ;_fee .SetContext (_ddc );return _ddc ;};func _faea (_cceae _fb .PdfObject )(*PdfFontDescriptor ,error ){_ccde :=&PdfFontDescriptor {};
_cceae =_fb .ResolveReference (_cceae );if _dbgb ,_ffdff :=_cceae .(*_fb .PdfIndirectObject );_ffdff {_ccde ._edbee =_dbgb ;_cceae =_dbgb .PdfObject ;};_fggc ,_fadga :=_fb .GetDict (_cceae );if !_fadga {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cceae );
return nil ,_fb .ErrTypeError ;};if _eabdb :=_fggc .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_eabdb !=nil {_ccde .FontName =_eabdb ;}else {_gb .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_fbcga ,_ :=_fb .GetName (_ccde .FontName );if _dcaa :=_fggc .Get ("\u0054\u0079\u0070\u0065");_dcaa !=nil {_cbgeb ,_dedfc :=_dcaa .(*_fb .PdfObjectName );if !_dedfc ||string (*_cbgeb )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_gb .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_dcaa ,_fbcga ,_ccde .FontName );
};}else {_gb .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_fbcga ,_ccde .FontName );
};_ccde .FontFamily =_fggc .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_ccde .FontStretch =_fggc .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_ccde .FontWeight =_fggc .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_ccde .Flags =_fggc .Get ("\u0046\u006c\u0061g\u0073");_ccde .FontBBox =_fggc .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_ccde .ItalicAngle =_fggc .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_ccde .Ascent =_fggc .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_ccde .Descent =_fggc .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_ccde .Leading =_fggc .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_ccde .CapHeight =_fggc .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_ccde .XHeight =_fggc .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_ccde .StemV =_fggc .Get ("\u0053\u0074\u0065m\u0056");_ccde .StemH =_fggc .Get ("\u0053\u0074\u0065m\u0048");_ccde .AvgWidth =_fggc .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_ccde .MaxWidth =_fggc .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_ccde .MissingWidth =_fggc .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_ccde .FontFile =_fggc .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_ccde .FontFile2 =_fggc .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_ccde .FontFile3 =_fggc .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_ccde .CharSet =_fggc .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_ccde .Style =_fggc .Get ("\u0053\u0074\u0079l\u0065");_ccde .Lang =_fggc .Get ("\u004c\u0061\u006e\u0067");
_ccde .FD =_fggc .Get ("\u0046\u0044");_ccde .CIDSet =_fggc .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _ccde .Flags !=nil {if _geda ,_eeage :=_fb .GetIntVal (_ccde .Flags );_eeage {_ccde ._fafbg =_geda ;};};if _ccde .MissingWidth !=nil {if _aegf ,_aaaf :=_fb .GetNumberAsFloat (_ccde .MissingWidth );
_aaaf ==nil {_ccde ._gbgaf =_aegf ;};};if _ccde .FontFile !=nil {_ceggb ,_bfag :=_feadfd (_ccde .FontFile );if _bfag !=nil {return _ccde ,_bfag ;};_gb .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_ceggb );_ccde .fontFile =_ceggb ;
};if _ccde .FontFile2 !=nil {_acgb ,_beaf :=_ba .NewFontFile2FromPdfObject (_ccde .FontFile2 );if _beaf !=nil {return _ccde ,_beaf ;};_gb .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_acgb .String ());_ccde ._egdd =&_acgb ;
};return _ccde ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_addg *PdfAnnotationTrapNet )ToPdfObject ()_fb .PdfObject {_addg .PdfAnnotation .ToPdfObject ();_gfeb :=_addg ._caa ;_bbgde :=_gfeb .PdfObject .(*_fb .PdfObjectDictionary );_bbgde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _gfeb ;};func _cbcc (_aeedf []byte )[]byte {const _dddcd =52845;const _dadbe =22719;_efed :=55665;for _ ,_ccaff :=range _aeedf [:4]{_efed =(int (_ccaff )+_efed )*_dddcd +_dadbe ;};_gaba :=make ([]byte ,len (_aeedf )-4);for _beedg ,_dfga :=range _aeedf [4:]{_gaba [_beedg ]=byte (int (_dfga )^_efed >>8);
_efed =(int (_dfga )+_efed )*_dddcd +_dadbe ;};return _gaba ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_dgeae *PdfWriter )SetDocInfo (info *PdfInfo ){_dgeae .setDocInfo (info .ToPdfObject ())};func (_dggfd *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _dggfd ._bgdf ==nil &&_dggfd .DescendantFont !=nil {return _dggfd .DescendantFont .FontDescriptor ();
};return _dggfd ._bgdf ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_deab *OutlineItem )ToPdfObject ()_fb .PdfObject {_egfdc ,_ :=_deab .ToPdfOutlineItem ();return _egfdc .ToPdfObject ();};func (_dbae *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_bdgde *PdfReader )GetOutlines ()(*Outline ,error ){if _bdgde ==nil {return nil ,_fef .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_fbeb :=_bdgde .GetOutlineTree ();if _fbeb ==nil {return nil ,_fef .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _agbfg func (_fabfdf *PdfOutlineTreeNode ,_afdbb *[]*OutlineItem );_agbfg =func (_bdedf *PdfOutlineTreeNode ,_eeabg *[]*OutlineItem ){if _bdedf ==nil {return ;};if _bdedf ._eafe ==nil {_gb .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _dfagg *OutlineItem ;if _aafg ,_bagcg :=_bdedf ._eafe .(*PdfOutlineItem );_bagcg {_fecfc :=_aafg .Dest ;if (_fecfc ==nil ||_fb .IsNullObject (_fecfc ))&&_aafg .A !=nil {if _aeaed ,_deec :=_fb .GetDict (_aafg .A );_deec {_fecfc ,_ =_fb .GetArray (_aeaed .Get ("\u0044"));
};};var _debf OutlineDest ;if _fecfc !=nil &&!_fb .IsNullObject (_fecfc ){if _cdfe ,_bbgcg :=_afecgd (_fecfc ,_bdgde );_bbgcg ==nil {_debf =*_cdfe ;}else {_gb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_fecfc ,_bbgcg );
};};_dfagg =NewOutlineItem (_aafg .Title .Decoded (),_debf );*_eeabg =append (*_eeabg ,_dfagg );if _aafg .Next !=nil {_agbfg (_aafg .Next ,_eeabg );};};if _bdedf .First !=nil {if _dfagg !=nil {_eeabg =&_dfagg .Entries ;};_agbfg (_bdedf .First ,_eeabg );
};};_fgbbg :=NewOutline ();_agbfg (_fbeb ,&_fgbbg .Entries );return _fgbbg ,nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_fccbc *_fb .PdfIndirectObject ;};

// L returns the value of the L component of the color.
func (_fadf *PdfColorLab )L ()float64 {return _fadf [0]};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_fafec DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_gbf :=NewPdfAnnotation ();_fabb :=&PdfAnnotationPopup {};_fabb .PdfAnnotation =_gbf ;_gbf .SetContext (_fabb );return _fabb ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;
BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _fb .PdfObject ;MK _fb .PdfObject ;A _fb .PdfObject ;AA _fb .PdfObject ;BS _fb .PdfObject ;Parent _fb .PdfObject ;_dea *PdfField ;_be bool ;};func _eagb (_gggac *_fb .PdfObjectDictionary )(*PdfFieldButton ,error ){_ggdf :=&PdfFieldButton {};
_ggdf .Opt ,_ =_fb .GetArray (_gggac .Get ("\u004f\u0070\u0074"));return _ggdf ,nil ;};func _gbda (_gcdb _fb .PdfObject )(*PdfColorspaceLab ,error ){_faaca :=NewPdfColorspaceLab ();if _daecf ,_cfcd :=_gcdb .(*_fb .PdfIndirectObject );_cfcd {_faaca ._dccg =_daecf ;
};_gcdb =_fb .TraceToDirectObject (_gcdb );_eccgd ,_debc :=_gcdb .(*_fb .PdfObjectArray );if !_debc {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eccgd .Len ()!=2{return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_gcdb =_fb .TraceToDirectObject (_eccgd .Get (0));_dgcea ,_debc :=_gcdb .(*_fb .PdfObjectName );if !_debc {return nil ,_f .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_dgcea !="\u004c\u0061\u0062"{return nil ,_f .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_gcdb =_fb .TraceToDirectObject (_eccgd .Get (1));_ebdb ,_debc :=_gcdb .(*_fb .PdfObjectDictionary );
if !_debc {return nil ,_f .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_gcdb =_ebdb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_gcdb =_fb .TraceToDirectObject (_gcdb );_efdb ,_debc :=_gcdb .(*_fb .PdfObjectArray );if !_debc {return nil ,_f .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _efdb .Len ()!=3{return nil ,_f .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_bafd ,_cegeg :=_efdb .GetAsFloat64Slice ();if _cegeg !=nil {return nil ,_cegeg ;};_faaca .WhitePoint =_bafd ;_gcdb =_ebdb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gcdb !=nil {_gcdb =_fb .TraceToDirectObject (_gcdb );
_ggagc ,_fagg :=_gcdb .(*_fb .PdfObjectArray );if !_fagg {return nil ,_f .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _ggagc .Len ()!=3{return nil ,_f .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_bafe ,_fgee :=_ggagc .GetAsFloat64Slice ();if _fgee !=nil {return nil ,_fgee ;};_faaca .BlackPoint =_bafe ;};_gcdb =_ebdb .Get ("\u0052\u0061\u006eg\u0065");if _gcdb !=nil {_gcdb =_fb .TraceToDirectObject (_gcdb );_bcdfe ,_bfbf :=_gcdb .(*_fb .PdfObjectArray );
if !_bfbf {_gb .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_f .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bcdfe .Len ()!=4{_gb .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_f .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_acee ,_dacg :=_bcdfe .GetAsFloat64Slice ();if _dacg !=nil {return nil ,_dacg ;};_faaca .Range =_acee ;};return _faaca ,nil ;};

// Items returns all children outline items.
func (_cacd *OutlineItem )Items ()[]*OutlineItem {return _cacd .Entries };

// ToPdfObject recursively builds the Outline tree PDF object.
func (_dagdf *PdfOutline )ToPdfObject ()_fb .PdfObject {_bddf :=_dagdf ._cbbgd ;_eegcb :=_bddf .PdfObject .(*_fb .PdfObjectDictionary );_eegcb .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _dagdf .First !=nil {_eegcb .Set ("\u0046\u0069\u0072s\u0074",_dagdf .First .ToPdfObject ());
};if _dagdf .Last !=nil {_eegcb .Set ("\u004c\u0061\u0073\u0074",_dagdf .Last .GetContext ().GetContainingPdfObject ());};if _dagdf .Parent !=nil {_eegcb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dagdf .Parent .GetContext ().GetContainingPdfObject ());
};if _dagdf .Count !=nil {_eegcb .Set ("\u0043\u006f\u0075n\u0074",_fb .MakeInteger (*_dagdf .Count ));};return _bddf ;};

// ToInteger convert to an integer format.
func (_ccdg *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_gcac :=_eda .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gcac *_ccdg .R ()),uint32 (_gcac *_ccdg .G ()),uint32 (_gcac *_ccdg .B ())};};func (_cdbg *PdfReader )newPdfAnnotation3DFromDict (_dcbe *_fb .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_cbef :=PdfAnnotation3D {};
_cbef .T3DD =_dcbe .Get ("\u0033\u0044\u0044");_cbef .T3DV =_dcbe .Get ("\u0033\u0044\u0056");_cbef .T3DA =_dcbe .Get ("\u0033\u0044\u0041");_cbef .T3DI =_dcbe .Get ("\u0033\u0044\u0049");_cbef .T3DB =_dcbe .Get ("\u0033\u0044\u0042");return &_cbef ,nil ;
};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _fb .PdfObject ;Movie _fb .PdfObject ;A _fb .PdfObject ;};type pdfFont interface{_ba .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_fb .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_accc *PdfFieldButton )ToPdfObject ()_fb .PdfObject {_accc .PdfField .ToPdfObject ();_fcag :=_accc ._cdcae ;_fcgec :=_fcag .PdfObject .(*_fb .PdfObjectDictionary );_fcgec .Set ("\u0046\u0054",_fb .MakeName ("\u0042\u0074\u006e"));if _accc .Opt !=nil {_fcgec .Set ("\u004f\u0070\u0074",_accc .Opt );
};return _fcag ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_afedc pdfFontType3 )GetCharMetrics (code _gc .CharCode )(_ba .CharMetrics ,bool ){if _aadcd ,_cgeca :=_afedc ._bgbcb [code ];_cgeca {return _ba .CharMetrics {Wx :_aadcd },true ;};if _ba .IsStdFont (_ba .StdFontName (_afedc ._beeg )){return _ba .CharMetrics {Wx :250},true ;
};return _ba .CharMetrics {},false ;};

// ReplacePage replaces the original page to a new page.
func (_geaf *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_fgdg :=pageNum -1;for _efc :=range _geaf ._bdf {if _efc ==_fgdg {_aeefc :=page .Duplicate ();_cbeab (_aeefc );_geaf ._bdf [_efc ]=_aeefc ;};};};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_ecag :=NewPdfAnnotation ();_cfd :=&PdfAnnotationCaret {};_cfd .PdfAnnotation =_ecag ;_cfd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecag .SetContext (_cfd );return _cfd ;};func _bg (_cab _fb .PdfObject )(*PdfFilespec ,error ){if _cab ==nil {return nil ,nil ;
};return NewPdfFilespecFromObj (_cab );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_acabb *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgdc :=vals [0];if _fgdc < 0.0||_fgdc > 1.0{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_aabd :=NewPdfColorCalGray (_fgdc );return _aabd ,nil ;};func _cbeab (_efcc *PdfPage ){_gedgfb :=_ge .GetLicenseKey ();if _gedgfb !=nil &&_gedgfb .IsLicensed (){return ;};_ccacb :=_fb .PdfObjectName ("\u0055\u0046\u0031");if !_efcc .Resources .HasFontByName (_ccacb ){_efcc .Resources .SetFontByName (_ccacb ,DefaultFont ().ToPdfObject ());
};var _bcgeg []string ;_bcgeg =append (_bcgeg ,"\u0071");_bcgeg =append (_bcgeg ,"\u0042\u0054");_bcgeg =append (_bcgeg ,_f .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_ccacb .String ()));_bcgeg =append (_bcgeg ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_bcgeg =append (_bcgeg ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_dedea :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_bcgeg =append (_bcgeg ,_f .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_dedea ));_bcgeg =append (_bcgeg ,"\u0045\u0054");_bcgeg =append (_bcgeg ,"\u0051");_bbggg :=_eg .Join (_bcgeg ,"\u000a");_efcc .AddContentStreamByString (_bbggg );_efcc .ToPdfObject ();
};func _dfgbc ()_a .Time {_cacda .Lock ();defer _cacda .Unlock ();return _faca };type fontFile struct{_bggfe string ;_bdgb string ;_fggcc _gc .SimpleEncoder ;};func (_cbgee *pdfFontType0 )bytesToCharcodes (_gece []byte )([]_gc .CharCode ,bool ){if _cbgee ._bfad ==nil {return nil ,false ;
};_bafae ,_bbbg :=_cbgee ._bfad .BytesToCharcodes (_gece );if !_bbbg {return nil ,false ;};_cfgd :=make ([]_gc .CharCode ,len (_bafae ));for _ggff ,_ccace :=range _bafae {_cfgd [_ggff ]=_gc .CharCode (_ccace );};return _cfgd ,true ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_cgca :=&PdfAppender {_bfcg :reader ._abae ,Reader :reader ,_cded :reader ._cecbb ,_adad :reader ._fgccc };_bega ,_edaac :=_cgca ._bfcg .Seek (0,_ac .SeekEnd );if _edaac !=nil {return nil ,_edaac ;
};_cgca ._cgfb =_bega ;if _ ,_edaac =_cgca ._bfcg .Seek (0,_ac .SeekStart );_edaac !=nil {return nil ,_edaac ;};_cgca ._fcae ,_edaac =NewPdfReader (_cgca ._bfcg );if _edaac !=nil {return nil ,_edaac ;};for _ ,_bbae :=range _cgca .Reader .GetObjectNums (){if _cgca ._dbac < _bbae {_cgca ._dbac =_bbae ;
};};_cgca ._fgac =_cgca ._cded .GetXrefTable ();_cgca ._efaa =_cgca ._cded .GetXrefOffset ();_cgca ._bdf =append (_cgca ._bdf ,_cgca ._fcae .PageList ...);_cgca ._gfeg =make (map[_fb .PdfObject ]struct{});_cgca ._beed =make (map[_fb .PdfObject ]int64 );
_cgca ._gcbg =make (map[_fb .PdfObject ]struct{});_cgca ._fae =_cgca ._fcae .AcroForm ;_cgca ._gdc =_cgca ._fcae .DSS ;return _cgca ,nil ;};

// AllFields returns a flattened list of all fields in the form.
func (_cbga *PdfAcroForm )AllFields ()[]*PdfField {if _cbga ==nil {return nil ;};var _ceea []*PdfField ;if _cbga .Fields !=nil {for _ ,_bbaf :=range *_cbga .Fields {_ceea =append (_ceea ,_fabec (_bbaf )...);};};return _ceea ;};func _egaa (_bbdbd []*_fb .PdfObjectStream )*_fb .PdfObjectArray {if len (_bbdbd )==0{return nil ;
};_eefbf :=make ([]_fb .PdfObject ,0,len (_bbdbd ));for _ ,_gegdg :=range _bbdbd {_eefbf =append (_eefbf ,_gegdg );};return _fb .MakeArray (_eefbf ...);};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_eadfa :=&PdfPageResources {};_eadfa ._aeefa =_fb .MakeDict ();return _eadfa ;};func (_badgg *PdfWriter )optimize ()error {if _badgg ._gbcd ==nil {return nil ;};var _feagf error ;_badgg ._cgdaa ,_feagf =_badgg ._gbcd .Optimize (_badgg ._cgdaa );
if _feagf !=nil {return _feagf ;};_ggddg :=make (map[_fb .PdfObject ]struct{},len (_badgg ._cgdaa ));for _ ,_bdefg :=range _badgg ._cgdaa {_ggddg [_bdefg ]=struct{}{};};_badgg ._bddff =_ggddg ;return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_acfbe *PdfSignature )GetContainingPdfObject ()_fb .PdfObject {return _acfbe ._gcffe };func (_bcca *PdfWriter )hasObject (_aaebg _fb .PdfObject )bool {_ ,_fabdg :=_bcca ._bddff [_aaebg ];return _fabdg ;};

// ToPdfObject implements interface PdfModel.
func (_cgdd *PdfAnnotationPolygon )ToPdfObject ()_fb .PdfObject {_cgdd .PdfAnnotation .ToPdfObject ();_gace :=_cgdd ._caa ;_aefa :=_gace .PdfObject .(*_fb .PdfObjectDictionary );_cgdd .PdfAnnotationMarkup .appendToPdfDictionary (_aefa );_aefa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_aefa .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cgdd .Vertices );_aefa .SetIfNotNil ("\u004c\u0045",_cgdd .LE );_aefa .SetIfNotNil ("\u0042\u0053",_cgdd .BS );_aefa .SetIfNotNil ("\u0049\u0043",_cgdd .IC );_aefa .SetIfNotNil ("\u0042\u0045",_cgdd .BE );
_aefa .SetIfNotNil ("\u0049\u0054",_cgdd .IT );_aefa .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cgdd .Measure );return _gace ;};func (_gffad *PdfWriter )setWriter (_afbf _ac .Writer ){_gffad ._cfcec =_gffad ._aebgd ;_gffad ._fedgb =_e .NewWriter (_afbf );
};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_gbgbb *PdfOutlineTreeNode )GetContext ()PdfModel {if _gcagb ,_bbbea :=_gbgbb ._eafe .(*PdfOutline );_bbbea {return _gcagb ;};if _abebg ,_cddfa :=_gbgbb ._eafe .(*PdfOutlineItem );_cddfa {return _abebg ;};_gb .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_cced :=NewPdfAnnotation ();_agc :=&PdfAnnotationUnderline {};_agc .PdfAnnotation =_cced ;_agc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cced .SetContext (_agc );return _agc ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _fb .PdfObject )(PdfColorspace ,error ){var _fbgf *_fb .PdfIndirectObject ;var _egba *_fb .PdfObjectName ;var _fadb *_fb .PdfObjectArray ;if _edbg ,_gffg :=obj .(*_fb .PdfIndirectObject );_gffg {_fbgf =_edbg ;};obj =_fb .TraceToDirectObject (obj );
switch _fgbdd :=obj .(type ){case *_fb .PdfObjectArray :_fadb =_fgbdd ;case *_fb .PdfObjectName :_egba =_fgbdd ;};if _egba !=nil {switch *_egba {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_gb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_egba );return nil ,_dgbe ;};};if _fadb !=nil &&_fadb .Len ()> 0{var _edabe _fb .PdfObject =_fbgf ;
if _fbgf ==nil {_edabe =_fadb ;};if _acdd ,_bfba :=_fb .GetName (_fadb .Get (0));_bfba {switch _acdd .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _fadb .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _fadb .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fadb .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _acgdb (_edabe );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _ddbbe (_edabe );
case "\u004c\u0061\u0062":return _gbda (_edabe );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _ebcfb (_edabe );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _febgb (_edabe );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _dffc (_edabe );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _abg (_edabe );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _dfdd (_edabe );default:_gb .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_acdd );
};};};_gb .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};func (_gfeff *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _gfeff ._bgdf };

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_fbee *PdfPage )error ;};func (_dacb *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};func _acgba (_fbaa _fb .PdfObject )(*PdfFunctionType2 ,error ){_gcfe :=&PdfFunctionType2 {};
var _acdggf *_fb .PdfObjectDictionary ;if _edcd ,_aface :=_fbaa .(*_fb .PdfIndirectObject );_aface {_adfea ,_ebccg :=_edcd .PdfObject .(*_fb .PdfObjectDictionary );if !_ebccg {return nil ,_fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gcfe ._beff =_edcd ;_acdggf =_adfea ;}else if _gdge ,_beedf :=_fbaa .(*_fb .PdfObjectDictionary );_beedf {_acdggf =_gdge ;}else {return nil ,_fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gb .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_acdggf .String ());
_cgbee ,_aabea :=_fb .TraceToDirectObject (_acdggf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fb .PdfObjectArray );if !_aabea {_gb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fef .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cgbee .Len ()< 0||_cgbee .Len ()%2!=0{_gb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_fef .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_ebae ,_adabf :=_cgbee .ToFloat64Array ();if _adabf !=nil {return nil ,_adabf ;};_gcfe .Domain =_ebae ;_cgbee ,_aabea =_fb .TraceToDirectObject (_acdggf .Get ("\u0052\u0061\u006eg\u0065")).(*_fb .PdfObjectArray );if _aabea {if _cgbee .Len ()< 0||_cgbee .Len ()%2!=0{return nil ,_fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_efedb ,_gfffd :=_cgbee .ToFloat64Array ();if _gfffd !=nil {return nil ,_gfffd ;};_gcfe .Range =_efedb ;};_cgbee ,_aabea =_fb .TraceToDirectObject (_acdggf .Get ("\u0043\u0030")).(*_fb .PdfObjectArray );if _aabea {_dbdf ,_ggccc :=_cgbee .ToFloat64Array ();
if _ggccc !=nil {return nil ,_ggccc ;};_gcfe .C0 =_dbdf ;};_cgbee ,_aabea =_fb .TraceToDirectObject (_acdggf .Get ("\u0043\u0031")).(*_fb .PdfObjectArray );if _aabea {_gfafa ,_bbfa :=_cgbee .ToFloat64Array ();if _bbfa !=nil {return nil ,_bbfa ;};_gcfe .C1 =_gfafa ;
};if len (_gcfe .C0 )!=len (_gcfe .C1 ){_gb .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_fb .ErrRangeError ;};N ,_adabf :=_fb .GetNumberAsFloat (_fb .TraceToDirectObject (_acdggf .Get ("\u004e")));
if _adabf !=nil {_gb .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_acdggf .String ());return nil ,_adabf ;};_gcfe .N =N ;
return _gcfe ,nil ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_bcea *PdfPage )ToPdfObject ()_fb .PdfObject {_dfbdb :=_bcea ._dfbd ;_bcea .GetPageDict ();return _dfbdb ;};func (_bccge *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _begfc []*PdfFieldSignature ;for _ ,_eace :=range _bccge .AllFields (){switch _fddd :=_eace .GetContext ().(type ){case *PdfFieldSignature :_faagc :=_fddd ;
_begfc =append (_begfc ,_faagc );};};return _begfc ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_debee *PdfWriter )SetOptimizer (optimizer Optimizer ){_debee ._gbcd =optimizer };

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _fb .PdfObject ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _fb .PdfObject ;Name _fb .PdfObject ;State _fb .PdfObject ;StateModel _fb .PdfObject ;};

// WriteToFile writes the output PDF to file.
func (_facfg *PdfWriter )WriteToFile (outputFilePath string )error {_edbed ,_agdd :=_ff .Create (outputFilePath );if _agdd !=nil {return _agdd ;};defer _edbed .Close ();return _facfg .Write (_edbed );};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_ccefe *PdfPageResources )SetXObjectByName (keyName _fb .PdfObjectName ,stream *_fb .PdfObjectStream )error {if _ccefe .XObject ==nil {_ccefe .XObject =_fb .MakeDict ();};_dgeeg :=_fb .TraceToDirectObject (_ccefe .XObject );_gedag ,_agef :=_dgeeg .(*_fb .PdfObjectDictionary );
if !_agef {_gb .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_ccefe .XObject ,_dgeeg );return _fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gedag .Set (keyName ,stream );return nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_gccd pdfFontType0 )GetCharMetrics (code _gc .CharCode )(_ba .CharMetrics ,bool ){if _gccd .DescendantFont ==nil {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_gccd );
return _ba .CharMetrics {},false ;};return _gccd .DescendantFont .GetCharMetrics (code );};func (_cfca *PdfReader )buildPageList (_befef *_fb .PdfIndirectObject ,_edgdb *_fb .PdfIndirectObject ,_gfegf map[_fb .PdfObject ]struct{})error {if _befef ==nil {return nil ;
};if _ ,_abfg :=_gfegf [_befef ];_abfg {_gb .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_befef .ObjectNumber );
return nil ;};_gfegf [_befef ]=struct{}{};_ababd ,_eceab :=_befef .PdfObject .(*_fb .PdfObjectDictionary );if !_eceab {return _fef .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_afecd ,_eceab :=(*_ababd ).Get ("\u0054\u0079\u0070\u0065").(*_fb .PdfObjectName );
if !_eceab {if _ababd .Get ("\u004b\u0069\u0064\u0073")==nil {return _fef .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_gb .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_afecd =_fb .MakeName ("\u0050\u0061\u0067e\u0073");_ababd .Set ("\u0054\u0079\u0070\u0065",_afecd );};_gb .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_afecd ,_befef );
if *_afecd =="\u0050\u0061\u0067\u0065"{_fdbcd ,_gcfga :=_cfca .newPdfPageFromDict (_ababd );if _gcfga !=nil {return _gcfga ;};_fdbcd .setContainer (_befef );if _edgdb !=nil {_ababd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_edgdb );};_cfca ._fdbgc =append (_cfca ._fdbgc ,_befef );
_cfca .PageList =append (_cfca .PageList ,_fdbcd );return nil ;};if *_afecd !="\u0050\u0061\u0067e\u0073"{_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_afecd );
return _fef .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _edgdb !=nil {_ababd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_edgdb );};if !_cfca ._fdcaf {_gfbd :=_cfca .traverseObjectData (_befef );if _gfbd !=nil {return _gfbd ;};};_cfga ,_gfdg :=_cfca ._cecbb .Resolve (_ababd .Get ("\u004b\u0069\u0064\u0073"));
if _gfdg !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _gfdg ;};var _dafdc *_fb .PdfObjectArray ;
_dafdc ,_eceab =_cfga .(*_fb .PdfObjectArray );if !_eceab {_aeadb ,_dafag :=_cfga .(*_fb .PdfIndirectObject );if !_dafag {return _fef .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dafdc ,_eceab =_aeadb .PdfObject .(*_fb .PdfObjectArray );
if !_eceab {return _fef .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_gb .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_dafdc );
for _fafgd ,_eebc :=range _dafdc .Elements (){_egdf ,_ffaga :=_fb .GetIndirect (_eebc );if !_ffaga {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_egdf );
return _fef .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dafdc .Set (_fafgd ,_egdf );_gfdg =_cfca .buildPageList (_egdf ,_befef ,_gfegf );if _gfdg !=nil {return _gfdg ;
};};return nil ;};func (_bbadc *PdfReader )newPdfAnnotationStampFromDict (_gfg *_fb .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_ccef :=PdfAnnotationStamp {};_dbca ,_ebe :=_bbadc .newPdfAnnotationMarkupFromDict (_gfg );if _ebe !=nil {return nil ,_ebe ;
};_ccef .PdfAnnotationMarkup =_dbca ;_ccef .Name =_gfg .Get ("\u004e\u0061\u006d\u0065");return &_ccef ,nil ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_abdbc *PdfWriter )GetPdfVersion ()string {return _abdbc .getPdfVersion ()};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_fb .PdfObjectInteger ;BitsPerComponent *_fb .PdfObjectInteger ;BitsPerFlag *_fb .PdfObjectInteger ;Decode *_fb .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_cfb :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_cfb .N =N ;return _cfb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_adc *PdfActionMovie )ToPdfObject ()_fb .PdfObject {_adc .PdfAction .ToPdfObject ();_gd :=_adc ._ege ;_edba :=_gd .PdfObject .(*_fb .PdfObjectDictionary );_edba .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeMovie )));_edba .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_adc .Annotation );
_edba .SetIfNotNil ("\u0054",_adc .T );_edba .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_adc .Operation );return _gd ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_daecc ,_agbd :=_ba .NewStdFontByName (HelveticaName );if !_agbd {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_feff :=_bfca (_daecc );return &PdfFont {_gcfd :&_feff };};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_bdce :=&PdfFilespec {};_bdce ._aabdf =_fb .MakeIndirectObject (_fb .MakeDict ());return _bdce ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_fgdca *PdfPageResources )HasXObjectByName (keyName _fb .PdfObjectName )bool {_ccbbf ,_ :=_fgdca .GetXObjectByName (keyName );return _ccbbf !=nil ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _fb .PdfObject ;Dest _fb .PdfObject ;H _fb .PdfObject ;PA _fb .PdfObject ;QuadPoints _fb .PdfObject ;BS _fb .PdfObject ;_fcf *PdfAction ;_gab *PdfReader ;};

// GetContainingPdfObject implements interface PdfModel.
func (_fcgcf *PdfFilespec )GetContainingPdfObject ()_fb .PdfObject {return _fcgcf ._aabdf };

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_fegcb *PdfPageResourcesColorspaces )Set (key _fb .PdfObjectName ,val PdfColorspace ){if _ ,_ageb :=_fegcb .Colorspaces [string (key )];!_ageb {_fegcb .Names =append (_fegcb .Names ,string (key ));};_fegcb .Colorspaces [string (key )]=val ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_afgac *Image )AlphaMap (mapFunc AlphaMapFunc ){for _ecdde ,_gaced :=range _afgac ._adecb {_afgac ._adecb [_ecdde ]=mapFunc (_gaced );};};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_eabga *PdfFieldButton )IsCheckbox ()bool {return _eabga .GetType ()==ButtonTypeCheckbox };

// SetLocation sets the `Location` field of the signature.
func (_fdcac *PdfSignature )SetLocation (location string ){_fdcac .Location =_fb .MakeString (location )};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_ddggc *XObjectImage )GetContainingPdfObject ()_fb .PdfObject {return _ddggc ._badaab };

// SetPatternByName sets a pattern resource specified by keyName.
func (_gabcc *PdfPageResources )SetPatternByName (keyName _fb .PdfObjectName ,pattern _fb .PdfObject )error {if _gabcc .Pattern ==nil {_gabcc .Pattern =_fb .MakeDict ();};_afbcc ,_geecf :=_gabcc .Pattern .(*_fb .PdfObjectDictionary );if !_geecf {return _fb .ErrTypeError ;
};_afbcc .Set (keyName ,pattern );return nil ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_bcdda *PdfWriter )SetNameDictionary (names _fb .PdfObject )error {if names ==nil {return nil ;};_gb .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_bcdda ._aeab .Set ("\u004e\u0061\u006de\u0073",names );return _bcdda .addObjects (names );};

// GetContentStreams returns the content stream as an array of strings.
func (_ebgcg *PdfPage )GetContentStreams ()([]string ,error ){_ecdf :=_ebgcg .GetContentStreamObjs ();var _dgfce []string ;for _ ,_gdeb :=range _ecdf {_egga ,_ddcba :=_fdde (_gdeb );if _ddcba !=nil {return nil ,_ddcba ;};_dgfce =append (_dgfce ,_egga );
};return _dgfce ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fcccb *PdfSignature )ToPdfObject ()_fb .PdfObject {_fcbcfg :=_fcccb ._gcffe ;var _gbbgc *_fb .PdfObjectDictionary ;if _dbada ,_bcggd :=_fcbcfg .PdfObject .(*pdfSignDictionary );_bcggd {_gbbgc =_dbada .PdfObjectDictionary ;}else {_gbbgc =_fcbcfg .PdfObject .(*_fb .PdfObjectDictionary );
};_gbbgc .SetIfNotNil ("\u0054\u0079\u0070\u0065",_fcccb .Type );_gbbgc .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_fcccb .Filter );_gbbgc .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_fcccb .SubFilter );_gbbgc .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_fcccb .ByteRange );
_gbbgc .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fcccb .Contents );_gbbgc .SetIfNotNil ("\u0043\u0065\u0072\u0074",_fcccb .Cert );_gbbgc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fcccb .Name );_gbbgc .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_fcccb .Reason );
_gbbgc .SetIfNotNil ("\u004d",_fcccb .M );_gbbgc .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_fcccb .Reference );_gbbgc .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_fcccb .Changes );_gbbgc .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_fcccb .ContactInfo );
return _fcbcfg ;};

// ToPdfObject implements interface PdfModel.
func (_fag *PdfActionGoToR )ToPdfObject ()_fb .PdfObject {_fag .PdfAction .ToPdfObject ();_fd :=_fag ._ege ;_cc :=_fd .PdfObject .(*_fb .PdfObjectDictionary );_cc .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeGoToR )));if _fag .F !=nil {_cc .Set ("\u0046",_fag .F .ToPdfObject ());
};_cc .SetIfNotNil ("\u0044",_fag .D );_cc .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_fag .NewWindow );return _fd ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_cacda .Lock ();defer _cacda .Unlock ();_aegge =author };

// Encoder returns the font's text encoder.
func (_ebef pdfFontType0 )Encoder ()_gc .TextEncoder {return _ebef ._bcfef };

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _ac .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _cdag ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _gbdfce (rs ,opts ,true ,_cdag );
};

// Items returns all children outline items.
func (_ebeff *Outline )Items ()[]*OutlineItem {return _ebeff .Entries };func (_cfeg *DSS )generateHashMaps ()error {_fdfe ,_ecbe :=_cfeg .generateHashMap (_cfeg .Certs );if _ecbe !=nil {return _ecbe ;};_ccgb ,_ecbe :=_cfeg .generateHashMap (_cfeg .OCSPs );
if _ecbe !=nil {return _ecbe ;};_cdbbf ,_ecbe :=_cfeg .generateHashMap (_cfeg .CRLs );if _ecbe !=nil {return _ecbe ;};_cfeg ._dbdc =_fdfe ;_cfeg ._dacdg =_ccgb ;_cfeg ._faga =_cdbbf ;return nil ;};func (_ace *PdfReader )newPdfActionSoundFromDict (_adb *_fb .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_adb .Get ("\u0053\u006f\u0075n\u0064"),Volume :_adb .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_adb .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_adb .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_adb .Get ("\u004d\u0069\u0078")},nil ;
};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_abeab *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_fdfae ,_ ,_cffb :=_abeab .CharcodesToUnicodeWithStats (_abeab .BytesToCharcodes (data ));_aaddb :=_gc .ExpandLigatures (_fdfae );return _aaddb ,_aaf .RuneCountInString (_aaddb ),_cffb ;
};func (_dbgf *PdfReader )newPdfAnnotationMovieFromDict (_gbde *_fb .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_gbga :=PdfAnnotationMovie {};_gbga .T =_gbde .Get ("\u0054");_gbga .Movie =_gbde .Get ("\u004d\u006f\u0076i\u0065");_gbga .A =_gbde .Get ("\u0041");
return &_gbga ,nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_fb .PdfObject ,error );};var ImageHandling ImageHandler =DefaultImageHandler {};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_cbbgd *_fb .PdfIndirectObject ;};func (_gfa *PdfReader )newPdfAnnotationPopupFromDict (_beg *_fb .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_gfdc :=PdfAnnotationPopup {};
_gfdc .Parent =_beg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_gfdc .Open =_beg .Get ("\u004f\u0070\u0065\u006e");return &_gfdc ,nil ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _a .Time )(PdfDate ,error ){_fdgea :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_bgacb ,_ :=_deg .ParseInt (_fdgea [1:3],10,32);_acgfd ,_ :=_deg .ParseInt (_fdgea [4:6],10,32);return PdfDate {_eeff :int64 (timeObj .Year ()),_dfcg :int64 (timeObj .Month ()),_gdced :int64 (timeObj .Day ()),_cbbed :int64 (timeObj .Hour ()),_baagb :int64 (timeObj .Minute ()),_efge :int64 (timeObj .Second ()),_eaeec :_fdgea [0],_fgcdd :_bgacb ,_ffcdf :_acgfd },nil ;
};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _fb .PdfObject ;V _fb .PdfObject ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _fb .PdfObject ;B _fb .PdfObject ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_cfbg *Image )GetSamples ()[]uint32 {_bbbda :=_dg .ResampleBytes (_cfbg .Data ,int (_cfbg .BitsPerComponent ));if _cfbg .BitsPerComponent < 8{_bbbda =_cfbg .samplesTrimPadding (_bbbda );};_gceed :=int (_cfbg .Width )*int (_cfbg .Height )*_cfbg .ColorComponents ;
if len (_bbbda )< _gceed {_gb .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_bbbda ),_gceed );
return _bbbda ;}else if len (_bbbda )> _gceed {_gb .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_bbbda ),_gceed );
_bbbda =_bbbda [:_gceed ];};return _bbbda ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_gefff *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_cfab :=_dg .NewReader (img .getBase ());_dgbb :=_egf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_bfdab :=_dg .NewWriter (_dgbb );
_gbecg :=_eda .Pow (2,float64 (img .BitsPerComponent ))-1;_dbad :=make ([]uint32 ,3);var (_egad uint32 ;ANorm ,X ,Y ,Z ,_gdefe ,_bafff ,_dgdg float64 ;_ebeb error ;);for {_egad ,_ebeb =_cfab .ReadSample ();if _ebeb ==_ac .EOF {break ;}else if _ebeb !=nil {return img ,_ebeb ;
};ANorm =float64 (_egad )/_gbecg ;X =_gefff .WhitePoint [0]*_eda .Pow (ANorm ,_gefff .Gamma );Y =_gefff .WhitePoint [1]*_eda .Pow (ANorm ,_gefff .Gamma );Z =_gefff .WhitePoint [2]*_eda .Pow (ANorm ,_gefff .Gamma );_gdefe =3.240479*X +-1.537150*Y +-0.498535*Z ;
_bafff =-0.969256*X +1.875992*Y +0.041556*Z ;_dgdg =0.055648*X +-0.204043*Y +1.057311*Z ;_gdefe =_eda .Min (_eda .Max (_gdefe ,0),1.0);_bafff =_eda .Min (_eda .Max (_bafff ,0),1.0);_dgdg =_eda .Min (_eda .Max (_dgdg ,0),1.0);_dbad [0]=uint32 (_gdefe *_gbecg );
_dbad [1]=uint32 (_bafff *_gbecg );_dbad [2]=uint32 (_dgdg *_gbecg );if _ebeb =_bfdab .WriteSamples (_dbad );_ebeb !=nil {return img ,_ebeb ;};};return _gaaa (&_dgbb ),nil ;};func _fabec (_agfgc *PdfField )[]*PdfField {_fafgg :=[]*PdfField {_agfgc };for _ ,_eeefe :=range _agfgc .Kids {_fafgg =append (_fafgg ,_fabec (_eeefe )...);
};return _fafgg ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_cdcae :_fb .MakeIndirectObject (_fb .MakeDict ())}};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_fb .PdfIndirectObject ;SV *_fb .PdfIndirectObject ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_agbb :=&PdfOutline {_cbbgd :_fb .MakeIndirectObject (_fb .MakeDict ())};_agbb ._eafe =_agbb ;return _agbb ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_cbcce *PdfPageResources )GetFontByName (keyName _fb .PdfObjectName )(_fb .PdfObject ,bool ){if _cbcce .Font ==nil {return nil ,false ;};_bgace ,_eafaf :=_fb .TraceToDirectObject (_cbcce .Font ).(*_fb .PdfObjectDictionary );if !_eafaf {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fb .TraceToDirectObject (_cbcce .Font ));
return nil ,false ;};if _efafe :=_bgace .Get (keyName );_efafe !=nil {return _efafe ,true ;};return nil ,false ;};

// ToPdfObject converts rectangle to a PDF object.
func (_ggebe *PdfRectangle )ToPdfObject ()_fb .PdfObject {return _fb .MakeArray (_fb .MakeFloat (_ggebe .Llx ),_fb .MakeFloat (_ggebe .Lly ),_fb .MakeFloat (_ggebe .Urx ),_fb .MakeFloat (_ggebe .Ury ));};func (_dgdda *pdfFontSimple )addEncoding ()error {var (_cbgf string ;
_aabg map[_gc .CharCode ]_gc .GlyphName ;_ecec _gc .SimpleEncoder ;);if _dgdda .Encoder ()!=nil {_eeddc ,_gadgd :=_dgdda .Encoder ().(_gc .SimpleEncoder );if _gadgd &&_eeddc !=nil {_cbgf =_eeddc .BaseName ();};};if _dgdda .Encoding !=nil {_fbdee ,_fdbfg ,_gdfgd :=_dgdda .getFontEncoding ();
if _gdfgd !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dgdda ._beeg ,_dgdda ._aaab ,_dgdda .Encoding ,_dgdda .Encoding ,_gdfgd );
return _gdfgd ;};if _fbdee !=""{_cbgf =_fbdee ;};_aabg =_fdbfg ;_ecec ,_gdfgd =_gc .NewSimpleTextEncoder (_cbgf ,_aabg );if _gdfgd !=nil {return _gdfgd ;};};if _ecec ==nil {_begea :=_dgdda ._bgdf ;if _begea !=nil {switch _dgdda ._aaab {case "\u0054\u0079\u0070e\u0031":if _begea .fontFile !=nil &&_begea .fontFile ._fggcc !=nil {_gb .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_ecec =_begea .fontFile ._fggcc ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _begea ._egdd !=nil {_gb .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_becf ,_ceaeg :=_begea ._egdd .MakeEncoder ();
if _ceaeg ==nil {_ecec =_becf ;};};};};};if _ecec !=nil {if _aabg !=nil {_gb .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aabg ,_dgdda .baseFields ());_ecec =_gc .ApplyDifferences (_ecec ,_aabg );
};_dgdda .SetEncoder (_ecec );};return nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_eafdd *PdfFunctionType2 )ToPdfObject ()_fb .PdfObject {_cdcd :=_fb .MakeDict ();_cdcd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fb .MakeInteger (2));_cbbdb :=&_fb .PdfObjectArray {};for _ ,_bbfgb :=range _eafdd .Domain {_cbbdb .Append (_fb .MakeFloat (_bbfgb ));
};_cdcd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cbbdb );if _eafdd .Range !=nil {_agac :=&_fb .PdfObjectArray {};for _ ,_dgga :=range _eafdd .Range {_agac .Append (_fb .MakeFloat (_dgga ));};_cdcd .Set ("\u0052\u0061\u006eg\u0065",_agac );};if _eafdd .C0 !=nil {_bcadf :=&_fb .PdfObjectArray {};
for _ ,_dfbbb :=range _eafdd .C0 {_bcadf .Append (_fb .MakeFloat (_dfbbb ));};_cdcd .Set ("\u0043\u0030",_bcadf );};if _eafdd .C1 !=nil {_cgdca :=&_fb .PdfObjectArray {};for _ ,_ddgd :=range _eafdd .C1 {_cgdca .Append (_fb .MakeFloat (_ddgd ));};_cdcd .Set ("\u0043\u0031",_cgdca );
};_cdcd .Set ("\u004e",_fb .MakeFloat (_eafdd .N ));if _eafdd ._beff !=nil {_eafdd ._beff .PdfObject =_cdcd ;return _eafdd ._beff ;};return _cdcd ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_fdcad *PdfFieldText )ToPdfObject ()_fb .PdfObject {_fdcad .PdfField .ToPdfObject ();_bbec :=_fdcad ._cdcae ;_dabe :=_bbec .PdfObject .(*_fb .PdfObjectDictionary );_dabe .Set ("\u0046\u0054",_fb .MakeName ("\u0054\u0078"));if _fdcad .DA !=nil {_dabe .Set ("\u0044\u0041",_fdcad .DA );
};if _fdcad .Q !=nil {_dabe .Set ("\u0051",_fdcad .Q );};if _fdcad .DS !=nil {_dabe .Set ("\u0044\u0053",_fdcad .DS );};if _fdcad .RV !=nil {_dabe .Set ("\u0052\u0056",_fdcad .RV );};if _fdcad .MaxLen !=nil {_dabe .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_fdcad .MaxLen );
};return _bbec ;};

// Write writes out the PDF.
func (_gdggb *PdfWriter )Write (writer _ac .Writer )error {_gb .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_ebaeg :=_gdggb .checkLicense ();if _ebaeg !=nil {return _ebaeg ;};if _ebaeg =_gdggb .writeOutlines ();_ebaeg !=nil {return _ebaeg ;};if _ebaeg =_gdggb .writeAcroFormFields ();
_ebaeg !=nil {return _ebaeg ;};_gdggb .checkPendingObjects ();if _ebaeg =_gdggb .writeOutputIntents ();_ebaeg !=nil {return _ebaeg ;};_gdggb .setCatalogVersion ();_gdggb .copyObjects ();if _ebaeg =_gdggb .optimize ();_ebaeg !=nil {return _ebaeg ;};if _ebaeg =_gdggb .optimizeDocument ();
_ebaeg !=nil {return _ebaeg ;};var _gbaea _fe .Hash ;if _gdggb ._bgfdf {_gbaea =_g .New ();writer =_ac .MultiWriter (_gbaea ,writer );};_gdggb .setWriter (writer );_efbbd :=_gdggb .checkCrossReferenceStream ();_bagcf ,_efbbd :=_gdggb .mapObjectStreams (_efbbd );
_gdggb .adjustXRefAffectedVersion (_efbbd );_gdggb .writeDocumentVersion ();_gdggb .updateObjectNumbers ();_gdggb .writeObjects ();if _ebaeg =_gdggb .writeObjectsInStreams (_bagcf );_ebaeg !=nil {return _ebaeg ;};_ceadb :=_gdggb ._cfcec ;var _dcbde int ;
for _bfgef :=range _gdggb ._gfdd {if _bfgef > _dcbde {_dcbde =_bfgef ;};};if _gdggb ._bgfdf {if _ebaeg =_gdggb .setHashIDs (_gbaea );_ebaeg !=nil {return _ebaeg ;};};if _efbbd {if _ebaeg =_gdggb .writeXRefStreams (_dcbde ,_ceadb );_ebaeg !=nil {return _ebaeg ;
};}else {_gdggb .writeTrailer (_dcbde );};_gdggb .makeOffSetReference (_ceadb );if _ebaeg =_gdggb .flushWriter ();_ebaeg !=nil {return _ebaeg ;};return nil ;};func (_cdgbd *PdfWriter )writeTrailer (_cbgc int ){_cdgbd .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");
for _ceccc :=0;_ceccc <=_cbgc ;{for ;_ceccc <=_cbgc ;_ceccc ++{_cccca ,_ddggf :=_cdgbd ._gfdd [_ceccc ];if _ddggf &&(!_cdgbd ._geefd ||_cdgbd ._geefd &&(_cccca .Type ==1&&_cccca .Offset >=_cdgbd ._fccbf ||_cccca .Type ==0)){break ;};};var _cgaad int ;for _cgaad =_ceccc +1;
_cgaad <=_cbgc ;_cgaad ++{_cfffc ,_ffbdgg :=_cdgbd ._gfdd [_cgaad ];if _ffbdgg &&(!_cdgbd ._geefd ||_cdgbd ._geefd &&(_cfffc .Type ==1&&_cfffc .Offset > _cdgbd ._fccbf )){continue ;};break ;};_dgegg :=_f .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_ceccc ,_cgaad -_ceccc );
_cdgbd .writeString (_dgegg );for _cabee :=_ceccc ;_cabee < _cgaad ;_cabee ++{_dfgbce :=_cdgbd ._gfdd [_cabee ];switch _dfgbce .Type {case 0:_dgegg =_f .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_cdgbd .writeString (_dgegg );case 1:_dgegg =_f .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_dfgbce .Offset ,0);_cdgbd .writeString (_dgegg );};};_ceccc =_cgaad +1;};_cbcgaa :=_fb .MakeDict ();_cbcgaa .Set ("\u0049\u006e\u0066\u006f",_cdgbd ._gbaa );
_cbcgaa .Set ("\u0052\u006f\u006f\u0074",_cdgbd ._aebagd );_cbcgaa .Set ("\u0053\u0069\u007a\u0065",_fb .MakeInteger (int64 (_cbgc +1)));if _cdgbd ._geefd &&_cdgbd ._bcdfd > 0{_cbcgaa .Set ("\u0050\u0072\u0065\u0076",_fb .MakeInteger (_cdgbd ._bcdfd ));
};if _cdgbd ._cbfbc !=nil {_cbcgaa .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cdgbd ._bgdbe );};if _cdgbd ._effd ==nil &&_cdgbd ._cbffe !=""&&_cdgbd ._cfagc !=""{_cdgbd ._effd =_fb .MakeArray (_fb .MakeHexString (_cdgbd ._cbffe ),_fb .MakeHexString (_cdgbd ._cfagc ));
};if _cdgbd ._effd !=nil {_cbcgaa .Set ("\u0049\u0044",_cdgbd ._effd );_gb .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cdgbd ._effd );};_cdgbd .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_cdgbd .writeString (_cbcgaa .WriteString ());
_cdgbd .writeString ("\u000a");};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _fb .PdfObject ;BS _fb .PdfObject ;LE _fb .PdfObject ;IC _fb .PdfObject ;LL _fb .PdfObject ;LLE _fb .PdfObject ;Cap _fb .PdfObject ;IT _fb .PdfObject ;LLO _fb .PdfObject ;CP _fb .PdfObject ;
Measure _fb .PdfObject ;CO _fb .PdfObject ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_dcd :=NewPdfAnnotation ();_agbc :=&PdfAnnotationRichMedia {};_agbc .PdfAnnotation =_dcd ;_dcd .SetContext (_agbc );return _agbc ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_ffbdgc *modelManager )GetPrimitiveFromModel (model PdfModel )_fb .PdfObject {_fdgb ,_ffdde :=_ffbdgc ._bfacf [model ];if !_ffdde {return nil ;};return _fdgb ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_cacda .Lock ();defer _cacda .Unlock ();_ddeac =keywords };

// AddFont adds a font dictionary to the Font resources.
func (_afeff *PdfPage )AddFont (name _fb .PdfObjectName ,font _fb .PdfObject )error {if _afeff .Resources ==nil {_afeff .Resources =NewPdfPageResources ();};if _afeff .Resources .Font ==nil {_afeff .Resources .Font =_fb .MakeDict ();};_gedaf ,_debcg :=_fb .TraceToDirectObject (_afeff .Resources .Font ).(*_fb .PdfObjectDictionary );
if !_debcg {_gb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_fb .TraceToDirectObject (_afeff .Resources .Font ));
return _fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gedaf .Set (name ,font );return nil ;};func _cfefd (_degdb *_fb .PdfObjectArray )(float64 ,error ){_abafdc ,_edggg :=_degdb .ToFloat64Array ();
if _edggg !=nil {_gb .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_degdb ,_edggg );};switch len (_abafdc ){case 1:return _abafdc [0],nil ;
case 3:_agdb :=PdfColorspaceDeviceRGB {};_cebb ,_gddga :=_agdb .ColorFromFloats (_abafdc );if _gddga !=nil {return 0.0,_gddga ;};return _cebb .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_cafg :=PdfColorspaceDeviceCMYK {};_cbabbb ,_bbfed :=_cafg .ColorFromFloats (_abafdc );
if _bbfed !=nil {return 0.0,_bbfed ;};_abefb ,_bbfed :=_cafg .ColorToRGB (_cbabbb .(*PdfColorDeviceCMYK ));if _bbfed !=nil {return 0.0,_bbfed ;};return _abefb .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_edggg =_fef .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_gb .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_degdb ,_edggg );return 0.0,_edggg ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_gcfd pdfFont };

// IsShading specifies if the pattern is a shading pattern.
func (_beada *PdfPattern )IsShading ()bool {return _beada .PatternType ==2};func _abbe (_dfdg *_fb .PdfObjectDictionary ,_baaf *fontCommon )(*pdfCIDFontType0 ,error ){if _baaf ._aaab !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_gb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_baaf );
return nil ,_fb .ErrRangeError ;};_bafdd :=_aabc (_baaf );_ecgg ,_ceecb :=_fb .GetDict (_dfdg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ceecb {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_baaf );
return nil ,ErrRequiredAttributeMissing ;};_bafdd .CIDSystemInfo =_ecgg ;_bafdd .DW =_dfdg .Get ("\u0044\u0057");_bafdd .W =_dfdg .Get ("\u0057");_bafdd .DW2 =_dfdg .Get ("\u0044\u0057\u0032");_bafdd .W2 =_dfdg .Get ("\u0057\u0032");_bafdd ._dgcbg =1000.0;
if _deef ,_gaeef :=_fb .GetNumberAsFloat (_bafdd .DW );_gaeef ==nil {_bafdd ._dgcbg =_deef ;};_bfeg ,_gbdfc :=_beecb (_bafdd .W );if _gbdfc !=nil {return nil ,_gbdfc ;};if _bfeg ==nil {_bfeg =map[_gc .CharCode ]float64 {};};_bafdd ._ceeb =_bfeg ;return _bafdd ,nil ;
};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_fb .PdfObjectInteger ;TilingType *_fb .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_fb .PdfObjectFloat ;YStep *_fb .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_fb .PdfObjectArray ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_fcaf *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_fede *PdfWriter )SetRotation (rotate int64 )error {_baebb ,_acffe :=_fb .GetDict (_fede ._bdefb );if !_acffe {return ErrTypeCheck ;};_baebb .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_fb .MakeInteger (rotate ));return nil ;};

// HasExtGState checks if ExtGState name is available.
func (_bccb *PdfPage )HasExtGState (name _fb .PdfObjectName )bool {if _bccb .Resources ==nil {return false ;};if _bccb .Resources .ExtGState ==nil {return false ;};_ffecf ,_ccfgf :=_fb .TraceToDirectObject (_bccb .Resources .ExtGState ).(*_fb .PdfObjectDictionary );
if !_ccfgf {_gb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_fb .TraceToDirectObject (_bccb .Resources .ExtGState ));
return false ;};_agfca :=_ffecf .Get (name );_dfeaa :=_agfca !=nil ;return _dfeaa ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_cege *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggfc ,_ccdb :=_fb .GetNumbersAsFloat (objects );
if _ccdb !=nil {return nil ,_ccdb ;};return _cege .ColorFromFloats (_ggfc );};

// ToPdfObject converts the font to a PDF representation.
func (_fcgbc *pdfFontType3 )ToPdfObject ()_fb .PdfObject {if _fcgbc ._eggd ==nil {_fcgbc ._eggd =&_fb .PdfIndirectObject {};};_baga :=_fcgbc .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_fcgbc ._eggd .PdfObject =_baga ;if _fcgbc .FirstChar !=nil {_baga .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_fcgbc .FirstChar );
};if _fcgbc .LastChar !=nil {_baga .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_fcgbc .LastChar );};if _fcgbc .Widths !=nil {_baga .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_fcgbc .Widths );};if _fcgbc .Encoding !=nil {_baga .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fcgbc .Encoding );
}else if _fcgbc ._ecfg !=nil {_cgdbf :=_fcgbc ._ecfg .ToPdfObject ();if _cgdbf !=nil {_baga .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cgdbf );};};if _fcgbc .FontBBox !=nil {_baga .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_fcgbc .FontBBox );
};if _fcgbc .FontMatrix !=nil {_baga .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_fcgbc .FontMatrix );};if _fcgbc .CharProcs !=nil {_baga .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_fcgbc .CharProcs );};if _fcgbc .Resources !=nil {_baga .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fcgbc .Resources );
};return _fcgbc ._eggd ;};func (_fgabc PdfFont )actualFont ()pdfFont {if _fgabc ._gcfd ==nil {_gb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fgabc );
};return _fgabc ._gcfd ;};func _faab (_gedg *_fb .PdfObjectDictionary )(*PdfFieldChoice ,error ){_bbcda :=&PdfFieldChoice {};_bbcda .Opt ,_ =_fb .GetArray (_gedg .Get ("\u004f\u0070\u0074"));_bbcda .TI ,_ =_fb .GetInt (_gedg .Get ("\u0054\u0049"));_bbcda .I ,_ =_fb .GetArray (_gedg .Get ("\u0049"));
return _bbcda ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aeef *PdfAnnotationSquare )ToPdfObject ()_fb .PdfObject {_aeef .PdfAnnotation .ToPdfObject ();_gagf :=_aeef ._caa ;_fgeb :=_gagf .PdfObject .(*_fb .PdfObjectDictionary );if _aeef .PdfAnnotationMarkup !=nil {_aeef .PdfAnnotationMarkup .appendToPdfDictionary (_fgeb );
};_fgeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_fgeb .SetIfNotNil ("\u0042\u0053",_aeef .BS );_fgeb .SetIfNotNil ("\u0049\u0043",_aeef .IC );_fgeb .SetIfNotNil ("\u0042\u0045",_aeef .BE );
_fgeb .SetIfNotNil ("\u0052\u0044",_aeef .RD );return _gagf ;};

// SetContext sets the sub action (context).
func (_fab *PdfAction )SetContext (ctx PdfModel ){_fab ._bd =ctx };var _eecb =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// A returns the value of the A component of the color.
func (_fecc *PdfColorLab )A ()float64 {return _fecc [1]};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_acac *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};func _cdad (_gabgc *[]*PdfField ,_fcda FieldFilterFunc ,_bfade bool )[]*PdfField {if _gabgc ==nil {return nil ;};_bbcc :=*_gabgc ;if len (*_gabgc )==0{return nil ;};_bbdde :=_bbcc [:0];
if _fcda ==nil {_fcda =func (*PdfField )bool {return true };};var _gfdcc []*PdfField ;for _ ,_ecddd :=range _bbcc {_egbd :=_fcda (_ecddd );if _egbd {_gfdcc =append (_gfdcc ,_ecddd );if len (_ecddd .Kids )> 0{_gfdcc =append (_gfdcc ,_cdad (&_ecddd .Kids ,_fcda ,_bfade )...);
};};if !_bfade ||!_egbd ||len (_ecddd .Kids )> 0{_bbdde =append (_bbdde ,_ecddd );};};*_gabgc =_bbdde ;return _gfdcc ;};

// ToPdfObject implements interface PdfModel.
func (_fde *PdfActionGoToE )ToPdfObject ()_fb .PdfObject {_fde .PdfAction .ToPdfObject ();_ab :=_fde ._ege ;_aga :=_ab .PdfObject .(*_fb .PdfObjectDictionary );_aga .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeGoToE )));if _fde .F !=nil {_aga .Set ("\u0046",_fde .F .ToPdfObject ());
};_aga .SetIfNotNil ("\u0044",_fde .D );_aga .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_fde .NewWindow );_aga .SetIfNotNil ("\u0054",_fde .T );return _ab ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_aabf *PdfReader )GetNameDictionary ()(_fb .PdfObject ,error ){_ccbcc :=_fb .ResolveReference (_aabf ._aaegf .Get ("\u004e\u0061\u006de\u0073"));if _ccbcc ==nil {return nil ,nil ;};if !_aabf ._fdcaf {_acebb :=_aabf .traverseObjectData (_ccbcc );if _acebb !=nil {return nil ,_acebb ;
};};return _ccbcc ,nil ;};func (_ffbf *PdfReader )newPdfAnnotationTrapNetFromDict (_ebab *_fb .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_abbd :=PdfAnnotationTrapNet {};return &_abbd ,nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_aded PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _aded ._gcfd .getFontDescriptor (),nil ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_feac *PdfAnnotationWidget )Field ()*PdfField {return _feac ._dea };

// ToPdfObject implements interface PdfModel.
func (_fabd *PdfAnnotationWidget )ToPdfObject ()_fb .PdfObject {_fabd .PdfAnnotation .ToPdfObject ();_dge :=_fabd ._caa ;_ggfg :=_dge .PdfObject .(*_fb .PdfObjectDictionary );if _fabd ._be {return _dge ;};_fabd ._be =true ;_ggfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_ggfg .SetIfNotNil ("\u0048",_fabd .H );_ggfg .SetIfNotNil ("\u004d\u004b",_fabd .MK );_ggfg .SetIfNotNil ("\u0041",_fabd .A );_ggfg .SetIfNotNil ("\u0041\u0041",_fabd .AA );_ggfg .SetIfNotNil ("\u0042\u0053",_fabd .BS );_bgac :=_fabd .Parent ;if _fabd ._dea !=nil {if _fabd ._dea ._cdcae ==_fabd ._caa {_fabd ._dea .ToPdfObject ();
};_bgac =_fabd ._dea .GetContainingPdfObject ();};if _bgac !=_dge {_ggfg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bgac );};_fabd ._be =false ;return _dge ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_bcfag *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _bcfag ._ddad ==nil {_bcfag .GetAnnotations ();};_bcfag ._ddad =append (_bcfag ._ddad ,annot );};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_ggcf *VRI )ToPdfObject ()*_fb .PdfObjectDictionary {_dbaf :=_fb .MakeDict ();_dbaf .SetIfNotNil (_fb .PdfObjectName ("\u0043\u0065\u0072\u0074"),_egaa (_ggcf .Cert ));_dbaf .SetIfNotNil (_fb .PdfObjectName ("\u004f\u0043\u0053\u0050"),_egaa (_ggcf .OCSP ));
_dbaf .SetIfNotNil (_fb .PdfObjectName ("\u0043\u0052\u004c"),_egaa (_ggcf .CRL ));_dbaf .SetIfNotNil ("\u0054\u0055",_ggcf .TU );_dbaf .SetIfNotNil ("\u0054\u0053",_ggcf .TS );return _dbaf ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_cddf *_fb .PdfIndirectObject ;};func (_gbcf *PdfReader )buildOutlineTree (_dfad _fb .PdfObject ,_cbca *PdfOutlineTreeNode ,_bbcf *PdfOutlineTreeNode ,_cggga map[_fb .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _cggga ==nil {_cggga =map[_fb .PdfObject ]struct{}{};
};_cggga [_dfad ]=struct{}{};_fdeeb ,_bgfe :=_dfad .(*_fb .PdfIndirectObject );if !_bgfe {return nil ,nil ,_f .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_dfad );
};_bcgfb ,_bgbag :=_fdeeb .PdfObject .(*_fb .PdfObjectDictionary );if !_bgbag {return nil ,nil ,_fef .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gb .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_bcgfb ,_fdeeb ,_fdeeb );
if _gagbg :=_bcgfb .Get ("\u0054\u0069\u0074l\u0065");_gagbg !=nil {_bgec ,_gcagc :=_gbcf .newPdfOutlineItemFromIndirectObject (_fdeeb );if _gcagc !=nil {return nil ,nil ,_gcagc ;};_bgec .Parent =_cbca ;_bgec .Prev =_bbcf ;_ggbaa :=_fb .ResolveReference (_bcgfb .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_gceeg :=_cggga [_ggbaa ];_ggbaa !=nil &&_ggbaa !=_fdeeb &&!_gceeg {if !_fb .IsNullObject (_ggbaa ){_ccefa ,_fffe ,_gabb :=_gbcf .buildOutlineTree (_ggbaa ,&_bgec .PdfOutlineTreeNode ,nil ,_cggga );if _gabb !=nil {_gb .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_gabb );
}else {_bgec .First =_ccefa ;_bgec .Last =_fffe ;};};};_fdedb :=_fb .ResolveReference (_bcgfb .Get ("\u004e\u0065\u0078\u0074"));if _ ,_bgfeg :=_cggga [_fdedb ];_fdedb !=nil &&_fdedb !=_fdeeb &&!_bgfeg {if !_fb .IsNullObject (_fdedb ){_gcfea ,_bface ,_feae :=_gbcf .buildOutlineTree (_fdedb ,_cbca ,&_bgec .PdfOutlineTreeNode ,_cggga );
if _feae !=nil {_gb .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_feae );
}else {_bgec .Next =_gcfea ;return &_bgec .PdfOutlineTreeNode ,_bface ,nil ;};};};return &_bgec .PdfOutlineTreeNode ,&_bgec .PdfOutlineTreeNode ,nil ;};_abbcg ,_dcebc :=_cfdg (_fdeeb );if _dcebc !=nil {return nil ,nil ,_dcebc ;};_abbcg .Parent =_cbca ;
if _afecgb :=_bcgfb .Get ("\u0046\u0069\u0072s\u0074");_afecgb !=nil {_afecgb =_fb .ResolveReference (_afecgb );if _ ,_bebfa :=_cggga [_afecgb ];_afecgb !=nil &&_afecgb !=_fdeeb &&!_bebfa {_feag :=_fb .TraceToDirectObject (_afecgb );if _ ,_gbfca :=_feag .(*_fb .PdfObjectNull );
!_gbfca &&_feag !=nil {_abbac ,_fbbb ,_fdfdf :=_gbcf .buildOutlineTree (_afecgb ,&_abbcg .PdfOutlineTreeNode ,nil ,_cggga );if _fdfdf !=nil {_gb .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_fdfdf );
}else {_abbcg .First =_abbac ;_abbcg .Last =_fbbb ;};};};};return &_abbcg .PdfOutlineTreeNode ,&_abbcg .PdfOutlineTreeNode ,nil ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_dccg *_fb .PdfIndirectObject ;};func _eefgd (_gegb _fb .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_dcec :=&PdfColorspaceDeviceNAttributes {};var _adgf *_fb .PdfObjectDictionary ;
switch _edad :=_gegb .(type ){case *_fb .PdfIndirectObject :_dcec ._dgad =_edad ;var _eead bool ;_adgf ,_eead =_edad .PdfObject .(*_fb .PdfObjectDictionary );if !_eead {_gb .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_fef .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_fb .PdfObjectDictionary :_adgf =_edad ;case *_fb .PdfObjectReference :_cdaf :=_edad .Resolve ();return _eefgd (_cdaf );default:_gb .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_fef .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gbgd :=_adgf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_gbgd !=nil {_ccea ,_efbd :=_fb .TraceToDirectObject (_gbgd ).(*_fb .PdfObjectName );if !_efbd {_gb .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_fef .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_dcec .Subtype =_ccea ;};if _faee :=_adgf .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_faee !=nil {_dcec .Colorants =_faee ;};if _cgee :=_adgf .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_cgee !=nil {_dcec .Process =_cgee ;};if _eabf :=_adgf .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_eabf !=nil {_dcec .MixingHints =_eabf ;};return _dcec ,nil ;};func (_bfbddf *PdfReader )loadDSS ()(*DSS ,error ){if _bfbddf ._cecbb .GetCrypter ()!=nil &&!_bfbddf ._cecbb .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_adbgf :=_bfbddf ._aaegf .Get ("\u0044\u0053\u0053");if _adbgf ==nil {return nil ,nil ;};_abcdd ,_ :=_fb .GetIndirect (_adbgf );_adbgf =_fb .TraceToDirectObject (_adbgf );switch _cfddd :=_adbgf .(type ){case *_fb .PdfObjectNull :return nil ,nil ;case *_fb .PdfObjectDictionary :return _eegc (_abcdd ,_cfddd );
};return nil ,_f .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_adbgf );};func (_cada *pdfFontSimple )updateStandard14Font (){_eage ,_dgec :=_cada .Encoder ().(_gc .SimpleEncoder );if !_dgec {_gb .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_cada .Encoder (),_cada );
return ;};_bcdee :=_eage .Charcodes ();_cada ._bdac =make (map[_gc .CharCode ]float64 ,len (_bcdee ));for _ ,_afbbf :=range _bcdee {_fdffg ,_ :=_eage .CharcodeToRune (_afbbf );_faaeg ,_ :=_cada ._caga .Read (_fdffg );_cada ._bdac [_afbbf ]=_faaeg .Wx ;
};};

// ToPdfObject implements interface PdfModel.
func (_dgee *PdfAnnotationWatermark )ToPdfObject ()_fb .PdfObject {_dgee .PdfAnnotation .ToPdfObject ();_fbbc :=_dgee ._caa ;_ccce :=_fbbc .PdfObject .(*_fb .PdfObjectDictionary );_ccce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_ccce .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_dgee .FixedPrint );return _fbbc ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_faggd :=&XObjectImage {};_gddba :=&_fb .PdfObjectStream {};_gddba .PdfObjectDictionary =_fb .MakeDict ();_faggd ._badaab =_gddba ;return _faggd ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_fgfb *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_ddegda :=NewPdfOutlineItem ();_ddegda .Title =_fb .MakeEncodedString (_fgfb .Title ,true );_ddegda .Dest =_fgfb .Dest .ToPdfObject ();var _decc []*PdfOutlineItem ;var _aaec int64 ;
var _acacd *PdfOutlineItem ;for _ ,_acfag :=range _fgfb .Entries {_fgebb ,_gdffg :=_acfag .ToPdfOutlineItem ();_fgebb .Parent =&_ddegda .PdfOutlineTreeNode ;if _acacd !=nil {_acacd .Next =&_fgebb .PdfOutlineTreeNode ;_fgebb .Prev =&_acacd .PdfOutlineTreeNode ;
};_decc =append (_decc ,_fgebb );_aaec +=_gdffg ;_acacd =_fgebb ;};_bbgc :=len (_decc );_aaec +=int64 (_bbgc );if _bbgc > 0{_ddegda .First =&_decc [0].PdfOutlineTreeNode ;_ddegda .Last =&_decc [_bbgc -1].PdfOutlineTreeNode ;_ddegda .Count =&_aaec ;};return _ddegda ,_aaec ;
};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_dfag *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_cfag :=_dg .NewReader (img .getBase ());_ccdgd :=_egf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._adecb ,img ._cdgb );
_fgcc :=_dg .NewWriter (_ccdgd );_feadf :=_eda .Pow (2,float64 (img .BitsPerComponent ))-1;_adcab :=_dfag .GetNumComponents ();_egabb :=make ([]uint32 ,_adcab );_gfaf :=make ([]float64 ,_adcab );for {_cdfb :=_cfag .ReadSamples (_egabb );if _cdfb ==_ac .EOF {break ;
}else if _cdfb !=nil {return img ,_cdfb ;};for _gaeb :=0;_gaeb < _adcab ;_gaeb ++{_gcdf :=float64 (_egabb [_gaeb ])/_feadf ;_gfaf [_gaeb ]=_gcdf ;};_cdffb ,_cdfb :=_dfag .TintTransform .Evaluate (_gfaf );if _cdfb !=nil {return img ,_cdfb ;};for _ ,_gbdf :=range _cdffb {_gbdf =_eda .Min (_eda .Max (0,_gbdf ),1.0);
if _cdfb =_fgcc .WriteSample (uint32 (_gbdf *_feadf ));_cdfb !=nil {return img ,_cdfb ;};};};return _dfag .AlternateSpace .ImageToRGB (_gaaa (&_ccdgd ));};func (_bbad *PdfReader )newPdfActionHideFromDict (_dgg *_fb .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_dgg .Get ("\u0054"),H :_dgg .Get ("\u0048")},nil ;
};

// ToPdfObject returns the PDF representation of the function.
func (_acdce *PdfFunctionType0 )ToPdfObject ()_fb .PdfObject {if _acdce ._bdbge ==nil {_acdce ._bdbge =&_fb .PdfObjectStream {};};_gadcd :=_fb .MakeDict ();_gadcd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fb .MakeInteger (0));
_abdbe :=&_fb .PdfObjectArray {};for _ ,_gbgg :=range _acdce .Domain {_abdbe .Append (_fb .MakeFloat (_gbgg ));};_gadcd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_abdbe );_ddfde :=&_fb .PdfObjectArray {};for _ ,_bcbf :=range _acdce .Range {_ddfde .Append (_fb .MakeFloat (_bcbf ));
};_gadcd .Set ("\u0052\u0061\u006eg\u0065",_ddfde );_bdcb :=&_fb .PdfObjectArray {};for _ ,_fdggg :=range _acdce .Size {_bdcb .Append (_fb .MakeInteger (int64 (_fdggg )));};_gadcd .Set ("\u0053\u0069\u007a\u0065",_bdcb );_gadcd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_fb .MakeInteger (int64 (_acdce .BitsPerSample )));
if _acdce .Order !=1{_gadcd .Set ("\u004f\u0072\u0064e\u0072",_fb .MakeInteger (int64 (_acdce .Order )));};_gadcd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fb .MakeInteger (int64 (len (_acdce ._dbedd ))));_acdce ._bdbge .Stream =_acdce ._dbedd ;_acdce ._bdbge .PdfObjectDictionary =_gadcd ;
return _acdce ._bdbge ;};func (_begee *PdfWriter )addObject (_cbdda _fb .PdfObject )bool {_gbeab :=_begee .hasObject (_cbdda );if !_gbeab {_efdcc :=_fb .ResolveReferencesDeep (_cbdda ,_begee ._decb );if _efdcc !=nil {_gb .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_efdcc );
};_begee ._cgdaa =append (_begee ._cgdaa ,_cbdda );_begee ._bddff [_cbdda ]=struct{}{};return true ;};return false ;};func (_egfce *PdfFunctionType0 )processSamples ()error {_ddbc :=_dg .ResampleBytes (_egfce ._dbedd ,_egfce .BitsPerSample );_egfce ._baaa =_ddbc ;
return nil ;};func _fbcecb (_dedc _fb .PdfObject )[]*_fb .PdfObjectStream {if _dedc ==nil {return nil ;};_cgda ,_daeg :=_fb .GetArray (_dedc );if !_daeg ||_cgda .Len ()==0{return nil ;};_gcgga :=make ([]*_fb .PdfObjectStream ,0,_cgda .Len ());for _ ,_fddcd :=range _cgda .Elements (){if _gecdb ,_dbgbb :=_fb .GetStream (_fddcd );
_dbgbb {_gcgga =append (_gcgga ,_gecdb );};};return _gcgga ;};func (_dbag *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};func _bbbc ()_a .Time {_cacda .Lock ();defer _cacda .Unlock ();return _cedfc };

// ToPdfObject implements interface PdfModel.
func (_fadd *PdfAnnotation3D )ToPdfObject ()_fb .PdfObject {_fadd .PdfAnnotation .ToPdfObject ();_adaa :=_fadd ._caa ;_gbbg :=_adaa .PdfObject .(*_fb .PdfObjectDictionary );_gbbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0033\u0044"));
_gbbg .SetIfNotNil ("\u0033\u0044\u0044",_fadd .T3DD );_gbbg .SetIfNotNil ("\u0033\u0044\u0056",_fadd .T3DV );_gbbg .SetIfNotNil ("\u0033\u0044\u0041",_fadd .T3DA );_gbbg .SetIfNotNil ("\u0033\u0044\u0049",_fadd .T3DI );_gbbg .SetIfNotNil ("\u0033\u0044\u0042",_fadd .T3DB );
return _adaa ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_daeeg *PdfShading )GetContext ()PdfModel {return _daeeg ._bgcg };func (_fagab *PdfWriter )optimizeDocument ()error {if _fagab ._bbgdc ==nil {return nil ;};_bgeaf ,_bfbeg :=_fb .GetDict (_fagab ._gbaa );if !_bfbeg {return _fef .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_aaeaa :=_da .Document {ID :[2]string {_fagab ._cbffe ,_fagab ._cfagc },Version :_fagab ._effda ,Objects :_fagab ._cgdaa ,Info :_bgeaf ,Crypt :_fagab ._cbfbc ,UseHashBasedID :_fagab ._bgfdf };if _fdfdge :=_fagab ._bbgdc .Optimize (&_aaeaa );_fdfdge !=nil {return _fdfdge ;
};_fagab ._cbffe ,_fagab ._cfagc =_aaeaa .ID [0],_aaeaa .ID [1];_fagab ._effda =_aaeaa .Version ;_fagab ._cgdaa =_aaeaa .Objects ;_fagab ._gbaa .PdfObject =_aaeaa .Info ;_fagab ._bgfdf =_aaeaa .UseHashBasedID ;_fagab ._cbfbc =_aaeaa .Crypt ;_gdefg :=make (map[_fb .PdfObject ]struct{},len (_fagab ._cgdaa ));
for _ ,_afbdg :=range _fagab ._cgdaa {_gdefg [_afbdg ]=struct{}{};};_fagab ._bddff =_gdefg ;return nil ;};type pdfFontSimple struct{fontCommon ;_afdd *_fb .PdfIndirectObject ;_bdac map[_gc .CharCode ]float64 ;_fabfd _gc .TextEncoder ;_cegf _gc .TextEncoder ;
_aeaaf *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _fb .PdfObject ;LastChar _fb .PdfObject ;Widths _fb .PdfObject ;Encoding _fb .PdfObject ;_caga *_ba .RuneCharSafeMap ;};

// String returns a human readable description of `fontfile`.
func (_eafda *fontFile )String ()string {_egabef :="\u005b\u004e\u006f\u006e\u0065\u005d";if _eafda ._fggcc !=nil {_egabef =_eafda ._fggcc .String ();};return _f .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_eafda ._bggfe ,_egabef );
};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_gc .SimpleEncoder ,error ){_eddb ,_ddab :=_ddcb (basefont );if _ddab !=nil {return nil ,nil ,_ddab ;};_gcbc ,_dbeee :=_eddb .Encoder ().(_gc .SimpleEncoder );
if !_dbeee {return nil ,nil ,_f .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_eddb .Encoder ());
};_fbbf :=make (map[rune ]_gc .GlyphName );for _dgae :=range alphabet {if _ ,_ecfba :=_gcbc .RuneToCharcode (_dgae );!_ecfba {_ ,_cgdda :=_eddb ._caga .Read (_dgae );if !_cgdda {_gb .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_dgae ,_dgae );
continue ;};_ddfe ,_cgdda :=_gc .RuneToGlyph (_dgae );if !_cgdda {_gb .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_dgae ,_dgae );continue ;};if len (_fbbf )>=255{return nil ,nil ,_fef .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_fbbf [_dgae ]=_ddfe ;};};var (_bffg []_gc .CharCode ;_ecaf []_gc .CharCode ;);for _eefbd :=_gc .CharCode (1);_eefbd <=0xff;_eefbd ++{_egbg ,_dgacb :=_gcbc .CharcodeToRune (_eefbd );if !_dgacb {_bffg =append (_bffg ,_eefbd );continue ;};if _ ,_dgacb =alphabet [_egbg ];
!_dgacb {_ecaf =append (_ecaf ,_eefbd );};};_bfdedd :=append (_bffg ,_ecaf ...);if len (_bfdedd )< len (_fbbf ){return nil ,nil ,_f .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_fbbf ),len (_bfdedd ));
};_dcagc :=make ([]rune ,0,len (_fbbf ));for _bgce :=range _fbbf {_dcagc =append (_dcagc ,_bgce );};_cd .Slice (_dcagc ,func (_gbdb ,_bcddf int )bool {return _dcagc [_gbdb ]< _dcagc [_bcddf ]});_fgddd :=make (map[_gc .CharCode ]_gc .GlyphName ,len (_dcagc ));
for _ ,_ebgd :=range _dcagc {_daaf :=_bfdedd [0];_bfdedd =_bfdedd [1:];_fgddd [_daaf ]=_fbbf [_ebgd ];};_gcbc =_gc .ApplyDifferences (_gcbc ,_fgddd );_eddb .SetEncoder (_gcbc );return &PdfFont {_gcfd :&_eddb },_gcbc ,nil ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_aeb :=NewPdfAction ();_gea :=&PdfActionImportData {};_gea .PdfAction =_aeb ;_aeb .SetContext (_gea );return _gea ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_ddb *PdfAnnotation )GetContext ()PdfModel {if _ddb ==nil {return nil ;};return _ddb ._bfda ;};func _bcbgaa (_cffe *_fb .PdfObjectStream )(*PdfFunctionType0 ,error ){_dgabd :=&PdfFunctionType0 {};_dgabd ._bdbge =_cffe ;_cebgf :=_cffe .PdfObjectDictionary ;
_fedgda ,_adbde :=_fb .TraceToDirectObject (_cebgf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fb .PdfObjectArray );if !_adbde {_gb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fef .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _fedgda .Len ()< 0||_fedgda .Len ()%2!=0{_gb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fef .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_dgabd .NumInputs =_fedgda .Len ()/2;_ebbfg ,_gbdgb :=_fedgda .ToFloat64Array ();if _gbdgb !=nil {return nil ,_gbdgb ;};_dgabd .Domain =_ebbfg ;_fedgda ,_adbde =_fb .TraceToDirectObject (_cebgf .Get ("\u0052\u0061\u006eg\u0065")).(*_fb .PdfObjectArray );
if !_adbde {_gb .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_fef .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _fedgda .Len ()< 0||_fedgda .Len ()%2!=0{return nil ,_fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dgabd .NumOutputs =_fedgda .Len ()/2;_ffac ,_gbdgb :=_fedgda .ToFloat64Array ();if _gbdgb !=nil {return nil ,_gbdgb ;
};_dgabd .Range =_ffac ;_fedgda ,_adbde =_fb .TraceToDirectObject (_cebgf .Get ("\u0053\u0069\u007a\u0065")).(*_fb .PdfObjectArray );if !_adbde {_gb .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_fef .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cbee ,_gbdgb :=_fedgda .ToIntegerArray ();
if _gbdgb !=nil {return nil ,_gbdgb ;};if len (_cbee )!=_dgabd .NumInputs {_gb .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgabd .Size =_cbee ;_cdge ,_adbde :=_fb .TraceToDirectObject (_cebgf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_fb .PdfObjectInteger );
if !_adbde {_gb .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_fef .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_cdge !=1&&*_cdge !=2&&*_cdge !=4&&*_cdge !=8&&*_cdge !=12&&*_cdge !=16&&*_cdge !=24&&*_cdge !=32{_gb .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_cdge );
return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgabd .BitsPerSample =int (*_cdge );_dgabd .Order =1;_bcgc ,_adbde :=_fb .TraceToDirectObject (_cebgf .Get ("\u004f\u0072\u0064e\u0072")).(*_fb .PdfObjectInteger );
if _adbde {if *_bcgc !=1&&*_bcgc !=3{_gb .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_bcgc );return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgabd .Order =int (*_bcgc );
};_fedgda ,_adbde =_fb .TraceToDirectObject (_cebgf .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_fb .PdfObjectArray );if _adbde {_fgebf ,_ggdbe :=_fedgda .ToFloat64Array ();if _ggdbe !=nil {return nil ,_ggdbe ;};_dgabd .Encode =_fgebf ;};_fedgda ,_adbde =_fb .TraceToDirectObject (_cebgf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_fb .PdfObjectArray );
if _adbde {_fbbfe ,_dcfg :=_fedgda .ToFloat64Array ();if _dcfg !=nil {return nil ,_dcfg ;};_dgabd .Decode =_fbbfe ;};_gcefe ,_gbdgb :=_fb .DecodeStream (_cffe );if _gbdgb !=nil {return nil ,_gbdgb ;};_dgabd ._dbedd =_gcefe ;return _dgabd ,nil ;};

// String returns a string representation of what flags are set.
func (_agfc FieldFlag )String ()string {_egda :="";if _agfc ==FieldFlagClear {_egda ="\u0043\u006c\u0065a\u0072";return _egda ;};if _agfc &FieldFlagReadOnly > 0{_egda +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _agfc &FieldFlagRequired > 0{_egda +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _agfc &FieldFlagNoExport > 0{_egda +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _agfc &FieldFlagNoToggleToOff > 0{_egda +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _agfc &FieldFlagRadio > 0{_egda +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _agfc &FieldFlagPushbutton > 0{_egda +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _agfc &FieldFlagRadiosInUnision > 0{_egda +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _agfc &FieldFlagMultiline > 0{_egda +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _agfc &FieldFlagPassword > 0{_egda +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _agfc &FieldFlagFileSelect > 0{_egda +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _agfc &FieldFlagDoNotScroll > 0{_egda +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _agfc &FieldFlagComb > 0{_egda +="\u007c\u0043\u006fm\u0062";};if _agfc &FieldFlagRichText > 0{_egda +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _agfc &FieldFlagDoNotSpellCheck > 0{_egda +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _agfc &FieldFlagCombo > 0{_egda +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _agfc &FieldFlagEdit > 0{_egda +="\u007c\u0045\u0064i\u0074";};if _agfc &FieldFlagSort > 0{_egda +="\u007c\u0053\u006fr\u0074";};if _agfc &FieldFlagMultiSelect > 0{_egda +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _agfc &FieldFlagCommitOnSelChange > 0{_egda +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _eg .Trim (_egda ,"\u007c");};

// GetAscent returns the Ascent of the font `descriptor`.
func (_ffge *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _fb .GetNumberAsFloat (_ffge .Ascent );};

// ToPdfObject converts date to a PDF string object.
func (_eebba *PdfDate )ToPdfObject ()_fb .PdfObject {_bagcb :=_f .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_eebba ._eeff ,_eebba ._dfcg ,_eebba ._gdced ,_eebba ._cbbed ,_eebba ._baagb ,_eebba ._efge ,_eebba ._eaeec ,_eebba ._fgcdd ,_eebba ._ffcdf );
return _fb .MakeString (_bagcb );};

// SetAlpha sets the alpha layer for the image.
func (_fdcada *Image )SetAlpha (alpha []byte ){_fdcada ._adecb =alpha };

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _fb .PdfObject ;Popup *PdfAnnotationPopup ;CA _fb .PdfObject ;RC _fb .PdfObject ;CreationDate _fb .PdfObject ;IRT _fb .PdfObject ;Subj _fb .PdfObject ;RT _fb .PdfObject ;IT _fb .PdfObject ;ExData _fb .PdfObject ;};func _fbed (_cbede *_fb .PdfObjectStream )(*PdfFunctionType4 ,error ){_edcb :=&PdfFunctionType4 {};
_edcb ._dade =_cbede ;_egddg :=_cbede .PdfObjectDictionary ;_fbcec ,_bebbb :=_fb .TraceToDirectObject (_egddg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fb .PdfObjectArray );if !_bebbb {_gb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fef .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fbcec .Len ()%2!=0{_gb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_fef .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gdfc ,_cabe :=_fbcec .ToFloat64Array ();if _cabe !=nil {return nil ,_cabe ;};_edcb .Domain =_gdfc ;_fbcec ,_bebbb =_fb .TraceToDirectObject (_egddg .Get ("\u0052\u0061\u006eg\u0065")).(*_fb .PdfObjectArray );
if _bebbb {if _fbcec .Len ()< 0||_fbcec .Len ()%2!=0{return nil ,_fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ceggd ,_ggbab :=_fbcec .ToFloat64Array ();if _ggbab !=nil {return nil ,_ggbab ;};_edcb .Range =_ceggd ;
};_gabe ,_cabe :=_fb .DecodeStream (_cbede );if _cabe !=nil {return nil ,_cabe ;};_edcb ._egegf =_gabe ;_dbffa :=_faf .NewPSParser (_gabe );_cageb ,_cabe :=_dbffa .Parse ();if _cabe !=nil {return nil ,_cabe ;};_edcb .Program =_cageb ;return _edcb ,nil ;
};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_cffa *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_babc :=vals [0];if _babc < 0.0||_babc > 1.0{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_baef :=vals [1];if _baef < 0.0||_baef > 1.0{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbce :=vals [2];if _bbce < 0.0||_bbce > 1.0{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_fgba :=vals [3];if _fgba < 0.0||_fgba > 1.0{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abeg :=NewPdfColorDeviceCMYK (_babc ,_baef ,_bbce ,_fgba );return _abeg ,nil ;};func (_fbafb *PdfReader )resolveReference (_abfga *_fb .PdfObjectReference )(_fb .PdfObject ,bool ,error ){_facf ,_afbba :=_fbafb ._cecbb .ObjCache [int (_abfga .ObjectNumber )];
if !_afbba {_gb .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_abfga );_gddee ,_aegb :=_fbafb ._cecbb .LookupByReference (*_abfga );if _aegb !=nil {return nil ,false ,_aegb ;};_fbafb ._cecbb .ObjCache [int (_abfga .ObjectNumber )]=_gddee ;
return _gddee ,false ,nil ;};return _facf ,true ,nil ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_bcce *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_geddd :=RC4_128bit ;if options !=nil {_geddd =options .Algorithm ;};_cccbg :=_bcf .PermOwner ;if options !=nil {_cccbg =options .Permissions ;};var _ffdffc _bb .Filter ;
switch _geddd {case RC4_128bit :_ffdffc =_bb .NewFilterV2 (16);case AES_128bit :_ffdffc =_bb .NewFilterAESV2 ();case AES_256bit :_ffdffc =_bb .NewFilterAESV3 ();default:return _f .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_fgedc ,_eeefa ,_ceeae :=_fb .PdfCryptNewEncrypt (_ffdffc ,userPass ,ownerPass ,_cccbg );if _ceeae !=nil {return _ceeae ;};_bcce ._cbfbc =_fgedc ;if _eeefa .Major !=0{_bcce .SetVersion (_eeefa .Major ,_eeefa .Minor );};_bcce ._edabc =_eeefa .Encrypt ;
_bcce ._cbffe ,_bcce ._cfagc =_eeefa .ID0 ,_eeefa .ID1 ;_ccedb :=_fb .MakeIndirectObject (_eeefa .Encrypt );_bcce ._bgdbe =_ccedb ;_bcce .addObject (_ccedb );return nil ;};

// B returns the value of the blue component of the color.
func (_afcd *PdfColorDeviceRGB )B ()float64 {return _afcd [2]};func (_bcge *PdfReader )newPdfAnnotationInkFromDict (_cdbb *_fb .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_ccfg :=PdfAnnotationInk {};_geba ,_gbec :=_bcge .newPdfAnnotationMarkupFromDict (_cdbb );
if _gbec !=nil {return nil ,_gbec ;};_ccfg .PdfAnnotationMarkup =_geba ;_ccfg .InkList =_cdbb .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_ccfg .BS =_cdbb .Get ("\u0042\u0053");return &_ccfg ,nil ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_dacfgc *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _dacfgc ._cfdcd .(*PdfShadingPattern );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_dbed *PdfColorspaceLab )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbfg ,_fedb :=_fb .GetNumbersAsFloat (objects );
if _fedb !=nil {return nil ,_fedb ;};return _dbed .ColorFromFloats (_gbfg );};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_caed :=NewPdfAnnotation ();_gda :=&PdfAnnotationHighlight {};_gda .PdfAnnotation =_caed ;_gda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_caed .SetContext (_gda );return _gda ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_efeea *PdfPage )GetPageDict ()*_fb .PdfObjectDictionary {_dacfg :=_efeea ._fadc ;_dacfg .Clear ();_dacfg .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0050\u0061\u0067\u0065"));_dacfg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_efeea .Parent );
if _efeea .LastModified !=nil {_dacfg .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_efeea .LastModified .ToPdfObject ());};if _efeea .Resources !=nil {_dacfg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_efeea .Resources .ToPdfObject ());
};if _efeea .CropBox !=nil {_dacfg .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_efeea .CropBox .ToPdfObject ());};if _efeea .MediaBox !=nil {_dacfg .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_efeea .MediaBox .ToPdfObject ());};if _efeea .BleedBox !=nil {_dacfg .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_efeea .BleedBox .ToPdfObject ());
};if _efeea .TrimBox !=nil {_dacfg .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_efeea .TrimBox .ToPdfObject ());};if _efeea .ArtBox !=nil {_dacfg .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_efeea .ArtBox .ToPdfObject ());};_dacfg .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_efeea .BoxColorInfo );
_dacfg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_efeea .Contents );if _efeea .Rotate !=nil {_dacfg .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_fb .MakeInteger (*_efeea .Rotate ));};_dacfg .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_efeea .Group );
_dacfg .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_efeea .Thumb );_dacfg .SetIfNotNil ("\u0042",_efeea .B );_dacfg .SetIfNotNil ("\u0044\u0075\u0072",_efeea .Dur );_dacfg .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_efeea .Trans );_dacfg .SetIfNotNil ("\u0041\u0041",_efeea .AA );
_dacfg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_efeea .Metadata );_dacfg .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_efeea .PieceInfo );_dacfg .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_efeea .StructParents );
_dacfg .SetIfNotNil ("\u0049\u0044",_efeea .ID );_dacfg .SetIfNotNil ("\u0050\u005a",_efeea .PZ );_dacfg .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_efeea .SeparationInfo );_dacfg .SetIfNotNil ("\u0054\u0061\u0062\u0073",_efeea .Tabs );
_dacfg .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_efeea .TemplateInstantiated );_dacfg .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_efeea .PresSteps );_dacfg .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_efeea .UserUnit );
_dacfg .SetIfNotNil ("\u0056\u0050",_efeea .VP );if _efeea ._ddad !=nil {_cbdd :=_fb .MakeArray ();for _ ,_adcbf :=range _efeea ._ddad {if _egca :=_adcbf .GetContext ();_egca !=nil {_cbdd .Append (_egca .ToPdfObject ());}else {_cbdd .Append (_adcbf .ToPdfObject ());
};};if _cbdd .Len ()> 0{_dacfg .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_cbdd );};}else if _efeea .Annots !=nil {_dacfg .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_efeea .Annots );};return _dacfg ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_febgd *_fb .PdfObjectDictionary ;};

// Add appends a top level outline item to the outline.
func (_adecbc *Outline )Add (item *OutlineItem ){_adecbc .Entries =append (_adecbc .Entries ,item )};func _ddcb (_ebga StdFontName )(pdfFontSimple ,error ){_ddgb ,_aadg :=_ba .NewStdFontByName (_ebga );if !_aadg {return pdfFontSimple {},ErrFontNotSupported ;
};_acdc :=_bfca (_ddgb );return _acdc ,nil ;};func (_bdacf *LTV )getCerts (_gcad []*_bc .Certificate )([][]byte ,error ){_cgeaf :=make ([][]byte ,0,len (_gcad ));for _ ,_edaag :=range _gcad {_cgeaf =append (_cgeaf ,_edaag .Raw );};return _cgeaf ,nil ;};
func (_bacf *DSS )addCRLs (_egbb [][]byte )([]*_fb .PdfObjectStream ,error ){return _bacf .add (&_bacf .CRLs ,_bacf ._faga ,_egbb );};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_fb .PdfObjectArray ;};func _bgbg (_beae *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_cdcgg ,_bfa :=_fb .GetDict (_beae .AP );if !_bfa {return nil ,nil ,_fef .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _cdcgg ==nil {return nil ,nil ,nil ;};_cfcb ,_bfa :=_fb .GetArray (_beae .Rect );if !_bfa ||_cfcb .Len ()!=4{return nil ,nil ,_fef .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_eacd ,_eefd :=NewPdfRectangle (*_cfcb );
if _eefd !=nil {return nil ,nil ,_eefd ;};_bdbeb :=_fb .TraceToDirectObject (_cdcgg .Get ("\u004e"));switch _cbcdf :=_bdbeb .(type ){case *_fb .PdfObjectStream :_dggc :=_cbcdf ;_deac ,_afgc :=NewXObjectFormFromStream (_dggc );return _deac ,_eacd ,_afgc ;
case *_fb .PdfObjectDictionary :_aeeaf :=_cbcdf ;_gccb ,_egacd :=_fb .GetName (_beae .AS );if !_egacd {return nil ,nil ,nil ;};if _aeeaf .Get (*_gccb )==nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_bbga ,_egacd :=_fb .GetStream (_aeeaf .Get (*_gccb ));if !_egacd {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_gccb );
return nil ,nil ,_fef .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_cafb ,_cacf :=NewXObjectFormFromStream (_bbga );return _cafb ,_eacd ,_cacf ;};_gb .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_bdbeb );
return nil ,nil ,_fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};func _gebgc (_deedg *_fb .PdfObjectDictionary )(*PdfShadingPattern ,error ){_bfbea :=&PdfShadingPattern {};_gcbbg :=_deedg .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");
if _gcbbg ==nil {_gb .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cefef ,_aafc :=_cbdc (_gcbbg );if _aafc !=nil {_gb .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_aafc );
return nil ,_aafc ;};_bfbea .Shading =_cefef ;if _edbf :=_deedg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_edbf !=nil {_geca ,_gfcf :=_edbf .(*_fb .PdfObjectArray );if !_gfcf {_gb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_edbf );
return nil ,_fb .ErrTypeError ;};_bfbea .Matrix =_geca ;};if _bafab :=_deedg .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_bafab !=nil {_bfbea .ExtGState =_bafab ;};return _bfbea ,nil ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_bbbb *LTV )EnableChain (chain []*_bc .Certificate )error {return _bbbb .enable (nil ,chain ,"")};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _fb .PdfObject ;LE _fb .PdfObject ;BS _fb .PdfObject ;IC _fb .PdfObject ;BE _fb .PdfObject ;IT _fb .PdfObject ;Measure _fb .PdfObject ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_gege *PdfPageResources )GetShadingByName (keyName _fb .PdfObjectName )(*PdfShading ,bool ){if _gege .Shading ==nil {return nil ,false ;};_ffeeg ,_bdegb :=_fb .TraceToDirectObject (_gege .Shading ).(*_fb .PdfObjectDictionary );if !_bdegb {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gege .Shading );
return nil ,false ;};if _bcgac :=_ffeeg .Get (keyName );_bcgac !=nil {_beage ,_dcagf :=_cbdc (_bcgac );if _dcagf !=nil {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_dcagf );
return nil ,false ;};return _beage ,true ;};return nil ,false ;};func (_cge *PdfReader )newPdfActionGotoFromDict (_fge *_fb .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_fge .Get ("\u0044")},nil ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _fb .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_fb .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_dbgg ,_adbae :=encoder .EncodeBytes (img .Data );
if _adbae !=nil {_gb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_adbae );return nil ,_adbae ;};_edfe :=NewXObjectImage ();_cabdb :=img .Width ;_ddgbd :=img .Height ;
_edfe .Width =&_cabdb ;_edfe .Height =&_ddgbd ;_dcedc :=img .BitsPerComponent ;_edfe .BitsPerComponent =&_dcedc ;_edfe .Filter =encoder ;_edfe .Stream =_dbgg ;if cs ==nil {if img .ColorComponents ==1{_edfe .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_edfe .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_edfe .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_fef .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_edfe .ColorSpace =cs ;};if len (img ._adecb )!=0{_bgegg :=NewXObjectImage ();
_bgegg .Filter =encoder ;_eeba ,_ebfc :=encoder .EncodeBytes (img ._adecb );if _ebfc !=nil {_gb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ebfc );return nil ,_ebfc ;
};_bgegg .Stream =_eeba ;_bgegg .BitsPerComponent =_edfe .BitsPerComponent ;_bgegg .Width =&img .Width ;_bgegg .Height =&img .Height ;_bgegg .ColorSpace =NewPdfColorspaceDeviceGray ();_edfe .SMask =_bgegg .ToPdfObject ();}else {_edfe .SMask =xobjIn .SMask ;
_edfe .ImageMask =xobjIn .ImageMask ;if _edfe .ColorSpace .GetNumComponents ()==1{_aefed (_edfe );};};return _edfe ,nil ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _fb .PdfObject ;IsMap _fb .PdfObject ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _fb .StreamEncoder ;FormType _fb .PdfObject ;BBox _fb .PdfObject ;Matrix _fb .PdfObject ;Resources *PdfPageResources ;Group _fb .PdfObject ;Ref _fb .PdfObject ;MetaData _fb .PdfObject ;PieceInfo _fb .PdfObject ;LastModified _fb .PdfObject ;
StructParent _fb .PdfObject ;StructParents _fb .PdfObject ;OPI _fb .PdfObject ;OC _fb .PdfObject ;Name _fb .PdfObject ;

// Stream data.
Stream []byte ;_deaaa *_fb .PdfObjectStream ;};func (_bcdfc *PdfAppender )addNewObject (_fgea _fb .PdfObject ){if _ ,_gcc :=_bcdfc ._gfeg [_fgea ];!_gcc {_bcdfc ._bbbec =append (_bcdfc ._bbbec ,_fgea );_bcdfc ._gfeg [_fgea ]=struct{}{};};};func _ffce (_cbbga map[_ba .GID ]int ,_bfabd uint16 )*_fb .PdfObjectArray {_ccebg :=&_fb .PdfObjectArray {};
_daba :=_ba .GID (_bfabd );for _dabc :=_ba .GID (0);_dabc < _daba ;{_ecbcg ,_gcbbb :=_cbbga [_dabc ];if !_gcbbb {_dabc ++;continue ;};_cacg :=_dabc ;for _gcgd :=_cacg +1;_gcgd < _daba ;_gcgd ++{if _fbeg ,_eaeg :=_cbbga [_gcgd ];!_eaeg ||_ecbcg !=_fbeg {break ;
};_cacg =_gcgd ;};_ccebg .Append (_fb .MakeInteger (int64 (_dabc )));_ccebg .Append (_fb .MakeInteger (int64 (_cacg )));_ccebg .Append (_fb .MakeInteger (int64 (_ecbcg )));_dabc =_cacg +1;};return _ccebg ;};func (_dec *PdfReader )newPdfAnnotationRichMediaFromDict (_edf *_fb .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_dfcc :=&PdfAnnotationRichMedia {};
_dfcc .RichMediaSettings =_edf .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_dfcc .RichMediaContent =_edf .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _dfcc ,nil ;};

// SetReason sets the `Reason` field of the signature.
func (_cdeag *PdfSignature )SetReason (reason string ){_cdeag .Reason =_fb .MakeString (reason )};

// String returns a string that describes `font`.
func (_dgac *PdfFont )String ()string {_cebga :="";if _dgac ._gcfd .Encoder ()!=nil {_cebga =_dgac ._gcfd .Encoder ().String ();};return _f .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_dgac ._gcfd ,_dgac .baseFields ().coreString (),_cebga );
};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_agca *PdfField )SetContext (ctx PdfModel ){_agca ._acff =ctx };

// PdfVersion returns version of the PDF file.
func (_efbdc *PdfReader )PdfVersion ()_fb .Version {return _efbdc ._cecbb .PdfVersion ()};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// ToPdfObject returns the PDF representation of the function.
func (_aade *PdfFunctionType3 )ToPdfObject ()_fb .PdfObject {_defg :=_fb .MakeDict ();_defg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fb .MakeInteger (3));_caegfb :=&_fb .PdfObjectArray {};for _ ,_aefcf :=range _aade .Domain {_caegfb .Append (_fb .MakeFloat (_aefcf ));
};_defg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_caegfb );if _aade .Range !=nil {_bdbfg :=&_fb .PdfObjectArray {};for _ ,_efcb :=range _aade .Range {_bdbfg .Append (_fb .MakeFloat (_efcb ));};_defg .Set ("\u0052\u0061\u006eg\u0065",_bdbfg );};if _aade .Functions !=nil {_efgbd :=&_fb .PdfObjectArray {};
for _ ,_bdgac :=range _aade .Functions {_efgbd .Append (_bdgac .ToPdfObject ());};_defg .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_efgbd );};if _aade .Bounds !=nil {_faafc :=&_fb .PdfObjectArray {};for _ ,_ddbab :=range _aade .Bounds {_faafc .Append (_fb .MakeFloat (_ddbab ));
};_defg .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_faafc );};if _aade .Encode !=nil {_cgcgd :=&_fb .PdfObjectArray {};for _ ,_aegd :=range _aade .Encode {_cgcgd .Append (_fb .MakeFloat (_aegd ));};_defg .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_cgcgd );
};if _aade ._cddf !=nil {_aade ._cddf .PdfObject =_defg ;return _aade ._cddf ;};return _defg ;};func (_bgcee *PdfWriter )mapObjectStreams (_eeagf bool )(map[_fb .PdfObject ]bool ,bool ){_cdfac :=make (map[_fb .PdfObject ]bool );for _ ,_baabf :=range _bgcee ._cgdaa {if _ebbfa ,_dffa :=_baabf .(*_fb .PdfObjectStreams );
_dffa {_eeagf =true ;for _ ,_ecafd :=range _ebbfa .Elements (){_cdfac [_ecafd ]=true ;if _fddec ,_fgdfe :=_ecafd .(*_fb .PdfIndirectObject );_fgdfe {_cdfac [_fddec .PdfObject ]=true ;};};};};return _cdfac ,_eeagf ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _fb .StreamEncoder )(*XObjectImage ,error ){_deebg :=NewXObjectImage ();return UpdateXObjectImageFromImage (_deebg ,img ,cs ,encoder );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cfffb *PdfShadingType5 )ToPdfObject ()_fb .PdfObject {_cfffb .PdfShading .ToPdfObject ();_eaabc ,_feage :=_cfffb .getShadingDict ();if _feage !=nil {_gb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cfffb .BitsPerCoordinate !=nil {_eaabc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cfffb .BitsPerCoordinate );};if _cfffb .BitsPerComponent !=nil {_eaabc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cfffb .BitsPerComponent );
};if _cfffb .VerticesPerRow !=nil {_eaabc .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_cfffb .VerticesPerRow );};if _cfffb .Decode !=nil {_eaabc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cfffb .Decode );};
if _cfffb .Function !=nil {if len (_cfffb .Function )==1{_eaabc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cfffb .Function [0].ToPdfObject ());}else {_dbccg :=_fb .MakeArray ();for _ ,_debfb :=range _cfffb .Function {_dbccg .Append (_debfb .ToPdfObject ());
};_eaabc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbccg );};};return _cfffb ._bbdbag ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_efafb *PdfPage )Duplicate ()*PdfPage {_fdace :=*_efafb ;_fdace ._fadc =_fb .MakeDict ();_fdace ._dfbd =_fb .MakeIndirectObject (_fdace ._fadc );return &_fdace ;};

// String returns a string representation of the field.
func (_ceeec *PdfField )String ()string {if _efgb ,_bbgeb :=_ceeec .ToPdfObject ().(*_fb .PdfIndirectObject );_bbgeb {return _f .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ceeec ._acff ,_efgb .PdfObject .String ());};return "";};func (_ccac *DSS )addOCSPs (_gacg [][]byte )([]*_fb .PdfObjectStream ,error ){return _ccac .add (&_ccac .OCSPs ,_ccac ._dacdg ,_gacg );
};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_febfd *PdfFont )ToUnicode ()string {if _febfd .baseFields ()._acfd ==nil {return "";};return _febfd .baseFields ()._acfd .Name ();};var (ErrRequiredAttributeMissing =_fef .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_fef .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_dgbe =_fef .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_fef .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_fef .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_dd .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_fb .ErrNotSupported );ErrType1CFontNotSupported =_dd .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_fb .ErrNotSupported );
ErrType3FontNotSupported =_dd .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_fb .ErrNotSupported );
ErrTTCmapNotSupported =_dd .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_fb .ErrNotSupported );
ErrSignNotEnoughSpace =_dd .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_dd .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// ToPdfObject implements interface PdfModel.
func (_fddb *PdfFilespec )ToPdfObject ()_fb .PdfObject {_fbde :=_fddb .getDict ();_fbde .Clear ();_fbde .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_fbde .SetIfNotNil ("\u0046\u0053",_fddb .FS );
_fbde .SetIfNotNil ("\u0046",_fddb .F );_fbde .SetIfNotNil ("\u0055\u0046",_fddb .UF );_fbde .SetIfNotNil ("\u0044\u004f\u0053",_fddb .DOS );_fbde .SetIfNotNil ("\u004d\u0061\u0063",_fddb .Mac );_fbde .SetIfNotNil ("\u0055\u006e\u0069\u0078",_fddb .Unix );
_fbde .SetIfNotNil ("\u0049\u0044",_fddb .ID );_fbde .SetIfNotNil ("\u0056",_fddb .V );_fbde .SetIfNotNil ("\u0045\u0046",_fddb .EF );_fbde .SetIfNotNil ("\u0052\u0046",_fddb .RF );_fbde .SetIfNotNil ("\u0044\u0065\u0073\u0063",_fddb .Desc );_fbde .SetIfNotNil ("\u0043\u0049",_fddb .CI );
return _fddb ._aabdf ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_gbabc *OutlineItem )Insert (index uint ,item *OutlineItem ){_gaaf :=uint (len (_gbabc .Entries ));if index > _gaaf {index =_gaaf ;};_gbabc .Entries =append (_gbabc .Entries [:index ],append ([]*OutlineItem {item },_gbabc .Entries [index :]...)...);
};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_gfca *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _bgced []*PdfField ;if _gfca .AcroForm !=nil {_bgced =_gfca .AcroForm .AllFields ();};_egada :=make (map[*PdfField ]struct{},len (_bgced ));for _ ,_dagf :=range _bgced {_egada [_dagf ]=struct{}{};
};for _ ,_aaga :=range _gfca .PageList {_bgge ,_cccggg :=_aaga .GetAnnotations ();if _cccggg !=nil {return false ,_cccggg ;};for _ ,_gaff :=range _bgge {_bdef ,_fcggfa :=_gaff .GetContext ().(*PdfAnnotationWidget );if !_fcggfa {continue ;};_dcbac :=_bdef .Field ();
if _dcbac ==nil {return true ,nil ;};if _ ,_bgga :=_egada [_dcbac ];!_bgga {return true ,nil ;};};};return false ,nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_cggfa :=NewPdfOutline ();_cggfa ._eafe =&_cggfa ;return _cggfa ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_abfd *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _abfd .UnderlyingCS .GetNumComponents ();};func (_eddg *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _fagf :=_eddg ._bgdf ;_fagf !=nil {return _fagf ;};return _eddg ._aeaaf ;
};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_ag :=NewPdfAction ();_eec :=&PdfActionMovie {};_eec .PdfAction =_ag ;_ag .SetContext (_eec );return _eec ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fb .PdfObject ;IC _fb .PdfObject ;RO _fb .PdfObject ;OverlayText _fb .PdfObject ;Repeat _fb .PdfObject ;DA _fb .PdfObject ;Q _fb .PdfObject ;};

// SetContext sets the sub annotation (context).
func (_fabe *PdfAnnotation )SetContext (ctx PdfModel ){_fabe ._bfda =ctx };

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_feaceb pdfFontSimple )GetRuneMetrics (r rune )(_ba .CharMetrics ,bool ){if _feaceb ._caga !=nil {_efea ,_gdbd :=_feaceb ._caga .Read (r );if _gdbd {return _efea ,true ;};};_gfdf :=_feaceb .Encoder ();if _gfdf ==nil {_gb .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_feaceb );
return _ba .CharMetrics {},false ;};_fafa ,_aeba :=_gfdf .RuneToCharcode (r );if !_aeba {if r !=' '{_gb .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_feaceb );
};return _ba .CharMetrics {},false ;};_edcgf ,_ddgad :=_feaceb .GetCharMetrics (_fafa );return _edcgf ,_ddgad ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_addgd *PdfFont )CharcodesToStrings (charcodes []_gc .CharCode )([]string ,int ,int ){_cdgae :=_addgd .baseFields ();_bffa :=make ([]string ,0,len (charcodes ));_bdcfc :=0;_cfff :=_addgd .Encoder ();if _cfff !=nil {switch _abdb :=_cfff .(type ){case _gc .SimpleEncoder :_gddg :=_abdb .BaseName ();
if _ ,_dgcc :=_fcgcd [_gddg ];_dgcc {for _ ,_bgbe :=range charcodes {if _ebgf ,_ddae :=_cfff .CharcodeToRune (_bgbe );_ddae {_bffa =append (_bffa ,string (_ebgf ));}else {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_bgbe ,charcodes ,_cdgae .isCIDFont (),_addgd ,_cfff );
_bdcfc ++;_bffa =append (_bffa ,_edb .MissingCodeString );};};return _bffa ,len (_bffa ),_bdcfc ;};};};for _ ,_dfef :=range charcodes {if _cdgae ._acfd !=nil {if _bgedc ,_cfgb :=_cdgae ._acfd .CharcodeToUnicode (_edb .CharCode (_dfef ));_cfgb {_bffa =append (_bffa ,_bgedc );
continue ;};};if _cfff !=nil {if _gdgab ,_gfbed :=_cfff .CharcodeToRune (_dfef );_gfbed {_bffa =append (_bffa ,string (_gdgab ));continue ;};};_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_dfef ,charcodes ,_cdgae .isCIDFont (),_addgd ,_cfff );
_bdcfc ++;_bffa =append (_bffa ,_edb .MissingCodeString );};if _bdcfc !=0{_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_bdcfc ,_addgd );
};return _bffa ,len (_bffa ),_bdcfc ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_fgcba _ac .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_ggfae _fa .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_dgdgf _fa .Image )(*Image ,error );

// Compress an image.
Compress (_aeaf *Image ,_gfeba int64 )(*Image ,error );};func (_efbdaf *PdfWriter )writeXRefStreams (_gbdgf int ,_cfcfd int64 )error {_gbeed :=_gbdgf +1;_efbdaf ._gfdd [_gbeed ]=crossReference {Type :1,ObjectNumber :_gbeed ,Offset :_cfcfd };_bebfaf :=_cb .NewBuffer (nil );
_dfce :=_fb .MakeArray ();for _bdcea :=0;_bdcea <=_gbdgf ;{for ;_bdcea <=_gbdgf ;_bdcea ++{_egfgb ,_agffc :=_efbdaf ._gfdd [_bdcea ];if _agffc &&(!_efbdaf ._geefd ||_efbdaf ._geefd &&(_egfgb .Type ==1&&_egfgb .Offset >=_efbdaf ._fccbf ||_egfgb .Type ==0)){break ;
};};var _dagag int ;for _dagag =_bdcea +1;_dagag <=_gbdgf ;_dagag ++{_aacec ,_fbca :=_efbdaf ._gfdd [_dagag ];if _fbca &&(!_efbdaf ._geefd ||_efbdaf ._geefd &&(_aacec .Type ==1&&_aacec .Offset > _efbdaf ._fccbf )){continue ;};break ;};_dfce .Append (_fb .MakeInteger (int64 (_bdcea )),_fb .MakeInteger (int64 (_dagag -_bdcea )));
for _dcea :=_bdcea ;_dcea < _dagag ;_dcea ++{_dcbda :=_efbdaf ._gfdd [_dcea ];switch _dcbda .Type {case 0:_ee .Write (_bebfaf ,_ee .BigEndian ,byte (0));_ee .Write (_bebfaf ,_ee .BigEndian ,uint32 (0));_ee .Write (_bebfaf ,_ee .BigEndian ,uint16 (0xFFFF));
case 1:_ee .Write (_bebfaf ,_ee .BigEndian ,byte (1));_ee .Write (_bebfaf ,_ee .BigEndian ,uint32 (_dcbda .Offset ));_ee .Write (_bebfaf ,_ee .BigEndian ,uint16 (_dcbda .Generation ));case 2:_ee .Write (_bebfaf ,_ee .BigEndian ,byte (2));_ee .Write (_bebfaf ,_ee .BigEndian ,uint32 (_dcbda .ObjectNumber ));
_ee .Write (_bebfaf ,_ee .BigEndian ,uint16 (_dcbda .Index ));};};_bdcea =_dagag +1;};_gadfe ,_fcaef :=_fb .MakeStream (_bebfaf .Bytes (),_fb .NewFlateEncoder ());if _fcaef !=nil {return _fcaef ;};_gadfe .ObjectNumber =int64 (_gbeed );_gadfe .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0058\u0052\u0065\u0066"));
_gadfe .PdfObjectDictionary .Set ("\u0057",_fb .MakeArray (_fb .MakeInteger (1),_fb .MakeInteger (4),_fb .MakeInteger (2)));_gadfe .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_dfce );_gadfe .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_fb .MakeInteger (int64 (_gbeed +1)));
_gadfe .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_efbdaf ._gbaa );_gadfe .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_efbdaf ._aebagd );if _efbdaf ._geefd &&_efbdaf ._bcdfd > 0{_gadfe .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_fb .MakeInteger (_efbdaf ._bcdfd ));
};if _efbdaf ._cbfbc !=nil {_gadfe .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_efbdaf ._bgdbe );};if _efbdaf ._effd !=nil {_gb .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_efbdaf ._effd );_gadfe .Set ("\u0049\u0044",_efbdaf ._effd );};_efbdaf .writeObject (int (_gadfe .ObjectNumber ),_gadfe );
return nil ;};

// DocumentOptimizer is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
type DocumentOptimizer interface{Optimize (_affga *_da .Document )error ;};func (_gagec *PdfWriter )writeBytes (_aabbd []byte ){if _gagec ._bcggc !=nil {return ;};_ccfce ,_efgbf :=_gagec ._fedgb .Write (_aabbd );_gagec ._cfcec +=int64 (_ccfce );_gagec ._bcggc =_efgbf ;
};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_fdegd *Image )ToGoImage ()(_fa .Image ,error ){_gb .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_babfd ,_gddf :=_egf .NewImage (int (_fdegd .Width ),int (_fdegd .Height ),int (_fdegd .BitsPerComponent ),_fdegd .ColorComponents ,_fdegd .Data ,_fdegd ._adecb ,_fdegd ._cdgb );
if _gddf !=nil {return nil ,_gddf ;};return _babfd ,nil ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _fb .PdfObject ;FontFamily _fb .PdfObject ;FontStretch _fb .PdfObject ;FontWeight _fb .PdfObject ;Flags _fb .PdfObject ;FontBBox _fb .PdfObject ;ItalicAngle _fb .PdfObject ;Ascent _fb .PdfObject ;Descent _fb .PdfObject ;
Leading _fb .PdfObject ;CapHeight _fb .PdfObject ;XHeight _fb .PdfObject ;StemV _fb .PdfObject ;StemH _fb .PdfObject ;AvgWidth _fb .PdfObject ;MaxWidth _fb .PdfObject ;MissingWidth _fb .PdfObject ;FontFile _fb .PdfObject ;FontFile2 _fb .PdfObject ;FontFile3 _fb .PdfObject ;
CharSet _fb .PdfObject ;_fafbg int ;_gbgaf float64 ;*fontFile ;_egdd *_ba .TtfType ;

// Additional entries for CIDFonts
Style _fb .PdfObject ;Lang _fb .PdfObject ;FD _fb .PdfObject ;CIDSet _fb .PdfObject ;_edbee *_fb .PdfIndirectObject ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_dbefd *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _ggac []*PdfField ;_bcabbe :=map[*_fb .PdfIndirectObject ]struct{}{};for _ ,_ebfg :=range _dbefd .PageList {_fbgbb ,_edgbb :=_ebfg .GetAnnotations ();if _edgbb !=nil {return _edgbb ;
};for _ ,_ageeg :=range _fbgbb {var _bdbbg *PdfField ;switch _efaec :=_ageeg .GetContext ().(type ){case *PdfAnnotationWidget :if _efaec ._dea !=nil {_bdbbg =_efaec ._dea ;break ;};if _aceda ,_dagba :=_fb .GetIndirect (_efaec .Parent );_dagba {_bdbbg ,_edgbb =_dbefd .newPdfFieldFromIndirectObject (_aceda ,nil );
if _edgbb ==nil {break ;};_gb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_aceda ,_edgbb );
};if _efaec ._caa !=nil {_bdbbg ,_edgbb =_dbefd .newPdfFieldFromIndirectObject (_efaec ._caa ,nil );if _edgbb ==nil {break ;};_gb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_efaec ._caa ,_edgbb );
};};if _bdbbg ==nil {continue ;};if _ ,_ggcgg :=_bcabbe [_bdbbg ._cdcae ];_ggcgg {continue ;};_bcabbe [_bdbbg ._cdcae ]=struct{}{};_ggac =append (_ggac ,_bdbbg );};};if len (_ggac )==0{return nil ;};if _dbefd .AcroForm ==nil {_dbefd .AcroForm =NewPdfAcroForm ();
};_dbefd .AcroForm .Fields =&_ggac ;return nil ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_dadb :=NewPdfAnnotation ();_badb :=&PdfAnnotationSquare {};_badb .PdfAnnotation =_dadb ;_badb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dadb .SetContext (_badb );return _badb ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_afbb *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// ToPdfObject implements interface PdfModel.
func (_eeag *PdfActionNamed )ToPdfObject ()_fb .PdfObject {_eeag .PdfAction .ToPdfObject ();_ffd :=_eeag ._ege ;_egdg :=_ffd .PdfObject .(*_fb .PdfObjectDictionary );_egdg .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeNamed )));_egdg .SetIfNotNil ("\u004e",_eeag .N );
return _ffd ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_bfgea *_fb .PdfIndirectObject ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gdg *PdfAnnotation )GetContainingPdfObject ()_fb .PdfObject {return _gdg ._caa };

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_fdeg *PdfColorspaceICCBased )ToPdfObject ()_fb .PdfObject {_aace :=&_fb .PdfObjectArray {};_aace .Append (_fb .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _cbgb *_fb .PdfObjectStream ;if _fdeg ._aeac !=nil {_cbgb =_fdeg ._aeac ;
}else {_cbgb =&_fb .PdfObjectStream {};};_bgc :=_fb .MakeDict ();_bgc .Set ("\u004e",_fb .MakeInteger (int64 (_fdeg .N )));if _fdeg .Alternate !=nil {_bgc .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_fdeg .Alternate .ToPdfObject ());};if _fdeg .Metadata !=nil {_bgc .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fdeg .Metadata );
};if _fdeg .Range !=nil {var _dbbfe []_fb .PdfObject ;for _ ,_adae :=range _fdeg .Range {_dbbfe =append (_dbbfe ,_fb .MakeFloat (_adae ));};_bgc .Set ("\u0052\u0061\u006eg\u0065",_fb .MakeArray (_dbbfe ...));};_bgc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fb .MakeInteger (int64 (len (_fdeg .Data ))));
_cbgb .Stream =_fdeg .Data ;_cbgb .PdfObjectDictionary =_bgc ;_aace .Append (_cbgb );if _fdeg ._dfea !=nil {_fdeg ._dfea .PdfObject =_aace ;return _fdeg ._dfea ;};return _aace ;};func (_cedd *PdfReader )newPdfActionJavaScriptFromDict (_gaec *_fb .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_gaec .Get ("\u004a\u0053")},nil ;
};

// ToPdfObject implements interface PdfModel.
func (_geff *PdfAnnotationRedact )ToPdfObject ()_fb .PdfObject {_geff .PdfAnnotation .ToPdfObject ();_afe :=_geff ._caa ;_age :=_afe .PdfObject .(*_fb .PdfObjectDictionary );_geff .PdfAnnotationMarkup .appendToPdfDictionary (_age );_age .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_age .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_geff .QuadPoints );_age .SetIfNotNil ("\u0049\u0043",_geff .IC );_age .SetIfNotNil ("\u0052\u004f",_geff .RO );_age .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_geff .OverlayText );
_age .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_geff .Repeat );_age .SetIfNotNil ("\u0044\u0041",_geff .DA );_age .SetIfNotNil ("\u0051",_geff .Q );return _afe ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _ac .ReadSeeker )(*PdfFont ,error ){_bcgd ,_bfgfc :=_aa .ReadAll (r );if _bfgfc !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bfgfc );
return nil ,_bfgfc ;};_cafaga ,_bfgfc :=_ba .TtfParse (_cb .NewReader (_bcgd ));if _bfgfc !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_bfgfc );
return nil ,_bfgfc ;};_fdccg :=&pdfCIDFontType2 {fontCommon :fontCommon {_aaab :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_fb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_cafaga .Widths )<=0{return nil ,_fef .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_fddg :=1000.0/float64 (_cafaga .UnitsPerEm );_fgbfg :=_fddg *float64 (_cafaga .Widths [0]);_afbcf :=make (map[rune ]int );_afcdd :=make (map[_ba .GID ]int );_eced :=_ba .GID (len (_cafaga .Widths ));for _eeeaa ,_gcef :=range _cafaga .Chars {if _gcef > _eced -1{continue ;
};_feee :=int (_fddg *float64 (_cafaga .Widths [_gcef ]));_afbcf [_eeeaa ]=_feee ;_afcdd [_gcef ]=_feee ;};_fdccg ._ecfe =_afbcf ;_fdccg .DW =_fb .MakeInteger (int64 (_fgbfg ));_cfeac :=_ffce (_afcdd ,uint16 (_eced ));_fdccg .W =_fb .MakeIndirectObject (_cfeac );
_gabdg :=_fb .MakeDict ();_gabdg .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_fb .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_gabdg .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_fb .MakeString ("\u0041\u0064\u006fb\u0065"));
_gabdg .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_fb .MakeInteger (0));_fdccg .CIDSystemInfo =_gabdg ;_bafc :=&PdfFontDescriptor {FontName :_fb .MakeName (_cafaga .PostScriptName ),Ascent :_fb .MakeFloat (_fddg *float64 (_cafaga .TypoAscender )),Descent :_fb .MakeFloat (_fddg *float64 (_cafaga .TypoDescender )),CapHeight :_fb .MakeFloat (_fddg *float64 (_cafaga .CapHeight )),FontBBox :_fb .MakeArrayFromFloats ([]float64 {_fddg *float64 (_cafaga .Xmin ),_fddg *float64 (_cafaga .Ymin ),_fddg *float64 (_cafaga .Xmax ),_fddg *float64 (_cafaga .Ymax )}),ItalicAngle :_fb .MakeFloat (_cafaga .ItalicAngle ),MissingWidth :_fb .MakeFloat (_fgbfg )};
_abcc ,_bfgfc :=_fb .MakeStream (_bcgd ,_fb .NewFlateEncoder ());if _bfgfc !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_bfgfc );
return nil ,_bfgfc ;};_abcc .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fb .MakeInteger (int64 (len (_bcgd ))));_bafc .FontFile2 =_abcc ;if _cafaga .Bold {_bafc .StemV =_fb .MakeInteger (120);}else {_bafc .StemV =_fb .MakeInteger (70);
};_cccgca :=_bdeeg ;if _cafaga .IsFixedPitch {_cccgca |=_ebabcg ;};if _cafaga .ItalicAngle !=0{_cccgca |=_gdefb ;};_bafc .Flags =_fb .MakeInteger (int64 (_cccgca ));_fdccg ._beeg =_cafaga .PostScriptName ;_fdccg ._bgdf =_bafc ;_edgb :=pdfFontType0 {fontCommon :fontCommon {_aaab :"\u0054\u0079\u0070e\u0030",_beeg :_cafaga .PostScriptName },DescendantFont :&PdfFont {_gcfd :_fdccg },Encoding :_fb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_bcfef :_cafaga .NewEncoder ()};
if len (_cafaga .Chars )> 0{_ebbc :=make (map[_edb .CharCode ]rune ,len (_cafaga .Chars ));for _cecc ,_bafaa :=range _cafaga .Chars {_affda :=_edb .CharCode (_bafaa );if _dfdc ,_cedga :=_ebbc [_affda ];!_cedga ||(_cedga &&_dfdc > _cecc ){_ebbc [_affda ]=_cecc ;
};};_edgb ._acfd =_edb .NewToUnicodeCMap (_ebbc );};_edffa :=PdfFont {_gcfd :&_edgb };return &_edffa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ffgf *PdfAnnotationFileAttachment )ToPdfObject ()_fb .PdfObject {_ffgf .PdfAnnotation .ToPdfObject ();_cfee :=_ffgf ._caa ;_cdff :=_cfee .PdfObject .(*_fb .PdfObjectDictionary );_ffgf .PdfAnnotationMarkup .appendToPdfDictionary (_cdff );_cdff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_cdff .SetIfNotNil ("\u0046\u0053",_ffgf .FS );_cdff .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ffgf .Name );return _cfee ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_ffef *PdfFont )SubsetRegistered ()error {switch _decdd :=_ffef ._gcfd .(type ){case *pdfFontType0 :_ecfde :=_decdd .subsetRegistered ();if _ecfde !=nil {_gb .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_ecfde );
return _ecfde ;};if _decdd ._bcae !=nil {if _decdd ._bcfef !=nil {_decdd ._bcfef .ToPdfObject ();};_decdd .ToPdfObject ();};default:_gb .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_decdd );
};return nil ;};func (_bfgc *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};func _dfdd (_ccdcb _fb .PdfObject )(*PdfColorspaceDeviceN ,error ){_aggc :=NewPdfColorspaceDeviceN ();if _eaac ,_afec :=_ccdcb .(*_fb .PdfIndirectObject );
_afec {_aggc ._cafag =_eaac ;};_ccdcb =_fb .TraceToDirectObject (_ccdcb );_cdac ,_efecg :=_ccdcb .(*_fb .PdfObjectArray );if !_efecg {return nil ,_f .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _cdac .Len ()!=4&&_cdac .Len ()!=5{return nil ,_f .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_ccdcb =_cdac .Get (0);
_bdbaf ,_efecg :=_ccdcb .(*_fb .PdfObjectName );if !_efecg {return nil ,_f .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_bdbaf !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_f .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_ccdcb =_cdac .Get (1);
_ccdcb =_fb .TraceToDirectObject (_ccdcb );_gbeg ,_efecg :=_ccdcb .(*_fb .PdfObjectArray );if !_efecg {return nil ,_f .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_aggc .ColorantNames =_gbeg ;_ccdcb =_cdac .Get (2);_cegg ,_egfcc :=NewPdfColorspaceFromPdfObject (_ccdcb );if _egfcc !=nil {return nil ,_egfcc ;};_aggc .AlternateSpace =_cegg ;_acgdf ,_egfcc :=_ggfef (_cdac .Get (3));if _egfcc !=nil {return nil ,_egfcc ;
};_aggc .TintTransform =_acgdf ;if _cdac .Len ()==5{_ffdc ,_bgaf :=_eefgd (_cdac .Get (4));if _bgaf !=nil {return nil ,_bgaf ;};_aggc .Attributes =_ffdc ;};return _aggc ,nil ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_dbee :=&PdfColorspaceCalGray {};_dbee .BlackPoint =[]float64 {0.0,0.0,0.0};_dbee .Gamma =1;return _dbee ;};

// GetXObjectByName gets XObject by name.
func (_bfeaa *PdfPage )GetXObjectByName (name _fb .PdfObjectName )(_fb .PdfObject ,bool ){_abaad ,_bdged :=_bfeaa .Resources .XObject .(*_fb .PdfObjectDictionary );if !_bdged {return nil ,false ;};if _gdgg :=_abaad .Get (name );_gdgg !=nil {return _gdgg ,true ;
};return nil ,false ;};func (_gdgef *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _gdgef ._cecbb .GetCrypter ()!=nil &&!_gdgef ._cecbb .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_abbda :=_gdgef ._aaegf ;_beagf :=_abbda .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _beagf ==nil {return nil ,nil ;};_gb .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_ecfdg :=_fb .ResolveReference (_beagf );
_gb .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_ecfdg );if _gfbc :=_fb .IsNullObject (_ecfdg );_gfbc {_gb .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_bbbfg ,_aebaf :=_ecfdg .(*_fb .PdfIndirectObject );if !_aebaf {if _ ,_bgaaae :=_fb .GetDict (_ecfdg );!_bgaaae {_gb .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_gb .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_bbbfg =_fb .MakeIndirectObject (_ecfdg );};_efab ,_aebaf :=_bbbfg .PdfObject .(*_fb .PdfObjectDictionary );if !_aebaf {return nil ,_fef .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_gb .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_efab );_ggeae ,_ ,_ggafd :=_gdgef .buildOutlineTree (_bbbfg ,nil ,nil ,nil );if _ggafd !=nil {return nil ,_ggafd ;};_gb .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_ggeae );
return _ggeae ,nil ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_ba .CharMetrics ;

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_bege *PdfFieldButton )SetType (btype ButtonType ){_dece :=uint32 (0);if _bege .Ff !=nil {_dece =uint32 (*_bege .Ff );};switch btype {case ButtonTypePush :_dece |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_dece |=FieldFlagRadio .Mask ();
};_bege .Ff =_fb .MakeInteger (int64 (_dece ));};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_dbedd []byte ;_baaa []uint32 ;_bdbge *_fb .PdfObjectStream ;};

// SetName sets the `Name` field of the signature.
func (_feffec *PdfSignature )SetName (name string ){_feffec .Name =_fb .MakeString (name )};func (_cdgcb *PdfWriter )updateObjectNumbers (){_fgceff :=_cdgcb .ObjNumOffset ;_bfebd :=0;for _ ,_fcbdc :=range _cdgcb ._cgdaa {_bagace :=int64 (_bfebd +1+_fgceff );
_fcab :=true ;if _cdgcb ._geefd {if _bdgbb ,_eggga :=_cdgcb ._cgefe [_fcbdc ];_eggga {_bagace =_bdgbb ;_fcab =false ;};};switch _eggf :=_fcbdc .(type ){case *_fb .PdfIndirectObject :_eggf .ObjectNumber =_bagace ;_eggf .GenerationNumber =0;case *_fb .PdfObjectStream :_eggf .ObjectNumber =_bagace ;
_eggf .GenerationNumber =0;case *_fb .PdfObjectStreams :_eggf .ObjectNumber =_bagace ;_eggf .GenerationNumber =0;default:_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_eggf );
continue ;};if _fcab {_bfebd ++;};};_cffge :=func (_edfba _fb .PdfObject )int64 {switch _ebfed :=_edfba .(type ){case *_fb .PdfIndirectObject :return _ebfed .ObjectNumber ;case *_fb .PdfObjectStream :return _ebfed .ObjectNumber ;case *_fb .PdfObjectStreams :return _ebfed .ObjectNumber ;
};return 0;};_cd .SliceStable (_cdgcb ._cgdaa ,func (_befca ,_eaebc int )bool {return _cffge (_cdgcb ._cgdaa [_befca ])< _cffge (_cdgcb ._cgdaa [_eaebc ])});};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_ddcgf *PdfOutlineTreeNode )ToPdfObject ()_fb .PdfObject {return _ddcgf .GetContext ().ToPdfObject ();};var _gdff =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};
func (_efedbg *PdfReader )newPdfOutlineItemFromIndirectObject (_faef *_fb .PdfIndirectObject )(*PdfOutlineItem ,error ){_cdcdc ,_acede :=_faef .PdfObject .(*_fb .PdfObjectDictionary );if !_acede {return nil ,_f .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_aaafg :=NewPdfOutlineItem ();_eagd :=_cdcdc .Get ("\u0054\u0069\u0074l\u0065");if _eagd ==nil {return nil ,_f .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_ecfgb ,_ddfec :=_fb .GetString (_eagd );if !_ddfec {return nil ,_f .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_eagd );};_aaafg .Title =_ecfgb ;if _fgdcb :=_cdcdc .Get ("\u0043\u006f\u0075n\u0074");
_fgdcb !=nil {_bceg ,_dgeda :=_fgdcb .(*_fb .PdfObjectInteger );if !_dgeda {return nil ,_f .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_fgdcb );};_gdgdg :=int64 (*_bceg );
_aaafg .Count =&_gdgdg ;};if _cdggf :=_cdcdc .Get ("\u0044\u0065\u0073\u0074");_cdggf !=nil {_aaafg .Dest =_fb .ResolveReference (_cdggf );if !_efedbg ._fdcaf {_aeegd :=_efedbg .traverseObjectData (_aaafg .Dest );if _aeegd !=nil {return nil ,_aeegd ;};
};};if _adabfe :=_cdcdc .Get ("\u0041");_adabfe !=nil {_aaafg .A =_fb .ResolveReference (_adabfe );if !_efedbg ._fdcaf {_adceb :=_efedbg .traverseObjectData (_aaafg .A );if _adceb !=nil {return nil ,_adceb ;};};};if _aadfc :=_cdcdc .Get ("\u0053\u0045");
_aadfc !=nil {_aaafg .SE =nil ;};if _bcaab :=_cdcdc .Get ("\u0043");_bcaab !=nil {_aaafg .C =_fb .ResolveReference (_bcaab );};if _eddfg :=_cdcdc .Get ("\u0046");_eddfg !=nil {_aaafg .F =_fb .ResolveReference (_eddfg );};return _aaafg ,nil ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_gcb :=NewPdfAnnotation ();_bbg :=&PdfAnnotationScreen {};_bbg .PdfAnnotation =_gcb ;_gcb .SetContext (_bbg );return _bbg ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_dbga *Image )GetParamsDict ()*_fb .PdfObjectDictionary {_dadfa :=_fb .MakeDict ();_dadfa .Set ("\u0057\u0069\u0064t\u0068",_fb .MakeInteger (_dbga .Width ));_dadfa .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fb .MakeInteger (_dbga .Height ));_dadfa .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fb .MakeInteger (int64 (_dbga .ColorComponents )));
_dadfa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fb .MakeInteger (_dbga .BitsPerComponent ));return _dadfa ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_gecee DefaultImageHandler )NewGrayImageFromGoImage (goimg _fa .Image )(*Image ,error ){_feaae :=goimg .Bounds ();_bbgb :=&Image {Width :int64 (_feaae .Dx ()),Height :int64 (_feaae .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _effa :=goimg .(type ){case *_fa .Gray :if len (_effa .Pix )!=_feaae .Dx ()*_feaae .Dy (){_dffca ,_affg :=_egf .GrayConverter .Convert (goimg );
if _affg !=nil {return nil ,_affg ;};_bbgb .Data =_dffca .Pix ();}else {_bbgb .Data =_effa .Pix ;};case *_fa .Gray16 :_bbgb .BitsPerComponent =16;if len (_effa .Pix )!=_feaae .Dx ()*_feaae .Dy ()*2{_cfdc ,_abeba :=_egf .Gray16Converter .Convert (goimg );
if _abeba !=nil {return nil ,_abeba ;};_bbgb .Data =_cfdc .Pix ();}else {_bbgb .Data =_effa .Pix ;};case _egf .Image :_egggb :=_effa .Base ();if _egggb .ColorComponents ==1{_bbgb .BitsPerComponent =int64 (_egggb .BitsPerComponent );_bbgb .Data =_egggb .Data ;
return _bbgb ,nil ;};_cgdf ,_aeedb :=_egf .GrayConverter .Convert (goimg );if _aeedb !=nil {return nil ,_aeedb ;};_bbgb .Data =_cgdf .Pix ();default:_bdge ,_caec :=_egf .GrayConverter .Convert (goimg );if _caec !=nil {return nil ,_caec ;};_bbgb .Data =_bdge .Pix ();
};return _bbgb ,nil ;};func (_fddcc *LTV )getCRLs (_baac []*_bc .Certificate )([][]byte ,error ){_cdbca :=make ([][]byte ,0,len (_baac ));for _ ,_ebda :=range _baac {for _ ,_bffgf :=range _ebda .CRLDistributionPoints {if _fddcc .CertClient .IsCA (_ebda ){continue ;
};_dcacd ,_fggab :=_fddcc .CRLClient .MakeRequest (_bffgf ,_ebda );if _fggab !=nil {_gb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_fggab );continue ;
};_cdbca =append (_cdbca ,_dcacd );};};return _cdbca ,nil ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _fb .PdfObject )(*PdfFont ,error ){return _cacaa (fontObj ,true )};func _aede (_cdcgb *PdfField ,_beea _fb .PdfObject ){for _ ,_dbgfb :=range _cdcgb .Annotations {_dbgfb .AS =_beea ;_dbgfb .ToPdfObject ();};};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_aafb *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _aafb .Alternate ==nil {_gb .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _aafb .N ==1{_gb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_afee :=NewPdfColorspaceDeviceGray ();return _afee .ImageToRGB (img );}else if _aafb .N ==3{_gb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _aafb .N ==4{_gb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_fadef :=NewPdfColorspaceDeviceCMYK ();return _fadef .ImageToRGB (img );}else {return img ,_fef .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_gb .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_aafb );
_bgdg ,_gadd :=_aafb .Alternate .ImageToRGB (img );_gb .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_gb .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_bgdg );
return _bgdg ,_gadd ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_efebdc ,_gedf :=_ff .Open (filePath );if _gedf !=nil {_gb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gedf );
return nil ,_gedf ;};defer _efebdc .Close ();return NewCompositePdfFontFromTTF (_efebdc );};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_cgead :=&PdfSignature {Type :_fb .MakeName ("\u0053\u0069\u0067"),Handler :handler };_fbdf :=&pdfSignDictionary {PdfObjectDictionary :_fb .MakeDict (),_acfga :&handler ,_efde :_cgead };_cgead ._gcffe =_fb .MakeIndirectObject (_fbdf );
return _cgead ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _fb .PdfObject )(*PdfFilespec ,error ){_agad :=&PdfFilespec {};var _ecabf *_fb .PdfObjectDictionary ;if _fdbf ,_dcba :=_fb .GetIndirect (obj );_dcba {_agad ._aabdf =_fdbf ;_egcee ,_cceg :=_fb .GetDict (_fdbf .PdfObject );
if !_cceg {_gb .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_fb .ErrTypeError ;};_ecabf =_egcee ;}else if _ebfd ,_caaef :=_fb .GetDict (obj );
_caaef {_agad ._aabdf =_ebfd ;_ecabf =_ebfd ;}else {_gb .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_fb .ErrTypeError ;};if _ecabf ==nil {_gb .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_fef .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ffbb :=_ecabf .Get ("\u0054\u0079\u0070\u0065");_ffbb !=nil {_cdfg ,_fege :=_ffbb .(*_fb .PdfObjectName );if !_fege {_gb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ffbb );
}else {if *_cdfg !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_gb .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_cdfg );
};};};if _ggbf :=_ecabf .Get ("\u0046\u0053");_ggbf !=nil {_agad .FS =_ggbf ;};if _ceeecd :=_ecabf .Get ("\u0046");_ceeecd !=nil {_agad .F =_ceeecd ;};if _faacf :=_ecabf .Get ("\u0055\u0046");_faacf !=nil {_agad .UF =_faacf ;};if _eecef :=_ecabf .Get ("\u0044\u004f\u0053");
_eecef !=nil {_agad .DOS =_eecef ;};if _gebaa :=_ecabf .Get ("\u004d\u0061\u0063");_gebaa !=nil {_agad .Mac =_gebaa ;};if _afdfd :=_ecabf .Get ("\u0055\u006e\u0069\u0078");_afdfd !=nil {_agad .Unix =_afdfd ;};if _ddgc :=_ecabf .Get ("\u0049\u0044");_ddgc !=nil {_agad .ID =_ddgc ;
};if _fgbf :=_ecabf .Get ("\u0056");_fgbf !=nil {_agad .V =_fgbf ;};if _agge :=_ecabf .Get ("\u0045\u0046");_agge !=nil {_agad .EF =_agge ;};if _fdbcf :=_ecabf .Get ("\u0052\u0046");_fdbcf !=nil {_agad .RF =_fdbcf ;};if _gbee :=_ecabf .Get ("\u0044\u0065\u0073\u0063");
_gbee !=nil {_agad .Desc =_gbee ;};if _aegg :=_ecabf .Get ("\u0043\u0049");_aegg !=nil {_agad .CI =_aegg ;};return _agad ,nil ;};func (_ceed *PdfReader )newPdfAnnotationLinkFromDict (_deba *_fb .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_cggc :=PdfAnnotationLink {};
_cggc .A =_deba .Get ("\u0041");_cggc .Dest =_deba .Get ("\u0044\u0065\u0073\u0074");_cggc .H =_deba .Get ("\u0048");_cggc .PA =_deba .Get ("\u0050\u0041");_cggc .QuadPoints =_deba .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_cggc .BS =_deba .Get ("\u0042\u0053");
return &_cggc ,nil ;};var _ pdfFont =(*pdfFontType3 )(nil );

// Subtype returns the font's "Subtype" field.
func (_efebd *PdfFont )Subtype ()string {_ddbgg :=_efebd .baseFields ()._aaab ;if _dcee ,_dbfg :=_efebd ._gcfd .(*pdfFontType0 );_dbfg {_ddbgg =_ddbgg +"\u003a"+_dcee .DescendantFont .Subtype ();};return _ddbgg ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_afb :=NewPdfAction ();_bbe :=&PdfActionURI {};_bbe .PdfAction =_afb ;_afb .SetContext (_bbe );return _bbe ;};

// ToPdfObject implements interface PdfModel.
func (_ega *PdfActionTrans )ToPdfObject ()_fb .PdfObject {_ega .PdfAction .ToPdfObject ();_cbed :=_ega ._ege ;_dedf :=_cbed .PdfObject .(*_fb .PdfObjectDictionary );_dedf .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeTrans )));_dedf .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_ega .Trans );
return _cbed ;};var _ _fb .PdfObject =&pdfSignDictionary {};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_eeff int64 ;_dfcg int64 ;_gdced int64 ;_cbbed int64 ;_baagb int64 ;_efge int64 ;_eaeec byte ;_fgcdd int64 ;_ffcdf int64 ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_gcffe *_fb .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_fb .PdfObjectName ;Filter *_fb .PdfObjectName ;SubFilter *_fb .PdfObjectName ;Contents *_fb .PdfObjectString ;Cert _fb .PdfObject ;ByteRange *_fb .PdfObjectArray ;Reference *_fb .PdfObjectArray ;Changes *_fb .PdfObjectArray ;Name *_fb .PdfObjectString ;
M *_fb .PdfObjectString ;Location *_fb .PdfObjectString ;Reason *_fb .PdfObjectString ;ContactInfo *_fb .PdfObjectString ;R *_fb .PdfObjectInteger ;V *_fb .PdfObjectInteger ;PropBuild *_fb .PdfObjectDictionary ;PropAuthTime *_fb .PdfObjectInteger ;PropAuthType *_fb .PdfObjectName ;
};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_aecg pdfFontSimple )GetCharMetrics (code _gc .CharCode )(_ba .CharMetrics ,bool ){if _affb ,_adedg :=_aecg ._bdac [code ];_adedg {return _ba .CharMetrics {Wx :_affb },true ;};if _ba .IsStdFont (_ba .StdFontName (_aecg ._beeg )){return _ba .CharMetrics {Wx :250},true ;
};return _ba .CharMetrics {},false ;};

// ToPdfObject implements interface PdfModel.
func (_ced *PdfActionSubmitForm )ToPdfObject ()_fb .PdfObject {_ced .PdfAction .ToPdfObject ();_aec :=_ced ._ege ;_cbf :=_aec .PdfObject .(*_fb .PdfObjectDictionary );_cbf .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeSubmitForm )));if _ced .F !=nil {_cbf .Set ("\u0046",_ced .F .ToPdfObject ());
};_cbf .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_ced .Fields );_cbf .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_ced .Flags );return _aec ;};

// CustomKeys returns all custom info keys as list.
func (_fbf *PdfInfo )CustomKeys ()[]string {if _fbf ._abdg ==nil {return nil ;};_aeaef :=make ([]string ,len (_fbf ._abdg .Keys ()));for _ ,_aeeda :=range _fbf ._abdg .Keys (){_aeaef =append (_aeaef ,_aeeda .String ());};return _aeaef ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_fb .PdfObjectString ;Q *_fb .PdfObjectInteger ;DS *_fb .PdfObjectString ;RV _fb .PdfObject ;MaxLen *_fb .PdfObjectInteger ;};func (_ccbaf *pdfFontSimple )getFontEncoding ()(_gffd string ,_efbdb map[_gc .CharCode ]_gc .GlyphName ,_faag error ){_gffd ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _fdebf ,_aacae :=_gdff [_ccbaf ._beeg ];_aacae {_gffd =_fdebf ;}else if _ccbaf .fontFlags ()&_bdeeg !=0{for _cafbb ,_gagag :=range _gdff {if _eg .Contains (_ccbaf ._beeg ,_cafbb ){_gffd =_gagag ;break ;};};};if _ccbaf .Encoding ==nil {return _gffd ,nil ,nil ;
};switch _afab :=_ccbaf .Encoding .(type ){case *_fb .PdfObjectName :return string (*_afab ),nil ,nil ;case *_fb .PdfObjectDictionary :_cdcaaf ,_agcb :=_fb .GetName (_afab .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _agcb {_gffd =_cdcaaf .String ();
};if _eadg :=_afab .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_eadg !=nil {_gggaab ,_gcaaf :=_fb .GetArray (_eadg );if !_gcaaf {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_afab ,_afab .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_fb .ErrTypeError ;};_efbdb ,_faag =_gc .FromFontDifferences (_gggaab );};return _gffd ,_efbdb ,_faag ;default:_gb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_ccbaf .Encoding ,_ccbaf .Encoding );
return "",nil ,_fb .ErrTypeError ;};};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_bdag *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_cdgc :=0.3*_bdag .R ()+0.59*_bdag .G ()+0.11*_bdag .B ();_cdgc =_eda .Min (_eda .Max (_cdgc ,0.0),1.0);return NewPdfColorDeviceGray (_cdgc );};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_gcda *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _gcda .Range };

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_aecef *_fb .PdfIndirectObject ;Certs []*_fb .PdfObjectStream ;OCSPs []*_fb .PdfObjectStream ;CRLs []*_fb .PdfObjectStream ;VRI map[string ]*VRI ;_dbdc map[string ]*_fb .PdfObjectStream ;_dacdg map[string ]*_fb .PdfObjectStream ;_faga map[string ]*_fb .PdfObjectStream ;
};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_fdaeb :=NewPdfAnnotation ();_fbge :=&PdfAnnotationProjection {};_fbge .PdfAnnotation =_fdaeb ;_fbge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdaeb .SetContext (_fbge );return _fbge ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _ac .ReadSeeker )(*PdfReader ,error ){const _fcccc ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _gbdfce (rs ,&ReaderOpts {LazyLoad :true },false ,_fcccc );
};func (_caaeg *PdfWriter )writeString (_dfafd string ){if _caaeg ._bcggc !=nil {return ;};_bcac ,_gcccc :=_caaeg ._fedgb .WriteString (_dfafd );_caaeg ._cfcec +=int64 (_bcac );_caaeg ._bcggc =_gcccc ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_ffeac :=&PdfColorspaceCalRGB {};_ffeac .BlackPoint =[]float64 {0.0,0.0,0.0};_ffeac .Gamma =[]float64 {1.0,1.0,1.0};_ffeac .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _ffeac ;};

// ToPdfObject implements interface PdfModel.
func (_eee *PdfActionGoTo )ToPdfObject ()_fb .PdfObject {_eee .PdfAction .ToPdfObject ();_edef :=_eee ._ege ;_aca :=_edef .PdfObject .(*_fb .PdfObjectDictionary );_aca .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeGoTo )));_aca .SetIfNotNil ("\u0044",_eee .D );
return _edef ;};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_adce *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _adce .AlternateSpace ==nil {return nil ,_fef .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _adce .AlternateSpace .ColorToRGB (color );};

// ToPdfObject implements interface PdfModel.
func (_efa *PdfAnnotationCaret )ToPdfObject ()_fb .PdfObject {_efa .PdfAnnotation .ToPdfObject ();_fafc :=_efa ._caa ;_fbgc :=_fafc .PdfObject .(*_fb .PdfObjectDictionary );_efa .PdfAnnotationMarkup .appendToPdfDictionary (_fbgc );_fbgc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0043\u0061\u0072e\u0074"));
_fbgc .SetIfNotNil ("\u0052\u0044",_efa .RD );_fbgc .SetIfNotNil ("\u0053\u0079",_efa .Sy );return _fafc ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_gcaa *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=_gcaa .GetNumComponents (){return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbda ,_dcgf :=_fb .GetNumbersAsFloat (objects );
if _dcgf !=nil {return nil ,_dcgf ;};return _gcaa .ColorFromFloats (_fbda );};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_ecca PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_fb .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_eegbc []_fb .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_fcbb []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_bce :=NewPdfAction ();_cg :=&PdfActionGoTo {};_cg .PdfAction =_bce ;_bce .SetContext (_cg );return _cg ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_bdddf :=PdfPage {};_bdddf ._fadc =_fb .MakeDict ();_bdddf .Resources =NewPdfPageResources ();_ggeb :=_fb .PdfIndirectObject {};_ggeb .PdfObject =_bdddf ._fadc ;_bdddf ._dfbd =&_ggeb ;return &_bdddf ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_cfeae byte )byte ;

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_gecgb *PdfPageResources )SetColorspaceByName (keyName _fb .PdfObjectName ,cs PdfColorspace )error {_dfaba ,_bfgeg :=_gecgb .GetColorspaces ();if _bfgeg !=nil {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bfgeg );
return _bfgeg ;};if _dfaba ==nil {_dfaba =NewPdfPageResourcesColorspaces ();_gecgb .SetColorSpace (_dfaba );};_dfaba .Set (keyName ,cs );return nil ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_acbc *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_fef .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_bbgec ,_edbc :=_egf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._adecb ,img ._cdgb );if _edbc !=nil {return img ,_edbc ;};_eafc ,_edbc :=_egf .NRGBAConverter .Convert (_bbgec );if _edbc !=nil {return img ,_edbc ;
};_geac :=_gaaa (_eafc .Base ());_gb .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_gb .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_gb .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_geac .Data );
_gb .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_geac );return _geac ,nil ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_caacf *PdfFont )CharcodesToUnicodeWithStats (charcodes []_gc .CharCode )(_edbbd []rune ,_cfg ,_cecd int ){_bggf ,_cfg ,_cecd :=_caacf .CharcodesToStrings (charcodes );return []rune (_eg .Join (_bggf ,"")),_cfg ,_cecd ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_bccde *PdfPageResources )GetXObjectFormByName (keyName _fb .PdfObjectName )(*XObjectForm ,error ){_aeacd ,_gebag :=_bccde .GetXObjectByName (keyName );if _aeacd ==nil {return nil ,nil ;};if _gebag !=XObjectTypeForm {return nil ,_fef .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_dgca ,_cadef :=NewXObjectFormFromStream (_aeacd );if _cadef !=nil {return nil ,_cadef ;};return _dgca ,nil ;};type modelManager struct{_bfacf map[PdfModel ]_fb .PdfObject ;_eadbg map[_fb .PdfObject ]PdfModel ;};type pdfFontType0 struct{fontCommon ;_bcae *_fb .PdfIndirectObject ;
_bcfef _gc .TextEncoder ;Encoding _fb .PdfObject ;DescendantFont *PdfFont ;_bfad *_edb .CMap ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};func _aefed (_gageb *XObjectImage )error {if _gageb .SMask ==nil {return nil ;};_afbdga ,_adbgg :=_gageb .SMask .(*_fb .PdfObjectStream );if !_adbgg {_gb .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _fb .ErrTypeError ;};_fecced :=_afbdga .PdfObjectDictionary ;_fdccb :=_fecced .Get ("\u004d\u0061\u0074t\u0065");if _fdccb ==nil {return nil ;};_dgadgg ,_abbed :=_cfefd (_fdccb .(*_fb .PdfObjectArray ));if _abbed !=nil {return _abbed ;};_dedeaf :=_fb .MakeArrayFromFloats ([]float64 {_dgadgg });
_fecced .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_dedeaf );return nil ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_cacda .Lock ();defer _cacda .Unlock ();_egbgg =subject };

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _fb .PdfObject ;Flags _fb .PdfObject ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_fb .PdfObjectString ;Author *_fb .PdfObjectString ;Subject *_fb .PdfObjectString ;Keywords *_fb .PdfObjectString ;Creator *_fb .PdfObjectString ;Producer *_fb .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_fb .PdfObjectName ;
_abdg *_fb .PdfObjectDictionary ;};

// Height returns the height of `rect`.
func (_cbfdf *PdfRectangle )Height ()float64 {return _eda .Abs (_cbfdf .Ury -_cbfdf .Lly )};

// Evaluate runs the function on the passed in slice and returns the results.
func (_dafa *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_gb .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_fafbc :=[]float64 {0.0};if _dafa .C0 !=nil {_fafbc =_dafa .C0 ;};_dbdd :=[]float64 {1.0};if _dafa .C1 !=nil {_dbdd =_dafa .C1 ;};var _gcdbb []float64 ;for _bbcaf :=0;_bbcaf < len (_fafbc );_bbcaf ++{_fdea :=_fafbc [_bbcaf ]+_eda .Pow (x [0],_dafa .N )*(_dbdd [_bbcaf ]-_fafbc [_bbcaf ]);
_gcdbb =append (_gcdbb ,_fdea );};return _gcdbb ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_cecb *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gggc ,_ggda :=_fb .GetNumbersAsFloat (objects );
if _ggda !=nil {return nil ,_ggda ;};return _cecb .ColorFromFloats (_gggc );};func (_bfage *PdfWriter )flushWriter ()error {if _bfage ._bcggc ==nil {_bfage ._bcggc =_bfage ._fedgb .Flush ();};return _bfage ._bcggc ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_aebagd *_fb .PdfIndirectObject ;_bdefb *_fb .PdfIndirectObject ;_fabefb map[_fb .PdfObject ]struct{};_cgdaa []_fb .PdfObject ;_bddff map[_fb .PdfObject ]struct{};_beaef []*_fb .PdfIndirectObject ;_bdcfa *PdfOutlineTreeNode ;_aeab *_fb .PdfObjectDictionary ;
_bddg []_fb .PdfObject ;_gbaa *_fb .PdfIndirectObject ;_fedgb *_e .Writer ;_cfcec int64 ;_bcggc error ;_cbfbc *_fb .PdfCrypt ;_edabc *_fb .PdfObjectDictionary ;_bgdbe *_fb .PdfIndirectObject ;_effd *_fb .PdfObjectArray ;_effda _fb .Version ;_acfeb *bool ;
_eccf map[_fb .PdfObject ][]*_fb .PdfObjectDictionary ;_agadb *PdfAcroForm ;_gbcd Optimizer ;_bbgdc DocumentOptimizer ;_gfdd map[int ]crossReference ;_aebgd int64 ;ObjNumOffset int ;_geefd bool ;_gbdeg _fb .XrefTable ;_bcdfd int64 ;_fccbf int64 ;_cgefe map[_fb .PdfObject ]int64 ;
_decb map[_fb .PdfObject ]struct{};_bcadc string ;_cbeff []*PdfOutputIntent ;_bgfdf bool ;_cbffe ,_cfagc string ;};func (_bcaf *pdfFontSimple )baseFields ()*fontCommon {return &_bcaf .fontCommon };

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_dcfe *PdfPageResources )SetXObjectImageByName (keyName _fb .PdfObjectName ,ximg *XObjectImage )error {_eddcg :=ximg .ToPdfObject ().(*_fb .PdfObjectStream );_begb :=_dcfe .SetXObjectByName (keyName ,_eddcg );return _begb ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_bcbga *PdfAcroForm )GetContainingPdfObject ()_fb .PdfObject {return _bcbga ._degd };

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_fb .PdfObjectInteger ;BitsPerComponent *_fb .PdfObjectInteger ;VerticesPerRow *_fb .PdfObjectInteger ;Decode *_fb .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject implements interface PdfModel.
func (_cfc *PdfAnnotationStamp )ToPdfObject ()_fb .PdfObject {_cfc .PdfAnnotation .ToPdfObject ();_badc :=_cfc ._caa ;_cbg :=_badc .PdfObject .(*_fb .PdfObjectDictionary );_cfc .PdfAnnotationMarkup .appendToPdfDictionary (_cbg );_cbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0053\u0074\u0061m\u0070"));
_cbg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cfc .Name );return _badc ;};

// ToPdfObject implements interface PdfModel.
func (_eeae *PdfAnnotationInk )ToPdfObject ()_fb .PdfObject {_eeae .PdfAnnotation .ToPdfObject ();_eaf :=_eeae ._caa ;_gfga :=_eaf .PdfObject .(*_fb .PdfObjectDictionary );_eeae .PdfAnnotationMarkup .appendToPdfDictionary (_gfga );_gfga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0049\u006e\u006b"));
_gfga .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_eeae .InkList );_gfga .SetIfNotNil ("\u0042\u0053",_eeae .BS );return _eaf ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _fb .PdfObject ;Q _fb .PdfObject ;RC _fb .PdfObject ;DS _fb .PdfObject ;CL _fb .PdfObject ;IT _fb .PdfObject ;BE _fb .PdfObject ;RD _fb .PdfObject ;BS _fb .PdfObject ;LE _fb .PdfObject ;
};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_cacda .Lock ();defer _cacda .Unlock ();_agaae =producer };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_cgcgg *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bacgd ,_dged :=_fb .GetNumbersAsFloat (objects );
if _dged !=nil {return nil ,_dged ;};return _cgcgg .ColorFromFloats (_bacgd );};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fega *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_fega .NumInputs {_gb .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_fef .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _fega ._baaa ==nil {_bgca :=_fega .processSamples ();if _bgca !=nil {return nil ,_bgca ;};};_bdff :=_fega .Encode ;if _bdff ==nil {_bdff =[]float64 {};
for _cgfe :=0;_cgfe < len (_fega .Size );_cgfe ++{_bdff =append (_bdff ,0);_bdff =append (_bdff ,float64 (_fega .Size [_cgfe ]-1));};};_effb :=_fega .Decode ;if _effb ==nil {_effb =_fega .Range ;};_efcee :=make ([]int ,len (x ));for _eaga :=0;_eaga < len (x );
_eaga ++{_ecddb :=x [_eaga ];_bdbebf :=_eda .Min (_eda .Max (_ecddb ,_fega .Domain [2*_eaga ]),_fega .Domain [2*_eaga +1]);_fgebeg :=_egf .LinearInterpolate (_bdbebf ,_fega .Domain [2*_eaga ],_fega .Domain [2*_eaga +1],_bdff [2*_eaga ],_bdff [2*_eaga +1]);
_ebac :=_eda .Min (_eda .Max (_fgebeg ,0),float64 (_fega .Size [_eaga ]-1));_acdgg :=int (_eda .Floor (_ebac +0.5));if _acdgg < 0{_acdgg =0;}else if _acdgg > _fega .Size [_eaga ]{_acdgg =_fega .Size [_eaga ]-1;};_efcee [_eaga ]=_acdgg ;};_dbfb :=_efcee [0];
for _bceeg :=1;_bceeg < _fega .NumInputs ;_bceeg ++{_cdggc :=_efcee [_bceeg ];for _dfgfd :=0;_dfgfd < _bceeg ;_dfgfd ++{_cdggc *=_fega .Size [_dfgfd ];};_dbfb +=_cdggc ;};_dbfb *=_fega .NumOutputs ;var _cbgdb []float64 ;for _ccfdc :=0;_ccfdc < _fega .NumOutputs ;
_ccfdc ++{_fddda :=_dbfb +_ccfdc ;if _fddda >=len (_fega ._baaa ){_gb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_adgbc :=_fega ._baaa [_fddda ];_bcda :=_egf .LinearInterpolate (float64 (_adgbc ),0,_eda .Pow (2,float64 (_fega .BitsPerSample )),_effb [2*_ccfdc ],_effb [2*_ccfdc +1]);_aacc :=_eda .Min (_eda .Max (_bcda ,_fega .Range [2*_ccfdc ]),_fega .Range [2*_ccfdc +1]);
_cbgdb =append (_cbgdb ,_aacc );};return _cbgdb ,nil ;};

// Initialize initializes the PdfSignature.
func (_dcbd *PdfSignature )Initialize ()error {if _dcbd .Handler ==nil {return _fef .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _dcbd .Handler .InitSignature (_dcbd );};func (_fbg *PdfReader )newPdfActionTransFromDict (_bda *_fb .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_bda .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// ToPdfObject implements interface PdfModel.
func (_dace *PdfAnnotationUnderline )ToPdfObject ()_fb .PdfObject {_dace .PdfAnnotation .ToPdfObject ();_bca :=_dace ._caa ;_aefaa :=_bca .PdfObject .(*_fb .PdfObjectDictionary );_dace .PdfAnnotationMarkup .appendToPdfDictionary (_aefaa );_aefaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_aefaa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dace .QuadPoints );return _bca ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_cdbc *PdfFieldButton )GetType ()ButtonType {_ccbc :=ButtonTypeCheckbox ;if _cdbc .Ff !=nil {if (uint32 (*_cdbc .Ff )&FieldFlagPushbutton .Mask ())> 0{_ccbc =ButtonTypePush ;}else if (uint32 (*_cdbc .Ff )&FieldFlagRadio .Mask ())> 0{_ccbc =ButtonTypeRadio ;
};};return _ccbc ;};type pdfCIDFontType0 struct{fontCommon ;_deffb *_fb .PdfIndirectObject ;_gdfb _gc .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_fb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _fb .PdfObject ;W _fb .PdfObject ;DW2 _fb .PdfObject ;W2 _fb .PdfObject ;_ceeb map[_gc .CharCode ]float64 ;_dgcbg float64 ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;func (_gegf *PdfReader )newPdfPageFromDict (_badaa *_fb .PdfObjectDictionary )(*PdfPage ,error ){_fbeaa :=NewPdfPage ();_fbeaa ._fadc =_badaa ;_fcfff :=*_badaa ;_eeee ,_defdb :=_fcfff .Get ("\u0054\u0079\u0070\u0065").(*_fb .PdfObjectName );
if !_defdb {return nil ,_fef .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_eeee !="\u0050\u0061\u0067\u0065"{return nil ,_fef .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _dgaad :=_fcfff .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_dgaad !=nil {_fbeaa .Parent =_dgaad ;};if _cgfec :=_fcfff .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_cgfec !=nil {_ggdec ,_gbedd :=_fb .GetString (_cgfec );
if !_gbedd {return nil ,_fef .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_fbgaf ,_cgceba :=NewPdfDate (_ggdec .Str ());if _cgceba !=nil {return nil ,_cgceba ;};_fbeaa .LastModified =&_fbgaf ;};if _gcffb :=_fcfff .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gcffb !=nil &&!_fb .IsNullObject (_gcffb ){_adgab ,_bgedg :=_fb .GetDict (_gcffb );
if !_bgedg {return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gcffb );};var _edbac error ;_fbeaa .Resources ,_edbac =NewPdfPageResourcesFromDict (_adgab );
if _edbac !=nil {return nil ,_edbac ;};}else {_gegc ,_aaagd :=_fbeaa .getParentResources ();if _aaagd !=nil {return nil ,_aaagd ;};if _gegc ==nil {_gegc =NewPdfPageResources ();};_fbeaa .Resources =_gegc ;};if _fbcgg :=_fcfff .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_fbcgg !=nil {_cgegc ,_gbabg :=_fb .GetArray (_fbcgg );if !_gbabg {return nil ,_fef .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _fadfa error ;
_fbeaa .MediaBox ,_fadfa =NewPdfRectangle (*_cgegc );if _fadfa !=nil {return nil ,_fadfa ;};};if _eeaef :=_fcfff .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_eeaef !=nil {_bfbdd ,_ceebe :=_fb .GetArray (_eeaef );if !_ceebe {return nil ,_fef .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _feeb error ;_fbeaa .CropBox ,_feeb =NewPdfRectangle (*_bfbdd );if _feeb !=nil {return nil ,_feeb ;};};if _bagac :=_fcfff .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_bagac !=nil {_gbdfa ,_fgafa :=_fb .GetArray (_bagac );if !_fgafa {return nil ,_fef .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _fcdg error ;_fbeaa .BleedBox ,_fcdg =NewPdfRectangle (*_gbdfa );if _fcdg !=nil {return nil ,_fcdg ;};};if _baea :=_fcfff .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_baea !=nil {_ecee ,_bgdee :=_fb .GetArray (_baea );if !_bgdee {return nil ,_fef .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _efcdd error ;_fbeaa .TrimBox ,_efcdd =NewPdfRectangle (*_ecee );if _efcdd !=nil {return nil ,_efcdd ;};};if _gbbfd :=_fcfff .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_gbbfd !=nil {_gadcf ,_eadbge :=_fb .GetArray (_gbbfd );if !_eadbge {return nil ,_fef .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _dcgee error ;_fbeaa .ArtBox ,_dcgee =NewPdfRectangle (*_gadcf );if _dcgee !=nil {return nil ,_dcgee ;};};if _eaaa :=_fcfff .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_eaaa !=nil {_fbeaa .BoxColorInfo =_eaaa ;};if _bebd :=_fcfff .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_bebd !=nil {_fbeaa .Contents =_bebd ;};if _abafd :=_fcfff .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_abafd !=nil {_gcbcg ,_dcff :=_fb .GetInt (_abafd );if !_dcff {return nil ,_fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_aaggg :=int64 (*_gcbcg );_fbeaa .Rotate =&_aaggg ;};if _ebbda :=_fcfff .Get ("\u0047\u0072\u006fu\u0070");_ebbda !=nil {_fbeaa .Group =_ebbda ;};if _ecddf :=_fcfff .Get ("\u0054\u0068\u0075m\u0062");_ecddf !=nil {_fbeaa .Thumb =_ecddf ;};if _bccdf :=_fcfff .Get ("\u0042");
_bccdf !=nil {_fbeaa .B =_bccdf ;};if _gaad :=_fcfff .Get ("\u0044\u0075\u0072");_gaad !=nil {_fbeaa .Dur =_gaad ;};if _ffcdb :=_fcfff .Get ("\u0054\u0072\u0061n\u0073");_ffcdb !=nil {_fbeaa .Trans =_ffcdb ;};if _fgdgg :=_fcfff .Get ("\u0041\u0041");_fgdgg !=nil {_fbeaa .AA =_fgdgg ;
};if _ggef :=_fcfff .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ggef !=nil {_fbeaa .Metadata =_ggef ;};if _cbedd :=_fcfff .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_cbedd !=nil {_fbeaa .PieceInfo =_cbedd ;};if _bfcfe :=_fcfff .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_bfcfe !=nil {_fbeaa .StructParents =_bfcfe ;};if _gbccg :=_fcfff .Get ("\u0049\u0044");_gbccg !=nil {_fbeaa .ID =_gbccg ;};if _dfddfd :=_fcfff .Get ("\u0050\u005a");_dfddfd !=nil {_fbeaa .PZ =_dfddfd ;};if _gfgea :=_fcfff .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_gfgea !=nil {_fbeaa .SeparationInfo =_gfgea ;};if _gaeff :=_fcfff .Get ("\u0054\u0061\u0062\u0073");_gaeff !=nil {_fbeaa .Tabs =_gaeff ;};if _fgegg :=_fcfff .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_fgegg !=nil {_fbeaa .TemplateInstantiated =_fgegg ;};if _ebgfg :=_fcfff .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_ebgfg !=nil {_fbeaa .PresSteps =_ebgfg ;};if _gafg :=_fcfff .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_gafg !=nil {_fbeaa .UserUnit =_gafg ;
};if _daadd :=_fcfff .Get ("\u0056\u0050");_daadd !=nil {_fbeaa .VP =_daadd ;};if _fedf :=_fcfff .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_fedf !=nil {_fbeaa .Annots =_fedf ;};_fbeaa ._bacgdg =_gegf ;return _fbeaa ,nil ;};func _eeccf (_bagf *_fb .PdfObjectDictionary ,_abga *fontCommon )(*pdfFontType0 ,error ){_bdec ,_ecg :=_fb .GetArray (_bagf .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_ecg {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_abga );
return nil ,_fb .ErrRangeError ;};if _bdec .Len ()!=1{_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_bdec .Len ());return nil ,_fb .ErrRangeError ;
};_adbf ,_bedbg :=_cacaa (_bdec .Get (0),false );if _bedbg !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_bedbg ,_abga );
return nil ,_bedbg ;};_gfabf :=_afba (_abga );_gfabf .DescendantFont =_adbf ;_edfgc ,_ecg :=_fb .GetNameVal (_bagf .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _ecg {if _edfgc =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_edfgc =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_gfabf ._bcfef =_gc .NewIdentityTextEncoder (_edfgc );
}else if _edb .IsPredefinedCMap (_edfgc ){_gfabf ._bfad ,_bedbg =_edb .LoadPredefinedCMap (_edfgc );if _bedbg !=nil {_gb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_edfgc ,_bedbg );
};}else {_gb .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_edfgc );};};if _gecd :=_adbf .baseFields ()._acfd ;_gecd !=nil {if _acccc :=_gecd .Name ();_acccc =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_acccc =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_acccc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_acccc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_gfabf ._bcfef =_gc .NewCMapEncoder (_edfgc ,_gfabf ._bfad ,_gecd );
};};return _gfabf ,nil ;};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_fdcb *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _fef .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_fdcb .S =subtype ;return nil ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_agdg *PdfFont )ToPdfObject ()_fb .PdfObject {if _agdg ._gcfd ==nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _fb .MakeNull ();
};return _agdg ._gcfd .ToPdfObject ();};

// IsCID returns true if the underlying font is CID.
func (_cabgd *PdfFont )IsCID ()bool {return _cabgd .baseFields ().isCIDFont ()};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_acb :=NewPdfAction ();_gba :=&PdfActionSubmitForm {};_gba .PdfAction =_acb ;_acb .SetContext (_gba );return _gba ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;var _ pdfFont =(*pdfFontType0 )(nil );

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_bbfd *PdfColorspaceLab )DecodeArray ()[]float64 {_ggaab :=[]float64 {0,100};if _bbfd .Range !=nil &&len (_bbfd .Range )==4{_ggaab =append (_ggaab ,_bbfd .Range ...);}else {_ggaab =append (_ggaab ,-100,100,-100,100);};return _ggaab ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fgag *PdfShadingType1 )ToPdfObject ()_fb .PdfObject {_fgag .PdfShading .ToPdfObject ();_dgacc ,_faddcg :=_fgag .getShadingDict ();if _faddcg !=nil {_gb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fgag .Domain !=nil {_dgacc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fgag .Domain );};if _fgag .Matrix !=nil {_dgacc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fgag .Matrix );};if _fgag .Function !=nil {if len (_fgag .Function )==1{_dgacc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fgag .Function [0].ToPdfObject ());
}else {_afbag :=_fb .MakeArray ();for _ ,_adede :=range _fgag .Function {_afbag .Append (_adede .ToPdfObject ());};_dgacc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afbag );};};return _fgag ._bbdbag ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_fafcg *PdfWriter )AddPage (page *PdfPage )error {const _dfcga ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_cbeab (page );_accg :=page .ToPdfObject ();_gb .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_gb .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_accg );_fegdc ,_adfec :=_fb .GetIndirect (_accg );if !_adfec {return _fef .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_gb .Log .Trace ("\u0025\u0073",_fegdc );_gb .Log .Trace ("\u0025\u0073",_fegdc .PdfObject );_gccf ,_adfec :=_fb .GetDict (_fegdc .PdfObject );if !_adfec {return _fef .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cgffab ,_adfec :=_fb .GetName (_gccf .Get ("\u0054\u0079\u0070\u0065"));if !_adfec {return _f .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_gccf .Get ("\u0054\u0079\u0070\u0065"));
};if _cgffab .String ()!="\u0050\u0061\u0067\u0065"{return _fef .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_ccafg :=[]_fb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_aeggf ,_fgae :=_fb .GetIndirect (_gccf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_gb .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_gccf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_fgae );
for _fgae {_gb .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_aeggf );_bgfbaa ,_bgbbc :=_fb .GetDict (_aeggf .PdfObject );if !_bgbbc {return _fef .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_dcfdc :=range _ccafg {_gb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_dcfdc );if _gccf .Get (_dcfdc )!=nil {_gb .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _badd :=_bgfbaa .Get (_dcfdc );_badd !=nil {_gb .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_dcfdc );_gccf .Set (_dcfdc ,_badd );};};_aeggf ,_fgae =_fb .GetIndirect (_bgfbaa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_gb .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bgfbaa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_gb .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_gccf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fafcg ._bdefb );_fegdc .PdfObject =_gccf ;_cbdbc ,_adfec :=_fb .GetDict (_fafcg ._bdefb .PdfObject );if !_adfec {return _fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_gfdgd ,_adfec :=_fb .GetArray (_cbdbc .Get ("\u004b\u0069\u0064\u0073"));if !_adfec {return _fef .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_gfdgd .Append (_fegdc );_fafcg ._fabefb [_gccf ]=struct{}{};_cddea ,_adfec :=_fb .GetInt (_cbdbc .Get ("\u0043\u006f\u0075n\u0074"));if !_adfec {return _fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_cddea =*_cddea +1;if page ._bacgdg ==nil {_ceegdc :=_ge .Track (_fafcg ._bcadc ,_dfcga );if _ceegdc !=nil {return _ceegdc ;};}else {_baaec :=_ge .Track (page ._bacgdg ._cbea ,_dfcga );if _baaec !=nil {return _baaec ;};};_fafcg .addObject (_fegdc );
_dafc :=_fafcg .addObjects (_gccf );if _dafc !=nil {return _dafc ;};return nil ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_babf FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_babf .Mask ()&^fl .Mask ())};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_febgd :_fb .MakeDict (),ColorComponents :colorComponents };
};var (CourierName =_ba .CourierName ;CourierBoldName =_ba .CourierBoldName ;CourierObliqueName =_ba .CourierObliqueName ;CourierBoldObliqueName =_ba .CourierBoldObliqueName ;HelveticaName =_ba .HelveticaName ;HelveticaBoldName =_ba .HelveticaBoldName ;
HelveticaObliqueName =_ba .HelveticaObliqueName ;HelveticaBoldObliqueName =_ba .HelveticaBoldObliqueName ;SymbolName =_ba .SymbolName ;ZapfDingbatsName =_ba .ZapfDingbatsName ;TimesRomanName =_ba .TimesRomanName ;TimesBoldName =_ba .TimesBoldName ;TimesItalicName =_ba .TimesItalicName ;
TimesBoldItalicName =_ba .TimesBoldItalicName ;);func _fdcfc (_cefdb _fb .PdfObject ){_gb .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_cefdb ,_cefdb .String ());if _ceabf ,_dbaca :=_cefdb .(*_fb .PdfObjectStream );_dbaca {_cddg ,_aeafa :=_fb .DecodeStream (_ceabf );
if _aeafa !=nil {_gb .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_aeafa );return ;};_gb .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_cddg );}else if _eacabd ,_dbcfga :=_cefdb .(*_fb .PdfIndirectObject );
_dbcfga {_gb .Log .Debug ("\u0025\u0054\u0020%\u0076",_eacabd .PdfObject ,_eacabd .PdfObject );_gb .Log .Debug ("\u0025\u0073",_eacabd .PdfObject .String ());};};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_eff :=NewPdfAction ();_ea :=&PdfActionRendition {};_ea .PdfAction =_eff ;_eff .SetContext (_ea );return _ea ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_dgfd *PdfFont )CharcodesToUnicode (charcodes []_gc .CharCode )[]rune {_egcbb ,_ ,_ :=_dgfd .CharcodesToUnicodeWithStats (charcodes );return _egcbb ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _fb .PdfObject ;Mac _fb .PdfObject ;Unix _fb .PdfObject ;NewWindow _fb .PdfObject ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_fb .PdfObjectArray ;Matrix *_fb .PdfObjectArray ;Function []PdfFunction ;};func _fbeeb (_fged *_fb .PdfObjectDictionary )(*PdfShadingType7 ,error ){_cgaee :=PdfShadingType7 {};_cgfga :=_fged .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _cgfga ==nil {_gb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dgba ,_acbcg :=_cgfga .(*_fb .PdfObjectInteger );if !_acbcg {_gb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cgfga );
return nil ,_fb .ErrTypeError ;};_cgaee .BitsPerCoordinate =_dgba ;_cgfga =_fged .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cgfga ==nil {_gb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dgba ,_acbcg =_cgfga .(*_fb .PdfObjectInteger );if !_acbcg {_gb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cgfga );
return nil ,_fb .ErrTypeError ;};_cgaee .BitsPerComponent =_dgba ;_cgfga =_fged .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _cgfga ==nil {_gb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dgba ,_acbcg =_cgfga .(*_fb .PdfObjectInteger );if !_acbcg {_gb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cgfga );
return nil ,_fb .ErrTypeError ;};_cgaee .BitsPerComponent =_dgba ;_cgfga =_fged .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cgfga ==nil {_gb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eacc ,_acbcg :=_cgfga .(*_fb .PdfObjectArray );if !_acbcg {_gb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cgfga );
return nil ,_fb .ErrTypeError ;};_cgaee .Decode =_eacc ;if _fbeba :=_fged .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_fbeba !=nil {_cgaee .Function =[]PdfFunction {};if _aabbe ,_bffad :=_fbeba .(*_fb .PdfObjectArray );_bffad {for _ ,_gbbe :=range _aabbe .Elements (){_ccfad ,_cccaf :=_ggfef (_gbbe );
if _cccaf !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cccaf );return nil ,_cccaf ;};_cgaee .Function =append (_cgaee .Function ,_ccfad );
};}else {_abcbd ,_bfdd :=_ggfef (_fbeba );if _bfdd !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfdd );return nil ,_bfdd ;};
_cgaee .Function =append (_cgaee .Function ,_abcbd );};};return &_cgaee ,nil ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _fb .PdfObject ;NewWindow _fb .PdfObject ;T _fb .PdfObject ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_aege *PdfPageResources )GetColorspaceByName (keyName _fb .PdfObjectName )(PdfColorspace ,bool ){_caaea ,_aacag :=_aege .GetColorspaces ();if _aacag !=nil {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_aacag );
return nil ,false ;};if _caaea ==nil {return nil ,false ;};_daffc ,_egec :=_caaea .Colorspaces [string (keyName )];if !_egec {return nil ,false ;};return _daffc ,true ;};func (_cbfgf *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _cbfgf ._cecbb .GetCrypter ()!=nil &&!_cbfgf ._cecbb .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gegdd :=_cbfgf ._aaegf ;_cfagb :=_gegdd .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _cfagb ==nil {return nil ,nil ;};_aecd ,_ :=_fb .GetIndirect (_cfagb );_cfagb =_fb .TraceToDirectObject (_cfagb );if _fb .IsNullObject (_cfagb ){_gb .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_ceba ,_efadf :=_fb .GetDict (_cfagb );if !_efadf {_gb .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cfagb );_gb .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cfagb );};_gb .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_gb .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_cbfgf ._fdcaf {_cdgfb :=_cbfgf .traverseObjectData (_ceba );
if _cdgfb !=nil {_gb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_cdgfb );
return nil ,_cdgfb ;};};_adcf ,_bdddd :=_cbfgf .newPdfAcroFormFromDict (_aecd ,_ceba );if _bdddd !=nil {return nil ,_bdddd ;};return _adcf ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_geafc pdfFontType3 )GetRuneMetrics (r rune )(_ba .CharMetrics ,bool ){_dbcf :=_geafc .Encoder ();if _dbcf ==nil {_gb .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_geafc );
return _ba .CharMetrics {},false ;};_afccf ,_gadee :=_dbcf .RuneToCharcode (r );if !_gadee {if r !=' '{_gb .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_geafc );
};return _ba .CharMetrics {},false ;};_agea ,_defee :=_geafc .GetCharMetrics (_afccf );return _agea ,_defee ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_agf :=NewPdfAction ();_gca :=&PdfActionResetForm {};_gca .PdfAction =_agf ;_agf .SetContext (_gca );return _gca ;};func (_aea *PdfReader )newPdfAnnotationMarkupFromDict (_gbc *_fb .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_fdff :=&PdfAnnotationMarkup {};
if _acgd :=_gbc .Get ("\u0054");_acgd !=nil {_fdff .T =_acgd ;};if _ebbd :=_gbc .Get ("\u0050\u006f\u0070u\u0070");_ebbd !=nil {_fcd ,_eccg :=_ebbd .(*_fb .PdfIndirectObject );if !_eccg {if _ ,_bcdb :=_ebbd .(*_fb .PdfObjectNull );!_bcdb {return nil ,_fef .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_geg ,_cdfc :=_aea .newPdfAnnotationFromIndirectObject (_fcd );if _cdfc !=nil {return nil ,_cdfc ;};if _geg !=nil {_dgf ,_ebg :=_geg ._bfda .(*PdfAnnotationPopup );if !_ebg {return nil ,_fef .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_fdff .Popup =_dgf ;};};};if _bfb :=_gbc .Get ("\u0043\u0041");_bfb !=nil {_fdff .CA =_bfb ;};if _gfd :=_gbc .Get ("\u0052\u0043");_gfd !=nil {_fdff .RC =_gfd ;};if _bace :=_gbc .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_bace !=nil {_fdff .CreationDate =_bace ;};if _eed :=_gbc .Get ("\u0049\u0052\u0054");_eed !=nil {_fdff .IRT =_eed ;};if _afcc :=_gbc .Get ("\u0053\u0075\u0062\u006a");_afcc !=nil {_fdff .Subj =_afcc ;};if _cbcg :=_gbc .Get ("\u0052\u0054");_cbcg !=nil {_fdff .RT =_cbcg ;
};if _cggf :=_gbc .Get ("\u0049\u0054");_cggf !=nil {_fdff .IT =_cggf ;};if _bfgge :=_gbc .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_bfgge !=nil {_fdff .ExData =_bfgge ;};return _fdff ,nil ;};func _bbeb (_dgde *_fb .PdfObjectDictionary )(*PdfTilingPattern ,error ){_cbac :=&PdfTilingPattern {};
_ddfef :=_dgde .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _ddfef ==nil {_gb .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gfcg ,_bbcg :=_ddfef .(*_fb .PdfObjectInteger );
if !_bbcg {_gb .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ddfef );return nil ,_fb .ErrTypeError ;
};_cbac .PaintType =_gfcg ;_ddfef =_dgde .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ddfef ==nil {_gb .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_caefd ,_bbcg :=_ddfef .(*_fb .PdfObjectInteger );if !_bbcg {_gb .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddfef );
return nil ,_fb .ErrTypeError ;};_cbac .TilingType =_caefd ;_ddfef =_dgde .Get ("\u0042\u0042\u006f\u0078");if _ddfef ==nil {_gb .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_ddfef =_fb .TraceToDirectObject (_ddfef );_defbd ,_bbcg :=_ddfef .(*_fb .PdfObjectArray );if !_bbcg {_gb .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddfef );
return nil ,_fb .ErrTypeError ;};_facge ,_geea :=NewPdfRectangle (*_defbd );if _geea !=nil {_gb .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_geea );return nil ,_geea ;};_cbac .BBox =_facge ;_ddfef =_dgde .Get ("\u0058\u0053\u0074e\u0070");
if _ddfef ==nil {_gb .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gebga ,_geea :=_fb .GetNumberAsFloat (_ddfef );if _geea !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_gebga );
return nil ,_geea ;};_cbac .XStep =_fb .MakeFloat (_gebga );_ddfef =_dgde .Get ("\u0059\u0053\u0074e\u0070");if _ddfef ==nil {_gb .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_fbbge ,_geea :=_fb .GetNumberAsFloat (_ddfef );if _geea !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_fbbge );
return nil ,_geea ;};_cbac .YStep =_fb .MakeFloat (_fbbge );_ddfef =_dgde .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _ddfef ==nil {_gb .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dgde ,_bbcg =_fb .TraceToDirectObject (_ddfef ).(*_fb .PdfObjectDictionary );if !_bbcg {return nil ,_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ddfef );
};_cbcga ,_geea :=NewPdfPageResourcesFromDict (_dgde );if _geea !=nil {return nil ,_geea ;};_cbac .Resources =_cbcga ;if _bbgea :=_dgde .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bbgea !=nil {_feefa ,_cdcbf :=_bbgea .(*_fb .PdfObjectArray );if !_cdcbf {_gb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbgea );
return nil ,_fb .ErrTypeError ;};_cbac .Matrix =_feefa ;};return _cbac ,nil ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _fb .PdfObject ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_defdg *PdfWriter )SetNamedDestinations (dests _fb .PdfObject )error {if dests ==nil {return nil ;};_gb .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_defdg ._aeab .Set ("\u0044\u0065\u0073t\u0073",dests );return _defdg .addObjects (dests );};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_cecbb *_fb .PdfParser ;_bgaef _fb .PdfObject ;_dffd *_fb .PdfIndirectObject ;_edadga *_fb .PdfObjectDictionary ;_fdbgc []*_fb .PdfIndirectObject ;PageList []*PdfPage ;_ddcdd int ;_aaegf *_fb .PdfObjectDictionary ;_ceace *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_fagc *modelManager ;_fdcaf bool ;_fgccc map[_fb .PdfObject ]struct{};_abae _ac .ReadSeeker ;_cbea string ;_fdbbf bool ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_fbbfg DefaultImageHandler )Read (reader _ac .Reader )(*Image ,error ){_bcdac ,_ ,_ddge :=_fa .Decode (reader );if _ddge !=nil {_gb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_ddge );
return nil ,_ddge ;};return _fbbfg .NewImageFromGoImage (_bcdac );};

// R returns the value of the red component of the color.
func (_efeec *PdfColorDeviceRGB )R ()float64 {return _efeec [0]};func _bcgcg (_acbde _fb .PdfObject )(*PdfFunctionType3 ,error ){_gcab :=&PdfFunctionType3 {};var _ddegd *_fb .PdfObjectDictionary ;if _dcagb ,_bbfge :=_acbde .(*_fb .PdfIndirectObject );_bbfge {_efcg ,_bebb :=_dcagb .PdfObject .(*_fb .PdfObjectDictionary );
if !_bebb {return nil ,_fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gcab ._cddf =_dcagb ;_ddegd =_efcg ;}else if _dagga ,_cegca :=_acbde .(*_fb .PdfObjectDictionary );_cegca {_ddegd =_dagga ;}else {return nil ,_fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fgfc ,_aadga :=_fb .TraceToDirectObject (_ddegd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fb .PdfObjectArray );if !_aadga {_gb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fef .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _fgfc .Len ()!=2{_gb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fef .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fffd ,_dcbc :=_fgfc .ToFloat64Array ();
if _dcbc !=nil {return nil ,_dcbc ;};_gcab .Domain =_fffd ;_fgfc ,_aadga =_fb .TraceToDirectObject (_ddegd .Get ("\u0052\u0061\u006eg\u0065")).(*_fb .PdfObjectArray );if _aadga {if _fgfc .Len ()< 0||_fgfc .Len ()%2!=0{return nil ,_fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_efeg ,_aaaff :=_fgfc .ToFloat64Array ();if _aaaff !=nil {return nil ,_aaaff ;};_gcab .Range =_efeg ;};_fgfc ,_aadga =_fb .TraceToDirectObject (_ddegd .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_fb .PdfObjectArray );if !_aadga {_gb .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_fef .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gcab .Functions =[]PdfFunction {};
for _ ,_fgadf :=range _fgfc .Elements (){_eefec ,_deca :=_ggfef (_fgadf );if _deca !=nil {return nil ,_deca ;};_gcab .Functions =append (_gcab .Functions ,_eefec );};_fgfc ,_aadga =_fb .TraceToDirectObject (_ddegd .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_fb .PdfObjectArray );
if !_aadga {_gb .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fef .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_agdf ,_dcbc :=_fgfc .ToFloat64Array ();if _dcbc !=nil {return nil ,_dcbc ;};_gcab .Bounds =_agdf ;if len (_gcab .Bounds )!=len (_gcab .Functions )-1{_gb .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_gcab .Bounds ),len (_gcab .Functions ));
return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgfc ,_aadga =_fb .TraceToDirectObject (_ddegd .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_fb .PdfObjectArray );if !_aadga {_gb .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fef .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ggegg ,_dcbc :=_fgfc .ToFloat64Array ();
if _dcbc !=nil {return nil ,_dcbc ;};_gcab .Encode =_ggegg ;if len (_gcab .Encode )!=2*len (_gcab .Functions ){_gb .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_gcab .Encode ),len (_gcab .Functions ));
return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _gcab ,nil ;};func (_feaad *LTV )generateVRIKey (_dggab *PdfSignature )(string ,error ){_cecde ,_gbbgf :=_afccc (_dggab .Contents .Bytes ());if _gbbgf !=nil {return "",_gbbgf ;
};return _eg .ToUpper (_b .EncodeToString (_cecde )),nil ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _fb .PdfObject ;LE _fb .PdfObject ;BS _fb .PdfObject ;IC _fb .PdfObject ;BE _fb .PdfObject ;IT _fb .PdfObject ;Measure _fb .PdfObject ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_cdee *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// ToPdfObject implements interface PdfModel.
func (_fcbcb *PdfAnnotationText )ToPdfObject ()_fb .PdfObject {_fcbcb .PdfAnnotation .ToPdfObject ();_abce :=_fcbcb ._caa ;_dff :=_abce .PdfObject .(*_fb .PdfObjectDictionary );if _fcbcb .PdfAnnotationMarkup !=nil {_fcbcb .PdfAnnotationMarkup .appendToPdfDictionary (_dff );
};_dff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0054\u0065\u0078\u0074"));_dff .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fcbcb .Open );_dff .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fcbcb .Name );_dff .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_fcbcb .State );
_dff .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_fcbcb .StateModel );return _abce ;};var _abeac =_bf .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");func (_ecbg *PdfReader )loadStructure ()error {if _ecbg ._cecbb .GetCrypter ()!=nil &&!_ecbg ._cecbb .IsAuthenticated (){return _f .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_agged :=_ecbg ._cecbb .GetTrailer ();if _agged ==nil {return _f .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_gggf ,_cbbbgb :=_agged .Get ("\u0052\u006f\u006f\u0074").(*_fb .PdfObjectReference );if !_cbbbgb {return _f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_agged );
};_dgbef ,_ddcbd :=_ecbg ._cecbb .LookupByReference (*_gggf );if _ddcbd !=nil {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_ddcbd );
return _ddcbd ;};_cbaeg ,_cbbbgb :=_dgbef .(*_fb .PdfIndirectObject );if !_cbbbgb {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_dgbef ,*_agged );
return _fef .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fabeg ,_cbbbgb :=(*_cbaeg ).PdfObject .(*_fb .PdfObjectDictionary );if !_cbbbgb {_gb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_cbaeg .PdfObject );
return _fef .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_gb .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_fabeg );_agcae ,_cbbbgb :=_fabeg .Get ("\u0050\u0061\u0067e\u0073").(*_fb .PdfObjectReference );
if !_cbbbgb {return _fef .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_dbbg ,_ddcbd :=_ecbg ._cecbb .LookupByReference (*_agcae );
if _ddcbd !=nil {_gb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _ddcbd ;};_effbd ,_cbbbgb :=_dbbg .(*_fb .PdfIndirectObject );if !_cbbbgb {_gb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_gb .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_effbd );return _fef .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_ebce ,_cbbbgb :=_effbd .PdfObject .(*_fb .PdfObjectDictionary );if !_cbbbgb {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_effbd );
return _fef .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_cecfd ,_cbbbgb :=_fb .GetInt (_ebce .Get ("\u0043\u006f\u0075n\u0074"));if !_cbbbgb {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _fef .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_cbbbgb =_fb .GetName (_ebce .Get ("\u0054\u0079\u0070\u0065"));!_cbbbgb {_gb .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_ebce .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0050\u0061\u0067e\u0073"));};if _aedac ,_eafb :=_fb .GetInt (_ebce .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_eafb {_cdacec :=int64 (*_aedac );_ecbg .Rotate =&_cdacec ;};_ecbg ._bgaef =_gggf ;
_ecbg ._aaegf =_fabeg ;_ecbg ._edadga =_ebce ;_ecbg ._dffd =_effbd ;_ecbg ._ddcdd =int (*_cecfd );_ecbg ._fdbgc =[]*_fb .PdfIndirectObject {};_edcgc :=map[_fb .PdfObject ]struct{}{};_ddcbd =_ecbg .buildPageList (_effbd ,nil ,_edcgc );if _ddcbd !=nil {return _ddcbd ;
};_gb .Log .Trace ("\u002d\u002d\u002d");_gb .Log .Trace ("\u0054\u004f\u0043");_gb .Log .Trace ("\u0050\u0061\u0067e\u0073");_gb .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_ecbg ._fdbgc ),_ecbg ._fdbgc );_ecbg ._ceace ,_ddcbd =_ecbg .loadOutlines ();
if _ddcbd !=nil {_gb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_ddcbd );
return _ddcbd ;};_ecbg .AcroForm ,_ddcbd =_ecbg .loadForms ();if _ddcbd !=nil {return _ddcbd ;};_ecbg .DSS ,_ddcbd =_ecbg .loadDSS ();if _ddcbd !=nil {return _ddcbd ;};return nil ;};var _dfde =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_gaag *_fb .PdfIndirectObject ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_bccg *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_bccg .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_bccg ._fae =acroForm ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aeeee *PdfColorspaceSpecialPattern )ToPdfObject ()_fb .PdfObject {if _aeeee .UnderlyingCS ==nil {return _fb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_adfda :=_fb .MakeArray (_fb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_adfda .Append (_aeeee .UnderlyingCS .ToPdfObject ());
if _aeeee ._fccbc !=nil {_aeeee ._fccbc .PdfObject =_adfda ;return _aeeee ._fccbc ;};return _adfda ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_edfff *PdfReader )GetTrailer ()(*_fb .PdfObjectDictionary ,error ){_fbfb :=_edfff ._cecbb .GetTrailer ();if _fbfb ==nil {return nil ,_fef .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _fbfb ,nil ;
};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_fb .PdfObjectStream ;OCSP []*_fb .PdfObjectStream ;CRL []*_fb .PdfObjectStream ;TU *_fb .PdfObjectString ;TS *_fb .PdfObjectString ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_ebcac *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _ebcac .RunesToCharcodeBytes ([]rune (str ));};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_eccc :=&PdfBorderStyle {};return _eccc };func (_aceca *PdfReader )flattenFieldsWithOpts (_ggcba bool ,_gagc FieldAppearanceGenerator ,_gfbbad *FieldFlattenOpts )error {if _gfbbad ==nil {_gfbbad =&FieldFlattenOpts {};
};var _feaa bool ;_dfbc :=map[*PdfAnnotation ]bool {};{var _edff []*PdfField ;_fafb :=_aceca .AcroForm ;if _fafb !=nil {if _gfbbad .FilterFunc !=nil {_edff =_fafb .filteredFields (_gfbbad .FilterFunc ,true );_feaa =_fafb .Fields !=nil &&len (*_fafb .Fields )> 0;
}else {_edff =_fafb .AllFields ();};};for _ ,_fbgeb :=range _edff {for _ ,_fcga :=range _fbgeb .Annotations {_dfbc [_fcga .PdfAnnotation ]=_fbgeb .V !=nil ;if _gagc !=nil {_gdbg ,_bfbb :=_gagc .GenerateAppearanceDict (_fafb ,_fbgeb ,_fcga );if _bfbb !=nil {return _bfbb ;
};_fcga .AP =_gdbg ;};};};};if _ggcba {for _ ,_aebeb :=range _aceca .PageList {_efdc ,_efbc :=_aebeb .GetAnnotations ();if _efbc !=nil {return _efbc ;};for _ ,_bgegd :=range _efdc {_dfbc [_bgegd ]=true ;};};};for _ ,_cbfcg :=range _aceca .PageList {var _ebcc []*PdfAnnotation ;
if _gagc !=nil {if _cacad :=_gagc .WrapContentStream (_cbfcg );_cacad !=nil {return _cacad ;};};_eged ,_agae :=_cbfcg .GetAnnotations ();if _agae !=nil {return _agae ;};for _ ,_fgfg :=range _eged {_fggbb ,_eefb :=_dfbc [_fgfg ];if !_eefb &&_gfbbad .AnnotFilterFunc !=nil {if _ ,_feef :=_fgfg .GetContext ().(*PdfAnnotationWidget );
!_feef {_eefb =_gfbbad .AnnotFilterFunc (_fgfg );};};if !_eefb {_ebcc =append (_ebcc ,_fgfg );continue ;};switch _fgfg .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_eddf ,_gdce ,_cccgb :=_bgbg (_fgfg );if _cccgb !=nil {if !_fggbb {_gb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_cccgb );
continue ;};if _eddf ==nil {continue ;};_beca :=_cbfcg .Resources .GenerateXObjectName ();_cbfcg .Resources .SetXObjectFormByName (_beca ,_eddf );_daggb :=_eda .Min (_gdce .Llx ,_gdce .Urx );_accff :=_eda .Min (_gdce .Lly ,_gdce .Ury );var _daf []string ;
_daf =append (_daf ,"\u0071");_daf =append (_daf ,_f .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_daggb ,_accff ));
_daf =append (_daf ,_f .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_beca .String ()));_daf =append (_daf ,"\u0051");_bfded :=_eg .Join (_daf ,"\u000a");_cccgb =_cbfcg .AppendContentStream (_bfded );if _cccgb !=nil {return _cccgb ;};if _eddf .Resources !=nil {_ecfd ,_agce :=_fb .GetDict (_eddf .Resources .Font );
if _agce {for _ ,_beaa :=range _ecfd .Keys (){if !_cbfcg .Resources .HasFontByName (_beaa ){_cbfcg .Resources .SetFontByName (_beaa ,_ecfd .Get (_beaa ));};};};};};if len (_ebcc )> 0{_cbfcg ._ddad =_ebcc ;}else {_cbfcg ._ddad =[]*PdfAnnotation {};};};if !_feaa {_aceca .AcroForm =nil ;
};return nil ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_fb .PdfObjectName ;Colorants _fb .PdfObject ;Process _fb .PdfObject ;MixingHints _fb .PdfObject ;_dgad *_fb .PdfIndirectObject ;};func (_cedeg *PdfReader )lookupPageByObject (_fcbe _fb .PdfObject )(*PdfPage ,error ){return nil ,_fef .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_cgd :=NewPdfAction ();_badf :=&PdfActionGoTo3DView {};_badf .PdfAction =_cgd ;_cgd .SetContext (_badf );return _badf ;};func _ggfef (_dgfdd _fb .PdfObject )(PdfFunction ,error ){_dgfdd =_fb .ResolveReference (_dgfdd );
if _fcec ,_beafb :=_dgfdd .(*_fb .PdfObjectStream );_beafb {_abdef :=_fcec .PdfObjectDictionary ;_geec ,_cecg :=_abdef .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fb .PdfObjectInteger );if !_cecg {_gb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_fef .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_geec ==0{return _bcbgaa (_fcec );}else if *_geec ==4{return _fbed (_fcec );
}else {return nil ,_fef .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _egegb ,_dbdac :=_dgfdd .(*_fb .PdfIndirectObject );_dbdac {_efae ,_edcc :=_egegb .PdfObject .(*_fb .PdfObjectDictionary );
if !_edcc {_gb .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_fef .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_feffe ,_edcc :=_efae .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fb .PdfObjectInteger );
if !_edcc {_gb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fef .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_feffe ==2{return _acgba (_egegb );}else if *_feffe ==3{return _bcgcg (_egegb );}else {return nil ,_fef .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _addba ,_dafea :=_dgfdd .(*_fb .PdfObjectDictionary );
_dafea {_bcaa ,_ffecb :=_addba .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fb .PdfObjectInteger );if !_ffecb {_gb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_fef .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bcaa ==2{return _acgba (_addba );}else if *_bcaa ==3{return _bcgcg (_addba );
}else {return nil ,_fef .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_gb .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_dgfdd );
return nil ,_fef .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);var _ pdfFont =(*pdfCIDFontType0 )(nil );

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_fceaf *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _ebdbd []*PdfOutlineTreeNode ;var _gdab []string ;var _ecce func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_ecce =func (_cbda *PdfOutlineTreeNode ,_adgdd *[]*PdfOutlineTreeNode ,_becac *[]string ,_aefd int ){if _cbda ==nil {return ;
};if _cbda ._eafe ==nil {_gb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_ccabc ,_egcae :=_cbda ._eafe .(*PdfOutlineItem );if _egcae {*_adgdd =append (*_adgdd ,&_ccabc .PdfOutlineTreeNode );
_gccde :=_eg .Repeat ("\u0020",_aefd *2)+_ccabc .Title .Decoded ();*_becac =append (*_becac ,_gccde );};if _cbda .First !=nil {_fcbd :=_eg .Repeat ("\u0020",_aefd *2)+"\u002b";*_becac =append (*_becac ,_fcbd );_ecce (_cbda .First ,_adgdd ,_becac ,_aefd +1);
};if _egcae &&_ccabc .Next !=nil {_ecce (_ccabc .Next ,_adgdd ,_becac ,_aefd );};};_ecce (_fceaf ._ceace ,&_ebdbd ,&_gdab ,0);return _ebdbd ,_gdab ,nil ;};func (_eeaag *PdfWriter )copyObject (_ebgda _fb .PdfObject ,_ggfcaa map[_fb .PdfObject ]_fb .PdfObject ,_aecec map[_fb .PdfObject ]struct{},_edgcbb bool )_fb .PdfObject {_babeg :=!_eeaag ._geefd &&_aecec !=nil ;
if _cabb ,_dfeeb :=_ggfcaa [_ebgda ];_dfeeb {if _babeg &&!_edgcbb {delete (_aecec ,_ebgda );};return _cabb ;};_fbcfd :=_ebgda ;switch _dafgf :=_ebgda .(type ){case *_fb .PdfObjectArray :_bdbbgd :=_fb .MakeArray ();_fbcfd =_bdbbgd ;_ggfcaa [_ebgda ]=_fbcfd ;
for _ ,_cadfd :=range _dafgf .Elements (){_bdbbgd .Append (_eeaag .copyObject (_cadfd ,_ggfcaa ,_aecec ,_edgcbb ));};case *_fb .PdfObjectStreams :_dgddg :=&_fb .PdfObjectStreams {PdfObjectReference :_dafgf .PdfObjectReference };_fbcfd =_dgddg ;_ggfcaa [_ebgda ]=_fbcfd ;
for _ ,_fdaage :=range _dafgf .Elements (){_dgddg .Append (_eeaag .copyObject (_fdaage ,_ggfcaa ,_aecec ,_edgcbb ));};case *_fb .PdfObjectStream :_cbbce :=&_fb .PdfObjectStream {Stream :_dafgf .Stream ,PdfObjectReference :_dafgf .PdfObjectReference };_fbcfd =_cbbce ;
_ggfcaa [_ebgda ]=_fbcfd ;_cbbce .PdfObjectDictionary =_eeaag .copyObject (_dafgf .PdfObjectDictionary ,_ggfcaa ,_aecec ,_edgcbb ).(*_fb .PdfObjectDictionary );case *_fb .PdfObjectDictionary :var _bafef bool ;if _babeg &&!_edgcbb {if _gacfe ,_ :=_fb .GetNameVal (_dafgf .Get ("\u0054\u0079\u0070\u0065"));
_gacfe =="\u0050\u0061\u0067\u0065"{_ ,_gdffa :=_eeaag ._fabefb [_dafgf ];_edgcbb =!_gdffa ;_bafef =_edgcbb ;};};_bfdbd :=_fb .MakeDict ();_fbcfd =_bfdbd ;_ggfcaa [_ebgda ]=_fbcfd ;for _ ,_bede :=range _dafgf .Keys (){_bfdbd .Set (_bede ,_eeaag .copyObject (_dafgf .Get (_bede ),_ggfcaa ,_aecec ,_edgcbb ));
};if _bafef {_fbcfd =_fb .MakeNull ();_edgcbb =false ;};case *_fb .PdfIndirectObject :_gfdea :=&_fb .PdfIndirectObject {PdfObjectReference :_dafgf .PdfObjectReference };_fbcfd =_gfdea ;_ggfcaa [_ebgda ]=_fbcfd ;_gfdea .PdfObject =_eeaag .copyObject (_dafgf .PdfObject ,_ggfcaa ,_aecec ,_edgcbb );
case *_fb .PdfObjectString :_dfgd :=*_dafgf ;_fbcfd =&_dfgd ;_ggfcaa [_ebgda ]=_fbcfd ;case *_fb .PdfObjectName :_efafd :=*_dafgf ;_fbcfd =&_efafd ;_ggfcaa [_ebgda ]=_fbcfd ;case *_fb .PdfObjectNull :_fbcfd =_fb .MakeNull ();_ggfcaa [_ebgda ]=_fbcfd ;case *_fb .PdfObjectInteger :_dffe :=*_dafgf ;
_fbcfd =&_dffe ;_ggfcaa [_ebgda ]=_fbcfd ;case *_fb .PdfObjectReference :_eeffg :=*_dafgf ;_fbcfd =&_eeffg ;_ggfcaa [_ebgda ]=_fbcfd ;case *_fb .PdfObjectFloat :_aefec :=*_dafgf ;_fbcfd =&_aefec ;_ggfcaa [_ebgda ]=_fbcfd ;case *_fb .PdfObjectBool :_adcef :=*_dafgf ;
_fbcfd =&_adcef ;_ggfcaa [_ebgda ]=_fbcfd ;case *pdfSignDictionary :_bdddc :=&pdfSignDictionary {PdfObjectDictionary :_fb .MakeDict (),_acfga :_dafgf ._acfga ,_efde :_dafgf ._efde };_fbcfd =_bdddc ;_ggfcaa [_ebgda ]=_fbcfd ;for _ ,_fdbef :=range _dafgf .Keys (){_bdddc .Set (_fdbef ,_eeaag .copyObject (_dafgf .Get (_fdbef ),_ggfcaa ,_aecec ,_edgcbb ));
};default:_gb .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_ebgda );
};if _babeg &&_edgcbb {_aecec [_ebgda ]=struct{}{};};return _fbcfd ;};func _egabe (_gebc *_fb .PdfObjectDictionary ,_aaeec *fontCommon ,_fcbcc _gc .TextEncoder )(*pdfFontSimple ,error ){_ceff :=_gecg (_aaeec );_ceff ._cegf =_fcbcc ;if _fcbcc ==nil {_bcbd :=_gebc .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _bcbd ==nil {_bcbd =_fb .MakeInteger (0);};_ceff .FirstChar =_bcbd ;_gbaeb ,_bcfc :=_fb .GetIntVal (_bcbd );if !_bcfc {_gb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bcbd );
return nil ,_fb .ErrTypeError ;};_dgabb :=_gc .CharCode (_gbaeb );_bcbd =_gebc .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _bcbd ==nil {_bcbd =_fb .MakeInteger (255);};_ceff .LastChar =_bcbd ;_gbaeb ,_bcfc =_fb .GetIntVal (_bcbd );if !_bcfc {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_bcbd );
return nil ,_fb .ErrTypeError ;};_ceaca :=_gc .CharCode (_gbaeb );_ceff ._bdac =make (map[_gc .CharCode ]float64 );_bcbd =_gebc .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _bcbd !=nil {_ceff .Widths =_bcbd ;_edfd ,_gbad :=_fb .GetArray (_bcbd );if !_gbad {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_bcbd );
return nil ,_fb .ErrTypeError ;};_fgcbb ,_ccga :=_edfd .ToFloat64Array ();if _ccga !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_ccga ;};if len (_fgcbb )!=int (_ceaca -_dgabb +1){_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_ceaca -_dgabb +1,len (_fgcbb ));
return nil ,_fb .ErrRangeError ;};for _ccgag ,_agda :=range _fgcbb {_ceff ._bdac [_dgabb +_gc .CharCode (_ccgag )]=_agda ;};};};_ceff .Encoding =_fb .TraceToDirectObject (_gebc .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _ceff ,nil ;
};func _gecf (_dfeef []byte )bool {if len (_dfeef )< 4{return true ;};for _gcbbd :=range _dfeef [:4]{_egafa :=rune (_gcbbd );if !_gg .Is (_gg .ASCII_Hex_Digit ,_egafa )&&!_gg .IsSpace (_egafa ){return true ;};};return false ;};

// IsValid checks if the given pdf output intent type is valid.
func (_fefaa PdfOutputIntentType )IsValid ()bool {return _fefaa >=PdfOutputIntentTypeA1 &&_fefaa <=PdfOutputIntentTypeX ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_feec FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_feec .Mask ()|fl .Mask ())};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_fb .PdfObjectBool ;SigFlags *_fb .PdfObjectInteger ;CO *_fb .PdfObjectArray ;DR *PdfPageResources ;DA *_fb .PdfObjectString ;Q *_fb .PdfObjectInteger ;XFA _fb .PdfObject ;_degd *_fb .PdfIndirectObject ;
};func (_ddefe *PdfReader )newPdfAnnotationScreenFromDict (_dbb *_fb .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_bfedd :=PdfAnnotationScreen {};_bfedd .T =_dbb .Get ("\u0054");_bfedd .MK =_dbb .Get ("\u004d\u004b");_bfedd .A =_dbb .Get ("\u0041");
_bfedd .AA =_dbb .Get ("\u0041\u0041");return &_bfedd ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_becc *Image )ColorAt (x ,y int )(_ad .Color ,error ){_ddbcf :=_egf .BytesPerLine (int (_becc .Width ),int (_becc .BitsPerComponent ),_becc .ColorComponents );switch _becc .ColorComponents {case 1:return _egf .ColorAtGrayscale (x ,y ,int (_becc .BitsPerComponent ),_ddbcf ,_becc .Data ,_becc ._cdgb );
case 3:return _egf .ColorAtNRGBA (x ,y ,int (_becc .Width ),_ddbcf ,int (_becc .BitsPerComponent ),_becc .Data ,_becc ._adecb ,_becc ._cdgb );case 4:return _egf .ColorAtCMYK (x ,y ,int (_becc .Width ),_becc .Data ,_becc ._cdgb );};_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_becc .ColorComponents ,_becc .BitsPerComponent );
return nil ,_fef .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// RemovePage removes a page by number.
func (_aae *PdfAppender )RemovePage (pageNum int ){_dfbg :=pageNum -1;_aae ._bdf =append (_aae ._bdf [0:_dfbg ],_aae ._bdf [pageNum :]...);};func (_abdad *PdfWriter )checkCrossReferenceStream ()bool {_dacff :=_abdad ._effda .Major > 1||(_abdad ._effda .Major ==1&&_abdad ._effda .Minor > 4);
if _abdad ._acfeb !=nil {_dacff =*_abdad ._acfeb ;};return _dacff ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_begf :=PdfColorDeviceRGB {r ,g ,b };return &_begf ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_eeaee *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_fafdd :=_eeaee .GetContentStreamObjs ();wrapContents =wrapContents &&len (_fafdd )> 0;_ggaf :=_fb .NewFlateEncoder ();_fbae :=_fb .MakeArray ();if wrapContents {_eabb ,_cceea :=_fb .MakeStream ([]byte ("\u0071\u000a"),_ggaf );
if _cceea !=nil {return _cceea ;};_fbae .Append (_eabb );};_fbae .Append (_fafdd ...);if wrapContents {_fbgb ,_adeaf :=_fb .MakeStream ([]byte ("\u000a\u0051\u000a"),_ggaf );if _adeaf !=nil {return _adeaf ;};_fbae .Append (_fbgb );};_dfbafg ,_afcca :=_fb .MakeStream (cs ,_ggaf );
if _afcca !=nil {return _afcca ;};_fbae .Append (_dfbafg );_eeaee .Contents =_fbae ;return nil ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_abdega *XObjectImage )ToImage ()(*Image ,error ){_cdbdd :=&Image {};if _abdega .Height ==nil {return nil ,_fef .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_cdbdd .Height =*_abdega .Height ;if _abdega .Width ==nil {return nil ,_fef .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_cdbdd .Width =*_abdega .Width ;if _abdega .BitsPerComponent ==nil {switch _abdega .Filter .(type ){case *_fb .CCITTFaxEncoder ,*_fb .JBIG2Encoder :_cdbdd .BitsPerComponent =1;
case *_fb .LZWEncoder ,*_fb .RunLengthEncoder :_cdbdd .BitsPerComponent =8;default:return nil ,_fef .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_cdbdd .BitsPerComponent =*_abdega .BitsPerComponent ;};_cdbdd .ColorComponents =_abdega .ColorSpace .GetNumComponents ();_abdega ._badaab .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fb .MakeInteger (int64 (_cdbdd .ColorComponents )));
_abgfg ,_bfbaf :=_fb .DecodeStream (_abdega ._badaab );if _bfbaf !=nil {return nil ,_bfbaf ;};_cdbdd .Data =_abgfg ;if _abdega .Decode !=nil {_cddcc ,_bgfbab :=_abdega .Decode .(*_fb .PdfObjectArray );if !_bgfbab {_gb .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_fef .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_adfgd ,_egaab :=_cddcc .ToFloat64Array ();if _egaab !=nil {return nil ,_egaab ;};_cdbdd ._cdgb =_adfgd ;};return _cdbdd ,nil ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_dadd *PdfTilingPattern )ToPdfObject ()_fb .PdfObject {_dadd .PdfPattern .ToPdfObject ();_decf :=_dadd .getDict ();if _dadd .PaintType !=nil {_decf .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_dadd .PaintType );};if _dadd .TilingType !=nil {_decf .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_dadd .TilingType );
};if _dadd .BBox !=nil {_decf .Set ("\u0042\u0042\u006f\u0078",_dadd .BBox .ToPdfObject ());};if _dadd .XStep !=nil {_decf .Set ("\u0058\u0053\u0074e\u0070",_dadd .XStep );};if _dadd .YStep !=nil {_decf .Set ("\u0059\u0053\u0074e\u0070",_dadd .YStep );
};if _dadd .Resources !=nil {_decf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dadd .Resources .ToPdfObject ());};if _dadd .Matrix !=nil {_decf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dadd .Matrix );};return _dadd ._aadcb ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _fb .PdfObject ;T3DV _fb .PdfObject ;T3DA _fb .PdfObject ;T3DI _fb .PdfObject ;T3DB _fb .PdfObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_fbgd *PdfColorspaceLab )GetNumComponents ()int {return 3};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_ffbde :=PdfColorCalRGB {a ,b ,c };return &_ffbde ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _fb .PdfObject ;Flags _fb .PdfObject ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_dfdf *pdfFontSimple )ToPdfObject ()_fb .PdfObject {if _dfdf ._afdd ==nil {_dfdf ._afdd =&_fb .PdfIndirectObject {};};_ddbed :=_dfdf .baseFields ().asPdfObjectDictionary ("");_dfdf ._afdd .PdfObject =_ddbed ;if _dfdf .FirstChar !=nil {_ddbed .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_dfdf .FirstChar );
};if _dfdf .LastChar !=nil {_ddbed .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_dfdf .LastChar );};if _dfdf .Widths !=nil {_ddbed .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_dfdf .Widths );};if _dfdf .Encoding !=nil {_ddbed .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dfdf .Encoding );
}else if _dfdf ._fabfd !=nil {_baffc :=_dfdf ._fabfd .ToPdfObject ();if _baffc !=nil {_ddbed .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_baffc );};};return _dfdf ._afdd ;};

// ToPdfObject implements model.PdfModel interface.
func (_cgcf *PdfOutputIntent )ToPdfObject ()_fb .PdfObject {if _cgcf ._febgd ==nil {_cgcf ._febgd =_fb .MakeDict ();};_bdfa :=_cgcf ._febgd ;if _cgcf .Type !=""{_bdfa .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName (_cgcf .Type ));};_bdfa .Set ("\u0053",_fb .MakeName (_cgcf .S .String ()));
if _cgcf .OutputCondition !=""{_bdfa .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_fb .MakeString (_cgcf .OutputCondition ));};_bdfa .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_fb .MakeString (_cgcf .OutputConditionIdentifier ));
_bdfa .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_fb .MakeString (_cgcf .RegistryName ));if _cgcf .Info !=""{_bdfa .Set ("\u0049\u006e\u0066\u006f",_fb .MakeString (_cgcf .Info ));};if len (_cgcf .DestOutputProfile )!=0{_cbaf ,_ddcgc :=_fb .MakeStream (_cgcf .DestOutputProfile ,_fb .NewFlateEncoder ());
if _ddcgc !=nil {_gb .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ddcgc );
};_cbaf .PdfObjectDictionary .Set ("\u004e",_fb .MakeInteger (int64 (_cgcf .ColorComponents )));_fdfgf :=make ([]float64 ,_cgcf .ColorComponents *2);for _cbefe :=0;_cbefe < _cgcf .ColorComponents *2;_cbefe ++{_cbgeec :=0.0;if _cbefe %2!=0{_cbgeec =1.0;
};_fdfgf [_cbefe ]=_cbgeec ;};_cbaf .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_fb .MakeArrayFromFloats (_fdfgf ));_bdfa .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_cbaf );};return _bdfa ;
};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_abcbf *PdfPage )SetContentStreams (cStreams []string ,encoder _fb .StreamEncoder )error {if len (cStreams )==0{_abcbf .Contents =nil ;return nil ;};if encoder ==nil {encoder =_fb .NewRawEncoder ();};var _ccfc []*_fb .PdfObjectStream ;for _ ,_dafd :=range cStreams {_cdddd :=&_fb .PdfObjectStream {};
_dcafd :=encoder .MakeStreamDict ();_begeae ,_cacb :=encoder .EncodeBytes ([]byte (_dafd ));if _cacb !=nil {return _cacb ;};_dcafd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fb .MakeInteger (int64 (len (_begeae ))));_cdddd .PdfObjectDictionary =_dcafd ;
_cdddd .Stream =_begeae ;_ccfc =append (_ccfc ,_cdddd );};if len (_ccfc )==1{_abcbf .Contents =_ccfc [0];}else {_fadefg :=_fb .MakeArray ();for _ ,_gcae :=range _ccfc {_fadefg .Append (_gcae );};_abcbf .Contents =_fadefg ;};return nil ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fb .PdfObject ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_fgda *PdfPage )GetContainingPdfObject ()_fb .PdfObject {return _fgda ._dfbd };

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_beec :=PdfColorLab {l ,a ,b };return &_beec };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_afce *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_afce .Base .GetNumComponents ();_gaab :=int (vals [0])*N ;
if _gaab < 0||(_gaab +N -1)>=len (_afce ._cdcac ){return nil ,_fef .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_dccdd :=_afce ._cdcac [_gaab :_gaab +N ];var _abaf []float64 ;for _ ,_ccg :=range _dccdd {_abaf =append (_abaf ,float64 (_ccg )/255.0);
};_eebf ,_ggfgd :=_afce .Base .ColorFromFloats (_abaf );if _ggfgd !=nil {return nil ,_ggfgd ;};return _eebf ,nil ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_fb .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_cafag *_fb .PdfIndirectObject ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_egeg *PdfInfo )GetCustomInfo (name string )*_fb .PdfObjectString {var _gebfc *_fb .PdfObjectString ;if _egeg ._abdg ==nil {return _gebfc ;};if _afffb ,_befdd :=_egeg ._abdg .Get (*_fb .MakeName (name )).(*_fb .PdfObjectString );_befdd {_gebfc =_afffb ;
};return _gebfc ;};func (_ccbaa *PdfFont )baseFields ()*fontCommon {if _ccbaa ._gcfd ==nil {_gb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _ccbaa ._gcfd .baseFields ();};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_cfbe :=&PdfColorspaceSpecialSeparation {};return _cfbe ;};

// SetAnnotations sets the annotations list.
func (_gcbcc *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_gcbcc ._ddad =annotations };

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_ecde *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_dfeec :=_dg .NewReader (img .getBase ());_bbef :=_egf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_ceb :=_dg .NewWriter (_bbef );
_debec :=_eda .Pow (2,float64 (img .BitsPerComponent ))-1;_dedbe :=make ([]uint32 ,3);var (_ccdf error ;_ebcg ,_edfaa ,_gdfg ,_cgfg ,_gaeag ,_agbe float64 ;);for {_ccdf =_dfeec .ReadSamples (_dedbe );if _ccdf ==_ac .EOF {break ;}else if _ccdf !=nil {return img ,_ccdf ;
};_ebcg =float64 (_dedbe [0])/_debec ;_edfaa =float64 (_dedbe [1])/_debec ;_gdfg =float64 (_dedbe [2])/_debec ;_cgfg =_ecde .Matrix [0]*_eda .Pow (_ebcg ,_ecde .Gamma [0])+_ecde .Matrix [3]*_eda .Pow (_edfaa ,_ecde .Gamma [1])+_ecde .Matrix [6]*_eda .Pow (_gdfg ,_ecde .Gamma [2]);
_gaeag =_ecde .Matrix [1]*_eda .Pow (_ebcg ,_ecde .Gamma [0])+_ecde .Matrix [4]*_eda .Pow (_edfaa ,_ecde .Gamma [1])+_ecde .Matrix [7]*_eda .Pow (_gdfg ,_ecde .Gamma [2]);_agbe =_ecde .Matrix [2]*_eda .Pow (_ebcg ,_ecde .Gamma [0])+_ecde .Matrix [5]*_eda .Pow (_edfaa ,_ecde .Gamma [1])+_ecde .Matrix [8]*_eda .Pow (_gdfg ,_ecde .Gamma [2]);
_ebcg =3.240479*_cgfg +-1.537150*_gaeag +-0.498535*_agbe ;_edfaa =-0.969256*_cgfg +1.875992*_gaeag +0.041556*_agbe ;_gdfg =0.055648*_cgfg +-0.204043*_gaeag +1.057311*_agbe ;_ebcg =_eda .Min (_eda .Max (_ebcg ,0),1.0);_edfaa =_eda .Min (_eda .Max (_edfaa ,0),1.0);
_gdfg =_eda .Min (_eda .Max (_gdfg ,0),1.0);_dedbe [0]=uint32 (_ebcg *_debec );_dedbe [1]=uint32 (_edfaa *_debec );_dedbe [2]=uint32 (_gdfg *_debec );if _ccdf =_ceb .WriteSamples (_dedbe );_ccdf !=nil {return img ,_ccdf ;};};return _gaaa (&_bbef ),nil ;
};func (_gdb *PdfReader )newPdfActionLaunchFromDict (_ggf *_fb .PdfObjectDictionary )(*PdfActionLaunch ,error ){_bac ,_gded :=_bg (_ggf .Get ("\u0046"));if _gded !=nil {return nil ,_gded ;};return &PdfActionLaunch {Win :_ggf .Get ("\u0057\u0069\u006e"),Mac :_ggf .Get ("\u004d\u0061\u0063"),Unix :_ggf .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_ggf .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bac },nil ;
};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_cfea *PdfColorspaceDeviceN )GetNumComponents ()int {return _cfea .ColorantNames .Len ()};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _fb .PdfObject ;AN _fb .PdfObject ;OP _fb .PdfObject ;JS _fb .PdfObject ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_efbf :=NewPdfAnnotation ();_bbbe :=&PdfAnnotationSquiggly {};_bbbe .PdfAnnotation =_efbf ;_bbbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efbf .SetContext (_bbbe );return _bbbe ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_aaag pdfCIDFontType2 )GetCharMetrics (code _gc .CharCode )(_ba .CharMetrics ,bool ){if _geggb ,_bdggb :=_aaag ._ecbf [code ];_bdggb {return _ba .CharMetrics {Wx :_geggb },true ;};_cebd :=rune (code );_efbfb ,_aafdc :=_aaag ._ecfe [_cebd ];if !_aafdc {_efbfb =int (_aaag ._becd );
};return _ba .CharMetrics {Wx :float64 (_efbfb )},true ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_dgbfc *Image )SetSamples (samples []uint32 ){if _dgbfc .BitsPerComponent < 8{samples =_dgbfc .samplesAddPadding (samples );};_cbfg :=_dg .ResampleUint32 (samples ,int (_dgbfc .BitsPerComponent ),8);_gdcdf :=make ([]byte ,len (_cbfg ));for _gdbc ,_cdcaf :=range _cbfg {_gdcdf [_gdbc ]=byte (_cdcaf );
};_dgbfc .Data =_gdcdf ;};

// GetContentStream returns the pattern cell's content stream
func (_ffefg *PdfTilingPattern )GetContentStream ()([]byte ,error ){_gagd ,_ ,_cbabb :=_ffefg .GetContentStreamWithEncoder ();return _gagd ,_cbabb ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_adecb []byte ;_cdgb []float64 ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;func (_edefg *PdfReader )newPdfAnnotationSquareFromDict (_cadb *_fb .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_ggcg :=PdfAnnotationSquare {};_bcfb ,_gade :=_edefg .newPdfAnnotationMarkupFromDict (_cadb );if _gade !=nil {return nil ,_gade ;
};_ggcg .PdfAnnotationMarkup =_bcfb ;_ggcg .BS =_cadb .Get ("\u0042\u0053");_ggcg .IC =_cadb .Get ("\u0049\u0043");_ggcg .BE =_cadb .Get ("\u0042\u0045");_ggcg .RD =_cadb .Get ("\u0052\u0044");return &_ggcg ,nil ;};var (_cacda _c .Mutex ;_aegge ="";_faca _a .Time ;
_bggfc ="";_ddeac ="";_cedfc _a .Time ;_agaae ="";_egbgg ="";_efagd ="";);func (_dbacd *pdfCIDFontType0 )baseFields ()*fontCommon {return &_dbacd .fontCommon };func (_bfea *LTV )getOCSPs (_cggbb []*_bc .Certificate ,_acaa map[string ]*_bc .Certificate )([][]byte ,error ){_fggge :=make ([][]byte ,0,len (_cggbb ));
for _ ,_acgfc :=range _cggbb {for _ ,_abda :=range _acgfc .OCSPServer {if _bfea .CertClient .IsCA (_acgfc ){continue ;};_dgff ,_cadfc :=_acaa [_acgfc .Issuer .CommonName ];if !_cadfc {_gb .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_afda ,_edcgb :=_bfea .OCSPClient .MakeRequest (_abda ,_acgfc ,_dgff );if _edcgb !=nil {_gb .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_edcgb );
continue ;};_fggge =append (_fggge ,_afda );};};return _fggge ,nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_ddeca OutlineDest )ToPdfObject ()_fb .PdfObject {if (_ddeca .PageObj ==nil &&_ddeca .Page < 0)||_ddeca .Mode ==""{return _fb .MakeNull ();};_cbfa :=_fb .MakeArray ();if _ddeca .PageObj !=nil {_cbfa .Append (_ddeca .PageObj );}else {_cbfa .Append (_fb .MakeInteger (_ddeca .Page ));
};_cbfa .Append (_fb .MakeName (_ddeca .Mode ));switch _ddeca .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_cbfa .Append (_fb .MakeFloat (_ddeca .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_cbfa .Append (_fb .MakeFloat (_ddeca .X ));
case "\u0058\u0059\u005a":_cbfa .Append (_fb .MakeFloat (_ddeca .X ));_cbfa .Append (_fb .MakeFloat (_ddeca .Y ));_cbfa .Append (_fb .MakeFloat (_ddeca .Zoom ));default:_cbfa .Set (1,_fb .MakeName ("\u0046\u0069\u0074"));};return _cbfa ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;func _eadca (_ceaa *_fb .PdfObjectDictionary ,_fgef *fontCommon )(*pdfCIDFontType2 ,error ){if _fgef ._aaab !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_gb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_fgef );
return nil ,_fb .ErrRangeError ;};_gbgdd :=_ecabg (_fgef );_bggc ,_dedg :=_fb .GetDict (_ceaa .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_dedg {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fgef );
return nil ,ErrRequiredAttributeMissing ;};_gbgdd .CIDSystemInfo =_bggc ;_gbgdd .DW =_ceaa .Get ("\u0044\u0057");_gbgdd .W =_ceaa .Get ("\u0057");_gbgdd .DW2 =_ceaa .Get ("\u0044\u0057\u0032");_gbgdd .W2 =_ceaa .Get ("\u0057\u0032");_gbgdd .CIDToGIDMap =_ceaa .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_gbgdd ._becd =1000.0;if _geaed ,_dcac :=_fb .GetNumberAsFloat (_gbgdd .DW );_dcac ==nil {_gbgdd ._becd =_geaed ;};_efbde ,_dgcba :=_beecb (_gbgdd .W );if _dgcba !=nil {return nil ,_dgcba ;};if _efbde ==nil {_efbde =map[_gc .CharCode ]float64 {};};_gbgdd ._ecbf =_efbde ;
return _gbgdd ,nil ;};

// Add appends an outline item as a child of the current outline item.
func (_cccgg *OutlineItem )Add (item *OutlineItem ){_cccgg .Entries =append (_cccgg .Entries ,item )};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_degd :_fb .MakeIndirectObject (_fb .MakeDict ())};};

// GetContainingPdfObject implements interface PdfModel.
func (_ada *PdfAction )GetContainingPdfObject ()_fb .PdfObject {return _ada ._ege };

// ColorToRGB converts gray -> rgb for a single color component.
func (_fcgc *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_cgefg ,_egcd :=color .(*PdfColorDeviceGray );if !_egcd {_gb .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_cgefg ),float64 (*_cgefg ),float64 (*_cgefg )),nil ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_ebea FieldFlag )Has (fl FieldFlag )bool {return (_ebea .Mask ()&fl .Mask ())> 0};func (_adbfd *PdfWriter )addObjects (_afgdb _fb .PdfObject )error {_gb .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _dfbcd ,_cadea :=_afgdb .(*_fb .PdfIndirectObject );_cadea {_gb .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_gb .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_afgdb ,_dfbcd );_gb .Log .Trace ("\u002d\u0020\u0025\u0073",_dfbcd .PdfObject );
if _adbfd .addObject (_dfbcd ){_ccfgc :=_adbfd .addObjects (_dfbcd .PdfObject );if _ccfgc !=nil {return _ccfgc ;};};return nil ;};if _dage ,_fdaag :=_afgdb .(*_fb .PdfObjectStream );_fdaag {_gb .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_gb .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_afgdb ,_afgdb );
if _adbfd .addObject (_dage ){_ggbbc :=_adbfd .addObjects (_dage .PdfObjectDictionary );if _ggbbc !=nil {return _ggbbc ;};};return nil ;};if _cbbge ,_fbfaa :=_afgdb .(*_fb .PdfObjectDictionary );_fbfaa {_gb .Log .Trace ("\u0044\u0069\u0063\u0074");_gb .Log .Trace ("\u002d\u0020\u0025\u0073",_afgdb );
for _ ,_cbce :=range _cbbge .Keys (){_ggecg :=_cbbge .Get (_cbce );if _ecgcb ,_fcgae :=_ggecg .(*_fb .PdfObjectReference );_fcgae {_ggecg =_ecgcb .Resolve ();_cbbge .Set (_cbce ,_ggecg );};if _cbce !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _acfgea :=_adbfd .addObjects (_ggecg );
_acfgea !=nil {return _acfgea ;};}else {if _ ,_cbag :=_ggecg .(*_fb .PdfObjectNull );_cbag {continue ;};if _bcadb :=_adbfd .hasObject (_ggecg );!_bcadb {_gb .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_ggecg ,_ggecg ,_ggecg );
_adbfd ._eccf [_ggecg ]=append (_adbfd ._eccf [_ggecg ],_cbbge );};};};return nil ;};if _fgddb ,_fccf :=_afgdb .(*_fb .PdfObjectArray );_fccf {_gb .Log .Trace ("\u0041\u0072\u0072a\u0079");_gb .Log .Trace ("\u002d\u0020\u0025\u0073",_afgdb );if _fgddb ==nil {return _fef .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _dccad ,_gefeg :=range _fgddb .Elements (){if _fdega ,_ecedf :=_gefeg .(*_fb .PdfObjectReference );_ecedf {_gefeg =_fdega .Resolve ();_fgddb .Set (_dccad ,_gefeg );};if _bbfef :=_adbfd .addObjects (_gefeg );_bbfef !=nil {return _bbfef ;};};return nil ;
};if _ ,_cdefa :=_afgdb .(*_fb .PdfObjectReference );_cdefa {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_afgdb );
return _fef .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ddce *PdfActionSetOCGState )ToPdfObject ()_fb .PdfObject {_ddce .PdfAction .ToPdfObject ();_dee :=_ddce ._ege ;_ade :=_dee .PdfObject .(*_fb .PdfObjectDictionary );_ade .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeSetOCGState )));_ade .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_ddce .State );
_ade .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_ddce .PreserveRB );return _dee ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_degac *PdfPageResources )GetPatternByName (keyName _fb .PdfObjectName )(*PdfPattern ,bool ){if _degac .Pattern ==nil {return nil ,false ;};_fdaae ,_fcbg :=_fb .TraceToDirectObject (_degac .Pattern ).(*_fb .PdfObjectDictionary );if !_fcbg {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_degac .Pattern );
return nil ,false ;};if _adba :=_fdaae .Get (keyName );_adba !=nil {_dgbfb ,_edbba :=_bedd (_adba );if _edbba !=nil {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_edbba );
return nil ,false ;};return _dgbfb ,true ;};return nil ,false ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_faf .PSProgram ;_fbbg *_faf .PSExecutor ;_egegf []byte ;_dade *_fb .PdfObjectStream ;};

// ParserMetadata gets the parser  metadata.
func (_dgbg *DetailedPdfReader )ParserMetadata ()_fb .ParserMetadata {return _dgbg ._gfcd };func (_gaaba *PdfWriter )writeObjects (){_gb .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_gaaba ._cgdaa ));
_gaaba ._gfdd =make (map[int ]crossReference );_gaaba ._gfdd [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _gaaba ._gbdeg .ObjectMap !=nil {for _ddffdd ,_facgb :=range _gaaba ._gbdeg .ObjectMap {if _ddffdd ==0{continue ;};if _facgb .XType ==_fb .XrefTypeObjectStream {_fcfda :=crossReference {Type :2,ObjectNumber :_facgb .OsObjNumber ,Index :_facgb .OsObjIndex };
_gaaba ._gfdd [_ddffdd ]=_fcfda ;};if _facgb .XType ==_fb .XrefTypeTableEntry {_egade :=crossReference {Type :1,ObjectNumber :_facgb .ObjectNumber ,Offset :_facgb .Offset };_gaaba ._gfdd [_ddffdd ]=_egade ;};};};};

// AddExtGState adds a graphics state to the XObject resources.
func (_gcebb *PdfPage )AddExtGState (name _fb .PdfObjectName ,egs *_fb .PdfObjectDictionary )error {if _gcebb .Resources ==nil {_gcebb .Resources =NewPdfPageResources ();};if _gcebb .Resources .ExtGState ==nil {_gcebb .Resources .ExtGState =_fb .MakeDict ();
};_ddee ,_aefe :=_fb .TraceToDirectObject (_gcebb .Resources .ExtGState ).(*_fb .PdfObjectDictionary );if !_aefe {_gb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_fb .TraceToDirectObject (_gcebb .Resources .ExtGState ));
return _fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ddee .Set (name ,egs );return nil ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_fb .PdfObject ;};

// SetDate sets the `M` field of the signature.
func (_gdda *PdfSignature )SetDate (date _a .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_gdda .M =_fb .MakeString (date .Format (format ));
};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_fad :=NewPdfAnnotation ();_cdf :=&PdfAnnotationStamp {};_cdf .PdfAnnotation =_fad ;_cdf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fad .SetContext (_cdf );return _cdf ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_aedf *PdfPageResources )GetXObjectByName (keyName _fb .PdfObjectName )(*_fb .PdfObjectStream ,XObjectType ){if _aedf .XObject ==nil {return nil ,XObjectTypeUndefined ;};_adcfb ,_ccfe :=_fb .TraceToDirectObject (_aedf .XObject ).(*_fb .PdfObjectDictionary );
if !_ccfe {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fb .TraceToDirectObject (_aedf .XObject ));
return nil ,XObjectTypeUndefined ;};if _cgcaf :=_adcfb .Get (keyName );_cgcaf !=nil {_bcff ,_acagf :=_fb .GetStream (_cgcaf );if !_acagf {_gb .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_cgcaf );
return nil ,XObjectTypeUndefined ;};_aaggf :=_bcff .PdfObjectDictionary ;_fgca ,_acagf :=_fb .TraceToDirectObject (_aaggf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_fb .PdfObjectName );if !_acagf {_gb .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_aaggf .String ());
return nil ,XObjectTypeUndefined ;};if *_fgca =="\u0049\u006d\u0061g\u0065"{return _bcff ,XObjectTypeImage ;}else if *_fgca =="\u0046\u006f\u0072\u006d"{return _bcff ,XObjectTypeForm ;}else if *_fgca =="\u0050\u0053"{return _bcff ,XObjectTypePS ;}else {_gb .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_fgca );
return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_bfge :=NewPdfAnnotation ();_gfb :=&PdfAnnotationInk {};_gfb .PdfAnnotation =_bfge ;_gfb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfge .SetContext (_gfb );return _gfb ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_bdeg *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_fb .StreamEncoder ,error ){_faacg ,_aefeb :=_bdeg ._aadcb .(*_fb .PdfObjectStream );if !_aefeb {_gb .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdeg ._aadcb );
return nil ,nil ,_fb .ErrTypeError ;};_gbbd ,_beab :=_fb .DecodeStream (_faacg );if _beab !=nil {_gb .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_beab );
return nil ,nil ,_beab ;};_cffc ,_beab :=_fb .NewEncoderFromStream (_faacg );if _beab !=nil {_gb .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_beab );
return nil ,nil ,_beab ;};return _gbbd ,_cffc ,nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_ffda *Outline )Insert (index uint ,item *OutlineItem ){_efgdc :=uint (len (_ffda .Entries ));if index > _efgdc {index =_efgdc ;};_ffda .Entries =append (_ffda .Entries [:index ],append ([]*OutlineItem {item },_ffda .Entries [index :]...)...);};func (_gfcfe *PdfWriter )checkLicense ()error {_dacebg :=_ge .GetLicenseKey ();
if (_dacebg ==nil ||!_dacebg .IsLicensed ())&&!_febb {_f .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_f .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _fef .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_fb .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_fb .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_fb .PdfObjectBool ;_bgcg PdfModel ;_bbdbag _fb .PdfObject ;};

// WriteString outputs the object as it is to be written to file.
func (_dgfe *pdfSignDictionary )WriteString ()string {_dgfe ._ddged =0;_dgfe ._dafg =0;_dgfe ._acgeg =0;_dgfe ._aagag =0;_gffcbc :=_cb .NewBuffer (nil );_gffcbc .WriteString ("\u003c\u003c");for _ ,_dccdf :=range _dgfe .Keys (){_agbfgg :=_dgfe .Get (_dccdf );
switch _dccdf {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_gffcbc .WriteString (_dccdf .WriteString ());_gffcbc .WriteString ("\u0020");_dgfe ._acgeg =_gffcbc .Len ();_gffcbc .WriteString (_agbfgg .WriteString ());_gffcbc .WriteString ("\u0020");
_dgfe ._aagag =_gffcbc .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_gffcbc .WriteString (_dccdf .WriteString ());_gffcbc .WriteString ("\u0020");_dgfe ._ddged =_gffcbc .Len ();_gffcbc .WriteString (_agbfgg .WriteString ());_gffcbc .WriteString ("\u0020");
_dgfe ._dafg =_gffcbc .Len ()-1;default:_gffcbc .WriteString (_dccdf .WriteString ());_gffcbc .WriteString ("\u0020");_gffcbc .WriteString (_agbfgg .WriteString ());};};_gffcbc .WriteString ("\u003e\u003e");return _gffcbc .String ();};

// GetOutlineTree returns the outline tree.
func (_cfdff *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _cfdff ._ceace };

// ToPdfObject converts the font to a PDF representation.
func (_feecd *pdfFontType0 )ToPdfObject ()_fb .PdfObject {if _feecd ._bcae ==nil {_feecd ._bcae =&_fb .PdfIndirectObject {};};_gggaa :=_feecd .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_feecd ._bcae .PdfObject =_gggaa ;if _feecd .Encoding !=nil {_gggaa .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_feecd .Encoding );
}else if _feecd ._bcfef !=nil {_gggaa .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_feecd ._bcfef .ToPdfObject ());};if _feecd .DescendantFont !=nil {_gggaa .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_fb .MakeArray (_feecd .DescendantFont .ToPdfObject ()));
};return _feecd ._bcae ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_gfde int ,_gdggf *PdfPage )error ;func (_ddg *PdfReader )loadAction (_aaa _fb .PdfObject )(*PdfAction ,error ){if _aag ,_dbef :=_fb .GetIndirect (_aaa );_dbef {_cfdd ,_bcb :=_ddg .newPdfActionFromIndirectObject (_aag );if _bcb !=nil {return nil ,_bcb ;
};return _cfdd ,nil ;}else if !_fb .IsNullObject (_aaa ){return nil ,_fef .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ddcda *PdfShading )ToPdfObject ()_fb .PdfObject {_ddde :=_ddcda ._bbdbag ;_fgcca ,_cegfe :=_ddcda .getShadingDict ();if _cegfe !=nil {_gb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ddcda .ShadingType !=nil {_fgcca .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_ddcda .ShadingType );};if _ddcda .ColorSpace !=nil {_fgcca .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ddcda .ColorSpace .ToPdfObject ());
};if _ddcda .Background !=nil {_fgcca .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_ddcda .Background );};if _ddcda .BBox !=nil {_fgcca .Set ("\u0042\u0042\u006f\u0078",_ddcda .BBox .ToPdfObject ());};if _ddcda .AntiAlias !=nil {_fgcca .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_ddcda .AntiAlias );
};return _ddde ;};func (_fdaff *PdfReader )newPdfActionSubmitFormFromDict (_cdb *_fb .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_faaf ,_cabc :=_bg (_cdb .Get ("\u0046"));if _cabc !=nil {return nil ,_cabc ;};return &PdfActionSubmitForm {F :_faaf ,Fields :_cdb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_cdb .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// Encoder returns the font's text encoder.
func (_dgbfa *PdfFont )Encoder ()_gc .TextEncoder {_dffb :=_dgbfa .actualFont ();if _dffb ==nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_dgbfa ._gcfd );
return nil ;};return _dffb .Encoder ();};func _gfbeg (_cgeda *_fb .PdfObjectDictionary )(*PdfShadingType6 ,error ){_faeb :=PdfShadingType6 {};_eegbca :=_cgeda .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _eegbca ==nil {_gb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bgcge ,_acfec :=_eegbca .(*_fb .PdfObjectInteger );if !_acfec {_gb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eegbca );
return nil ,_fb .ErrTypeError ;};_faeb .BitsPerCoordinate =_bgcge ;_eegbca =_cgeda .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eegbca ==nil {_gb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_bgcge ,_acfec =_eegbca .(*_fb .PdfObjectInteger );if !_acfec {_gb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eegbca );
return nil ,_fb .ErrTypeError ;};_faeb .BitsPerComponent =_bgcge ;_eegbca =_cgeda .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _eegbca ==nil {_gb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bgcge ,_acfec =_eegbca .(*_fb .PdfObjectInteger );if !_acfec {_gb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eegbca );
return nil ,_fb .ErrTypeError ;};_faeb .BitsPerComponent =_bgcge ;_eegbca =_cgeda .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eegbca ==nil {_gb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cbeag ,_acfec :=_eegbca .(*_fb .PdfObjectArray );if !_acfec {_gb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eegbca );
return nil ,_fb .ErrTypeError ;};_faeb .Decode =_cbeag ;if _bdecf :=_cgeda .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bdecf !=nil {_faeb .Function =[]PdfFunction {};if _abded ,_cdaff :=_bdecf .(*_fb .PdfObjectArray );_cdaff {for _ ,_deaed :=range _abded .Elements (){_gaca ,_beffb :=_ggfef (_deaed );
if _beffb !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_beffb );return nil ,_beffb ;};_faeb .Function =append (_faeb .Function ,_gaca );
};}else {_eagf ,_gcbe :=_ggfef (_bdecf );if _gcbe !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gcbe );return nil ,_gcbe ;};
_faeb .Function =append (_faeb .Function ,_eagf );};};return &_faeb ,nil ;};

// SetForms sets the Acroform for a PDF file.
func (_fdaec *PdfWriter )SetForms (form *PdfAcroForm )error {_fdaec ._agadb =form ;return nil };

// ToGoTime returns the date in time.Time format.
func (_edgfc PdfDate )ToGoTime ()_a .Time {_cafed :=int (_edgfc ._fgcdd *60*60+_edgfc ._ffcdf *60);switch _edgfc ._eaeec {case '-':_cafed =-_cafed ;case 'Z':_cafed =0;};_fagee :=_f .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_edgfc ._eaeec ,_edgfc ._fgcdd ,_edgfc ._ffcdf );
_aaded :=_a .FixedZone (_fagee ,_cafed );return _a .Date (int (_edgfc ._eeff ),_a .Month (_edgfc ._dfcg ),int (_edgfc ._gdced ),int (_edgfc ._cbbed ),int (_edgfc ._baagb ),int (_edgfc ._efge ),0,_aaded );};func _ecabg (_fdce *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_fdce }};


// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_cef :=NewPdfAction ();_cac :=&PdfActionLaunch {};_cac .PdfAction =_cef ;_cef .SetContext (_cac );return _cac ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_efbg *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_faac :=vals [0];if _faac < 0.0||_faac > 1.0{_gb .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _faac < 0.0{_faac =0.0;}else if _faac > 1.0{_faac =1.0;};return NewPdfColorDeviceGray (_faac ),nil ;};func (_gfedf *PdfWriter )adjustXRefAffectedVersion (_agaeg bool ){if _agaeg &&_gfedf ._effda .Major ==1&&_gfedf ._effda .Minor < 5{_gfedf ._effda .Minor =5;
};};func (_abac *PdfField )inherit (_eegce func (*PdfField )bool )(bool ,error ){_decd :=map[*PdfField ]bool {};_bdee :=false ;_cfccd :=_abac ;for _cfccd !=nil {if _ ,_bcdba :=_decd [_cfccd ];_bcdba {return false ,_fef .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");
};_ddccd :=_eegce (_cfccd );if _ddccd {_bdee =true ;break ;};_decd [_cfccd ]=true ;_cfccd =_cfccd .Parent ;};return _bdee ,nil ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_eaee *PdfFieldButton )IsPush ()bool {return _eaee .GetType ()==ButtonTypePush };

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _fb .PdfObject ;FS _fb .PdfObject ;F _fb .PdfObject ;UF _fb .PdfObject ;DOS _fb .PdfObject ;Mac _fb .PdfObject ;Unix _fb .PdfObject ;ID _fb .PdfObject ;V _fb .PdfObject ;EF _fb .PdfObject ;RF _fb .PdfObject ;Desc _fb .PdfObject ;
CI _fb .PdfObject ;_aabdf _fb .PdfObject ;};func (_dfabb *DSS )addCerts (_eeace [][]byte )([]*_fb .PdfObjectStream ,error ){return _dfabb .add (&_dfabb .Certs ,_dfabb ._dbdc ,_eeace );};

// ToPdfObject implements interface PdfModel.
func (_db *PdfActionImportData )ToPdfObject ()_fb .PdfObject {_db .PdfAction .ToPdfObject ();_faa :=_db ._ege ;_dcf :=_faa .PdfObject .(*_fb .PdfObjectDictionary );_dcf .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeImportData )));if _db .F !=nil {_dcf .Set ("\u0046",_db .F .ToPdfObject ());
};return _faa ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_gdaf :=NewPdfAnnotation ();_bacdf :=&PdfAnnotation3D {};_bacdf .PdfAnnotation =_gdaf ;_gdaf .SetContext (_bacdf );return _bacdf ;};

// SetContentStream sets the pattern cell's content stream.
func (_dagb *PdfTilingPattern )SetContentStream (content []byte ,encoder _fb .StreamEncoder )error {_dfgb ,_ddfc :=_dagb ._aadcb .(*_fb .PdfObjectStream );if !_ddfc {_gb .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dagb ._aadcb );
return _fb .ErrTypeError ;};if encoder ==nil {encoder =_fb .NewRawEncoder ();};_cedc :=_dfgb .PdfObjectDictionary ;_ggbc :=encoder .MakeStreamDict ();_cedc .Merge (_ggbc );_eacaa ,_ecbee :=encoder .EncodeBytes (content );if _ecbee !=nil {return _ecbee ;
};_cedc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fb .MakeInteger (int64 (len (_eacaa ))));_dfgb .Stream =_eacaa ;return nil ;};

// Val returns the color value.
func (_beef *PdfColorDeviceGray )Val ()float64 {return float64 (*_beef )};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_ffbaf *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_fef .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_gfc ,_dfbab :=_egf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._adecb ,img ._cdgb );if _dfbab !=nil {return img ,_dfbab ;};_dbec ,_dfbab :=_egf .GrayConverter .Convert (_gfc );if _dfbab !=nil {return img ,_dfbab ;
};return _gaaa (_dbec .Base ()),nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_gcfg *PdfFunctionType4 )ToPdfObject ()_fb .PdfObject {_dbede :=_gcfg ._dade ;if _dbede ==nil {_gcfg ._dade =&_fb .PdfObjectStream {};_dbede =_gcfg ._dade ;};_egbgb :=_fb .MakeDict ();_egbgb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fb .MakeInteger (4));
_gdaa :=&_fb .PdfObjectArray {};for _ ,_bfggea :=range _gcfg .Domain {_gdaa .Append (_fb .MakeFloat (_bfggea ));};_egbgb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gdaa );_baed :=&_fb .PdfObjectArray {};for _ ,_cgeg :=range _gcfg .Range {_baed .Append (_fb .MakeFloat (_cgeg ));
};_egbgb .Set ("\u0052\u0061\u006eg\u0065",_baed );if _gcfg ._egegf ==nil &&_gcfg .Program !=nil {_gcfg ._egegf =[]byte (_gcfg .Program .String ());};_egbgb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fb .MakeInteger (int64 (len (_gcfg ._egegf ))));_dbede .Stream =_gcfg ._egegf ;
_dbede .PdfObjectDictionary =_egbgb ;return _dbede ;};func (_gbd *PdfReader )newPdfActionMovieFromDict (_gfe *_fb .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_gfe .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_gfe .Get ("\u0054"),Operation :_gfe .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_adedb *LTV )Enable (sig *PdfSignature ,extraCerts []*_bc .Certificate )error {if _fefb :=_adedb .validateSig (sig );_fefb !=nil {return _fefb ;};_fdfff ,_edgd :=_adedb .generateVRIKey (sig );if _edgd !=nil {return _edgd ;};if _ ,_eceae :=_adedb ._bafcg .VRI [_fdfff ];
_eceae &&_adedb .SkipExisting {return nil ;};_efca ,_edgd :=sig .GetCerts ();if _edgd !=nil {return _edgd ;};return _adedb .enable (_efca ,extraCerts ,_fdfff );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bece *PdfShadingType2 )ToPdfObject ()_fb .PdfObject {_bece .PdfShading .ToPdfObject ();_ecaff ,_dbbef :=_bece .getShadingDict ();if _dbbef !=nil {_gb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ecaff ==nil {_gb .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _bece .Coords !=nil {_ecaff .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_bece .Coords );
};if _bece .Domain !=nil {_ecaff .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bece .Domain );};if _bece .Function !=nil {if len (_bece .Function )==1{_ecaff .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bece .Function [0].ToPdfObject ());}else {_cgeeg :=_fb .MakeArray ();
for _ ,_gffcb :=range _bece .Function {_cgeeg .Append (_gffcb .ToPdfObject ());};_ecaff .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cgeeg );};};if _bece .Extend !=nil {_ecaff .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_bece .Extend );};
return _bece ._bbdbag ;};

// ToPdfObject implements interface PdfModel.
func (_afbg *PdfActionLaunch )ToPdfObject ()_fb .PdfObject {_afbg .PdfAction .ToPdfObject ();_bab :=_afbg ._ege ;_edbd :=_bab .PdfObject .(*_fb .PdfObjectDictionary );_edbd .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeLaunch )));if _afbg .F !=nil {_edbd .Set ("\u0046",_afbg .F .ToPdfObject ());
};_edbd .SetIfNotNil ("\u0057\u0069\u006e",_afbg .Win );_edbd .SetIfNotNil ("\u004d\u0061\u0063",_afbg .Mac );_edbd .SetIfNotNil ("\u0055\u006e\u0069\u0078",_afbg .Unix );_edbd .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_afbg .NewWindow );
return _bab ;};

// ToPdfObject implements interface PdfModel.
func (_aagf *PdfAnnotationLink )ToPdfObject ()_fb .PdfObject {_aagf .PdfAnnotation .ToPdfObject ();_fdaa :=_aagf ._caa ;_dded :=_fdaa .PdfObject .(*_fb .PdfObjectDictionary );_dded .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u004c\u0069\u006e\u006b"));
if _aagf ._fcf !=nil &&_aagf ._fcf ._bd !=nil {_dded .Set ("\u0041",_aagf ._fcf ._bd .ToPdfObject ());}else if _aagf .A !=nil {_dded .Set ("\u0041",_aagf .A );};_dded .SetIfNotNil ("\u0044\u0065\u0073\u0074",_aagf .Dest );_dded .SetIfNotNil ("\u0048",_aagf .H );
_dded .SetIfNotNil ("\u0050\u0041",_aagf .PA );_dded .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aagf .QuadPoints );_dded .SetIfNotNil ("\u0042\u0053",_aagf .BS );return _fdaa ;};type pdfSignDictionary struct{*_fb .PdfObjectDictionary ;
_acfga *SignatureHandler ;_efde *PdfSignature ;_fdfdg int64 ;_ddged int ;_dafg int ;_acgeg int ;_aagag int ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _fb .PdfObject ;H _fb .PdfObject ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_aadgf *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _aadgf ._acfcf !=nil {return _aadgf ._acfcf ,nil ;};if _aadgf .ColorSpace ==nil {return nil ,nil ;};_gecdf ,_ggceg :=_cdda (_aadgf .ColorSpace );if _ggceg !=nil {return nil ,_ggceg ;
};_aadgf ._acfcf =_gecdf ;return _aadgf ._acfcf ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dadc pdfFontType0 )GetRuneMetrics (r rune )(_ba .CharMetrics ,bool ){if _dadc .DescendantFont ==nil {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_dadc );
return _ba .CharMetrics {},false ;};return _dadc .DescendantFont .GetRuneMetrics (r );};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_bcfgf *PdfField )GetContext ()PdfModel {return _bcfgf ._acff };

// ToPdfObject returns a stream object.
func (_eada *XObjectImage )ToPdfObject ()_fb .PdfObject {_cdfag :=_eada ._badaab ;_ggcfd :=_cdfag .PdfObjectDictionary ;if _eada .Filter !=nil {_ggcfd =_eada .Filter .MakeStreamDict ();_cdfag .PdfObjectDictionary =_ggcfd ;};_ggcfd .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_ggcfd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0049\u006d\u0061g\u0065"));_ggcfd .Set ("\u0057\u0069\u0064t\u0068",_fb .MakeInteger (*(_eada .Width )));_ggcfd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fb .MakeInteger (*(_eada .Height )));
if _eada .BitsPerComponent !=nil {_ggcfd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fb .MakeInteger (*(_eada .BitsPerComponent )));};if _eada .ColorSpace !=nil {_ggcfd .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_eada .ColorSpace .ToPdfObject ());
};_ggcfd .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_eada .Intent );_ggcfd .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_eada .ImageMask );_ggcfd .SetIfNotNil ("\u004d\u0061\u0073\u006b",_eada .Mask );_edefge :=_ggcfd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _eada .Decode ==nil &&_edefge {_ggcfd .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _eada .Decode !=nil {_ggcfd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_eada .Decode );};_ggcfd .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_eada .Interpolate );
_ggcfd .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_eada .Alternatives );_ggcfd .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_eada .SMask );_ggcfd .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_eada .SMaskInData );
_ggcfd .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_eada .Matte );_ggcfd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eada .Name );_ggcfd .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_eada .StructParent );_ggcfd .SetIfNotNil ("\u0049\u0044",_eada .ID );
_ggcfd .SetIfNotNil ("\u004f\u0050\u0049",_eada .OPI );_ggcfd .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_eada .Metadata );_ggcfd .SetIfNotNil ("\u004f\u0043",_eada .OC );_ggcfd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fb .MakeInteger (int64 (len (_eada .Stream ))));
_cdfag .Stream =_eada .Stream ;return _cdfag ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_fedg :=NewPdfAnnotation ();_fgaf :=&PdfAnnotationPrinterMark {};_fgaf .PdfAnnotation =_fedg ;_fedg .SetContext (_fgaf );return _fgaf ;};func (_dce *PdfReader )newPdfActionNamedFromDict (_ddcd *_fb .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_ddcd .Get ("\u004e")},nil ;
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_bcbg *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if _bcbg .Alternate ==nil {if _bcbg .N ==1{_afdg :=NewPdfColorspaceDeviceGray ();return _afdg .ColorFromPdfObjects (objects );}else if _bcbg .N ==3{_cgcbf :=NewPdfColorspaceDeviceRGB ();
return _cgcbf .ColorFromPdfObjects (objects );}else if _bcbg .N ==4{_ffcc :=NewPdfColorspaceDeviceCMYK ();return _ffcc .ColorFromPdfObjects (objects );}else {return nil ,_fef .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _bcbg .Alternate .ColorFromPdfObjects (objects );};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_gccg ,_bfbee :=_ddcb (basefont );if _bfbee !=nil {return nil ,_bfbee ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_gccg ._fabfd =_gc .NewWinAnsiEncoder ();};return &PdfFont {_gcfd :&_gccg },nil ;
};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_cdae *PdfOutline )GetContainingPdfObject ()_fb .PdfObject {return _cdae ._cbbgd };

// K returns the value of the key component of the color.
func (_dbde *PdfColorDeviceCMYK )K ()float64 {return _dbde [3]};

// ToPdfObject implements interface PdfModel.
func (_dagg *PdfAnnotationHighlight )ToPdfObject ()_fb .PdfObject {_dagg .PdfAnnotation .ToPdfObject ();_cdea :=_dagg ._caa ;_bef :=_cdea .PdfObject .(*_fb .PdfObjectDictionary );_dagg .PdfAnnotationMarkup .appendToPdfDictionary (_bef );_bef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_bef .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dagg .QuadPoints );return _cdea ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _fb .PdfObject ;NewWindow _fb .PdfObject ;};

// SetOCProperties sets the optional content properties.
func (_becag *PdfWriter )SetOCProperties (ocProperties _fb .PdfObject )error {_aecdf :=_becag ._aeab ;if ocProperties !=nil {_gb .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_aecdf .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _becag .addObjects (ocProperties );};return nil ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_acadg *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_acadg .GetNumComponents (){return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebeda ,_aedd :=_acadg .TintTransform .Evaluate (vals );
if _aedd !=nil {return nil ,_aedd ;};_gegg ,_aedd :=_acadg .AlternateSpace .ColorFromFloats (_ebeda );if _aedd !=nil {return nil ,_aedd ;};return _gegg ,nil ;};func (_dag *PdfAnnotation )String ()string {_acea :="";_agfb ,_fgaa :=_dag .ToPdfObject ().(*_fb .PdfIndirectObject );
if _fgaa {_acea =_f .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dag ._bfda ,_agfb .PdfObject .String ());};return _acea ;};

// ToPdfObject implements interface PdfModel.
func (_cdg *PdfAnnotationScreen )ToPdfObject ()_fb .PdfObject {_cdg .PdfAnnotation .ToPdfObject ();_aeeb :=_cdg ._caa ;_babd :=_aeeb .PdfObject .(*_fb .PdfObjectDictionary );_babd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_babd .SetIfNotNil ("\u0054",_cdg .T );_babd .SetIfNotNil ("\u004d\u004b",_cdg .MK );_babd .SetIfNotNil ("\u0041",_cdg .A );_babd .SetIfNotNil ("\u0041\u0041",_cdg .AA );return _aeeb ;};func (_acdg *pdfFontType0 )baseFields ()*fontCommon {return &_acdg .fontCommon };
func _degdc ()string {return _gb .Version };

// ToPdfObject implements interface PdfModel.
func (_dcg *PdfAnnotationPrinterMark )ToPdfObject ()_fb .PdfObject {_dcg .PdfAnnotation .ToPdfObject ();_ddfa :=_dcg ._caa ;_fdca :=_ddfa .PdfObject .(*_fb .PdfObjectDictionary );_fdca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_fdca .SetIfNotNil ("\u004d\u004e",_dcg .MN );return _ddfa ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// GetNumComponents returns the number of color components (3 for Lab).
func (_bdbf *PdfColorLab )GetNumComponents ()int {return 3};func (_dad *PdfReader )newPdfActionResetFormFromDict (_ggc *_fb .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_ggc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_ggc .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_acc :=NewPdfAction ();_bag :=&PdfActionGoToR {};_bag .PdfAction =_acc ;_acc .SetContext (_bag );return _bag ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_efaga *PdfShading )GetContainingPdfObject ()_fb .PdfObject {return _efaga ._bbdbag };

// GetNumComponents returns the number of color components.
func (_daad *PdfColorspaceICCBased )GetNumComponents ()int {return _daad .N };

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_dcbef *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_dcbef .updateObjectsDeep (dss .ToPdfObject (),nil );};_dcbef ._gdc =dss ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_feece *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_feece ._acfcf =colorspace ;};

// ToInteger convert to an integer format.
func (_gbfaf *PdfColorCalGray )ToInteger (bits int )uint32 {_cgbec :=_eda .Pow (2,float64 (bits ))-1;return uint32 (_cgbec *_gbfaf .Val ());};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_dde :=NewPdfAnnotation ();_egg :=&PdfAnnotationPolygon {};_egg .PdfAnnotation =_dde ;_egg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dde .SetContext (_egg );return _egg ;};type pdfFontType3 struct{fontCommon ;
_eggd *_fb .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _fb .PdfObject ;Encoding _fb .PdfObject ;FontBBox _fb .PdfObject ;FontMatrix _fb .PdfObject ;FirstChar _fb .PdfObject ;LastChar _fb .PdfObject ;Widths _fb .PdfObject ;Resources _fb .PdfObject ;_bgbcb map[_gc .CharCode ]float64 ;_ecfg _gc .TextEncoder ;
};func (_beeaf *XObjectImage )getParamsDict ()*_fb .PdfObjectDictionary {_gfeagc :=_fb .MakeDict ();_gfeagc .Set ("\u0057\u0069\u0064t\u0068",_fb .MakeInteger (*_beeaf .Width ));_gfeagc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fb .MakeInteger (*_beeaf .Height ));
_gfeagc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fb .MakeInteger (int64 (_beeaf .ColorSpace .GetNumComponents ())));_gfeagc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fb .MakeInteger (*_beeaf .BitsPerComponent ));
return _gfeagc ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_gfcfb *PdfPageResources )SetShadingByName (keyName _fb .PdfObjectName ,shadingObj _fb .PdfObject )error {if _gfcfb .Shading ==nil {_gfcfb .Shading =_fb .MakeDict ();};_bdeb ,_eacga :=_gfcfb .Shading .(*_fb .PdfObjectDictionary );if !_eacga {return _fb .ErrTypeError ;
};_bdeb .Set (keyName ,shadingObj );return nil ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fb .PdfObject ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_febgd :_fb .MakeDict ()};
};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _a .Time ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_acad *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_gb .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_gb .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_gb .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_gb .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_bbfec ,_eded :=_egf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._adecb ,img ._cdgb );if _eded !=nil {return Image {},_eded ;};_bdbae ,_eded :=_egf .NRGBAConverter .Convert (_bbfec );
if _eded !=nil {return Image {},_eded ;};return _gaaa (_bdbae .Base ()),nil ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_eacg :=&PdfColorspaceDeviceN {};return _eacg };func (_fdaffg *PdfAcroForm )fill (_bgggg FieldValueProvider ,_eaae FieldAppearanceGenerator )error {if _fdaffg ==nil {return nil ;};_eabdbe ,_agaa :=_bgggg .FieldValues ();
if _agaa !=nil {return _agaa ;};for _ ,_eefe :=range _fdaffg .AllFields (){_fecb :=_eefe .PartialName ();_gdeeb ,_caag :=_eabdbe [_fecb ];if !_caag {if _cbece ,_dcad :=_eefe .FullName ();_dcad ==nil {_gdeeb ,_caag =_eabdbe [_cbece ];};};if !_caag {_gb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_fecb );
continue ;};if _ggaabg :=_eecbf (_eefe ,_gdeeb );_ggaabg !=nil {return _ggaabg ;};if _eaae ==nil {continue ;};for _ ,_aaac :=range _eefe .Annotations {_cgag ,_acebd :=_eaae .GenerateAppearanceDict (_fdaffg ,_eefe ,_aaac );if _acebd !=nil {return _acebd ;
};_aaac .AP =_cgag ;_aaac .ToPdfObject ();};};return nil ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_fdafc *PdfColorCalGray )GetNumComponents ()int {return 1};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ggca *PdfShadingType6 )ToPdfObject ()_fb .PdfObject {_ggca .PdfShading .ToPdfObject ();_eggc ,_gfefg :=_ggca .getShadingDict ();if _gfefg !=nil {_gb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ggca .BitsPerCoordinate !=nil {_eggc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ggca .BitsPerCoordinate );};if _ggca .BitsPerComponent !=nil {_eggc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ggca .BitsPerComponent );
};if _ggca .BitsPerFlag !=nil {_eggc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ggca .BitsPerFlag );};if _ggca .Decode !=nil {_eggc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ggca .Decode );};if _ggca .Function !=nil {if len (_ggca .Function )==1{_eggc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ggca .Function [0].ToPdfObject ());
}else {_fgaagg :=_fb .MakeArray ();for _ ,_ebcee :=range _ggca .Function {_fgaagg .Append (_ebcee .ToPdfObject ());};_eggc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fgaagg );};};return _ggca ._bbdbag ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_egcbg *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_accbg :=_dg .NewReader (img .getBase ());_cccgc :=_egf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_egcbg .AlternateSpace .GetNumComponents (),nil ,img ._adecb ,nil );
_cgcbe :=_dg .NewWriter (_cccgc );_ebgbg :=_eda .Pow (2,float64 (img .BitsPerComponent ))-1;_gb .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_gb .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_egcbg .TintTransform );_gebb :=_egcbg .AlternateSpace .DecodeArray ();var (_baceb uint32 ;_dgda error ;);for {_baceb ,_dgda =_accbg .ReadSample ();
if _dgda ==_ac .EOF {break ;};if _dgda !=nil {return img ,_dgda ;};_fbce :=float64 (_baceb )/_ebgbg ;_aebg ,_ffcd :=_egcbg .TintTransform .Evaluate ([]float64 {_fbce });if _ffcd !=nil {return img ,_ffcd ;};for _aegc ,_cafa :=range _aebg {_gcee :=_egf .LinearInterpolate (_cafa ,_gebb [_aegc *2],_gebb [_aegc *2+1],0,1);
if _ffcd =_cgcbe .WriteSample (uint32 (_gcee *_ebgbg ));_ffcd !=nil {return img ,_ffcd ;};};};return _egcbg .AlternateSpace .ImageToRGB (_gaaa (&_cccgc ));};func (_ecfc *fontFile )loadFromSegments (_gadge ,_acebg []byte )error {_gb .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_gadge ),len (_acebg ));
_gceee :=_ecfc .parseASCIIPart (_gadge );if _gceee !=nil {return _gceee ;};_gb .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_ecfc );if len (_acebg )==0{return nil ;};_gb .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_ecfc );
return nil ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_cgdc *PdfFont )BytesToCharcodes (data []byte )[]_gc .CharCode {_gb .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _bead ,_fabbg :=_cgdc ._gcfd .(*pdfFontType0 );_fabbg &&_bead ._bfad !=nil {if _cbcdg ,_daced :=_bead .bytesToCharcodes (data );_daced {return _cbcdg ;};};_eaca :=make ([]_gc .CharCode ,0,len (data )+len (data )%2);if _cgdc .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _fdgf :=0;_fdgf < len (data );_fdgf +=2{_cabdd :=uint16 (data [_fdgf ])<<8|uint16 (data [_fdgf +1]);_eaca =append (_eaca ,_gc .CharCode (_cabdd ));};}else {for _ ,_fddcf :=range data {_eaca =append (_eaca ,_gc .CharCode (_fddcf ));
};};return _eaca ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_decaf *PdfPattern )GetContext ()PdfModel {return _decaf ._cfdcd };

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_fgeac :=PdfWriter {};_fgeac ._bddff =map[_fb .PdfObject ]struct{}{};_fgeac ._cgdaa =[]_fb .PdfObject {};_fgeac ._eccf =map[_fb .PdfObject ][]*_fb .PdfObjectDictionary {};_fgeac ._decb =map[_fb .PdfObject ]struct{}{};_fgeac ._effda .Major =1;
_fgeac ._effda .Minor =3;_bgfg :=_fb .MakeDict ();_dabcf :=[]struct{_cedcb _fb .PdfObjectName ;_afgcf string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_cgbfd ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_fadea ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_gcbcga ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_gacfg ()},{"\u0054\u0069\u0074l\u0065",_ecdfa ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_dfaa ()}};
for _ ,_beegb :=range _dabcf {if _beegb ._afgcf !=""{_bgfg .Set (_beegb ._cedcb ,_fb .MakeString (_beegb ._afgcf ));};};if _gabed :=_dfgbc ();!_gabed .IsZero (){if _cfcdf ,_ecdgag :=NewPdfDateFromTime (_gabed );_ecdgag ==nil {_bgfg .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cfcdf .ToPdfObject ());
};};if _cfgbb :=_bbbc ();!_cfgbb .IsZero (){if _ecccc ,_adfab :=NewPdfDateFromTime (_cfgbb );_adfab ==nil {_bgfg .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_ecccc .ToPdfObject ());};};_cdcgff :=_fb .PdfIndirectObject {};_cdcgff .PdfObject =_bgfg ;_fgeac ._gbaa =&_cdcgff ;
_fgeac .addObject (&_cdcgff );_fdegg :=_fb .PdfIndirectObject {};_dcgbg :=_fb .MakeDict ();_dcgbg .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_fdegg .PdfObject =_dcgbg ;_fgeac ._aebagd =&_fdegg ;_fgeac .addObject (_fgeac ._aebagd );
_bdbce ,_cagbd :=_gfag ("\u0077");if _cagbd !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cagbd );};_fgeac ._bcadc =_bdbce ;_eccff :=_fb .PdfIndirectObject {};_abaeb :=_fb .MakeDict ();_abaeb .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0050\u0061\u0067e\u0073"));
_eecd :=_fb .PdfObjectArray {};_abaeb .Set ("\u004b\u0069\u0064\u0073",&_eecd );_abaeb .Set ("\u0043\u006f\u0075n\u0074",_fb .MakeInteger (0));_eccff .PdfObject =_abaeb ;_fgeac ._bdefb =&_eccff ;_fgeac ._fabefb =map[_fb .PdfObject ]struct{}{};_fgeac .addObject (_fgeac ._bdefb );
_dcgbg .Set ("\u0050\u0061\u0067e\u0073",&_eccff );_fgeac ._aeab =_dcgbg ;_gb .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_fdegg );return _fgeac ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_ffec *PdfAppender )UpdatePage (page *PdfPage ){_ffec .updateObjectsDeep (page .ToPdfObject (),nil )};

// ToPdfObject implements interface PdfModel.
func (_fbga *PdfAnnotationRichMedia )ToPdfObject ()_fb .PdfObject {_fbga .PdfAnnotation .ToPdfObject ();_dcaf :=_fbga ._caa ;_abced :=_dcaf .PdfObject .(*_fb .PdfObjectDictionary );_abced .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_abced .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_fbga .RichMediaSettings );_abced .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_fbga .RichMediaContent );
return _dcaf ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_dab :=NewPdfAnnotation ();_abaa :=&PdfAnnotationCircle {};_abaa .PdfAnnotation =_dab ;_abaa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dab .SetContext (_abaa );return _abaa ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_dbce *PdfFont )GetCharMetrics (code _gc .CharCode )(CharMetrics ,bool ){var _bgfb _ba .CharMetrics ;switch _eaeac :=_dbce ._gcfd .(type ){case *pdfFontSimple :if _gbgfd ,_eadb :=_eaeac .GetCharMetrics (code );_eadb {return _gbgfd ,_eadb ;};case *pdfFontType0 :if _deeeg ,_ddac :=_eaeac .GetCharMetrics (code );
_ddac {return _deeeg ,_ddac ;};case *pdfCIDFontType0 :if _ddeaf ,_afecg :=_eaeac .GetCharMetrics (code );_afecg {return _ddeaf ,_afecg ;};case *pdfCIDFontType2 :if _eedd ,_dfddf :=_eaeac .GetCharMetrics (code );_dfddf {return _eedd ,_dfddf ;};case *pdfFontType3 :if _ddcef ,_dgbgf :=_eaeac .GetCharMetrics (code );
_dgbgf {return _ddcef ,_dgbgf ;};default:_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_dbce ._gcfd );
return _bgfb ,false ;};if _bbbdc ,_cgcc :=_dbce .GetFontDescriptor ();_cgcc ==nil &&_bbbdc !=nil {return _ba .CharMetrics {Wx :_bbbdc ._gbgaf },true ;};_gb .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_dbce );
return _bgfb ,false ;};

// ToPdfObject implements interface PdfModel.
func (_abbc *PdfBorderStyle )ToPdfObject ()_fb .PdfObject {_dgce :=_fb .MakeDict ();if _abbc ._adga !=nil {if _gagg ,_aeed :=_abbc ._adga .(*_fb .PdfIndirectObject );_aeed {_gagg .PdfObject =_dgce ;};};_dgce .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _abbc .W !=nil {_dgce .Set ("\u0057",_fb .MakeFloat (*_abbc .W ));};if _abbc .S !=nil {_dgce .Set ("\u0053",_fb .MakeName (_abbc .S .GetPdfName ()));};if _abbc .D !=nil {_dgce .Set ("\u0044",_fb .MakeArrayFromIntegers (*_abbc .D ));};if _abbc ._adga !=nil {return _abbc ._adga ;
};return _dgce ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_fdbeb *PdfColorCalRGB )GetNumComponents ()int {return 3};

// AddWatermarkImage adds a watermark to the page.
func (_bbbdaa *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_cafba ,_cfefg :=_bbbdaa .GetMediaBox ();if _cfefg !=nil {return _cfefg ;};_gdffgf :=_cafba .Urx -_cafba .Llx ;_cggeef :=_cafba .Ury -_cafba .Lly ;_cbfbg :=float64 (*ximg .Width );
_aaff :=(_gdffgf -_cbfbg )/2;if opt .FitToWidth {_cbfbg =_gdffgf ;_aaff =0;};_gefc :=_cggeef ;_fdegda :=float64 (0);if opt .PreserveAspectRatio {_gefc =_cbfbg *float64 (*ximg .Height )/float64 (*ximg .Width );_fdegda =(_cggeef -_gefc )/2;};if _bbbdaa .Resources ==nil {_bbbdaa .Resources =NewPdfPageResources ();
};_aegcb :=0;_baba :=_fb .PdfObjectName (_f .Sprintf ("\u0049\u006d\u0077%\u0064",_aegcb ));for _bbbdaa .Resources .HasXObjectByName (_baba ){_aegcb ++;_baba =_fb .PdfObjectName (_f .Sprintf ("\u0049\u006d\u0077%\u0064",_aegcb ));};_cfefg =_bbbdaa .AddImageResource (_baba ,ximg );
if _cfefg !=nil {return _cfefg ;};_aegcb =0;_ecddfa :=_fb .PdfObjectName (_f .Sprintf ("\u0047\u0053\u0025\u0064",_aegcb ));for _bbbdaa .HasExtGState (_ecddfa ){_aegcb ++;_ecddfa =_fb .PdfObjectName (_f .Sprintf ("\u0047\u0053\u0025\u0064",_aegcb ));};
_dedfd :=_fb .MakeDict ();_dedfd .Set ("\u0042\u004d",_fb .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_dedfd .Set ("\u0043\u0041",_fb .MakeFloat (opt .Alpha ));_dedfd .Set ("\u0063\u0061",_fb .MakeFloat (opt .Alpha ));_cfefg =_bbbdaa .AddExtGState (_ecddfa ,_dedfd );
if _cfefg !=nil {return _cfefg ;};_bfabda :=_f .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_ecddfa ,_cbfbg ,_gefc ,_aaff ,_fdegda ,_baba );
_bbbdaa .AddContentStreamByString (_bfabda );return nil ;};func (_cfce *PdfFilespec )getDict ()*_fb .PdfObjectDictionary {if _dfabe ,_gfgab :=_cfce ._aabdf .(*_fb .PdfIndirectObject );_gfgab {_gegdf ,_cbabe :=_dfabe .PdfObject .(*_fb .PdfObjectDictionary );
if !_cbabe {return nil ;};return _gegdf ;}else if _ffabd ,_cbbbg :=_cfce ._aabdf .(*_fb .PdfObjectDictionary );_cbbbg {return _ffabd ;}else {_gb .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_cfce ._aabdf );
return nil ;};};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_eefecf *PdfOutlineItem )GetContainingPdfObject ()_fb .PdfObject {return _eefecf ._fbdgb };

// ToPdfObject implements interface PdfModel.
func (_gcg *PdfActionGoTo3DView )ToPdfObject ()_fb .PdfObject {_gcg .PdfAction .ToPdfObject ();_bada :=_gcg ._ege ;_dda :=_bada .PdfObject .(*_fb .PdfObjectDictionary );_dda .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeGoTo3DView )));_dda .SetIfNotNil ("\u0054\u0041",_gcg .TA );
_dda .SetIfNotNil ("\u0056",_gcg .V );return _bada ;};func _fadea ()string {_cacda .Lock ();defer _cacda .Unlock ();if len (_bggfc )> 0{return _bggfc ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};func (_dgbbe fontCommon )asPdfObjectDictionary (_baae string )*_fb .PdfObjectDictionary {if _baae !=""&&_dgbbe ._aaab !=""&&_baae !=_dgbbe ._aaab {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_baae ,_dgbbe );
}else if _baae ==""&&_dgbbe ._aaab ==""{_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dgbbe );
}else if _dgbbe ._aaab ==""{_dgbbe ._aaab =_baae ;};_fdffd :=_fb .MakeDict ();_fdffd .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0046\u006f\u006e\u0074"));_fdffd .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_fb .MakeName (_dgbbe ._beeg ));
_fdffd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName (_dgbbe ._aaab ));if _dgbbe ._bgdf !=nil {_fdffd .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_dgbbe ._bgdf .ToPdfObject ());};if _dgbbe ._daag !=nil {_fdffd .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_dgbbe ._daag );
}else if _dgbbe ._acfd !=nil {_cfbf ,_dgbbc :=_dgbbe ._acfd .Stream ();if _dgbbc !=nil {_gb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_dgbbc );
}else {_fdffd .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_cfbf );};};return _fdffd ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_bgbc *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};func _gbcedc (_ggagf *_fb .PdfObjectDictionary )(*PdfShadingType5 ,error ){_eaeae :=PdfShadingType5 {};_ceegf :=_ggagf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _ceegf ==nil {_gb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ddbf ,_fgfgbb :=_ceegf .(*_fb .PdfObjectInteger );if !_fgfgbb {_gb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ceegf );
return nil ,_fb .ErrTypeError ;};_eaeae .BitsPerCoordinate =_ddbf ;_ceegf =_ggagf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ceegf ==nil {_gb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ddbf ,_fgfgbb =_ceegf .(*_fb .PdfObjectInteger );if !_fgfgbb {_gb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ceegf );
return nil ,_fb .ErrTypeError ;};_eaeae .BitsPerComponent =_ddbf ;_ceegf =_ggagf .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _ceegf ==nil {_gb .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_ddbf ,_fgfgbb =_ceegf .(*_fb .PdfObjectInteger );if !_fgfgbb {_gb .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ceegf );
return nil ,_fb .ErrTypeError ;};_eaeae .VerticesPerRow =_ddbf ;_ceegf =_ggagf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ceegf ==nil {_gb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_babba ,_fgfgbb :=_ceegf .(*_fb .PdfObjectArray );if !_fgfgbb {_gb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ceegf );
return nil ,_fb .ErrTypeError ;};_eaeae .Decode =_babba ;if _gffeg :=_ggagf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gffeg !=nil {_eaeae .Function =[]PdfFunction {};if _ggdba ,_fbcfbf :=_gffeg .(*_fb .PdfObjectArray );_fbcfbf {for _ ,_bbbeg :=range _ggdba .Elements (){_fbafba ,_egadg :=_ggfef (_bbbeg );
if _egadg !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egadg );return nil ,_egadg ;};_eaeae .Function =append (_eaeae .Function ,_fbafba );
};}else {_adcfd ,_aeefb :=_ggfef (_gffeg );if _aeefb !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aeefb );return nil ,_aeefb ;
};_eaeae .Function =append (_eaeae .Function ,_adcfd );};};return &_eaeae ,nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_bfda PdfModel ;Rect _fb .PdfObject ;Contents _fb .PdfObject ;P _fb .PdfObject ;NM _fb .PdfObject ;M _fb .PdfObject ;F _fb .PdfObject ;AP _fb .PdfObject ;AS _fb .PdfObject ;Border _fb .PdfObject ;C _fb .PdfObject ;StructParent _fb .PdfObject ;
OC _fb .PdfObject ;_caa *_fb .PdfIndirectObject ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_af *PdfAction )GetContext ()PdfModel {if _af ==nil {return nil ;};return _af ._bd ;};func (_bbca *PdfReader )newPdfActionSetOCGStateFromDict (_cgc *_fb .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_cgc .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_cgc .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";
ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";
ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";
ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// String returns a string that describes `base`.
func (_fbbd fontCommon )String ()string {return _f .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_fbbd .coreString ());};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_bfef []byte )(_ggfaed int ,_gbgafc error );};func _abg (_efba _fb .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_beag :=NewPdfColorspaceSpecialSeparation ();if _bggg ,_badbc :=_efba .(*_fb .PdfIndirectObject );_badbc {_beag ._dfbf =_bggg ;
};_efba =_fb .TraceToDirectObject (_efba );_cefd ,_adeb :=_efba .(*_fb .PdfObjectArray );if !_adeb {return nil ,_f .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _cefd .Len ()!=4{return nil ,_f .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_efba =_cefd .Get (0);
_gbcb ,_adeb :=_efba .(*_fb .PdfObjectName );if !_adeb {return nil ,_f .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_gbcb !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_f .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_efba =_cefd .Get (1);_gbcb ,_adeb =_efba .(*_fb .PdfObjectName );if !_adeb {return nil ,_f .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_beag .ColorantName =_gbcb ;_efba =_cefd .Get (2);_cdga ,_defb :=NewPdfColorspaceFromPdfObject (_efba );if _defb !=nil {return nil ,_defb ;};_beag .AlternateSpace =_cdga ;_abcedd ,_defb :=_ggfef (_cefd .Get (3));if _defb !=nil {return nil ,_defb ;};_beag .TintTransform =_abcedd ;
return _beag ,nil ;};func _ecdfa ()string {_cacda .Lock ();defer _cacda .Unlock ();return _efagd };

// ToPdfObject returns the PDF representation of the colorspace.
func (_gcbb *PdfColorspaceDeviceGray )ToPdfObject ()_fb .PdfObject {return _fb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// ToPdfObject implements interface PdfModel.
func (_ccc *PdfActionHide )ToPdfObject ()_fb .PdfObject {_ccc .PdfAction .ToPdfObject ();_bba :=_ccc ._ege ;_fcc :=_bba .PdfObject .(*_fb .PdfObjectDictionary );_fcc .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeHide )));_fcc .SetIfNotNil ("\u0054",_ccc .T );
_fcc .SetIfNotNil ("\u0048",_ccc .H );return _bba ;};func (_bfbd *PdfReader )newPdfAnnotationCircleFromDict (_bga *_fb .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_cggg :=PdfAnnotationCircle {};_cbadd ,_fdcd :=_bfbd .newPdfAnnotationMarkupFromDict (_bga );
if _fdcd !=nil {return nil ,_fdcd ;};_cggg .PdfAnnotationMarkup =_cbadd ;_cggg .BS =_bga .Get ("\u0042\u0053");_cggg .IC =_bga .Get ("\u0049\u0043");_cggg .BE =_bga .Get ("\u0042\u0045");_cggg .RD =_bga .Get ("\u0052\u0044");return &_cggg ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_febc *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// GetOptimizer returns current PDF optimizer.
func (_febd *PdfWriter )GetOptimizer ()Optimizer {return _febd ._gbcd };func (_fcbc *PdfReader )newPdfAnnotationCaretFromDict (_fcgb *_fb .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_ead :=PdfAnnotationCaret {};_ggaa ,_eegg :=_fcbc .newPdfAnnotationMarkupFromDict (_fcgb );
if _eegg !=nil {return nil ,_eegg ;};_ead .PdfAnnotationMarkup =_ggaa ;_ead .RD =_fcgb .Get ("\u0052\u0044");_ead .Sy =_fcgb .Get ("\u0053\u0079");return &_ead ,nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_ddbg *PdfFieldChoice )ToPdfObject ()_fb .PdfObject {_ddbg .PdfField .ToPdfObject ();_ggad :=_ddbg ._cdcae ;_bfgb :=_ggad .PdfObject .(*_fb .PdfObjectDictionary );_bfgb .Set ("\u0046\u0054",_fb .MakeName ("\u0043\u0068"));if _ddbg .Opt !=nil {_bfgb .Set ("\u004f\u0070\u0074",_ddbg .Opt );
};if _ddbg .TI !=nil {_bfgb .Set ("\u0054\u0049",_ddbg .TI );};if _ddbg .I !=nil {_bfgb .Set ("\u0049",_ddbg .I );};return _ggad ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _fb .PdfObject ;PreserveRB _fb .PdfObject ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _a .Time ){_cacda .Lock ();defer _cacda .Unlock ();_faca =creationDate ;};const (_ebabcg =0x00001;_dcfaa =0x00002;_bdeeg =0x00004;_fdccae =0x00008;_ecbed =0x00020;_gdefb =0x00040;_cdef =0x10000;_efgc =0x20000;_fbag =0x40000;
);

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_acbg *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _acbg .fill (provider ,appGen );};func (_efgcg *PdfWriter )writeOutlines ()error {if _efgcg ._bdcfa ==nil {return nil ;};_gb .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_efgcg ._bdcfa );
_eefac :=_efgcg ._bdcfa .ToPdfObject ();_gb .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_eefac ,_eefac ,_eefac );_efgcg ._aeab .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_eefac );
_cebgd :=_efgcg .addObjects (_eefac );if _cebgd !=nil {return _cebgd ;};return nil ;};func _beffa (_fegd *_fb .PdfObjectDictionary )(*PdfShadingType4 ,error ){_dbdaa :=PdfShadingType4 {};_ggfb :=_fegd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _ggfb ==nil {_gb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dcddbd ,_bbafb :=_ggfb .(*_fb .PdfObjectInteger );if !_bbafb {_gb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ggfb );
return nil ,_fb .ErrTypeError ;};_dbdaa .BitsPerCoordinate =_dcddbd ;_ggfb =_fegd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ggfb ==nil {_gb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dcddbd ,_bbafb =_ggfb .(*_fb .PdfObjectInteger );if !_bbafb {_gb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ggfb );
return nil ,_fb .ErrTypeError ;};_dbdaa .BitsPerComponent =_dcddbd ;_ggfb =_fegd .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ggfb ==nil {_gb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dcddbd ,_bbafb =_ggfb .(*_fb .PdfObjectInteger );if !_bbafb {_gb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ggfb );
return nil ,_fb .ErrTypeError ;};_dbdaa .BitsPerComponent =_dcddbd ;_ggfb =_fegd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ggfb ==nil {_gb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gbag ,_bbafb :=_ggfb .(*_fb .PdfObjectArray );if !_bbafb {_gb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggfb );
return nil ,_fb .ErrTypeError ;};_dbdaa .Decode =_gbag ;_ggfb =_fegd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ggfb ==nil {_gb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dbdaa .Function =[]PdfFunction {};if _gbcff ,_bfbce :=_ggfb .(*_fb .PdfObjectArray );_bfbce {for _ ,_aebag :=range _gbcff .Elements (){_feccd ,_ebgca :=_ggfef (_aebag );if _ebgca !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebgca );
return nil ,_ebgca ;};_dbdaa .Function =append (_dbdaa .Function ,_feccd );};}else {_gedff ,_ddaf :=_ggfef (_ggfb );if _ddaf !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddaf );
return nil ,_ddaf ;};_dbdaa .Function =append (_dbdaa .Function ,_gedff );};return &_dbdaa ,nil ;};func (_babca *PdfWriter )writeOutputIntents ()error {if len (_babca ._cbeff )==0{return nil ;};_dcdbd :=make ([]_fb .PdfObject ,len (_babca ._cbeff ));for _ecbb ,_fafdg :=range _babca ._cbeff {_acbdc :=_fafdg .ToPdfObject ();
_dcdbd [_ecbb ]=_fb .MakeIndirectObject (_acbdc );};_caaf :=_fb .MakeIndirectObject (_fb .MakeArray (_dcdbd ...));_babca ._aeab .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_caaf );if _begfg :=_babca .addObjects (_caaf );
_begfg !=nil {return _begfg ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bbf *PdfActionJavaScript )ToPdfObject ()_fb .PdfObject {_bbf .PdfAction .ToPdfObject ();_fefa :=_bbf ._ege ;_ecc :=_fefa .PdfObject .(*_fb .PdfObjectDictionary );_ecc .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeJavaScript )));_ecc .SetIfNotNil ("\u004a\u0053",_bbf .JS );
return _fefa ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_cgfeg *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _cgfeg ._cfdcd .(*PdfTilingPattern );};func (_eaffd *PdfWriter )setDocumentIDs (_gdbe ,_efbeg string ){_eaffd ._effd =_fb .MakeArray (_fb .MakeHexString (_gdbe ),_fb .MakeHexString (_efbeg ));
};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_abfcc *PdfPattern )GetContainingPdfObject ()_fb .PdfObject {return _abfcc ._aadcb };

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_bfe :=NewPdfAnnotation ();_dedb :=&PdfAnnotationWidget {};_dedb .PdfAnnotation =_bfe ;_bfe .SetContext (_dedb );return _dedb ;};func (_ddcc *PdfReader )newPdfAnnotationProjectionFromDict (_aebb *_fb .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_bcdd :=&PdfAnnotationProjection {};
_dgcb ,_dabg :=_ddcc .newPdfAnnotationMarkupFromDict (_aebb );if _dabg !=nil {return nil ,_dabg ;};_bcdd .PdfAnnotationMarkup =_dgcb ;return _bcdd ,nil ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _fb .PdfObject ;MK _fb .PdfObject ;A _fb .PdfObject ;AA _fb .PdfObject ;};

// GetPage returns the PdfPage model for the specified page number.
func (_gbfd *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _gbfd ._cecbb .GetCrypter ()!=nil &&!_gbfd ._cecbb .IsAuthenticated (){return nil ,_f .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_gbfd ._fdbgc )< pageNumber {return nil ,_fef .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_gageg :=pageNumber -1;if _gageg < 0{return nil ,_f .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_eedgd :=_gbfd .PageList [_gageg ];
return _eedgd ,nil ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_aage *PdfReader )GetEncryptionMethod ()string {_caabb :=_aage ._cecbb .GetCrypter ();return _caabb .String ();};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_fb .PdfObjectStream ;Data []byte ;_dfea *_fb .PdfIndirectObject ;_aeac *_fb .PdfObjectStream ;};

// GetSubFilter returns SubFilter value or empty string.
func (_fbba *pdfSignDictionary )GetSubFilter ()string {_aaagb :=_fbba .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _aaagb ==nil {return "";};if _ddbge ,_abfac :=_fb .GetNameVal (_aaagb );_abfac {return _ddbge ;};return "";};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_eedfb *PdfReader )GetObjectNums ()[]int {return _eedfb ._cecbb .GetObjectNums ()};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_fb .PdfObjectInteger ;BitsPerComponent *_fb .PdfObjectInteger ;BitsPerFlag *_fb .PdfObjectInteger ;Decode *_fb .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_gaf :=&PdfAction {};_gaf ._ege =_fb .MakeIndirectObject (_fb .MakeDict ());return _gaf ;};func (_fafaa *PdfWriter )setHashIDs (_dcecg _fe .Hash )error {_bebg :=_dcecg .Sum (nil );if _fafaa ._cbffe ==""{_fafaa ._cbffe =_b .EncodeToString (_bebg [:8]);
};_fafaa .setDocumentIDs (_fafaa ._cbffe ,_b .EncodeToString (_bebg [8:]));return nil ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_gbfb *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_adec ,_caegf :=color .(*PdfColorPattern );if !_caegf {_gb .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _adec .Color ==nil {return color ,nil ;};if _gbfb .UnderlyingCS ==nil {return nil ,_fef .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _gbfb .UnderlyingCS .ColorToRGB (_adec .Color );
};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);func _afba (_afac *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_afac }};

// ToPdfObject implements interface PdfModel.
func (_ebed *PdfAnnotationFreeText )ToPdfObject ()_fb .PdfObject {_ebed .PdfAnnotation .ToPdfObject ();_eeb :=_ebed ._caa ;_gee :=_eeb .PdfObject .(*_fb .PdfObjectDictionary );_ebed .PdfAnnotationMarkup .appendToPdfDictionary (_gee );_gee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_gee .SetIfNotNil ("\u0044\u0041",_ebed .DA );_gee .SetIfNotNil ("\u0051",_ebed .Q );_gee .SetIfNotNil ("\u0052\u0043",_ebed .RC );_gee .SetIfNotNil ("\u0044\u0053",_ebed .DS );_gee .SetIfNotNil ("\u0043\u004c",_ebed .CL );_gee .SetIfNotNil ("\u0049\u0054",_ebed .IT );
_gee .SetIfNotNil ("\u0042\u0045",_ebed .BE );_gee .SetIfNotNil ("\u0052\u0044",_ebed .RD );_gee .SetIfNotNil ("\u0042\u0053",_ebed .BS );_gee .SetIfNotNil ("\u004c\u0045",_ebed .LE );return _eeb ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// DetailedFlags set if parsed PDF file should contain meta information for the PDF/A verifier.
DetailedFlags bool ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _a .Time ){_cacda .Lock ();defer _cacda .Unlock ();_cedfc =modifiedDate ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_egcb *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgba ,_edcga :=_fb .GetNumbersAsFloat (objects );
if _edcga !=nil {return nil ,_edcga ;};return _egcb .ColorFromFloats (_cgba );};

// Encoder returns the font's text encoder.
func (_fbggf *pdfFontSimple )Encoder ()_gc .TextEncoder {if _fbggf ._fabfd !=nil {return _fbggf ._fabfd ;};if _fbggf ._cegf !=nil {return _fbggf ._cegf ;};_ceaf ,_ :=_gc .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _ceaf ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_adga _fb .PdfObject ;};func (_cabf *PdfReader )newPdfAnnotationPolygonFromDict (_fdag *_fb .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_gff :=PdfAnnotationPolygon {};_aef ,_ceefc :=_cabf .newPdfAnnotationMarkupFromDict (_fdag );
if _ceefc !=nil {return nil ,_ceefc ;};_gff .PdfAnnotationMarkup =_aef ;_gff .Vertices =_fdag .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_gff .LE =_fdag .Get ("\u004c\u0045");_gff .BS =_fdag .Get ("\u0042\u0053");_gff .IC =_fdag .Get ("\u0049\u0043");
_gff .BE =_fdag .Get ("\u0042\u0045");_gff .IT =_fdag .Get ("\u0049\u0054");_gff .Measure =_fdag .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_gff ,nil ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _fb .PdfObject ;T _fb .PdfObject ;Operation _fb .PdfObject ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_fb .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};func (_bade *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";
};

// GetPdfInfo returns the PDF info dictionary.
func (_dgef *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_agdcb ,_egddb :=_dgef .GetTrailer ();if _egddb !=nil {return nil ,_egddb ;};var _dccb *_fb .PdfObjectDictionary ;_ebcbd :=_agdcb .Get ("\u0049\u006e\u0066\u006f");switch _dadbc :=_ebcbd .(type ){case *_fb .PdfObjectReference :_aabbf :=_dadbc ;
_ebcbd ,_egddb =_dgef .GetIndirectObjectByNumber (int (_aabbf .ObjectNumber ));_ebcbd =_fb .TraceToDirectObject (_ebcbd );if _egddb !=nil {return nil ,_egddb ;};_dccb ,_ =_ebcbd .(*_fb .PdfObjectDictionary );case *_fb .PdfObjectDictionary :_dccb =_dadbc ;
};if _dccb ==nil {return nil ,_fef .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_dgfb :=&PdfInfo {};if _dcgff :=_dgfb .FromPdfObject (_dccb );_dcgff !=nil {return nil ,_dcgff ;
};return _dgfb ,nil ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_fgccc :map[_fb .PdfObject ]struct{}{},_fagc :_abbdf (),_cecbb :_fb .NewParserFromString (txt )};};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_dfe :=NewPdfAnnotation ();_dcag :=&PdfAnnotationMovie {};_dcag .PdfAnnotation =_dfe ;_dfe .SetContext (_dcag );return _dcag ;};func _aeeafe (_aeaadf *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_aeaadf }};


// Encoder returns the font's text encoder.
func (_abdgd pdfCIDFontType2 )Encoder ()_gc .TextEncoder {return _abdgd ._cggb };

// M returns the value of the magenta component of the color.
func (_afca *PdfColorDeviceCMYK )M ()float64 {return _afca [1]};

// Mask returns the uin32 bitmask for the specific flag.
func (_cdace FieldFlag )Mask ()uint32 {return uint32 (_cdace )};func (_ebf *PdfAppender )updateObjectsDeep (_egb _fb .PdfObject ,_eag map[_fb .PdfObject ]struct{}){if _eag ==nil {_eag =map[_fb .PdfObject ]struct{}{};};if _ ,_bfbde :=_eag [_egb ];_bfbde ||_egb ==nil {return ;
};_eag [_egb ]=struct{}{};_gfgg :=_fb .ResolveReferencesDeep (_egb ,_ebf ._adad );if _gfgg !=nil {_gb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gfgg );};switch _faba :=_egb .(type ){case *_fb .PdfIndirectObject :switch {case _faba .GetParser ()==_ebf ._fcae ._cecbb :return ;
case _faba .GetParser ()==_ebf .Reader ._cecbb :_fba ,_ :=_ebf ._fcae .GetIndirectObjectByNumber (int (_faba .ObjectNumber ));_dbeb ,_ggcc :=_fba .(*_fb .PdfIndirectObject );if _ggcc &&_dbeb !=nil {if _dbeb .PdfObject !=_faba .PdfObject &&_dbeb .PdfObject .WriteString ()!=_faba .PdfObject .WriteString (){_ebf .addNewObject (_egb );
_ebf ._beed [_egb ]=_faba .ObjectNumber ;};};default:_ebf .addNewObject (_egb );};_ebf .updateObjectsDeep (_faba .PdfObject ,_eag );case *_fb .PdfObjectArray :for _ ,_dcdc :=range _faba .Elements (){_ebf .updateObjectsDeep (_dcdc ,_eag );};case *_fb .PdfObjectDictionary :for _ ,_efad :=range _faba .Keys (){_ebf .updateObjectsDeep (_faba .Get (_efad ),_eag );
};case *_fb .PdfObjectStreams :if _faba .GetParser ()!=_ebf ._fcae ._cecbb {for _ ,_gdedc :=range _faba .Elements (){_ebf .updateObjectsDeep (_gdedc ,_eag );};};case *_fb .PdfObjectStream :switch {case _faba .GetParser ()==_ebf ._fcae ._cecbb :return ;
case _faba .GetParser ()==_ebf .Reader ._cecbb :if _bgb ,_dacd :=_ebf ._fcae ._cecbb .LookupByReference (_faba .PdfObjectReference );_dacd ==nil {var _bfde bool ;if _ddfac ,_ddba :=_fb .GetStream (_bgb );_ddba &&_cb .Equal (_ddfac .Stream ,_faba .Stream ){_bfde =true ;
};if _cccg ,_fdffc :=_fb .GetDict (_bgb );_bfde &&_fdffc {_bfde =_cccg .WriteString ()==_faba .PdfObjectDictionary .WriteString ();};if _bfde {return ;};};if _faba .ObjectNumber !=0{_ebf ._beed [_egb ]=_faba .ObjectNumber ;};default:if _ ,_fffc :=_ebf ._gfeg [_egb ];
!_fffc {_ebf .addNewObject (_egb );};};_ebf .updateObjectsDeep (_faba .PdfObjectDictionary ,_eag );};};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_dbdeg *PdfFontDescriptor )ToPdfObject ()_fb .PdfObject {_geggf :=_fb .MakeDict ();if _dbdeg ._edbee ==nil {_dbdeg ._edbee =&_fb .PdfIndirectObject {};};_dbdeg ._edbee .PdfObject =_geggf ;_geggf .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _dbdeg .FontName !=nil {_geggf .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dbdeg .FontName );};if _dbdeg .FontFamily !=nil {_geggf .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_dbdeg .FontFamily );};if _dbdeg .FontStretch !=nil {_geggf .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_dbdeg .FontStretch );
};if _dbdeg .FontWeight !=nil {_geggf .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_dbdeg .FontWeight );};if _dbdeg .Flags !=nil {_geggf .Set ("\u0046\u006c\u0061g\u0073",_dbdeg .Flags );};if _dbdeg .FontBBox !=nil {_geggf .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_dbdeg .FontBBox );
};if _dbdeg .ItalicAngle !=nil {_geggf .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_dbdeg .ItalicAngle );};if _dbdeg .Ascent !=nil {_geggf .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_dbdeg .Ascent );};if _dbdeg .Descent !=nil {_geggf .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_dbdeg .Descent );
};if _dbdeg .Leading !=nil {_geggf .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_dbdeg .Leading );};if _dbdeg .CapHeight !=nil {_geggf .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_dbdeg .CapHeight );};if _dbdeg .XHeight !=nil {_geggf .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_dbdeg .XHeight );
};if _dbdeg .StemV !=nil {_geggf .Set ("\u0053\u0074\u0065m\u0056",_dbdeg .StemV );};if _dbdeg .StemH !=nil {_geggf .Set ("\u0053\u0074\u0065m\u0048",_dbdeg .StemH );};if _dbdeg .AvgWidth !=nil {_geggf .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_dbdeg .AvgWidth );
};if _dbdeg .MaxWidth !=nil {_geggf .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_dbdeg .MaxWidth );};if _dbdeg .MissingWidth !=nil {_geggf .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_dbdeg .MissingWidth );};
if _dbdeg .FontFile !=nil {_geggf .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_dbdeg .FontFile );};if _dbdeg .FontFile2 !=nil {_geggf .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_dbdeg .FontFile2 );};if _dbdeg .FontFile3 !=nil {_geggf .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_dbdeg .FontFile3 );
};if _dbdeg .CharSet !=nil {_geggf .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_dbdeg .CharSet );};if _dbdeg .Style !=nil {_geggf .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dbdeg .FontName );};if _dbdeg .Lang !=nil {_geggf .Set ("\u004c\u0061\u006e\u0067",_dbdeg .Lang );
};if _dbdeg .FD !=nil {_geggf .Set ("\u0046\u0044",_dbdeg .FD );};if _dbdeg .CIDSet !=nil {_geggf .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_dbdeg .CIDSet );};return _dbdeg ._edbee ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _fb .PdfObject ;_cdcac []byte ;_cefcb *_fb .PdfIndirectObject ;};func (_gcga *PdfReader )newPdfActionImportDataFromDict (_dfb *_fb .PdfObjectDictionary )(*PdfActionImportData ,error ){_cea ,_geae :=_bg (_dfb .Get ("\u0046"));
if _geae !=nil {return nil ,_geae ;};return &PdfActionImportData {F :_cea },nil ;};func (_ebca *PdfReader )newPdfAnnotationPolyLineFromDict (_dgc *_fb .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_cgef :=PdfAnnotationPolyLine {};_efe ,_abb :=_ebca .newPdfAnnotationMarkupFromDict (_dgc );
if _abb !=nil {return nil ,_abb ;};_cgef .PdfAnnotationMarkup =_efe ;_cgef .Vertices =_dgc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_cgef .LE =_dgc .Get ("\u004c\u0045");_cgef .BS =_dgc .Get ("\u0042\u0053");_cgef .IC =_dgc .Get ("\u0049\u0043");
_cgef .BE =_dgc .Get ("\u0042\u0045");_cgef .IT =_dgc .Get ("\u0049\u0054");_cgef .Measure =_dgc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_cgef ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fcea *PdfAnnotationLine )ToPdfObject ()_fb .PdfObject {_fcea .PdfAnnotation .ToPdfObject ();_cfde :=_fcea ._caa ;_fdbg :=_cfde .PdfObject .(*_fb .PdfObjectDictionary );_fcea .PdfAnnotationMarkup .appendToPdfDictionary (_fdbg );_fdbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u004c\u0069\u006e\u0065"));
_fdbg .SetIfNotNil ("\u004c",_fcea .L );_fdbg .SetIfNotNil ("\u0042\u0053",_fcea .BS );_fdbg .SetIfNotNil ("\u004c\u0045",_fcea .LE );_fdbg .SetIfNotNil ("\u0049\u0043",_fcea .IC );_fdbg .SetIfNotNil ("\u004c\u004c",_fcea .LL );_fdbg .SetIfNotNil ("\u004c\u004c\u0045",_fcea .LLE );
_fdbg .SetIfNotNil ("\u0043\u0061\u0070",_fcea .Cap );_fdbg .SetIfNotNil ("\u0049\u0054",_fcea .IT );_fdbg .SetIfNotNil ("\u004c\u004c\u004f",_fcea .LLO );_fdbg .SetIfNotNil ("\u0043\u0050",_fcea .CP );_fdbg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_fcea .Measure );
_fdbg .SetIfNotNil ("\u0043\u004f",_fcea .CO );return _cfde ;};func (_ggccdc *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_adag *PdfReader )CheckAccessRights (password []byte )(bool ,_bcf .Permissions ,error ){return _adag ._cecbb .CheckAccessRights (password );};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_ecdaf *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// GetAction returns the PDF action for the annotation link.
func (_bdda *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _bdda ._fcf !=nil {return _bdda ._fcf ,nil ;};if _bdda .A ==nil {return nil ,nil ;};if _bdda ._gab ==nil {return nil ,nil ;};_cf ,_gaea :=_bdda ._gab .loadAction (_bdda .A );if _gaea !=nil {return nil ,_gaea ;
};_bdda ._fcf =_cf ;return _bdda ._fcf ,nil ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_bfcg _ac .ReadSeeker ;_cded *_fb .PdfParser ;_fcae *PdfReader ;Reader *PdfReader ;_bdf []*PdfPage ;_fae *PdfAcroForm ;_gdc *DSS ;_fgac _fb .XrefTable ;_efaa int64 ;_dbac int ;_bbbec []_fb .PdfObject ;_gfeg map[_fb .PdfObject ]struct{};
_beed map[_fb .PdfObject ]int64 ;_gcbg map[_fb .PdfObject ]struct{};_adad map[_fb .PdfObject ]struct{};_cgfb int64 ;_aagc bool ;};func (_afdbf *PdfWriter )makeOffSetReference (_egcfg int64 ){_gaadd :=_f .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_egcfg );
_afdbf .writeString (_gaadd );_afdbf .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// SetFontByName sets the font specified by keyName to the given object.
func (_cegff *PdfPageResources )SetFontByName (keyName _fb .PdfObjectName ,obj _fb .PdfObject )error {if _cegff .Font ==nil {_cegff .Font =_fb .MakeDict ();};_acgcc ,_dbfbc :=_fb .TraceToDirectObject (_cegff .Font ).(*_fb .PdfObjectDictionary );if !_dbfbc {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fb .TraceToDirectObject (_cegff .Font ));
return _fb .ErrTypeError ;};_acgcc .Set (keyName ,obj );return nil ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fb .PdfObject ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_acff PdfModel ;_cdcae *_fb .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_fb .PdfObjectName ;T *_fb .PdfObjectString ;TU *_fb .PdfObjectString ;TM *_fb .PdfObjectString ;Ff *_fb .PdfObjectInteger ;
V _fb .PdfObject ;DV _fb .PdfObject ;AA _fb .PdfObject ;};

// String returns the name of the colorspace (DeviceN).
func (_abcg *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_gedgg *PdfPattern )SetContext (ctx PdfModel ){_gedgg ._cfdcd =ctx };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_eaeb *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func (_cbabg *pdfCIDFontType2 )baseFields ()*fontCommon {return &_cbabg .fontCommon };func _aabc (_edeg *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_edeg }};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_bfggb *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_gcdg *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _gcdg .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};func _bgg (_bfbdb *PdfPage )map[_fb .PdfObjectName ]_fb .PdfObject {_cbaa :=make (map[_fb .PdfObjectName ]_fb .PdfObject );if _bfbdb .Resources ==nil {return _cbaa ;
};if _bfbdb .Resources .Font !=nil {if _cfcc ,_ecf :=_fb .GetDict (_bfbdb .Resources .Font );_ecf {for _ ,_cgbe :=range _cfcc .Keys (){_cbaa [_cgbe ]=_cfcc .Get (_cgbe );};};};if _bfbdb .Resources .ExtGState !=nil {if _fccg ,_edae :=_fb .GetDict (_bfbdb .Resources .ExtGState );
_edae {for _ ,_egfe :=range _fccg .Keys (){_cbaa [_egfe ]=_fccg .Get (_egfe );};};};if _bfbdb .Resources .XObject !=nil {if _gfdbc ,_aeee :=_fb .GetDict (_bfbdb .Resources .XObject );_aeee {for _ ,_egff :=range _gfdbc .Keys (){_cbaa [_egff ]=_gfdbc .Get (_egff );
};};};if _bfbdb .Resources .Pattern !=nil {if _aagg ,_bffc :=_fb .GetDict (_bfbdb .Resources .Pattern );_bffc {for _ ,_bbbd :=range _aagg .Keys (){_cbaa [_bbbd ]=_aagg .Get (_bbbd );};};};if _bfbdb .Resources .Shading !=nil {if _badbf ,_bddb :=_fb .GetDict (_bfbdb .Resources .Shading );
_bddb {for _ ,_agbaf :=range _badbf .Keys (){_cbaa [_agbaf ]=_badbf .Get (_agbaf );};};};if _bfbdb .Resources .ProcSet !=nil {if _eecc ,_gdef :=_fb .GetDict (_bfbdb .Resources .ProcSet );_gdef {for _ ,_eae :=range _eecc .Keys (){_cbaa [_eae ]=_eecc .Get (_eae );
};};};if _bfbdb .Resources .Properties !=nil {if _dbba ,_dgfg :=_fb .GetDict (_bfbdb .Resources .Properties );_dgfg {for _ ,_afa :=range _dbba .Keys (){_cbaa [_afa ]=_dbba .Get (_afa );};};};return _cbaa ;};func (_debb *PdfPage )setContainer (_agaf *_fb .PdfIndirectObject ){_agaf .PdfObject =_debb ._fadc ;
_debb ._dfbd =_agaf ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_dead :=NewPdfAnnotation ();_fcb :=&PdfAnnotationFileAttachment {};_fcb .PdfAnnotation =_dead ;_fcb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dead .SetContext (_fcb );return _fcb ;
};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// ToPdfObject implements interface PdfModel.
func (_fbb *PdfActionRendition )ToPdfObject ()_fb .PdfObject {_fbb .PdfAction .ToPdfObject ();_aff :=_fbb ._ege ;_cca :=_aff .PdfObject .(*_fb .PdfObjectDictionary );_cca .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeRendition )));_cca .SetIfNotNil ("\u0052",_fbb .R );
_cca .SetIfNotNil ("\u0041\u004e",_fbb .AN );_cca .SetIfNotNil ("\u004f\u0050",_fbb .OP );_cca .SetIfNotNil ("\u004a\u0053",_fbb .JS );return _aff ;};

// SetBorderWidth sets the style's border width.
func (_gabg *PdfBorderStyle )SetBorderWidth (width float64 ){_gabg .W =&width };

// ColorToRGB converts a DeviceN color to an RGB color.
func (_eddcc *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _eddcc .AlternateSpace ==nil {return nil ,_fef .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _eddcc .AlternateSpace .ColorToRGB (color );};

// SetFlag sets the flag for the field.
func (_gacef *PdfField )SetFlag (flag FieldFlag ){_gacef .Ff =_fb .MakeInteger (int64 (flag ))};

// Fill populates `form` with values provided by `provider`.
func (_ccfa *PdfAcroForm )Fill (provider FieldValueProvider )error {return _ccfa .fill (provider ,nil )};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_begef :=&PdfPageResourcesColorspaces {};_begef .Names =[]string {};_begef .Colorspaces =map[string ]PdfColorspace {};_begef ._gaag =&_fb .PdfIndirectObject {};return _begef ;};func (_ddcg *PdfReader )newPdfAnnotationSquigglyFromDict (_ddef *_fb .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_cabfd :=PdfAnnotationSquiggly {};
_ccca ,_fgf :=_ddcg .newPdfAnnotationMarkupFromDict (_ddef );if _fgf !=nil {return nil ,_fgf ;};_cabfd .PdfAnnotationMarkup =_ccca ;_cabfd .QuadPoints =_ddef .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cabfd ,nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_cffcg *PdfShadingPattern )ToPdfObject ()_fb .PdfObject {_cffcg .PdfPattern .ToPdfObject ();_cbdfb :=_cffcg .getDict ();if _cffcg .Shading !=nil {_cbdfb .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cffcg .Shading .ToPdfObject ());};if _cffcg .Matrix !=nil {_cbdfb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cffcg .Matrix );
};if _cffcg .ExtGState !=nil {_cbdfb .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cffcg .ExtGState );};return _cffcg ._aadcb ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_fbaab *LTV )EnableAll (extraCerts []*_bc .Certificate )error {_fbfd :=_fbaab ._cfaa ._fcae .AcroForm ;for _ ,_gcdga :=range _fbfd .AllFields (){_bgedf ,_ :=_gcdga .GetContext ().(*PdfFieldSignature );if _bgedf ==nil {continue ;};_ggfcc :=_bgedf .V ;
if _degc :=_fbaab .validateSig (_ggfcc );_degc !=nil {_gb .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_degc );
};if _agdge :=_fbaab .Enable (_ggfcc ,extraCerts );_agdge !=nil {return _agdge ;};};return nil ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_bgeg *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// AddCustomInfo adds a custom info into document info dictionary.
func (_fabcf *PdfInfo )AddCustomInfo (name string ,value string )error {if _fabcf ._abdg ==nil {_fabcf ._abdg =_fb .MakeDict ();};if _ ,_gfeag :=_dfde [name ];_gfeag {return _f .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_fabcf ._abdg .SetIfNotNil (*_fb .MakeName (name ),_fb .MakeString (value ));return nil ;};

// FromPdfObject parses PdfInfo from the input core.PdfObject.
func (_dfbafd *PdfInfo )FromPdfObject (obj _fb .PdfObject )error {_adac ,_adeg :=obj .(*_fb .PdfObjectDictionary );if !_adeg {return _f .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_ceag :=range _adac .Keys (){switch _ceag {case "\u0054\u0069\u0074l\u0065":_dfbafd .Title ,_ =_fb .GetString (_adac .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_dfbafd .Author ,_ =_fb .GetString (_adac .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_dfbafd .Subject ,_ =_fb .GetString (_adac .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_dfbafd .Keywords ,_ =_fb .GetString (_adac .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_dfbafd .Creator ,_ =_fb .GetString (_adac .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_dfbafd .Producer ,_ =_fb .GetString (_adac .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_dfbafd .Trapped ,_ =_fb .GetName (_adac .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _cdcb ,_abed :=_fb .GetString (_adac .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_abed &&_cdcb .String ()!=""{_aebc ,_bfdb :=NewPdfDate (_cdcb .String ());if _bfdb !=nil {return _f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_bfdb );
};_dfbafd .CreationDate =&_aebc ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _dgbf ,_addgf :=_fb .GetString (_adac .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_addgf &&_dgbf .String ()!=""{_gaga ,_gcbga :=NewPdfDate (_dgbf .String ());if _gcbga !=nil {return _f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_gcbga );
};_dfbafd .ModifiedDate =&_gaga ;};default:_cfda ,_ :=_fb .GetString (_adac .Get (_ceag ));if _dfbafd ._abdg ==nil {_dfbafd ._abdg =_fb .MakeDict ();};_dfbafd ._abdg .Set (_ceag ,_cfda );};};return nil ;};func (_fgb *PdfReader )newPdfActionGoTo3DViewFromDict (_gdf *_fb .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_gdf .Get ("\u0054\u0041"),V :_gdf .Get ("\u0056")},nil ;
};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _fb .PdfObject ;Name _fb .PdfObject ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_egbde *PdfWriter )SetOpenAction (dest _fb .PdfObject )error {if dest ==nil ||_fb .IsNullObject (dest ){return nil ;};_egbde ._aeab .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _egbde .addObjects (dest );};func (_bfbfe *PdfReader )newPdfSignatureFromIndirect (_ebba *_fb .PdfIndirectObject )(*PdfSignature ,error ){_abdbee ,_ccfaf :=_ebba .PdfObject .(*_fb .PdfObjectDictionary );
if !_ccfaf {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _badcb ,_ebgaab :=_bfbfe ._fagc .GetModelFromPrimitive (_ebba ).(*PdfSignature );_ebgaab {return _badcb ,nil ;};_cecdea :=&PdfSignature {};_cecdea ._gcffe =_ebba ;_cecdea .Type ,_ =_fb .GetName (_abdbee .Get ("\u0054\u0079\u0070\u0065"));
_cecdea .Filter ,_ccfaf =_fb .GetName (_abdbee .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_ccfaf {_gb .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_cecdea .SubFilter ,_ =_fb .GetName (_abdbee .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_cecdea .Contents ,_ccfaf =_fb .GetString (_abdbee .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_ccfaf {_gb .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_cecdea .Cert =_abdbee .Get ("\u0043\u0065\u0072\u0074");_cecdea .ByteRange ,_ =_fb .GetArray (_abdbee .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_cecdea .Reference ,_ =_fb .GetArray (_abdbee .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));
_cecdea .Changes ,_ =_fb .GetArray (_abdbee .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_cecdea .Name ,_ =_fb .GetString (_abdbee .Get ("\u004e\u0061\u006d\u0065"));_cecdea .M ,_ =_fb .GetString (_abdbee .Get ("\u004d"));_cecdea .Location ,_ =_fb .GetString (_abdbee .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_cecdea .Reason ,_ =_fb .GetString (_abdbee .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_cecdea .ContactInfo ,_ =_fb .GetString (_abdbee .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_cecdea .R ,_ =_fb .GetInt (_abdbee .Get ("\u0052"));
_cecdea .V ,_ =_fb .GetInt (_abdbee .Get ("\u0056"));_cecdea .PropBuild ,_ =_fb .GetDict (_abdbee .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_cecdea .PropAuthTime ,_ =_fb .GetInt (_abdbee .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_cecdea .PropAuthType ,_ =_fb .GetName (_abdbee .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _cecdea ,nil ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_abgea *PdfPageResources )AddExtGState (gsName _fb .PdfObjectName ,gsDict _fb .PdfObject )error {if _abgea .ExtGState ==nil {_abgea .ExtGState =_fb .MakeDict ();};_gfdgb :=_abgea .ExtGState ;_dfdcc ,_cbgaf :=_fb .TraceToDirectObject (_gfdgb ).(*_fb .PdfObjectDictionary );
if !_cbgaf {_gb .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_gfdgb ,_fb .TraceToDirectObject (_gfdgb ));
return _fb .ErrTypeError ;};_dfdcc .Set (gsName ,gsDict );return nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_gaeca *PdfColorspaceCalRGB )ToPdfObject ()_fb .PdfObject {_afaa :=&_fb .PdfObjectArray {};_afaa .Append (_fb .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_efgd :=_fb .MakeDict ();if _gaeca .WhitePoint !=nil {_fccc :=_fb .MakeArray (_fb .MakeFloat (_gaeca .WhitePoint [0]),_fb .MakeFloat (_gaeca .WhitePoint [1]),_fb .MakeFloat (_gaeca .WhitePoint [2]));
_efgd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fccc );}else {_gb .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _gaeca .BlackPoint !=nil {_abfb :=_fb .MakeArray (_fb .MakeFloat (_gaeca .BlackPoint [0]),_fb .MakeFloat (_gaeca .BlackPoint [1]),_fb .MakeFloat (_gaeca .BlackPoint [2]));_efgd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_abfb );
};if _gaeca .Gamma !=nil {_efcd :=_fb .MakeArray (_fb .MakeFloat (_gaeca .Gamma [0]),_fb .MakeFloat (_gaeca .Gamma [1]),_fb .MakeFloat (_gaeca .Gamma [2]));_efgd .Set ("\u0047\u0061\u006dm\u0061",_efcd );};if _gaeca .Matrix !=nil {_gcgg :=_fb .MakeArray (_fb .MakeFloat (_gaeca .Matrix [0]),_fb .MakeFloat (_gaeca .Matrix [1]),_fb .MakeFloat (_gaeca .Matrix [2]),_fb .MakeFloat (_gaeca .Matrix [3]),_fb .MakeFloat (_gaeca .Matrix [4]),_fb .MakeFloat (_gaeca .Matrix [5]),_fb .MakeFloat (_gaeca .Matrix [6]),_fb .MakeFloat (_gaeca .Matrix [7]),_fb .MakeFloat (_gaeca .Matrix [8]));
_efgd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gcgg );};_afaa .Append (_efgd );if _gaeca ._ffdd !=nil {_gaeca ._ffdd .PdfObject =_afaa ;return _gaeca ._ffdd ;};return _afaa ;};func (_bgeb *PdfReader )newPdfFieldFromIndirectObject (_gfdcb *_fb .PdfIndirectObject ,_egabc *PdfField )(*PdfField ,error ){if _dcfa ,_efbb :=_bgeb ._fagc .GetModelFromPrimitive (_gfdcb ).(*PdfField );
_efbb {return _dcfa ,nil ;};_aaeb ,_edgcf :=_fb .GetDict (_gfdcb );if !_edgcf {return nil ,_f .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_eece :=NewPdfField ();_eece ._cdcae =_gfdcb ;_eece ._cdcae .PdfObject =_aaeb ;if _egfd ,_abgg :=_fb .GetName (_aaeb .Get ("\u0046\u0054"));_abgg {_eece .FT =_egfd ;};if _egabc !=nil {_eece .Parent =_egabc ;};_eece .T ,_ =_aaeb .Get ("\u0054").(*_fb .PdfObjectString );
_eece .TU ,_ =_aaeb .Get ("\u0054\u0055").(*_fb .PdfObjectString );_eece .TM ,_ =_aaeb .Get ("\u0054\u004d").(*_fb .PdfObjectString );_eece .Ff ,_ =_aaeb .Get ("\u0046\u0066").(*_fb .PdfObjectInteger );_eece .V =_aaeb .Get ("\u0056");_eece .DV =_aaeb .Get ("\u0044\u0056");
_eece .AA =_aaeb .Get ("\u0041\u0041");_cccc :=_eece .FT ;if _cccc ==nil &&_egabc !=nil {_cccc =_egabc .FT ;};if _cccc !=nil {switch *_cccc {case "\u0054\u0078":_ddfd ,_fefe :=_egcea (_aaeb );if _fefe !=nil {return nil ,_fefe ;};_ddfd .PdfField =_eece ;
_eece ._acff =_ddfd ;case "\u0043\u0068":_cabfc ,_edga :=_faab (_aaeb );if _edga !=nil {return nil ,_edga ;};_cabfc .PdfField =_eece ;_eece ._acff =_cabfc ;case "\u0042\u0074\u006e":_aafde ,_ccag :=_eagb (_aaeb );if _ccag !=nil {return nil ,_ccag ;};_aafde .PdfField =_eece ;
_eece ._acff =_aafde ;case "\u0053\u0069\u0067":_ccgf ,_dfege :=_bgeb .newPdfFieldSignatureFromDict (_aaeb );if _dfege !=nil {return nil ,_dfege ;};_ccgf .PdfField =_eece ;_eece ._acff =_ccgf ;default:_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_eece .FT );
return nil ,_fef .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _gfebe ,_gaeeb :=_fb .GetName (_aaeb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_gaeeb {if *_gfebe =="\u0057\u0069\u0064\u0067\u0065\u0074"{_geef ,_faggg :=_bgeb .newPdfAnnotationFromIndirectObject (_gfdcb );
if _faggg !=nil {return nil ,_faggg ;};_cefdf ,_dcda :=_geef .GetContext ().(*PdfAnnotationWidget );if !_dcda {return nil ,_fef .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");
};_cefdf ._dea =_eece ;_cefdf .Parent =_eece ._cdcae ;_eece .Annotations =append (_eece .Annotations ,_cefdf );return _eece ,nil ;};};_deadb :=true ;if _afbbc ,_gaabc :=_fb .GetArray (_aaeb .Get ("\u004b\u0069\u0064\u0073"));_gaabc {_ceeef :=make ([]*_fb .PdfIndirectObject ,0,_afbbc .Len ());
for _ ,_fdfd :=range _afbbc .Elements (){_faaac ,_abcdg :=_fb .GetIndirect (_fdfd );if !_abcdg {_faae ,_dgeg :=_fb .GetStream (_fdfd );if _dgeg &&_faae .PdfObjectDictionary !=nil {_ffcda ,_ebfb :=_fb .GetNameVal (_faae .Get ("\u0054\u0079\u0070\u0065"));
if _ebfb &&_ffcda =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_gb .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_fef .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_bdeeb ,_aadf :=_fb .GetDict (_faaac );
if !_aadf {return nil ,ErrTypeCheck ;};if _deadb {_deadb =!_bded (_bdeeb );};_ceeef =append (_ceeef ,_faaac );};for _ ,_ebee :=range _ceeef {if _deadb {_ecfb ,_fecde :=_bgeb .newPdfAnnotationFromIndirectObject (_ebee );if _fecde !=nil {_gb .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_fecde );
return nil ,_fecde ;};_addbb ,_acge :=_ecfb ._bfda .(*PdfAnnotationWidget );if !_acge {return nil ,ErrTypeCheck ;};_addbb ._dea =_eece ;_eece .Annotations =append (_eece .Annotations ,_addbb );}else {_eabe ,_beba :=_bgeb .newPdfFieldFromIndirectObject (_ebee ,_eece );
if _beba !=nil {_gb .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_beba );return nil ,_beba ;};_eece .Kids =append (_eece .Kids ,_eabe );
};};};return _eece ,nil ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _fb .PdfObject ;IC _fb .PdfObject ;BE _fb .PdfObject ;RD _fb .PdfObject ;};

// GetVersion gets the document version.
func (_ddfaca *PdfWriter )GetVersion ()_fb .Version {return _ddfaca ._effda };

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_bgab *pdfCIDFontType0 )ToPdfObject ()_fb .PdfObject {return _fb .MakeNull ()};

// ToPdfObject implements interface PdfModel.
func (_deada *PdfAnnotationSquiggly )ToPdfObject ()_fb .PdfObject {_deada .PdfAnnotation .ToPdfObject ();_bbge :=_deada ._caa ;_edcg :=_bbge .PdfObject .(*_fb .PdfObjectDictionary );_deada .PdfAnnotationMarkup .appendToPdfDictionary (_edcg );_edcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_edcg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_deada .QuadPoints );return _bbge ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_cce :=NewPdfAnnotation ();_deda :=&PdfAnnotationPolyLine {};_deda .PdfAnnotation =_cce ;_deda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cce .SetContext (_deda );return _deda ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_daaed *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_cdgg :=func (_cagg float64 )float64 {if _cagg >=6.0/29{return _cagg *_cagg *_cagg ;};return 108.0/841*(_cagg -4/29);};_fade ,_gebf :=color .(*PdfColorLab );if !_gebf {_gb .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_fade .L ();AStar :=_fade .A ();BStar :=_fade .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_daaed .WhitePoint [0]*_cdgg (L );Y :=_daaed .WhitePoint [1]*_cdgg (M );Z :=_daaed .WhitePoint [2]*_cdgg (N );_fabc :=3.240479*X +-1.537150*Y +-0.498535*Z ;_fdfg :=-0.969256*X +1.875992*Y +0.041556*Z ;_cgaae :=0.055648*X +-0.204043*Y +1.057311*Z ;_fabc =_eda .Min (_eda .Max (_fabc ,0),1.0);
_fdfg =_eda .Min (_eda .Max (_fdfg ,0),1.0);_cgaae =_eda .Min (_eda .Max (_cgaae ,0),1.0);return NewPdfColorDeviceRGB (_fabc ,_fdfg ,_cgaae ),nil ;};

// Width returns the width of `rect`.
func (_agfba *PdfRectangle )Width ()float64 {return _eda .Abs (_agfba .Urx -_agfba .Llx )};func _acbd (_cbde string )map[string ]string {_agbdd :=_abeac .Split (_cbde ,-1);_baffe :=map[string ]string {};for _ ,_gfgc :=range _agbdd {_baagg :=_cbgdg .FindStringSubmatch (_gfgc );
if _baagg ==nil {continue ;};_efbbe ,_ccbga :=_baagg [1],_baagg [2];_baffe [_efbbe ]=_ccbga ;};return _baffe ;};func (_dbf *PdfReader )newPdfAnnotationWatermarkFromDict (_ggcb *_fb .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_accb :=PdfAnnotationWatermark {};
_accb .FixedPrint =_ggcb .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_accb ,nil ;};func (_ddeaa *PdfAcroForm )filteredFields (_dgcbe FieldFilterFunc ,_abdea bool )[]*PdfField {if _ddeaa ==nil {return nil ;};return _cdad (_ddeaa .Fields ,_dgcbe ,_abdea );
};func (_fafe fontCommon )fontFlags ()int {if _fafe ._bgdf ==nil {return 0;};return _fafe ._bgdf ._fafbg ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_fb .PdfObjectStream )(*XObjectForm ,error ){_ecbgd :=&XObjectForm {};_ecbgd ._deaaa =stream ;_adccg :=*(stream .PdfObjectDictionary );_bafcba ,_fcde :=_fb .NewEncoderFromStream (stream );if _fcde !=nil {return nil ,_fcde ;
};_ecbgd .Filter =_bafcba ;if _bffb :=_adccg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_bffb !=nil {_dgaef ,_beabb :=_bffb .(*_fb .PdfObjectName );if !_beabb {return nil ,_fef .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};
if *_dgaef !="\u0046\u006f\u0072\u006d"{_gb .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_fef .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _bcebc :=_adccg .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_bcebc !=nil {_ecbgd .FormType =_bcebc ;};if _aceac :=_adccg .Get ("\u0042\u0042\u006f\u0078");_aceac !=nil {_ecbgd .BBox =_aceac ;};if _gfcdg :=_adccg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_gfcdg !=nil {_ecbgd .Matrix =_gfcdg ;};if _adbab :=_adccg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_adbab !=nil {_adbab =_fb .TraceToDirectObject (_adbab );_faed ,_gadfa :=_adbab .(*_fb .PdfObjectDictionary );if !_gadfa {_gb .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_fb .ErrTypeError ;};_bccc ,_cbcab :=NewPdfPageResourcesFromDict (_faed );if _cbcab !=nil {_gb .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_cbcab ;};_ecbgd .Resources =_bccc ;_gb .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_ecbgd .Resources );};_ecbgd .Group =_adccg .Get ("\u0047\u0072\u006fu\u0070");_ecbgd .Ref =_adccg .Get ("\u0052\u0065\u0066");
_ecbgd .MetaData =_adccg .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_ecbgd .PieceInfo =_adccg .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ecbgd .LastModified =_adccg .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_ecbgd .StructParent =_adccg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ecbgd .StructParents =_adccg .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_ecbgd .OPI =_adccg .Get ("\u004f\u0050\u0049");
_ecbgd .OC =_adccg .Get ("\u004f\u0043");_ecbgd .Name =_adccg .Get ("\u004e\u0061\u006d\u0065");_ecbgd .Stream =stream .Stream ;return _ecbgd ,nil ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_eafe interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_fb .PdfObject ;GetContainingPdfObject ()_fb .PdfObject ;};func (_ccee *PdfAnnotationMarkup )appendToPdfDictionary (_acfc *_fb .PdfObjectDictionary ){_acfc .SetIfNotNil ("\u0054",_ccee .T );if _ccee .Popup !=nil {_acfc .Set ("\u0050\u006f\u0070u\u0070",_ccee .Popup .ToPdfObject ());
};_acfc .SetIfNotNil ("\u0043\u0041",_ccee .CA );_acfc .SetIfNotNil ("\u0052\u0043",_ccee .RC );_acfc .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ccee .CreationDate );_acfc .SetIfNotNil ("\u0049\u0052\u0054",_ccee .IRT );
_acfc .SetIfNotNil ("\u0053\u0075\u0062\u006a",_ccee .Subj );_acfc .SetIfNotNil ("\u0052\u0054",_ccee .RT );_acfc .SetIfNotNil ("\u0049\u0054",_ccee .IT );_acfc .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_ccee .ExData );};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// ColorToRGB converts an Indexed color to an RGB color.
func (_bgde *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bgde .Base ==nil {return nil ,_fef .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _bgde .Base .ColorToRGB (color );};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// PartialName returns the partial name of the field.
func (_gfed *PdfField )PartialName ()string {_acgf :="";if _gfed .T !=nil {_acgf =_gfed .T .Decoded ();}else {_gb .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _acgf ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _fb .PdfObject ;Volume _fb .PdfObject ;Synchronous _fb .PdfObject ;Repeat _fb .PdfObject ;Mix _fb .PdfObject ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_ebcb *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_ebcb .HiVal )};};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_cabcb *XObjectImage )SetFilter (encoder _fb .StreamEncoder )error {_egabg :=_cabcb .Stream ;_bcede ,_fgfdg :=_cabcb .Filter .DecodeBytes (_egabg );if _fgfdg !=nil {return _fgfdg ;};_cabcb .Filter =encoder ;encoder .UpdateParams (_cabcb .getParamsDict ());
_egabg ,_fgfdg =encoder .EncodeBytes (_bcede );if _fgfdg !=nil {return _fgfdg ;};_cabcb .Stream =_egabg ;return nil ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_eadcbb *pdfCIDFontType2 )ToPdfObject ()_fb .PdfObject {if _eadcbb ._gggb ==nil {_eadcbb ._gggb =&_fb .PdfIndirectObject {};};_ceca :=_eadcbb .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_eadcbb ._gggb .PdfObject =_ceca ;if _eadcbb .CIDSystemInfo !=nil {_ceca .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_eadcbb .CIDSystemInfo );};if _eadcbb .DW !=nil {_ceca .Set ("\u0044\u0057",_eadcbb .DW );};
if _eadcbb .DW2 !=nil {_ceca .Set ("\u0044\u0057\u0032",_eadcbb .DW2 );};if _eadcbb .W !=nil {_ceca .Set ("\u0057",_eadcbb .W );};if _eadcbb .W2 !=nil {_ceca .Set ("\u0057\u0032",_eadcbb .W2 );};if _eadcbb .CIDToGIDMap !=nil {_ceca .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_eadcbb .CIDToGIDMap );
};return _eadcbb ._gggb ;};var _dbecc =_bf .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");


// MergePageWith appends page content to source Pdf file page content.
func (_gefd *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_cbbd :=pageNum -1;var _acde *PdfPage ;for _agfa ,_daa :=range _gefd ._bdf {if _agfa ==_cbbd {_acde =_daa ;};};if _acde ==nil {return _f .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _acde ._dfbd !=nil &&_acde ._dfbd .GetParser ()==_gefd ._fcae ._cecbb {_acde =_acde .Duplicate ();_gefd ._bdf [_cbbd ]=_acde ;};page =page .Duplicate ();_cbeab (page );_eefg :=_bgg (_acde );_dfba :=_bgg (page );_aeaa :=make (map[_fb .PdfObjectName ]_fb .PdfObjectName );
for _gfff :=range _dfba {if _ ,_fgdf :=_eefg [_gfff ];_fgdf {for _dcefc :=1;true ;_dcefc ++{_adaf :=_fb .PdfObjectName (string (_gfff )+_deg .Itoa (_dcefc ));if _ ,_gacf :=_eefg [_adaf ];!_gacf {_aeaa [_gfff ]=_adaf ;break ;};};};};_abcd ,_eafd :=page .GetContentStreams ();
if _eafd !=nil {return _eafd ;};_gebe ,_eafd :=_acde .GetContentStreams ();if _eafd !=nil {return _eafd ;};for _aead ,_afae :=range _abcd {for _ccdc ,_dcfda :=range _aeaa {_afae =_eg .Replace (_afae ,"\u002f"+string (_ccdc ),"\u002f"+string (_dcfda ),-1);
};_abcd [_aead ]=_afae ;};_gebe =append (_gebe ,_abcd ...);if _cgcb :=_acde .SetContentStreams (_gebe ,_fb .NewFlateEncoder ());_cgcb !=nil {return _cgcb ;};_acde ._ddad =append (_acde ._ddad ,page ._ddad ...);if _acde .Resources ==nil {_acde .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_acde .Resources .Font =_gefd .mergeResources (_acde .Resources .Font ,page .Resources .Font ,_aeaa );_acde .Resources .XObject =_gefd .mergeResources (_acde .Resources .XObject ,page .Resources .XObject ,_aeaa );_acde .Resources .Properties =_gefd .mergeResources (_acde .Resources .Properties ,page .Resources .Properties ,_aeaa );
if _acde .Resources .ProcSet ==nil {_acde .Resources .ProcSet =page .Resources .ProcSet ;};_acde .Resources .Shading =_gefd .mergeResources (_acde .Resources .Shading ,page .Resources .Shading ,_aeaa );_acde .Resources .ExtGState =_gefd .mergeResources (_acde .Resources .ExtGState ,page .Resources .ExtGState ,_aeaa );
};_eeaeb ,_eafd :=_acde .GetMediaBox ();if _eafd !=nil {return _eafd ;};_bde ,_eafd :=page .GetMediaBox ();if _eafd !=nil {return _eafd ;};var _efdg bool ;if _eeaeb .Llx > _bde .Llx {_eeaeb .Llx =_bde .Llx ;_efdg =true ;};if _eeaeb .Lly > _bde .Lly {_eeaeb .Lly =_bde .Lly ;
_efdg =true ;};if _eeaeb .Urx < _bde .Urx {_eeaeb .Urx =_bde .Urx ;_efdg =true ;};if _eeaeb .Ury < _bde .Ury {_eeaeb .Ury =_bde .Ury ;_efdg =true ;};if _efdg {_acde .MediaBox =_eeaeb ;};return nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_gagb *DSS )GetContainingPdfObject ()_fb .PdfObject {return _gagb ._aecef };

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_fcbbf :=PdfColorCalGray (grayVal );return &_fcbbf ;};

// SetAction sets the PDF action for the annotation link.
func (_efb *PdfAnnotationLink )SetAction (action *PdfAction ){_efb ._fcf =action ;if action ==nil {_efb .A =nil ;};};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_aeeg *Image )ConvertToBinary ()error {if _aeeg .ColorComponents ==1&&_aeeg .BitsPerComponent ==1{return nil ;};_aacdd ,_fabg :=_aeeg .ToGoImage ();if _fabg !=nil {return _fabg ;};_deed ,_fabg :=_egf .MonochromeConverter .Convert (_aacdd );if _fabg !=nil {return _fabg ;
};_aeeg .Data =_deed .Base ().Data ;_aeeg ._adecb ,_fabg =_egf .ScaleAlphaToMonochrome (_aeeg ._adecb ,int (_aeeg .Width ),int (_aeeg .Height ));if _fabg !=nil {return _fabg ;};_aeeg .BitsPerComponent =1;_aeeg .ColorComponents =1;_aeeg ._cdgb =nil ;return nil ;
};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_dgdd *_fb .PdfObjectDictionary ;_ffdd *_fb .PdfIndirectObject ;};func (_efef *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _efef ._bgdf };
func (_egfb *PdfPattern )getDict ()*_fb .PdfObjectDictionary {if _cffg ,_abecd :=_egfb ._aadcb .(*_fb .PdfIndirectObject );_abecd {_bcdff ,_eageb :=_cffg .PdfObject .(*_fb .PdfObjectDictionary );if !_eageb {return nil ;};return _bcdff ;}else if _begfd ,_baca :=_egfb ._aadcb .(*_fb .PdfObjectStream );
_baca {return _begfd .PdfObjectDictionary ;}else {_gb .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_egfb ._aadcb );
return nil ;};};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_cefc *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// SetDocumentOptimizer sets up a document optimizer.
func (_ebag *PdfWriter )SetDocumentOptimizer (optimizer DocumentOptimizer ){_ebag ._bbgdc =optimizer };

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _fb .PdfObject ;Name _fb .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_fecfe *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdbc :=vals [0];if _fdbc < 0.0||_fdbc > 1.0{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_bfcd :=vals [1];if _bfcd < 0.0||_bfcd > 1.0{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdef :=vals [2];if _fdef < 0.0||_fdef > 1.0{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_feeg :=NewPdfColorDeviceRGB (_fdbc ,_bfcd ,_fdef );return _feeg ,nil ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_fb .PdfObjectDictionary )(*PdfPageResources ,error ){_dcca :=NewPdfPageResources ();if _bbccg :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_bbccg !=nil {_dcca .ExtGState =_bbccg ;};if _aadb :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_aadb !=nil &&!_fb .IsNullObject (_aadb ){_dcca .ColorSpace =_aadb ;};if _gdfgb :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_gdfgb !=nil {_dcca .Pattern =_gdfgb ;};if _dcddf :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_dcddf !=nil {_dcca .Shading =_dcddf ;
};if _dcdf :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_dcdf !=nil {_dcca .XObject =_dcdf ;};if _edeeg :=_fb .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_edeeg !=nil {_dcca .Font =_edeeg ;};if _edbff :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_edbff !=nil {_dcca .ProcSet =_edbff ;};if _abfgf :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_abfgf !=nil {_dcca .Properties =_abfgf ;};return _dcca ,nil ;};func _bebcff (_gdag *_fb .PdfObjectDictionary )(*PdfShadingType1 ,error ){_dgedd :=PdfShadingType1 {};
if _cagab :=_gdag .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_cagab !=nil {_cagab =_fb .TraceToDirectObject (_cagab );_fadda ,_degba :=_cagab .(*_fb .PdfObjectArray );if !_degba {_gb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cagab );
return nil ,_fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dgedd .Domain =_fadda ;};if _ebfec :=_gdag .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ebfec !=nil {_ebfec =_fb .TraceToDirectObject (_ebfec );
_bfged ,_bbgg :=_ebfec .(*_fb .PdfObjectArray );if !_bbgg {_gb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ebfec );return nil ,_fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_dgedd .Matrix =_bfged ;};_bbaa :=_gdag .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bbaa ==nil {_gb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dgedd .Function =[]PdfFunction {};if _gcgf ,_egcad :=_bbaa .(*_fb .PdfObjectArray );_egcad {for _ ,_fcbga :=range _gcgf .Elements (){_fabcg ,_abbf :=_ggfef (_fcbga );if _abbf !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_abbf );
return nil ,_abbf ;};_dgedd .Function =append (_dgedd .Function ,_fabcg );};}else {_cdbbd ,_gbebg :=_ggfef (_bbaa );if _gbebg !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbebg );
return nil ,_gbebg ;};_dgedd .Function =append (_dgedd .Function ,_cdbbd );};return &_dgedd ,nil ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_gbab *PdfAcroForm )ToPdfObject ()_fb .PdfObject {_egfef :=_gbab ._degd ;_fgcd :=_egfef .PdfObject .(*_fb .PdfObjectDictionary );if _gbab .Fields !=nil {_dgbgfg :=_fb .PdfObjectArray {};for _ ,_egeb :=range *_gbab .Fields {_dfbb :=_egeb .GetContext ();
if _dfbb !=nil {_dgbgfg .Append (_dfbb .ToPdfObject ());}else {_dgbgfg .Append (_egeb .ToPdfObject ());};};_fgcd .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_dgbgfg );};if _gbab .NeedAppearances !=nil {_fgcd .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_gbab .NeedAppearances );
};if _gbab .SigFlags !=nil {_fgcd .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_gbab .SigFlags );};if _gbab .CO !=nil {_fgcd .Set ("\u0043\u004f",_gbab .CO );};if _gbab .DR !=nil {_fgcd .Set ("\u0044\u0052",_gbab .DR .ToPdfObject ());};if _gbab .DA !=nil {_fgcd .Set ("\u0044\u0041",_gbab .DA );
};if _gbab .Q !=nil {_fgcd .Set ("\u0051",_gbab .Q );};if _gbab .XFA !=nil {_fgcd .Set ("\u0058\u0046\u0041",_gbab .XFA );};return _egfef ;};

// Encoder returns the font's text encoder.
func (_daee pdfCIDFontType0 )Encoder ()_gc .TextEncoder {return _daee ._gdfb };func (_ccbbc *PdfWriter )setDocInfo (_ebgfgf _fb .PdfObject ){if _ccbbc .hasObject (_ccbbc ._gbaa ){delete (_ccbbc ._bddff ,_ccbbc ._gbaa );delete (_ccbbc ._decb ,_ccbbc ._gbaa );
for _cfdcb ,_dacbe :=range _ccbbc ._cgdaa {if _dacbe ==_ccbbc ._gbaa {copy (_ccbbc ._cgdaa [_cfdcb :],_ccbbc ._cgdaa [_cfdcb +1:]);_ccbbc ._cgdaa [len (_ccbbc ._cgdaa )-1]=nil ;_ccbbc ._cgdaa =_ccbbc ._cgdaa [:len (_ccbbc ._cgdaa )-1];break ;};};};_addcd :=_fb .PdfIndirectObject {};
_addcd .PdfObject =_ebgfgf ;_ccbbc ._gbaa =&_addcd ;_ccbbc .addObject (&_addcd );};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_afeda DefaultImageHandler )NewImageFromGoImage (goimg _fa .Image )(*Image ,error ){_cffba ,_fdee :=_egf .FromGoImage (goimg );if _fdee !=nil {return nil ,_fdee ;};_ggaed :=_gaaa (_cffba .Base ());return &_ggaed ,nil ;};func _cgbfd ()string {_cacda .Lock ();
defer _cacda .Unlock ();_gaage :=_ge .GetLicenseKey ();if len (_agaae )> 0&&(_gaage .IsLicensed ()||_febb ){return _agaae ;};return _f .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_degdc (),_gaage .TypeToString ());
};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _fb .PdfObjectArray )(*PdfRectangle ,error ){_dddd :=PdfRectangle {};if arr .Len ()!=4{return nil ,_fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _decff error ;_dddd .Llx ,_decff =_fb .GetNumberAsFloat (arr .Get (0));if _decff !=nil {return nil ,_decff ;};_dddd .Lly ,_decff =_fb .GetNumberAsFloat (arr .Get (1));if _decff !=nil {return nil ,_decff ;};_dddd .Urx ,_decff =_fb .GetNumberAsFloat (arr .Get (2));
if _decff !=nil {return nil ,_decff ;};_dddd .Ury ,_decff =_fb .GetNumberAsFloat (arr .Get (3));if _decff !=nil {return nil ,_decff ;};return &_dddd ,nil ;};

// GetDocumentOptimizer gets the document optimizer.
func (_gefe *PdfWriter )GetDocumentOptimizer ()DocumentOptimizer {return _gefe ._bbgdc };

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_bdbadf *XObjectForm )GetContainingPdfObject ()_fb .PdfObject {return _bdbadf ._deaaa };func (_cefa *PdfReader )newPdfActionThreadFromDict (_cbec *_fb .PdfObjectDictionary )(*PdfActionThread ,error ){_ecd ,_gadc :=_bg (_cbec .Get ("\u0046"));if _gadc !=nil {return nil ,_gadc ;
};return &PdfActionThread {D :_cbec .Get ("\u0044"),B :_cbec .Get ("\u0042"),F :_ecd },nil ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _ac .ReadSeeker )(*PdfFont ,error ){const _ccbf =_gc .CharCode (32);const _aadfa =_gc .CharCode (255);_dbgba ,_faabg :=_aa .ReadAll (r );if _faabg !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_faabg );
return nil ,_faabg ;};_abgc ,_faabg :=_ba .TtfParse (_cb .NewReader (_dbgba ));if _faabg !=nil {_gb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_faabg );
return nil ,_faabg ;};_bcfge :=&pdfFontSimple {_bdac :make (map[_gc .CharCode ]float64 ),fontCommon :fontCommon {_aaab :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_bcfge ._fabfd =_gc .NewWinAnsiEncoder ();_bcfge ._beeg =_abgc .PostScriptName ;
_bcfge .FirstChar =_fb .MakeInteger (int64 (_ccbf ));_bcfge .LastChar =_fb .MakeInteger (int64 (_aadfa ));_bgcc :=1000.0/float64 (_abgc .UnitsPerEm );if len (_abgc .Widths )<=0{return nil ,_fef .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_agfac :=_bgcc *float64 (_abgc .Widths [0]);_dfded :=make ([]float64 ,0,_aadfa -_ccbf +1);for _gffgf :=_ccbf ;_gffgf <=_aadfa ;_gffgf ++{_bcee ,_gbbf :=_bcfge .Encoder ().CharcodeToRune (_gffgf );if !_gbbf {_gb .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_gffgf );
_dfded =append (_dfded ,_agfac );continue ;};_dfefg ,_gdcg :=_abgc .Chars [_bcee ];if !_gdcg {_gb .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_dfded =append (_dfded ,_agfac );continue ;
};_becdb :=_bgcc *float64 (_abgc .Widths [_dfefg ]);_dfded =append (_dfded ,_becdb );};_bcfge .Widths =_fb .MakeIndirectObject (_fb .MakeArrayFromFloats (_dfded ));if len (_dfded )< int (_aadfa -_ccbf +1){_gb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_dfded ),255-32+1);
return nil ,_fb .ErrRangeError ;};for _bccd :=_ccbf ;_bccd <=_aadfa ;_bccd ++{_bcfge ._bdac [_bccd ]=_dfded [_bccd -_ccbf ];};_bcfge .Encoding =_fb .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_edffb :=&PdfFontDescriptor {};
_edffb .FontName =_fb .MakeName (_abgc .PostScriptName );_edffb .Ascent =_fb .MakeFloat (_bgcc *float64 (_abgc .TypoAscender ));_edffb .Descent =_fb .MakeFloat (_bgcc *float64 (_abgc .TypoDescender ));_edffb .CapHeight =_fb .MakeFloat (_bgcc *float64 (_abgc .CapHeight ));
_edffb .FontBBox =_fb .MakeArrayFromFloats ([]float64 {_bgcc *float64 (_abgc .Xmin ),_bgcc *float64 (_abgc .Ymin ),_bgcc *float64 (_abgc .Xmax ),_bgcc *float64 (_abgc .Ymax )});_edffb .ItalicAngle =_fb .MakeFloat (_abgc .ItalicAngle );_edffb .MissingWidth =_fb .MakeFloat (_bgcc *float64 (_abgc .Widths [0]));
_cgbeb ,_faabg :=_fb .MakeStream (_dbgba ,_fb .NewFlateEncoder ());if _faabg !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_faabg );
return nil ,_faabg ;};_cgbeb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fb .MakeInteger (int64 (len (_dbgba ))));_edffb .FontFile2 =_cgbeb ;if _abgc .Bold {_edffb .StemV =_fb .MakeInteger (120);}else {_edffb .StemV =_fb .MakeInteger (70);
};_egfec :=_ecbed ;if _abgc .IsFixedPitch {_egfec |=_ebabcg ;};if _abgc .ItalicAngle !=0{_egfec |=_gdefb ;};_edffb .Flags =_fb .MakeInteger (int64 (_egfec ));_bcfge ._bgdf =_edffb ;_eegd :=&PdfFont {_gcfd :_bcfge };return _eegd ,nil ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_ffgb *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };func (_baee *PdfAppender )mergeResources (_fggd ,_deadc _fb .PdfObject ,_ecdg map[_fb .PdfObjectName ]_fb .PdfObjectName )_fb .PdfObject {if _deadc ==nil &&_fggd ==nil {return nil ;
};if _deadc ==nil {return _fggd ;};_fabaa ,_aceg :=_fb .GetDict (_deadc );if !_aceg {return _fggd ;};if _fggd ==nil {_gacd :=_fb .MakeDict ();_gacd .Merge (_fabaa );return _deadc ;};_gfbb ,_aceg :=_fb .GetDict (_fggd );if !_aceg {_gb .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_gfbb =_fb .MakeDict ();};for _ ,_bbcad :=range _fabaa .Keys (){if _dcfd ,_gabc :=_ecdg [_bbcad ];_gabc {_gfbb .Set (_dcfd ,_fabaa .Get (_bbcad ));}else {_gfbb .Set (_bbcad ,_fabaa .Get (_bbcad ));};};return _gfbb ;};func (_cffae *Image )samplesAddPadding (_ggcd []uint32 )[]uint32 {_dgccg :=_egf .BytesPerLine (int (_cffae .Width ),int (_cffae .BitsPerComponent ),_cffae .ColorComponents )*(8/int (_cffae .BitsPerComponent ));
_bdca :=_dgccg *int (_cffae .Height );if len (_ggcd )==_bdca {return _ggcd ;};_eacdf :=make ([]uint32 ,_bdca );_gceg :=int (_cffae .Width )*_cffae .ColorComponents ;for _bcga :=0;_bcga < int (_cffae .Height );_bcga ++{_edgbd :=_bcga *int (_cffae .Width );
_agcec :=_bcga *_dgccg ;for _deebe :=0;_deebe < _gceg ;_deebe ++{_eacdf [_agcec +_deebe ]=_ggcd [_edgbd +_deebe ];};};return _eacdf ;};var _fcgcd =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// ToInteger convert to an integer format.
func (_dbdec *PdfColorLab )ToInteger (bits int )[3]uint32 {_gaee :=_eda .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gaee *_dbdec .L ()),uint32 (_gaee *_dbdec .A ()),uint32 (_gaee *_dbdec .B ())};};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_ddff *PdfAnnotation )ToPdfObject ()_fb .PdfObject {_bfbc :=_ddff ._caa ;_debaa :=_bfbc .PdfObject .(*_fb .PdfObjectDictionary );_debaa .Clear ();_debaa .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0041\u006e\u006eo\u0074"));_debaa .SetIfNotNil ("\u0052\u0065\u0063\u0074",_ddff .Rect );
_debaa .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ddff .Contents );_debaa .SetIfNotNil ("\u0050",_ddff .P );_debaa .SetIfNotNil ("\u004e\u004d",_ddff .NM );_debaa .SetIfNotNil ("\u004d",_ddff .M );_debaa .SetIfNotNil ("\u0046",_ddff .F );
_debaa .SetIfNotNil ("\u0041\u0050",_ddff .AP );_debaa .SetIfNotNil ("\u0041\u0053",_ddff .AS );_debaa .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_ddff .Border );_debaa .SetIfNotNil ("\u0043",_ddff .C );_debaa .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ddff .StructParent );
_debaa .SetIfNotNil ("\u004f\u0043",_ddff .OC );return _bfbc ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_ggga :=NewPdfAnnotation ();_gac :=&PdfAnnotationTrapNet {};_gac .PdfAnnotation =_ggga ;_ggga .SetContext (_gac );return _gac ;};

// HasFontByName checks if has font resource by name.
func (_fcdcg *PdfPage )HasFontByName (name _fb .PdfObjectName )bool {_gcca ,_gffge :=_fcdcg .Resources .Font .(*_fb .PdfObjectDictionary );if !_gffge {return false ;};if _gbdc :=_gcca .Get (name );_gbdc !=nil {return true ;};return false ;};

// ToPdfObject implements interface PdfModel.
func (_acd *PdfAnnotationStrikeOut )ToPdfObject ()_fb .PdfObject {_acd .PdfAnnotation .ToPdfObject ();_bged :=_acd ._caa ;_eddd :=_bged .PdfObject .(*_fb .PdfObjectDictionary );_acd .PdfAnnotationMarkup .appendToPdfDictionary (_eddd );_eddd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_eddd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_acd .QuadPoints );return _bged ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_dca :=NewPdfAction ();_ede :=&PdfActionNamed {};_ede .PdfAction =_dca ;_dca .SetContext (_ede );return _ede ;};func _afecgd (_ccgg _fb .PdfObject ,_bcaef *PdfReader )(*OutlineDest ,error ){_baaaf ,_fgcga :=_fb .GetArray (_ccgg );
if !_fgcga {return nil ,_fef .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_ecddea :=_baaaf .Len ();if _ecddea < 2{return nil ,_f .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_ecddea );
};_dcbcb :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_gcbfa :=_baaaf .Get (0);if _bddaa ,_gacdg :=_fb .GetIndirect (_gcbfa );_gacdg {if _ ,_cafcg ,_cbbe :=_bcaef .PageFromIndirectObject (_bddaa );_cbbe ==nil {_dcbcb .Page =int64 (_cafcg -1);}else {_gb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_bddaa );
};_dcbcb .PageObj =_bddaa ;}else if _ebgbgf ,_cbfd :=_fb .GetIntVal (_gcbfa );_cbfd {if _ebgbgf >=0&&_ebgbgf < len (_bcaef .PageList ){_dcbcb .PageObj =_bcaef .PageList [_ebgbgf ].GetPageAsIndirectObject ();}else {_gb .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_ebgbgf );
};_dcbcb .Page =int64 (_ebgbgf );}else {return nil ,_f .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_gcbfa );};_cfba ,_fgcga :=_fb .GetNameVal (_baaaf .Get (1));
if !_fgcga {_gb .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_baaaf .Get (1));
return _dcbcb ,nil ;};switch _cfba {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _ecddea > 2{_dcbcb .Y ,_ =_fb .GetNumberAsFloat (_fb .TraceToDirectObject (_baaaf .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _ecddea > 2{_dcbcb .X ,_ =_fb .GetNumberAsFloat (_fb .TraceToDirectObject (_baaaf .Get (2)));
};case "\u0058\u0059\u005a":if _ecddea > 4{_dcbcb .X ,_ =_fb .GetNumberAsFloat (_fb .TraceToDirectObject (_baaaf .Get (2)));_dcbcb .Y ,_ =_fb .GetNumberAsFloat (_fb .TraceToDirectObject (_baaaf .Get (3)));_dcbcb .Zoom ,_ =_fb .GetNumberAsFloat (_fb .TraceToDirectObject (_baaaf .Get (4)));
};default:_cfba ="\u0046\u0069\u0074";};_dcbcb .Mode =_cfba ;return _dcbcb ,nil ;};

// Encoder returns the font's text encoder.
func (_cbbf pdfFontType3 )Encoder ()_gc .TextEncoder {return _cbbf ._ecfg };func (_bacg *PdfReader )newPdfAnnotationTextFromDict (_dagd *_fb .PdfObjectDictionary )(*PdfAnnotationText ,error ){_egc :=PdfAnnotationText {};_efd ,_egcg :=_bacg .newPdfAnnotationMarkupFromDict (_dagd );
if _egcg !=nil {return nil ,_egcg ;};_egc .PdfAnnotationMarkup =_efd ;_egc .Open =_dagd .Get ("\u004f\u0070\u0065\u006e");_egc .Name =_dagd .Get ("\u004e\u0061\u006d\u0065");_egc .State =_dagd .Get ("\u0053\u0074\u0061t\u0065");_egc .StateModel =_dagd .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_egc ,nil ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_eea :=NewPdfAction ();_dgd :=&PdfActionSound {};_dgd .PdfAction =_eea ;_eea .SetContext (_dgd );return _dgd ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _fb .PdfObject )(_fb .PdfObjectName ,error ){var _gbce *_fb .PdfObjectName ;var _dcab *_fb .PdfObjectArray ;if _bdab ,_gffa :=obj .(*_fb .PdfIndirectObject );_gffa {if _ddbb ,_gfea :=_bdab .PdfObject .(*_fb .PdfObjectArray );
_gfea {_dcab =_ddbb ;}else if _bdbad ,_fcff :=_bdab .PdfObject .(*_fb .PdfObjectName );_fcff {_gbce =_bdbad ;};}else if _fgabb ,_gcbf :=obj .(*_fb .PdfObjectArray );_gcbf {_dcab =_fgabb ;}else if _cdbdf ,_dfee :=obj .(*_fb .PdfObjectName );_dfee {_gbce =_cdbdf ;
};if _gbce !=nil {switch *_gbce {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_gbce ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_gbce ,nil ;
};};if _dcab !=nil &&_dcab .Len ()> 0{if _fage ,_dbff :=_dcab .Get (0).(*_fb .PdfObjectName );_dbff {switch *_fage {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _dcab .Len ()==1{return *_fage ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_fage ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_fage ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_fage ,nil ;};};};return "",nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_fb .PdfObjectArray ;TI *_fb .PdfObjectInteger ;I *_fb .PdfObjectArray ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_dfedb *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_fef .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_ebff :=&PdfColorPattern {};_aaee ,_caef :=objects [len (objects )-1].(*_fb .PdfObjectName );if !_caef {_gb .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_ebff .PatternName =*_aaee ;if len (objects )> 1{_fdaab :=objects [0:len (objects )-1];if _dfedb .UnderlyingCS ==nil {_gb .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_fef .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_acba ,_gbdaf :=_dfedb .UnderlyingCS .ColorFromPdfObjects (_fdaab );if _gbdaf !=nil {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_gbdaf );
return nil ,_gbdaf ;};_ebff .Color =_acba ;};return _ebff ,nil ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_geacd *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _fb .GetNumberAsFloat (_geacd .CapHeight );};func (_bbbdf *fontFile )parseASCIIPart (_ebbf []byte )error {if len (_ebbf )< 2||string (_ebbf [:2])!="\u0025\u0021"{return _fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_cgfd ,_ebgbd ,_ggba :=_fcdb (_ebbf );if _ggba !=nil {return _ggba ;};_aecgb :=_acbd (_cgfd );_bbbdf ._bggfe =_aecgb ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _bbbdf ._bggfe ==""{_gb .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _ebgbd !=""{_dfgf ,_dcfdf :=_aedca (_ebgbd );if _dcfdf !=nil {return _dcfdf ;};_fbfa ,_dcfdf :=_gc .NewCustomSimpleTextEncoder (_dfgf ,nil );if _dcfdf !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_dcfdf );
return nil ;};_bbbdf ._fggcc =_fbfa ;};return nil ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_bdfe *PdfReader )GetIndirectObjectByNumber (number int )(_fb .PdfObject ,error ){_gbbfg ,_degce :=_bdfe ._cecbb .LookupByNumber (number );return _gbbfg ,_degce ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_cdde *DSS )ToPdfObject ()_fb .PdfObject {_bdgg :=_cdde ._aecef .PdfObject .(*_fb .PdfObjectDictionary );_bdgg .Clear ();_befc :=_fb .MakeDict ();for _fbcfb ,_abde :=range _cdde .VRI {_befc .Set (*_fb .MakeName (_fbcfb ),_abde .ToPdfObject ());};
_bdgg .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_egaa (_cdde .Certs ));_bdgg .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_egaa (_cdde .OCSPs ));_bdgg .SetIfNotNil ("\u0043\u0052\u004c\u0073",_egaa (_cdde .CRLs ));_bdgg .Set ("\u0056\u0052\u0049",_befc );
return _cdde ._aecef ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_egd :=NewPdfAction ();_cae :=&PdfActionSetOCGState {};_cae .PdfAction =_egd ;_egd .SetContext (_cae );return _cae ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_ebaf *PdfAcroForm ,_cedf *PdfField ,_cbefb *PdfAnnotationWidget )(*_fb .PdfObjectDictionary ,error );};

// G returns the value of the green component of the color.
func (_fdgg *PdfColorDeviceRGB )G ()float64 {return _fdgg [1]};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_acdbe *PdfShadingType3 )ToPdfObject ()_fb .PdfObject {_acdbe .PdfShading .ToPdfObject ();_eefdf ,_gada :=_acdbe .getShadingDict ();if _gada !=nil {_gb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _acdbe .Coords !=nil {_eefdf .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_acdbe .Coords );};if _acdbe .Domain !=nil {_eefdf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_acdbe .Domain );};if _acdbe .Function !=nil {if len (_acdbe .Function )==1{_eefdf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_acdbe .Function [0].ToPdfObject ());
}else {_dfbbc :=_fb .MakeArray ();for _ ,_dadcc :=range _acdbe .Function {_dfbbc .Append (_dadcc .ToPdfObject ());};_eefdf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dfbbc );};};if _acdbe .Extend !=nil {_eefdf .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_acdbe .Extend );
};return _acdbe ._bbdbag ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_aadfb *PdfPattern )ToPdfObject ()_fb .PdfObject {_ggcgf :=_aadfb .getDict ();_ggcgf .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_ggcgf .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_fb .MakeInteger (_aadfb .PatternType ));
return _aadfb ._aadcb ;};func (_gbgfa *PdfSignature )extractChainFromCert ()([]*_bc .Certificate ,error ){var _fbdb *_fb .PdfObjectArray ;switch _dbfgf :=_gbgfa .Cert .(type ){case *_fb .PdfObjectString :_fbdb =_fb .MakeArray (_dbfgf );case *_fb .PdfObjectArray :_fbdb =_dbfgf ;
default:return nil ,_f .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_dbfgf );
};var _fbgcg _cb .Buffer ;for _ ,_fcbcf :=range _fbdb .Elements (){_bacbd ,_dfdce :=_fb .GetString (_fcbcf );if !_dfdce {return nil ,_f .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_fcbcf );
};if _ ,_ceabc :=_fbgcg .Write (_bacbd .Bytes ());_ceabc !=nil {return nil ,_ceabc ;};};return _bc .ParseCertificates (_fbgcg .Bytes ());};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_bcdg *LTV )EnableByName (name string ,extraCerts []*_bc .Certificate )error {_ggccf :=_bcdg ._cfaa ._fcae .AcroForm ;for _ ,_fbea :=range _ggccf .AllFields (){_caabe ,_ :=_fbea .GetContext ().(*PdfFieldSignature );if _caabe ==nil {continue ;};if _bagfa :=_caabe .PartialName ();
_bagfa !=name {continue ;};return _bcdg .Enable (_caabe .V ,extraCerts );};return nil ;};func (_gcf *PdfReader )newPdfActionURIFromDict (_bacd *_fb .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_bacd .Get ("\u0055\u0052\u0049"),IsMap :_bacd .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_egfceb *PdfReader )PageFromIndirectObject (ind *_fb .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_egfceb .PageList )!=len (_egfceb ._fdbgc ){return nil ,0,_fef .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _abfadb ,_cdgggd :=range _egfceb ._fdbgc {if _cdgggd ==ind {return _egfceb .PageList [_abfadb ],_abfadb +1,nil ;};};return nil ,0,_fef .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_caeg *PdfAppender )replaceObject (_afag ,_egcf _fb .PdfObject ){switch _edfc :=_afag .(type ){case *_fb .PdfIndirectObject :_caeg ._beed [_egcf ]=_edfc .ObjectNumber ;
case *_fb .PdfObjectStream :_caeg ._beed [_egcf ]=_edfc .ObjectNumber ;};};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_gcgba *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_geedb ,_eefc :=_fb .GetDict (_gcgba ._aeab .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_eefc {_geedb =_fb .MakeDict ();_gcgba ._aeab .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_geedb );
};_gecfa ,_eefc :=_fb .GetDict (_geedb .Get (_fb .PdfObjectName (extName )));if !_eefc {_gecfa =_fb .MakeDict ();_geedb .Set (_fb .PdfObjectName (extName ),_gecfa );};if _cbgac ,_ :=_fb .GetNameVal (_gecfa .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_cbgac !=baseVersion {_gecfa .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_fb .MakeName (baseVersion ));};if _fbfe ,_ :=_fb .GetIntVal (_gecfa .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_fbfe !=extLevel {_gecfa .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_fb .MakeInteger (int64 (extLevel )));};};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_bfdeg :=PdfDate {};_facfe :=_dbecc .FindAllStringSubmatch (dateStr ,1);if len (_facfe )< 1{return _bfdeg ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );
};if len (_facfe [0])!=10{return _bfdeg ,_fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");
};_bfdeg ._eeff ,_ =_deg .ParseInt (_facfe [0][1],10,32);_bfdeg ._dfcg ,_ =_deg .ParseInt (_facfe [0][2],10,32);_bfdeg ._gdced ,_ =_deg .ParseInt (_facfe [0][3],10,32);_bfdeg ._cbbed ,_ =_deg .ParseInt (_facfe [0][4],10,32);_bfdeg ._baagb ,_ =_deg .ParseInt (_facfe [0][5],10,32);
_bfdeg ._efge ,_ =_deg .ParseInt (_facfe [0][6],10,32);if len (_facfe [0][7])> 0{_bfdeg ._eaeec =_facfe [0][7][0];}else {_bfdeg ._eaeec ='+';};if len (_facfe [0][8])> 0{_bfdeg ._fgcdd ,_ =_deg .ParseInt (_facfe [0][8],10,32);}else {_bfdeg ._fgcdd =0;};
if len (_facfe [0][9])> 0{_bfdeg ._ffcdf ,_ =_deg .ParseInt (_facfe [0][9],10,32);}else {_bfdeg ._ffcdf =0;};return _bfdeg ,nil ;};func (_gaade *PdfShading )getShadingDict ()(*_fb .PdfObjectDictionary ,error ){_aggdc :=_gaade ._bbdbag ;if _edada ,_gebbb :=_aggdc .(*_fb .PdfIndirectObject );
_gebbb {_fgfca ,_dgfcb :=_edada .PdfObject .(*_fb .PdfObjectDictionary );if !_dgfcb {return nil ,_fb .ErrTypeError ;};return _fgfca ,nil ;}else if _ggbb ,_cgfgg :=_aggdc .(*_fb .PdfObjectStream );_cgfgg {return _ggbb .PdfObjectDictionary ,nil ;}else if _dbfff ,_ddbea :=_aggdc .(*_fb .PdfObjectDictionary );
_ddbea {return _dbfff ,nil ;}else {_gb .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_fb .ErrTypeError ;
};};func (_gfgb *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_egfaf *PdfPageResources )HasExtGState (keyName _fb .PdfObjectName )bool {_ ,_dagfd :=_egfaf .GetFontByName (keyName );return _dagfd ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gbff *PdfPageResourcesColorspaces )ToPdfObject ()_fb .PdfObject {_eaegfd :=_fb .MakeDict ();for _ ,_abgf :=range _gbff .Names {_eaegfd .Set (_fb .PdfObjectName (_abgf ),_gbff .Colorspaces [_abgf ].ToPdfObject ());};if _gbff ._gaag !=nil {_gbff ._gaag .PdfObject =_eaegfd ;
return _gbff ._gaag ;};return _eaegfd ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_egde *PdfPageResources )HasFontByName (keyName _fb .PdfObjectName )bool {_ ,_dcecf :=_egde .GetFontByName (keyName );return _dcecf ;};func _eecbf (_ecdgac *PdfField ,_ddedd _fb .PdfObject )error {switch _ecdgac .GetContext ().(type ){case *PdfFieldText :switch _gdadb :=_ddedd .(type ){case *_fb .PdfObjectName :_daff :=_gdadb ;
_gb .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_daff .String ());
_ecdgac .V =_fb .MakeEncodedString (_gdadb .String (),true );case *_fb .PdfObjectString :_ecdgac .V =_fb .MakeEncodedString (_gdadb .String (),true );default:_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_gdadb ,_gdadb );
};case *PdfFieldButton :switch _ddedd .(type ){case *_fb .PdfObjectName :if len (_ddedd .String ())> 0{_ecdgac .V =_ddedd ;_aede (_ecdgac ,_ddedd );};case *_fb .PdfObjectString :if len (_ddedd .String ())> 0{_ecdgac .V =_fb .MakeName (_ddedd .String ());
_aede (_ecdgac ,_ecdgac .V );};default:_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_ecdgac .PartialName (),_ddedd );_ecdgac .V =_ddedd ;
};case *PdfFieldChoice :switch _ddedd .(type ){case *_fb .PdfObjectName :if len (_ddedd .String ())> 0{_ecdgac .V =_fb .MakeString (_ddedd .String ());_aede (_ecdgac ,_ddedd );};case *_fb .PdfObjectString :if len (_ddedd .String ())> 0{_ecdgac .V =_ddedd ;
_aede (_ecdgac ,_fb .MakeName (_ddedd .String ()));};default:_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_ecdgac .PartialName (),_ddedd );
_ecdgac .V =_ddedd ;};case *PdfFieldSignature :_gb .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_ecdgac .PartialName (),_ddedd );
};return nil ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_bcabd *Outline )ToPdfObject ()_fb .PdfObject {return _bcabd .ToPdfOutline ().ToPdfObject ()};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_dffg *PdfAppender )UpdateObject (obj _fb .PdfObject ){_dffg .replaceObject (obj ,obj );if _ ,_ggfa :=_dffg ._gfeg [obj ];!_ggfa {_dffg ._bbbec =append (_dffg ._bbbec ,obj );_dffg ._gfeg [obj ]=struct{}{};};};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_ff .File ,error ){const _acfgf ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_cfbgf ,_edfgg :=_ff .Open (pdfFile );if _edfgg !=nil {return nil ,nil ,_edfgg ;};_afad ,_edfgg :=_gbdfce (_cfbgf ,opts ,true ,_acfgf );if _edfgg !=nil {_cfbgf .Close ();return nil ,nil ,_edfgg ;};return _afad ,_cfbgf ,nil ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_efeb *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_cfdf :=&PdfColorspaceLab {};_cfdf .BlackPoint =[]float64 {0.0,0.0,0.0};_cfdf .Range =[]float64 {-100,100,-100,100};return _cfdf ;};

// ToPdfObject returns a stream object.
func (_ggaff *XObjectForm )ToPdfObject ()_fb .PdfObject {_egbgc :=_ggaff ._deaaa ;_efded :=_egbgc .PdfObjectDictionary ;if _ggaff .Filter !=nil {_efded =_ggaff .Filter .MakeStreamDict ();_egbgc .PdfObjectDictionary =_efded ;};_efded .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_efded .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0046\u006f\u0072\u006d"));_efded .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_ggaff .FormType );_efded .SetIfNotNil ("\u0042\u0042\u006f\u0078",_ggaff .BBox );_efded .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_ggaff .Matrix );
if _ggaff .Resources !=nil {_efded .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ggaff .Resources .ToPdfObject ());};_efded .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_ggaff .Group );_efded .SetIfNotNil ("\u0052\u0065\u0066",_ggaff .Ref );
_efded .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_ggaff .MetaData );_efded .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_ggaff .PieceInfo );_efded .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_ggaff .LastModified );
_efded .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ggaff .StructParent );_efded .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_ggaff .StructParents );_efded .SetIfNotNil ("\u004f\u0050\u0049",_ggaff .OPI );
_efded .SetIfNotNil ("\u004f\u0043",_ggaff .OC );_efded .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ggaff .Name );_efded .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fb .MakeInteger (int64 (len (_ggaff .Stream ))));_egbgc .Stream =_ggaff .Stream ;return _egbgc ;
};

// AddOutlineTree adds outlines to a PDF file.
func (_abgb *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_abgb ._bdcfa =outlineTree };

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_cfae *PdfPage )Size ()(float64 ,float64 ,error ){_egccc ,_gebg :=_cfae .GetMediaBox ();if _gebg !=nil {return 0,0,_gebg ;};_eabec ,_cdcbe :=_egccc .Width (),_egccc .Height ();if _bbdg :=_cfae .Rotate ;_bbdg !=nil &&*_bbdg %360!=0&&*_bbdg %90==0{if _fbage :=(360+*_bbdg %360)%360;
_fbage ==90||_fbage ==270{_eabec ,_cdcbe =_cdcbe ,_eabec ;};};return _eabec ,_cdcbe ,nil ;};func (_abc *PdfReader )newPdfAnnotationStrikeOut (_baff *_fb .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_ceg :=PdfAnnotationStrikeOut {};_aedb ,_ebdc :=_abc .newPdfAnnotationMarkupFromDict (_baff );
if _ebdc !=nil {return nil ,_ebdc ;};_ceg .PdfAnnotationMarkup =_aedb ;_ceg .QuadPoints =_baff .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ceg ,nil ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_dceb *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _fef .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_ecbc :=field .V ;if _ecbc ==nil {return _fef .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_cdd :=pageNum -1;
if _cdd < 0||_cdd > len (_dceb ._bdf )-1{return _f .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_aggg :=_dceb .Reader .PageList [_cdd ];field .P =_aggg .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_fb .MakeString (_f .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_aggg .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _dceb ._fae ==_dceb ._fcae .AcroForm {_dceb ._fae =_dceb .Reader .AcroForm ;};_ceee :=_dceb ._fae ;if _ceee ==nil {_ceee =NewPdfAcroForm ();};_ceee .SigFlags =_fb .MakeInteger (3);_cegcb :=append (_ceee .AllFields (),field .PdfField );
_ceee .Fields =&_cegcb ;_dceb .ReplaceAcroForm (_ceee );_dceb .UpdatePage (_aggg );_dceb ._bdf [_cdd ]=_aggg ;return nil ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_ffg :=NewPdfAnnotation ();_eeea :=&PdfAnnotationRedact {};_eeea .PdfAnnotation =_ffg ;_eeea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffg .SetContext (_eeea );return _eeea ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cace *PdfColorspaceDeviceRGB )ToPdfObject ()_fb .PdfObject {return _fb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_cdfga *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _cdfga ._fbbg ==nil {_cdfga ._fbbg =_faf .NewPSExecutor (_cdfga .Program );};var _adabbc []_faf .PSObject ;for _ ,_dafae :=range xVec {_adabbc =append (_adabbc ,_faf .MakeReal (_dafae ));
};_edbdg ,_acabc :=_cdfga ._fbbg .Execute (_adabbc );if _acabc !=nil {return nil ,_acabc ;};_fggccb ,_acabc :=_faf .PSObjectArrayToFloat64Array (_edbdg );if _acabc !=nil {return nil ,_acabc ;};return _fggccb ,nil ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_cbfe *Image )Resample (targetBitsPerComponent int64 ){if _cbfe .BitsPerComponent ==targetBitsPerComponent {return ;};_daaab :=_cbfe .GetSamples ();if targetBitsPerComponent < _cbfe .BitsPerComponent {_dbeg :=_cbfe .BitsPerComponent -targetBitsPerComponent ;
for _gcdab :=range _daaab {_daaab [_gcdab ]>>=uint (_dbeg );};}else if targetBitsPerComponent > _cbfe .BitsPerComponent {_fabfdg :=targetBitsPerComponent -_cbfe .BitsPerComponent ;for _fcca :=range _daaab {_daaab [_fcca ]<<=uint (_fabfdg );};};_cbfe .BitsPerComponent =targetBitsPerComponent ;
if _cbfe .BitsPerComponent < 8{_cbfe .resampleLowBits (_daaab );return ;};_acdecd :=_egf .BytesPerLine (int (_cbfe .Width ),int (_cbfe .BitsPerComponent ),_cbfe .ColorComponents );_badad :=make ([]byte ,_acdecd *int (_cbfe .Height ));var (_dcddg ,_afecb ,_gedb ,_ebcad int ;
_acae uint32 ;);for _gedb =0;_gedb < int (_cbfe .Height );_gedb ++{_dcddg =_gedb *_acdecd ;_afecb =(_gedb +1)*_acdecd -1;_agbgd :=_dg .ResampleUint32 (_daaab [_dcddg :_afecb ],int (targetBitsPerComponent ),8);for _ebcad ,_acae =range _agbgd {_badad [_ebcad +_dcddg ]=byte (_acae );
};};_cbfe .Data =_badad ;};func (_abgd Image )getBase ()_egf .ImageBase {return _egf .NewImageBase (int (_abgd .Width ),int (_abgd .Height ),int (_abgd .BitsPerComponent ),_abgd .ColorComponents ,_abgd .Data ,_abgd ._adecb ,_abgd ._cdgb );};

// WriteToFile writes the Appender output to file specified by path.
func (_fgcg *PdfAppender )WriteToFile (outputPath string )error {_daec ,_fbcg :=_ff .Create (outputPath );if _fbcg !=nil {return _fbcg ;};defer _daec .Close ();return _fgcg .Write (_daec );};

// AddImageResource adds an image to the XObject resources.
func (_aebffg *PdfPage )AddImageResource (name _fb .PdfObjectName ,ximg *XObjectImage )error {var _gfcb *_fb .PdfObjectDictionary ;if _aebffg .Resources .XObject ==nil {_gfcb =_fb .MakeDict ();_aebffg .Resources .XObject =_gfcb ;}else {var _egbge bool ;
_gfcb ,_egbge =(_aebffg .Resources .XObject ).(*_fb .PdfObjectDictionary );if !_egbge {return _fef .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_gfcb .Set (name ,ximg .ToPdfObject ());
return nil ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_dacf :=appender .Reader .DSS ;if _dacf ==nil {_dacf =NewDSS ();};if _cabeg :=_dacf .generateHashMaps ();_cabeg !=nil {return nil ,_cabeg ;};return &LTV {CertClient :_edaf .NewCertClient (),OCSPClient :_edaf .NewOCSPClient (),CRLClient :_edaf .NewCRLClient (),SkipExisting :true ,_cfaa :appender ,_bafcg :_dacf },nil ;
};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_befe *PdfField )ToPdfObject ()_fb .PdfObject {_fdggd :=_befe ._cdcae ;_cgdbb :=_fdggd .PdfObject .(*_fb .PdfObjectDictionary );_dadf :=_fb .MakeArray ();for _ ,_adecg :=range _befe .Kids {_dadf .Append (_adecg .ToPdfObject ());};for _ ,_ceae :=range _befe .Annotations {if _ceae ._caa !=_befe ._cdcae {_dadf .Append (_ceae .GetContext ().ToPdfObject ());
};};if _befe .Parent !=nil {_cgdbb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_befe .Parent .GetContainingPdfObject ());};if _dadf .Len ()> 0{_cgdbb .Set ("\u004b\u0069\u0064\u0073",_dadf );};_cgdbb .SetIfNotNil ("\u0046\u0054",_befe .FT );_cgdbb .SetIfNotNil ("\u0054",_befe .T );
_cgdbb .SetIfNotNil ("\u0054\u0055",_befe .TU );_cgdbb .SetIfNotNil ("\u0054\u004d",_befe .TM );_cgdbb .SetIfNotNil ("\u0046\u0066",_befe .Ff );_cgdbb .SetIfNotNil ("\u0056",_befe .V );_cgdbb .SetIfNotNil ("\u0044\u0056",_befe .DV );_cgdbb .SetIfNotNil ("\u0041\u0041",_befe .AA );
return _fdggd ;};func (_gcfcc *PdfWriter )writeObject (_dffgd int ,_bfdbf _fb .PdfObject ){_gb .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_dffgd );if _dgdbg ,_fcffb :=_bfdbf .(*_fb .PdfIndirectObject );
_fcffb {_gcfcc ._gfdd [_dffgd ]=crossReference {Type :1,Offset :_gcfcc ._cfcec ,Generation :_dgdbg .GenerationNumber };_bcgfa :=_f .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_dffgd );if _gabdb ,_cece :=_dgdbg .PdfObject .(*pdfSignDictionary );
_cece {_gabdb ._fdfdg =_gcfcc ._cfcec +int64 (len (_bcgfa ));};if _dgdbg .PdfObject ==nil {_gb .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_dgdbg .PdfObject =_fb .MakeNull ();};_bcgfa +=_dgdbg .PdfObject .WriteString ();_bcgfa +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_gcfcc .writeString (_bcgfa );return ;};if _cffd ,_gccc :=_bfdbf .(*_fb .PdfObjectStream );_gccc {_gcfcc ._gfdd [_dffgd ]=crossReference {Type :1,Offset :_gcfcc ._cfcec ,Generation :_cffd .GenerationNumber };
_fabcfb :=_f .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_dffgd );_fabcfb +=_cffd .PdfObjectDictionary .WriteString ();_fabcfb +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_gcfcc .writeString (_fabcfb );_gcfcc .writeBytes (_cffd .Stream );
_gcfcc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _edbde ,_fcefb :=_bfdbf .(*_fb .PdfObjectStreams );_fcefb {_gcfcc ._gfdd [_dffgd ]=crossReference {Type :1,Offset :_gcfcc ._cfcec ,Generation :_edbde .GenerationNumber };
_fdaee :=_f .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_dffgd );var _fbfdc []string ;var _beaaf string ;var _fbffc int64 ;for _dabge ,_abdag :=range _edbde .Elements (){_debda ,_fbcbc :=_abdag .(*_fb .PdfIndirectObject );if !_fbcbc {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_dffgd ,_abdag );
continue ;};_cbbgge :=_debda .PdfObject .WriteString ()+"\u0020";_beaaf =_beaaf +_cbbgge ;_fbfdc =append (_fbfdc ,_f .Sprintf ("\u0025\u0064\u0020%\u0064",_debda .ObjectNumber ,_fbffc ));_gcfcc ._gfdd [int (_debda .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_dffgd ,Index :_dabge };
_fbffc =_fbffc +int64 (len ([]byte (_cbbgge )));};_fgade :=_eg .Join (_fbfdc ,"\u0020")+"\u0020";_gafa :=_fb .NewFlateEncoder ();_feaca :=_gafa .MakeStreamDict ();_feaca .Set (_fb .PdfObjectName ("\u0054\u0079\u0070\u0065"),_fb .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_ddfed :=int64 (_edbde .Len ());_feaca .Set (_fb .PdfObjectName ("\u004e"),_fb .MakeInteger (_ddfed ));_fdfdb :=int64 (len (_fgade ));_feaca .Set (_fb .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_fb .MakeInteger (_fdfdb ));_ceadd ,_ :=_gafa .EncodeBytes ([]byte (_fgade +_beaaf ));
_aadbe :=int64 (len (_ceadd ));_feaca .Set (_fb .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_fb .MakeInteger (_aadbe ));_fdaee +=_feaca .WriteString ();_fdaee +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_gcfcc .writeString (_fdaee );
_gcfcc .writeBytes (_ceadd );_gcfcc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_gcfcc .writeString (_bfdbf .WriteString ());};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_efagb *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_efagb .ToPdfOutline ().PdfOutlineTreeNode ;};func _gecg (_gdec *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_gdec }};func (_dgfdb *pdfFontType3 )baseFields ()*fontCommon {return &_dgfdb .fontCommon };
func _gaaa (_ebdd *_egf .ImageBase )(_ffabg Image ){_ffabg .Width =int64 (_ebdd .Width );_ffabg .Height =int64 (_ebdd .Height );_ffabg .BitsPerComponent =int64 (_ebdd .BitsPerComponent );_ffabg .ColorComponents =_ebdd .ColorComponents ;_ffabg .Data =_ebdd .Data ;
_ffabg ._cdgb =_ebdd .Decode ;_ffabg ._adecb =_ebdd .Alpha ;return _ffabg ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_fb .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _fb .PdfObject ;A _fb .PdfObject ;SE _fb .PdfObject ;C _fb .PdfObject ;F _fb .PdfObject ;
_fbdgb *_fb .PdfIndirectObject ;};func _afccc (_efcac []byte )([]byte ,error ){_edbdd :=_dc .New ();if _ ,_edaba :=_ac .Copy (_edbdd ,_cb .NewReader (_efcac ));_edaba !=nil {return nil ,_edaba ;};return _edbdd .Sum (nil ),nil ;};func (_abfag *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _abfag ._bgdf };


// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// GetNumComponents returns the number of color components (1 for Separation).
func (_beb *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};func (_afeec *Image )samplesTrimPadding (_ffffe []uint32 )[]uint32 {_afbbcc :=_afeec .ColorComponents *int (_afeec .Width )*int (_afeec .Height );if len (_ffffe )==_afbbcc {return _ffffe ;
};_bafcb :=make ([]uint32 ,_afbbcc );_ceeea :=int (_afeec .Width )*_afeec .ColorComponents ;var _ceab ,_fdacb ,_gbfce ,_cgff int ;_ddcfa :=_egf .BytesPerLine (int (_afeec .Width ),int (_afeec .BitsPerComponent ),_afeec .ColorComponents );for _ceab =0;_ceab < int (_afeec .Height );
_ceab ++{_fdacb =_ceab *int (_afeec .Width );_gbfce =_ceab *_ddcfa ;for _cgff =0;_cgff < _ceeea ;_cgff ++{_bafcb [_fdacb +_cgff ]=_ffffe [_gbfce +_cgff ];};};return _bafcb ;};

// ToXMPMetadata converts given PdfInfo into xmp.Metadata object.
func (_gbdg *PdfInfo )ToXMPMetadata ()_cbe .Metadata {_ecfa :=_cbe .Metadata {};if _gbdg .Author !=nil {_ecfa .Author =[]string {_gbdg .Author .String ()};};if _gbdg .Title !=nil {_ecfa .Title =_gbdg .Title .String ();};if _gbdg .Subject !=nil {_ecfa .Subject =_gbdg .Subject .String ();
};if _gbdg .Keywords !=nil {_ecfa .Keywords =_gbdg .Keywords .String ();};if _gbdg .Creator !=nil {_ecfa .Creator =_gbdg .Creator .String ();};if _gbdg .Producer !=nil {_ecfa .Producer =_gbdg .Producer .String ();};_ecfa .UniPDFVersion =_degdc ();if _gbdg .CreationDate !=nil {_ecfa .CreationDate =_cbe .WrapTime (_gbdg .CreationDate .ToGoTime ());
};if _gbdg .ModifiedDate !=nil {_ecfa .ModifyDate =_cbe .WrapTime (_gbdg .ModifiedDate .ToGoTime ());};if _gbdg .Trapped !=nil {_ecfa .Trapped =true ;};return _ecfa ;};

// ToPdfObject implements interface PdfModel.
func (_ggfe *PdfAnnotationPopup )ToPdfObject ()_fb .PdfObject {_ggfe .PdfAnnotation .ToPdfObject ();_bbfg :=_ggfe ._caa ;_dbfe :=_bbfg .PdfObject .(*_fb .PdfObjectDictionary );_dbfe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0050\u006f\u0070u\u0070"));
_dbfe .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ggfe .Parent );_dbfe .SetIfNotNil ("\u004f\u0070\u0065\u006e",_ggfe .Open );return _bbfg ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};func _beecb (_edge _fb .PdfObject )(map[_gc .CharCode ]float64 ,error ){if _edge ==nil {return nil ,nil ;};_cfbff ,_fabfb :=_fb .GetArray (_edge );if !_fabfb {return nil ,nil ;
};_eeaeg :=map[_gc .CharCode ]float64 {};_dfefc :=_cfbff .Len ();for _dfcd :=0;_dfcd < _dfefc -1;_dfcd ++{_ggccde :=_fb .TraceToDirectObject (_cfbff .Get (_dfcd ));_geeg ,_dede :=_fb .GetIntVal (_ggccde );if !_dede {return nil ,_f .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_dfcd ,_ggccde );
};_dfcd ++;if _dfcd > _dfefc -1{return nil ,_f .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_cfbff );};_adgfg :=_fb .TraceToDirectObject (_cfbff .Get (_dfcd ));
switch _adgfg .(type ){case *_fb .PdfObjectArray :_bfac ,_ :=_fb .GetArray (_adgfg );if _gdac ,_edfb :=_bfac .ToFloat64Array ();_edfb ==nil {for _fcgd :=0;_fcgd < len (_gdac );_fcgd ++{_eeaeg [_gc .CharCode (_geeg +_fcgd )]=_gdac [_fcgd ];};}else {return nil ,_f .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dfcd ,_adgfg );
};case *_fb .PdfObjectInteger :_bfeba ,_bbbf :=_fb .GetIntVal (_adgfg );if !_bbbf {return nil ,_f .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dfcd ,_adgfg );
};_dfcd ++;if _dfcd > _dfefc -1{return nil ,_f .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_cfbff );};_fcggf :=_cfbff .Get (_dfcd );_dceff ,_fcccd :=_fb .GetNumberAsFloat (_fcggf );
if _fcccd !=nil {return nil ,_f .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dfcd ,_fcggf );};for _gbcga :=_geeg ;_gbcga <=_bfeba ;
_gbcga ++{_eeaeg [_gc .CharCode (_gbcga )]=_dceff ;};default:return nil ,_f .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dfcd ,_adgfg );
};};return _eeaeg ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_gcgb *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_fcge *PdfAnnotationCircle )ToPdfObject ()_fb .PdfObject {_fcge .PdfAnnotation .ToPdfObject ();_eac :=_fcge ._caa ;_dbfc :=_eac .PdfObject .(*_fb .PdfObjectDictionary );_fcge .PdfAnnotationMarkup .appendToPdfDictionary (_dbfc );_dbfc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_dbfc .SetIfNotNil ("\u0042\u0053",_fcge .BS );_dbfc .SetIfNotNil ("\u0049\u0043",_fcge .IC );_dbfc .SetIfNotNil ("\u0042\u0045",_fcge .BE );_dbfc .SetIfNotNil ("\u0052\u0044",_fcge .RD );return _eac ;};func (_dcef *PdfReader )newPdfAnnotationPrinterMarkFromDict (_cgbb *_fb .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_aafd :=PdfAnnotationPrinterMark {};
_aafd .MN =_cgbb .Get ("\u004d\u004e");return &_aafd ,nil ;};var _febb =false ;func _baag (_aggd _fb .PdfObject )(*_fb .PdfObjectDictionary ,*fontCommon ,error ){_fdcca :=&fontCommon {};if _cgaf ,_ecdea :=_aggd .(*_fb .PdfIndirectObject );_ecdea {_fdcca ._adgd =_cgaf .ObjectNumber ;
};_bbdd ,_ddcf :=_fb .GetDict (_aggd );if !_ddcf {_gb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_aggd );
return nil ,nil ,ErrFontNotSupported ;};_beaed ,_ddcf :=_fb .GetNameVal (_bbdd .Get ("\u0054\u0079\u0070\u0065"));if !_ddcf {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _beaed !="\u0046\u006f\u006e\u0074"{_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_beaed ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_fb .ErrTypeError ;};_ccad ,_ddcf :=_fb .GetNameVal (_bbdd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_ddcf {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_fdcca ._aaab =_ccad ;_bafg ,_ddcf :=_fb .GetNameVal (_bbdd .Get ("\u004e\u0061\u006d\u0065"));if _ddcf {_fdcca ._ebdbb =_bafg ;};_befed :=_bbdd .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _befed !=nil {_fdcca ._daag =_fb .TraceToDirectObject (_befed );
_eadf ,_fdafa :=_cgaea (_fdcca ._daag ,_fdcca );if _fdafa !=nil {return _bbdd ,_fdcca ,_fdafa ;};_fdcca ._acfd =_eadf ;}else if _ccad =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_ccad =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_dgfc ,_edee :=_edb .NewCIDSystemInfo (_bbdd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _edee !=nil {return _bbdd ,_fdcca ,_edee ;};_fbgg :=_f .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_dgfc .Registry ,_dgfc .Ordering );if _edb .IsPredefinedCMap (_fbgg ){_fdcca ._acfd ,_edee =_edb .LoadPredefinedCMap (_fbgg );
if _edee !=nil {_gb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_fbgg ,_edee );
};};};_dfbgb :=_bbdd .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _dfbgb !=nil {_abef ,_ddca :=_faea (_dfbgb );if _ddca !=nil {_gb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ddca );
return _bbdd ,_fdcca ,_ddca ;};_fdcca ._bgdf =_abef ;};if _ccad !="\u0054\u0079\u0070e\u0033"{_abca ,_fgeg :=_fb .GetNameVal (_bbdd .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_fgeg {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _bbdd ,_fdcca ,ErrRequiredAttributeMissing ;};_fdcca ._beeg =_abca ;};return _bbdd ,_fdcca ,nil ;};func _egcea (_gffc *_fb .PdfObjectDictionary )(*PdfFieldText ,error ){_ecadd :=&PdfFieldText {};_ecadd .DA ,_ =_fb .GetString (_gffc .Get ("\u0044\u0041"));
_ecadd .Q ,_ =_fb .GetInt (_gffc .Get ("\u0051"));_ecadd .DS ,_ =_fb .GetString (_gffc .Get ("\u0044\u0053"));_ecadd .RV =_gffc .Get ("\u0052\u0056");_ecadd .MaxLen ,_ =_fb .GetInt (_gffc .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _ecadd ,nil ;
};func _eegc (_fecg *_fb .PdfIndirectObject ,_dgadg *_fb .PdfObjectDictionary )(*DSS ,error ){if _fecg ==nil {_fecg =_fb .MakeIndirectObject (nil );};_fecg .PdfObject =_fb .MakeDict ();_aaae :=map[string ]*VRI {};if _acec ,_ffcdg :=_fb .GetDict (_dgadg .Get ("\u0056\u0052\u0049"));
_ffcdg {for _ ,_dfcb :=range _acec .Keys (){if _dfafb ,_cdbbc :=_fb .GetDict (_acec .Get (_dfcb ));_cdbbc {_aaae [_eg .ToUpper (_dfcb .String ())]=_cggec (_dfafb );};};};return &DSS {Certs :_fbcecb (_dgadg .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_fbcecb (_dgadg .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_fbcecb (_dgadg .Get ("\u0043\u0052\u004c\u0073")),VRI :_aaae ,_aecef :_fecg },nil ;
};func _cagd (_fdaac *_fb .PdfObjectDictionary )(*PdfShadingType2 ,error ){_fceae :=PdfShadingType2 {};_gecaa :=_fdaac .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _gecaa ==nil {_gb .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_ffcde ,_abgcb :=_gecaa .(*_fb .PdfObjectArray );if !_abgcb {_gb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gecaa );
return nil ,_fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _ffcde .Len ()!=4{_gb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ffcde .Len ());
return nil ,_fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_fceae .Coords =_ffcde ;if _fbeea :=_fdaac .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fbeea !=nil {_fbeea =_fb .TraceToDirectObject (_fbeea );
_adda ,_bccfc :=_fbeea .(*_fb .PdfObjectArray );if !_bccfc {_gb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbeea );return nil ,_fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fceae .Domain =_adda ;};_gecaa =_fdaac .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gecaa ==nil {_gb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fceae .Function =[]PdfFunction {};if _ffgg ,_accd :=_gecaa .(*_fb .PdfObjectArray );_accd {for _ ,_agfgf :=range _ffgg .Elements (){_cefda ,_ffbfa :=_ggfef (_agfgf );if _ffbfa !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ffbfa );
return nil ,_ffbfa ;};_fceae .Function =append (_fceae .Function ,_cefda );};}else {_fcgbce ,_cbdfe :=_ggfef (_gecaa );if _cbdfe !=nil {_gb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cbdfe );
return nil ,_cbdfe ;};_fceae .Function =append (_fceae .Function ,_fcgbce );};if _gfcae :=_fdaac .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gfcae !=nil {_gfcae =_fb .TraceToDirectObject (_gfcae );_efbdcc ,_fcdcga :=_gfcae .(*_fb .PdfObjectArray );if !_fcdcga {_gb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gfcae );
return nil ,_fb .ErrTypeError ;};if _efbdcc .Len ()!=2{_gb .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_efbdcc .Len ());return nil ,ErrInvalidAttribute ;
};_fceae .Extend =_efbdcc ;};return &_fceae ,nil ;};func (_aeaad *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_edbda *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _edbda .Alternate ==nil {if _edbda .N ==1{_gfef :=NewPdfColorspaceDeviceGray ();return _gfef .ColorFromFloats (vals );}else if _edbda .N ==3{_beecg :=NewPdfColorspaceDeviceRGB ();
return _beecg .ColorFromFloats (vals );}else if _edbda .N ==4{_cgbag :=NewPdfColorspaceDeviceCMYK ();return _cgbag .ColorFromFloats (vals );}else {return nil ,_fef .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _edbda .Alternate .ColorFromFloats (vals );};var _ pdfFont =(*pdfFontSimple )(nil );

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_cgae *PdfColorspaceCalGray )ToPdfObject ()_fb .PdfObject {_eeeab :=&_fb .PdfObjectArray {};_eeeab .Append (_fb .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_deebce :=_fb .MakeDict ();if _cgae .WhitePoint !=nil {_deebce .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fb .MakeArray (_fb .MakeFloat (_cgae .WhitePoint [0]),_fb .MakeFloat (_cgae .WhitePoint [1]),_fb .MakeFloat (_cgae .WhitePoint [2])));
}else {_gb .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _cgae .BlackPoint !=nil {_deebce .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fb .MakeArray (_fb .MakeFloat (_cgae .BlackPoint [0]),_fb .MakeFloat (_cgae .BlackPoint [1]),_fb .MakeFloat (_cgae .BlackPoint [2])));
};_deebce .Set ("\u0047\u0061\u006dm\u0061",_fb .MakeFloat (_cgae .Gamma ));_eeeab .Append (_deebce );if _cgae ._bfgea !=nil {_cgae ._bfgea .PdfObject =_eeeab ;return _cgae ._bfgea ;};return _eeeab ;};func (_eccae *LTV )enable (_ccbb ,_eefdc []*_bc .Certificate ,_bebe string )error {_beefd ,_efega ,_bcgg :=_eccae .buildCertChain (_ccbb ,_eefdc );
if _bcgg !=nil {return _bcgg ;};_bedgf ,_bcgg :=_eccae .getCerts (_beefd );if _bcgg !=nil {return _bcgg ;};_eacda ,_bcgg :=_eccae .getOCSPs (_beefd ,_efega );if _bcgg !=nil {return _bcgg ;};_cadd ,_bcgg :=_eccae .getCRLs (_beefd );if _bcgg !=nil {return _bcgg ;
};_fffg :=_eccae ._bafcg ;_cafd ,_bcgg :=_fffg .addCerts (_bedgf );if _bcgg !=nil {return _bcgg ;};_gfda ,_bcgg :=_fffg .addOCSPs (_eacda );if _bcgg !=nil {return _bcgg ;};_aegga ,_bcgg :=_fffg .addCRLs (_cadd );if _bcgg !=nil {return _bcgg ;};if _bebe !=""{_fffg .VRI [_bebe ]=&VRI {Cert :_cafd ,OCSP :_gfda ,CRL :_aegga };
};_eccae ._cfaa .SetDSS (_fffg );return nil ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_ggg :=NewPdfAction ();_gf :=&PdfActionHide {};_gf .PdfAction =_ggg ;_ggg .SetContext (_gf );return _gf ;};

// ValidateSignatures validates digital signatures in the document.
func (_bbeaf *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _bbeaf .AcroForm ==nil {return nil ,nil ;};if _bbeaf .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_bafcbc *PdfSignature ;
_fbgcb *PdfField ;_egcada SignatureHandler ;};var _fbcd []*sigFieldPair ;for _ ,_bdgef :=range _bbeaf .AcroForm .AllFields (){if _bdgef .V ==nil {continue ;};if _fadfb ,_cfgbc :=_fb .GetDict (_bdgef .V );_cfgbc {if _edea ,_dddcdd :=_fb .GetNameVal (_fadfb .Get ("\u0054\u0079\u0070\u0065"));
_dddcdd &&_edea =="\u0053\u0069\u0067"{_bgbbb ,_egegbf :=_fb .GetIndirect (_bdgef .V );if !_egegbf {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_bgfba ,_agfd :=_bbeaf .newPdfSignatureFromIndirect (_bgbbb );if _agfd !=nil {return nil ,_agfd ;};var _aedff SignatureHandler ;for _ ,_bfcgb :=range handlers {if _bfcgb .IsApplicable (_bgfba ){_aedff =_bfcgb ;break ;};};_fbcd =append (_fbcd ,&sigFieldPair {_bafcbc :_bgfba ,_fbgcb :_bdgef ,_egcada :_aedff });
};};};var _becfd []SignatureValidationResult ;for _ ,_gfede :=range _fbcd {_dgeaa :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_gfede ._fbgcb }};if _gfede ._egcada ==nil {_dgeaa .Errors =append (_dgeaa .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_becfd =append (_becfd ,_dgeaa );continue ;};_dcaef ,_defda :=_gfede ._egcada .NewDigest (_gfede ._bafcbc );if _defda !=nil {_dgeaa .Errors =append (_dgeaa .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_defda .Error ());
_becfd =append (_becfd ,_dgeaa );continue ;};_cabgf :=_gfede ._bafcbc .ByteRange ;if _cabgf ==nil {_dgeaa .Errors =append (_dgeaa .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_becfd =append (_becfd ,_dgeaa );
continue ;};for _edgcb :=0;_edgcb < _cabgf .Len ();_edgcb =_edgcb +2{_ggaeg ,_ :=_fb .GetNumberAsInt64 (_cabgf .Get (_edgcb ));_dafb ,_ :=_fb .GetIntVal (_cabgf .Get (_edgcb +1));if _ ,_bgbad :=_bbeaf ._abae .Seek (_ggaeg ,_ac .SeekStart );_bgbad !=nil {return nil ,_bgbad ;
};_begaaf :=make ([]byte ,_dafb );if _ ,_debdc :=_bbeaf ._abae .Read (_begaaf );_debdc !=nil {return nil ,_debdc ;};_dcaef .Write (_begaaf );};_edaad ,_defda :=_gfede ._egcada .Validate (_gfede ._bafcbc ,_dcaef );if _defda !=nil {return nil ,_defda ;};
_edaad .Name =_gfede ._bafcbc .Name .Decoded ();_edaad .Reason =_gfede ._bafcbc .Reason .Decoded ();if _gfede ._bafcbc .M !=nil {_agbbd ,_cbfgg :=NewPdfDate (_gfede ._bafcbc .M .String ());if _cbfgg !=nil {_edaad .Errors =append (_edaad .Errors ,_cbfgg .Error ());
continue ;};_edaad .Date =_agbbd ;};_edaad .ContactInfo =_gfede ._bafcbc .ContactInfo .Decoded ();_edaad .Location =_gfede ._bafcbc .Location .Decoded ();_edaad .Fields =_dgeaa .Fields ;_becfd =append (_becfd ,_edaad );};return _becfd ,nil ;};

// SetImage updates XObject Image with new image data.
func (_gedgc *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_gedgc .Filter .UpdateParams (img .GetParamsDict ());_dbcg ,_gegcb :=_gedgc .Filter .EncodeBytes (img .Data );if _gegcb !=nil {return _gegcb ;};_gedgc .Stream =_dbcg ;_dadcd :=img .Width ;
_gedgc .Width =&_dadcd ;_gaae :=img .Height ;_gedgc .Height =&_gaae ;_dbcee :=img .BitsPerComponent ;_gedgc .BitsPerComponent =&_dbcee ;if cs ==nil {if img .ColorComponents ==1{_gedgc .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_gedgc .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_gedgc .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _fef .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_gedgc .ColorSpace =cs ;};return nil ;
};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_badfa *PdfPageResources )GenerateXObjectName ()_fb .PdfObjectName {_dbdcc :=1;for {_decg :=_fb .MakeName (_f .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_dbdcc ));if !_badfa .HasXObjectByName (*_decg ){return *_decg ;};_dbdcc ++;};};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_beff *_fb .PdfIndirectObject ;};func (_fbgdcc *PdfWriter )seekByName (_becdbb _fb .PdfObject ,_fecad []string ,_fbgcf string )([]_fb .PdfObject ,error ){_gb .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_becdbb );
var _cebgce []_fb .PdfObject ;if _bdefa ,_bbbgbe :=_becdbb .(*_fb .PdfIndirectObject );_bbbgbe {return _fbgdcc .seekByName (_bdefa .PdfObject ,_fecad ,_fbgcf );};if _faeed ,_baaga :=_becdbb .(*_fb .PdfObjectStream );_baaga {return _fbgdcc .seekByName (_faeed .PdfObjectDictionary ,_fecad ,_fbgcf );
};if _cdgfe ,_dadgce :=_becdbb .(*_fb .PdfObjectDictionary );_dadgce {_gb .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_ccade :=range _cdgfe .Keys (){_aadbf :=_cdgfe .Get (_ccade );if string (_ccade )==_fbgcf {_cebgce =append (_cebgce ,_aadbf );};for _ ,_gbbcg :=range _fecad {if string (_ccade )==_gbbcg {_gb .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_gbbcg );
_cfdeg ,_dafee :=_fbgdcc .seekByName (_aadbf ,_fecad ,_fbgcf );if _dafee !=nil {return _cebgce ,_dafee ;};_cebgce =append (_cebgce ,_cfdeg ...);break ;};};};return _cebgce ,nil ;};return _cebgce ,nil ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_dcb :=NewPdfAnnotation ();_ffea :=&PdfAnnotationText {};_ffea .PdfAnnotation =_dcb ;_ffea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dcb .SetContext (_ffea );return _ffea ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_abfad *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccddc ,_bagg :=_fb .GetNumbersAsFloat (objects );
if _bagg !=nil {return nil ,_bagg ;};return _abfad .ColorFromFloats (_ccddc );};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_gcff *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_adf ,_dbfcc :=color .(*PdfColorDeviceRGB );if !_dbfcc {_gb .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _adf ,nil ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_adacf []_fb .PdfObject )([]_fb .PdfObject ,error );};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_dgdae *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _dgdae ._ddad !=nil {return _dgdae ._ddad ,nil ;};if _dgdae .Annots ==nil {_dgdae ._ddad =[]*PdfAnnotation {};return nil ,nil ;};if _dgdae ._bacgdg ==nil {_dgdae ._ddad =[]*PdfAnnotation {};
return nil ,nil ;};_eebec ,_ceecg :=_dgdae ._bacgdg .loadAnnotations (_dgdae .Annots );if _ceecg !=nil {return nil ,_ceecg ;};if _eebec ==nil {_dgdae ._ddad =[]*PdfAnnotation {};};_dgdae ._ddad =_eebec ;return _dgdae ._ddad ,nil ;};func _febge (_deeg *_fb .PdfObjectDictionary ,_dgfa *fontCommon )(*pdfFontType3 ,error ){_cegga :=_aeeafe (_dgfa );
_gdfff :=_deeg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _gdfff ==nil {_gdfff =_fb .MakeInteger (0);};_cegga .FirstChar =_gdfff ;_fbbfb ,_bdfb :=_fb .GetIntVal (_gdfff );if !_bdfb {_gb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gdfff );
return nil ,_fb .ErrTypeError ;};_dccf :=_gc .CharCode (_fbbfb );_gdfff =_deeg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _gdfff ==nil {_gdfff =_fb .MakeInteger (255);};_cegga .LastChar =_gdfff ;_fbbfb ,_bdfb =_fb .GetIntVal (_gdfff );
if !_bdfb {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_gdfff );return nil ,_fb .ErrTypeError ;
};_beeff :=_gc .CharCode (_fbbfb );_gdfff =_deeg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _gdfff !=nil {_cegga .Resources =_gdfff ;};_gdfff =_deeg .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _gdfff ==nil {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_gdfff );
return nil ,_fb .ErrNotSupported ;};_cegga .CharProcs =_gdfff ;_gdfff =_deeg .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _gdfff ==nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_gdfff );
return nil ,_fb .ErrNotSupported ;};_cegga .FontMatrix =_gdfff ;_cegga ._bgbcb =make (map[_gc .CharCode ]float64 );_gdfff =_deeg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _gdfff !=nil {_cegga .Widths =_gdfff ;_aagbe ,_baggf :=_fb .GetArray (_gdfff );
if !_baggf {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_gdfff );return nil ,_fb .ErrTypeError ;
};_ecgga ,_afafc :=_aagbe .ToFloat64Array ();if _afafc !=nil {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_afafc ;};if len (_ecgga )!=int (_beeff -_dccf +1){_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_beeff -_dccf +1,len (_ecgga ));
return nil ,_fb .ErrRangeError ;};_cged ,_baggf :=_fb .GetArray (_cegga .FontMatrix );if !_baggf {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_cged );
return nil ,_afafc ;};_fgbb ,_afafc :=_cged .ToFloat64Array ();if _afafc !=nil {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_afafc ;};_baeb :=_fc .NewMatrix (_fgbb [0],_fgbb [1],_fgbb [2],_fgbb [3],_fgbb [4],_fgbb [5]);for _gggcb ,_fgebe :=range _ecgga {_cfdef ,_ :=_baeb .Transform (_fgebe ,_fgebe );_cegga ._bgbcb [_dccf +_gc .CharCode (_gggcb )]=_cfdef ;};};_cegga .Encoding =_fb .TraceToDirectObject (_deeg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_dceea :=_deeg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _dceea !=nil {_cegga ._daag =_fb .TraceToDirectObject (_dceea );_ffag ,_ccbff :=_cgaea (_cegga ._daag ,&_cegga .fontCommon );if _ccbff !=nil {return nil ,_ccbff ;};_cegga ._acfd =_ffag ;
};if _gbeb :=_cegga ._acfd ;_gbeb !=nil {_cegga ._ecfg =_gc .NewCMapEncoder ("",nil ,_gbeb );}else {_cegga ._ecfg =_gc .NewPdfDocEncoder ();};return _cegga ,nil ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _fb .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _fb .PdfObject ;Contents _fb .PdfObject ;
Rotate *int64 ;Group _fb .PdfObject ;Thumb _fb .PdfObject ;B _fb .PdfObject ;Dur _fb .PdfObject ;Trans _fb .PdfObject ;AA _fb .PdfObject ;Metadata _fb .PdfObject ;PieceInfo _fb .PdfObject ;StructParents _fb .PdfObject ;ID _fb .PdfObject ;PZ _fb .PdfObject ;
SeparationInfo _fb .PdfObject ;Tabs _fb .PdfObject ;TemplateInstantiated _fb .PdfObject ;PresSteps _fb .PdfObject ;UserUnit _fb .PdfObject ;VP _fb .PdfObject ;Annots _fb .PdfObject ;_ddad []*PdfAnnotation ;_fadc *_fb .PdfObjectDictionary ;_dfbd *_fb .PdfIndirectObject ;
_bacgdg *PdfReader ;};func _gacfg ()string {_cacda .Lock ();defer _cacda .Unlock ();return _egbgg };func (_dcccc *PdfReader )traverseObjectData (_babac _fb .PdfObject )error {return _fb .ResolveReferencesDeep (_babac ,_dcccc ._fgccc );};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_bgdb ,_cbbc :=NewStandard14Font (basefont );if _cbbc !=nil {panic (_f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _bgdb ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_afcdc *PdfFieldSignature )ToPdfObject ()_fb .PdfObject {if _afcdc .PdfAnnotationWidget !=nil {_afcdc .PdfAnnotationWidget .ToPdfObject ();};_afcdc .PdfField .ToPdfObject ();_gdcd :=_afcdc ._cdcae ;_gbcc :=_gdcd .PdfObject .(*_fb .PdfObjectDictionary );
_gbcc .SetIfNotNil ("\u0046\u0054",_fb .MakeName ("\u0053\u0069\u0067"));_gbcc .SetIfNotNil ("\u004c\u006f\u0063\u006b",_afcdc .Lock );_gbcc .SetIfNotNil ("\u0053\u0056",_afcdc .SV );if _afcdc .V !=nil {_gbcc .SetIfNotNil ("\u0056",_afcdc .V .ToPdfObject ());
};return _gdcd ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_adg :=NewPdfAnnotation ();_eba :=&PdfAnnotationSound {};_eba .PdfAnnotation =_adg ;_eba .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_adg .SetContext (_eba );return _eba ;};

// B returns the value of the B component of the color.
func (_adcae *PdfColorCalRGB )B ()float64 {return _adcae [1]};

// StdFontName represents name of a standard font.
type StdFontName =_ba .StdFontName ;func (_cgefgc *PdfPage )getParentResources ()(*PdfPageResources ,error ){_ddgg :=_cgefgc .Parent ;for _ddgg !=nil {_ddgcdb ,_edcfc :=_fb .GetDict (_ddgg );if !_edcfc {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_fef .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _aecae :=_ddgcdb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_aecae !=nil {_ggfeb ,_ebcca :=_fb .GetDict (_aecae );
if !_ebcca {return nil ,_fef .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_ccceee ,_dfeed :=NewPdfPageResourcesFromDict (_ggfeb );if _dfeed !=nil {return nil ,_dfeed ;};return _ccceee ,nil ;
};_ddgg =_ddgcdb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// ToPdfObject implements interface PdfModel.
func (_cdbgd *PdfAnnotationSound )ToPdfObject ()_fb .PdfObject {_cdbgd .PdfAnnotation .ToPdfObject ();_fecd :=_cdbgd ._caa ;_dbbd :=_fecd .PdfObject .(*_fb .PdfObjectDictionary );_cdbgd .PdfAnnotationMarkup .appendToPdfDictionary (_dbbd );_dbbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0053\u006f\u0075n\u0064"));
_dbbd .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_cdbgd .Sound );_dbbd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cdbgd .Name );return _fecd ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _fb .PdfObject ;BS _fb .PdfObject ;};func (_bfbg *PdfWriter )getPdfVersion ()string {return _f .Sprintf ("\u0025\u0064\u002e%\u0064",_bfbg ._effda .Major ,_bfbg ._effda .Minor );
};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_ddgdf int ,_cecfa *PdfPage );

// String implements interface PdfObject.
func (_cbeb *PdfAction )String ()string {_ca ,_ga :=_cbeb .ToPdfObject ().(*_fb .PdfIndirectObject );if _ga {return _f .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cbeb ._bd ,_ca .PdfObject .String ());};return "";};

// SetContext set the sub annotation (context).
func (_deegf *PdfShading )SetContext (ctx PdfModel ){_deegf ._bgcg =ctx };func _cfdg (_fbcb *_fb .PdfIndirectObject )(*PdfOutline ,error ){_babb ,_gcag :=_fbcb .PdfObject .(*_fb .PdfObjectDictionary );if !_gcag {return nil ,_f .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_edaea :=NewPdfOutline ();if _ggfadd :=_babb .Get ("\u0054\u0079\u0070\u0065");_ggfadd !=nil {_ccgba ,_abcce :=_ggfadd .(*_fb .PdfObjectName );if _abcce {if *_ccgba !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_gb .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_ccgba );
};};};if _fgdge :=_babb .Get ("\u0043\u006f\u0075n\u0074");_fgdge !=nil {_eaab ,_cdged :=_fb .GetNumberAsInt64 (_fgdge );if _cdged !=nil {return nil ,_cdged ;};_edaea .Count =&_eaab ;};return _edaea ,nil ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// GetCerts returns the signature certificate chain.
func (_dfff *PdfSignature )GetCerts ()([]*_bc .Certificate ,error ){var _abdfe []func ()([]*_bc .Certificate ,error );switch _bddbd ,_ :=_fb .GetNameVal (_dfff .SubFilter );_bddbd {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_abdfe =append (_abdfe ,_dfff .extractChainFromPKCS7 ,_dfff .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_abdfe =append (_abdfe ,_dfff .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_abdfe =append (_abdfe ,_dfff .extractChainFromPKCS7 );
default:return nil ,_f .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_bddbd );};for _ ,_ggec :=range _abdfe {_ddcfb ,_edce :=_ggec ();if _edce !=nil {return nil ,_edce ;
};if len (_ddcfb )> 0{return _ddcfb ,nil ;};};return nil ,ErrSignNoCertificates ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_cag :=NewPdfAnnotation ();_ece :=&PdfAnnotationWatermark {};_ece .PdfAnnotation =_cag ;_cag .SetContext (_ece );return _ece ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_degca *PdfOutlineTreeNode )GetContainingPdfObject ()_fb .PdfObject {return _degca .GetContext ().GetContainingPdfObject ();};

// ToPdfObject implements interface PdfModel.
func (_fea *PdfActionURI )ToPdfObject ()_fb .PdfObject {_fea .PdfAction .ToPdfObject ();_edd :=_fea ._ege ;_ecb :=_edd .PdfObject .(*_fb .PdfObjectDictionary );_ecb .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeURI )));_ecb .SetIfNotNil ("\u0055\u0052\u0049",_fea .URI );
_ecb .SetIfNotNil ("\u0049\u0073\u004da\u0070",_fea .IsMap );return _edd ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_fgdged *PdfSignature )bool ;Validate (_eeggc *PdfSignature ,_bbbgb Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_gbfag *PdfSignature )(Hasher ,error );Sign (_gdada *PdfSignature ,_efbdca Hasher )error ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_dcddb *PdfField )FullName ()(string ,error ){var _beebg _cb .Buffer ;_afcg :=[]string {};if _dcddb .T !=nil {_afcg =append (_afcg ,_dcddb .T .Decoded ());};_befbg :=map[*PdfField ]bool {};_befbg [_dcddb ]=true ;_ggdb :=_dcddb .Parent ;for _ggdb !=nil {if _ ,_ccge :=_befbg [_ggdb ];
_ccge {return _beebg .String (),_fef .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _ggdb .T ==nil {return _beebg .String (),_fef .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_afcg =append (_afcg ,_ggdb .T .Decoded ());_befbg [_ggdb ]=true ;_ggdb =_ggdb .Parent ;};for _ceec :=len (_afcg )-1;_ceec >=0;_ceec --{_beebg .WriteString (_afcg [_ceec ]);if _ceec > 0{_beebg .WriteString ("\u002e");};};return _beebg .String (),nil ;
};func _gcbcga ()string {_cacda .Lock ();defer _cacda .Unlock ();return _aegge };func _dfaa ()string {_cacda .Lock ();defer _cacda .Unlock ();return _ddeac };

// IsEncrypted returns true if the PDF file is encrypted.
func (_bbfgbg *PdfReader )IsEncrypted ()(bool ,error ){return _bbfgbg ._cecbb .IsEncrypted ()};

// ToPdfObject returns the PDF representation of the page resources.
func (_bgfd *PdfPageResources )ToPdfObject ()_fb .PdfObject {_dggg :=_bgfd ._aeefa ;_dggg .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bgfd .ExtGState );if _bgfd ._acfcf !=nil {_bgfd .ColorSpace =_bgfd ._acfcf .ToPdfObject ();};_dggg .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bgfd .ColorSpace );
_dggg .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_bgfd .Pattern );_dggg .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bgfd .Shading );_dggg .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_bgfd .XObject );_dggg .SetIfNotNil ("\u0046\u006f\u006e\u0074",_bgfd .Font );
_dggg .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_bgfd .ProcSet );_dggg .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_bgfd .Properties );return _dggg ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_edgf *PdfColorspaceDeviceNAttributes )ToPdfObject ()_fb .PdfObject {_defef :=_fb .MakeDict ();if _edgf .Subtype !=nil {_defef .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_edgf .Subtype );};_defef .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_edgf .Colorants );
_defef .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_edgf .Process );_defef .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_edgf .MixingHints );if _edgf ._dgad !=nil {_edgf ._dgad .PdfObject =_defef ;return _edgf ._dgad ;
};return _defef ;};func (_efbda fontCommon )isCIDFont ()bool {if _efbda ._aaab ==""{_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_efbda );
};_bdgdg :=false ;switch _efbda ._aaab {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_bdgdg =true ;};_gb .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_bdgdg ,_efbda );
return _bdgdg ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fddba *PdfShadingType7 )ToPdfObject ()_fb .PdfObject {_fddba .PdfShading .ToPdfObject ();_gcgbd ,_bafgf :=_fddba .getShadingDict ();if _bafgf !=nil {_gb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fddba .BitsPerCoordinate !=nil {_gcgbd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fddba .BitsPerCoordinate );};if _fddba .BitsPerComponent !=nil {_gcgbd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fddba .BitsPerComponent );
};if _fddba .BitsPerFlag !=nil {_gcgbd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fddba .BitsPerFlag );};if _fddba .Decode !=nil {_gcgbd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fddba .Decode );};if _fddba .Function !=nil {if len (_fddba .Function )==1{_gcgbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fddba .Function [0].ToPdfObject ());
}else {_efbaa :=_fb .MakeArray ();for _ ,_aacdf :=range _fddba .Function {_efbaa .Append (_aacdf .ToPdfObject ());};_gcgbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efbaa );};};return _fddba ._bbdbag ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_bdagb *PdfOutputIntent )ParsePdfObject (object _fb .PdfObject )error {_adeae ,_afge :=object .(*_fb .PdfObjectDictionary );if !_afge {_fdcdd ,_ggfac :=_fb .GetIndirect (object );if !_ggfac {_gb .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _fef .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_adeae ,_ggfac =_fdcdd .PdfObject .(*_fb .PdfObjectDictionary );if !_ggfac {_gb .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _fef .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};};_bdagb ._febgd =_adeae ;_bdagb .Type ,_ =_adeae .GetString ("\u0054\u0079\u0070\u0065");_cecf ,_afge :=_adeae .GetString ("\u0053");if _afge {switch _cecf {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_bdagb .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_bdagb .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_bdagb .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_bdagb .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_bdagb .S =PdfOutputIntentTypeX ;
};};_bdagb .OutputCondition ,_ =_adeae .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_bdagb .OutputConditionIdentifier ,_ =_adeae .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_bdagb .RegistryName ,_ =_adeae .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_bdagb .Info ,_ =_adeae .GetString ("\u0049\u006e\u0066\u006f");if _cafbg ,_adfbad :=_fb .GetStream (_adeae .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_adfbad {_bdagb .ColorComponents ,_ =_fb .GetIntVal (_cafbg .Get ("\u004e"));_aefcg ,_badg :=_fb .DecodeStream (_cafbg );if _badg !=nil {return _badg ;};_bdagb .DestOutputProfile =_aefcg ;};return nil ;};

// String returns a string describing the font descriptor.
func (_cfdfb *PdfFontDescriptor )String ()string {var _bdbd []string ;if _cfdfb .FontName !=nil {_bdbd =append (_bdbd ,_cfdfb .FontName .String ());};if _cfdfb .FontFamily !=nil {_bdbd =append (_bdbd ,_cfdfb .FontFamily .String ());};if _cfdfb .fontFile !=nil {_bdbd =append (_bdbd ,_cfdfb .fontFile .String ());
};if _cfdfb ._egdd !=nil {_bdbd =append (_bdbd ,_cfdfb ._egdd .String ());};_bdbd =append (_bdbd ,_f .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_cfdfb .FontFile3 !=nil ));return _f .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_eg .Join (_bdbd ,"\u002c\u0020"));
};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_fb .PdfObjectInteger ;BitsPerComponent *_fb .PdfObjectInteger ;BitsPerFlag *_fb .PdfObjectInteger ;Decode *_fb .PdfObjectArray ;Function []PdfFunction ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_eedac *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_gb .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fef .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_fef .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_edfa *PdfAppender )Write (w _ac .Writer )error {if _edfa ._aagc {return _fef .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_ccaa :=NewPdfWriter ();_gegd ,_gfbba :=_fb .GetDict (_ccaa ._bdefb );if !_gfbba {return _fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_bbba ,_gfbba :=_gegd .Get ("\u004b\u0069\u0064\u0073").(*_fb .PdfObjectArray );if !_gfbba {return _fef .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_gfec ,_gfbba :=_gegd .Get ("\u0043\u006f\u0075n\u0074").(*_fb .PdfObjectInteger );if !_gfbba {return _fef .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_fcgg :=_edfa ._fcae ._cecbb ;_debe :=_fcgg .GetTrailer ();if _debe ==nil {return _fef .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_fdaebd ,_gfbba :=_fb .GetIndirect (_debe .Get ("\u0052\u006f\u006f\u0074"));
if !_gfbba {return _fef .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_aab ,_gfbba :=_fb .GetDict (_fdaebd );if !_gfbba {_gb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_fdaebd ,*_debe );
return _fef .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_bgba :=range _aab .Keys (){if _ccaa ._aeab .Get (_bgba )==nil {_fbab :=_aab .Get (_bgba );_ccaa ._aeab .Set (_bgba ,_fbab );};};if _edfa ._fae !=nil {_ccaa ._aeab .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_edfa ._fae .ToPdfObject ());
_edfa .updateObjectsDeep (_edfa ._fae .ToPdfObject (),nil );};if _edfa ._gdc !=nil {_edfa .updateObjectsDeep (_edfa ._gdc .ToPdfObject (),nil );_ccaa ._aeab .Set ("\u0044\u0053\u0053",_edfa ._gdc .GetContainingPdfObject ());};if _ccaa ._effda .Major < 2{_ccaa .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_ccaa .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_edfa .addNewObject (_ccaa ._gbaa );_edfa .addNewObject (_ccaa ._aebagd );_abf :=false ;if len (_edfa ._fcae .PageList )!=len (_edfa ._bdf ){_abf =true ;}else {for _gbgb :=range _edfa ._fcae .PageList {switch {case _edfa ._bdf [_gbgb ]==_edfa ._fcae .PageList [_gbgb ]:case _edfa ._bdf [_gbgb ]==_edfa .Reader .PageList [_gbgb ]:default:_abf =true ;
};if _abf {break ;};};};if _abf {_edfa .updateObjectsDeep (_ccaa ._bdefb ,nil );}else {_edfa ._gcbg [_ccaa ._bdefb ]=struct{}{};};_ccaa ._bdefb .ObjectNumber =_edfa .Reader ._dffd .ObjectNumber ;_edfa ._beed [_ccaa ._bdefb ]=_edfa .Reader ._dffd .ObjectNumber ;
_cff :=[]_fb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_fbdd :=range _edfa ._bdf {_bfcc :=_fbdd .ToPdfObject ();
*_gfec =*_gfec +1;if _aeae ,_dadg :=_bfcc .(*_fb .PdfIndirectObject );_dadg &&_aeae .GetParser ()==_edfa ._fcae ._cecbb {_bbba .Append (&_aeae .PdfObjectReference );continue ;};if _gdafc ,_cbbb :=_fb .GetDict (_bfcc );_cbbb {_bffca ,_afcf :=_gdafc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_fb .PdfIndirectObject );
for _afcf {_gb .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bffca );_dbbf ,_adgb :=_bffca .PdfObject .(*_fb .PdfObjectDictionary );if !_adgb {return _fef .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_gadb :=range _cff {_gb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gadb );if _gdafc .Get (_gadb )!=nil {_gb .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _feb :=_dbbf .Get (_gadb );_feb !=nil {_gb .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gadb );_gdafc .Set (_gadb ,_feb );};};_bffca ,_afcf =_dbbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_fb .PdfIndirectObject );
_gb .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dbbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_gdafc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ccaa ._bdefb );};_edfa .updateObjectsDeep (_bfcc ,nil );
_bbba .Append (_bfcc );};if _ ,_ffde :=_edfa ._bfcg .Seek (0,_ac .SeekStart );_ffde !=nil {return _ffde ;};_agd :=make (map[SignatureHandler ]_ac .Writer );_abfa :=_fb .MakeArray ();for _ ,_cgga :=range _edfa ._bbbec {if _eeaa ,_ecea :=_fb .GetIndirect (_cgga );
_ecea {if _dbcb ,_cggfg :=_eeaa .PdfObject .(*pdfSignDictionary );_cggfg {_eddc :=*_dbcb ._acfga ;var _eebd error ;_agd [_eddc ],_eebd =_eddc .NewDigest (_dbcb ._efde );if _eebd !=nil {return _eebd ;};_abfa .Append (_fb .MakeInteger (0xfffff),_fb .MakeInteger (0xfffff));
};};};if _abfa .Len ()> 0{_abfa .Append (_fb .MakeInteger (0xfffff),_fb .MakeInteger (0xfffff));};for _ ,_feaf :=range _edfa ._bbbec {if _dgb ,_fgdec :=_fb .GetIndirect (_feaf );_fgdec {if _cage ,_ebgb :=_dgb .PdfObject .(*pdfSignDictionary );_ebgb {_cage .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_abfa );
};};};_fgfd :=len (_agd )> 0;var _bbfe _ac .Reader =_edfa ._bfcg ;if _fgfd {_fbe :=make ([]_ac .Writer ,0,len (_agd ));for _ ,_fgab :=range _agd {_fbe =append (_fbe ,_fgab );};_bbfe =_ac .TeeReader (_edfa ._bfcg ,_ac .MultiWriter (_fbe ...));};_fcba ,_dbcc :=_ac .Copy (w ,_bbfe );
if _dbcc !=nil {return _dbcc ;};if len (_edfa ._bbbec )==0{return nil ;};_ccaa ._aebgd =_fcba ;_ccaa .ObjNumOffset =_edfa ._dbac ;_ccaa ._geefd =true ;_ccaa ._gbdeg =_edfa ._fgac ;_ccaa ._bcdfd =_edfa ._efaa ;_ccaa ._fccbf =_edfa ._cgfb ;_ccaa ._effda =_edfa ._fcae .PdfVersion ();
_ccaa ._cgefe =_edfa ._beed ;_gbbgb :=_edfa ._cded .GetXrefType ();if _gbbgb !=nil {_gaef :=*_gbbgb ==_fb .XrefTypeObjectStream ;_ccaa ._acfeb =&_gaef ;};_ccaa ._bddff =map[_fb .PdfObject ]struct{}{};_ccaa ._cgdaa =[]_fb .PdfObject {};for _ ,_fdbea :=range _edfa ._bbbec {if _ ,_daae :=_edfa ._gcbg [_fdbea ];
_daae {continue ;};_ccaa .addObject (_fdbea );};_gbae :=w ;if _fgfd {_gbae =_cb .NewBuffer (nil );};if _fdac :=_ccaa .Write (_gbae );_fdac !=nil {return _fdac ;};if _fgfd {_dcdb :=_gbae .(*_cb .Buffer ).Bytes ();_cafc :=_fb .MakeArray ();var _ddeg []*pdfSignDictionary ;
var _dcefg int64 ;for _ ,_deag :=range _ccaa ._cgdaa {if _abab ,_deebc :=_fb .GetIndirect (_deag );_deebc {if _cgbd ,_dcae :=_abab .PdfObject .(*pdfSignDictionary );_dcae {_ddeg =append (_ddeg ,_cgbd );_febe :=_cgbd ._fdfdg +int64 (_cgbd ._ddged );_cafc .Append (_fb .MakeInteger (_dcefg ),_fb .MakeInteger (_febe -_dcefg ));
_dcefg =_cgbd ._fdfdg +int64 (_cgbd ._dafg );};};};_cafc .Append (_fb .MakeInteger (_dcefg ),_fb .MakeInteger (_fcba +int64 (len (_dcdb ))-_dcefg ));_gfdba :=[]byte (_cafc .WriteString ());for _ ,_dcdd :=range _ddeg {_cfeb :=int (_dcdd ._fdfdg -_fcba );
for _ebcf :=_dcdd ._acgeg ;_ebcf < _dcdd ._aagag ;_ebcf ++{_dcdb [_cfeb +_ebcf ]=' ';};_ddegb :=_dcdb [_cfeb +_dcdd ._acgeg :_cfeb +_dcdd ._aagag ];copy (_ddegb ,_gfdba );};var _fdgeg int ;for _ ,_bfbe :=range _ddeg {_cadf :=int (_bfbe ._fdfdg -_fcba );
_bcfe :=_dcdb [_fdgeg :_cadf +_bfbe ._ddged ];_beeb :=*_bfbe ._acfga ;_agd [_beeb ].Write (_bcfe );_fdgeg =_cadf +_bfbe ._dafg ;};for _ ,_bbcd :=range _ddeg {_abe :=_dcdb [_fdgeg :];_bfgfb :=*_bbcd ._acfga ;_agd [_bfgfb ].Write (_abe );};for _ ,_ebabc :=range _ddeg {_egfc :=int (_ebabc ._fdfdg -_fcba );
_ddbe :=*_ebabc ._acfga ;_ffbe :=_agd [_ddbe ];if _dbgff :=_ddbe .Sign (_ebabc ._efde ,_ffbe );_dbgff !=nil {return _dbgff ;};_ebabc ._efde .ByteRange =_cafc ;_egcfc :=[]byte (_ebabc ._efde .Contents .WriteString ());for _fbc :=_ebabc ._acgeg ;_fbc < _ebabc ._aagag ;
_fbc ++{_dcdb [_egfc +_fbc ]=' ';};for _cdbd :=_ebabc ._ddged ;_cdbd < _ebabc ._dafg ;_cdbd ++{_dcdb [_egfc +_cdbd ]=' ';};_edcf :=_dcdb [_egfc +_ebabc ._acgeg :_egfc +_ebabc ._aagag ];copy (_edcf ,_gfdba );_edcf =_dcdb [_egfc +_ebabc ._ddged :_egfc +_ebabc ._dafg ];
copy (_edcf ,_egcfc );};_edfg :=_cb .NewBuffer (_dcdb );_ ,_dbcc =_ac .Copy (w ,_edfg );if _dbcc !=nil {return _dbcc ;};};_edfa ._aagc =true ;return nil ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_addfg *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_febg ,_bacb :=color .(*PdfColorCalGray );if !_bacb {_gb .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_febg .Val ();X :=_addfg .WhitePoint [0]*_eda .Pow (ANorm ,_addfg .Gamma );Y :=_addfg .WhitePoint [1]*_eda .Pow (ANorm ,_addfg .Gamma );
Z :=_addfg .WhitePoint [2]*_eda .Pow (ANorm ,_addfg .Gamma );_aafe :=3.240479*X +-1.537150*Y +-0.498535*Z ;_geacc :=-0.969256*X +1.875992*Y +0.041556*Z ;_gacc :=0.055648*X +-0.204043*Y +1.057311*Z ;_aafe =_eda .Min (_eda .Max (_aafe ,0),1.0);_geacc =_eda .Min (_eda .Max (_geacc ,0),1.0);
_gacc =_eda .Min (_eda .Max (_gacc ,0),1.0);return NewPdfColorDeviceRGB (_aafe ,_geacc ,_gacc ),nil ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_bdc :=PdfColorDeviceGray (grayVal );return &_bdc ;};func _cbdc (_adcea _fb .PdfObject )(*PdfShading ,error ){_feecc :=&PdfShading {};var _dgegf *_fb .PdfObjectDictionary ;if _bcadd ,_eaec :=_fb .GetIndirect (_adcea );
_eaec {_feecc ._bbdbag =_bcadd ;_edcdg ,_fedfd :=_bcadd .PdfObject .(*_fb .PdfObjectDictionary );if !_fedfd {_gb .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_fb .ErrTypeError ;};_dgegf =_edcdg ;}else if _gebbe ,_aefgeg :=_fb .GetStream (_adcea );_aefgeg {_feecc ._bbdbag =_gebbe ;_dgegf =_gebbe .PdfObjectDictionary ;}else if _cedb ,_adfc :=_fb .GetDict (_adcea );_adfc {_feecc ._bbdbag =_cedb ;_dgegf =_cedb ;
}else {_gb .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_adcea );return nil ,_fb .ErrTypeError ;};if _dgegf ==nil {_gb .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_fef .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_adcea =_dgegf .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _adcea ==nil {_gb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_adcea =_fb .TraceToDirectObject (_adcea );_fbff ,_ffae :=_adcea .(*_fb .PdfObjectInteger );if !_ffae {_gb .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_adcea );
return nil ,_fb .ErrTypeError ;};if *_fbff < 1||*_fbff > 7{_gb .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_fbff );
return nil ,_fb .ErrTypeError ;};_feecc .ShadingType =_fbff ;_adcea =_dgegf .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _adcea ==nil {_gb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gebec ,_fbdaa :=NewPdfColorspaceFromPdfObject (_adcea );if _fbdaa !=nil {_gb .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_fbdaa );
return nil ,_fbdaa ;};_feecc .ColorSpace =_gebec ;_adcea =_dgegf .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _adcea !=nil {_adcea =_fb .TraceToDirectObject (_adcea );_cdfca ,_feefae :=_adcea .(*_fb .PdfObjectArray );if !_feefae {_gb .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_adcea );
return nil ,_fb .ErrTypeError ;};_feecc .Background =_cdfca ;};_adcea =_dgegf .Get ("\u0042\u0042\u006f\u0078");if _adcea !=nil {_adcea =_fb .TraceToDirectObject (_adcea );_acbe ,_gfgce :=_adcea .(*_fb .PdfObjectArray );if !_gfgce {_gb .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_adcea );
return nil ,_fb .ErrTypeError ;};_dbbfc ,_ccggb :=NewPdfRectangle (*_acbe );if _ccggb !=nil {_gb .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ccggb );return nil ,_ccggb ;};_feecc .BBox =_dbbfc ;};_adcea =_dgegf .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _adcea !=nil {_adcea =_fb .TraceToDirectObject (_adcea );_fabgd ,_ebfe :=_adcea .(*_fb .PdfObjectBool );if !_ebfe {_gb .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_adcea );
return nil ,_fb .ErrTypeError ;};_feecc .AntiAlias =_fabgd ;};switch *_fbff {case 1:_fbcea ,_egedb :=_bebcff (_dgegf );if _egedb !=nil {return nil ,_egedb ;};_fbcea .PdfShading =_feecc ;_feecc ._bgcg =_fbcea ;return _feecc ,nil ;case 2:_aged ,_fgabf :=_cagd (_dgegf );
if _fgabf !=nil {return nil ,_fgabf ;};_aged .PdfShading =_feecc ;_feecc ._bgcg =_aged ;return _feecc ,nil ;case 3:_fcdbd ,_ddbeac :=_bgbb (_dgegf );if _ddbeac !=nil {return nil ,_ddbeac ;};_fcdbd .PdfShading =_feecc ;_feecc ._bgcg =_fcdbd ;return _feecc ,nil ;
case 4:_caede ,_gcdfg :=_beffa (_dgegf );if _gcdfg !=nil {return nil ,_gcdfg ;};_caede .PdfShading =_feecc ;_feecc ._bgcg =_caede ;return _feecc ,nil ;case 5:_bdegg ,_abebge :=_gbcedc (_dgegf );if _abebge !=nil {return nil ,_abebge ;};_bdegg .PdfShading =_feecc ;
_feecc ._bgcg =_bdegg ;return _feecc ,nil ;case 6:_efdcd ,_babfe :=_gfbeg (_dgegf );if _babfe !=nil {return nil ,_babfe ;};_efdcd .PdfShading =_feecc ;_feecc ._bgcg =_efdcd ;return _feecc ,nil ;case 7:_edeee ,_dgacee :=_fbeeb (_dgegf );if _dgacee !=nil {return nil ,_dgacee ;
};_edeee .PdfShading =_feecc ;_feecc ._bgcg =_edeee ;return _feecc ,nil ;};return nil ,_fef .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};func (_ccdd *PdfReader )newPdfAnnotationFreeTextFromDict (_edbe *_fb .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_dgaa :=PdfAnnotationFreeText {};
_agag ,_gga :=_ccdd .newPdfAnnotationMarkupFromDict (_edbe );if _gga !=nil {return nil ,_gga ;};_dgaa .PdfAnnotationMarkup =_agag ;_dgaa .DA =_edbe .Get ("\u0044\u0041");_dgaa .Q =_edbe .Get ("\u0051");_dgaa .RC =_edbe .Get ("\u0052\u0043");_dgaa .DS =_edbe .Get ("\u0044\u0053");
_dgaa .CL =_edbe .Get ("\u0043\u004c");_dgaa .IT =_edbe .Get ("\u0049\u0054");_dgaa .BE =_edbe .Get ("\u0042\u0045");_dgaa .RD =_edbe .Get ("\u0052\u0044");_dgaa .BS =_edbe .Get ("\u0042\u0053");_dgaa .LE =_edbe .Get ("\u004c\u0045");return &_dgaa ,nil ;
};func _ebgad (_cabgg ,_ecdab string )string {if _eg .Contains (_cabgg ,"\u002b"){_ffdb :=_eg .Split (_cabgg ,"\u002b");if len (_ffdb )==2{_cabgg =_ffdb [1];};};return _ecdab +"\u002b"+_cabgg ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _fb .PdfObject ;RichMediaContent _fb .PdfObject ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_bbab *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_eabdg :=_bbab .actualFont ();if _eabdg ==nil {_gb .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_bbab ._gcfd );
return _ba .CharMetrics {},false ;};if _cbgd ,_abdf :=_eabdg .GetRuneMetrics (r );_abdf {return _cbgd ,true ;};if _eceg ,_cdcgf :=_bbab .GetFontDescriptor ();_cdcgf ==nil &&_eceg !=nil {return _ba .CharMetrics {Wx :_eceg ._gbgaf },true ;};_gb .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bbab );
return _ba .CharMetrics {},false ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_adbd *PdfFieldButton )IsRadio ()bool {return _adbd .GetType ()==ButtonTypeRadio };

// IsColored specifies if the pattern is colored.
func (_ebdaf *PdfTilingPattern )IsColored ()bool {if _ebdaf .PaintType !=nil &&*_ebdaf .PaintType ==1{return true ;};return false ;};

// ToPdfObject implements interface PdfModel.
func (_eccd *PdfAnnotationProjection )ToPdfObject ()_fb .PdfObject {_eccd .PdfAnnotation .ToPdfObject ();_cgge :=_eccd ._caa ;_ffca :=_cgge .PdfObject .(*_fb .PdfObjectDictionary );_eccd .PdfAnnotationMarkup .appendToPdfDictionary (_ffca );return _cgge ;
};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_eaad pdfCIDFontType0 )GetRuneMetrics (r rune )(_ba .CharMetrics ,bool ){return _ba .CharMetrics {Wx :_eaad ._dgcbg },true ;};func (_bgf *PdfReader )newPdfActionGotoRFromDict (_gde *_fb .PdfObjectDictionary )(*PdfActionGoToR ,error ){_fdc ,_edc :=_bg (_gde .Get ("\u0046"));
if _edc !=nil {return nil ,_edc ;};return &PdfActionGoToR {D :_gde .Get ("\u0044"),NewWindow :_gde .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_fdc },nil ;};func (_gabdf SignatureValidationResult )String ()string {var _dffbg _cb .Buffer ;_dffbg .WriteString (_f .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_gabdf .Name ));
if _gabdf .Date ._eeff > 0{_dffbg .WriteString (_f .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_gabdf .Date .ToGoTime ().String ()));}else {_dffbg .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_gabdf .Reason )> 0{_dffbg .WriteString (_f .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_gabdf .Reason ));}else {_dffbg .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_gabdf .Location )> 0{_dffbg .WriteString (_f .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_gabdf .Location ));}else {_dffbg .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_gabdf .ContactInfo )> 0{_dffbg .WriteString (_f .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_gabdf .ContactInfo ));}else {_dffbg .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_dffbg .WriteString (_f .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_gabdf .Fields )));if _gabdf .IsSigned {_dffbg .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_dffbg .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _gabdf .IsVerified {_dffbg .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_dffbg .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _gabdf .IsTrusted {_dffbg .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_dffbg .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_gabdf .GeneralizedTime .IsZero (){_dffbg .WriteString (_f .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_gabdf .GeneralizedTime .String ()));
};return _dffbg .String ();};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_cadc *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_feg *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_bcad ,_cabfe :=color .(*PdfColorCalRGB );if !_cabfe {_gb .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_fef .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecdd :=_bcad .A ();_fdcf :=_bcad .B ();_eabg :=_bcad .C ();X :=_feg .Matrix [0]*_eda .Pow (_ecdd ,_feg .Gamma [0])+_feg .Matrix [3]*_eda .Pow (_fdcf ,_feg .Gamma [1])+_feg .Matrix [6]*_eda .Pow (_eabg ,_feg .Gamma [2]);
Y :=_feg .Matrix [1]*_eda .Pow (_ecdd ,_feg .Gamma [0])+_feg .Matrix [4]*_eda .Pow (_fdcf ,_feg .Gamma [1])+_feg .Matrix [7]*_eda .Pow (_eabg ,_feg .Gamma [2]);Z :=_feg .Matrix [2]*_eda .Pow (_ecdd ,_feg .Gamma [0])+_feg .Matrix [5]*_eda .Pow (_fdcf ,_feg .Gamma [1])+_feg .Matrix [8]*_eda .Pow (_eabg ,_feg .Gamma [2]);
_ggae :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gage :=-0.969256*X +1.875992*Y +0.041556*Z ;_bccf :=0.055648*X +-0.204043*Y +1.057311*Z ;_ggae =_eda .Min (_eda .Max (_ggae ,0),1.0);_gage =_eda .Min (_eda .Max (_gage ,0),1.0);_bccf =_eda .Min (_eda .Max (_bccf ,0),1.0);
return NewPdfColorDeviceRGB (_ggae ,_gage ,_bccf ),nil ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_ddbef *PdfColorspaceSpecialIndexed )ToPdfObject ()_fb .PdfObject {_eecf :=_fb .MakeArray (_fb .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_eecf .Append (_ddbef .Base .ToPdfObject ());_eecf .Append (_fb .MakeInteger (int64 (_ddbef .HiVal )));
_eecf .Append (_ddbef .Lookup );if _ddbef ._cefcb !=nil {_ddbef ._cefcb .PdfObject =_eecf ;return _ddbef ._cefcb ;};return _eecf ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_aeg *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func _ddbbe (_addd _fb .PdfObject )(*PdfColorspaceCalRGB ,error ){_bcbc :=NewPdfColorspaceCalRGB ();if _bcgea ,_adfd :=_addd .(*_fb .PdfIndirectObject );_adfd {_bcbc ._ffdd =_bcgea ;
};_addd =_fb .TraceToDirectObject (_addd );_cfebd ,_cec :=_addd .(*_fb .PdfObjectArray );if !_cec {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cfebd .Len ()!=2{return nil ,_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_addd =_fb .TraceToDirectObject (_cfebd .Get (0));_egace ,_cec :=_addd .(*_fb .PdfObjectName );if !_cec {return nil ,_f .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_egace !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_f .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_addd =_fb .TraceToDirectObject (_cfebd .Get (1));
_cbge ,_cec :=_addd .(*_fb .PdfObjectDictionary );if !_cec {return nil ,_f .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_addd =_cbge .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_addd =_fb .TraceToDirectObject (_addd );_ecdga ,_cec :=_addd .(*_fb .PdfObjectArray );if !_cec {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _ecdga .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_cccb ,_cdcad :=_ecdga .GetAsFloat64Slice ();
if _cdcad !=nil {return nil ,_cdcad ;};_bcbc .WhitePoint =_cccb ;_addd =_cbge .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _addd !=nil {_addd =_fb .TraceToDirectObject (_addd );_cddd ,_cdcg :=_addd .(*_fb .PdfObjectArray );if !_cdcg {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _cddd .Len ()!=3{return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_adbe ,_gacfc :=_cddd .GetAsFloat64Slice ();
if _gacfc !=nil {return nil ,_gacfc ;};_bcbc .BlackPoint =_adbe ;};_addd =_cbge .Get ("\u0047\u0061\u006dm\u0061");if _addd !=nil {_addd =_fb .TraceToDirectObject (_addd );_aadd ,_egce :=_addd .(*_fb .PdfObjectArray );if !_egce {return nil ,_f .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _aadd .Len ()!=3{return nil ,_f .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_fdaea ,_caab :=_aadd .GetAsFloat64Slice ();if _caab !=nil {return nil ,_caab ;
};_bcbc .Gamma =_fdaea ;};_addd =_cbge .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _addd !=nil {_addd =_fb .TraceToDirectObject (_addd );_agcc ,_dada :=_addd .(*_fb .PdfObjectArray );if !_dada {return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _agcc .Len ()!=9{_gb .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_agcc .String ());return nil ,_f .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_feda ,_caabc :=_agcc .GetAsFloat64Slice ();if _caabc !=nil {return nil ,_caabc ;};_bcbc .Matrix =_feda ;};return _bcbc ,nil ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_debd *PdfReader )GetPageLabels ()(_fb .PdfObject ,error ){_edgbba :=_fb .ResolveReference (_debd ._aaegf .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _edgbba ==nil {return nil ,nil ;};if !_debd ._fdcaf {_gbbc :=_debd .traverseObjectData (_edgbba );
if _gbbc !=nil {return nil ,_gbbc ;};};return _edgbba ,nil ;};func (_ceegd *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_bcfg :=NewPdfAction ();_afc :=&PdfActionGoToE {};_afc .PdfAction =_bcfg ;_bcfg .SetContext (_afc );return _afc ;};

// ToPdfObject implements interface PdfModel.
func (_fed *PdfActionThread )ToPdfObject ()_fb .PdfObject {_fed .PdfAction .ToPdfObject ();_ded :=_fed ._ege ;_fda :=_ded .PdfObject .(*_fb .PdfObjectDictionary );_fda .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeThread )));if _fed .F !=nil {_fda .Set ("\u0046",_fed .F .ToPdfObject ());
};_fda .SetIfNotNil ("\u0044",_fed .D );_fda .SetIfNotNil ("\u0042",_fed .B );return _ded ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};