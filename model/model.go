//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_d "bufio";_af "bytes";_f "encoding/binary";_ca "errors";_c "fmt";_aag "github.com/unidoc/unipdf/v3/common";_dcf "github.com/unidoc/unipdf/v3/common/license";_bd "github.com/unidoc/unipdf/v3/core";_gf "github.com/unidoc/unipdf/v3/core/security";_afa "github.com/unidoc/unipdf/v3/core/security/crypt";_fgg "github.com/unidoc/unipdf/v3/internal/cmap";_adg "github.com/unidoc/unipdf/v3/internal/imageutil";_caa "github.com/unidoc/unipdf/v3/internal/sampling";_ff "github.com/unidoc/unipdf/v3/internal/textencoding";_gb "github.com/unidoc/unipdf/v3/model/internal/fonts";_afc "github.com/unidoc/unipdf/v3/ps";_cad "github.com/unidoc/unitype";_be "image";_ec "image/color";_ "image/gif";_ "image/png";_eb "io";_cc "io/ioutil";_cg "math";_gc "math/rand";_de "os";_dc "regexp";_fg "sort";_bb "strconv";_ad "strings";_b "time";_g "unicode";_aa "unicode/utf8";);func _cacbe (_bgeb _bd .PdfObject )(*PdfColorspaceICCBased ,error ){_dddf :=&PdfColorspaceICCBased {};if _fbecb ,_gbge :=_bgeb .(*_bd .PdfIndirectObject );_gbge {_dddf ._edac =_fbecb ;};_bgeb =_bd .TraceToDirectObject (_bgeb );_cegcc ,_bdffc :=_bgeb .(*_bd .PdfObjectArray );if !_bdffc {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cegcc .Len ()!=2{return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_bgeb =_bd .TraceToDirectObject (_cegcc .Get (0));_accg ,_bdffc :=_bgeb .(*_bd .PdfObjectName );if !_bdffc {return nil ,_c .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_accg !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_c .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_bgeb =_cegcc .Get (1);_ecedb ,_bdffc :=_bd .GetStream (_bgeb );if !_bdffc {_aag .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_bgeb );return nil ,_c .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_bdeg :=_ecedb .PdfObjectDictionary ;_afbb ,_bdffc :=_bdeg .Get ("\u004e").(*_bd .PdfObjectInteger );if !_bdffc {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_afbb !=1&&*_afbb !=3&&*_afbb !=4{return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");};_dddf .N =int (*_afbb );if _cfbb :=_bdeg .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_cfbb !=nil {_fdbb ,_cdbe :=NewPdfColorspaceFromPdfObject (_cfbb );if _cdbe !=nil {return nil ,_cdbe ;};_dddf .Alternate =_fdbb ;};if _fdad :=_bdeg .Get ("\u0052\u0061\u006eg\u0065");_fdad !=nil {_fdad =_bd .TraceToDirectObject (_fdad );_aegbd ,_gfced :=_fdad .(*_bd .PdfObjectArray );if !_gfced {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");};if _aegbd .Len ()!=2*_dddf .N {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");};_afdcb ,_caee :=_aegbd .GetAsFloat64Slice ();if _caee !=nil {return nil ,_caee ;};_dddf .Range =_afdcb ;}else {_dddf .Range =make ([]float64 ,2*_dddf .N );for _eacg :=0;_eacg < _dddf .N ;_eacg ++{_dddf .Range [2*_eacg ]=0.0;_dddf .Range [2*_eacg +1]=1.0;};};if _gaab :=_bdeg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gaab !=nil {_aecb ,_gdef :=_gaab .(*_bd .PdfObjectStream );if !_gdef {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_dddf .Metadata =_aecb ;};_face ,_cefd :=_bd .DecodeStream (_ecedb );if _cefd !=nil {return nil ,_cefd ;};_dddf .Data =_face ;_dddf ._dcgf =_ecedb ;return _dddf ,nil ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_eaab :=NewPdfAnnotation ();_acb :=&PdfAnnotationWatermark {};_acb .PdfAnnotation =_eaab ;_eaab .SetContext (_acb );return _acb ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_bbda *pdfFontSimple )ToPdfObject ()_bd .PdfObject {if _bbda ._fedd ==nil {_bbda ._fedd =&_bd .PdfIndirectObject {};};_bebb :=_bbda .baseFields ().asPdfObjectDictionary ("");_bbda ._fedd .PdfObject =_bebb ;if _bbda .FirstChar !=nil {_bebb .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_bbda .FirstChar );};if _bbda .LastChar !=nil {_bebb .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_bbda .LastChar );};if _bbda .Widths !=nil {_bebb .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_bbda .Widths );};if _bbda .Encoding !=nil {_bebb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bbda .Encoding );}else if _bbda ._cagf !=nil {_ffbec :=_bbda ._cagf .ToPdfObject ();if _ffbec !=nil {_bebb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ffbec );};};return _bbda ._fedd ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bd .PdfObject ;LE _bd .PdfObject ;BS _bd .PdfObject ;IC _bd .PdfObject ;BE _bd .PdfObject ;IT _bd .PdfObject ;Measure _bd .PdfObject ;};func _ggdb (_bcggb *_bd .PdfObjectDictionary )(*PdfFieldButton ,error ){_cggd :=&PdfFieldButton {};_cggd .Opt ,_ =_bd .GetArray (_bcggb .Get ("\u004f\u0070\u0074"));return _cggd ,nil ;};func _ccbca (_gfbb *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_gfbb }};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_dggg *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ca .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");};_cafef :=field .V ;if _cafef ==nil {return _ca .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_bdde :=pageNum -1;if _bdde < 0||_bdde > len (_dggg ._cgaa )-1{return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_bbbc :=_dggg .Reader .PageList [_bdde ];field .P =_bbbc .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_bd .MakeString (_c .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_bbbc .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _dggg ._fdcd ==_dggg ._eege .AcroForm {_dggg ._fdcd =_dggg .Reader .AcroForm ;};_cdgb :=_dggg ._fdcd ;if _cdgb ==nil {_cdgb =NewPdfAcroForm ();};_cdgb .SigFlags =_bd .MakeInteger (3);_cfcb :=append (_cdgb .AllFields (),field .PdfField );_cdgb .Fields =&_cfcb ;_dggg .ReplaceAcroForm (_cdgb );_dggg .UpdatePage (_bbbc );_dggg ._cgaa [_bdde ]=_bbbc ;return nil ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _bd .PdfObject ;T _bd .PdfObject ;Operation _bd .PdfObject ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_dede *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_daagc ,_ ,_cegdb :=_dede .CharcodesToUnicodeWithStats (_dede .BytesToCharcodes (data ));_bdbed :=_ff .ExpandLigatures (_daagc );return _bdbed ,_aa .RuneCountInString (_bdbed ),_cegdb ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_bd .PdfObject ,error );};

// Mask returns the uin32 bitmask for the specific flag.
func (_cdda FieldFlag )Mask ()uint32 {return uint32 (_cdda )};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_gb .CharMetrics ;

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_cadc PdfModel ;Type _bd .PdfObject ;S _bd .PdfObject ;Next _bd .PdfObject ;_ccf *_bd .PdfIndirectObject ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_gbec :=NewPdfAnnotation ();_cebe :=&PdfAnnotationFreeText {};_cebe .PdfAnnotation =_gbec ;_cebe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gbec .SetContext (_cebe );return _cebe ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_cabdf *PdfAnnotation )ToPdfObject ()_bd .PdfObject {_badf :=_cabdf ._ega ;_bgba :=_badf .PdfObject .(*_bd .PdfObjectDictionary );_bgba .Clear ();_bgba .Set ("\u0054\u0079\u0070\u0065",_bd .MakeName ("\u0041\u006e\u006eo\u0074"));_bgba .SetIfNotNil ("\u0052\u0065\u0063\u0074",_cabdf .Rect );_bgba .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cabdf .Contents );_bgba .SetIfNotNil ("\u0050",_cabdf .P );_bgba .SetIfNotNil ("\u004e\u004d",_cabdf .NM );_bgba .SetIfNotNil ("\u004d",_cabdf .M );_bgba .SetIfNotNil ("\u0046",_cabdf .F );_bgba .SetIfNotNil ("\u0041\u0050",_cabdf .AP );_bgba .SetIfNotNil ("\u0041\u0053",_cabdf .AS );_bgba .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_cabdf .Border );_bgba .SetIfNotNil ("\u0043",_cabdf .C );_bgba .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cabdf .StructParent );_bgba .SetIfNotNil ("\u004f\u0043",_cabdf .OC );return _badf ;};func (_gcac *PdfReader )newPdfActionSoundFromDict (_ccc *_bd .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_ccc .Get ("\u0053\u006f\u0075n\u0064"),Volume :_ccc .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_ccc .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_ccc .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_ccc .Get ("\u004d\u0069\u0078")},nil ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_dcbb []byte ;_ggcg bool ;_fbadbga []float64 ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_affgg *PdfColorspaceDeviceCMYK )ToPdfObject ()_bd .PdfObject {return _bd .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_cacbf *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _cacbf ._aaffd .(*PdfShadingPattern );};func (_bge *PdfReader )newPdfAnnotationMovieFromDict (_bdfc *_bd .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_fgdg :=PdfAnnotationMovie {};_fgdg .T =_bdfc .Get ("\u0054");_fgdg .Movie =_bdfc .Get ("\u004d\u006f\u0076i\u0065");_fgdg .A =_bdfc .Get ("\u0041");return &_fgdg ,nil ;};func (_baf *PdfReader )newPdfAnnotationMarkupFromDict (_bfe *_bd .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_adgf :=&PdfAnnotationMarkup {};if _badg :=_bfe .Get ("\u0054");_badg !=nil {_adgf .T =_badg ;};if _agcc :=_bfe .Get ("\u0050\u006f\u0070u\u0070");_agcc !=nil {_cbfc ,_bea :=_agcc .(*_bd .PdfIndirectObject );if !_bea {if _ ,_edgc :=_agcc .(*_bd .PdfObjectNull );!_edgc {return nil ,_ca .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");};}else {_cce ,_ebfg :=_baf .newPdfAnnotationFromIndirectObject (_cbfc );if _ebfg !=nil {return nil ,_ebfg ;};if _cce !=nil {_ece ,_dcgd :=_cce ._bfa .(*PdfAnnotationPopup );if !_dcgd {return nil ,_ca .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");};_adgf .Popup =_ece ;};};};if _gfbc :=_bfe .Get ("\u0043\u0041");_gfbc !=nil {_adgf .CA =_gfbc ;};if _fddc :=_bfe .Get ("\u0052\u0043");_fddc !=nil {_adgf .RC =_fddc ;};if _addbc :=_bfe .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");_addbc !=nil {_adgf .CreationDate =_addbc ;};if _dabc :=_bfe .Get ("\u0049\u0052\u0054");_dabc !=nil {_adgf .IRT =_dabc ;};if _eag :=_bfe .Get ("\u0053\u0075\u0062\u006a");_eag !=nil {_adgf .Subj =_eag ;};if _fgbd :=_bfe .Get ("\u0052\u0054");_fgbd !=nil {_adgf .RT =_fgbd ;};if _cgde :=_bfe .Get ("\u0049\u0054");_cgde !=nil {_adgf .IT =_cgde ;};if _cgc :=_bfe .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_cgc !=nil {_adgf .ExData =_cgc ;};return _adgf ,nil ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_aga :=NewPdfAnnotation ();_gefc :=&PdfAnnotationWidget {};_gefc .PdfAnnotation =_aga ;_aga .SetContext (_gefc );return _gefc ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_gabb *Outline )Insert (index uint ,item *OutlineItem ){_dccdca :=uint (len (_gabb .Entries ));if index > _dccdca {index =_dccdca ;};_gabb .Entries =append (_gabb .Entries [:index ],append ([]*OutlineItem {item },_gabb .Entries [index :]...)...);};func _fcgedf ()string {_gddd :=_dcf .GetLicenseKey ();if len (_fcedd )> 0&&(_gddd .IsLicensed ()||_bcaa ){return _fcedd ;};return _c .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_cbaed (),_gddd .TypeToString ());};

// ToPdfObject converts rectangle to a PDF object.
func (_adgg *PdfRectangle )ToPdfObject ()_bd .PdfObject {return _bd .MakeArray (_bd .MakeFloat (_adgg .Llx ),_bd .MakeFloat (_adgg .Lly ),_bd .MakeFloat (_adgg .Urx ),_bd .MakeFloat (_adgg .Ury ));};func (_bfb *PdfReader )newPdfActionGoTo3DViewFromDict (_faaf *_bd .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_faaf .Get ("\u0054\u0041"),V :_faaf .Get ("\u0056")},nil ;};func (_cba *PdfReader )newPdfAnnotationLinkFromDict (_cabd *_bd .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_bgb :=PdfAnnotationLink {};_bgb .A =_cabd .Get ("\u0041");_bgb .Dest =_cabd .Get ("\u0044\u0065\u0073\u0074");_bgb .H =_cabd .Get ("\u0048");_bgb .PA =_cabd .Get ("\u0050\u0041");_bgb .QuadPoints =_cabd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_bgb .BS =_cabd .Get ("\u0042\u0053");return &_bgb ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_afcbc *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_dged *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_dged .HiVal )};};func _befd (_ebgf _bd .PdfObject )(*PdfPageResourcesColorspaces ,error ){_bacbg :=&PdfPageResourcesColorspaces {};if _bfdbc ,_gebeg :=_ebgf .(*_bd .PdfIndirectObject );_gebeg {_bacbg ._cdeef =_bfdbc ;_ebgf =_bfdbc .PdfObject ;};_eace ,_baaea :=_bd .GetDict (_ebgf );if !_baaea {return nil ,_ca .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_bacbg .Names =[]string {};_bacbg .Colorspaces =map[string ]PdfColorspace {};for _ ,_fdaa :=range _eace .Keys (){_cacfg :=_eace .Get (_fdaa );_bacbg .Names =append (_bacbg .Names ,string (_fdaa ));_bbdaa ,_bbgb :=NewPdfColorspaceFromPdfObject (_cacfg );if _bbgb !=nil {return nil ,_bbgb ;};_bacbg .Colorspaces [string (_fdaa )]=_bbdaa ;};return _bacbg ,nil ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_cacgg *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_gceed *PdfReader )GetPageLabels ()(_bd .PdfObject ,error ){_fcgeg :=_bd .ResolveReference (_gceed ._cebfa .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _fcgeg ==nil {return nil ,nil ;};if !_gceed ._abbg {_cdgge :=_gceed .traverseObjectData (_fcgeg );if _cdgge !=nil {return nil ,_cdgge ;};};return _fcgeg ,nil ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_eeca *Image )ToGoImage ()(_be .Image ,error ){_aag .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_abab ,_cccfc :=_adg .NewImage (int (_eeca .Width ),int (_eeca .Height ),int (_eeca .BitsPerComponent ),_eeca .ColorComponents ,_eeca .Data ,_eeca ._dcbb ,_eeca ._fbadbga );if _cccfc !=nil {return nil ,_cccfc ;};return _abab ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bddaf *PdfSignature )GetContainingPdfObject ()_bd .PdfObject {return _bddaf ._cgbf };

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_efgga *_bd .PdfParser ;_bgede _bd .PdfObject ;_cbca *_bd .PdfIndirectObject ;_aegdf *_bd .PdfObjectDictionary ;_eefe []*_bd .PdfIndirectObject ;PageList []*PdfPage ;_fdafa int ;_cebfa *_bd .PdfObjectDictionary ;_afgegb *PdfOutlineTreeNode ;AcroForm *PdfAcroForm ;_befgd *modelManager ;_abbg bool ;_fbcccg map[_bd .PdfObject ]struct{};_dedf _eb .ReadSeeker ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_adgd *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fefcc :=vals [0];if _fefcc < 0.0||_fefcc > 100.0{_aag .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_fefcc );return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fffg :=vals [1];_acfec :=float64 (-100);_bead :=float64 (100);if len (_adgd .Range )> 1{_acfec =_adgd .Range [0];_bead =_adgd .Range [1];};if _fffg < _acfec ||_fffg > _bead {_aag .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_fffg ,_acfec ,_bead );return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aeefa :=vals [2];_ffeg :=float64 (-100);_adcb :=float64 (100);if len (_adgd .Range )> 3{_ffeg =_adgd .Range [2];_adcb =_adgd .Range [3];};if _aeefa < _ffeg ||_aeefa > _adcb {_aag .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_aeefa ,_ffeg ,_adcb );return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbgf :=NewPdfColorLab (_fefcc ,_fffg ,_aeefa );return _bbgf ,nil ;};

// SetDecode sets the decode image float slice.
func (_gedgf *Image )SetDecode (decode []float64 ){_gedgf ._fbadbga =decode };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_fdeag *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bd .PdfObject ;};type modelManager struct{_afac map[PdfModel ]_bd .PdfObject ;_eded map[_bd .PdfObject ]PdfModel ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_cagd *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// ToPdfObject implements interface PdfModel.
func (_gbb *PdfActionSound )ToPdfObject ()_bd .PdfObject {_gbb .PdfAction .ToPdfObject ();_fc :=_gbb ._ccf ;_dee :=_fc .PdfObject .(*_bd .PdfObjectDictionary );_dee .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeSound )));_dee .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_gbb .Sound );_dee .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_gbb .Volume );_dee .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_gbb .Synchronous );_dee .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gbb .Repeat );_dee .SetIfNotNil ("\u004d\u0069\u0078",_gbb .Mix );return _fc ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_gbbd :=&PdfSignature {Type :_bd .MakeName ("\u0053\u0069\u0067"),Handler :handler };_caada :=&pdfSignDictionary {PdfObjectDictionary :_bd .MakeDict (),_gfga :&handler ,_gacb :_gbbd };_gbbd ._cgbf =_bd .MakeIndirectObject (_caada );return _gbbd ;};func (_gfdfd *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _gfdfd ._efgga .GetCrypter ()!=nil &&!_gfdfd ._efgga .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_aceed :=_gfdfd ._cebfa ;_abcbe :=_aceed .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _abcbe ==nil {return nil ,nil ;};_aag .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_dfdc :=_bd .ResolveReference (_abcbe );_aag .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_dfdc );if _bdacd :=_bd .IsNullObject (_dfdc );_bdacd {_aag .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");return nil ,nil ;};_gccfa ,_abfa :=_dfdc .(*_bd .PdfIndirectObject );if !_abfa {if _ ,_ggaaf :=_bd .GetDict (_dfdc );!_ggaaf {_aag .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");return nil ,nil ;};_aag .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");_gccfa =_bd .MakeIndirectObject (_dfdc );};_dcgde ,_abfa :=_gccfa .PdfObject .(*_bd .PdfObjectDictionary );if !_abfa {return nil ,_ca .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");};_aag .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_dcgde );_bacf ,_ ,_ecfe :=_gfdfd .buildOutlineTree (_gccfa ,nil ,nil ,nil );if _ecfe !=nil {return nil ,_ecfe ;};_aag .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_bacf );return _bacf ,nil ;};

// K returns the value of the key component of the color.
func (_bcac *PdfColorDeviceCMYK )K ()float64 {return float64 (_bcac [3])};func (_efg *PdfReader )newPdfAnnotationCaretFromDict (_cffcc *_bd .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_fbe :=PdfAnnotationCaret {};_cabdb ,_edbec :=_efg .newPdfAnnotationMarkupFromDict (_cffcc );if _edbec !=nil {return nil ,_edbec ;};_fbe .PdfAnnotationMarkup =_cabdb ;_fbe .RD =_cffcc .Get ("\u0052\u0044");_fbe .Sy =_cffcc .Get ("\u0053\u0079");return &_fbe ,nil ;};func (_afdf *PdfReader )newPdfAnnotationTrapNetFromDict (_gag *_bd .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_bbedf :=PdfAnnotationTrapNet {};return &_bbedf ,nil ;};func _edggc (_edacg string )map[string ]string {_aaaf :=_faag .Split (_edacg ,-1);_fbgcc :=map[string ]string {};for _ ,_adbe :=range _aaaf {_dgbf :=_dgbe .FindStringSubmatch (_adbe );if _dgbf ==nil {continue ;};_beaff ,_ecee :=_dgbf [1],_dgbf [2];_fbgcc [_beaff ]=_ecee ;};return _fbgcc ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_aaffd PdfModel ;_ebbgg _bd .PdfObject ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_ccbc *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_abdb *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_bd .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agef ,_fccd :=_bd .GetNumbersAsFloat (objects );if _fccd !=nil {return nil ,_fccd ;};return _abdb .ColorFromFloats (_agef );};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// ToPdfObject implements interface PdfModel.
func (_cac *PdfAction )ToPdfObject ()_bd .PdfObject {_gd :=_cac ._ccf ;_ga :=_gd .PdfObject .(*_bd .PdfObjectDictionary );_ga .Clear ();_ga .Set ("\u0054\u0079\u0070\u0065",_bd .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_ga .SetIfNotNil ("\u0053",_cac .S );_ga .SetIfNotNil ("\u004e\u0065\u0078\u0074",_cac .Next );return _gd ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_bfade :=&PdfColorspaceCalGray {};_bfade .BlackPoint =[]float64 {0.0,0.0,0.0};_bfade .Gamma =1;return _bfade ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_babd ,_bbbcc :=_de .Open (filePath );if _bbbcc !=nil {_aag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_bbbcc );return nil ,_bbbcc ;};defer _babd .Close ();return NewCompositePdfFontFromTTF (_babd );};func (_gdea *PdfReader )newPdfActionTransFromDict (_bdge *_bd .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_bdge .Get ("\u0054\u0072\u0061n\u0073")},nil ;};var _faag =_dc .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_efe :=NewPdfAnnotation ();_eca :=&PdfAnnotationLine {};_eca .PdfAnnotation =_efe ;_eca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efe .SetContext (_eca );return _eca ;};func (_fgdab *pdfCIDFontType2 )baseFields ()*fontCommon {return &_fgdab .fontCommon };func (_abfcf fontCommon )isCIDFont ()bool {if _abfcf ._ddad ==""{_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_abfcf );};_cdbg :=false ;switch _abfcf ._ddad {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_cdbg =true ;};_aag .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_cdbg ,_abfcf );return _cdbg ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bd .PdfObject ;IC _bd .PdfObject ;BE _bd .PdfObject ;RD _bd .PdfObject ;};type pdfFontType0 struct{fontCommon ;_ebce *_bd .PdfIndirectObject ;_ebdd _ff .TextEncoder ;Encoding _bd .PdfObject ;DescendantFont *PdfFont ;_aaefc *_fgg .CMap ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_bfca *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func (_dbgc *PdfReader )newPdfActionRenditionFromDict (_aad *_bd .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_aad .Get ("\u0052"),AN :_aad .Get ("\u0041\u004e"),OP :_aad .Get ("\u004f\u0050"),JS :_aad .Get ("\u004a\u0053")},nil ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fgage pdfFontSimple )GetRuneMetrics (r rune )(_gb .CharMetrics ,bool ){if _fgage ._efbb !=nil {_addeg ,_fccbf :=_fgage ._efbb [r ];if _fccbf {return _addeg ,true ;};};_bbcb :=_fgage .Encoder ();if _bbcb ==nil {_aag .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_fgage );return _gb .CharMetrics {},false ;};_bedcg ,_fgcfc :=_bbcb .RuneToCharcode (r );if !_fgcfc {if r !=' '{_aag .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_fgage );};return _gb .CharMetrics {},false ;};_dfdbe ,_ecbbc :=_fgage .GetCharMetrics (_bedcg );return _dfdbe ,_ecbbc ;};func (_dcca *PdfAppender )replaceObject (_befe ,_dfd _bd .PdfObject ){switch _fgaf :=_befe .(type ){case *_bd .PdfIndirectObject :_dcca ._aab [_dfd ]=_fgaf .ObjectNumber ;case *_bd .PdfObjectStream :_dcca ._aab [_dfd ]=_fgaf .ObjectNumber ;};};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_cdggc *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_eede :=_caa .NewReader (img .getBase ());_bffd :=_adg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._dcbb ,img ._fbadbga );_fcdc :=_caa .NewWriter (_bffd );_ecfb :=_cg .Pow (2,float64 (img .BitsPerComponent ))-1;_gebc :=_cdggc .GetNumComponents ();_bebd :=make ([]uint32 ,_gebc );_gedg :=make ([]float64 ,_gebc );for {_cbga :=_eede .ReadSamples (_bebd );if _cbga ==_eb .EOF {break ;}else if _cbga !=nil {return img ,_cbga ;};for _dafbd :=0;_dafbd < _gebc ;_dafbd ++{_aaga :=float64 (_bebd [_dafbd ])/_ecfb ;_gedg [_dafbd ]=_aaga ;};_bggae ,_cbga :=_cdggc .TintTransform .Evaluate (_gedg );if _cbga !=nil {return img ,_cbga ;};for _ ,_bgfd :=range _bggae {_bgfd =_cg .Min (_cg .Max (0,_bgfd ),1.0);if _cbga =_fcdc .WriteSample (uint32 (_bgfd *_ecfb ));_cbga !=nil {return img ,_cbga ;};};};return _cdggc .AlternateSpace .ImageToRGB (_dcae (&_bffd ));};

// ToPdfObject implements interface PdfModel.
func (_fae *PdfActionTrans )ToPdfObject ()_bd .PdfObject {_fae .PdfAction .ToPdfObject ();_bbeb :=_fae ._ccf ;_aef :=_bbeb .PdfObject .(*_bd .PdfObjectDictionary );_aef .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeTrans )));_aef .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_fae .Trans );return _bbeb ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_cggec *PdfReader )GetObjectNums ()[]int {return _cggec ._efgga .GetObjectNums ()};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_baacd *pdfFontSimple )SetEncoder (encoder _ff .TextEncoder ){_baacd ._cagf =encoder };

// ToPdfObject returns a stream object.
func (_ebeg *XObjectForm )ToPdfObject ()_bd .PdfObject {_bfede :=_ebeg ._cccga ;_acfac :=_bfede .PdfObjectDictionary ;if _ebeg .Filter !=nil {_acfac =_ebeg .Filter .MakeStreamDict ();_bfede .PdfObjectDictionary =_acfac ;};_acfac .Set ("\u0054\u0079\u0070\u0065",_bd .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_acfac .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0046\u006f\u0072\u006d"));_acfac .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_ebeg .FormType );_acfac .SetIfNotNil ("\u0042\u0042\u006f\u0078",_ebeg .BBox );_acfac .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_ebeg .Matrix );if _ebeg .Resources !=nil {_acfac .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ebeg .Resources .ToPdfObject ());};_acfac .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_ebeg .Group );_acfac .SetIfNotNil ("\u0052\u0065\u0066",_ebeg .Ref );_acfac .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_ebeg .MetaData );_acfac .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_ebeg .PieceInfo );_acfac .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_ebeg .LastModified );_acfac .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ebeg .StructParent );_acfac .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_ebeg .StructParents );_acfac .SetIfNotNil ("\u004f\u0050\u0049",_ebeg .OPI );_acfac .SetIfNotNil ("\u004f\u0043",_ebeg .OC );_acfac .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ebeg .Name );_acfac .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bd .MakeInteger (int64 (len (_ebeg .Stream ))));_bfede .Stream =_ebeg .Stream ;return _bfede ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_bd .PdfObjectName ;Colorants _bd .PdfObject ;Process _bd .PdfObject ;MixingHints _bd .PdfObject ;_abdd *_bd .PdfIndirectObject ;};func _fcc (_abc _bd .PdfObject )(*PdfBorderStyle ,error ){_fafc :=&PdfBorderStyle {};_fafc ._gffg =_abc ;var _dgefa *_bd .PdfObjectDictionary ;_abc =_bd .TraceToDirectObject (_abc );_dgefa ,_adf :=_abc .(*_bd .PdfObjectDictionary );if !_adf {return nil ,_ca .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _bcd :=_dgefa .Get ("\u0054\u0079\u0070\u0065");_bcd !=nil {_bacb ,_aff :=_bcd .(*_bd .PdfObjectName );if !_aff {_aag .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_bcd );}else {if *_bacb !="\u0042\u006f\u0072\u0064\u0065\u0072"{_aag .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_bacb );};};};if _ffe :=_dgefa .Get ("\u0057");_ffe !=nil {_edcd ,_ggde :=_bd .GetNumberAsFloat (_ffe );if _ggde !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_ggde );return nil ,_ggde ;};_fafc .W =&_edcd ;};if _beac :=_dgefa .Get ("\u0053");_beac !=nil {_cabf ,_bbg :=_beac .(*_bd .PdfObjectName );if !_bbg {return nil ,_ca .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};var _affg BorderStyle ;switch *_cabf {case "\u0053":_affg =BorderStyleSolid ;case "\u0044":_affg =BorderStyleDashed ;case "\u0042":_affg =BorderStyleBeveled ;case "\u0049":_affg =BorderStyleInset ;case "\u0055":_affg =BorderStyleUnderline ;default:_aag .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_cabf );return nil ,_ca .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_fafc .S =&_affg ;};if _fccf :=_dgefa .Get ("\u0044");_fccf !=nil {_dff ,_fgea :=_fccf .(*_bd .PdfObjectArray );if !_fgea {_aag .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_fccf );return nil ,_ca .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");};_bgd ,_cfcg :=_dff .ToIntegerArray ();if _cfcg !=nil {_aag .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_cfcg );return nil ,_cfcg ;};_fafc .D =&_bgd ;};return _fafc ,nil ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_aeabb *PdfFont )BytesToCharcodes (data []byte )[]_ff .CharCode {_aag .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );if _cdab ,_dggcb :=_aeabb ._ddgba .(*pdfFontType0 );_dggcb &&_cdab ._aaefc !=nil {if _abecb ,_ddfgd :=_cdab .bytesToCharcodes (data );_ddfgd {return _abecb ;};};_dagg :=make ([]_ff .CharCode ,0,len (data )+len (data )%2);if _aeabb .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );data =append (data ,0);};for _agace :=0;_agace < len (data );_agace +=2{_gecdg :=uint16 (data [_agace ])<<8|uint16 (data [_agace +1]);_dagg =append (_dagg ,_ff .CharCode (_gecdg ));};}else {for _ ,_begg :=range data {_dagg =append (_dagg ,_ff .CharCode (_begg ));};};return _dagg ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_gda :=NewPdfAction ();_dd :=&PdfActionGoToE {};_dd .PdfAction =_gda ;_gda .SetContext (_dd );return _dd ;};func (_cfdf *pdfFontSimple )addEncoding ()error {var (_dcgce string ;_gfbd map[_ff .CharCode ]_ff .GlyphName ;_fbefc _ff .SimpleEncoder ;);if _cfdf .Encoder ()!=nil {_ebbbad ,_dbafe :=_cfdf .Encoder ().(_ff .SimpleEncoder );if _dbafe &&_ebbbad !=nil {_dcgce =_ebbbad .BaseName ();};};if _cfdf .Encoding !=nil {_fcce ,_bcbgb ,_abda :=_cfdf .getFontEncoding ();if _abda !=nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cfdf ._gfceb ,_cfdf ._ddad ,_cfdf .Encoding ,_cfdf .Encoding ,_abda );return _abda ;};if _fcce !=""{_dcgce =_fcce ;};_fbefc ,_abda =_ff .NewSimpleTextEncoder (_dcgce ,_bcbgb );if _abda !=nil {return _abda ;};};if _fbefc ==nil {_dggdb :=_cfdf ._dcgda ;if _dggdb !=nil {switch _cfdf ._ddad {case "\u0054\u0079\u0070e\u0031":if _dggdb .fontFile !=nil &&_dggdb .fontFile ._bfaec !=nil {_aag .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");_fbefc =_dggdb .fontFile ._bfaec ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _dggdb ._fgag !=nil {_aag .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_cgbcf ,_bbee :=_dggdb ._fgag .MakeEncoder ();if _bbee ==nil {_fbefc =_cgbcf ;};};};};};if _fbefc !=nil {if _gfbd !=nil {_aag .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gfbd ,_cfdf .baseFields ());_fbefc =_ff .ApplyDifferences (_fbefc ,_gfbd );};_cfdf .SetEncoder (_fbefc );};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_eae *PdfActionImportData )ToPdfObject ()_bd .PdfObject {_eae .PdfAction .ToPdfObject ();_ebg :=_eae ._ccf ;_ggc :=_ebg .PdfObject .(*_bd .PdfObjectDictionary );_ggc .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeImportData )));if _eae .F !=nil {_ggc .Set ("\u0046",_eae .F .ToPdfObject ());};return _ebg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_agbf *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bccd :=vals [0];if _bccd < 0.0||_bccd > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gaaa :=vals [1];if _gaaa < 0.0||_gaaa > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbge :=vals [2];if _fbge < 0.0||_fbge > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egge :=NewPdfColorCalRGB (_bccd ,_gaaa ,_fbge );return _egge ,nil ;};

// WriteToFile writes the Appender output to file specified by path.
func (_bdca *PdfAppender )WriteToFile (outputPath string )error {_cbba ,_aac :=_de .Create (outputPath );if _aac !=nil {return _aac ;};defer _cbba .Close ();return _bdca .Write (_cbba );};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_bfa PdfModel ;Rect _bd .PdfObject ;Contents _bd .PdfObject ;P _bd .PdfObject ;NM _bd .PdfObject ;M _bd .PdfObject ;F _bd .PdfObject ;AP _bd .PdfObject ;AS _bd .PdfObject ;Border _bd .PdfObject ;C _bd .PdfObject ;StructParent _bd .PdfObject ;OC _bd .PdfObject ;_ega *_bd .PdfIndirectObject ;};func (_cecae *Image )samplesTrimPadding (_aeda []uint32 )[]uint32 {_gcfa :=_cecae .ColorComponents *int (_cecae .Width )*int (_cecae .Height );if len (_aeda )==_gcfa {return _aeda ;};_ffbb :=make ([]uint32 ,_gcfa );_adbgg :=int (_cecae .Width )*_cecae .ColorComponents ;var _efgb ,_cecg ,_agdb ,_fddff int ;_fddcd :=_adg .BytesPerLine (int (_cecae .Width ),int (_cecae .BitsPerComponent ),_cecae .ColorComponents );for _efgb =0;_efgb < int (_cecae .Height );_efgb ++{_cecg =_efgb *int (_cecae .Width );_agdb =_efgb *_fddcd ;for _fddff =0;_fddff < _adbgg ;_fddff ++{_ffbb [_cecg +_fddff ]=_aeda [_agdb +_fddff ];};};return _ffbb ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_dacb *PdfPageResources )GetPatternByName (keyName _bd .PdfObjectName )(*PdfPattern ,bool ){if _dacb .Pattern ==nil {return nil ,false ;};_adbgfe ,_bfbcd :=_bd .TraceToDirectObject (_dacb .Pattern ).(*_bd .PdfObjectDictionary );if !_bfbcd {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dacb .Pattern );return nil ,false ;};if _gedge :=_adbgfe .Get (keyName );_gedge !=nil {_egde ,_fffe :=_aeff (_gedge );if _fffe !=nil {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_fffe );return nil ,false ;};return _egde ,true ;};return nil ,false ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_efbgd =creator };

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _bd .PdfObject ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_fggg :=NewPdfAnnotation ();_efd :=&PdfAnnotationCircle {};_efd .PdfAnnotation =_fggg ;_efd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fggg .SetContext (_efd );return _efd ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_dffca FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_dffca .Mask ()&^fl .Mask ())};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_dcbef *PdfColorspaceCalGray )ToPdfObject ()_bd .PdfObject {_cddg :=&_bd .PdfObjectArray {};_cddg .Append (_bd .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_acbc :=_bd .MakeDict ();if _dcbef .WhitePoint !=nil {_acbc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bd .MakeArray (_bd .MakeFloat (_dcbef .WhitePoint [0]),_bd .MakeFloat (_dcbef .WhitePoint [1]),_bd .MakeFloat (_dcbef .WhitePoint [2])));}else {_aag .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _dcbef .BlackPoint !=nil {_acbc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bd .MakeArray (_bd .MakeFloat (_dcbef .BlackPoint [0]),_bd .MakeFloat (_dcbef .BlackPoint [1]),_bd .MakeFloat (_dcbef .BlackPoint [2])));};_acbc .Set ("\u0047\u0061\u006dm\u0061",_bd .MakeFloat (_dcbef .Gamma ));_cddg .Append (_acbc );if _dcbef ._cbbgb !=nil {_dcbef ._cbbgb .PdfObject =_cddg ;return _dcbef ._cbbgb ;};return _cddg ;};func _edfdf (_ccdea _bd .PdfObject )(*PdfColorspaceCalGray ,error ){_cbff :=NewPdfColorspaceCalGray ();if _eccf ,_gbab :=_ccdea .(*_bd .PdfIndirectObject );_gbab {_cbff ._cbbgb =_eccf ;};_ccdea =_bd .TraceToDirectObject (_ccdea );_bfcee ,_abde :=_ccdea .(*_bd .PdfObjectArray );if !_abde {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bfcee .Len ()!=2{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_ccdea =_bd .TraceToDirectObject (_bfcee .Get (0));_badfb ,_abde :=_ccdea .(*_bd .PdfObjectName );if !_abde {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_badfb !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_c .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_ccdea =_bd .TraceToDirectObject (_bfcee .Get (1));_gcgf ,_abde :=_ccdea .(*_bd .PdfObjectDictionary );if !_abde {return nil ,_c .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};_ccdea =_gcgf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_ccdea =_bd .TraceToDirectObject (_ccdea );_addef ,_abde :=_ccdea .(*_bd .PdfObjectArray );if !_abde {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");};if _addef .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_ebfc ,_dcdb :=_addef .GetAsFloat64Slice ();if _dcdb !=nil {return nil ,_dcdb ;};_cbff .WhitePoint =_ebfc ;_ccdea =_gcgf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _ccdea !=nil {_ccdea =_bd .TraceToDirectObject (_ccdea );_cgdb ,_fdab :=_ccdea .(*_bd .PdfObjectArray );if !_fdab {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _cgdb .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_ecfa ,_fafd :=_cgdb .GetAsFloat64Slice ();if _fafd !=nil {return nil ,_fafd ;};_cbff .BlackPoint =_ecfa ;};_ccdea =_gcgf .Get ("\u0047\u0061\u006dm\u0061");if _ccdea !=nil {_ccdea =_bd .TraceToDirectObject (_ccdea );_dae ,_bcad :=_bd .GetNumberAsFloat (_ccdea );if _bcad !=nil {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_cbff .Gamma =_dae ;};return _cbff ,nil ;};

// ToInteger convert to an integer format.
func (_dbfcd *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_gebe :=_cg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gebe *_dbfcd .A ()),uint32 (_gebe *_dbfcd .B ()),uint32 (_gebe *_dbfcd .C ())};};type fontCommon struct{_gfceb string ;_ddad string ;_cggc string ;_cgab _bd .PdfObject ;_cecd *_fgg .CMap ;_dcgda *PdfFontDescriptor ;_gebbb int64 ;};

// ToPdfObject implements interface PdfModel.
func (_afbg *PdfActionJavaScript )ToPdfObject ()_bd .PdfObject {_afbg .PdfAction .ToPdfObject ();_fgb :=_afbg ._ccf ;_cdg :=_fgb .PdfObject .(*_bd .PdfObjectDictionary );_cdg .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeJavaScript )));_cdg .SetIfNotNil ("\u004a\u0053",_afbg .JS );return _fgb ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bd .PdfObject ;IC _bd .PdfObject ;RO _bd .PdfObject ;OverlayText _bd .PdfObject ;Repeat _bd .PdfObject ;DA _bd .PdfObject ;Q _bd .PdfObject ;};

// AddFont adds a font dictionary to the Font resources.
func (_fcfga *PdfPage )AddFont (name _bd .PdfObjectName ,font _bd .PdfObject )error {if _fcfga .Resources ==nil {_fcfga .Resources =NewPdfPageResources ();};if _fcfga .Resources .Font ==nil {_fcfga .Resources .Font =_bd .MakeDict ();};_dfde ,_cdcfb :=_bd .TraceToDirectObject (_fcfga .Resources .Font ).(*_bd .PdfObjectDictionary );if !_cdcfb {_aag .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_bd .TraceToDirectObject (_fcfga .Resources .Font ));return _ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dfde .Set (name ,font );return nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_acea *PdfColorspaceDeviceRGB )ToPdfObject ()_bd .PdfObject {return _bd .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// AddExtGState adds a graphics state to the XObject resources.
func (_ggad *PdfPage )AddExtGState (name _bd .PdfObjectName ,egs *_bd .PdfObjectDictionary )error {if _ggad .Resources ==nil {_ggad .Resources =NewPdfPageResources ();};if _ggad .Resources .ExtGState ==nil {_ggad .Resources .ExtGState =_bd .MakeDict ();};_edfda ,_adda :=_bd .TraceToDirectObject (_ggad .Resources .ExtGState ).(*_bd .PdfObjectDictionary );if !_adda {_aag .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bd .TraceToDirectObject (_ggad .Resources .ExtGState ));return _ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_edfda .Set (name ,egs );return nil ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _bd .PdfObject ;Dest _bd .PdfObject ;H _bd .PdfObject ;PA _bd .PdfObject ;QuadPoints _bd .PdfObject ;BS _bd .PdfObject ;_dgef *PdfAction ;_cef *PdfReader ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_bfbgg *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};func (_dfef *PdfField )inherit (_fbef func (*PdfField )bool )(bool ,error ){_aaeb :=map[*PdfField ]bool {};_cbda :=false ;_dabf :=_dfef ;for _dabf !=nil {if _ ,_dbca :=_aaeb [_dabf ];_dbca {return false ,_ca .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_becbg :=_fbef (_dabf );if _becbg {_cbda =true ;break ;};_aaeb [_dabf ]=true ;_dabf =_dabf .Parent ;};return _cbda ,nil ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_bd .PdfObjectArray ;ExtGState _bd .PdfObject ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_fgd :=NewPdfAnnotation ();_dafb :=&PdfAnnotationMovie {};_dafb .PdfAnnotation =_fgd ;_fgd .SetContext (_dafb );return _dafb ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _bd .PdfObject )(_bd .PdfObjectName ,error ){var _eegb *_bd .PdfObjectName ;var _ebdba *_bd .PdfObjectArray ;if _fdbg ,_dcac :=obj .(*_bd .PdfIndirectObject );_dcac {if _bdaec ,_cebf :=_fdbg .PdfObject .(*_bd .PdfObjectArray );_cebf {_ebdba =_bdaec ;}else if _ccag ,_bgg :=_fdbg .PdfObject .(*_bd .PdfObjectName );_bgg {_eegb =_ccag ;};}else if _bfdd ,_cade :=obj .(*_bd .PdfObjectArray );_cade {_ebdba =_bfdd ;}else if _dggf ,_ffca :=obj .(*_bd .PdfObjectName );_ffca {_eegb =_dggf ;};if _eegb !=nil {switch *_eegb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_eegb ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_eegb ,nil ;};};if _ebdba !=nil &&_ebdba .Len ()> 0{if _daae ,_gbbg :=_ebdba .Get (0).(*_bd .PdfObjectName );_gbbg {switch *_daae {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _ebdba .Len ()==1{return *_daae ,nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_daae ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_daae ,nil ;case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_daae ,nil ;};};};return "",nil ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};func (_bbac Image )getBase ()_adg .ImageBase {return _adg .NewImageBase (int (_bbac .Width ),int (_bbac .Height ),int (_bbac .BitsPerComponent ),_bbac .ColorComponents ,_bbac .Data ,_bbac ._dcbb ,_bbac ._fbadbga );};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_bbdge *PdfReader )GetNamedDestinations ()(_bd .PdfObject ,error ){_dccdea :=_bd .ResolveReference (_bbdge ._cebfa .Get ("\u004e\u0061\u006de\u0073"));if _dccdea ==nil {return nil ,nil ;};if !_bbdge ._abbg {_ccaeb :=_bbdge .traverseObjectData (_dccdea );if _ccaeb !=nil {return nil ,_ccaeb ;};};return _dccdea ,nil ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_daf :=NewPdfAnnotation ();_dgd :=&PdfAnnotationCaret {};_dgd .PdfAnnotation =_daf ;_dgd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_daf .SetContext (_dgd );return _dgd ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_deedc *XObjectForm )GetContainingPdfObject ()_bd .PdfObject {return _deedc ._cccga };

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_ggbc :=NewPdfAnnotation ();_ecc :=&PdfAnnotationScreen {};_ecc .PdfAnnotation =_ggbc ;_ggbc .SetContext (_ecc );return _ecc ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_bfebc :=PdfWriter {};_bfebc ._egeab =map[_bd .PdfObject ]struct{}{};_bfebc ._fceb =[]_bd .PdfObject {};_bfebc ._ggcdd =map[_bd .PdfObject ][]*_bd .PdfObjectDictionary {};_bfebc ._dfegff =map[_bd .PdfObject ]struct{}{};_bfebc ._ggdcd =1;_bfebc ._fbfbg =3;_bcegce :=_bd .MakeDict ();_bfeea :=[]struct{_bfeag _bd .PdfObjectName ;_egdca string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_fcgedf ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_bacbc ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_cfdgf ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_efcbd ()},{"\u0054\u0069\u0074l\u0065",_fceef ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_beec ()}};for _ ,_ccdfa :=range _bfeea {if _ccdfa ._egdca !=""{_bcegce .Set (_ccdfa ._bfeag ,_bd .MakeString (_ccdfa ._egdca ));};};if _gfbdd :=_efccg ();!_gfbdd .IsZero (){if _dfeaf ,_dcdbc :=NewPdfDateFromTime (_gfbdd );_dcdbc ==nil {_bcegce .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dfeaf .ToPdfObject ());};};if _gfagg :=_gagcd ();!_gfagg .IsZero (){if _bddgb ,_ccabb :=NewPdfDateFromTime (_gfagg );_ccabb ==nil {_bcegce .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_bddgb .ToPdfObject ());};};_cegded :=_bd .PdfIndirectObject {};_cegded .PdfObject =_bcegce ;_bfebc ._fagb =&_cegded ;_bfebc .addObject (&_cegded );_deba :=_bd .PdfIndirectObject {};_fddeb :=_bd .MakeDict ();_fddeb .Set ("\u0054\u0079\u0070\u0065",_bd .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_deba .PdfObject =_fddeb ;_bfebc ._deade =&_deba ;_bfebc .addObject (_bfebc ._deade );_abbedc :=_bd .PdfIndirectObject {};_ffad :=_bd .MakeDict ();_ffad .Set ("\u0054\u0079\u0070\u0065",_bd .MakeName ("\u0050\u0061\u0067e\u0073"));_afgce :=_bd .PdfObjectArray {};_ffad .Set ("\u004b\u0069\u0064\u0073",&_afgce );_ffad .Set ("\u0043\u006f\u0075n\u0074",_bd .MakeInteger (0));_abbedc .PdfObject =_ffad ;_bfebc ._eegaf =&_abbedc ;_bfebc ._efegf =map[_bd .PdfObject ]struct{}{};_bfebc .addObject (_bfebc ._eegaf );_fddeb .Set ("\u0050\u0061\u0067e\u0073",&_abbedc );_bfebc ._ccbfg =_fddeb ;_aag .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_deba );return _bfebc ;};

// ToPdfObject implements interface PdfModel.
func (_gecca *PdfAnnotationFileAttachment )ToPdfObject ()_bd .PdfObject {_gecca .PdfAnnotation .ToPdfObject ();_edgfa :=_gecca ._ega ;_eecc :=_edgfa .PdfObject .(*_bd .PdfObjectDictionary );_gecca .PdfAnnotationMarkup .appendToPdfDictionary (_eecc );_eecc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));_eecc .SetIfNotNil ("\u0046\u0053",_gecca .FS );_eecc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gecca .Name );return _edgfa ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_cgbe pdfFontSimple )GetCharMetrics (code _ff .CharCode )(_gb .CharMetrics ,bool ){if _cfbf ,_fadga :=_cgbe ._cegga [code ];_fadga {return _gb .CharMetrics {Wx :_cfbf },true ;};if _gb .IsStdFont (_gb .StdFontName (_cgbe ._gfceb )){return _gb .CharMetrics {Wx :250},true ;};return _gb .CharMetrics {},false ;};var _ pdfFont =(*pdfFontType0 )(nil );

// ToPdfObject implements interface PdfModel.
func (_feeb *PdfAnnotationProjection )ToPdfObject ()_bd .PdfObject {_feeb .PdfAnnotation .ToPdfObject ();_debe :=_feeb ._ega ;_edbb :=_debe .PdfObject .(*_bd .PdfObjectDictionary );_feeb .PdfAnnotationMarkup .appendToPdfDictionary (_edbb );return _debe ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_gdacg *PdfPage )Duplicate ()*PdfPage {var _gdfd PdfPage ;_gdfd =*_gdacg ;_gdfd ._cedce =_bd .MakeDict ();_gdfd ._cbfbd =_bd .MakeIndirectObject (_gdfd ._cedce );return &_gdfd ;};

// String returns a string that describes `font`.
func (_baac *PdfFont )String ()string {_fcbf :="";if _baac ._ddgba .Encoder ()!=nil {_fcbf =_baac ._ddgba .Encoder ().String ();};return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_baac ._ddgba ,_baac .baseFields ().coreString (),_fcbf );};

// GetOutlineTree returns the outline tree.
func (_cdabc *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _cdabc ._afgegb };func (_bbf *PdfReader )newPdfAnnotationCircleFromDict (_dagac *_bd .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_ceda :=PdfAnnotationCircle {};_cgcf ,_cacf :=_bbf .newPdfAnnotationMarkupFromDict (_dagac );if _cacf !=nil {return nil ,_cacf ;};_ceda .PdfAnnotationMarkup =_cgcf ;_ceda .BS =_dagac .Get ("\u0042\u0053");_ceda .IC =_dagac .Get ("\u0049\u0043");_ceda .BE =_dagac .Get ("\u0042\u0045");_ceda .RD =_dagac .Get ("\u0052\u0044");return &_ceda ,nil ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_febf *PdfPage )GetContainingPdfObject ()_bd .PdfObject {return _febf ._cbfbd };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_cccd *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfcbc :=vals [0];_acee :=[]float64 {_dfcbc };_badfc ,_cdbcf :=_cccd .TintTransform .Evaluate (_acee );if _cdbcf !=nil {_aag .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_cdbcf );_aag .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cccd .TintTransform );return nil ,_cdbcf ;};_aag .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_badfc ,_cccd .AlternateSpace );_bga ,_cdbcf :=_cccd .AlternateSpace .ColorFromFloats (_badfc );if _cdbcf !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_cdbcf );return nil ,_cdbcf ;};return _bga ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ffgb *PdfAnnotationScreen )ToPdfObject ()_bd .PdfObject {_ffgb .PdfAnnotation .ToPdfObject ();_facb :=_ffgb ._ega ;_bfd :=_facb .PdfObject .(*_bd .PdfObjectDictionary );_bfd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));_bfd .SetIfNotNil ("\u0054",_ffgb .T );_bfd .SetIfNotNil ("\u004d\u004b",_ffgb .MK );_bfd .SetIfNotNil ("\u0041",_ffgb .A );_bfd .SetIfNotNil ("\u0041\u0041",_ffgb .AA );return _facb ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ebadfe *PdfShadingType1 )ToPdfObject ()_bd .PdfObject {_ebadfe .PdfShading .ToPdfObject ();_dddbc ,_agee :=_ebadfe .getShadingDict ();if _agee !=nil {_aag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ebadfe .Domain !=nil {_dddbc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ebadfe .Domain );};if _ebadfe .Matrix !=nil {_dddbc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ebadfe .Matrix );};if _ebadfe .Function !=nil {if len (_ebadfe .Function )==1{_dddbc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ebadfe .Function [0].ToPdfObject ());}else {_gcaed :=_bd .MakeArray ();for _ ,_dageg :=range _ebadfe .Function {_gcaed .Append (_dageg .ToPdfObject ());};_dddbc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcaed );};};return _ebadfe ._ecebg ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_gdca *PdfField )GetContext ()PdfModel {return _gdca ._dac };func (_gdggg *fontFile )parseASCIIPart (_gfdc []byte )error {if len (_gfdc )< 2||string (_gfdc [:2])!="\u0025\u0021"{return _ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");};_ggdba ,_fbced ,_bffg :=_cdge (_gfdc );if _bffg !=nil {return _bffg ;};_cacaa :=_edggc (_ggdba );_gdggg ._abaf =_cacaa ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _gdggg ._abaf ==""{_aag .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");};if _fbced !=""{_eccb ,_fbaa :=_dfege (_fbced );if _fbaa !=nil {return _fbaa ;};_gfab ,_fbaa :=_ff .NewCustomSimpleTextEncoder (_eccb ,nil );if _fbaa !=nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_fbaa );return nil ;};_gdggg ._bfaec =_gfab ;};return nil ;};func _gcec (_aeag *PdfPage )map[_bd .PdfObjectName ]_bd .PdfObject {_bacbe :=make (map[_bd .PdfObjectName ]_bd .PdfObject );if _aeag .Resources ==nil {return _bacbe ;};if _aeag .Resources .Font !=nil {if _accd ,_cafg :=_bd .GetDict (_aeag .Resources .Font );_cafg {for _ ,_cec :=range _accd .Keys (){_bacbe [_cec ]=_accd .Get (_cec );};};};if _aeag .Resources .ExtGState !=nil {if _dgc ,_fbgb :=_bd .GetDict (_aeag .Resources .ExtGState );_fbgb {for _ ,_fgcg :=range _dgc .Keys (){_bacbe [_fgcg ]=_dgc .Get (_fgcg );};};};if _aeag .Resources .XObject !=nil {if _cabb ,_bdbe :=_bd .GetDict (_aeag .Resources .XObject );_bdbe {for _ ,_faeg :=range _cabb .Keys (){_bacbe [_faeg ]=_cabb .Get (_faeg );};};};if _aeag .Resources .Pattern !=nil {if _eaebb ,_abec :=_bd .GetDict (_aeag .Resources .Pattern );_abec {for _ ,_afeed :=range _eaebb .Keys (){_bacbe [_afeed ]=_eaebb .Get (_afeed );};};};if _aeag .Resources .Shading !=nil {if _daa ,_cbcg :=_bd .GetDict (_aeag .Resources .Shading );_cbcg {for _ ,_cdb :=range _daa .Keys (){_bacbe [_cdb ]=_daa .Get (_cdb );};};};if _aeag .Resources .ProcSet !=nil {if _dfge ,_bfea :=_bd .GetDict (_aeag .Resources .ProcSet );_bfea {for _ ,_afba :=range _dfge .Keys (){_bacbe [_afba ]=_dfge .Get (_afba );};};};if _aeag .Resources .Properties !=nil {if _feb ,_bcgf :=_bd .GetDict (_aeag .Resources .Properties );_bcgf {for _ ,_cfac :=range _feb .Keys (){_bacbe [_cfac ]=_feb .Get (_cfac );};};};return _bacbe ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_ffdd *PdfFont )ToUnicode ()string {if _ffdd .baseFields ()._cecd ==nil {return "";};return _ffdd .baseFields ()._cecd .Name ();};func (_baea *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_fegd *Image )GetParamsDict ()*_bd .PdfObjectDictionary {_efgf :=_bd .MakeDict ();_efgf .Set ("\u0057\u0069\u0064t\u0068",_bd .MakeInteger (_fegd .Width ));_efgf .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bd .MakeInteger (_fegd .Height ));_efgf .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bd .MakeInteger (int64 (_fegd .ColorComponents )));_efgf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bd .MakeInteger (_fegd .BitsPerComponent ));return _efgf ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_dfbd :=NewPdfAnnotation ();_facf :=&PdfAnnotationPolyLine {};_facf .PdfAnnotation =_dfbd ;_facf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfbd .SetContext (_facf );return _facf ;};

// GetSubFilter returns SubFilter value or empty string.
func (_bffdb *pdfSignDictionary )GetSubFilter ()string {_ddfaf :=_bffdb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _ddfaf ==nil {return "";};if _eaegb ,_aedgfe :=_bd .GetNameVal (_ddfaf );_aedgfe {return _eaegb ;};return "";};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_fefde *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _bgcf []_ff .TextEncoder ;if _eceb :=_fefde .baseFields ()._cecd ;_eceb !=nil {_bgcf =append (_bgcf ,_ff .NewCMapEncoder ("",nil ,_eceb ));};if _afgf :=_fefde .Encoder ();_afgf !=nil {_bgcf =append (_bgcf ,_afgf );};var _ecde _af .Buffer ;var _cbdfc int ;for _ ,_gdcae :=range data {var _ecba bool ;for _ ,_ccef :=range _bgcf {if _beeef :=_ccef .Encode (string (_gdcae ));len (_beeef )> 0{_ecde .Write (_beeef );_ecba =true ;break ;};};if !_ecba {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_gdcae );_cbdfc ++;};};if _cbdfc !=0{_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_cbdfc ,_fefde ,_bgcf );};return _ecde .Bytes (),_cbdfc ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_gdcf *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_adcd *PdfFont )CharcodesToUnicodeWithStats (charcodes []_ff .CharCode )(_ebbba []rune ,_gbea ,_edcg int ){_dcce ,_gbea ,_edcg :=_adcd .CharcodesToStrings (charcodes );return []rune (_ad .Join (_dcce ,"")),_gbea ,_edcg ;};func (_dcadg *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};func (_eaaaf *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _eaaaf ._dcgda };

// ToPdfObject returns the PDF representation of the function.
func (_fccfd *PdfFunctionType2 )ToPdfObject ()_bd .PdfObject {_fbde :=_bd .MakeDict ();_fbde .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bd .MakeInteger (2));_eabc :=&_bd .PdfObjectArray {};for _ ,_fgfge :=range _fccfd .Domain {_eabc .Append (_bd .MakeFloat (_fgfge ));};_fbde .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_eabc );if _fccfd .Range !=nil {_ffga :=&_bd .PdfObjectArray {};for _ ,_dcdc :=range _fccfd .Range {_ffga .Append (_bd .MakeFloat (_dcdc ));};_fbde .Set ("\u0052\u0061\u006eg\u0065",_ffga );};if _fccfd .C0 !=nil {_cgfbc :=&_bd .PdfObjectArray {};for _ ,_aceba :=range _fccfd .C0 {_cgfbc .Append (_bd .MakeFloat (_aceba ));};_fbde .Set ("\u0043\u0030",_cgfbc );};if _fccfd .C1 !=nil {_beefa :=&_bd .PdfObjectArray {};for _ ,_ccec :=range _fccfd .C1 {_beefa .Append (_bd .MakeFloat (_ccec ));};_fbde .Set ("\u0043\u0031",_beefa );};_fbde .Set ("\u004e",_bd .MakeFloat (_fccfd .N ));if _fccfd ._dbgab !=nil {_fccfd ._dbgab .PdfObject =_fbde ;return _fccfd ._dbgab ;};return _fbde ;};var _fcedd ="";

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_ddf :=NewPdfAction ();_gfg :=&PdfActionGoTo3DView {};_gfg .PdfAction =_ddf ;_ddf .SetContext (_gfg );return _gfg ;};func (_gab *PdfReader )newPdfActionHideFromDict (_ffg *_bd .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_ffg .Get ("\u0054"),H :_ffg .Get ("\u0048")},nil ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_efede DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};func (_cbac *PdfReader )newPdfAnnotationRichMediaFromDict (_aaee *_bd .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_bbed :=&PdfAnnotationRichMedia {};_bbed .RichMediaSettings =_aaee .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_bbed .RichMediaContent =_aaee .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _bbed ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_dfea *PdfAnnotation )GetContainingPdfObject ()_bd .PdfObject {return _dfea ._ega };

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _bd .PdfObject ;Sy _bd .PdfObject ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _bd .PdfObject ;Volume _bd .PdfObject ;Synchronous _bd .PdfObject ;Repeat _bd .PdfObject ;Mix _bd .PdfObject ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_dffdf *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _bd .GetNumberAsFloat (_dffdf .CapHeight );};

// IsEncrypted returns true if the PDF file is encrypted.
func (_bgea *PdfReader )IsEncrypted ()(bool ,error ){return _bgea ._efgga .IsEncrypted ()};func (_fbbgc *PdfWriter )seekByName (_gbbb _bd .PdfObject ,_fcaea []string ,_eagea string )([]_bd .PdfObject ,error ){_aag .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_gbbb );var _defad []_bd .PdfObject ;if _bgbad ,_cfcbb :=_gbbb .(*_bd .PdfIndirectObject );_cfcbb {return _fbbgc .seekByName (_bgbad .PdfObject ,_fcaea ,_eagea );};if _fdgaa ,_bacdg :=_gbbb .(*_bd .PdfObjectStream );_bacdg {return _fbbgc .seekByName (_fdgaa .PdfObjectDictionary ,_fcaea ,_eagea );};if _ggcbf ,_feafb :=_gbbb .(*_bd .PdfObjectDictionary );_feafb {_aag .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_dbbef :=range _ggcbf .Keys (){_fageg :=_ggcbf .Get (_dbbef );if string (_dbbef )==_eagea {_defad =append (_defad ,_fageg );};for _ ,_daaga :=range _fcaea {if string (_dbbef )==_daaga {_aag .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_daaga );_cbeec ,_deecd :=_fbbgc .seekByName (_fageg ,_fcaea ,_eagea );if _deecd !=nil {return _defad ,_deecd ;};for _ ,_afedf :=range _cbeec {_defad =append (_defad ,_afedf );};break ;};};};return _defad ,nil ;};return _defad ,nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_dadb :=&PdfColorspaceSpecialSeparation {};return _dadb ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_gaabf *PdfFieldButton )SetType (btype ButtonType ){_cccac :=uint32 (0);if _gaabf .Ff !=nil {_cccac =uint32 (*_gaabf .Ff );};switch btype {case ButtonTypePush :_cccac |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_cccac |=FieldFlagRadio .Mask ();};_gaabf .Ff =_bd .MakeInteger (int64 (_cccac ));};

// B returns the value of the B component of the color.
func (_gbad *PdfColorLab )B ()float64 {return float64 (_gbad [2])};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_dggdd *XObjectImage )SetFilter (encoder _bd .StreamEncoder )error {_beab :=_dggdd .Stream ;_dfcfg ,_bffdc :=_dggdd .Filter .DecodeBytes (_beab );if _bffdc !=nil {return _bffdc ;};_dggdd .Filter =encoder ;encoder .UpdateParams (_dggdd .getParamsDict ());_beab ,_bffdc =encoder .EncodeBytes (_dfcfg );if _bffdc !=nil {return _bffdc ;};_dggdd .Stream =_beab ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ddgd *PdfAnnotation3D )ToPdfObject ()_bd .PdfObject {_ddgd .PdfAnnotation .ToPdfObject ();_abf :=_ddgd ._ega ;_dba :=_abf .PdfObject .(*_bd .PdfObjectDictionary );_dba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0033\u0044"));_dba .SetIfNotNil ("\u0033\u0044\u0044",_ddgd .T3DD );_dba .SetIfNotNil ("\u0033\u0044\u0056",_ddgd .T3DV );_dba .SetIfNotNil ("\u0033\u0044\u0041",_ddgd .T3DA );_dba .SetIfNotNil ("\u0033\u0044\u0049",_ddgd .T3DI );_dba .SetIfNotNil ("\u0033\u0044\u0042",_ddgd .T3DB );return _abf ;};func (_fceg *PdfReader )newPdfAnnotationProjectionFromDict (_gaac *_bd .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_cffa :=&PdfAnnotationProjection {};_efc ,_gbd :=_fceg .newPdfAnnotationMarkupFromDict (_gaac );if _gbd !=nil {return nil ,_gbd ;};_cffa .PdfAnnotationMarkup =_efc ;return _cffa ,nil ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_dfdf *Image )GetSamples ()[]uint32 {_feab :=_caa .ResampleBytes (_dfdf .Data ,int (_dfdf .BitsPerComponent ));if _dfdf .BitsPerComponent < 8{_feab =_dfdf .samplesTrimPadding (_feab );};_dcbda :=int (_dfdf .Width )*int (_dfdf .Height )*_dfdf .ColorComponents ;if len (_feab )< _dcbda {_aag .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_feab ),_dcbda );return _feab ;}else if len (_feab )> _dcbda {_aag .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_feab ),_dcbda );_feab =_feab [:_dcbda ];};return _feab ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _eb .ReadSeeker )(*PdfFont ,error ){_ffgbe ,_ffeb :=_cc .ReadAll (r );if _ffeb !=nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ffeb );return nil ,_ffeb ;};_bgedf ,_ffeb :=_gb .TtfParse (_af .NewReader (_ffgbe ));if _ffeb !=nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_ffeb );return nil ,_ffeb ;};_deebb :=&pdfCIDFontType2 {fontCommon :fontCommon {_ddad :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_bd .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_gcaa :=make ([]rune ,0,len (_bgedf .Chars ));for _fbag :=range _bgedf .Chars {_gcaa =append (_gcaa ,rune (_fbag ));};_fg .Slice (_gcaa ,func (_fbfg ,_cagcb int )bool {return _gcaa [_fbfg ]< _gcaa [_cagcb ]});_agaf :=1000.0/float64 (_bgedf .UnitsPerEm );if len (_bgedf .Widths )<=0{return nil ,_ca .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_cdcbe :=_agaf *float64 (_bgedf .Widths [0]);_dabg :=make (map[rune ]int );for _ ,_fabed :=range _gcaa {_gdfc :=_bgedf .Chars [_fabed ];_ecbe :=_agaf *float64 (_bgedf .Widths [_gdfc ]);_dabg [_fabed ]=int (_ecbe );};_deebb ._cgece =_dabg ;_deebb .DW =_bd .MakeInteger (int64 (_cdcbe ));_aadg :=_abadg (_gcaa ,_dabg ,_bgedf .Chars );_deebb .W =_bd .MakeIndirectObject (_aadg );_gfcgg :=_bd .MakeDict ();_gfcgg .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_bd .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_gfcgg .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_bd .MakeString ("\u0041\u0064\u006fb\u0065"));_gfcgg .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_bd .MakeInteger (0));_deebb .CIDSystemInfo =_gfcgg ;_adeg :=&PdfFontDescriptor {FontName :_bd .MakeName (_bgedf .PostScriptName ),Ascent :_bd .MakeFloat (_agaf *float64 (_bgedf .TypoAscender )),Descent :_bd .MakeFloat (_agaf *float64 (_bgedf .TypoDescender )),CapHeight :_bd .MakeFloat (_agaf *float64 (_bgedf .CapHeight )),FontBBox :_bd .MakeArrayFromFloats ([]float64 {_agaf *float64 (_bgedf .Xmin ),_agaf *float64 (_bgedf .Ymin ),_agaf *float64 (_bgedf .Xmax ),_agaf *float64 (_bgedf .Ymax )}),ItalicAngle :_bd .MakeFloat (float64 (_bgedf .ItalicAngle )),MissingWidth :_bd .MakeFloat (_agaf *float64 (_bgedf .Widths [0]))};_acaa ,_ffeb :=_bd .MakeStream (_ffgbe ,_bd .NewFlateEncoder ());if _ffeb !=nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_ffeb );return nil ,_ffeb ;};_acaa .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bd .MakeInteger (int64 (len (_ffgbe ))));_adeg .FontFile2 =_acaa ;if _bgedf .Bold {_adeg .StemV =_bd .MakeInteger (120);}else {_adeg .StemV =_bd .MakeInteger (70);};_fgafc :=_eedgb ;if _bgedf .IsFixedPitch {_fgafc |=_ggaced ;};if _bgedf .ItalicAngle !=0{_fgafc |=_dgge ;};_adeg .Flags =_bd .MakeInteger (int64 (_fgafc ));_deebb ._gfceb =_bgedf .PostScriptName ;_deebb ._dcgda =_adeg ;_dege :=pdfFontType0 {fontCommon :fontCommon {_ddad :"\u0054\u0079\u0070e\u0030",_gfceb :_bgedf .PostScriptName },DescendantFont :&PdfFont {_ddgba :_deebb },Encoding :_bd .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_ebdd :_bgedf .NewEncoder ()};if len (_bgedf .Chars )> 0{_dceba :=make (map[_fgg .CharCode ]rune ,len (_bgedf .Chars ));for _fead ,_dgccb :=range _bgedf .Chars {_fbfc :=_fgg .CharCode (_dgccb );if _ebcb ,_bfdaf :=_dceba [_fbfc ];!_bfdaf ||(_bfdaf &&_ebcb > _fead ){_dceba [_fbfc ]=_fead ;};};_dege ._cecd =_fgg .NewToUnicodeCMap (_dceba );};_babg :=PdfFont {_ddgba :&_dege };return &_babg ,nil ;};func _aeff (_fadfeb _bd .PdfObject )(*PdfPattern ,error ){_dgadc :=&PdfPattern {};var _fabc *_bd .PdfObjectDictionary ;if _deaeg ,_gadfd :=_bd .GetIndirect (_fadfeb );_gadfd {_dgadc ._ebbgg =_deaeg ;_dgbbf ,_bcce :=_deaeg .PdfObject .(*_bd .PdfObjectDictionary );if !_bcce {_aag .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_deaeg .PdfObject );return nil ,_bd .ErrTypeError ;};_fabc =_dgbbf ;}else if _gbfd ,_fbgca :=_bd .GetStream (_fadfeb );_fbgca {_dgadc ._ebbgg =_gbfd ;_fabc =_gbfd .PdfObjectDictionary ;}else {_aag .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_fadfeb );return nil ,_bd .ErrTypeError ;};_aafec :=_fabc .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _aafec ==nil {_aag .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");return nil ,ErrRequiredAttributeMissing ;};_ecdfb ,_eacf :=_aafec .(*_bd .PdfObjectInteger );if !_eacf {_aag .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aafec );return nil ,_bd .ErrTypeError ;};if *_ecdfb !=1&&*_ecdfb !=2{_aag .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_ecdfb );return nil ,_bd .ErrRangeError ;};_dgadc .PatternType =int64 (*_ecdfb );switch *_ecdfb {case 1:_dbacfe ,_bbgeb :=_bgaf (_fabc );if _bbgeb !=nil {return nil ,_bbgeb ;};_dbacfe .PdfPattern =_dgadc ;_dgadc ._aaffd =_dbacfe ;return _dgadc ,nil ;case 2:_cggaa ,_cbfdf :=_fcag (_fabc );if _cbfdf !=nil {return nil ,_cbfdf ;};_cggaa .PdfPattern =_dgadc ;_dgadc ._aaffd =_cggaa ;return _dgadc ,nil ;};return nil ,_ca .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};func _ccbe (_cfcbg *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_cfcbg }};func _fdead (_gcacb *_bd .PdfObjectDictionary ,_gbee *fontCommon )(*pdfCIDFontType0 ,error ){if _gbee ._ddad !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_aag .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_gbee );return nil ,_bd .ErrRangeError ;};_agbg :=_ccbe (_gbee );_gabeg ,_bdggg :=_bd .GetDict (_gcacb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_bdggg {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gbee );return nil ,ErrRequiredAttributeMissing ;};_agbg .CIDSystemInfo =_gabeg ;_agbg .DW =_gcacb .Get ("\u0044\u0057");_agbg .W =_gcacb .Get ("\u0057");_agbg .DW2 =_gcacb .Get ("\u0044\u0057\u0032");_agbg .W2 =_gcacb .Get ("\u0057\u0032");_agbg ._ffae =1000.0;if _ebfdf ,_bgbbg :=_bd .GetNumberAsFloat (_agbg .DW );_bgbbg ==nil {_agbg ._ffae =_ebfdf ;};_aabb ,_fbabaa :=_effb (_agbg .W );if _fbabaa !=nil {return nil ,_fbabaa ;};if _aabb ==nil {_aabb =map[_ff .CharCode ]float64 {};};_agbg ._abecd =_aabb ;return _agbg ,nil ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_gfceg :=PdfColorCalRGB {a ,b ,c };return &_gfceg ;};

// Encoder returns the font's text encoder.
func (_gadg pdfCIDFontType0 )Encoder ()_ff .TextEncoder {return _gadg ._dfbgc };func (_gfcg *PdfReader )newPdfAnnotationPopupFromDict (_adc *_bd .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_gcae :=PdfAnnotationPopup {};_gcae .Parent =_adc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_gcae .Open =_adc .Get ("\u004f\u0070\u0065\u006e");return &_gcae ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_dgggb *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dafee :=vals [0];if _dafee < 0.0||_dafee > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gggg :=vals [1];if _gggg < 0.0||_gggg > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_affgb :=vals [2];if _affgb < 0.0||_affgb > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdgb :=NewPdfColorDeviceRGB (_dafee ,_gggg ,_affgb );return _gdgb ,nil ;};func _ffdcf (_eegdf _bd .PdfObject )(string ,error ){_eegdf =_bd .TraceToDirectObject (_eegdf );switch _cfbd :=_eegdf .(type ){case *_bd .PdfObjectString :return _cfbd .Str (),nil ;case *_bd .PdfObjectStream :_aeeg ,_bebeb :=_bd .DecodeStream (_cfbd );if _bebeb !=nil {return "",_bebeb ;};return string (_aeeg ),nil ;};return "",_c .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_eegdf );};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _bd .PdfObject ;ColorSpace _bd .PdfObject ;Pattern _bd .PdfObject ;Shading _bd .PdfObject ;XObject _bd .PdfObject ;Font _bd .PdfObject ;ProcSet _bd .PdfObject ;Properties _bd .PdfObject ;_caddd *_bd .PdfObjectDictionary ;_ffdfb *PdfPageResourcesColorspaces ;};func _adaa (_beggf _bd .PdfObject )(*PdfFunctionType2 ,error ){_ecfd :=&PdfFunctionType2 {};var _dgade *_bd .PdfObjectDictionary ;if _dgdbf ,_bggd :=_beggf .(*_bd .PdfIndirectObject );_bggd {_ccfa ,_bbdg :=_dgdbf .PdfObject .(*_bd .PdfObjectDictionary );if !_bbdg {return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecfd ._dbgab =_dgdbf ;_dgade =_ccfa ;}else if _deeg ,_eeae :=_beggf .(*_bd .PdfObjectDictionary );_eeae {_dgade =_deeg ;}else {return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aag .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_dgade .String ());_edcgeb ,_adac :=_bd .TraceToDirectObject (_dgade .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bd .PdfObjectArray );if !_adac {_aag .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _edcgeb .Len ()< 0||_edcgeb .Len ()%2!=0{_aag .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_ca .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_faca ,_baeed :=_edcgeb .ToFloat64Array ();if _baeed !=nil {return nil ,_baeed ;};_ecfd .Domain =_faca ;_edcgeb ,_adac =_bd .TraceToDirectObject (_dgade .Get ("\u0052\u0061\u006eg\u0065")).(*_bd .PdfObjectArray );if _adac {if _edcgeb .Len ()< 0||_edcgeb .Len ()%2!=0{return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ecac ,_cagac :=_edcgeb .ToFloat64Array ();if _cagac !=nil {return nil ,_cagac ;};_ecfd .Range =_ecac ;};_edcgeb ,_adac =_bd .TraceToDirectObject (_dgade .Get ("\u0043\u0030")).(*_bd .PdfObjectArray );if _adac {_bdee ,_baeedc :=_edcgeb .ToFloat64Array ();if _baeedc !=nil {return nil ,_baeedc ;};_ecfd .C0 =_bdee ;};_edcgeb ,_adac =_bd .TraceToDirectObject (_dgade .Get ("\u0043\u0031")).(*_bd .PdfObjectArray );if _adac {_bceb ,_dade :=_edcgeb .ToFloat64Array ();if _dade !=nil {return nil ,_dade ;};_ecfd .C1 =_bceb ;};if len (_ecfd .C0 )!=len (_ecfd .C1 ){_aag .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_bd .ErrRangeError ;};N ,_baeed :=_bd .GetNumberAsFloat (_bd .TraceToDirectObject (_dgade .Get ("\u004e")));if _baeed !=nil {_aag .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_dgade .String ());return nil ,_baeed ;};_ecfd .N =N ;return _ecfd ,nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_afef :=NewPdfOutline ();_afef ._dcaag =&_afef ;return _afef };

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_deda *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _bgdea []float64 ;for _cdec :=0;_cdec < _deda .GetNumComponents ();_cdec ++{_bgdea =append (_bgdea ,0.0,1.0);};return _bgdea ;};

// SetName sets the `Name` field of the signature.
func (_dbbdd *PdfSignature )SetName (name string ){_dbbdd .Name =_bd .MakeString (name )};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_ggbe *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _ggbe .Range };func _cbaed ()string {return _aag .Version };

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_bd .PdfObjectString ;Q *_bd .PdfObjectInteger ;DS *_bd .PdfObjectString ;RV _bd .PdfObject ;MaxLen *_bd .PdfObjectInteger ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_dffc *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// SetContentStream sets the pattern cell's content stream.
func (_ccae *PdfTilingPattern )SetContentStream (content []byte ,encoder _bd .StreamEncoder )error {_bdeec ,_faabe :=_ccae ._ebbgg .(*_bd .PdfObjectStream );if !_faabe {_aag .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ccae ._ebbgg );return _bd .ErrTypeError ;};if encoder ==nil {encoder =_bd .NewRawEncoder ();};_fagdd :=_bdeec .PdfObjectDictionary ;_fgbad :=encoder .MakeStreamDict ();_fagdd .Merge (_fgbad );_cgbeg ,_daebd :=encoder .EncodeBytes (content );if _daebd !=nil {return _daebd ;};_fagdd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bd .MakeInteger (int64 (len (_cgbeg ))));_bdeec .Stream =[]byte (_cgbeg );return nil ;};var (ErrRequiredAttributeMissing =_ca .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_ca .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_fadf =_ca .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_ca .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_ca .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_c .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0076\u0029",_bd .ErrNotSupported );ErrType1CFontNotSupported =_c .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0076\u0029",_bd .ErrNotSupported );ErrType3FontNotSupported =_c .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0076\u0029",_bd .ErrNotSupported );ErrTTCmapNotSupported =_c .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0076\u0029",_bd .ErrNotSupported ););

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_aceagg *PdfPattern )GetContainingPdfObject ()_bd .PdfObject {return _aceagg ._ebbgg };

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_ceeac *PdfPageResources )SetXObjectFormByName (keyName _bd .PdfObjectName ,xform *XObjectForm )error {_eadeg :=xform .ToPdfObject ().(*_bd .PdfObjectStream );_cecbe :=_ceeac .SetXObjectByName (keyName ,_eadeg );return _cecbe ;};func _gagcd ()_b .Time {return _egccf };

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_cbag *Image )SetSamples (samples []uint32 ){if _cbag .BitsPerComponent < 8{samples =_cbag .samplesAddPadding (samples );};_gcce :=_caa .ResampleUint32 (samples ,int (_cbag .BitsPerComponent ),8);_ecaga :=make ([]byte ,len (_gcce ));for _aacae ,_acbba :=range _gcce {_ecaga [_aacae ]=byte (_acbba );};_cbag .Data =_ecaga ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_eefg *PdfAppender )Write (w _eb .Writer )error {if _eefg ._cded {return _ca .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");};_fggab :=NewPdfWriter ();_dbdde ,_gbfc :=_bd .GetDict (_fggab ._eegaf );if !_gbfc {return _ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_egfbd ,_gbfc :=_dbdde .Get ("\u004b\u0069\u0064\u0073").(*_bd .PdfObjectArray );if !_gbfc {return _ca .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_gffd ,_gbfc :=_dbdde .Get ("\u0043\u006f\u0075n\u0074").(*_bd .PdfObjectInteger );if !_gbfc {return _ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};_bdaa :=_eefg ._eege ._efgga ;_bae :=_bdaa .GetTrailer ();if _bae ==nil {return _ca .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_ffbe ,_gbfc :=_bd .GetIndirect (_bae .Get ("\u0052\u006f\u006f\u0074"));if !_gbfc {return _ca .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_gbcbc ,_gbfc :=_bd .GetDict (_ffbe );if !_gbfc {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_ffbe ,*_bae );return _ca .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_befg :=range _gbcbc .Keys (){if _fggab ._ccbfg .Get (_befg )==nil {_gdgd :=_gbcbc .Get (_befg );_fggab ._ccbfg .Set (_befg ,_gdgd );};};if _eefg ._fdcd !=nil {_fggab ._ccbfg .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_eefg ._fdcd .ToPdfObject ());_eefg .updateObjectsDeep (_eefg ._fdcd .ToPdfObject (),nil );};_eefg .addNewObject (_fggab ._fagb );_eefg .addNewObject (_fggab ._deade );_eaae :=false ;if len (_eefg ._eege .PageList )!=len (_eefg ._cgaa ){_eaae =true ;}else {for _cegc :=range _eefg ._eege .PageList {switch {case _eefg ._cgaa [_cegc ]==_eefg ._eege .PageList [_cegc ]:case _eefg ._cgaa [_cegc ]==_eefg .Reader .PageList [_cegc ]:default:_eaae =true ;};if _eaae {break ;};};};if _eaae {_eefg .updateObjectsDeep (_fggab ._eegaf ,nil );}else {_eefg ._ebdb [_fggab ._eegaf ]=struct{}{};};_fggab ._eegaf .ObjectNumber =_eefg .Reader ._cbca .ObjectNumber ;_eefg ._aab [_fggab ._eegaf ]=_eefg .Reader ._cbca .ObjectNumber ;_aggd :=[]_bd .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_gcdc :=range _eefg ._cgaa {_gecf :=_gcdc .ToPdfObject ();*_gffd =*_gffd +1;if _ggcc ,_ddea :=_gecf .(*_bd .PdfIndirectObject );_ddea &&_ggcc .GetParser ()==_eefg ._eege ._efgga {_egfbd .Append (&_ggcc .PdfObjectReference );continue ;};if _gdgdd ,_eada :=_bd .GetDict (_gecf );_eada {_ecafd ,_bcdd :=_gdgdd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bd .PdfIndirectObject );for _bcdd {_aag .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ecafd );_ddeg ,_cdf :=_ecafd .PdfObject .(*_bd .PdfObjectDictionary );if !_cdf {return _ca .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_dcbe :=range _aggd {_aag .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_dcbe );if _gdgdd .Get (_dcbe )!=nil {_aag .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _cegf :=_ddeg .Get (_dcbe );_cegf !=nil {_aag .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_dcbe );_gdgdd .Set (_dcbe ,_cegf );};};_ecafd ,_bcdd =_ddeg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bd .PdfIndirectObject );_aag .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ddeg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_gdgdd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fggab ._eegaf );};_eefg .updateObjectsDeep (_gecf ,nil );_egfbd .Append (_gecf );};if _ ,_bgddg :=_eefg ._ccfcf .Seek (0,_eb .SeekStart );_bgddg !=nil {return _bgddg ;};_cbadb :=make (map[SignatureHandler ]_eb .Writer );_eaebbg :=_bd .MakeArray ();for _ ,_egad :=range _eefg ._bfad {if _cbeb ,_eece :=_bd .GetIndirect (_egad );_eece {if _becf ,_bbbef :=_cbeb .PdfObject .(*pdfSignDictionary );_bbbef {_ccgfa :=*_becf ._gfga ;var _fgge error ;_cbadb [_ccgfa ],_fgge =_ccgfa .NewDigest (_becf ._gacb );if _fgge !=nil {return _fgge ;};_eaebbg .Append (_bd .MakeInteger (0xfffff),_bd .MakeInteger (0xfffff));};};};if _eaebbg .Len ()> 0{_eaebbg .Append (_bd .MakeInteger (0xfffff),_bd .MakeInteger (0xfffff));};for _ ,_bgcg :=range _eefg ._bfad {if _dfca ,_dbcc :=_bd .GetIndirect (_bgcg );_dbcc {if _afbf ,_fcg :=_dfca .PdfObject .(*pdfSignDictionary );_fcg {_afbf .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_eaebbg );};};};_bfff :=len (_cbadb )> 0;var _ceegf _eb .Reader =_eefg ._ccfcf ;if _bfff {_egfdf :=make ([]_eb .Writer ,0,len (_cbadb ));for _ ,_dad :=range _cbadb {_egfdf =append (_egfdf ,_dad );};_ceegf =_eb .TeeReader (_eefg ._ccfcf ,_eb .MultiWriter (_egfdf ...));};_aeagg ,_bebf :=_eb .Copy (w ,_ceegf );if _bebf !=nil {return _bebf ;};if len (_eefg ._bfad )==0{return nil ;};_fggab ._cecea =_aeagg ;_fggab .ObjNumOffset =_eefg ._dbec ;_fggab ._dfbe =true ;_fggab ._ebgba =_eefg ._bbab ;_fggab ._gafbd =_eefg ._dcfff ;_fggab ._bfcf =_eefg ._ccb ;_fggab ._fbfbg =_eefg ._eege .PdfVersion ().Minor ;_fggab ._abdbb =_eefg ._aab ;_abgg :=_eefg ._cadda .GetXrefType ();if _abgg !=nil {_adbcc :=*_abgg ==_bd .XrefTypeObjectStream ;_fggab ._gdace =&_adbcc ;};_fggab ._egeab =map[_bd .PdfObject ]struct{}{};_fggab ._fceb =[]_bd .PdfObject {};for _ ,_dbfe :=range _eefg ._bfad {if _ ,_abfd :=_eefg ._ebdb [_dbfe ];_abfd {continue ;};_fggab .addObject (_dbfe );};_cced :=w ;if _bfff {_cced =_af .NewBuffer (nil );};if _faec :=_fggab .Write (_cced );_faec !=nil {return _faec ;};if _bfff {_baed :=_cced .(*_af .Buffer ).Bytes ();_bada :=_bd .MakeArray ();var _ffcc []*pdfSignDictionary ;var _agcb int64 ;for _ ,_fcd :=range _fggab ._fceb {if _ada ,_cadg :=_bd .GetIndirect (_fcd );_cadg {if _aabg ,_fgeg :=_ada .PdfObject .(*pdfSignDictionary );_fgeg {_ffcc =append (_ffcc ,_aabg );_bbabb :=_aabg ._ffcaa +int64 (_aabg ._bebfa );_bada .Append (_bd .MakeInteger (_agcb ),_bd .MakeInteger (_bbabb -_agcb ));_agcb =_aabg ._ffcaa +int64 (_aabg ._bacc );};};};_bada .Append (_bd .MakeInteger (_agcb ),_bd .MakeInteger (_aeagg +int64 (len (_baed ))-_agcb ));_gfgf :=[]byte (_bada .WriteString ());for _ ,_ggeb :=range _ffcc {_ebbb :=int (_ggeb ._ffcaa -_aeagg );for _ccbb :=_ggeb ._dfbdc ;_ccbb < _ggeb ._ffebag ;_ccbb ++{_baed [_ebbb +_ccbb ]=' ';};_fgbdd :=_baed [_ebbb +_ggeb ._dfbdc :_ebbb +_ggeb ._ffebag ];copy (_fgbdd ,_gfgf );};var _fddad int ;for _ ,_bacgb :=range _ffcc {_deaf :=int (_bacgb ._ffcaa -_aeagg );_adfe :=_baed [_fddad :_deaf +_bacgb ._bebfa ];_aca :=*_bacgb ._gfga ;_cbadb [_aca ].Write (_adfe );_fddad =_deaf +_bacgb ._bacc ;};for _ ,_gdb :=range _ffcc {_faaac :=_baed [_fddad :];_gecd :=*_gdb ._gfga ;_cbadb [_gecd ].Write (_faaac );};for _ ,_ebde :=range _ffcc {_dabe :=int (_ebde ._ffcaa -_aeagg );_ggafc :=*_ebde ._gfga ;_adgfd :=_cbadb [_ggafc ];if _egccc :=_ggafc .Sign (_ebde ._gacb ,_adgfd );_egccc !=nil {return _egccc ;};_ebde ._gacb .ByteRange =_bada ;_ccdd :=[]byte (_ebde ._gacb .Contents .WriteString ());for _bbc :=_ebde ._dfbdc ;_bbc < _ebde ._ffebag ;_bbc ++{_baed [_dabe +_bbc ]=' ';};for _ecbb :=_ebde ._bebfa ;_ecbb < _ebde ._bacc ;_ecbb ++{_baed [_dabe +_ecbb ]=' ';};_aadd :=_baed [_dabe +_ebde ._dfbdc :_dabe +_ebde ._ffebag ];copy (_aadd ,_gfgf );_aadd =_baed [_dabe +_ebde ._bebfa :_dabe +_ebde ._bacc ];copy (_aadd ,_ccdd );};_eadd :=_af .NewBuffer (_baed );_ ,_bebf =_eb .Copy (w ,_eadd );if _bebf !=nil {return _bebf ;};};_eefg ._cded =true ;return nil ;};func _beec ()string {return _ebfcc };

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_eeda :=&PdfColorspaceLab {};_eeda .BlackPoint =[]float64 {0.0,0.0,0.0};_eeda .Range =[]float64 {-100,100,-100,100};return _eeda ;};

// Initialize initializes the PdfSignature.
func (_cgag *PdfSignature )Initialize ()error {if _cgag .Handler ==nil {return _ca .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};return _cgag .Handler .InitSignature (_cgag );};

// Evaluate runs the function on the passed in slice and returns the results.
func (_deee *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_aag .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return nil ,_ca .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_beef *_bd .PdfObjectDictionary ;_ccgg *_bd .PdfIndirectObject ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_cbbef :=&PdfPageResourcesColorspaces {};_cbbef .Names =[]string {};_cbbef .Colorspaces =map[string ]PdfColorspace {};_cbbef ._cdeef =&_bd .PdfIndirectObject {};return _cbbef ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// ToPdfObject converts the font to a PDF representation.
func (_baeea *pdfFontType0 )ToPdfObject ()_bd .PdfObject {if _baeea ._ebce ==nil {_baeea ._ebce =&_bd .PdfIndirectObject {};};_fdbf :=_baeea .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_baeea ._ebce .PdfObject =_fdbf ;if _baeea .Encoding !=nil {_fdbf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_baeea .Encoding );}else if _baeea ._ebdd !=nil {_fdbf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_baeea ._ebdd .ToPdfObject ());};if _baeea .DescendantFont !=nil {_fdbf .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_bd .MakeArray (_baeea .DescendantFont .ToPdfObject ()));};return _baeea ._ebce ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_gff :=NewPdfAnnotation ();_acd :=&PdfAnnotationStrikeOut {};_acd .PdfAnnotation =_gff ;_acd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gff .SetContext (_acd );return _acd ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_bgcgb *_bd .PdfIndirectObject ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _bd .PdfObject ;NewWindow _bd .PdfObject ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_gdaf :_bd .MakeIndirectObject (_bd .MakeDict ())};};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_bd .PdfObjectStream ;Data []byte ;_edac *_bd .PdfIndirectObject ;_dcgf *_bd .PdfObjectStream ;};var _ebfcc ="";

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_aeb :=NewPdfAnnotation ();_fda :=&PdfAnnotation3D {};_fda .PdfAnnotation =_aeb ;_aeb .SetContext (_fda );return _fda ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_cebec :=NewPdfAnnotation ();_fga :=&PdfAnnotationRedact {};_fga .PdfAnnotation =_cebec ;_fga .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cebec .SetContext (_fga );return _fga ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_fgee *PdfField )GetContainingPdfObject ()_bd .PdfObject {return _fgee ._gcacg };func (_bcbce *Image )samplesAddPadding (_ddcbb []uint32 )[]uint32 {_deedf :=_adg .BytesPerLine (int (_bcbce .Width ),int (_bcbce .BitsPerComponent ),_bcbce .ColorComponents )*(8/int (_bcbce .BitsPerComponent ));_bddbc :=_deedf *int (_bcbce .Height );if len (_ddcbb )==_bddbc {return _ddcbb ;};_abee :=make ([]uint32 ,_bddbc );_gbcfd :=int (_bcbce .Width )*_bcbce .ColorComponents ;for _dbebd :=0;_dbebd < int (_bcbce .Height );_dbebd ++{_cgdebg :=_dbebd *int (_bcbce .Width );_dfeb :=_dbebd *_deedf ;for _dfcc :=0;_dfcc < _gbcfd ;_dfcc ++{_abee [_dfeb +_dfcc ]=_ddcbb [_cgdebg +_dfcc ];};};return _abee ;};func (_gef *PdfReader )newPdfActionThreadFromDict (_bcf *_bd .PdfObjectDictionary )(*PdfActionThread ,error ){_fefc ,_fbd :=_gfgg (_bcf .Get ("\u0046"));if _fbd !=nil {return nil ,_fbd ;};return &PdfActionThread {D :_bcf .Get ("\u0044"),B :_bcf .Get ("\u0042"),F :_fefc },nil ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_ggceg *PdfWriter )SetPageLabels (pageLabels _bd .PdfObject )error {if pageLabels ==nil {return nil ;};_aag .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");_ggceg ._ccbfg .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _ggceg .addObjects (pageLabels );};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_fgfg *PdfColorspaceDeviceN )GetNumComponents ()int {return _fgfg .ColorantNames .Len ()};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_abcd *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _abcd .fill (provider ,appGen );};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_caca *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_fab *PdfReader )newPdfActionSetOCGStateFromDict (_edd *_bd .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_edd .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_edd .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;};

// IsShading specifies if the pattern is a shading pattern.
func (_ccea *PdfPattern )IsShading ()bool {return _ccea .PatternType ==2};func (_gdda *PdfReader )newPdfActionLaunchFromDict (_gaa *_bd .PdfObjectDictionary )(*PdfActionLaunch ,error ){_cgb ,_dbbb :=_gfgg (_gaa .Get ("\u0046"));if _dbbb !=nil {return nil ,_dbbb ;};return &PdfActionLaunch {Win :_gaa .Get ("\u0057\u0069\u006e"),Mac :_gaa .Get ("\u004d\u0061\u0063"),Unix :_gaa .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_gaa .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_cgb },nil ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_dadd :=&PdfPageResources {};_dadd ._caddd =_bd .MakeDict ();return _dadd ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_abfdg *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eddc *PdfShading )ToPdfObject ()_bd .PdfObject {_beda :=_eddc ._ecebg ;_dgdcd ,_afdg :=_eddc .getShadingDict ();if _afdg !=nil {_aag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _eddc .ShadingType !=nil {_dgdcd .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_eddc .ShadingType );};if _eddc .ColorSpace !=nil {_dgdcd .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_eddc .ColorSpace .ToPdfObject ());};if _eddc .Background !=nil {_dgdcd .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_eddc .Background );};if _eddc .BBox !=nil {_dgdcd .Set ("\u0042\u0042\u006f\u0078",_eddc .BBox .ToPdfObject ());};if _eddc .AntiAlias !=nil {_dgdcd .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_eddc .AntiAlias );};return _beda ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_gcb :=NewPdfAction ();_ecb :=&PdfActionResetForm {};_ecb .PdfAction =_gcb ;_gcb .SetContext (_ecb );return _ecb ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _bd .PdfObject ;Flags _bd .PdfObject ;};

// A returns the value of the A component of the color.
func (_efbd *PdfColorCalRGB )A ()float64 {return float64 (_efbd [0])};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_fcdde *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _cbfcf []*PdfField ;_cbfad :=map[*_bd .PdfIndirectObject ]struct{}{};for _ ,_gebcgc :=range _fcdde .PageList {_ccdae ,_faafe :=_gebcgc .GetAnnotations ();if _faafe !=nil {return _faafe ;};for _ ,_egdb :=range _ccdae {var _eeeae *PdfField ;switch _aabgd :=_egdb .GetContext ().(type ){case *PdfAnnotationWidget :if _aabgd ._deca !=nil {_eeeae =_aabgd ._deca ;break ;};if _ecaa ,_bbgcc :=_bd .GetIndirect (_aabgd .Parent );_bbgcc {_eeeae ,_faafe =_fcdde .newPdfFieldFromIndirectObject (_ecaa ,nil );if _faafe ==nil {break ;};_aag .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ecaa ,_faafe );};if _aabgd ._ega !=nil {_eeeae ,_faafe =_fcdde .newPdfFieldFromIndirectObject (_aabgd ._ega ,nil );if _faafe ==nil {break ;};_aag .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_aabgd ._ega ,_faafe );};};if _eeeae ==nil {continue ;};if _ ,_aagb :=_cbfad [_eeeae ._gcacg ];_aagb {continue ;};_cbfad [_eeeae ._gcacg ]=struct{}{};_cbfcf =append (_cbfcf ,_eeeae );};};if len (_cbfcf )==0{return nil ;};if _fcdde .AcroForm ==nil {_fcdde .AcroForm =NewPdfAcroForm ();};_fcdde .AcroForm .Fields =&_cbfcf ;return nil ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_dbafa *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_dbafa .GetNumComponents (){return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcacc ,_geda :=_dbafa .TintTransform .Evaluate (vals );if _geda !=nil {return nil ,_geda ;};_ffegc ,_geda :=_dbafa .AlternateSpace .ColorFromFloats (_dcacc );if _geda !=nil {return nil ,_geda ;};return _ffegc ,nil ;};func (_fcac *PdfFont )baseFields ()*fontCommon {if _fcac ._ddgba ==nil {_aag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");return nil ;};return _fcac ._ddgba .baseFields ();};func (_fced *PdfReader )loadAction (_edaa _bd .PdfObject )(*PdfAction ,error ){if _dgag ,_agb :=_bd .GetIndirect (_edaa );_agb {_abd ,_ceeg :=_fced .newPdfActionFromIndirectObject (_dgag );if _ceeg !=nil {return nil ,_ceeg ;};return _abd ,nil ;}else if !_bd .IsNullObject (_edaa ){return nil ,_ca .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};return nil ,nil ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_gccdac *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _gccdac .RunesToCharcodeBytes ([]rune (str ));};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_efbf :=&PdfColorspaceCalRGB {};_efbf .BlackPoint =[]float64 {0.0,0.0,0.0};_efbf .Gamma =[]float64 {1.0,1.0,1.0};_efbf .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _efbf ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_fdgbe *pdfCIDFontType0 )ToPdfObject ()_bd .PdfObject {return _bd .MakeNull ()};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_agcg *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _agcg ._fgfgg !=nil {return _agcg ._fgfgg ,nil ;};if _agcg .Annots ==nil {_agcg ._fgfgg =[]*PdfAnnotation {};return nil ,nil ;};if _agcg ._ccccb ==nil {_agcg ._fgfgg =[]*PdfAnnotation {};return nil ,nil ;};_abca ,_fadb :=_agcg ._ccccb .loadAnnotations (_agcg .Annots );if _fadb !=nil {return nil ,_fadb ;};if _abca ==nil {_agcg ._fgfgg =[]*PdfAnnotation {};};_agcg ._fgfgg =_abca ;return _agcg ._fgfgg ,nil ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_egcag :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_egcag ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_dbbdb *PdfFont )CharcodesToUnicode (charcodes []_ff .CharCode )[]rune {_eabbe ,_ ,_ :=_dbbdb .CharcodesToUnicodeWithStats (charcodes );return _eabbe ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_ddcee *PdfPattern )GetContext ()PdfModel {return _ddcee ._aaffd };

// Add appends a top level outline item to the outline.
func (_bfdafb *Outline )Add (item *OutlineItem ){_bfdafb .Entries =append (_bfdafb .Entries ,item )};

// GetContainingPdfObject implements interface PdfModel.
func (_afcd *PdfAction )GetContainingPdfObject ()_bd .PdfObject {return _afcd ._ccf };

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bd .PdfObject ;LE _bd .PdfObject ;BS _bd .PdfObject ;IC _bd .PdfObject ;BE _bd .PdfObject ;IT _bd .PdfObject ;Measure _bd .PdfObject ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_cadb *Image )ColorAt (x ,y int )(_ec .Color ,error ){_bdbda :=_adg .BytesPerLine (int (_cadb .Width ),int (_cadb .BitsPerComponent ),_cadb .ColorComponents );switch _cadb .ColorComponents {case 1:return _adg .ColorAtGrayscale (x ,y ,int (_cadb .BitsPerComponent ),_bdbda ,_cadb .Data ,_cadb ._fbadbga );case 3:return _adg .ColorAtNRGBA (x ,y ,int (_cadb .Width ),_bdbda ,int (_cadb .BitsPerComponent ),_cadb .Data ,_cadb ._dcbb ,_cadb ._fbadbga );case 4:return _adg .ColorAtCMYK (x ,y ,int (_cadb .Width ),_cadb .Data ,_cadb ._fbadbga );};_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cadb .ColorComponents ,_cadb .BitsPerComponent );return nil ,_ca .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_dfda *PdfAcroForm )GetContainingPdfObject ()_bd .PdfObject {return _dfda ._gdaf };func _acgc (_fbfe _bd .PdfObject )(*fontFile ,error ){_aag .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_fbfe );_aeeed :=&fontFile {};_fbfe =_bd .TraceToDirectObject (_fbfe );_bbdae ,_eccg :=_fbfe .(*_bd .PdfObjectStream );if !_eccg {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_fbfe );return nil ,_bd .ErrTypeError ;};_gcef :=_bbdae .PdfObjectDictionary ;_gcff ,_gebge :=_bd .DecodeStream (_bbdae );if _gebge !=nil {return nil ,_gebge ;};_abfe ,_eccg :=_bd .GetNameVal (_gcef .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_eccg {_aeeed ._edce =_abfe ;if _abfe =="\u0054\u0079\u0070\u0065\u0031\u0043"{_aag .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");return nil ,ErrType1CFontNotSupported ;};};_afecg ,_ :=_bd .GetIntVal (_gcef .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_ddcdg ,_ :=_bd .GetIntVal (_gcef .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _afecg > len (_gcff ){_afecg =len (_gcff );};if _afecg +_ddcdg > len (_gcff ){_ddcdg =len (_gcff )-_afecg ;};_dfgae :=_gcff [:_afecg ];var _gffgda []byte ;if _ddcdg > 0{_gffgda =_gcff [_afecg :_afecg +_ddcdg ];};if _afecg > 0&&_ddcdg > 0{_abadf :=_aeeed .loadFromSegments (_dfgae ,_gffgda );if _abadf !=nil {return nil ,_abadf ;};};return _aeeed ,nil ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;func (_cdgdf *pdfFontType0 )subsetRegistered ()error {_agab ,_becd :=_cdgdf .DescendantFont ._ddgba .(*pdfCIDFontType2 );if !_becd {_aag .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_cdgdf .DescendantFont );return nil ;};if _agab ==nil {return nil ;};if _agab ._dcgda ==nil {_aag .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _cdgdf ._ebdd ==nil {_aag .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");return nil ;};_gfddc ,_becd :=_bd .GetStream (_agab ._dcgda .FontFile2 );if !_becd {_aag .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");return _ca .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bfbgaf ,_eged :=_bd .DecodeStream (_gfddc );if _eged !=nil {_aag .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_eged );return _eged ;};_aaad ,_eged :=_cad .Parse (_af .NewReader (_bfbgaf ));if _eged !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_gfddc .Stream ));return _eged ;};var _abaa []rune ;var _fdbec *_cad .Font ;switch _gbce :=_cdgdf ._ebdd .(type ){case *_ff .TrueTypeFontEncoder :_abaa =_gbce .RegisteredRunes ();_fdbec ,_eged =_aaad .SubsetKeepRunes (_abaa );if _eged !=nil {_aag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eged );return _eged ;};_gbce .SubsetRegistered ();case *_ff .IdentityEncoder :_abaa =_gbce .RegisteredRunes ();_fgbf :=make ([]_cad .GlyphIndex ,len (_abaa ));for _cfga ,_egdc :=range _abaa {_fgbf [_cfga ]=_cad .GlyphIndex (_egdc );};_fdbec ,_eged =_aaad .SubsetKeepIndices (_fgbf );if _eged !=nil {_aag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eged );return _eged ;};case _ff .SimpleEncoder :_cfdc :=_gbce .Charcodes ();for _ ,_dbga :=range _cfdc {_acab ,_dadc :=_gbce .CharcodeToRune (_dbga );if !_dadc {_aag .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_dbga );continue ;};_abaa =append (_abaa ,_acab );};default:return _c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_cdgdf ._ebdd );};var _adbg _af .Buffer ;_eged =_fdbec .Write (&_adbg );if _eged !=nil {_aag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eged );return _eged ;};if _cdgdf ._cecd !=nil {_gebcg :=make (map[_fgg .CharCode ]rune ,len (_abaa ));for _ ,_gaccb :=range _abaa {_cdad ,_cfgc :=_cdgdf ._ebdd .RuneToCharcode (_gaccb );if !_cfgc {continue ;};_gebcg [_fgg .CharCode (_cdad )]=_gaccb ;};_cdgdf ._cecd =_fgg .NewToUnicodeCMap (_gebcg );};_gfddc ,_eged =_bd .MakeStream (_adbg .Bytes (),_bd .NewFlateEncoder ());if _eged !=nil {_aag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eged );return _eged ;};_gfddc .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bd .MakeInteger (int64 (_adbg .Len ())));if _deffc ,_cgdgdb :=_bd .GetStream (_agab ._dcgda .FontFile2 );_cgdgdb {*_deffc =*_gfddc ;}else {_agab ._dcgda .FontFile2 =_gfddc ;};_egedb :=_gbaba ();if len (_cdgdf ._gfceb )> 0{_cdgdf ._gfceb =_ceea (_cdgdf ._gfceb ,_egedb );};if len (_agab ._gfceb )> 0{_agab ._gfceb =_ceea (_agab ._gfceb ,_egedb );};if len (_cdgdf ._cggc )> 0{_cdgdf ._cggc =_ceea (_cdgdf ._cggc ,_egedb );};if _agab ._dcgda !=nil {_faefg ,_bgae :=_bd .GetName (_agab ._dcgda .FontName );if _bgae &&len (_faefg .String ())> 0{_dbcfb :=_ceea (_faefg .String (),_egedb );_agab ._dcgda .FontName =_bd .MakeName (_dbcfb );};};return nil ;};var _aedg =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_ddcbf *PdfField )SetContext (ctx PdfModel ){_ddcbf ._dac =ctx };

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_bd .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_bd .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_bd .PdfObjectBool ;_ebcbd PdfModel ;_ecebg _bd .PdfObject ;};func (_dgdd *PdfReader )newPdfAnnotationPolygonFromDict (_faaa *_bd .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_cffd :=PdfAnnotationPolygon {};_cbd ,_bgbg :=_dgdd .newPdfAnnotationMarkupFromDict (_faaa );if _bgbg !=nil {return nil ,_bgbg ;};_cffd .PdfAnnotationMarkup =_cbd ;_cffd .Vertices =_faaa .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_cffd .LE =_faaa .Get ("\u004c\u0045");_cffd .BS =_faaa .Get ("\u0042\u0053");_cffd .IC =_faaa .Get ("\u0049\u0043");_cffd .BE =_faaa .Get ("\u0042\u0045");_cffd .IT =_faaa .Get ("\u0049\u0054");_cffd .Measure =_faaa .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_cffd ,nil ;};

// AddWatermarkImage adds a watermark to the page.
func (_cdeec *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_ggeg ,_dcfc :=_cdeec .GetMediaBox ();if _dcfc !=nil {return _dcfc ;};_bgdbc :=_ggeg .Urx -_ggeg .Llx ;_bbfab :=_ggeg .Ury -_ggeg .Lly ;_dbbc :=float64 (*ximg .Width );_gcdg :=(float64 (_bgdbc )-float64 (_dbbc ))/2;if opt .FitToWidth {_dbbc =_bgdbc ;_gcdg =0;};_fggc :=_bbfab ;_dfagb :=float64 (0);if opt .PreserveAspectRatio {_fggc =_dbbc *float64 (*ximg .Height )/float64 (*ximg .Width );_dfagb =(_bbfab -_fggc )/2;};if _cdeec .Resources ==nil {_cdeec .Resources =NewPdfPageResources ();};_fgcga :=0;_cgga :=_bd .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_fgcga ));for _cdeec .Resources .HasXObjectByName (_cgga ){_fgcga ++;_cgga =_bd .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_fgcga ));};_dcfc =_cdeec .AddImageResource (_cgga ,ximg );if _dcfc !=nil {return _dcfc ;};_fgcga =0;_gedfb :=_bd .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_fgcga ));for _cdeec .HasExtGState (_gedfb ){_fgcga ++;_gedfb =_bd .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_fgcga ));};_eacbd :=_bd .MakeDict ();_eacbd .Set ("\u0042\u004d",_bd .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_eacbd .Set ("\u0043\u0041",_bd .MakeFloat (opt .Alpha ));_eacbd .Set ("\u0063\u0061",_bd .MakeFloat (opt .Alpha ));_dcfc =_cdeec .AddExtGState (_gedfb ,_eacbd );if _dcfc !=nil {return _dcfc ;};_gcgc :=_c .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_gedfb ,_dbbc ,_fggc ,_gcdg ,_dfagb ,_cgga );_cdeec .AddContentStreamByString (_gcgc );return nil ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_deae *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_bcfg ,_afbd :=color .(*PdfColorCalGray );if !_afbd {_aag .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_bcfg .Val ();X :=_deae .WhitePoint [0]*_cg .Pow (ANorm ,_deae .Gamma );Y :=_deae .WhitePoint [1]*_cg .Pow (ANorm ,_deae .Gamma );Z :=_deae .WhitePoint [2]*_cg .Pow (ANorm ,_deae .Gamma );_eeb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ggdd :=-0.969256*X +1.875992*Y +0.041556*Z ;_fgafb :=0.055648*X +-0.204043*Y +1.057311*Z ;_eeb =_cg .Min (_cg .Max (_eeb ,0),1.0);_ggdd =_cg .Min (_cg .Max (_ggdd ,0),1.0);_fgafb =_cg .Min (_cg .Max (_fgafb ,0),1.0);return NewPdfColorDeviceRGB (_eeb ,_ggdd ,_fgafb ),nil ;};func _daag (_dgdfe _bd .PdfObject )(*PdfColorspaceDeviceN ,error ){_cfff :=NewPdfColorspaceDeviceN ();if _ebadf ,_addf :=_dgdfe .(*_bd .PdfIndirectObject );_addf {_cfff ._ffcd =_ebadf ;};_dgdfe =_bd .TraceToDirectObject (_dgdfe );_fabe ,_fdeg :=_dgdfe .(*_bd .PdfObjectArray );if !_fdeg {return nil ,_c .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _fabe .Len ()!=4&&_fabe .Len ()!=5{return nil ,_c .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_dgdfe =_fabe .Get (0);_abdc ,_fdeg :=_dgdfe .(*_bd .PdfObjectName );if !_fdeg {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_abdc !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_c .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_dgdfe =_fabe .Get (1);_dgdfe =_bd .TraceToDirectObject (_dgdfe );_adadg ,_fdeg :=_dgdfe .(*_bd .PdfObjectArray );if !_fdeg {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_cfff .ColorantNames =_adadg ;_dgdfe =_fabe .Get (2);_gebg ,_bfae :=NewPdfColorspaceFromPdfObject (_dgdfe );if _bfae !=nil {return nil ,_bfae ;};_cfff .AlternateSpace =_gebg ;_bcbbe ,_bfae :=_cgdeb (_fabe .Get (3));if _bfae !=nil {return nil ,_bfae ;};_cfff .TintTransform =_bcbbe ;if _fabe .Len ()==5{_cagb ,_aefb :=_ddgbb (_fabe .Get (4));if _aefb !=nil {return nil ,_aefb ;};_cfff .Attributes =_cagb ;};return _cfff ,nil ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_egab *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _egab .AlternateSpace ==nil {return nil ,_ca .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _egab .AlternateSpace .ColorToRGB (color );};

// BaseFont returns the font's "BaseFont" field.
func (_ecge *PdfFont )BaseFont ()string {return _ecge .baseFields ()._gfceb };func (_deaed *PdfReader )flattenFieldsWithOpts (_fggd bool ,_baae FieldAppearanceGenerator ,_fegcf *FieldFlattenOpts )error {if _fegcf ==nil {_fegcf =&FieldFlattenOpts {};};var _dbde bool ;_cabbf :=map[*PdfAnnotation ]bool {};{var _bbbee []*PdfField ;_cbcge :=_deaed .AcroForm ;if _cbcge !=nil {if _fegcf .FilterFunc !=nil {_bbbee =_cbcge .filteredFields (_fegcf .FilterFunc ,true );_dbde =_cbcge .Fields !=nil &&len (*_cbcge .Fields )> 0;}else {_bbbee =_cbcge .AllFields ();};};for _ ,_fabba :=range _bbbee {for _ ,_bgedg :=range _fabba .Annotations {_cabbf [_bgedg .PdfAnnotation ]=_fabba .V !=nil ;if _baae !=nil {_abgce ,_bfbba :=_baae .GenerateAppearanceDict (_cbcge ,_fabba ,_bgedg );if _bfbba !=nil {return _bfbba ;};_bgedg .AP =_abgce ;};};};};if _fggd {for _ ,_deaee :=range _deaed .PageList {_aeggf ,_dbabf :=_deaee .GetAnnotations ();if _dbabf !=nil {return _dbabf ;};for _ ,_afaed :=range _aeggf {_cabbf [_afaed ]=true ;};};};for _ ,_bfdb :=range _deaed .PageList {var _facdf []*PdfAnnotation ;if _baae !=nil {if _bfee :=_baae .WrapContentStream (_bfdb );_bfee !=nil {return _bfee ;};};_addg ,_bddea :=_bfdb .GetAnnotations ();if _bddea !=nil {return _bddea ;};for _ ,_bafc :=range _addg {_ddbb ,_gegg :=_cabbf [_bafc ];if !_gegg {_facdf =append (_facdf ,_bafc );continue ;};switch _bafc .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_eaafa ,_ebee ,_fgad :=_eegga (_bafc );if _fgad !=nil {if !_ddbb {_aag .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");continue ;};_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_fgad );continue ;};if _eaafa ==nil {continue ;};_agd :=_bfdb .Resources .GenerateXObjectName ();_bfdb .Resources .SetXObjectFormByName (_agd ,_eaafa );_ddegbc :=_cg .Min (_ebee .Llx ,_ebee .Urx );_gagce :=_cg .Min (_ebee .Lly ,_ebee .Ury );var _agaca []string ;_agaca =append (_agaca ,"\u0071");_agaca =append (_agaca ,_c .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_ddegbc ,_gagce ));_agaca =append (_agaca ,_c .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_agd .String ()));_agaca =append (_agaca ,"\u0051");_ccad :=_ad .Join (_agaca ,"\u000a");_fgad =_bfdb .AppendContentStream (_ccad );if _fgad !=nil {return _fgad ;};if _eaafa .Resources !=nil {_ecfbc ,_gdcb :=_bd .GetDict (_eaafa .Resources .Font );if _gdcb {for _ ,_agbe :=range _ecfbc .Keys (){if !_bfdb .Resources .HasFontByName (_agbe ){_bfdb .Resources .SetFontByName (_agbe ,_ecfbc .Get (_agbe ));};};};};};if len (_facdf )> 0{_bfdb ._fgfgg =_facdf ;}else {_bfdb ._fgfgg =[]*PdfAnnotation {};};};if !_dbde {_deaed .AcroForm =nil ;};return nil ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_agdg *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _agdg .baseFields ()._dcgda !=nil {return _agdg .baseFields ()._dcgda ;};if _cgeg :=_agdg ._ddgba .getFontDescriptor ();_cgeg !=nil {return _cgeg ;};_aag .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_agdg );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ggb *PdfActionURI )ToPdfObject ()_bd .PdfObject {_ggb .PdfAction .ToPdfObject ();_faa :=_ggb ._ccf ;_ege :=_faa .PdfObject .(*_bd .PdfObjectDictionary );_ege .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeURI )));_ege .SetIfNotNil ("\u0055\u0052\u0049",_ggb .URI );_ege .SetIfNotNil ("\u0049\u0073\u004da\u0070",_ggb .IsMap );return _faa ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_fbdg *PdfShading )GetContainingPdfObject ()_bd .PdfObject {return _fbdg ._ecebg };

// ToPdfObject implements interface PdfModel.
func (_ddcg *PdfAnnotationText )ToPdfObject ()_bd .PdfObject {_ddcg .PdfAnnotation .ToPdfObject ();_bfce :=_ddcg ._ega ;_bece :=_bfce .PdfObject .(*_bd .PdfObjectDictionary );if _ddcg .PdfAnnotationMarkup !=nil {_ddcg .PdfAnnotationMarkup .appendToPdfDictionary (_bece );};_bece .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0054\u0065\u0078\u0074"));_bece .SetIfNotNil ("\u004f\u0070\u0065\u006e",_ddcg .Open );_bece .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ddcg .Name );_bece .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_ddcg .State );_bece .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_ddcg .StateModel );return _bfce ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _bd .PdfObject ;Name _bd .PdfObject ;};

// SetContext sets the sub annotation (context).
func (_cfb *PdfAnnotation )SetContext (ctx PdfModel ){_cfb ._bfa =ctx };

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _bd .PdfObject ;Flags _bd .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_ggdaf *PdfAnnotationHighlight )ToPdfObject ()_bd .PdfObject {_ggdaf .PdfAnnotation .ToPdfObject ();_beaf :=_ggdaf ._ega ;_dccd :=_beaf .PdfObject .(*_bd .PdfObjectDictionary );_ggdaf .PdfAnnotationMarkup .appendToPdfDictionary (_dccd );_dccd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));_dccd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ggdaf .QuadPoints );return _beaf ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_acdge *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _acdge .UnderlyingCS .GetNumComponents ();};

// ToPdfObject implements interface PdfModel.
func (_badbg *PdfFilespec )ToPdfObject ()_bd .PdfObject {_gefd :=_badbg .getDict ();_gefd .Clear ();_gefd .Set ("\u0054\u0079\u0070\u0065",_bd .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_gefd .SetIfNotNil ("\u0046\u0053",_badbg .FS );_gefd .SetIfNotNil ("\u0046",_badbg .F );_gefd .SetIfNotNil ("\u0055\u0046",_badbg .UF );_gefd .SetIfNotNil ("\u0044\u004f\u0053",_badbg .DOS );_gefd .SetIfNotNil ("\u004d\u0061\u0063",_badbg .Mac );_gefd .SetIfNotNil ("\u0055\u006e\u0069\u0078",_badbg .Unix );_gefd .SetIfNotNil ("\u0049\u0044",_badbg .ID );_gefd .SetIfNotNil ("\u0056",_badbg .V );_gefd .SetIfNotNil ("\u0045\u0046",_badbg .EF );_gefd .SetIfNotNil ("\u0052\u0046",_badbg .RF );_gefd .SetIfNotNil ("\u0044\u0065\u0073\u0063",_badbg .Desc );_gefd .SetIfNotNil ("\u0043\u0049",_badbg .CI );return _badbg ._bdea ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_gcacg :_bd .MakeIndirectObject (_bd .MakeDict ())}};func _bcdc (_cffe *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_cffe }};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// Items returns all children outline items.
func (_aacg *OutlineItem )Items ()[]*OutlineItem {return _aacg .Entries };

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_gfff *PdfPage )ToPdfObject ()_bd .PdfObject {_gebf :=_gfff ._cbfbd ;_gfff .GetPageDict ();return _gebf ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_caab :=&PdfColorspaceDeviceN {};return _caab };

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_aaeag *PdfWriter )SetNamedDestinations (names _bd .PdfObject )error {if names ==nil {return nil ;};_aag .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");_aaeag ._ccbfg .Set ("\u004e\u0061\u006de\u0073",names );return _aaeag .addObjects (names );};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_fggf *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _fggf ._aaffd .(*PdfTilingPattern );};

// String returns a string representation of what flags are set.
func (_cfec FieldFlag )String ()string {_adbb :="";if _cfec ==FieldFlagClear {_adbb ="\u0043\u006c\u0065a\u0072";return _adbb ;};if _cfec &FieldFlagReadOnly > 0{_adbb +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _cfec &FieldFlagRequired > 0{_adbb +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _cfec &FieldFlagNoExport > 0{_adbb +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _cfec &FieldFlagNoToggleToOff > 0{_adbb +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _cfec &FieldFlagRadio > 0{_adbb +="\u007c\u0052\u0061\u0064\u0069\u006f";};if _cfec &FieldFlagPushbutton > 0{_adbb +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _cfec &FieldFlagRadiosInUnision > 0{_adbb +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _cfec &FieldFlagMultiline > 0{_adbb +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _cfec &FieldFlagPassword > 0{_adbb +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _cfec &FieldFlagFileSelect > 0{_adbb +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _cfec &FieldFlagDoNotScroll > 0{_adbb +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _cfec &FieldFlagComb > 0{_adbb +="\u007c\u0043\u006fm\u0062";};if _cfec &FieldFlagRichText > 0{_adbb +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _cfec &FieldFlagDoNotSpellCheck > 0{_adbb +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _cfec &FieldFlagCombo > 0{_adbb +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _cfec &FieldFlagEdit > 0{_adbb +="\u007c\u0045\u0064i\u0074";};if _cfec &FieldFlagSort > 0{_adbb +="\u007c\u0053\u006fr\u0074";};if _cfec &FieldFlagMultiSelect > 0{_adbb +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _cfec &FieldFlagCommitOnSelChange > 0{_adbb +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _ad .Trim (_adbb ,"\u007c");};func (_afgdc SignatureValidationResult )String ()string {var _fgfd _af .Buffer ;_fgfd .WriteString (_c .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_afgdc .Name ));if _afgdc .Date ._fagf > 0{_fgfd .WriteString (_c .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_afgdc .Date .ToGoTime ().String ()));}else {_fgfd .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_afgdc .Reason )> 0{_fgfd .WriteString (_c .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_afgdc .Reason ));}else {_fgfd .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_afgdc .Location )> 0{_fgfd .WriteString (_c .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_afgdc .Location ));}else {_fgfd .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_afgdc .ContactInfo )> 0{_fgfd .WriteString (_c .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_afgdc .ContactInfo ));}else {_fgfd .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_fgfd .WriteString (_c .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_afgdc .Fields )));if _afgdc .IsSigned {_fgfd .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_fgfd .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _afgdc .IsVerified {_fgfd .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_fgfd .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _afgdc .IsTrusted {_fgfd .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_fgfd .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_afgdc .GeneralizedTime .IsZero (){_fgfd .WriteString (_c .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_afgdc .GeneralizedTime .String ()));};return _fgfd .String ();};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _bd .PdfObject ;V _bd .PdfObject ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};func (_ggee *PdfAnnotationMarkup )appendToPdfDictionary (_aafd *_bd .PdfObjectDictionary ){_aafd .SetIfNotNil ("\u0054",_ggee .T );if _ggee .Popup !=nil {_aafd .Set ("\u0050\u006f\u0070u\u0070",_ggee .Popup .ToPdfObject ());};_aafd .SetIfNotNil ("\u0043\u0041",_ggee .CA );_aafd .SetIfNotNil ("\u0052\u0043",_ggee .RC );_aafd .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ggee .CreationDate );_aafd .SetIfNotNil ("\u0049\u0052\u0054",_ggee .IRT );_aafd .SetIfNotNil ("\u0053\u0075\u0062\u006a",_ggee .Subj );_aafd .SetIfNotNil ("\u0052\u0054",_ggee .RT );_aafd .SetIfNotNil ("\u0049\u0054",_ggee .IT );_aafd .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_ggee .ExData );};

// GetNumComponents returns the number of color components (3 for RGB).
func (_gaf *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_cdbc *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ca .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");};_fegc ,_baeda :=_adg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._dcbb ,img ._fbadbga );if _baeda !=nil {return img ,_baeda ;};_gadf ,_baeda :=_adg .NRGBAConverter .Convert (_fegc );if _baeda !=nil {return img ,_baeda ;};_ffbd :=_dcae (_gadf .Base ());_aag .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_aag .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_aag .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_ffbd .Data );_aag .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_ffbd );return _ffbd ,nil ;};func (_gdbd *pdfFontSimple )getFontEncoding ()(_dgabg string ,_dgddd map[_ff .CharCode ]_ff .GlyphName ,_facda error ){_dgabg ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _ddebg ,_gcgg :=_aedg [_gdbd ._gfceb ];_gcgg {_dgabg =_ddebg ;}else if _gdbd .fontFlags ()&_eedgb !=0{for _badbe ,_bcgfe :=range _aedg {if _ad .Contains (_gdbd ._gfceb ,_badbe ){_dgabg =_bcgfe ;break ;};};};if _gdbd .Encoding ==nil {return _dgabg ,nil ,nil ;};switch _gdgac :=_gdbd .Encoding .(type ){case *_bd .PdfObjectName :return string (*_gdgac ),nil ,nil ;case *_bd .PdfObjectDictionary :_ffdg ,_fcca :=_bd .GetName (_gdgac .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _fcca {_dgabg =_ffdg .String ();};if _dcdg :=_gdgac .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_dcdg !=nil {_ebcda ,_cege :=_bd .GetArray (_dcdg );if !_cege {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_gdgac ,_gdgac .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));return "",nil ,_bd .ErrTypeError ;};_dgddd ,_facda =_ff .FromFontDifferences (_ebcda );};return _dgabg ,_dgddd ,_facda ;default:_aag .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_gdbd .Encoding ,_gdbd .Encoding );return "",nil ,_bd .ErrTypeError ;};};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_beb :=NewPdfAction ();_adb :=&PdfActionImportData {};_adb .PdfAction =_beb ;_beb .SetContext (_adb );return _adb ;};func _gbaba ()string {_gbcd :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _fgcd _af .Buffer ;for _edcda :=0;_edcda < 6;_edcda ++{_fgcd .WriteRune (rune (_gbcd [_gc .Intn (len (_gbcd ))]));};return _fgcd .String ();};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_ddff ,_bfcaf :=NewStandard14Font (basefont );if _bfcaf !=nil {panic (_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));};return _ddff ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_cfbc *PdfColorLab )GetNumComponents ()int {return 3};func (_ddcdgb *PdfReader )newPdfOutlineItemFromIndirectObject (_ccdc *_bd .PdfIndirectObject )(*PdfOutlineItem ,error ){_cbef ,_aeeee :=_ccdc .PdfObject .(*_bd .PdfObjectDictionary );if !_aeeee {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_bede :=NewPdfOutlineItem ();_ceegc :=_cbef .Get ("\u0054\u0069\u0074l\u0065");if _ceegc ==nil {return nil ,_c .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};_ccddf ,_dggaf :=_bd .GetString (_ceegc );if !_dggaf {return nil ,_c .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_ceegc );};_bede .Title =_ccddf ;if _bfaba :=_cbef .Get ("\u0043\u006f\u0075n\u0074");_bfaba !=nil {_dbegb ,_aage :=_bfaba .(*_bd .PdfObjectInteger );if !_aage {return nil ,_c .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_bfaba );};_gefg :=int64 (*_dbegb );_bede .Count =&_gefg ;};if _dfdge :=_cbef .Get ("\u0044\u0065\u0073\u0074");_dfdge !=nil {_bede .Dest =_bd .ResolveReference (_dfdge );if !_ddcdgb ._abbg {_ggddcg :=_ddcdgb .traverseObjectData (_bede .Dest );if _ggddcg !=nil {return nil ,_ggddcg ;};};};if _edfe :=_cbef .Get ("\u0041");_edfe !=nil {_bede .A =_bd .ResolveReference (_edfe );if !_ddcdgb ._abbg {_bdbgg :=_ddcdgb .traverseObjectData (_bede .A );if _bdbgg !=nil {return nil ,_bdbgg ;};};};if _bgfb :=_cbef .Get ("\u0053\u0045");_bgfb !=nil {_bede .SE =nil ;};if _bbece :=_cbef .Get ("\u0043");_bbece !=nil {_bede .C =_bd .ResolveReference (_bbece );};if _bdcf :=_cbef .Get ("\u0046");_bdcf !=nil {_bede .F =_bd .ResolveReference (_bdcf );};return _bede ,nil ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_db :=NewPdfAction ();_gdd :=&PdfActionThread {};_gdd .PdfAction =_db ;_db .SetContext (_gdd );return _gdd ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_bd .PdfObjectArray ;Domain *_bd .PdfObjectArray ;Function []PdfFunction ;Extend *_bd .PdfObjectArray ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dbfc *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_bd .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbecb ,_edfb :=_bd .GetNumbersAsFloat (objects );if _edfb !=nil {return nil ,_edfb ;};return _dbfc .ColorFromFloats (_gbecb );};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_baag *PdfPage )GetAllContentStreams ()(string ,error ){_bbgc ,_febff :=_baag .GetContentStreams ();if _febff !=nil {return "",_febff ;};return _ad .Join (_bbgc ,"\u0020"),nil ;};

// GetContentStream returns the XObject Form's content stream.
func (_fcea *XObjectForm )GetContentStream ()([]byte ,error ){_gccbd ,_eggcg :=_bd .DecodeStream (_fcea ._cccga );if _eggcg !=nil {return nil ,_eggcg ;};return _gccbd ,nil ;};

// A returns the value of the A component of the color.
func (_afbgf *PdfColorLab )A ()float64 {return float64 (_afbgf [1])};func _fgcec (_bcbga *_bd .PdfObjectDictionary )(*PdfFieldChoice ,error ){_daca :=&PdfFieldChoice {};_daca .Opt ,_ =_bd .GetArray (_bcbga .Get ("\u004f\u0070\u0074"));_daca .TI ,_ =_bd .GetInt (_bcbga .Get ("\u0054\u0049"));_daca .I ,_ =_bd .GetArray (_bcbga .Get ("\u0049"));return _daca ,nil ;};

// SetAction sets the PDF action for the annotation link.
func (_cea *PdfAnnotationLink )SetAction (action *PdfAction ){_cea ._dgef =action ;if action ==nil {_cea .A =nil ;};};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_efabe *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _efabe .flattenFieldsWithOpts (false ,appgen ,opts );};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// ToPdfObject implements interface PdfModel.
func (_bfeb *PdfAnnotationFreeText )ToPdfObject ()_bd .PdfObject {_bfeb .PdfAnnotation .ToPdfObject ();_cbgf :=_bfeb ._ega ;_bcfa :=_cbgf .PdfObject .(*_bd .PdfObjectDictionary );_bfeb .PdfAnnotationMarkup .appendToPdfDictionary (_bcfa );_bcfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));_bcfa .SetIfNotNil ("\u0044\u0041",_bfeb .DA );_bcfa .SetIfNotNil ("\u0051",_bfeb .Q );_bcfa .SetIfNotNil ("\u0052\u0043",_bfeb .RC );_bcfa .SetIfNotNil ("\u0044\u0053",_bfeb .DS );_bcfa .SetIfNotNil ("\u0043\u004c",_bfeb .CL );_bcfa .SetIfNotNil ("\u0049\u0054",_bfeb .IT );_bcfa .SetIfNotNil ("\u0042\u0045",_bfeb .BE );_bcfa .SetIfNotNil ("\u0052\u0044",_bfeb .RD );_bcfa .SetIfNotNil ("\u0042\u0053",_bfeb .BS );_bcfa .SetIfNotNil ("\u004c\u0045",_bfeb .LE );return _cbgf ;};func (_bcgg *PdfReader )newPdfAnnotationPolyLineFromDict (_ccgce *_bd .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_cedc :=PdfAnnotationPolyLine {};_cffc ,_aae :=_bcgg .newPdfAnnotationMarkupFromDict (_ccgce );if _aae !=nil {return nil ,_aae ;};_cedc .PdfAnnotationMarkup =_cffc ;_cedc .Vertices =_ccgce .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_cedc .LE =_ccgce .Get ("\u004c\u0045");_cedc .BS =_ccgce .Get ("\u0042\u0053");_cedc .IC =_ccgce .Get ("\u0049\u0043");_cedc .BE =_ccgce .Get ("\u0042\u0045");_cedc .IT =_ccgce .Get ("\u0049\u0054");_cedc .Measure =_ccgce .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_cedc ,nil ;};func (_aec *PdfReader )newPdfAnnotationSquareFromDict (_gada *_bd .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_gddc :=PdfAnnotationSquare {};_dfbg ,_cbbf :=_aec .newPdfAnnotationMarkupFromDict (_gada );if _cbbf !=nil {return nil ,_cbbf ;};_gddc .PdfAnnotationMarkup =_dfbg ;_gddc .BS =_gada .Get ("\u0042\u0053");_gddc .IC =_gada .Get ("\u0049\u0043");_gddc .BE =_gada .Get ("\u0042\u0045");_gddc .RD =_gada .Get ("\u0052\u0044");return &_gddc ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_caga pdfFontType0 )GetCharMetrics (code _ff .CharCode )(_gb .CharMetrics ,bool ){if _caga .DescendantFont ==nil {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_caga );return _gb .CharMetrics {},false ;};return _caga .DescendantFont .GetCharMetrics (code );};

// M returns the value of the magenta component of the color.
func (_babf *PdfColorDeviceCMYK )M ()float64 {return float64 (_babf [1])};func _edca (_dccde _bd .PdfObject )(*PdfColorspaceCalRGB ,error ){_ddbgd :=NewPdfColorspaceCalRGB ();if _ecdf ,_cecef :=_dccde .(*_bd .PdfIndirectObject );_cecef {_ddbgd ._ccgg =_ecdf ;};_dccde =_bd .TraceToDirectObject (_dccde );_bbae ,_bcdf :=_dccde .(*_bd .PdfObjectArray );if !_bcdf {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bbae .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_dccde =_bd .TraceToDirectObject (_bbae .Get (0));_ddcfb ,_bcdf :=_dccde .(*_bd .PdfObjectName );if !_bcdf {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_ddcfb !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_c .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_dccde =_bd .TraceToDirectObject (_bbae .Get (1));_aedfg ,_bcdf :=_dccde .(*_bd .PdfObjectDictionary );if !_bcdf {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_dccde =_aedfg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_dccde =_bd .TraceToDirectObject (_dccde );_ccda ,_bcdf :=_dccde .(*_bd .PdfObjectArray );if !_bcdf {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");};if _ccda .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bgdg ,_acfgf :=_ccda .GetAsFloat64Slice ();if _acfgf !=nil {return nil ,_acfgf ;};_ddbgd .WhitePoint =_bgdg ;_dccde =_aedfg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _dccde !=nil {_dccde =_bd .TraceToDirectObject (_dccde );_ccdb ,_dfgc :=_dccde .(*_bd .PdfObjectArray );if !_dfgc {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _ccdb .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_cecb ,_aceb :=_ccdb .GetAsFloat64Slice ();if _aceb !=nil {return nil ,_aceb ;};_ddbgd .BlackPoint =_cecb ;};_dccde =_aedfg .Get ("\u0047\u0061\u006dm\u0061");if _dccde !=nil {_dccde =_bd .TraceToDirectObject (_dccde );_ebcd ,_dbce :=_dccde .(*_bd .PdfObjectArray );if !_dbce {return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _ebcd .Len ()!=3{return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_efeg ,_cffae :=_ebcd .GetAsFloat64Slice ();if _cffae !=nil {return nil ,_cffae ;};_ddbgd .Gamma =_efeg ;};_dccde =_aedfg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _dccde !=nil {_dccde =_bd .TraceToDirectObject (_dccde );_cdeb ,_dbcef :=_dccde .(*_bd .PdfObjectArray );if !_dbcef {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _cdeb .Len ()!=9{_aag .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_cdeb .String ());return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_dceb ,_cacc :=_cdeb .GetAsFloat64Slice ();if _cacc !=nil {return nil ,_cacc ;};_ddbgd .Matrix =_dceb ;};return _ddbgd ,nil ;};func (_ebf *PdfReader )newPdfActionURIFromDict (_deff *_bd .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_deff .Get ("\u0055\u0052\u0049"),IsMap :_deff .Get ("\u0049\u0073\u004da\u0070")},nil ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_gadb *PdfReader )GetIndirectObjectByNumber (number int )(_bd .PdfObject ,error ){_gbabe ,_gcbdf :=_gadb ._efgga .LookupByNumber (number );return _gbabe ,_gcbdf ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_aaab *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _bd .GetNumberAsFloat (_aaab .Descent );};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_dgf :=NewPdfAction ();_gbf :=&PdfActionURI {};_gbf .PdfAction =_dgf ;_dgf .SetContext (_gbf );return _gbf ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_fgac *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_bd .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebca ,_bfed :=_bd .GetNumbersAsFloat (objects );if _bfed !=nil {return nil ,_bfed ;};return _fgac .ColorFromFloats (_ebca );};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_bd .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _bd .PdfObject ;A _bd .PdfObject ;SE _bd .PdfObject ;C _bd .PdfObject ;F _bd .PdfObject ;_bedcc *_bd .PdfIndirectObject ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _eb .ReadSeeker )(*PdfFont ,error ){const _defd =_ff .CharCode (32);const _feadf =_ff .CharCode (255);_abgf ,_cdggb :=_cc .ReadAll (r );if _cdggb !=nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cdggb );return nil ,_cdggb ;};_dabd ,_cdggb :=_gb .TtfParse (_af .NewReader (_abgf ));if _cdggb !=nil {_aag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_cdggb );return nil ,_cdggb ;};_efbdd :=&pdfFontSimple {_cegga :make (map[_ff .CharCode ]float64 ),fontCommon :fontCommon {_ddad :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_efbdd ._cagf =_ff .NewWinAnsiEncoder ();_efbdd ._gfceb =_dabd .PostScriptName ;_efbdd .FirstChar =_bd .MakeInteger (int64 (_defd ));_efbdd .LastChar =_bd .MakeInteger (int64 (_feadf ));_dfbfg :=1000.0/float64 (_dabd .UnitsPerEm );if len (_dabd .Widths )<=0{return nil ,_ca .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_dcded :=_dfbfg *float64 (_dabd .Widths [0]);_aefaa :=make ([]float64 ,0,_feadf -_defd +1);for _feff :=_defd ;_feff <=_feadf ;_feff ++{_dgce ,_daee :=_efbdd .Encoder ().CharcodeToRune (_feff );if !_daee {_aag .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_feff );_aefaa =append (_aefaa ,_dcded );continue ;};_abeff ,_dgdb :=_dabd .Chars [_dgce ];if !_dgdb {_aag .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_aefaa =append (_aefaa ,_dcded );continue ;};_fbce :=_dfbfg *float64 (_dabd .Widths [_abeff ]);_aefaa =append (_aefaa ,_fbce );};_efbdd .Widths =_bd .MakeIndirectObject (_bd .MakeArrayFromFloats (_aefaa ));if len (_aefaa )< int (_feadf -_defd +1){_aag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_aefaa ),255-32+1);return nil ,_bd .ErrRangeError ;};for _acgg :=_ff .CharCode (_defd );_acgg <=_feadf ;_acgg ++{_efbdd ._cegga [_acgg ]=_aefaa [_acgg -_defd ];};_efbdd .Encoding =_bd .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_ceef :=&PdfFontDescriptor {};_ceef .FontName =_bd .MakeName (_dabd .PostScriptName );_ceef .Ascent =_bd .MakeFloat (_dfbfg *float64 (_dabd .TypoAscender ));_ceef .Descent =_bd .MakeFloat (_dfbfg *float64 (_dabd .TypoDescender ));_ceef .CapHeight =_bd .MakeFloat (_dfbfg *float64 (_dabd .CapHeight ));_ceef .FontBBox =_bd .MakeArrayFromFloats ([]float64 {_dfbfg *float64 (_dabd .Xmin ),_dfbfg *float64 (_dabd .Ymin ),_dfbfg *float64 (_dabd .Xmax ),_dfbfg *float64 (_dabd .Ymax )});_ceef .ItalicAngle =_bd .MakeFloat (float64 (_dabd .ItalicAngle ));_ceef .MissingWidth =_bd .MakeFloat (_dfbfg *float64 (_dabd .Widths [0]));_affge ,_cdggb :=_bd .MakeStream (_abgf ,_bd .NewFlateEncoder ());if _cdggb !=nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_cdggb );return nil ,_cdggb ;};_affge .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bd .MakeInteger (int64 (len (_abgf ))));_ceef .FontFile2 =_affge ;if _dabd .Bold {_ceef .StemV =_bd .MakeInteger (120);}else {_ceef .StemV =_bd .MakeInteger (70);};_egaf :=_cabbc ;if _dabd .IsFixedPitch {_egaf |=_ggaced ;};if _dabd .ItalicAngle !=0{_egaf |=_dgge ;};_ceef .Flags =_bd .MakeInteger (int64 (_egaf ));_efbdd ._dcgda =_ceef ;_acabg :=&PdfFont {_ddgba :_efbdd };return _acabg ,nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _bd .PdfObject ;Movie _bd .PdfObject ;A _bd .PdfObject ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_ebfcc =keywords };func _eedgg (_baad _gb .StdFont )pdfFontSimple {_cfdcc :=_baad .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_ddad :"\u0054\u0079\u0070e\u0031",_gfceb :_baad .Name ()},_efbb :_baad .GetMetricsTable (),_ecbec :&PdfFontDescriptor {FontName :_bd .MakeName (string (_cfdcc .Name )),FontFamily :_bd .MakeName (_cfdcc .Family ),FontWeight :_bd .MakeFloat (float64 (_cfdcc .Weight )),Flags :_bd .MakeInteger (int64 (_cfdcc .Flags )),FontBBox :_bd .MakeArrayFromFloats (_cfdcc .BBox [:]),ItalicAngle :_bd .MakeFloat (_cfdcc .ItalicAngle ),Ascent :_bd .MakeFloat (_cfdcc .Ascent ),Descent :_bd .MakeFloat (_cfdcc .Descent ),CapHeight :_bd .MakeFloat (_cfdcc .CapHeight ),XHeight :_bd .MakeFloat (_cfdcc .XHeight ),StemV :_bd .MakeFloat (_cfdcc .StemV ),StemH :_bd .MakeFloat (_cfdcc .StemH )},_dgcd :_baad .Encoder ()};};func _effb (_efabef _bd .PdfObject )(map[_ff .CharCode ]float64 ,error ){if _efabef ==nil {return nil ,nil ;};_bbd ,_efbfc :=_bd .GetArray (_efabef );if !_efbfc {return nil ,nil ;};_aedfc :=map[_ff .CharCode ]float64 {};_ccbd :=_bbd .Len ();for _fffc :=0;_fffc < _ccbd -1;_fffc ++{_eegbg :=_bd .TraceToDirectObject (_bbd .Get (_fffc ));_gbfa ,_gdeae :=_bd .GetIntVal (_eegbg );if !_gdeae {return nil ,_c .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_fffc ,_eegbg );};_fffc ++;if _fffc > _ccbd -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bbd );};_acgdf :=_bd .TraceToDirectObject (_bbd .Get (_fffc ));switch _acgdf .(type ){case *_bd .PdfObjectArray :_dfff ,_ :=_bd .GetArray (_acgdf );if _geff ,_aafc :=_dfff .ToFloat64Array ();_aafc ==nil {for _bdaae :=0;_bdaae < len (_geff );_bdaae ++{_aedfc [_ff .CharCode (_gbfa +_bdaae )]=_geff [_bdaae ];};}else {return nil ,_c .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_fffc ,_acgdf );};case *_bd .PdfObjectInteger :_gcgad ,_cbfce :=_bd .GetIntVal (_acgdf );if !_cbfce {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_fffc ,_acgdf );};_fffc ++;if _fffc > _ccbd -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bbd );};_egdg :=_bbd .Get (_fffc );_ecag ,_ebac :=_bd .GetNumberAsFloat (_egdg );if _ebac !=nil {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_fffc ,_egdg );};for _gcbc :=_gbfa ;_gcbc <=_gcgad ;_gcbc ++{_aedfc [_ff .CharCode (_gcbc )]=_ecag ;};default:return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_fffc ,_acgdf );};};return _aedfc ,nil ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_dac PdfModel ;_gcacg *_bd .PdfIndirectObject ;_dcdec *bool ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_bd .PdfObjectName ;T *_bd .PdfObjectString ;TU *_bd .PdfObjectString ;TM *_bd .PdfObjectString ;Ff *_bd .PdfObjectInteger ;V _bd .PdfObject ;DV _bd .PdfObject ;AA _bd .PdfObject ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_dfcb *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_bgbb ,_gbff :=color .(*PdfColorCalRGB );if !_gbff {_aag .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cbeg :=_bgbb .A ();_gdabf :=_bgbb .B ();_ggace :=_bgbb .C ();X :=_dfcb .Matrix [0]*_cg .Pow (_cbeg ,_dfcb .Gamma [0])+_dfcb .Matrix [3]*_cg .Pow (_gdabf ,_dfcb .Gamma [1])+_dfcb .Matrix [6]*_cg .Pow (_ggace ,_dfcb .Gamma [2]);Y :=_dfcb .Matrix [1]*_cg .Pow (_cbeg ,_dfcb .Gamma [0])+_dfcb .Matrix [4]*_cg .Pow (_gdabf ,_dfcb .Gamma [1])+_dfcb .Matrix [7]*_cg .Pow (_ggace ,_dfcb .Gamma [2]);Z :=_dfcb .Matrix [2]*_cg .Pow (_cbeg ,_dfcb .Gamma [0])+_dfcb .Matrix [5]*_cg .Pow (_gdabf ,_dfcb .Gamma [1])+_dfcb .Matrix [8]*_cg .Pow (_ggace ,_dfcb .Gamma [2]);_gfcc :=3.240479*X +-1.537150*Y +-0.498535*Z ;_deg :=-0.969256*X +1.875992*Y +0.041556*Z ;_ddbc :=0.055648*X +-0.204043*Y +1.057311*Z ;_gfcc =_cg .Min (_cg .Max (_gfcc ,0),1.0);_deg =_cg .Min (_cg .Max (_deg ,0),1.0);_ddbc =_cg .Min (_cg .Max (_ddbc ,0),1.0);return NewPdfColorDeviceRGB (_gfcc ,_deg ,_ddbc ),nil ;};func _ggeeb (_fbeb _bd .PdfObject )(*PdfFontDescriptor ,error ){_cdecb :=&PdfFontDescriptor {};_fbeb =_bd .ResolveReference (_fbeb );if _gbaa ,_cfffb :=_fbeb .(*_bd .PdfIndirectObject );_cfffb {_cdecb ._efaf =_gbaa ;_fbeb =_gbaa .PdfObject ;};_aeaf ,_defg :=_bd .GetDict (_fbeb );if !_defg {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fbeb );return nil ,_bd .ErrTypeError ;};if _fefdg :=_aeaf .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_fefdg !=nil {_cdecb .FontName =_fefdg ;}else {_aag .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");};_bbcc ,_ :=_bd .GetName (_cdecb .FontName );if _egdf :=_aeaf .Get ("\u0054\u0079\u0070\u0065");_egdf !=nil {_fgdgc ,_cdaba :=_egdf .(*_bd .PdfObjectName );if !_cdaba ||string (*_fgdgc )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_aag .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_egdf ,_bbcc ,_cdecb .FontName );};}else {_aag .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_bbcc ,_cdecb .FontName );};_cdecb .FontFamily =_aeaf .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_cdecb .FontStretch =_aeaf .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_cdecb .FontWeight =_aeaf .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");_cdecb .Flags =_aeaf .Get ("\u0046\u006c\u0061g\u0073");_cdecb .FontBBox =_aeaf .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_cdecb .ItalicAngle =_aeaf .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_cdecb .Ascent =_aeaf .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");_cdecb .Descent =_aeaf .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_cdecb .Leading =_aeaf .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_cdecb .CapHeight =_aeaf .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_cdecb .XHeight =_aeaf .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");_cdecb .StemV =_aeaf .Get ("\u0053\u0074\u0065m\u0056");_cdecb .StemH =_aeaf .Get ("\u0053\u0074\u0065m\u0048");_cdecb .AvgWidth =_aeaf .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_cdecb .MaxWidth =_aeaf .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");_cdecb .MissingWidth =_aeaf .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_cdecb .FontFile =_aeaf .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_cdecb .FontFile2 =_aeaf .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");_cdecb .FontFile3 =_aeaf .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_cdecb .CharSet =_aeaf .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_cdecb .Style =_aeaf .Get ("\u0053\u0074\u0079l\u0065");_cdecb .Lang =_aeaf .Get ("\u004c\u0061\u006e\u0067");_cdecb .FD =_aeaf .Get ("\u0046\u0044");_cdecb .CIDSet =_aeaf .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _cdecb .Flags !=nil {if _dgdff ,_cgff :=_bd .GetIntVal (_cdecb .Flags );_cgff {_cdecb ._eeec =_dgdff ;};};if _cdecb .MissingWidth !=nil {if _defa ,_bdaeb :=_bd .GetNumberAsFloat (_cdecb .MissingWidth );_bdaeb ==nil {_cdecb ._cgcd =_defa ;};};if _cdecb .FontFile !=nil {_egece ,_addgc :=_acgc (_cdecb .FontFile );if _addgc !=nil {return _cdecb ,_addgc ;};_aag .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_egece );_cdecb .fontFile =_egece ;};if _cdecb .FontFile2 !=nil {_faab ,_fefg :=_gb .NewFontFile2FromPdfObject (_cdecb .FontFile2 );if _fefg !=nil {return _cdecb ,_fefg ;};_aag .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_faab .String ());_cdecb ._fgag =&_faab ;};return _cdecb ,nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_bddf :=&PdfAppender {_ccfcf :reader ._dedf ,Reader :reader ,_cadda :reader ._efgga ,_gddf :reader ._fbcccg };if _fgec ,_egca :=_bddf ._ccfcf .Seek (0,_eb .SeekEnd );_egca !=nil {return nil ,_egca ;}else {_bddf ._ccb =_fgec ;};if _ ,_ecbc :=_bddf ._ccfcf .Seek (0,_eb .SeekStart );_ecbc !=nil {return nil ,_ecbc ;};var _dgea error ;_bddf ._eege ,_dgea =NewPdfReader (_bddf ._ccfcf );if _dgea !=nil {return nil ,_dgea ;};for _ ,_ddae :=range _bddf .Reader .GetObjectNums (){if _bddf ._dbec < _ddae {_bddf ._dbec =_ddae ;};};_bddf ._bbab =_bddf ._cadda .GetXrefTable ();_bddf ._dcfff =_bddf ._cadda .GetXrefOffset ();_bddf ._bdae =make (map[_bd .PdfObject ]struct{});for _ ,_gece :=range _bddf ._eege .PageList {_bddf ._cgaa =append (_bddf ._cgaa ,_gece );};_bddf ._aab =make (map[_bd .PdfObject ]int64 );_bddf ._ebdb =make (map[_bd .PdfObject ]struct{});_bddf ._fdcd =_bddf ._eege .AcroForm ;return _bddf ,nil ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_caea ,_dfdb :=_gb .NewStdFontByName (HelveticaName );if !_dfdb {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");};_ggdg :=_eedgg (_caea );return &PdfFont {_ddgba :&_ggdg };};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_ffgga *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _ffgga .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_bd .PdfObjectArray ;TI *_bd .PdfObjectInteger ;I *_bd .PdfObjectArray ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_fcedd =producer };func _aabc (_afeef *_bd .PdfObjectDictionary ,_dgcff *fontCommon )(*pdfCIDFontType2 ,error ){if _dgcff ._ddad !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_aag .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_dgcff );return nil ,_bd .ErrRangeError ;};_dcabg :=_bcdc (_dgcff );_cedag ,_dbcga :=_bd .GetDict (_afeef .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_dbcga {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dgcff );return nil ,ErrRequiredAttributeMissing ;};_dcabg .CIDSystemInfo =_cedag ;_dcabg .DW =_afeef .Get ("\u0044\u0057");_dcabg .W =_afeef .Get ("\u0057");_dcabg .DW2 =_afeef .Get ("\u0044\u0057\u0032");_dcabg .W2 =_afeef .Get ("\u0057\u0032");_dcabg .CIDToGIDMap =_afeef .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");_dcabg ._cdfge =1000.0;if _bfda ,_dageb :=_bd .GetNumberAsFloat (_dcabg .DW );_dageb ==nil {_dcabg ._cdfge =_bfda ;};_cbcf ,_egbae :=_effb (_dcabg .W );if _egbae !=nil {return nil ,_egbae ;};if _cbcf ==nil {_cbcf =map[_ff .CharCode ]float64 {};};_dcabg ._gbfg =_cbcf ;return _dcabg ,nil ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_ffcba *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_aag .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_aag .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );_aag .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_aag .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );_ffdcd ,_fege :=_adg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._dcbb ,img ._fbadbga );if _fege !=nil {return Image {},_fege ;};_fff ,_fege :=_adg .NRGBAConverter .Convert (_ffdcd );if _fege !=nil {return Image {},_fege ;};return _dcae (_fff .Base ()),nil ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_fcbe *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ca .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");};_bbfb ,_fbec :=_adg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._dcbb ,img ._fbadbga );if _fbec !=nil {return img ,_fbec ;};_bfec ,_fbec :=_adg .GrayConverter .Convert (_bbfb );if _fbec !=nil {return img ,_fbec ;};return _dcae (_bfec .Base ()),nil ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_gfbcg *OutlineItem )ToPdfObject ()_bd .PdfObject {_ebfcf ,_ :=_gfbcg .ToPdfOutlineItem ();return _ebfcf .ToPdfObject ();};

// Fill populates `form` with values provided by `provider`.
func (_agcbf *PdfAcroForm )Fill (provider FieldValueProvider )error {return _agcbf .fill (provider ,nil )};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_gdggf *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_bd .StreamEncoder ,error ){_bfgg ,_fedga :=_gdggf ._ebbgg .(*_bd .PdfObjectStream );if !_fedga {_aag .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gdggf ._ebbgg );return nil ,nil ,_bd .ErrTypeError ;};_bagac ,_eebad :=_bd .DecodeStream (_bfgg );if _eebad !=nil {_aag .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_eebad );return nil ,nil ,_eebad ;};_cdeff ,_eebad :=_bd .NewEncoderFromStream (_bfgg );if _eebad !=nil {_aag .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_eebad );return nil ,nil ,_eebad ;};return _bagac ,_cdeff ,nil ;};func _cegdd (_eadef *PdfField ,_gbabc _bd .PdfObject )error {switch _eadef .GetContext ().(type ){case *PdfFieldText :switch _aagd :=_gbabc .(type ){case *_bd .PdfObjectName :_abbc :=_aagd ;_aag .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_abbc .String ());_eadef .V =_bd .MakeEncodedString (_aagd .String (),true );case *_bd .PdfObjectString :_eadef .V =_bd .MakeEncodedString (_aagd .String (),true );default:_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_aagd ,_aagd );};case *PdfFieldButton :switch _gbabc .(type ){case *_bd .PdfObjectName :if len (_gbabc .String ())> 0{_eadef .V =_gbabc ;_agcf (_eadef ,_gbabc );};case *_bd .PdfObjectString :if len (_gbabc .String ())> 0{_eadef .V =_bd .MakeName (_gbabc .String ());_agcf (_eadef ,_eadef .V );};default:_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_eadef .PartialName (),_gbabc );_eadef .V =_gbabc ;};case *PdfFieldChoice :switch _gbabc .(type ){case *_bd .PdfObjectName :if len (_gbabc .String ())> 0{_eadef .V =_bd .MakeString (_gbabc .String ());_agcf (_eadef ,_gbabc );};case *_bd .PdfObjectString :if len (_gbabc .String ())> 0{_eadef .V =_gbabc ;_agcf (_eadef ,_bd .MakeName (_gbabc .String ()));};default:_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_eadef .PartialName (),_gbabc );_eadef .V =_gbabc ;};case *PdfFieldSignature :_aag .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_eadef .PartialName (),_gbabc );};return nil ;};

// ToPdfObject returns a stream object.
func (_ecadc *XObjectImage )ToPdfObject ()_bd .PdfObject {_acceb :=_ecadc ._abdfc ;_bfbfa :=_acceb .PdfObjectDictionary ;if _ecadc .Filter !=nil {_bfbfa =_ecadc .Filter .MakeStreamDict ();_acceb .PdfObjectDictionary =_bfbfa ;};_bfbfa .Set ("\u0054\u0079\u0070\u0065",_bd .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_bfbfa .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0049\u006d\u0061g\u0065"));_bfbfa .Set ("\u0057\u0069\u0064t\u0068",_bd .MakeInteger (*(_ecadc .Width )));_bfbfa .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bd .MakeInteger (*(_ecadc .Height )));if _ecadc .BitsPerComponent !=nil {_bfbfa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bd .MakeInteger (*(_ecadc .BitsPerComponent )));};if _ecadc .ColorSpace !=nil {_bfbfa .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ecadc .ColorSpace .ToPdfObject ());};_bfbfa .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_ecadc .Intent );_bfbfa .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_ecadc .ImageMask );_bfbfa .SetIfNotNil ("\u004d\u0061\u0073\u006b",_ecadc .Mask );_bfbfa .SetIfNotNil ("\u0044\u0065\u0063\u006f\u0064\u0065",_ecadc .Decode );_bfbfa .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_ecadc .Interpolate );_bfbfa .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_ecadc .Alternatives );_bfbfa .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_ecadc .SMask );_bfbfa .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_ecadc .SMaskInData );_bfbfa .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_ecadc .Matte );_bfbfa .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ecadc .Name );_bfbfa .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ecadc .StructParent );_bfbfa .SetIfNotNil ("\u0049\u0044",_ecadc .ID );_bfbfa .SetIfNotNil ("\u004f\u0050\u0049",_ecadc .OPI );_bfbfa .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ecadc .Metadata );_bfbfa .SetIfNotNil ("\u004f\u0043",_ecadc .OC );_bfbfa .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bd .MakeInteger (int64 (len (_ecadc .Stream ))));_acceb .Stream =_ecadc .Stream ;return _acceb ;};func _edgg (_eaec *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_eaec }};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _eb .ReadSeeker )(*PdfReader ,error ){_fabfc :=&PdfReader {_dedf :rs ,_fbcccg :map[_bd .PdfObject ]struct{}{},_befgd :_gbfb (),_abbg :false };_bccad ,_fcdad :=_bd .NewParser (rs );if _fcdad !=nil {return nil ,_fcdad ;};_fabfc ._efgga =_bccad ;_eafag ,_fcdad :=_fabfc .IsEncrypted ();if _fcdad !=nil {return nil ,_fcdad ;};if !_eafag {_fcdad =_fabfc .loadStructure ();if _fcdad !=nil {return nil ,_fcdad ;};};return _fabfc ,nil ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_dgbd *PdfReader )Decrypt (password []byte )(bool ,error ){_cbagg ,_aacge :=_dgbd ._efgga .Decrypt (password );if _aacge !=nil {return false ,_aacge ;};if !_cbagg {return false ,nil ;};_aacge =_dgbd .loadStructure ();if _aacge !=nil {_aag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_aacge );return false ,_aacge ;};return true ,nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_adeb *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _adeb .Alternate ==nil {_aag .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _adeb .N ==1{_aag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_dgcg :=NewPdfColorspaceDeviceGray ();return _dgcg .ColorToRGB (color );}else if _adeb .N ==3{_aag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return color ,nil ;}else if _adeb .N ==4{_aag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_begf :=NewPdfColorspaceDeviceCMYK ();return _begf .ColorToRGB (color );}else {return nil ,_ca .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_aag .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_adeb );return _adeb .Alternate .ColorToRGB (color );};

// AddAnnotation appends `annot` to the list of page annotations.
func (_ebbbd *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _ebbbd ._fgfgg ==nil {_ebbbd .GetAnnotations ();};_ebbbd ._fgfgg =append (_ebbbd ._fgfgg ,annot );};func _abgb (_ffdf _bd .PdfObject ,_cgfc *fontCommon )(*_fgg .CMap ,error ){_fdegb ,_bdbf :=_bd .GetStream (_ffdf );if !_bdbf {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_ffdf );return nil ,_bd .ErrTypeError ;};_cfab ,_abeb :=_bd .DecodeStream (_fdegb );if _abeb !=nil {return nil ,_abeb ;};_dcge ,_abeb :=_fgg .LoadCmapFromData (_cfab ,!_cgfc .isCIDFont ());if _abeb !=nil {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_fdegb .ObjectNumber ,_abeb );};return _dcge ,_abeb ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_gee :=NewPdfAction ();_gcea :=&PdfActionJavaScript {};_gcea .PdfAction =_gee ;_gee .SetContext (_gcea );return _gcea ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_ceffd *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _ceffd .UnderlyingCS ==nil {return nil ,_ca .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");};return _ceffd .UnderlyingCS .ColorFromFloats (vals );};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_fde :=NewPdfAnnotation ();_ebfb :=&PdfAnnotationText {};_ebfb .PdfAnnotation =_fde ;_ebfb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fde .SetContext (_ebfb );return _ebfb ;};

// IsCID returns true if the underlying font is CID.
func (_ggba *PdfFont )IsCID ()bool {return _ggba .baseFields ().isCIDFont ()};func (_ged *PdfReader )newPdfActionResetFormFromDict (_becb *_bd .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_becb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_becb .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _bd .PdfObject ;BS _bd .PdfObject ;LE _bd .PdfObject ;IC _bd .PdfObject ;LL _bd .PdfObject ;LLE _bd .PdfObject ;Cap _bd .PdfObject ;IT _bd .PdfObject ;LLO _bd .PdfObject ;CP _bd .PdfObject ;Measure _bd .PdfObject ;CO _bd .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_gaeg *PdfAnnotationCaret )ToPdfObject ()_bd .PdfObject {_gaeg .PdfAnnotation .ToPdfObject ();_acfd :=_gaeg ._ega ;_deeb :=_acfd .PdfObject .(*_bd .PdfObjectDictionary );_gaeg .PdfAnnotationMarkup .appendToPdfDictionary (_deeb );_deeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0043\u0061\u0072e\u0074"));_deeb .SetIfNotNil ("\u0052\u0044",_gaeg .RD );_deeb .SetIfNotNil ("\u0053\u0079",_gaeg .Sy );return _acfd ;};func (_gaedf *PdfAcroForm )filteredFields (_gfde FieldFilterFunc ,_gaca bool )[]*PdfField {if _gaedf ==nil {return nil ;};return _gfecc (_gaedf .Fields ,_gfde ,_gaca );};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_bad *PdfAnnotationWidget )Field ()*PdfField {return _bad ._deca };func (_bbgac *PdfWriter )copyObjects (){_fbdfe :=make (map[_bd .PdfObject ]_bd .PdfObject );_fdfgd :=make ([]_bd .PdfObject ,0,len (_bbgac ._fceb ));_daef :=make (map[_bd .PdfObject ]struct{},len (_bbgac ._fceb ));_dgdcdb :=make (map[_bd .PdfObject ]struct{});for _ ,_geecfac :=range _bbgac ._fceb {_baeg :=_bbgac .copyObject (_geecfac ,_fbdfe ,_dgdcdb ,false );if _ ,_bbafe :=_dgdcdb [_geecfac ];_bbafe {continue ;};_fdfgd =append (_fdfgd ,_baeg );_daef [_baeg ]=struct{}{};};_bbgac ._fceb =_fdfgd ;_bbgac ._egeab =_daef ;_bbgac ._fagb =_bbgac .copyObject (_bbgac ._fagb ,_fbdfe ,nil ,false ).(*_bd .PdfIndirectObject );_bbgac ._deade =_bbgac .copyObject (_bbgac ._deade ,_fbdfe ,nil ,false ).(*_bd .PdfIndirectObject );if _bbgac ._gbdf !=nil {_bbgac ._gbdf =_bbgac .copyObject (_bbgac ._gbdf ,_fbdfe ,nil ,false ).(*_bd .PdfIndirectObject );};if _bbgac ._dfbe {_gbdcf :=make (map[_bd .PdfObject ]int64 );for _ddcc ,_eeeab :=range _bbgac ._abdbb {if _adffa ,_dbacga :=_fbdfe [_ddcc ];_dbacga {_gbdcf [_adffa ]=_eeeab ;}else {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");};};_bbgac ._abdbb =_gbdcf ;};};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_fcf :=&PdfAnnotation {};_fcf ._ega =_bd .MakeIndirectObject (_bd .MakeDict ());return _fcf ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_ade *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};func _eegga (_dafec *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_gffgd ,_ebfcd :=_bd .GetDict (_dafec .AP );if !_ebfcd {return nil ,nil ,_ca .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _gffgd ==nil {return nil ,nil ,nil ;};_eacb ,_ebfcd :=_bd .GetArray (_dafec .Rect );if !_ebfcd ||_eacb .Len ()!=4{return nil ,nil ,_ca .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_dgdfc ,_cedf :=NewPdfRectangle (*_eacb );if _cedf !=nil {return nil ,nil ,_cedf ;};_dggd :=_bd .TraceToDirectObject (_gffgd .Get ("\u004e"));switch _cdfg :=_dggd .(type ){case *_bd .PdfObjectStream :_dbgb :=_cdfg ;_edeb ,_fadfa :=NewXObjectFormFromStream (_dbgb );return _edeb ,_dgdfc ,_fadfa ;case *_bd .PdfObjectDictionary :_fdbgg :=_cdfg ;_geec ,_fgbg :=_bd .GetName (_dafec .AS );if !_fgbg {return nil ,nil ,nil ;};if _fdbgg .Get (*_geec )==nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");return nil ,nil ,nil ;};_dddb ,_fgbg :=_bd .GetStream (_fdbgg .Get (*_geec ));if !_fgbg {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_geec );return nil ,nil ,_ca .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_gcbb ,_fddg :=NewXObjectFormFromStream (_dddb );return _gcbb ,_dgdfc ,_fddg ;};_aag .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_dggd );return nil ,nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_gbccc *PdfShading )GetContext ()PdfModel {return _gbccc ._ebcbd };func (_bdc *PdfReader )newPdfActionJavaScriptFromDict (_gfce *_bd .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_gfce .Get ("\u004a\u0053")},nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_cccaa *PdfOutlineTreeNode )GetContainingPdfObject ()_bd .PdfObject {return _cccaa .GetContext ().GetContainingPdfObject ();};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_bgac *PdfOutlineItem )ToPdfObject ()_bd .PdfObject {_ebbgf :=_bgac ._bedcc ;_baab :=_ebbgf .PdfObject .(*_bd .PdfObjectDictionary );_baab .Set ("\u0054\u0069\u0074l\u0065",_bgac .Title );if _bgac .A !=nil {_baab .Set ("\u0041",_bgac .A );};if _acade :=_baab .Get ("\u0053\u0045");_acade !=nil {_baab .Remove ("\u0053\u0045");};if _bgac .C !=nil {_baab .Set ("\u0043",_bgac .C );};if _bgac .Dest !=nil {_baab .Set ("\u0044\u0065\u0073\u0074",_bgac .Dest );};if _bgac .F !=nil {_baab .Set ("\u0046",_bgac .F );};if _bgac .Count !=nil {_baab .Set ("\u0043\u006f\u0075n\u0074",_bd .MakeInteger (*_bgac .Count ));};if _bgac .Next !=nil {_baab .Set ("\u004e\u0065\u0078\u0074",_bgac .Next .ToPdfObject ());};if _bgac .First !=nil {_baab .Set ("\u0046\u0069\u0072s\u0074",_bgac .First .ToPdfObject ());};if _bgac .Prev !=nil {_baab .Set ("\u0050\u0072\u0065\u0076",_bgac .Prev .GetContext ().GetContainingPdfObject ());};if _bgac .Last !=nil {_baab .Set ("\u004c\u0061\u0073\u0074",_bgac .Last .GetContext ().GetContainingPdfObject ());};if _bgac .Parent !=nil {_baab .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bgac .Parent .GetContext ().GetContainingPdfObject ());};return _ebbgf ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_ffbg *Outline )ToPdfOutline ()*PdfOutline {_bddfd :=NewPdfOutline ();var _gagda []*PdfOutlineItem ;var _gbeca int64 ;var _cbgce *PdfOutlineItem ;for _ ,_dbed :=range _ffbg .Entries {_bfbdf ,_fgbfb :=_dbed .ToPdfOutlineItem ();_bfbdf .Parent =&_bddfd .PdfOutlineTreeNode ;if _cbgce !=nil {_cbgce .Next =&_bfbdf .PdfOutlineTreeNode ;_bfbdf .Prev =&_cbgce .PdfOutlineTreeNode ;};_gagda =append (_gagda ,_bfbdf );_gbeca +=_fgbfb ;_cbgce =_bfbdf ;};_gfedb :=int64 (len (_gagda ));_gbeca +=int64 (_gfedb );if _gfedb > 0{_bddfd .First =&_gagda [0].PdfOutlineTreeNode ;_bddfd .Last =&_gagda [_gfedb -1].PdfOutlineTreeNode ;_bddfd .Count =&_gbeca ;};return _bddfd ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_gcegf *PdfFont )CharcodesToStrings (charcodes []_ff .CharCode )([]string ,int ,int ){_ffbee :=_gcegf .baseFields ();_egffe :=make ([]string ,0,len (charcodes ));_efead :=0;for _ ,_abadc :=range charcodes {if _ffbee ._cecd !=nil {if _eaggg ,_cabeg :=_ffbee ._cecd .CharcodeToUnicode (_fgg .CharCode (_abadc ));_cabeg {_egffe =append (_egffe ,_eaggg );continue ;};};_beag :=_gcegf .Encoder ();if _beag !=nil {if _fgfe ,_geggg :=_beag .CharcodeToRune (_abadc );_geggg {_egffe =append (_egffe ,string (_fgfe ));continue ;};};_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_abadc ,charcodes ,_ffbee .isCIDFont (),_gcegf ,_beag );_efead ++;_egffe =append (_egffe ,_fgg .MissingCodeString );};if _efead !=0{_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_efead ,_gcegf );};return _egffe ,len (_egffe ),_efead ;};func _dcae (_ggfg *_adg .ImageBase )(_afcce Image ){_afcce .Width =int64 (_ggfg .Width );_afcce .Height =int64 (_ggfg .Height );_afcce .BitsPerComponent =int64 (_ggfg .BitsPerComponent );_afcce .ColorComponents =_ggfg .ColorComponents ;_afcce .Data =_ggfg .Data ;_afcce ._fbadbga =_ggfg .Decode ;_afcce ._dcbb =_ggfg .Alpha ;return _afcce ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_gbaef *Image )AlphaMap (mapFunc AlphaMapFunc ){for _bbff ,_eefbb :=range _gbaef ._dcbb {_gbaef ._dcbb [_bbff ]=mapFunc (_eefbb );};};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_cgf :=NewPdfAnnotation ();_dag :=&PdfAnnotationUnderline {};_dag .PdfAnnotation =_cgf ;_dag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgf .SetContext (_dag );return _dag ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_gabf *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _fgaca []*PdfField ;if _gabf .AcroForm !=nil {_fgaca =_gabf .AcroForm .AllFields ();};_fededf :=make (map[*PdfField ]struct{},len (_fgaca ));for _ ,_ddaec :=range _fgaca {_fededf [_ddaec ]=struct{}{};};for _ ,_ffcad :=range _gabf .PageList {_eabba ,_gbdd :=_ffcad .GetAnnotations ();if _gbdd !=nil {return false ,_gbdd ;};for _ ,_cegfg :=range _eabba {_bfbdb ,_ccba :=_cegfg .GetContext ().(*PdfAnnotationWidget );if !_ccba {continue ;};_aacdg :=_bfbdb .Field ();if _aacdg ==nil {return true ,nil ;};if _ ,_cebdg :=_fededf [_aacdg ];!_cebdg {return true ,nil ;};};};return false ,nil ;};

// GetContentStream returns the pattern cell's content stream
func (_eacea *PdfTilingPattern )GetContentStream ()([]byte ,error ){_aeba ,_ ,_ebbfb :=_eacea .GetContentStreamWithEncoder ();return _aeba ,_ebbfb ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_ddcb *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_gdcg :=func (_dbff float64 )float64 {if _dbff >=6.0/29{return _dbff *_dbff *_dbff ;};return 108.0/841*(_dbff -4/29);};_bcegf ,_gdgg :=color .(*PdfColorLab );if !_gdgg {_aag .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_bcegf .L ();AStar :=_bcegf .A ();BStar :=_bcegf .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;X :=_ddcb .WhitePoint [0]*_gdcg (L );Y :=_ddcb .WhitePoint [1]*_gdcg (M );Z :=_ddcb .WhitePoint [2]*_gdcg (N );_cada :=3.240479*X +-1.537150*Y +-0.498535*Z ;_fbca :=-0.969256*X +1.875992*Y +0.041556*Z ;_ebda :=0.055648*X +-0.204043*Y +1.057311*Z ;_cada =_cg .Min (_cg .Max (_cada ,0),1.0);_fbca =_cg .Min (_cg .Max (_fbca ,0),1.0);_ebda =_cg .Min (_cg .Max (_ebda ,0),1.0);return NewPdfColorDeviceRGB (_cada ,_fbca ,_ebda ),nil ;};func (_dcee *PdfReader )loadAnnotations (_dagbb _bd .PdfObject )([]*PdfAnnotation ,error ){_eceg ,_efbca :=_bd .GetArray (_dagbb );if !_efbca {return nil ,_c .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _acaf []*PdfAnnotation ;for _ ,_egdcd :=range _eceg .Elements (){_egdcd =_bd .ResolveReference (_egdcd );if _ ,_gded :=_egdcd .(*_bd .PdfObjectNull );_gded {continue ;};_badcb ,_caag :=_egdcd .(*_bd .PdfObjectDictionary );_fdabe ,_ddcge :=_egdcd .(*_bd .PdfIndirectObject );if _caag {_fdabe =&_bd .PdfIndirectObject {};_fdabe .PdfObject =_badcb ;}else {if !_ddcge {return nil ,_c .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");};};_efabf ,_eacc :=_dcee .newPdfAnnotationFromIndirectObject (_fdabe );if _eacc !=nil {return nil ,_eacc ;};switch _cfdbd :=_efabf .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_gbbc :=range _dcee .AcroForm .AllFields (){if _gbbc ._gcacg ==_cfdbd .Parent {_cfdbd ._deca =_gbbc ;break ;};};};if _efabf !=nil {_acaf =append (_acaf ,_efabf );};};return _acaf ,nil ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_abdaf *Image )ToJBIG2Image ()(*_bd .JBIG2Image ,error ){_bggg ,_feegc :=_abdaf .ToGoImage ();if _feegc !=nil {return nil ,_feegc ;};return _bd .GoImageToJBIG2 (_bggg ,_bd .JB2ImageAutoThreshold );};

// SetFlag sets the flag for the field.
func (_cbfb *PdfField )SetFlag (flag FieldFlag ){_cbfb .Ff =_bd .MakeInteger (int64 (flag ))};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_dcfa *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_bd .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adab ,_dbdf :=_bd .GetNumbersAsFloat (objects );if _dbdf !=nil {return nil ,_dbdf ;};return _dcfa .ColorFromFloats (_adab );};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _bd .PdfObject ;H _bd .PdfObject ;};func (_bbaa *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_agccf *PdfAppender )UpdatePage (page *PdfPage ){_agccf .updateObjectsDeep (page .ToPdfObject (),nil );};

// ToInteger convert to an integer format.
func (_fgaff *PdfColorDeviceGray )ToInteger (bits int )uint32 {_gdfg :=_cg .Pow (2,float64 (bits ))-1;return uint32 (_gdfg *_fgaff .Val ());};

// ToPdfObject returns a PDF object representation of the outline.
func (_aceee *Outline )ToPdfObject ()_bd .PdfObject {return _aceee .ToPdfOutline ().ToPdfObject ()};

// AllFields returns a flattened list of all fields in the form.
func (_bbdd *PdfAcroForm )AllFields ()[]*PdfField {if _bbdd ==nil {return nil ;};var _fabf []*PdfField ;if _bbdd .Fields !=nil {for _ ,_ggefc :=range *_bbdd .Fields {_fabf =append (_fabf ,_bgfe (_ggefc )...);};};return _fabf ;};func _agcf (_fbaee *PdfField ,_bgcdd _bd .PdfObject ){for _ ,_daaf :=range _fbaee .Annotations {_daaf .AS =_bgcdd ;_daaf .ToPdfObject ();};};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _bd .PdfObject ;RichMediaContent _bd .PdfObject ;};func _bgfe (_aaea *PdfField )[]*PdfField {_fffd :=[]*PdfField {_aaea };for _ ,_ffaf :=range _aaea .Kids {_fffd =append (_fffd ,_bgfe (_ffaf )...);};return _fffd ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_bfbb *PdfColorCalGray )GetNumComponents ()int {return 1};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _bd .PdfObject ;BS _bd .PdfObject ;};func (_acf *PdfReader )newPdfActionGotoEFromDict (_ead *_bd .PdfObjectDictionary )(*PdfActionGoToE ,error ){_abac ,_agf :=_gfgg (_ead .Get ("\u0046"));if _agf !=nil {return nil ,_agf ;};return &PdfActionGoToE {D :_ead .Get ("\u0044"),NewWindow :_ead .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_ead .Get ("\u0054"),F :_abac },nil ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_fdgg =author };

// C returns the value of the cyan component of the color.
func (_ddegb *PdfColorDeviceCMYK )C ()float64 {return float64 (_ddegb [0])};

// ToPdfObject implements interface PdfModel.
func (_ecdd *PdfAnnotationSquare )ToPdfObject ()_bd .PdfObject {_ecdd .PdfAnnotation .ToPdfObject ();_acgd :=_ecdd ._ega ;_fca :=_acgd .PdfObject .(*_bd .PdfObjectDictionary );if _ecdd .PdfAnnotationMarkup !=nil {_ecdd .PdfAnnotationMarkup .appendToPdfDictionary (_fca );};_fca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_fca .SetIfNotNil ("\u0042\u0053",_ecdd .BS );_fca .SetIfNotNil ("\u0049\u0043",_ecdd .IC );_fca .SetIfNotNil ("\u0042\u0045",_ecdd .BE );_fca .SetIfNotNil ("\u0052\u0044",_ecdd .RD );return _acgd ;};func _ecgc (_dbcb *_bd .PdfObjectStream )(*PdfFunctionType0 ,error ){_dbcge :=&PdfFunctionType0 {};_dbcge ._ffbdc =_dbcb ;_afcc :=_dbcb .PdfObjectDictionary ;_bddd ,_adec :=_bd .TraceToDirectObject (_afcc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bd .PdfObjectArray );if !_adec {_aag .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bddd .Len ()< 0||_bddd .Len ()%2!=0{_aag .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ca .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dbcge .NumInputs =_bddd .Len ()/2;_cdeg ,_gedfd :=_bddd .ToFloat64Array ();if _gedfd !=nil {return nil ,_gedfd ;};_dbcge .Domain =_cdeg ;_bddd ,_adec =_bd .TraceToDirectObject (_afcc .Get ("\u0052\u0061\u006eg\u0065")).(*_bd .PdfObjectArray );if !_adec {_aag .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bddd .Len ()< 0||_bddd .Len ()%2!=0{return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dbcge .NumOutputs =_bddd .Len ()/2;_beefb ,_gedfd :=_bddd .ToFloat64Array ();if _gedfd !=nil {return nil ,_gedfd ;};_dbcge .Range =_beefb ;_bddd ,_adec =_bd .TraceToDirectObject (_afcc .Get ("\u0053\u0069\u007a\u0065")).(*_bd .PdfObjectArray );if !_adec {_aag .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cggfb ,_gedfd :=_bddd .ToIntegerArray ();if _gedfd !=nil {return nil ,_gedfd ;};if len (_cggfb )!=_dbcge .NumInputs {_aag .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbcge .Size =_cggfb ;_cbdc ,_adec :=_bd .TraceToDirectObject (_afcc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_bd .PdfObjectInteger );if !_adec {_aag .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if *_cbdc !=1&&*_cbdc !=2&&*_cbdc !=4&&*_cbdc !=8&&*_cbdc !=12&&*_cbdc !=16&&*_cbdc !=24&&*_cbdc !=32{_aag .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_cbdc );return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbcge .BitsPerSample =int (*_cbdc );_dbcge .Order =1;_gfda ,_adec :=_bd .TraceToDirectObject (_afcc .Get ("\u004f\u0072\u0064e\u0072")).(*_bd .PdfObjectInteger );if _adec {if *_gfda !=1&&*_gfda !=3{_aag .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_gfda );return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbcge .Order =int (*_gfda );};_bddd ,_adec =_bd .TraceToDirectObject (_afcc .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bd .PdfObjectArray );if _adec {_bbagc ,_efbfa :=_bddd .ToFloat64Array ();if _efbfa !=nil {return nil ,_efbfa ;};_dbcge .Encode =_bbagc ;};_bddd ,_adec =_bd .TraceToDirectObject (_afcc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_bd .PdfObjectArray );if _adec {_gdcfe ,_gegeg :=_bddd .ToFloat64Array ();if _gegeg !=nil {return nil ,_gegeg ;};_dbcge .Decode =_gdcfe ;};_deagb ,_gedfd :=_bd .DecodeStream (_dbcb );if _gedfd !=nil {return nil ,_gedfd ;};_dbcge ._bedcf =_deagb ;return _dbcge ,nil ;};

// SetForms sets the Acroform for a PDF file.
func (_eacaa *PdfWriter )SetForms (form *PdfAcroForm )error {_eacaa ._baggg =form ;return nil };

// IsColored specifies if the pattern is colored.
func (_ebdg *PdfTilingPattern )IsColored ()bool {if _ebdg .PaintType !=nil &&*_ebdg .PaintType ==1{return true ;};return false ;};

// ToPdfObject implements interface PdfModel.
func (_gfb *PdfActionThread )ToPdfObject ()_bd .PdfObject {_gfb .PdfAction .ToPdfObject ();_caf :=_gfb ._ccf ;_eeed :=_caf .PdfObject .(*_bd .PdfObjectDictionary );_eeed .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeThread )));if _gfb .F !=nil {_eeed .Set ("\u0046",_gfb .F .ToPdfObject ());};_eeed .SetIfNotNil ("\u0044",_gfb .D );_eeed .SetIfNotNil ("\u0042",_gfb .B );return _caf ;};func (_eedfd *PdfReader )lookupPageByObject (_afggc _bd .PdfObject )(*PdfPage ,error ){return nil ,_ca .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// ToPdfObject returns the PDF representation of the colorspace.
func (_dbac *PdfColorspaceDeviceGray )ToPdfObject ()_bd .PdfObject {return _bd .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func _gcbbc (_eebe _bd .PdfObject )(*PdfFunctionType3 ,error ){_dcdf :=&PdfFunctionType3 {};var _agfg *_bd .PdfObjectDictionary ;if _gcdf ,_dbeb :=_eebe .(*_bd .PdfIndirectObject );_dbeb {_dfac ,_ggddda :=_gcdf .PdfObject .(*_bd .PdfObjectDictionary );if !_ggddda {return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dcdf ._bgbf =_gcdf ;_agfg =_dfac ;}else if _egfda ,_adee :=_eebe .(*_bd .PdfObjectDictionary );_adee {_agfg =_egfda ;}else {return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_edeg ,_ebaf :=_bd .TraceToDirectObject (_agfg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bd .PdfObjectArray );if !_ebaf {_aag .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _edeg .Len ()!=2{_aag .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ca .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_acde ,_aggf :=_edeg .ToFloat64Array ();if _aggf !=nil {return nil ,_aggf ;};_dcdf .Domain =_acde ;_edeg ,_ebaf =_bd .TraceToDirectObject (_agfg .Get ("\u0052\u0061\u006eg\u0065")).(*_bd .PdfObjectArray );if _ebaf {if _edeg .Len ()< 0||_edeg .Len ()%2!=0{return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cddd ,_gead :=_edeg .ToFloat64Array ();if _gead !=nil {return nil ,_gead ;};_dcdf .Range =_cddd ;};_edeg ,_ebaf =_bd .TraceToDirectObject (_agfg .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_bd .PdfObjectArray );if !_ebaf {_aag .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dcdf .Functions =[]PdfFunction {};for _ ,_fbee :=range _edeg .Elements (){_cbcd ,_bbfa :=_cgdeb (_fbee );if _bbfa !=nil {return nil ,_bbfa ;};_dcdf .Functions =append (_dcdf .Functions ,_cbcd );};_edeg ,_ebaf =_bd .TraceToDirectObject (_agfg .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_bd .PdfObjectArray );if !_ebaf {_aag .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_beae ,_aggf :=_edeg .ToFloat64Array ();if _aggf !=nil {return nil ,_aggf ;};_dcdf .Bounds =_beae ;if len (_dcdf .Bounds )!=len (_dcdf .Functions )-1{_aag .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_dcdf .Bounds ),len (_dcdf .Functions ));return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edeg ,_ebaf =_bd .TraceToDirectObject (_agfg .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bd .PdfObjectArray );if !_ebaf {_aag .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gegcc ,_aggf :=_edeg .ToFloat64Array ();if _aggf !=nil {return nil ,_aggf ;};_dcdf .Encode =_gegcc ;if len (_dcdf .Encode )!=2*len (_dcdf .Functions ){_aag .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_dcdf .Encode ),len (_dcdf .Functions ));return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _dcdf ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_efge *PdfColorspaceICCBased )ToPdfObject ()_bd .PdfObject {_ecafg :=&_bd .PdfObjectArray {};_ecafg .Append (_bd .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _faecc *_bd .PdfObjectStream ;if _efge ._dcgf !=nil {_faecc =_efge ._dcgf ;}else {_faecc =&_bd .PdfObjectStream {};};_cagc :=_bd .MakeDict ();_cagc .Set ("\u004e",_bd .MakeInteger (int64 (_efge .N )));if _efge .Alternate !=nil {_cagc .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_efge .Alternate .ToPdfObject ());};if _efge .Metadata !=nil {_cagc .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_efge .Metadata );};if _efge .Range !=nil {var _agga []_bd .PdfObject ;for _ ,_gggf :=range _efge .Range {_agga =append (_agga ,_bd .MakeFloat (_gggf ));};_cagc .Set ("\u0052\u0061\u006eg\u0065",_bd .MakeArray (_agga ...));};_cagc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bd .MakeInteger (int64 (len (_efge .Data ))));_faecc .Stream =_efge .Data ;_faecc .PdfObjectDictionary =_cagc ;_ecafg .Append (_faecc );if _efge ._edac !=nil {_efge ._edac .PdfObject =_ecafg ;return _efge ._edac ;};return _ecafg ;};func (_cfae *pdfFontType0 )bytesToCharcodes (_ceae []byte )([]_ff .CharCode ,bool ){if _cfae ._aaefc ==nil {return nil ,false ;};_fdgf ,_fcgc :=_cfae ._aaefc .BytesToCharcodes (_ceae );if !_fcgc {return nil ,false ;};_bfcag :=make ([]_ff .CharCode ,len (_fdgf ));for _eedf ,_effca :=range _fdgf {_bfcag [_eedf ]=_ff .CharCode (_effca );};return _bfcag ,true ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_cgfga *PdfWriter )SetOptimizer (optimizer Optimizer ){_cgfga ._aegdb =optimizer };

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_ddgba pdfFont };func (_egcc *PdfReader )newPdfAnnotationFromIndirectObject (_aea *_bd .PdfIndirectObject )(*PdfAnnotation ,error ){_ecaf ,_cgd :=_aea .PdfObject .(*_bd .PdfObjectDictionary );if !_cgd {return nil ,_c .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_egcc ._befgd .GetModelFromPrimitive (_ecaf );model !=nil {_dbee ,_bfbf :=model .(*PdfAnnotation );if !_bfbf {return nil ,_c .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");};return _dbee ,nil ;};_gdec :=&PdfAnnotation {};_gdec ._ega =_aea ;_egcc ._befgd .Register (_ecaf ,_gdec );if _bfbg :=_ecaf .Get ("\u0054\u0079\u0070\u0065");_bfbg !=nil {_cfd ,_bdd :=_bfbg .(*_bd .PdfObjectName );if !_bdd {_aag .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bfbg );}else {if *_cfd !="\u0041\u006e\u006eo\u0074"{_aag .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_cfd );};};};if _ddbg :=_ecaf .Get ("\u0052\u0065\u0063\u0074");_ddbg !=nil {_gdec .Rect =_ddbg ;};if _fba :=_ecaf .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_fba !=nil {_gdec .Contents =_fba ;};if _aefg :=_ecaf .Get ("\u0050");_aefg !=nil {_gdec .P =_aefg ;};if _bdf :=_ecaf .Get ("\u004e\u004d");_bdf !=nil {_gdec .NM =_bdf ;};if _bfab :=_ecaf .Get ("\u004d");_bfab !=nil {_gdec .M =_bfab ;};if _gegc :=_ecaf .Get ("\u0046");_gegc !=nil {_gdec .F =_gegc ;};if _fdaf :=_ecaf .Get ("\u0041\u0050");_fdaf !=nil {_gdec .AP =_fdaf ;};if _dfe :=_ecaf .Get ("\u0041\u0053");_dfe !=nil {_gdec .AS =_dfe ;};if _aedd :=_ecaf .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_aedd !=nil {_gdec .Border =_aedd ;};if _fgc :=_ecaf .Get ("\u0043");_fgc !=nil {_gdec .C =_fgc ;};if _aeac :=_ecaf .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_aeac !=nil {_gdec .StructParent =_aeac ;};if _afdc :=_ecaf .Get ("\u004f\u0043");_afdc !=nil {_gdec .OC =_afdc ;};_cga :=_ecaf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _cga ==nil {_aag .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");_gdec ._bfa =nil ;return _gdec ,nil ;};_deb ,_cbf :=_cga .(*_bd .PdfObjectName );if !_cbf {_aag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cga );return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_cga );};switch *_deb {case "\u0054\u0065\u0078\u0074":_dbdd ,_bcbg :=_egcc .newPdfAnnotationTextFromDict (_ecaf );if _bcbg !=nil {return nil ,_bcbg ;};_dbdd .PdfAnnotation =_gdec ;_gdec ._bfa =_dbdd ;return _gdec ,nil ;case "\u004c\u0069\u006e\u006b":_cgfg ,_edc :=_egcc .newPdfAnnotationLinkFromDict (_ecaf );if _edc !=nil {return nil ,_edc ;};_cgfg .PdfAnnotation =_gdec ;_gdec ._bfa =_cgfg ;return _gdec ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_fded ,_acbb :=_egcc .newPdfAnnotationFreeTextFromDict (_ecaf );if _acbb !=nil {return nil ,_acbb ;};_fded .PdfAnnotation =_gdec ;_gdec ._bfa =_fded ;return _gdec ,nil ;case "\u004c\u0069\u006e\u0065":_ccgc ,_ede :=_egcc .newPdfAnnotationLineFromDict (_ecaf );if _ede !=nil {return nil ,_ede ;};_ccgc .PdfAnnotation =_gdec ;_gdec ._bfa =_ccgc ;_aag .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_gdec ,_gdec );_aag .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_ccgc ,_ccgc );_aag .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_ccgc .PdfAnnotationMarkup ,_ccgc .PdfAnnotationMarkup );return _gdec ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_agc ,_gdab :=_egcc .newPdfAnnotationSquareFromDict (_ecaf );if _gdab !=nil {return nil ,_gdab ;};_agc .PdfAnnotation =_gdec ;_gdec ._bfa =_agc ;return _gdec ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_afag ,_bac :=_egcc .newPdfAnnotationCircleFromDict (_ecaf );if _bac !=nil {return nil ,_bac ;};_afag .PdfAnnotation =_gdec ;_gdec ._bfa =_afag ;return _gdec ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_fefe ,_acfg :=_egcc .newPdfAnnotationPolygonFromDict (_ecaf );if _acfg !=nil {return nil ,_acfg ;};_fefe .PdfAnnotation =_gdec ;_gdec ._bfa =_fefe ;return _gdec ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_eed ,_cee :=_egcc .newPdfAnnotationPolyLineFromDict (_ecaf );if _cee !=nil {return nil ,_cee ;};_eed .PdfAnnotation =_gdec ;_gdec ._bfa =_eed ;return _gdec ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_dbgd ,_cbb :=_egcc .newPdfAnnotationHighlightFromDict (_ecaf );if _cbb !=nil {return nil ,_cbb ;};_dbgd .PdfAnnotation =_gdec ;_gdec ._bfa =_dbgd ;return _gdec ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_fea ,_feg :=_egcc .newPdfAnnotationUnderlineFromDict (_ecaf );if _feg !=nil {return nil ,_feg ;};_fea .PdfAnnotation =_gdec ;_gdec ._bfa =_fea ;return _gdec ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_aeee ,_ebba :=_egcc .newPdfAnnotationSquigglyFromDict (_ecaf );if _ebba !=nil {return nil ,_ebba ;};_aeee .PdfAnnotation =_gdec ;_gdec ._bfa =_aeee ;return _gdec ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_ceg ,_cffg :=_egcc .newPdfAnnotationStrikeOut (_ecaf );if _cffg !=nil {return nil ,_cffg ;};_ceg .PdfAnnotation =_gdec ;_gdec ._bfa =_ceg ;return _gdec ,nil ;case "\u0043\u0061\u0072e\u0074":_ddfb ,_eddb :=_egcc .newPdfAnnotationCaretFromDict (_ecaf );if _eddb !=nil {return nil ,_eddb ;};_ddfb .PdfAnnotation =_gdec ;_gdec ._bfa =_ddfb ;return _gdec ,nil ;case "\u0053\u0074\u0061m\u0070":_cbg ,_edcb :=_egcc .newPdfAnnotationStampFromDict (_ecaf );if _edcb !=nil {return nil ,_edcb ;};_cbg .PdfAnnotation =_gdec ;_gdec ._bfa =_cbg ;return _gdec ,nil ;case "\u0049\u006e\u006b":_gceg ,_ddd :=_egcc .newPdfAnnotationInkFromDict (_ecaf );if _ddd !=nil {return nil ,_ddd ;};_gceg .PdfAnnotation =_gdec ;_gdec ._bfa =_gceg ;return _gdec ,nil ;case "\u0050\u006f\u0070u\u0070":_gad ,_gbba :=_egcc .newPdfAnnotationPopupFromDict (_ecaf );if _gbba !=nil {return nil ,_gbba ;};_gad .PdfAnnotation =_gdec ;_gdec ._bfa =_gad ;return _gdec ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_ddc ,_cgba :=_egcc .newPdfAnnotationFileAttachmentFromDict (_ecaf );if _cgba !=nil {return nil ,_cgba ;};_ddc .PdfAnnotation =_gdec ;_gdec ._bfa =_ddc ;return _gdec ,nil ;case "\u0053\u006f\u0075n\u0064":_cbfa ,_aeef :=_egcc .newPdfAnnotationSoundFromDict (_ecaf );if _aeef !=nil {return nil ,_aeef ;};_cbfa .PdfAnnotation =_gdec ;_gdec ._bfa =_cbfa ;return _gdec ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_cefc ,_cgda :=_egcc .newPdfAnnotationRichMediaFromDict (_ecaf );if _cgda !=nil {return nil ,_cgda ;};_cefc .PdfAnnotation =_gdec ;_gdec ._bfa =_cefc ;return _gdec ,nil ;case "\u004d\u006f\u0076i\u0065":_bca ,_fbab :=_egcc .newPdfAnnotationMovieFromDict (_ecaf );if _fbab !=nil {return nil ,_fbab ;};_bca .PdfAnnotation =_gdec ;_gdec ._bfa =_bca ;return _gdec ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_ccfc ,_aeeef :=_egcc .newPdfAnnotationScreenFromDict (_ecaf );if _aeeef !=nil {return nil ,_aeeef ;};_ccfc .PdfAnnotation =_gdec ;_gdec ._bfa =_ccfc ;return _gdec ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_acfe ,_cadf :=_egcc .newPdfAnnotationWidgetFromDict (_ecaf );if _cadf !=nil {return nil ,_cadf ;};_acfe .PdfAnnotation =_gdec ;_gdec ._bfa =_acfe ;return _gdec ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_ffa ,_decd :=_egcc .newPdfAnnotationPrinterMarkFromDict (_ecaf );if _decd !=nil {return nil ,_decd ;};_ffa .PdfAnnotation =_gdec ;_gdec ._bfa =_ffa ;return _gdec ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_ebc ,_cab :=_egcc .newPdfAnnotationTrapNetFromDict (_ecaf );if _cab !=nil {return nil ,_cab ;};_ebc .PdfAnnotation =_gdec ;_gdec ._bfa =_ebc ;return _gdec ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_afee ,_aeg :=_egcc .newPdfAnnotationWatermarkFromDict (_ecaf );if _aeg !=nil {return nil ,_aeg ;};_afee .PdfAnnotation =_gdec ;_gdec ._bfa =_afee ;return _gdec ,nil ;case "\u0033\u0044":_daga ,_fdag :=_egcc .newPdfAnnotation3DFromDict (_ecaf );if _fdag !=nil {return nil ,_fdag ;};_daga .PdfAnnotation =_gdec ;_gdec ._bfa =_daga ;return _gdec ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_acbbb ,_fgce :=_egcc .newPdfAnnotationProjectionFromDict (_ecaf );if _fgce !=nil {return nil ,_fgce ;};_acbbb .PdfAnnotation =_gdec ;_gdec ._bfa =_acbbb ;return _gdec ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_gfe ,_gcc :=_egcc .newPdfAnnotationRedactFromDict (_ecaf );if _gcc !=nil {return nil ,_gcc ;};_gfe .PdfAnnotation =_gdec ;_gdec ._bfa =_gfe ;return _gdec ,nil ;};_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_deb );return nil ,nil ;};var ImageHandling ImageHandler =DefaultImageHandler {};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_efee *modelManager )GetModelFromPrimitive (primitive _bd .PdfObject )PdfModel {model ,_efdfc :=_efee ._eded [primitive ];if !_efdfc {return nil ;};return model ;};

// ToGoTime returns the date in time.Time format.
func (_fffec PdfDate )ToGoTime ()_b .Time {_eedef :=int (_fffec ._fccfce *60*60+_fffec ._ccegg *60);switch _fffec ._ggdf {case '-':_eedef =-_eedef ;case 'Z':_eedef =0;};_eggc :=_c .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_fffec ._ggdf ,_fffec ._fccfce ,_fffec ._ccegg );_bccde :=_b .FixedZone (_eggc ,_eedef );return _b .Date (int (_fffec ._fagf ),_b .Month (_fffec ._adfc ),int (_fffec ._gbfe ),int (_fffec ._beeg ),int (_fffec ._ebfbe ),int (_fffec ._dfecg ),0,_bccde );};func (_edbe *PdfReader )newPdfActionFromIndirectObject (_cfe *_bd .PdfIndirectObject )(*PdfAction ,error ){_dbf ,_dcd :=_cfe .PdfObject .(*_bd .PdfObjectDictionary );if !_dcd {return nil ,_c .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_edbe ._befgd .GetModelFromPrimitive (_dbf );model !=nil {_cge ,_aba :=model .(*PdfAction );if !_aba {return nil ,_c .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");};return _cge ,nil ;};_egc :=&PdfAction {};_egc ._ccf =_cfe ;_edbe ._befgd .Register (_dbf ,_egc );if _ecfc :=_dbf .Get ("\u0054\u0079\u0070\u0065");_ecfc !=nil {_df ,_dda :=_ecfc .(*_bd .PdfObjectName );if !_dda {_aag .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ecfc );}else {if *_df !="\u0041\u0063\u0074\u0069\u006f\u006e"{_aag .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_df );};_egc .Type =_df ;};};if _fbg :=_dbf .Get ("\u004e\u0065\u0078\u0074");_fbg !=nil {_egc .Next =_fbg ;};if _abb :=_dbf .Get ("\u0053");_abb !=nil {_egc .S =_abb ;};_egf ,_ecd :=_egc .S .(*_bd .PdfObjectName );if !_ecd {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_egc .S );return nil ,_c .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_egc .S );};_def :=PdfActionType (_egf .String ());switch _def {case ActionTypeGoTo :_dcb ,_ba :=_edbe .newPdfActionGotoFromDict (_dbf );if _ba !=nil {return nil ,_ba ;};_dcb .PdfAction =_egc ;_egc ._cadc =_dcb ;return _egc ,nil ;case ActionTypeGoToR :_ac ,_bfc :=_edbe .newPdfActionGotoRFromDict (_dbf );if _bfc !=nil {return nil ,_bfc ;};_ac .PdfAction =_egc ;_egc ._cadc =_ac ;return _egc ,nil ;case ActionTypeGoToE :_gge ,_acc :=_edbe .newPdfActionGotoEFromDict (_dbf );if _acc !=nil {return nil ,_acc ;};_gge .PdfAction =_egc ;_egc ._cadc =_gge ;return _egc ,nil ;case ActionTypeLaunch :_bec ,_edg :=_edbe .newPdfActionLaunchFromDict (_dbf );if _edg !=nil {return nil ,_edg ;};_bec .PdfAction =_egc ;_egc ._cadc =_bec ;return _egc ,nil ;case ActionTypeThread :_dcff ,_aee :=_edbe .newPdfActionThreadFromDict (_dbf );if _aee !=nil {return nil ,_aee ;};_dcff .PdfAction =_egc ;_egc ._cadc =_dcff ;return _egc ,nil ;case ActionTypeURI :_fdd ,_gec :=_edbe .newPdfActionURIFromDict (_dbf );if _gec !=nil {return nil ,_gec ;};_fdd .PdfAction =_egc ;_egc ._cadc =_fdd ;return _egc ,nil ;case ActionTypeSound :_bbb ,_gca :=_edbe .newPdfActionSoundFromDict (_dbf );if _gca !=nil {return nil ,_gca ;};_bbb .PdfAction =_egc ;_egc ._cadc =_bbb ;return _egc ,nil ;case ActionTypeMovie :_cff ,_edge :=_edbe .newPdfActionMovieFromDict (_dbf );if _edge !=nil {return nil ,_edge ;};_cff .PdfAction =_egc ;_egc ._cadc =_cff ;return _egc ,nil ;case ActionTypeHide :_gbcf ,_cde :=_edbe .newPdfActionHideFromDict (_dbf );if _cde !=nil {return nil ,_cde ;};_gbcf .PdfAction =_egc ;_egc ._cadc =_gbcf ;return _egc ,nil ;case ActionTypeNamed :_bdbd ,_ef :=_edbe .newPdfActionNamedFromDict (_dbf );if _ef !=nil {return nil ,_ef ;};_bdbd .PdfAction =_egc ;_egc ._cadc =_bdbd ;return _egc ,nil ;case ActionTypeSubmitForm :_cgea ,_edgd :=_edbe .newPdfActionSubmitFormFromDict (_dbf );if _edgd !=nil {return nil ,_edgd ;};_cgea .PdfAction =_egc ;_egc ._cadc =_cgea ;return _egc ,nil ;case ActionTypeResetForm :_dec ,_bff :=_edbe .newPdfActionResetFormFromDict (_dbf );if _bff !=nil {return nil ,_bff ;};_dec .PdfAction =_egc ;_egc ._cadc =_dec ;return _egc ,nil ;case ActionTypeImportData :_egfb ,_cafe :=_edbe .newPdfActionImportDataFromDict (_dbf );if _cafe !=nil {return nil ,_cafe ;};_egfb .PdfAction =_egc ;_egc ._cadc =_egfb ;return _egc ,nil ;case ActionTypeSetOCGState :_gbe ,_dfb :=_edbe .newPdfActionSetOCGStateFromDict (_dbf );if _dfb !=nil {return nil ,_dfb ;};_gbe .PdfAction =_egc ;_egc ._cadc =_gbe ;return _egc ,nil ;case ActionTypeRendition :_gfc ,_fdda :=_edbe .newPdfActionRenditionFromDict (_dbf );if _fdda !=nil {return nil ,_fdda ;};_gfc .PdfAction =_egc ;_egc ._cadc =_gfc ;return _egc ,nil ;case ActionTypeTrans :_eea ,_fdc :=_edbe .newPdfActionTransFromDict (_dbf );if _fdc !=nil {return nil ,_fdc ;};_eea .PdfAction =_egc ;_egc ._cadc =_eea ;return _egc ,nil ;case ActionTypeGoTo3DView :_dgb ,_gba :=_edbe .newPdfActionGoTo3DViewFromDict (_dbf );if _gba !=nil {return nil ,_gba ;};_dgb .PdfAction =_egc ;_egc ._cadc =_dgb ;return _egc ,nil ;case ActionTypeJavaScript :_bag ,_bdg :=_edbe .newPdfActionJavaScriptFromDict (_dbf );if _bdg !=nil {return nil ,_bdg ;};_bag .PdfAction =_egc ;_egc ._cadc =_bag ;return _egc ,nil ;};_aag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_def );return nil ,nil ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _bd .PdfObject ;FontFamily _bd .PdfObject ;FontStretch _bd .PdfObject ;FontWeight _bd .PdfObject ;Flags _bd .PdfObject ;FontBBox _bd .PdfObject ;ItalicAngle _bd .PdfObject ;Ascent _bd .PdfObject ;Descent _bd .PdfObject ;Leading _bd .PdfObject ;CapHeight _bd .PdfObject ;XHeight _bd .PdfObject ;StemV _bd .PdfObject ;StemH _bd .PdfObject ;AvgWidth _bd .PdfObject ;MaxWidth _bd .PdfObject ;MissingWidth _bd .PdfObject ;FontFile _bd .PdfObject ;FontFile2 _bd .PdfObject ;FontFile3 _bd .PdfObject ;CharSet _bd .PdfObject ;_eeec int ;_cgcd float64 ;*fontFile ;_fgag *_gb .TtfType ;

// Additional entries for CIDFonts
Style _bd .PdfObject ;Lang _bd .PdfObject ;FD _bd .PdfObject ;CIDSet _bd .PdfObject ;_efaf *_bd .PdfIndirectObject ;};func (_bddca *pdfFontSimple )updateStandard14Font (){_ffgbc ,_fecgf :=_bddca .Encoder ().(_ff .SimpleEncoder );if !_fecgf {_aag .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_bddca .Encoder (),_bddca );return ;};_dffdc :=_ffgbc .Charcodes ();_bddca ._cegga =make (map[_ff .CharCode ]float64 ,len (_dffdc ));for _ ,_cccge :=range _dffdc {_fbfcb ,_ :=_ffgbc .CharcodeToRune (_cccge );_bddca ._cegga [_cccge ]=_bddca ._efbb [_fbfcb ].Wx ;};};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _b .Time )(PdfDate ,error ){_cefff :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_bcace ,_ :=_bb .ParseInt (_cefff [1:3],10,32);_degb ,_ :=_bb .ParseInt (_cefff [4:6],10,32);return PdfDate {_fagf :int64 (timeObj .Year ()),_adfc :int64 (timeObj .Month ()),_gbfe :int64 (timeObj .Day ()),_beeg :int64 (timeObj .Hour ()),_ebfbe :int64 (timeObj .Minute ()),_dfecg :int64 (timeObj .Second ()),_ggdf :_cefff [0],_fccfce :_bcace ,_ccegg :_degb },nil ;};func (_caef *PdfReader )newPdfActionNamedFromDict (_eeaf *_bd .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_eeaf .Get ("\u004e")},nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _bd .PdfObject ;T3DV _bd .PdfObject ;T3DA _bd .PdfObject ;T3DI _bd .PdfObject ;T3DB _bd .PdfObject ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_defca pdfCIDFontType0 )GetCharMetrics (code _ff .CharCode )(_gb .CharMetrics ,bool ){_cfge :=_defca ._ffae ;if _cbbde ,_accb :=_defca ._abecd [code ];_accb {_cfge =_cbbde ;};return _gb .CharMetrics {Wx :_cfge },true ;};

// HasExtGState checks if ExtGState name is available.
func (_fedeb *PdfPage )HasExtGState (name _bd .PdfObjectName )bool {if _fedeb .Resources ==nil {return false ;};if _fedeb .Resources .ExtGState ==nil {return false ;};_ccgd ,_dfdbb :=_bd .TraceToDirectObject (_fedeb .Resources .ExtGState ).(*_bd .PdfObjectDictionary );if !_dfdbb {_aag .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bd .TraceToDirectObject (_fedeb .Resources .ExtGState ));return false ;};_afcdb :=_ccgd .Get (name );_cfcdg :=_afcdb !=nil ;return _cfcdg ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_eeg :=NewPdfAnnotation ();_baga :=&PdfAnnotationInk {};_baga .PdfAnnotation =_eeg ;_baga .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eeg .SetContext (_baga );return _baga ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_adgfa PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_bd .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_cabfc []_bd .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_fbfb []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_bbede *PdfPageResources )GenerateXObjectName ()_bd .PdfObjectName {_dfaef :=1;for {_afgga :=_bd .MakeName (_c .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_dfaef ));if !_bbede .HasXObjectByName (*_afgga ){return *_afgga ;};_dfaef ++;};};

// B returns the value of the B component of the color.
func (_gdae *PdfColorCalRGB )B ()float64 {return float64 (_gdae [1])};

// GetNumPages returns the number of pages in the document.
func (_adaf *PdfReader )GetNumPages ()(int ,error ){if _adaf ._efgga .GetCrypter ()!=nil &&!_adaf ._efgga .IsAuthenticated (){return 0,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};return len (_adaf ._eefe ),nil ;};func _bacbc ()string {if len (_efbgd )> 0{return _efbgd ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_ddca *PdfPage )error ;};

// String returns a human readable description of `fontfile`.
func (_agafc *fontFile )String ()string {_abfba :="\u005b\u004e\u006f\u006e\u0065\u005d";if _agafc ._bfaec !=nil {_abfba =_agafc ._bfaec .String ();};return _c .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_agafc ._abaf ,_abfba );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_afgg *PdfColorspaceSpecialPattern )ToPdfObject ()_bd .PdfObject {if _afgg .UnderlyingCS ==nil {return _bd .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_fbgd :=_bd .MakeArray (_bd .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_fbgd .Append (_afgg .UnderlyingCS .ToPdfObject ());if _afgg ._bgcgb !=nil {_afgg ._bgcgb .PdfObject =_fbgd ;return _afgg ._bgcgb ;};return _fbgd ;};func (_afeec *PdfReader )buildOutlineTree (_cgdgdg _bd .PdfObject ,_aegc *PdfOutlineTreeNode ,_cdff *PdfOutlineTreeNode ,_ggff map[_bd .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _ggff ==nil {_ggff =map[_bd .PdfObject ]struct{}{};};_ggff [_cgdgdg ]=struct{}{};_eceee ,_efcgc :=_cgdgdg .(*_bd .PdfIndirectObject );if !_efcgc {return nil ,nil ,_c .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_cgdgdg );};_ebfaf ,_cecgg :=_eceee .PdfObject .(*_bd .PdfObjectDictionary );if !_cecgg {return nil ,nil ,_ca .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_aag .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_ebfaf ,_eceee ,_eceee );if _baeeab :=_ebfaf .Get ("\u0054\u0069\u0074l\u0065");_baeeab !=nil {_degaf ,_fdafg :=_afeec .newPdfOutlineItemFromIndirectObject (_eceee );if _fdafg !=nil {return nil ,nil ,_fdafg ;};_degaf .Parent =_aegc ;_degaf .Prev =_cdff ;_bfcde :=_bd .ResolveReference (_ebfaf .Get ("\u0046\u0069\u0072s\u0074"));if _ ,_fdbgd :=_ggff [_bfcde ];_bfcde !=nil &&_bfcde !=_eceee &&!_fdbgd {if !_bd .IsNullObject (_bfcde ){_dbbga ,_gdaed ,_bcbed :=_afeec .buildOutlineTree (_bfcde ,&_degaf .PdfOutlineTreeNode ,nil ,_ggff );if _bcbed !=nil {_aag .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_bcbed );}else {_degaf .First =_dbbga ;_degaf .Last =_gdaed ;};};};_fbff :=_bd .ResolveReference (_ebfaf .Get ("\u004e\u0065\u0078\u0074"));if _ ,_gccgf :=_ggff [_fbff ];_fbff !=nil &&_fbff !=_eceee &&!_gccgf {if !_bd .IsNullObject (_fbff ){_acgdb ,_ebcec ,_bfabd :=_afeec .buildOutlineTree (_fbff ,_aegc ,&_degaf .PdfOutlineTreeNode ,_ggff );if _bfabd !=nil {_aag .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_bfabd );}else {_degaf .Next =_acgdb ;return &_degaf .PdfOutlineTreeNode ,_ebcec ,nil ;};};};return &_degaf .PdfOutlineTreeNode ,&_degaf .PdfOutlineTreeNode ,nil ;};_eebae ,_ecdef :=_bagd (_eceee );if _ecdef !=nil {return nil ,nil ,_ecdef ;};_eebae .Parent =_aegc ;if _fceea :=_ebfaf .Get ("\u0046\u0069\u0072s\u0074");_fceea !=nil {_fceea =_bd .ResolveReference (_fceea );_dafef :=_bd .TraceToDirectObject (_fceea );if _ ,_edfg :=_dafef .(*_bd .PdfObjectNull );!_edfg &&_dafef !=nil {_dfeef ,_bfbfg ,_ggcd :=_afeec .buildOutlineTree (_fceea ,&_eebae .PdfOutlineTreeNode ,nil ,_ggff );if _ggcd !=nil {_aag .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_ggcd );}else {_eebae .First =_dfeef ;_eebae .Last =_bfbfg ;};};};return &_eebae .PdfOutlineTreeNode ,&_eebae .PdfOutlineTreeNode ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fef *PdfActionSetOCGState )ToPdfObject ()_bd .PdfObject {_fef .PdfAction .ToPdfObject ();_dab :=_fef ._ccf ;_ggg :=_dab .PdfObject .(*_bd .PdfObjectDictionary );_ggg .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeSetOCGState )));_ggg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_fef .State );_ggg .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_fef .PreserveRB );return _dab ;};func _ddbf (_abebf *_bd .PdfObjectDictionary )(*PdfShadingType7 ,error ){_dgbfa :=PdfShadingType7 {};_aaabf :=_abebf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _aaabf ==nil {_aag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_eabg ,_dbeee :=_aaabf .(*_bd .PdfObjectInteger );if !_dbeee {_aag .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aaabf );return nil ,_bd .ErrTypeError ;};_dgbfa .BitsPerCoordinate =_eabg ;_aaabf =_abebf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aaabf ==nil {_aag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_eabg ,_dbeee =_aaabf .(*_bd .PdfObjectInteger );if !_dbeee {_aag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aaabf );return nil ,_bd .ErrTypeError ;};_dgbfa .BitsPerComponent =_eabg ;_aaabf =_abebf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _aaabf ==nil {_aag .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_eabg ,_dbeee =_aaabf .(*_bd .PdfObjectInteger );if !_dbeee {_aag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aaabf );return nil ,_bd .ErrTypeError ;};_dgbfa .BitsPerComponent =_eabg ;_aaabf =_abebf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aaabf ==nil {_aag .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_cabff ,_dbeee :=_aaabf .(*_bd .PdfObjectArray );if !_dbeee {_aag .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aaabf );return nil ,_bd .ErrTypeError ;};_dgbfa .Decode =_cabff ;if _fcbae :=_abebf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_fcbae !=nil {_dgbfa .Function =[]PdfFunction {};if _eabfd ,_eebf :=_fcbae .(*_bd .PdfObjectArray );_eebf {for _ ,_agdc :=range _eabfd .Elements (){_gcbfe ,_gfgdd :=_cgdeb (_agdc );if _gfgdd !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gfgdd );return nil ,_gfgdd ;};_dgbfa .Function =append (_dgbfa .Function ,_gcbfe );};}else {_gbaca ,_bfcge :=_cgdeb (_fcbae );if _bfcge !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfcge );return nil ,_bfcge ;};_dgbfa .Function =append (_dgbfa .Function ,_gbaca );};};return &_dgbfa ,nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_bgcb OutlineDest )ToPdfObject ()_bd .PdfObject {if (_bgcb .PageObj ==nil &&_bgcb .Page < 0)||_bgcb .Mode ==""{return _bd .MakeNull ();};_cebd :=_bd .MakeArray ();if _bgcb .PageObj !=nil {_cebd .Append (_bgcb .PageObj );}else {_cebd .Append (_bd .MakeInteger (_bgcb .Page ));};_cebd .Append (_bd .MakeName (_bgcb .Mode ));switch _bgcb .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_cebd .Append (_bd .MakeFloat (_bgcb .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_cebd .Append (_bd .MakeFloat (_bgcb .X ));case "\u0058\u0059\u005a":_cebd .Append (_bd .MakeFloat (_bgcb .X ));_cebd .Append (_bd .MakeFloat (_bgcb .Y ));_cebd .Append (_bd .MakeFloat (_bgcb .Zoom ));default:_cebd .Set (1,_bd .MakeName ("\u0046\u0069\u0074"));};return _cebd ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_fccaf :=&XObjectForm {};_abeca :=&_bd .PdfObjectStream {};_abeca .PdfObjectDictionary =_bd .MakeDict ();_fccaf ._cccga =_abeca ;return _fccaf ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_bedcf []byte ;_ddfc []uint32 ;_ffbdc *_bd .PdfObjectStream ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_bgfa :=PdfColorDeviceGray (grayVal );return &_bgfa ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_bd .PdfObjectArray ;};var _cecgd ="";

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_abbed *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_abbed .ToPdfOutline ().PdfOutlineTreeNode ;};func (_gbabb *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};func (_ggebe *PdfReader )newPdfAcroFormFromDict (_fbba *_bd .PdfIndirectObject ,_gadfb *_bd .PdfObjectDictionary )(*PdfAcroForm ,error ){_ebbf :=NewPdfAcroForm ();if _fbba !=nil {_ebbf ._gdaf =_fbba ;_fbba .PdfObject =_bd .MakeDict ();};if _gecda :=_gadfb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_gecda !=nil {_cbcb ,_bccdd :=_bd .GetArray (_gecda );if !_bccdd {return nil ,_c .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_gecda );};var _bcee []*PdfField ;for _ ,_dcgfc :=range _cbcb .Elements (){_cegde ,_cbcc :=_bd .GetIndirect (_dcgfc );if !_cbcc {if _ ,_bgedc :=_dcgfc .(*_bd .PdfObjectNull );_bgedc {_aag .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");continue ;};_aag .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_dcgfc );return nil ,_c .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bafcg ,_aefec :=_ggebe .newPdfFieldFromIndirectObject (_cegde ,nil );if _aefec !=nil {return nil ,_aefec ;};_aag .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_bafcg );_bcee =append (_bcee ,_bafcg );};_ebbf .Fields =&_bcee ;};if _dfcf :=_gadfb .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_dfcf !=nil {_dddab ,_bddcd :=_bd .GetBool (_dfcf );if _bddcd {_ebbf .NeedAppearances =_dddab ;}else {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_dfcf );};};if _facdd :=_gadfb .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_facdd !=nil {_gebbf ,_bgfce :=_bd .GetInt (_facdd );if _bgfce {_ebbf .SigFlags =_gebbf ;}else {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_facdd );};};if _bdfe :=_gadfb .Get ("\u0043\u004f");_bdfe !=nil {_cdcf ,_ecae :=_bd .GetArray (_bdfe );if _ecae {_ebbf .CO =_cdcf ;}else {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bdfe );};};if _fbccd :=_gadfb .Get ("\u0044\u0052");_fbccd !=nil {if _aecea ,_bdbg :=_bd .GetDict (_fbccd );_bdbg {_fafcc ,_cbcgg :=NewPdfPageResourcesFromDict (_aecea );if _cbcgg !=nil {_aag .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_cbcgg );return nil ,_cbcgg ;};_ebbf .DR =_fafcc ;}else {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fbccd );};};if _ceab :=_gadfb .Get ("\u0044\u0041");_ceab !=nil {_efgg ,_abfed :=_bd .GetString (_ceab );if _abfed {_ebbf .DA =_efgg ;}else {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ceab );};};if _ebffa :=_gadfb .Get ("\u0051");_ebffa !=nil {_decaf ,_egcb :=_bd .GetInt (_ebffa );if _egcb {_ebbf .Q =_decaf ;}else {_aag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ebffa );};};if _ffddd :=_gadfb .Get ("\u0058\u0046\u0041");_ffddd !=nil {_ebbf .XFA =_ffddd ;};return _ebbf ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gfae *PdfPageResourcesColorspaces )ToPdfObject ()_bd .PdfObject {_bdabe :=_bd .MakeDict ();for _ ,_dffe :=range _gfae .Names {_bdabe .Set (_bd .PdfObjectName (_dffe ),_gfae .Colorspaces [_dffe ].ToPdfObject ());};if _gfae ._cdeef !=nil {_gfae ._cdeef .PdfObject =_bdabe ;return _gfae ._cdeef ;};return _bdabe ;};func (_bcg *PdfReader )newPdfAnnotationLineFromDict (_afae *_bd .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_eeab :=PdfAnnotationLine {};_abbe ,_gfea :=_bcg .newPdfAnnotationMarkupFromDict (_afae );if _gfea !=nil {return nil ,_gfea ;};_eeab .PdfAnnotationMarkup =_abbe ;_eeab .L =_afae .Get ("\u004c");_eeab .BS =_afae .Get ("\u0042\u0053");_eeab .LE =_afae .Get ("\u004c\u0045");_eeab .IC =_afae .Get ("\u0049\u0043");_eeab .LL =_afae .Get ("\u004c\u004c");_eeab .LLE =_afae .Get ("\u004c\u004c\u0045");_eeab .Cap =_afae .Get ("\u0043\u0061\u0070");_eeab .IT =_afae .Get ("\u0049\u0054");_eeab .LLO =_afae .Get ("\u004c\u004c\u004f");_eeab .CP =_afae .Get ("\u0043\u0050");_eeab .Measure =_afae .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_eeab .CO =_afae .Get ("\u0043\u004f");return &_eeab ,nil ;};func _ffdb (_gbafe []byte )bool {if len (_gbafe )< 4{return true ;};for _ecdgc :=range _gbafe [:4]{_eedaa :=rune (_ecdgc );if !_g .Is (_g .ASCII_Hex_Digit ,_eedaa )&&!_g .IsSpace (_eedaa ){return true ;};};return false ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_dgaga *PdfSignature )bool ;Validate (_cgeb *PdfSignature ,_bagde Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_gfbf *PdfSignature )(Hasher ,error );Sign (_dgcge *PdfSignature ,_becee Hasher )error ;};

// SetAnnotations sets the annotations list.
func (_cbdcc *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_cbdcc ._fgfgg =annotations };

// ToInteger convert to an integer format.
func (_bbga *PdfColorCalGray )ToInteger (bits int )uint32 {_bbgg :=_cg .Pow (2,float64 (bits ))-1;return uint32 (_bbgg *_bbga .Val ());};func (_ddfe *PdfReader )newPdfAnnotationFileAttachmentFromDict (_agac *_bd .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_ggac :=PdfAnnotationFileAttachment {};_bbfg ,_egef :=_ddfe .newPdfAnnotationMarkupFromDict (_agac );if _egef !=nil {return nil ,_egef ;};_ggac .PdfAnnotationMarkup =_bbfg ;_ggac .FS =_agac .Get ("\u0046\u0053");_ggac .Name =_agac .Get ("\u004e\u0061\u006d\u0065");return &_ggac ,nil ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_cbgbd DefaultImageHandler )NewGrayImageFromGoImage (goimg _be .Image )(*Image ,error ){_gegcac :=goimg .Bounds ();_bbcdc :=&Image {Width :int64 (_gegcac .Dx ()),Height :int64 (_gegcac .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _gedc :=goimg .(type ){case *_be .Gray :if len (_gedc .Pix )!=_gegcac .Dx ()*_gegcac .Dy (){_cedfb ,_bcdfd :=_adg .GrayConverter .Convert (goimg );if _bcdfd !=nil {return nil ,_bcdfd ;};_bbcdc .Data =_cedfb .Pix ();}else {_bbcdc .Data =_gedc .Pix ;};case *_be .Gray16 :_bbcdc .BitsPerComponent =16;if len (_gedc .Pix )!=_gegcac .Dx ()*_gegcac .Dy ()*2{_ccccc ,_eeea :=_adg .Gray16Converter .Convert (goimg );if _eeea !=nil {return nil ,_eeea ;};_bbcdc .Data =_ccccc .Pix ();}else {_bbcdc .Data =_gedc .Pix ;};default:_ddefd ,_bcaga :=_adg .GrayConverter .Convert (goimg );if _bcaga !=nil {return nil ,_bcaga ;};_bbcdc .Data =_ddefd .Pix ();};return _bbcdc ,nil ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_cbace *PdfPattern )SetContext (ctx PdfModel ){_cbace ._aaffd =ctx };func (_ccagc *PdfWriter )writeString (_edfeb string ){if _ccagc ._fcdfd !=nil {return ;};_bddfg ,_beea :=_ccagc ._ggea .WriteString (_edfeb );_ccagc ._gbbdg +=int64 (_bddfg );_ccagc ._fcdfd =_beea ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_bd .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_ffcd *_bd .PdfIndirectObject ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_bgcca *PdfPageResources )GetContainingPdfObject ()_bd .PdfObject {return _bgcca ._caddd };

// WriteString outputs the object as it is to be written to file.
func (_dcbg *pdfSignDictionary )WriteString ()string {_dcbg ._bebfa =0;_dcbg ._bacc =0;_dcbg ._dfbdc =0;_dcbg ._ffebag =0;_efffb :=_af .NewBuffer (nil );_efffb .WriteString ("\u003c\u003c");for _ ,_efag :=range _dcbg .Keys (){_dgbgb :=_dcbg .Get (_efag );switch _efag {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_efffb .WriteString (_efag .WriteString ());_efffb .WriteString ("\u0020");_dcbg ._dfbdc =_efffb .Len ();_efffb .WriteString (_dgbgb .WriteString ());_efffb .WriteString ("\u0020");_dcbg ._ffebag =_efffb .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_efffb .WriteString (_efag .WriteString ());_efffb .WriteString ("\u0020");_dcbg ._bebfa =_efffb .Len ();_efffb .WriteString (_dgbgb .WriteString ());_efffb .WriteString ("\u0020");_dcbg ._bacc =_efffb .Len ()-1;default:_efffb .WriteString (_efag .WriteString ());_efffb .WriteString ("\u0020");_efffb .WriteString (_dgbgb .WriteString ());};};_efffb .WriteString ("\u003e\u003e");return _efffb .String ();};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_bd .PdfObjectArray ;Matrix *_bd .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_geca *PdfColorspaceCalRGB )ToPdfObject ()_bd .PdfObject {_bddb :=&_bd .PdfObjectArray {};_bddb .Append (_bd .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_cdbf :=_bd .MakeDict ();if _geca .WhitePoint !=nil {_bceg :=_bd .MakeArray (_bd .MakeFloat (_geca .WhitePoint [0]),_bd .MakeFloat (_geca .WhitePoint [1]),_bd .MakeFloat (_geca .WhitePoint [2]));_cdbf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bceg );}else {_aag .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");};if _geca .BlackPoint !=nil {_abdef :=_bd .MakeArray (_bd .MakeFloat (_geca .BlackPoint [0]),_bd .MakeFloat (_geca .BlackPoint [1]),_bd .MakeFloat (_geca .BlackPoint [2]));_cdbf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_abdef );};if _geca .Gamma !=nil {_afde :=_bd .MakeArray (_bd .MakeFloat (_geca .Gamma [0]),_bd .MakeFloat (_geca .Gamma [1]),_bd .MakeFloat (_geca .Gamma [2]));_cdbf .Set ("\u0047\u0061\u006dm\u0061",_afde );};if _geca .Matrix !=nil {_aaec :=_bd .MakeArray (_bd .MakeFloat (_geca .Matrix [0]),_bd .MakeFloat (_geca .Matrix [1]),_bd .MakeFloat (_geca .Matrix [2]),_bd .MakeFloat (_geca .Matrix [3]),_bd .MakeFloat (_geca .Matrix [4]),_bd .MakeFloat (_geca .Matrix [5]),_bd .MakeFloat (_geca .Matrix [6]),_bd .MakeFloat (_geca .Matrix [7]),_bd .MakeFloat (_geca .Matrix [8]));_cdbf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_aaec );};_bddb .Append (_cdbf );if _geca ._ccgg !=nil {_geca ._ccgg .PdfObject =_bddb ;return _geca ._ccgg ;};return _bddb ;};func _bagd (_fccdc *_bd .PdfIndirectObject )(*PdfOutline ,error ){_cfbbe ,_egac :=_fccdc .PdfObject .(*_bd .PdfObjectDictionary );if !_egac {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_efegb :=NewPdfOutline ();if _cccacg :=_cfbbe .Get ("\u0054\u0079\u0070\u0065");_cccacg !=nil {_feca ,_adcdg :=_cccacg .(*_bd .PdfObjectName );if _adcdg {if *_feca !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_aag .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_feca );};};};if _gefag :=_cfbbe .Get ("\u0043\u006f\u0075n\u0074");_gefag !=nil {_babed ,_efdc :=_bd .GetNumberAsInt64 (_gefag );if _efdc !=nil {return nil ,_efdc ;};_efegb .Count =&_babed ;};return _efegb ,nil ;};func _egea (_fddee _bd .PdfObject )(*PdfColorspaceLab ,error ){_degf :=NewPdfColorspaceLab ();if _dgfg ,_ceca :=_fddee .(*_bd .PdfIndirectObject );_ceca {_degf ._adad =_dgfg ;};_fddee =_bd .TraceToDirectObject (_fddee );_afage ,_acbcc :=_fddee .(*_bd .PdfObjectArray );if !_acbcc {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _afage .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_fddee =_bd .TraceToDirectObject (_afage .Get (0));_cgfb ,_acbcc :=_fddee .(*_bd .PdfObjectName );if !_acbcc {return nil ,_c .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_cgfb !="\u004c\u0061\u0062"{return nil ,_c .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_fddee =_bd .TraceToDirectObject (_afage .Get (1));_debc ,_acbcc :=_fddee .(*_bd .PdfObjectDictionary );if !_acbcc {return nil ,_c .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_fddee =_debc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fddee =_bd .TraceToDirectObject (_fddee );_gfbcd ,_acbcc :=_fddee .(*_bd .PdfObjectArray );if !_acbcc {return nil ,_c .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _gfbcd .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_aaeg ,_dfed :=_gfbcd .GetAsFloat64Slice ();if _dfed !=nil {return nil ,_dfed ;};_degf .WhitePoint =_aaeg ;_fddee =_debc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fddee !=nil {_fddee =_bd .TraceToDirectObject (_fddee );_dcef ,_accda :=_fddee .(*_bd .PdfObjectArray );if !_accda {return nil ,_c .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _dcef .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_ccca ,_cgef :=_dcef .GetAsFloat64Slice ();if _cgef !=nil {return nil ,_cgef ;};_degf .BlackPoint =_ccca ;};_fddee =_debc .Get ("\u0052\u0061\u006eg\u0065");if _fddee !=nil {_fddee =_bd .TraceToDirectObject (_fddee );_geeg ,_ebe :=_fddee .(*_bd .PdfObjectArray );if !_ebe {_aag .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_c .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _geeg .Len ()!=4{_aag .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gecff ,_cegd :=_geeg .GetAsFloat64Slice ();if _cegd !=nil {return nil ,_cegd ;};_degf .Range =_gecff ;};return _degf ,nil ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _bd .StreamEncoder )(*XObjectImage ,error ){_ffagb :=NewXObjectImage ();return UpdateXObjectImageFromImage (_ffagb ,img ,cs ,encoder );};func (_afeca *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _afeca ._dcgda };

// ToPdfObject recursively builds the Outline tree PDF object.
func (_cebb *PdfOutline )ToPdfObject ()_bd .PdfObject {_abfg :=_cebb ._bfbae ;_afeb :=_abfg .PdfObject .(*_bd .PdfObjectDictionary );_afeb .Set ("\u0054\u0079\u0070\u0065",_bd .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _cebb .First !=nil {_afeb .Set ("\u0046\u0069\u0072s\u0074",_cebb .First .ToPdfObject ());};if _cebb .Last !=nil {_afeb .Set ("\u004c\u0061\u0073\u0074",_cebb .Last .GetContext ().GetContainingPdfObject ());};if _cebb .Parent !=nil {_afeb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cebb .Parent .GetContext ().GetContainingPdfObject ());};if _cebb .Count !=nil {_afeb .Set ("\u0043\u006f\u0075n\u0074",_bd .MakeInteger (*_cebb .Count ));};return _abfg ;};

// HasXObjectByName checks if has XObject resource by name.
func (_fecd *PdfPage )HasXObjectByName (name _bd .PdfObjectName )bool {_fadfe ,_gddaa :=_fecd .Resources .XObject .(*_bd .PdfObjectDictionary );if !_gddaa {return false ;};if _aagee :=_fadfe .Get (name );_aagee !=nil {return true ;};return false ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_gega *PdfReader )GetEncryptionMethod ()string {_cbage :=_gega ._efgga .GetCrypter ();return _cbage .String ();};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_cgaf *XObjectForm )SetContentStream (content []byte ,encoder _bd .StreamEncoder )error {_beefca :=content ;if encoder ==nil {if _cgaf .Filter !=nil {encoder =_cgaf .Filter ;}else {encoder =_bd .NewRawEncoder ();};};_decb ,_bdagd :=encoder .EncodeBytes (_beefca );if _bdagd !=nil {return _bdagd ;};_beefca =_decb ;_cgaf .Stream =_beefca ;_cgaf .Filter =encoder ;return nil ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_aedfe *Image )Resample (targetBitsPerComponent int64 ){if _aedfe .BitsPerComponent ==targetBitsPerComponent {return ;};_adabd :=_aedfe .GetSamples ();if targetBitsPerComponent < _aedfe .BitsPerComponent {_ggfa :=_aedfe .BitsPerComponent -targetBitsPerComponent ;for _ggfd :=range _adabd {_adabd [_ggfd ]>>=uint (_ggfa );};}else if targetBitsPerComponent > _aedfe .BitsPerComponent {_abfdb :=targetBitsPerComponent -_aedfe .BitsPerComponent ;for _egfbc :=range _adabd {_adabd [_egfbc ]<<=uint (_abfdb );};};_aedfe .BitsPerComponent =targetBitsPerComponent ;if _aedfe .BitsPerComponent < 8{_aedfe .resampleLowBits (_adabd );return ;};_edgb :=_adg .BytesPerLine (int (_aedfe .Width ),int (_aedfe .BitsPerComponent ),_aedfe .ColorComponents );_fdedg :=make ([]byte ,_edgb *int (_aedfe .Height ));var (_gccbc ,_fcgdb ,_cgfdd ,_dgdc int ;_bfba uint32 ;);for _cgfdd =0;_cgfdd < int (_aedfe .Height );_cgfdd ++{_gccbc =_cgfdd *_edgb ;_fcgdb =(_cgfdd +1)*_edgb -1;_fdeagd :=_caa .ResampleUint32 (_adabd [_gccbc :_fcgdb ],int (targetBitsPerComponent ),8);for _dgdc ,_bfba =range _fdeagd {_fdedg [_dgdc +_gccbc ]=byte (_bfba );};};_aedfe .Data =_fdedg ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_ecbaa *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_dggfd :=NewPdfOutlineItem ();_dggfd .Title =_bd .MakeEncodedString (_ecbaa .Title ,true );_dggfd .Dest =_ecbaa .Dest .ToPdfObject ();var _bebg []*PdfOutlineItem ;var _cbfaaa int64 ;var _afecf *PdfOutlineItem ;for _ ,_cgaef :=range _ecbaa .Entries {_ddbbg ,_aebef :=_cgaef .ToPdfOutlineItem ();_ddbbg .Parent =&_dggfd .PdfOutlineTreeNode ;if _afecf !=nil {_afecf .Next =&_ddbbg .PdfOutlineTreeNode ;_ddbbg .Prev =&_afecf .PdfOutlineTreeNode ;};_bebg =append (_bebg ,_ddbbg );_cbfaaa +=_aebef ;_afecf =_ddbbg ;};_egae :=len (_bebg );_cbfaaa +=int64 (_egae );if _egae > 0{_dggfd .First =&_bebg [0].PdfOutlineTreeNode ;_dggfd .Last =&_bebg [_egae -1].PdfOutlineTreeNode ;_dggfd .Count =&_cbfaaa ;};return _dggfd ,_cbfaaa ;};

// ToPdfObject implements interface PdfModel.
func (_bce *PdfActionGoTo3DView )ToPdfObject ()_bd .PdfObject {_bce .PdfAction .ToPdfObject ();_cf :=_bce ._ccf ;_bf :=_cf .PdfObject .(*_bd .PdfObjectDictionary );_bf .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeGoTo3DView )));_bf .SetIfNotNil ("\u0054\u0041",_bce .TA );_bf .SetIfNotNil ("\u0056",_bce .V );return _cf ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// GetFontDescriptor returns the font descriptor for `font`.
func (_gggad PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _gggad ._ddgba .getFontDescriptor (),nil ;};func (_dgdce *PdfPattern )getDict ()*_bd .PdfObjectDictionary {if _bbfae ,_aadda :=_dgdce ._ebbgg .(*_bd .PdfIndirectObject );_aadda {_cffag ,_befc :=_bbfae .PdfObject .(*_bd .PdfObjectDictionary );if !_befc {return nil ;};return _cffag ;}else if _acga ,_cafbb :=_dgdce ._ebbgg .(*_bd .PdfObjectStream );_cafbb {return _acga .PdfObjectDictionary ;}else {_aag .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_dgdce ._ebbgg );return nil ;};};func (_afea *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// ToPdfObject implements interface PdfModel.
func (_dfg *PdfBorderStyle )ToPdfObject ()_bd .PdfObject {_gddcg :=_bd .MakeDict ();if _dfg ._gffg !=nil {if _adbc ,_gffgg :=_dfg ._gffg .(*_bd .PdfIndirectObject );_gffgg {_adbc .PdfObject =_gddcg ;};};_gddcg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));if _dfg .W !=nil {_gddcg .Set ("\u0057",_bd .MakeFloat (*_dfg .W ));};if _dfg .S !=nil {_gddcg .Set ("\u0053",_bd .MakeName (_dfg .S .GetPdfName ()));};if _dfg .D !=nil {_gddcg .Set ("\u0044",_bd .MakeArrayFromIntegers (*_dfg .D ));};if _dfg ._gffg !=nil {return _dfg ._gffg ;};return _gddcg ;};func (_ace *PdfReader )newPdfActionGotoFromDict (_dbe *_bd .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_dbe .Get ("\u0044")},nil ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_cecgd =title };

// ToInteger convert to an integer format.
func (_dgeg *PdfColorLab )ToInteger (bits int )[3]uint32 {_cdcg :=_cg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cdcg *_dgeg .L ()),uint32 (_cdcg *_dgeg .A ()),uint32 (_cdcg *_dgeg .B ())};};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_baa *PdfColorspaceSpecialIndexed )ToPdfObject ()_bd .PdfObject {_dfbb :=_bd .MakeArray (_bd .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_dfbb .Append (_baa .Base .ToPdfObject ());_dfbb .Append (_bd .MakeInteger (int64 (_baa .HiVal )));_dfbb .Append (_baa .Lookup );if _baa ._dbcca !=nil {_baa ._dbcca .PdfObject =_dfbb ;return _baa ._dbcca ;};return _dfbb ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_gcdb *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_ggbf ,_fdbc :=color .(*PdfColorDeviceRGB );if !_fdbc {_aag .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _ggbf ,nil ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_acbbe *PdfFieldText )ToPdfObject ()_bd .PdfObject {_acbbe .PdfField .ToPdfObject ();_aefa :=_acbbe ._gcacg ;_fcdd :=_aefa .PdfObject .(*_bd .PdfObjectDictionary );_fcdd .Set ("\u0046\u0054",_bd .MakeName ("\u0054\u0078"));if _acbbe .DA !=nil {_fcdd .Set ("\u0044\u0041",_acbbe .DA );};if _acbbe .Q !=nil {_fcdd .Set ("\u0051",_acbbe .Q );};if _acbbe .DS !=nil {_fcdd .Set ("\u0044\u0053",_acbbe .DS );};if _acbbe .RV !=nil {_fcdd .Set ("\u0052\u0056",_acbbe .RV );};if _acbbe .MaxLen !=nil {_fcdd .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_acbbe .MaxLen );};return _aefa ;};func _bcfed (_eeba *_bd .PdfObjectDictionary ,_fgdd *fontCommon )(*pdfFontType0 ,error ){_gdgca ,_cadfd :=_bd .GetArray (_eeba .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_cadfd {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_fgdd );return nil ,_bd .ErrRangeError ;};if _gdgca .Len ()!=1{_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_gdgca .Len ());return nil ,_bd .ErrRangeError ;};_eeag ,_dgeda :=_agdf (_gdgca .Get (0),false );if _dgeda !=nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_dgeda ,_fgdd );return nil ,_dgeda ;};_ecgd :=_edgg (_fgdd );_ecgd .DescendantFont =_eeag ;_eabf ,_cadfd :=_bd .GetNameVal (_eeba .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _cadfd {if _eabf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_eabf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_ecgd ._ebdd =_ff .NewIdentityTextEncoder (_eabf );}else if _fgg .IsPredefinedCMap (_eabf ){_ecgd ._aaefc ,_dgeda =_fgg .LoadPredefinedCMap (_eabf );if _dgeda !=nil {_aag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_eabf ,_dgeda );};}else {_aag .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_eabf );};};if _fdgb :=_eeag .baseFields ()._cecd ;_fdgb !=nil {if _cdag :=_fdgb .Name ();_cdag =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_cdag =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_cdag =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_cdag =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_ecgd ._ebdd =_ff .NewCMapEncoder (_eabf ,_ecgd ._aaefc ,_fdgb );};};return _ecgd ,nil ;};func (_fggb *PdfReader )newPdfAnnotationPrinterMarkFromDict (_dfeg *_bd .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_ffgd :=PdfAnnotationPrinterMark {};_ffgd .MN =_dfeg .Get ("\u004d\u004e");return &_ffgd ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_afcca *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_afcca .NumInputs {_aag .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");return nil ,_ca .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _afcca ._ddfc ==nil {_cggfd :=_afcca .processSamples ();if _cggfd !=nil {return nil ,_cggfd ;};};_ggec :=_afcca .Encode ;if _ggec ==nil {_ggec =[]float64 {};for _adbgf :=0;_adbgf < len (_afcca .Size );_adbgf ++{_ggec =append (_ggec ,0);_ggec =append (_ggec ,float64 (_afcca .Size [_adbgf ]-1));};};_cegdbg :=_afcca .Decode ;if _cegdbg ==nil {_cegdbg =_afcca .Range ;};_adga :=make ([]int ,len (x ));for _gaagc :=0;_gaagc < len (x );_gaagc ++{_gebd :=x [_gaagc ];_gcgff :=_cg .Min (_cg .Max (_gebd ,_afcca .Domain [2*_gaagc ]),_afcca .Domain [2*_gaagc +1]);_eaag :=_adg .LinearInterpolate (_gcgff ,_afcca .Domain [2*_gaagc ],_afcca .Domain [2*_gaagc +1],_ggec [2*_gaagc ],_ggec [2*_gaagc +1]);_edfbg :=_cg .Min (_cg .Max (_eaag ,0),float64 (_afcca .Size [_gaagc ]-1));_aaebb :=int (_cg .Floor (_edfbg +0.5));if _aaebb < 0{_aaebb =0;}else if _aaebb > _afcca .Size [_gaagc ]{_aaebb =_afcca .Size [_gaagc ]-1;};_adga [_gaagc ]=_aaebb ;};_dcga :=_adga [0];for _afdca :=1;_afdca < _afcca .NumInputs ;_afdca ++{_gggfb :=_adga [_afdca ];for _fbdbeb :=0;_fbdbeb < _afdca ;_fbdbeb ++{_gggfb *=_afcca .Size [_fbdbeb ];};_dcga +=_gggfb ;};_dcga *=_afcca .NumOutputs ;var _bedf []float64 ;for _bcdcd :=0;_bcdcd < _afcca .NumOutputs ;_bcdcd ++{_gacag :=_dcga +_bcdcd ;if _gacag >=len (_afcca ._ddfc ){_aag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");continue ;};_ffgfg :=_afcca ._ddfc [_gacag ];_gdde :=_adg .LinearInterpolate (float64 (_ffgfg ),0,_cg .Pow (2,float64 (_afcca .BitsPerSample )),_cegdbg [2*_bcdcd ],_cegdbg [2*_bcdcd +1]);_daba :=_cg .Min (_cg .Max (_gdde ,_afcca .Range [2*_bcdcd ]),_afcca .Range [2*_bcdcd +1]);_bedf =append (_bedf ,_daba );};return _bedf ,nil ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_ebb :=NewPdfAnnotation ();_fag :=&PdfAnnotationPrinterMark {};_fag .PdfAnnotation =_ebb ;_ebb .SetContext (_fag );return _fag ;};

// ToPdfObject implements interface PdfModel.
func (_dced *PdfAnnotationWatermark )ToPdfObject ()_bd .PdfObject {_dced .PdfAnnotation .ToPdfObject ();_bee :=_dced ._ega ;_egb :=_bee .PdfObject .(*_bd .PdfObjectDictionary );_egb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));_egb .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_dced .FixedPrint );return _bee ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_fedb :=&PdfOutline {_bfbae :_bd .MakeIndirectObject (_bd .MakeDict ())};_fedb ._dcaag =_fedb ;return _fedb ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_bd .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_adbd pdfCIDFontType2 )GetRuneMetrics (r rune )(_gb .CharMetrics ,bool ){_ffgc ,_facff :=_adbd ._cgece [r ];if !_facff {_baef ,_edda :=_bd .GetInt (_adbd .DW );if !_edda {return _gb .CharMetrics {},false ;};_ffgc =int (*_baef );};return _gb .CharMetrics {Wx :float64 (_ffgc )},true ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_bcdcdc *PdfPage )AddContentStreamByString (contentStr string )error {_ccecf ,_eagf :=_bd .MakeStream ([]byte (contentStr ),_bd .NewFlateEncoder ());if _eagf !=nil {return _eagf ;};if _bcdcdc .Contents ==nil {_bcdcdc .Contents =_ccecf ;}else {_bgbcd :=_bd .TraceToDirectObject (_bcdcdc .Contents );_bgec ,_faggf :=_bgbcd .(*_bd .PdfObjectArray );if !_faggf {_bgec =_bd .MakeArray (_bgbcd );};_bgec .Append (_ccecf );_bcdcdc .Contents =_bgec ;};return nil ;};func _gfgg (_ccd _bd .PdfObject )(*PdfFilespec ,error ){if _ccd ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_ccd );};

// GetTrailer returns the PDF's trailer dictionary.
func (_baece *PdfReader )GetTrailer ()(*_bd .PdfObjectDictionary ,error ){_bgafe :=_baece ._efgga .GetTrailer ();if _bgafe ==nil {return nil ,_ca .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _bgafe ,nil ;};

// String implements interface PdfObject.
func (_ed *PdfAction )String ()string {_eda ,_bdb :=_ed .ToPdfObject ().(*_bd .PdfIndirectObject );if _bdb {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ed ._cadc ,_eda .PdfObject .String ());};return "";};

// ToPdfObject implements interface PdfModel.
func (_eegc *PdfAnnotationPopup )ToPdfObject ()_bd .PdfObject {_eegc .PdfAnnotation .ToPdfObject ();_efed :=_eegc ._ega ;_edab :=_efed .PdfObject .(*_bd .PdfObjectDictionary );_edab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0050\u006f\u0070u\u0070"));_edab .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_eegc .Parent );_edab .SetIfNotNil ("\u004f\u0070\u0065\u006e",_eegc .Open );return _efed ;};

// R returns the value of the red component of the color.
func (_cccg *PdfColorDeviceRGB )R ()float64 {return float64 (_cccg [0])};

// Subtype returns the font's "Subtype" field.
func (_gdcaf *PdfFont )Subtype ()string {_ggeba :=_gdcaf .baseFields ()._ddad ;if _eafa ,_gegca :=_gdcaf ._ddgba .(*pdfFontType0 );_gegca {_ggeba =_ggeba +"\u003a"+_eafa .DescendantFont .Subtype ();};return _ggeba ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_aead *PdfFieldButton )GetType ()ButtonType {_ggddd :=ButtonTypeCheckbox ;if _aead .Ff !=nil {if (uint32 (*_aead .Ff )&FieldFlagPushbutton .Mask ())> 0{_ggddd =ButtonTypePush ;}else if (uint32 (*_aead .Ff )&FieldFlagRadio .Mask ())> 0{_ggddd =ButtonTypeRadio ;};};return _ggddd ;};func (_dgfc *PdfWriter )writeBytes (_cbdfcc []byte ){if _dgfc ._fcdfd !=nil {return ;};_ggaca ,_gdgfd :=_dgfc ._ggea .Write (_cbdfcc );_dgfc ._gbbdg +=int64 (_ggaca );_dgfc ._fcdfd =_gdgfd ;};var _ pdfFont =(*pdfFontSimple )(nil );func _gaec (_abdbg []byte )[]byte {const _efcc =52845;const _geecf =22719;_adabc :=55665;for _ ,_aabgb :=range _abdbg [:4]{_adabc =(int (_aabgb )+_adabc )*_efcc +_geecf ;};_efac :=make ([]byte ,len (_abdbg )-4);for _bgcd ,_bbdb :=range _abdbg [4:]{_efac [_bgcd ]=byte (int (_bbdb )^_adabc >>8);_adabc =(int (_bbdb )+_adabc )*_efcc +_geecf ;};return _efac ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_efcbe *XObjectImage )GetContainingPdfObject ()_bd .PdfObject {return _efcbe ._abdfc };

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_dcab *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");return img ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// ToPdfObject implements interface PdfModel.
func (_gccb *PdfAnnotationMovie )ToPdfObject ()_bd .PdfObject {_gccb .PdfAnnotation .ToPdfObject ();_egd :=_gccb ._ega ;_dgdf :=_egd .PdfObject .(*_bd .PdfObjectDictionary );_dgdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u004d\u006f\u0076i\u0065"));_dgdf .SetIfNotNil ("\u0054",_gccb .T );_dgdf .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_gccb .Movie );_dgdf .SetIfNotNil ("\u0041",_gccb .A );return _egd ;};func (_cfeb *PdfReader )newPdfAnnotationWatermarkFromDict (_gecc *_bd .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_baca :=PdfAnnotationWatermark {};_baca .FixedPrint =_gecc .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_baca ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cd *PdfActionGoTo )ToPdfObject ()_bd .PdfObject {_cd .PdfAction .ToPdfObject ();_bbe :=_cd ._ccf ;_aaf :=_bbe .PdfObject .(*_bd .PdfObjectDictionary );_aaf .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeGoTo )));_aaf .SetIfNotNil ("\u0044",_cd .D );return _bbe ;};func _geag (_dgcdg _bd .PdfObject )(*PdfShading ,error ){_afgee :=&PdfShading {};var _ecegd *_bd .PdfObjectDictionary ;if _fcfgd ,_bdcad :=_bd .GetIndirect (_dgcdg );_bdcad {_afgee ._ecebg =_fcfgd ;_fgab ,_geccd :=_fcfgd .PdfObject .(*_bd .PdfObjectDictionary );if !_geccd {_aag .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bd .ErrTypeError ;};_ecegd =_fgab ;}else if _aedgf ,_fcfaa :=_bd .GetStream (_dgcdg );_fcfaa {_afgee ._ecebg =_aedgf ;_ecegd =_aedgf .PdfObjectDictionary ;}else if _dcfd ,_cacae :=_bd .GetDict (_dgcdg );_cacae {_afgee ._ecebg =_dcfd ;_ecegd =_dcfd ;}else {_aag .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_dgcdg );return nil ,_bd .ErrTypeError ;};if _ecegd ==nil {_aag .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ca .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_dgcdg =_ecegd .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _dgcdg ==nil {_aag .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_dgcdg =_bd .TraceToDirectObject (_dgcdg );_feaad ,_adadb :=_dgcdg .(*_bd .PdfObjectInteger );if !_adadb {_aag .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_dgcdg );return nil ,_bd .ErrTypeError ;};if *_feaad < 1||*_feaad > 7{_aag .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_feaad );return nil ,_bd .ErrTypeError ;};_afgee .ShadingType =_feaad ;_dgcdg =_ecegd .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _dgcdg ==nil {_aag .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gfcge ,_bdbecb :=NewPdfColorspaceFromPdfObject (_dgcdg );if _bdbecb !=nil {_aag .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_bdbecb );return nil ,_bdbecb ;};_afgee .ColorSpace =_gfcge ;_dgcdg =_ecegd .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _dgcdg !=nil {_dgcdg =_bd .TraceToDirectObject (_dgcdg );_bdec ,_eaef :=_dgcdg .(*_bd .PdfObjectArray );if !_eaef {_aag .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_dgcdg );return nil ,_bd .ErrTypeError ;};_afgee .Background =_bdec ;};_dgcdg =_ecegd .Get ("\u0042\u0042\u006f\u0078");if _dgcdg !=nil {_dgcdg =_bd .TraceToDirectObject (_dgcdg );_fcffc ,_edcaf :=_dgcdg .(*_bd .PdfObjectArray );if !_edcaf {_aag .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_dgcdg );return nil ,_bd .ErrTypeError ;};_bbeg ,_bccf :=NewPdfRectangle (*_fcffc );if _bccf !=nil {_aag .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bccf );return nil ,_bccf ;};_afgee .BBox =_bbeg ;};_dgcdg =_ecegd .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _dgcdg !=nil {_dgcdg =_bd .TraceToDirectObject (_dgcdg );_addca ,_aaafc :=_dgcdg .(*_bd .PdfObjectBool );if !_aaafc {_aag .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dgcdg );return nil ,_bd .ErrTypeError ;};_afgee .AntiAlias =_addca ;};switch *_feaad {case 1:_gaeda ,_fgege :=_fcged (_ecegd );if _fgege !=nil {return nil ,_fgege ;};_gaeda .PdfShading =_afgee ;_afgee ._ebcbd =_gaeda ;return _afgee ,nil ;case 2:_ffaa ,_daff :=_afbfe (_ecegd );if _daff !=nil {return nil ,_daff ;};_ffaa .PdfShading =_afgee ;_afgee ._ebcbd =_ffaa ;return _afgee ,nil ;case 3:_fdabf ,_cddcg :=_dfacd (_ecegd );if _cddcg !=nil {return nil ,_cddcg ;};_fdabf .PdfShading =_afgee ;_afgee ._ebcbd =_fdabf ;return _afgee ,nil ;case 4:_ecbac ,_ccga :=_edde (_ecegd );if _ccga !=nil {return nil ,_ccga ;};_ecbac .PdfShading =_afgee ;_afgee ._ebcbd =_ecbac ;return _afgee ,nil ;case 5:_dffcf ,_cbacb :=_gbdgf (_ecegd );if _cbacb !=nil {return nil ,_cbacb ;};_dffcf .PdfShading =_afgee ;_afgee ._ebcbd =_dffcf ;return _afgee ,nil ;case 6:_cbeea ,_gdaef :=_ccgca (_ecegd );if _gdaef !=nil {return nil ,_gdaef ;};_cbeea .PdfShading =_afgee ;_afgee ._ebcbd =_cbeea ;return _afgee ,nil ;case 7:_egacd ,_dgbg :=_ddbf (_ecegd );if _dgbg !=nil {return nil ,_dgbg ;};_egacd .PdfShading =_afgee ;_afgee ._ebcbd =_egacd ;return _afgee ,nil ;};return nil ,_ca .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};func _afbfe (_efgff *_bd .PdfObjectDictionary )(*PdfShadingType2 ,error ){_bcea :=PdfShadingType2 {};_cgdc :=_efgff .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _cgdc ==nil {_aag .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;};_befa ,_bfebd :=_cgdc .(*_bd .PdfObjectArray );if !_bfebd {_aag .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cgdc );return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _befa .Len ()!=4{_aag .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_befa .Len ());return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_bcea .Coords =_befa ;if _ddge :=_efgff .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ddge !=nil {_ddge =_bd .TraceToDirectObject (_ddge );_ebcf ,_cecbf :=_ddge .(*_bd .PdfObjectArray );if !_cecbf {_aag .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ddge );return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bcea .Domain =_ebcf ;};_cgdc =_efgff .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cgdc ==nil {_aag .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_bcea .Function =[]PdfFunction {};if _fgbda ,_eeadf :=_cgdc .(*_bd .PdfObjectArray );_eeadf {for _ ,_ffege :=range _fgbda .Elements (){_acddc ,_feedc :=_cgdeb (_ffege );if _feedc !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_feedc );return nil ,_feedc ;};_bcea .Function =append (_bcea .Function ,_acddc );};}else {_bffbc ,_eabce :=_cgdeb (_cgdc );if _eabce !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eabce );return nil ,_eabce ;};_bcea .Function =append (_bcea .Function ,_bffbc );};if _ggeee :=_efgff .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_ggeee !=nil {_ggeee =_bd .TraceToDirectObject (_ggeee );_bdad ,_gggec :=_ggeee .(*_bd .PdfObjectArray );if !_gggec {_aag .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggeee );return nil ,_bd .ErrTypeError ;};if _bdad .Len ()!=2{_aag .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bdad .Len ());return nil ,ErrInvalidAttribute ;};_bcea .Extend =_bdad ;};return &_bcea ,nil ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToPdfObject implements interface PdfModel.
func (_gacc *PdfAnnotationStrikeOut )ToPdfObject ()_bd .PdfObject {_gacc .PdfAnnotation .ToPdfObject ();_fdcb :=_gacc ._ega ;_bba :=_fdcb .PdfObject .(*_bd .PdfObjectDictionary );_gacc .PdfAnnotationMarkup .appendToPdfDictionary (_bba );_bba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));_bba .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gacc .QuadPoints );return _fdcb ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_fdbgf :=&PdfFieldSignature {};_fdbgf .PdfField =NewPdfField ();_fdbgf .PdfField .SetContext (_fdbgf );_fdbgf .PdfAnnotationWidget =NewPdfAnnotationWidget ();_fdbgf .PdfAnnotationWidget .SetContext (_fdbgf );_fdbgf .PdfAnnotationWidget ._ega =_fdbgf .PdfField ._gcacg ;_fdbgf .T =_bd .MakeString ("");_fdbgf .F =_bd .MakeInteger (132);_fdbgf .V =signature ;return _fdbgf ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _bd .PdfObject ;PreserveRB _bd .PdfObject ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_bcdcg _eb .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_fegfcd _be .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_ffddg _be .Image )(*Image ,error );

// Compress an image.
Compress (_dggac *Image ,_bgfcg int64 )(*Image ,error );};

// ToPdfObject implements interface PdfModel.
func (_cacda *PdfSignature )ToPdfObject ()_bd .PdfObject {_cbgcb :=_cacda ._cgbf ;var _dagf *_bd .PdfObjectDictionary ;if _fffea ,_dfegfd :=_cbgcb .PdfObject .(*pdfSignDictionary );_dfegfd {_dagf =_fffea .PdfObjectDictionary ;}else {_dagf =_cbgcb .PdfObject .(*_bd .PdfObjectDictionary );};_dagf .SetIfNotNil ("\u0054\u0079\u0070\u0065",_cacda .Type );_dagf .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_cacda .Filter );_dagf .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_cacda .SubFilter );_dagf .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_cacda .ByteRange );_dagf .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cacda .Contents );_dagf .SetIfNotNil ("\u0043\u0065\u0072\u0074",_cacda .Cert );_dagf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cacda .Name );_dagf .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_cacda .Reason );_dagf .SetIfNotNil ("\u004d",_cacda .M );_dagf .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_cacda .Reference );_dagf .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_cacda .Changes );_dagf .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_cacda .ContactInfo );return _cbgcb ;};

// Height returns the height of `rect`.
func (_bbabbg *PdfRectangle )Height ()float64 {return _cg .Abs (_bbabbg .Ury -_bbabbg .Lly )};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _bd .PdfObject ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_deade *_bd .PdfIndirectObject ;_eegaf *_bd .PdfIndirectObject ;_efegf map[_bd .PdfObject ]struct{};_fceb []_bd .PdfObject ;_egeab map[_bd .PdfObject ]struct{};_abfgb []*_bd .PdfIndirectObject ;_abbcc *PdfOutlineTreeNode ;_ccbfg *_bd .PdfObjectDictionary ;_cecf []_bd .PdfObject ;_fagb *_bd .PdfIndirectObject ;_ggea *_d .Writer ;_gbbdg int64 ;_fcdfd error ;_bcgd *_bd .PdfCrypt ;_gagb *_bd .PdfObjectDictionary ;_gbdf *_bd .PdfIndirectObject ;_fcgcg *_bd .PdfObjectArray ;_ggdcd int ;_fbfbg int ;_gdace *bool ;_ggcdd map[_bd .PdfObject ][]*_bd .PdfObjectDictionary ;_baggg *PdfAcroForm ;_aegdb Optimizer ;_egafb map[int ]crossReference ;_cecea int64 ;ObjNumOffset int ;_dfbe bool ;_ebgba _bd .XrefTable ;_gafbd int64 ;_bfcf int64 ;_abdbb map[_bd .PdfObject ]int64 ;_dfegff map[_bd .PdfObject ]struct{};};

// GetAscent returns the Ascent of the font `descriptor`.
func (_gbgc *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _bd .GetNumberAsFloat (_gbgc .Ascent );};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_egg :=NewPdfAnnotation ();_ced :=&PdfAnnotationSquare {};_ced .PdfAnnotation =_egg ;_ced .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egg .SetContext (_ced );return _ced ;};var _eeedd _b .Time ;

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_ffde *PdfOutline )GetContainingPdfObject ()_bd .PdfObject {return _ffde ._bfbae };func _cbed (_agaef *XObjectImage )error {if _agaef .SMask ==nil {return nil ;};_cdddf ,_ccbdc :=_agaef .SMask .(*_bd .PdfObjectStream );if !_ccbdc {_aag .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _bd .ErrTypeError ;};_ddcce :=_cdddf .PdfObjectDictionary ;_ffgbec :=_ddcce .Get ("\u004d\u0061\u0074t\u0065");if _ffgbec ==nil {return nil ;};_egbed ,_eedge :=_acfcc (_ffgbec .(*_bd .PdfObjectArray ));if _eedge !=nil {return _eedge ;};_aede :=_bd .MakeArrayFromFloats ([]float64 {_egbed });_ddcce .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_aede );return nil ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_fbcccg :map[_bd .PdfObject ]struct{}{},_befgd :_gbfb (),_efgga :_bd .NewParserFromString (txt )};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_fdafc *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_fdafc .Base .GetNumComponents ();_fged :=int (vals [0])*N ;if _fged < 0||(_fged +N -1)>=len (_fdafc ._eagg ){return nil ,_ca .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_cead :=_fdafc ._eagg [_fged :_fged +N ];var _gfag []float64 ;for _ ,_fcee :=range _cead {_gfag =append (_gfag ,float64 (_fcee )/255.0);};_cdgbd ,_cegfb :=_fdafc .Base .ColorFromFloats (_gfag );if _cegfb !=nil {return nil ,_cegfb ;};return _cdgbd ,nil ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_bbedfc *PdfField )IsTerminal ()bool {return len (_bbedfc .Kids )==0};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _b .Time ){_eeedd =creationDate };

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _bd .PdfObject ;};func (_ggcb *PdfReader )resolveReference (_fcbea *_bd .PdfObjectReference )(_bd .PdfObject ,bool ,error ){_cfgf ,_efdbf :=_ggcb ._efgga .ObjCache [int (_fcbea .ObjectNumber )];if !_efdbf {_aag .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_fcbea );_bccaf ,_eaddbb :=_ggcb ._efgga .LookupByReference (*_fcbea );if _eaddbb !=nil {return nil ,false ,_eaddbb ;};_ggcb ._efgga .ObjCache [int (_fcbea .ObjectNumber )]=_bccaf ;return _bccaf ,false ,nil ;};return _cfgf ,true ,nil ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_bc *PdfAction )GetContext ()PdfModel {if _bc ==nil {return nil ;};return _bc ._cadc ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bd .PdfObject ;IC _bd .PdfObject ;BE _bd .PdfObject ;RD _bd .PdfObject ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_faggg *PdfPageResources )ToPdfObject ()_bd .PdfObject {_fcfb :=_faggg ._caddd ;_fcfb .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_faggg .ExtGState );if _faggg ._ffdfb !=nil {_faggg .ColorSpace =_faggg ._ffdfb .ToPdfObject ();};_fcfb .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_faggg .ColorSpace );_fcfb .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_faggg .Pattern );_fcfb .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_faggg .Shading );_fcfb .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_faggg .XObject );_fcfb .SetIfNotNil ("\u0046\u006f\u006e\u0074",_faggg .Font );_fcfb .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_faggg .ProcSet );_fcfb .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_faggg .Properties );return _fcfb ;};type pdfCIDFontType2 struct{fontCommon ;_dgac *_bd .PdfIndirectObject ;_gaff _ff .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_bd .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bd .PdfObject ;W _bd .PdfObject ;DW2 _bd .PdfObject ;W2 _bd .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _bd .PdfObject ;_gbfg map[_ff .CharCode ]float64 ;_cdfge float64 ;_cgece map[rune ]int ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_dcde :=NewPdfAnnotation ();_cgg :=&PdfAnnotationSound {};_cgg .PdfAnnotation =_dcde ;_cgg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dcde .SetContext (_cgg );return _cgg ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_fbae :=PdfColorLab {l ,a ,b };return &_fbae };

// C returns the value of the C component of the color.
func (_edea *PdfColorCalRGB )C ()float64 {return float64 (_edea [2])};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_ecf :=NewPdfAction ();_ddg :=&PdfActionSubmitForm {};_ddg .PdfAction =_ecf ;_ecf .SetContext (_ddg );return _ddg ;};func (_dccb *PdfReader )newPdfAnnotationHighlightFromDict (_fbad *_bd .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_eef :=PdfAnnotationHighlight {};_eac ,_gccd :=_dccb .newPdfAnnotationMarkupFromDict (_fbad );if _gccd !=nil {return nil ,_gccd ;};_eef .PdfAnnotationMarkup =_eac ;_eef .QuadPoints =_fbad .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_eef ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ab *PdfActionLaunch )ToPdfObject ()_bd .PdfObject {_ab .PdfAction .ToPdfObject ();_abg :=_ab ._ccf ;_fa :=_abg .PdfObject .(*_bd .PdfObjectDictionary );_fa .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeLaunch )));if _ab .F !=nil {_fa .Set ("\u0046",_ab .F .ToPdfObject ());};_fa .SetIfNotNil ("\u0057\u0069\u006e",_ab .Win );_fa .SetIfNotNil ("\u004d\u0061\u0063",_ab .Mac );_fa .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ab .Unix );_fa .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ab .NewWindow );return _abg ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bcgeba *PdfShadingType7 )ToPdfObject ()_bd .PdfObject {_bcgeba .PdfShading .ToPdfObject ();_ggfad ,_dgcce :=_bcgeba .getShadingDict ();if _dgcce !=nil {_aag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _bcgeba .BitsPerCoordinate !=nil {_ggfad .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bcgeba .BitsPerCoordinate );};if _bcgeba .BitsPerComponent !=nil {_ggfad .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bcgeba .BitsPerComponent );};if _bcgeba .BitsPerFlag !=nil {_ggfad .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bcgeba .BitsPerFlag );};if _bcgeba .Decode !=nil {_ggfad .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bcgeba .Decode );};if _bcgeba .Function !=nil {if len (_bcgeba .Function )==1{_ggfad .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bcgeba .Function [0].ToPdfObject ());}else {_dcgae :=_bd .MakeArray ();for _ ,_edddb :=range _bcgeba .Function {_dcgae .Append (_edddb .ToPdfObject ());};_ggfad .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dcgae );};};return _bcgeba ._ecebg ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_accgd *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _accgd ._fdcdf ==nil {_accgd ._fdcdf =_afc .NewPSExecutor (_accgd .Program );};var _gaaf []_afc .PSObject ;for _ ,_fgdf :=range xVec {_gaaf =append (_gaaf ,_afc .MakeReal (_fgdf ));};_abbag ,_aaaa :=_accgd ._fdcdf .Execute (_gaaf );if _aaaa !=nil {return nil ,_aaaa ;};_dfaf ,_aaaa :=_afc .PSObjectArrayToFloat64Array (_abbag );if _aaaa !=nil {return nil ,_aaaa ;};return _dfaf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_debd *PdfAnnotationPolyLine )ToPdfObject ()_bd .PdfObject {_debd .PdfAnnotation .ToPdfObject ();_aebe :=_debd ._ega ;_fgbe :=_aebe .PdfObject .(*_bd .PdfObjectDictionary );_debd .PdfAnnotationMarkup .appendToPdfDictionary (_fgbe );_fgbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));_fgbe .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_debd .Vertices );_fgbe .SetIfNotNil ("\u004c\u0045",_debd .LE );_fgbe .SetIfNotNil ("\u0042\u0053",_debd .BS );_fgbe .SetIfNotNil ("\u0049\u0043",_debd .IC );_fgbe .SetIfNotNil ("\u0042\u0045",_debd .BE );_fgbe .SetIfNotNil ("\u0049\u0054",_debd .IT );_fgbe .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_debd .Measure );return _aebe ;};

// Write writes out the PDF.
func (_cbbb *PdfWriter )Write (writer _eb .Writer )error {_aag .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_ecgeg :=_dcf .GetLicenseKey ();if (_ecgeg ==nil ||!_ecgeg .IsLicensed ())&&!_bcaa {_c .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_c .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");return _ca .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _cbbb ._abbcc !=nil {_aag .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_cbbb ._abbcc );_eageb :=_cbbb ._abbcc .ToPdfObject ();_aag .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_eageb ,_eageb ,_eageb );_cbbb ._ccbfg .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_eageb );_ggaea :=_cbbb .addObjects (_eageb );if _ggaea !=nil {return _ggaea ;};};if _cbbb ._baggg !=nil {_aag .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_egddb :=_cbbb ._baggg .ToPdfObject ();_aag .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_egddb );_cbbb ._ccbfg .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_egddb );_agcd :=_cbbb .addObjects (_egddb );if _agcd !=nil {return _agcd ;};};for _acbe ,_gfebaa :=range _cbbb ._ggcdd {if !_cbbb .hasObject (_acbe ){_aag .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_acbe ,_acbe ,_acbe );for _ ,_fdbbc :=range _gfebaa {for _ ,_faac :=range _fdbbc .Keys (){_bggge :=_fdbbc .Get (_faac );if _bggge ==_acbe {_aag .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");_fdbbc .Set (_faac ,_bd .MakeNull ());break ;};};};};};_cbbb ._ccbfg .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_bd .MakeName (_c .Sprintf ("\u0025\u0064\u002e%\u0064",_cbbb ._ggdcd ,_cbbb ._fbfbg )));_cbbb .copyObjects ();if _cbbb ._aegdb !=nil {var _fgbdc error ;_cbbb ._fceb ,_fgbdc =_cbbb ._aegdb .Optimize (_cbbb ._fceb );if _fgbdc !=nil {return _fgbdc ;};_eaffg :=make (map[_bd .PdfObject ]struct{},len (_cbbb ._fceb ));for _ ,_agdga :=range _cbbb ._fceb {_eaffg [_agdga ]=struct{}{};};_cbbb ._egeab =_eaffg ;};_cbbb ._gbbdg =_cbbb ._cecea ;_cbbb ._ggea =_d .NewWriter (writer );_ddcgc :=_cbbb ._ggdcd > 1||(_cbbb ._ggdcd ==1&&_cbbb ._fbfbg > 4);if _cbbb ._gdace !=nil {_ddcgc =*_cbbb ._gdace ;};_bceed :=make (map[_bd .PdfObject ]bool );for _ ,_faegb :=range _cbbb ._fceb {if _ecfed ,_bedeb :=_faegb .(*_bd .PdfObjectStreams );_bedeb {_ddcgc =true ;for _ ,_aaefea :=range _ecfed .Elements (){_bceed [_aaefea ]=true ;if _fgace ,_bedced :=_aaefea .(*_bd .PdfIndirectObject );_bedced {_bceed [_fgace .PdfObject ]=true ;};};};};if _ddcgc &&_cbbb ._ggdcd ==1&&_cbbb ._fbfbg < 5{_cbbb ._fbfbg =5;};if _cbbb ._dfbe {_cbbb .writeString ("\u000a");}else {_cbbb .writeString (_c .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_cbbb ._ggdcd ,_cbbb ._fbfbg ));_cbbb .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};_cbbb .updateObjectNumbers ();_aag .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_cbbb ._fceb ));_cbbb ._egafb =make (map[int ]crossReference );_cbbb ._egafb [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _cbbb ._ebgba .ObjectMap !=nil {for _dgcgc ,_afdfa :=range _cbbb ._ebgba .ObjectMap {if _dgcgc ==0{continue ;};if _afdfa .XType ==_bd .XrefTypeObjectStream {_gaacdd :=crossReference {Type :2,ObjectNumber :_afdfa .OsObjNumber ,Index :_afdfa .OsObjIndex };_cbbb ._egafb [_dgcgc ]=_gaacdd ;};if _afdfa .XType ==_bd .XrefTypeTableEntry {_gcecb :=crossReference {Type :1,ObjectNumber :_afdfa .ObjectNumber ,Offset :_afdfa .Offset };_cbbb ._egafb [_dgcgc ]=_gcecb ;};};};for _ ,_aeffb :=range _cbbb ._fceb {if _eddadb :=_bceed [_aeffb ];_eddadb {continue ;};_bgfbd :=int64 (0);switch _bcdfe :=_aeffb .(type ){case *_bd .PdfIndirectObject :_bgfbd =_bcdfe .ObjectNumber ;case *_bd .PdfObjectStream :_bgfbd =_bcdfe .ObjectNumber ;case *_bd .PdfObjectStreams :_bgfbd =_bcdfe .ObjectNumber ;default:_aag .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_aeffb );return ErrTypeCheck ;};if _cbbb ._bcgd !=nil &&_aeffb !=_cbbb ._gbdf {_bcdbc :=_cbbb ._bcgd .Encrypt (_aeffb ,int64 (_bgfbd ),0);if _bcdbc !=nil {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_bcdbc );return _bcdbc ;};};_cbbb .writeObject (int (_bgfbd ),_aeffb );};_gbdde :=_cbbb ._gbbdg ;var _acecc int ;for _cabda :=range _cbbb ._egafb {if _cabda > _acecc {_acecc =_cabda ;};};if _ddcgc {_dgaag :=_acecc +1;_cbbb ._egafb [_dgaag ]=crossReference {Type :1,ObjectNumber :_dgaag ,Offset :_gbdde };_dcgaf :=_af .NewBuffer (nil );_acggb :=_bd .MakeArray ();for _feggc :=0;_feggc <=_acecc ;{for ;_feggc <=_acecc ;_feggc ++{_gagab ,_defeeb :=_cbbb ._egafb [_feggc ];if _defeeb &&(!_cbbb ._dfbe ||_cbbb ._dfbe &&(_gagab .Type ==1&&_gagab .Offset >=_cbbb ._bfcf ||_gagab .Type ==0)){break ;};};var _adebbe int ;for _adebbe =_feggc +1;_adebbe <=_acecc ;_adebbe ++{_fedeg ,_gdfce :=_cbbb ._egafb [_adebbe ];if _gdfce &&(!_cbbb ._dfbe ||_cbbb ._dfbe &&(_fedeg .Type ==1&&_fedeg .Offset > _cbbb ._bfcf )){continue ;};break ;};_acggb .Append (_bd .MakeInteger (int64 (_feggc )),_bd .MakeInteger (int64 (_adebbe -_feggc )));for _dcfdg :=_feggc ;_dcfdg < _adebbe ;_dcfdg ++{_fabedb :=_cbbb ._egafb [_dcfdg ];switch _fabedb .Type {case 0:_f .Write (_dcgaf ,_f .BigEndian ,byte (0));_f .Write (_dcgaf ,_f .BigEndian ,uint32 (0));_f .Write (_dcgaf ,_f .BigEndian ,uint16 (0xFFFF));case 1:_f .Write (_dcgaf ,_f .BigEndian ,byte (1));_f .Write (_dcgaf ,_f .BigEndian ,uint32 (_fabedb .Offset ));_f .Write (_dcgaf ,_f .BigEndian ,uint16 (_fabedb .Generation ));case 2:_f .Write (_dcgaf ,_f .BigEndian ,byte (2));_f .Write (_dcgaf ,_f .BigEndian ,uint32 (_fabedb .ObjectNumber ));_f .Write (_dcgaf ,_f .BigEndian ,uint16 (_fabedb .Index ));};};_feggc =_adebbe +1;};_babgb ,_fdfgf :=_bd .MakeStream (_dcgaf .Bytes (),_bd .NewFlateEncoder ());if _fdfgf !=nil {return _fdfgf ;};_babgb .ObjectNumber =int64 (_dgaag );_babgb .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_bd .MakeName ("\u0058\u0052\u0065\u0066"));_babgb .PdfObjectDictionary .Set ("\u0057",_bd .MakeArray (_bd .MakeInteger (1),_bd .MakeInteger (4),_bd .MakeInteger (2)));_babgb .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_acggb );_babgb .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_bd .MakeInteger (int64 (_dgaag +1)));_babgb .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_cbbb ._fagb );_babgb .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_cbbb ._deade );if _cbbb ._dfbe &&_cbbb ._gafbd > 0{_babgb .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_bd .MakeInteger (_cbbb ._gafbd ));};if _cbbb ._bcgd !=nil {_babgb .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cbbb ._gbdf );_babgb .Set ("\u0049\u0044",_cbbb ._fcgcg );_aag .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cbbb ._fcgcg );};_cbbb .writeObject (int (_babgb .ObjectNumber ),_babgb );}else {_cbbb .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _abed :=0;_abed <=_acecc ;{for ;_abed <=_acecc ;_abed ++{_ggafe ,_egcgf :=_cbbb ._egafb [_abed ];if _egcgf &&(!_cbbb ._dfbe ||_cbbb ._dfbe &&(_ggafe .Type ==1&&_ggafe .Offset >=_cbbb ._bfcf ||_ggafe .Type ==0)){break ;};};var _aaadc int ;for _aaadc =_abed +1;_aaadc <=_acecc ;_aaadc ++{_degaff ,_eecca :=_cbbb ._egafb [_aaadc ];if _eecca &&(!_cbbb ._dfbe ||_cbbb ._dfbe &&(_degaff .Type ==1&&_degaff .Offset > _cbbb ._bfcf )){continue ;};break ;};_ffegg :=_c .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_abed ,_aaadc -_abed );_cbbb .writeString (_ffegg );for _egddbd :=_abed ;_egddbd < _aaadc ;_egddbd ++{_acded :=_cbbb ._egafb [_egddbd ];switch _acded .Type {case 0:_ffegg =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_cbbb .writeString (_ffegg );case 1:_ffegg =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_acded .Offset ,0);_cbbb .writeString (_ffegg );};};_abed =_aaadc +1;};_acef :=_bd .MakeDict ();_acef .Set ("\u0049\u006e\u0066\u006f",_cbbb ._fagb );_acef .Set ("\u0052\u006f\u006f\u0074",_cbbb ._deade );_acef .Set ("\u0053\u0069\u007a\u0065",_bd .MakeInteger (int64 (_acecc +1)));if _cbbb ._dfbe &&_cbbb ._gafbd > 0{_acef .Set ("\u0050\u0072\u0065\u0076",_bd .MakeInteger (_cbbb ._gafbd ));};if _cbbb ._bcgd !=nil {_acef .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cbbb ._gbdf );_acef .Set ("\u0049\u0044",_cbbb ._fcgcg );_aag .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cbbb ._fcgcg );};_cbbb .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_cbbb .writeString (_acef .WriteString ());_cbbb .writeString ("\u000a");};_adfd :=_c .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_gbdde );_cbbb .writeString (_adfd );_cbbb .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _cbbb ._fcdfd ==nil {_cbbb ._fcdfd =_cbbb ._ggea .Flush ();};return _cbbb ._fcdfd ;};

// SetVersion sets the PDF version of the output file.
func (_bgcfb *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_bgcfb ._ggdcd =majorVersion ;_bgcfb ._fbfbg =minorVersion ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_fd :=NewPdfAction ();_gce :=&PdfActionHide {};_gce .PdfAction =_fd ;_fd .SetContext (_gce );return _gce ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _bd .PdfObject ;B _bd .PdfObject ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_bgbf *_bd .PdfIndirectObject ;};func _ageg (_geceb _bd .PdfObject )(*_bd .PdfObjectDictionary ,*fontCommon ,error ){_dgab :=&fontCommon {};if _cdabd ,_geaa :=_geceb .(*_bd .PdfIndirectObject );_geaa {_dgab ._gebbb =_cdabd .ObjectNumber ;};_gafc ,_eedaf :=_bd .GetDict (_geceb );if !_eedaf {_aag .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_geceb );return nil ,nil ,ErrFontNotSupported ;};_gdbbf ,_eedaf :=_bd .GetNameVal (_gafc .Get ("\u0054\u0079\u0070\u0065"));if !_eedaf {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};if _gdbbf !="\u0046\u006f\u006e\u0074"{_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_gdbbf ,"\u0046\u006f\u006e\u0074");return nil ,nil ,_bd .ErrTypeError ;};_edcge ,_eedaf :=_bd .GetNameVal (_gafc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_eedaf {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};_dgab ._ddad =_edcge ;_cfgg ,_eedaf :=_bd .GetNameVal (_gafc .Get ("\u004e\u0061\u006d\u0065"));if _eedaf {_dgab ._cggc =_cfgg ;};if _edcge =="\u0054\u0079\u0070e\u0033"{_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0033\u0020\u0066\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0073u\u0070\u0070\u006f\u0072\u0074e\u0064\u002e \u0064\u003d\u0025\u0073",_gafc );return _gafc ,_dgab ,ErrType3FontNotSupported ;};_cdee ,_eedaf :=_bd .GetNameVal (_gafc .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_eedaf {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return _gafc ,_dgab ,ErrRequiredAttributeMissing ;};_dgab ._gfceb =_cdee ;_fbcbd :=_gafc .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _fbcbd !=nil {_dcgdf ,_ccbba :=_ggeeb (_fbcbd );if _ccbba !=nil {_aag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ccbba );return _gafc ,_dgab ,_ccbba ;};_dgab ._dcgda =_dcgdf ;};_fdcda :=_gafc .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _fdcda !=nil {_dgab ._cgab =_bd .TraceToDirectObject (_fdcda );_aege ,_dffd :=_abgb (_dgab ._cgab ,_dgab );if _dffd !=nil {return _gafc ,_dgab ,_dffd ;};_dgab ._cecd =_aege ;}else if _edcge =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_edcge =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_cfcdf ,_cbgb :=_fgg .NewCIDSystemInfo (_gafc .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if _cbgb !=nil {return _gafc ,_dgab ,_cbgb ;};_bdcb :=_c .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_cfcdf .Registry ,_cfcdf .Ordering );if _fgg .IsPredefinedCMap (_bdcb ){_dgab ._cecd ,_cbgb =_fgg .LoadPredefinedCMap (_bdcb );if _cbgb !=nil {_aag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_bdcb ,_cbgb );};};};return _gafc ,_dgab ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_dbab *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_bace ,_efbg :=_ggce (basefont );if _efbg !=nil {return nil ,_efbg ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_bace ._cagf =_ff .NewWinAnsiEncoder ();};return &PdfFont {_ddgba :&_bace },nil ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _b .Time ){_eeedd =modifiedDate };

// String returns a string representation of the field.
func (_eggg *PdfField )String ()string {if _bgge ,_fabb :=_eggg .ToPdfObject ().(*_bd .PdfIndirectObject );_fabb {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_eggg ._dac ,_bgge .PdfObject .String ());};return "";};

// ToPdfObject implements interface PdfModel.
func (_fac *PdfActionRendition )ToPdfObject ()_bd .PdfObject {_fac .PdfAction .ToPdfObject ();_gdc :=_fac ._ccf ;_eba :=_gdc .PdfObject .(*_bd .PdfObjectDictionary );_eba .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeRendition )));_eba .SetIfNotNil ("\u0052",_fac .R );_eba .SetIfNotNil ("\u0041\u004e",_fac .AN );_eba .SetIfNotNil ("\u004f\u0050",_fac .OP );_eba .SetIfNotNil ("\u004a\u0053",_fac .JS );return _gdc ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _bd .PdfObject )(*PdfFont ,error ){return _agdf (fontObj ,true )};func (_fddf *PdfFilespec )getDict ()*_bd .PdfObjectDictionary {if _bdfce ,_bcdg :=_fddf ._bdea .(*_bd .PdfIndirectObject );_bcdg {_cafb ,_ffgdc :=_bdfce .PdfObject .(*_bd .PdfObjectDictionary );if !_ffgdc {return nil ;};return _cafb ;}else if _bfg ,_bbaef :=_fddf ._bdea .(*_bd .PdfObjectDictionary );_bbaef {return _bfg ;}else {_aag .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_fddf ._bdea );return nil ;};};

// AddImageResource adds an image to the XObject resources.
func (_dfec *PdfPage )AddImageResource (name _bd .PdfObjectName ,ximg *XObjectImage )error {var _bcecc *_bd .PdfObjectDictionary ;if _dfec .Resources .XObject ==nil {_bcecc =_bd .MakeDict ();_dfec .Resources .XObject =_bcecc ;}else {var _acfae bool ;_bcecc ,_acfae =(_dfec .Resources .XObject ).(*_bd .PdfObjectDictionary );if !_acfae {return _ca .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_bcecc .Set (name ,ximg .ToPdfObject ());return nil ;};func _ccgca (_ggfdd *_bd .PdfObjectDictionary )(*PdfShadingType6 ,error ){_dgacf :=PdfShadingType6 {};_gdecg :=_ggfdd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _gdecg ==nil {_aag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_dgfgd ,_ebcfb :=_gdecg .(*_bd .PdfObjectInteger );if !_ebcfb {_aag .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gdecg );return nil ,_bd .ErrTypeError ;};_dgacf .BitsPerCoordinate =_dgfgd ;_gdecg =_ggfdd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gdecg ==nil {_aag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_dgfgd ,_ebcfb =_gdecg .(*_bd .PdfObjectInteger );if !_ebcfb {_aag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gdecg );return nil ,_bd .ErrTypeError ;};_dgacf .BitsPerComponent =_dgfgd ;_gdecg =_ggfdd .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gdecg ==nil {_aag .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_dgfgd ,_ebcfb =_gdecg .(*_bd .PdfObjectInteger );if !_ebcfb {_aag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gdecg );return nil ,_bd .ErrTypeError ;};_dgacf .BitsPerComponent =_dgfgd ;_gdecg =_ggfdd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gdecg ==nil {_aag .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_dfacb ,_ebcfb :=_gdecg .(*_bd .PdfObjectArray );if !_ebcfb {_aag .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gdecg );return nil ,_bd .ErrTypeError ;};_dgacf .Decode =_dfacb ;if _deebg :=_ggfdd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_deebg !=nil {_dgacf .Function =[]PdfFunction {};if _gcdgd ,_defbe :=_deebg .(*_bd .PdfObjectArray );_defbe {for _ ,_bfag :=range _gcdgd .Elements (){_dfdae ,_dcgge :=_cgdeb (_bfag );if _dcgge !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dcgge );return nil ,_dcgge ;};_dgacf .Function =append (_dgacf .Function ,_dfdae );};}else {_edggf ,_ffdgf :=_cgdeb (_deebg );if _ffdgf !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ffdgf );return nil ,_ffdgf ;};_dgacf .Function =append (_dgacf .Function ,_edggf );};};return &_dgacf ,nil ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_dbgab *_bd .PdfIndirectObject ;};

// Val returns the value of the color.
func (_fegf *PdfColorCalGray )Val ()float64 {return float64 (*_fegf )};

// GetOptimizer returns current PDF optimizer.
func (_ddefe *PdfWriter )GetOptimizer ()Optimizer {return _ddefe ._aegdb };

// StdFontName represents name of a standard font.
type StdFontName =_gb .StdFontName ;

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _bd .PdfObject ;};const (_ggaced =0x00001;_bebe =0x00002;_eedgb =0x00004;_cbgaa =0x00008;_cabbc =0x00020;_dgge =0x00040;_cddb =0x10000;_cafba =0x20000;_cgcfe =0x40000;);func _cgdeb (_deedd _bd .PdfObject )(PdfFunction ,error ){_deedd =_bd .ResolveReference (_deedd );if _dead ,_dedd :=_deedd .(*_bd .PdfObjectStream );_dedd {_fggdf :=_dead .PdfObjectDictionary ;_edbg ,_afeg :=_fggdf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bd .PdfObjectInteger );if !_afeg {_aag .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_edbg ==0{return _ecgc (_dead );}else if *_edbg ==4{return _ccee (_dead );}else {return nil ,_ca .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _ggddc ,_fcffg :=_deedd .(*_bd .PdfIndirectObject );_fcffg {_adebb ,_ccadf :=_ggddc .PdfObject .(*_bd .PdfObjectDictionary );if !_ccadf {_aag .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_ca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_ccbf ,_ccadf :=_adebb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bd .PdfObjectInteger );if !_ccadf {_aag .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_ccbf ==2{return _adaa (_ggddc );}else if *_ccbf ==3{return _gcbbc (_ggddc );}else {return nil ,_ca .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _gggd ,_dadbc :=_deedd .(*_bd .PdfObjectDictionary );_dadbc {_fegfc ,_dafbe :=_gggd .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bd .PdfObjectInteger );if !_dafbe {_aag .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_fegfc ==2{return _adaa (_gggd );}else if *_fegfc ==3{return _gcbbc (_gggd );}else {return nil ,_ca .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_aag .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_deedd );return nil ,_ca .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bd .PdfObject ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_dfbc :=NewPdfAnnotation ();_bfcg :=&PdfAnnotationStamp {};_bfcg .PdfAnnotation =_dfbc ;_bfcg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfbc .SetContext (_bfcg );return _bfcg ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_gfeb *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_bdgc ,_bdgg :=color .(*PdfColorPattern );if !_bdgg {_aag .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );return nil ,ErrTypeCheck ;};if _bdgc .Color ==nil {return color ,nil ;};if _gfeb .UnderlyingCS ==nil {return nil ,_ca .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _gfeb .UnderlyingCS .ColorToRGB (_bdgc .Color );};

// ToPdfObject implements interface PdfModel.
func (_aggb *PdfAnnotationRedact )ToPdfObject ()_bd .PdfObject {_aggb .PdfAnnotation .ToPdfObject ();_eadf :=_aggb ._ega ;_bdab :=_eadf .PdfObject .(*_bd .PdfObjectDictionary );_aggb .PdfAnnotationMarkup .appendToPdfDictionary (_bdab );_bdab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));_bdab .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aggb .QuadPoints );_bdab .SetIfNotNil ("\u0049\u0043",_aggb .IC );_bdab .SetIfNotNil ("\u0052\u004f",_aggb .RO );_bdab .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_aggb .OverlayText );_bdab .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_aggb .Repeat );_bdab .SetIfNotNil ("\u0044\u0041",_aggb .DA );_bdab .SetIfNotNil ("\u0051",_aggb .Q );return _eadf ;};func _dfege (_bdag string )(map[_ff .CharCode ]_ff .GlyphName ,error ){_cdeca :=_ad .Split (_bdag ,"\u000a");_adabe :=make (map[_ff .CharCode ]_ff .GlyphName );for _ ,_dffcae :=range _cdeca {_eeff :=_dadcf .FindStringSubmatch (_dffcae );if _eeff ==nil {continue ;};_dfcbb ,_ddcgg :=_eeff [1],_eeff [2];_cbce ,_gbeg :=_bb .Atoi (_dfcbb );if _gbeg !=nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_dffcae );return nil ,_bd .ErrTypeError ;};_adabe [_ff .CharCode (_cbce )]=_ff .GlyphName (_ddcgg );};_aag .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_adabe );return _adabe ,nil ;};func _ccee (_ccfe *_bd .PdfObjectStream )(*PdfFunctionType4 ,error ){_ffcbc :=&PdfFunctionType4 {};_ffcbc ._ceabd =_ccfe ;_fbbc :=_ccfe .PdfObjectDictionary ;_fagd ,_fcba :=_bd .TraceToDirectObject (_fbbc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bd .PdfObjectArray );if !_fcba {_aag .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fagd .Len ()%2!=0{_aag .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ca .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_eccca ,_deegg :=_fagd .ToFloat64Array ();if _deegg !=nil {return nil ,_deegg ;};_ffcbc .Domain =_eccca ;_fagd ,_fcba =_bd .TraceToDirectObject (_fbbc .Get ("\u0052\u0061\u006eg\u0065")).(*_bd .PdfObjectArray );if _fcba {if _fagd .Len ()< 0||_fagd .Len ()%2!=0{return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_accbc ,_bdfd :=_fagd .ToFloat64Array ();if _bdfd !=nil {return nil ,_bdfd ;};_ffcbc .Range =_accbc ;};_fdfg ,_deegg :=_bd .DecodeStream (_ccfe );if _deegg !=nil {return nil ,_deegg ;};_ffcbc ._dadcg =_fdfg ;_gaccc :=_afc .NewPSParser ([]byte (_fdfg ));_cgcfa ,_deegg :=_gaccc .Parse ();if _deegg !=nil {return nil ,_deegg ;};_ffcbc .Program =_cgcfa ;return _ffcbc ,nil ;};var _bbffa ="";

// ToPdfObject implements interface PdfModel.
func (_geef *PdfAnnotationLink )ToPdfObject ()_bd .PdfObject {_geef .PdfAnnotation .ToPdfObject ();_cfebb :=_geef ._ega ;_ggda :=_cfebb .PdfObject .(*_bd .PdfObjectDictionary );_ggda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u004c\u0069\u006e\u006b"));if _geef ._dgef !=nil &&_geef ._dgef ._cadc !=nil {_ggda .Set ("\u0041",_geef ._dgef ._cadc .ToPdfObject ());}else if _geef .A !=nil {_ggda .Set ("\u0041",_geef .A );};_ggda .SetIfNotNil ("\u0044\u0065\u0073\u0074",_geef .Dest );_ggda .SetIfNotNil ("\u0048",_geef .H );_ggda .SetIfNotNil ("\u0050\u0041",_geef .PA );_ggda .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_geef .QuadPoints );_ggda .SetIfNotNil ("\u0042\u0053",_geef .BS );return _cfebb ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_bbbg *PdfPageResources )SetColorspaceByName (keyName _bd .PdfObjectName ,cs PdfColorspace )error {_acebb ,_bdfef :=_bbbg .GetColorspaces ();if _bdfef !=nil {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bdfef );return _bdfef ;};if _acebb ==nil {_acebb =NewPdfPageResourcesColorspaces ();_bbbg .SetColorSpace (_acebb );};_acebb .Set (keyName ,cs );return nil ;};func _agdf (_afcf _bd .PdfObject ,_egce bool )(*PdfFont ,error ){_dgff ,_agfca ,_aaff :=_ageg (_afcf );if _aaff !=nil {if _aaff ==ErrType3FontNotSupported ||_aaff ==ErrType1CFontNotSupported {_cabc ,_eabb :=_gagdd (_dgff ,_agfca ,nil );if _eabb !=nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_agfca ,_eabb );return nil ,_aaff ;};return &PdfFont {_ddgba :_cabc },_aaff ;};return nil ,_aaff ;};_ffcf :=&PdfFont {};switch _agfca ._ddad {case "\u0054\u0079\u0070e\u0030":if !_egce {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_agfca );return nil ,_ca .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_bgbbd ,_gedf :=_bcfed (_dgff ,_agfca );if _gedf !=nil {_aag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_agfca ,_gedf );return nil ,_gedf ;};_ffcf ._ddgba =_bgbbd ;case "\u0054\u0079\u0070e\u0031","\u0054\u0079\u0070e\u0033","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _gdbbg *pdfFontSimple ;_bcbe ,_deef :=_gb .NewStdFontByName (_gb .StdFontName (_agfca ._gfceb ));if _deef {_dgcb :=_eedgg (_bcbe );_ffcf ._ddgba =&_dgcb ;_degc :=_bd .TraceToDirectObject (_dgcb .ToPdfObject ());_fecc ,_daeg ,_eeggf :=_ageg (_degc );if _eeggf !=nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_agfca ,_dgcb );return nil ,_eeggf ;};for _ ,_cabga :=range _dgff .Keys (){_fecc .Set (_cabga ,_dgff .Get (_cabga ));};_gdbbg ,_eeggf =_gagdd (_fecc ,_daeg ,_dgcb ._dgcd );if _eeggf !=nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_agfca ,_dgcb );return nil ,_eeggf ;};_gdbbg ._cegga =_dgcb ._cegga ;_gdbbg ._efbb =_dgcb ._efbb ;}else {_gdbbg ,_aaff =_gagdd (_dgff ,_agfca ,nil );if _aaff !=nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_agfca ,_aaff );return nil ,_aaff ;};};_aaff =_gdbbg .addEncoding ();if _aaff !=nil {return nil ,_aaff ;};if _deef {_gdbbg .updateStandard14Font ();};if _deef &&_gdbbg ._cagf ==nil &&_gdbbg ._dgcd ==nil {_aag .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gdbbg );_aag .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_bcbe );};if len (_gdbbg ._cegga )==0{_aag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_gdbbg );};_ffcf ._ddgba =_gdbbg ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_dbbd ,_fecg :=_fdead (_dgff ,_agfca );if _fecg !=nil {_aag .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_fecg );return nil ,_fecg ;};_ffcf ._ddgba =_dbbd ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_fegg ,_cbcga :=_aabc (_dgff ,_agfca );if _cbcga !=nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_agfca ,_cbcga );return nil ,_cbcga ;};_ffcf ._ddgba =_fegg ;default:_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_agfca );return nil ,_c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_agfca );};return _ffcf ,nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// Width returns the width of `rect`.
func (_bbbea *PdfRectangle )Width ()float64 {return _cg .Abs (_bbbea .Urx -_bbbea .Llx )};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _bd .PdfObject ;NewWindow _bd .PdfObject ;T _bd .PdfObject ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_dbbff *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_gegd :=RC4_128bit ;if options !=nil {_gegd =options .Algorithm ;};_ggegc :=_gf .PermOwner ;if options !=nil {_ggegc =options .Permissions ;};var _bdbedf _afa .Filter ;switch _gegd {case RC4_128bit :_bdbedf =_afa .NewFilterV2 (16);case AES_128bit :_bdbedf =_afa .NewFilterAESV2 ();case AES_256bit :_bdbedf =_afa .NewFilterAESV3 ();default:return _c .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );};_egcg ,_cgfgd ,_ecbca :=_bd .PdfCryptNewEncrypt (_bdbedf ,userPass ,ownerPass ,_ggegc );if _ecbca !=nil {return _ecbca ;};_dbbff ._bcgd =_egcg ;if _cgfgd .Major !=0{_dbbff .SetVersion (_cgfgd .Major ,_cgfgd .Minor );};_dbbff ._gagb =_cgfgd .Encrypt ;_dbbff ._fcgcg =_bd .MakeArray (_bd .MakeHexString (_cgfgd .ID0 ),_bd .MakeHexString (_cgfgd .ID1 ));_fggaa :=_bd .MakeIndirectObject (_cgfgd .Encrypt );_dbbff ._gbdf =_fggaa ;_dbbff .addObject (_fggaa );return nil ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_faabed *PdfReader )CheckAccessRights (password []byte )(bool ,_gf .Permissions ,error ){return _faabed ._efgga .CheckAccessRights (password );};

// ToPdfObject implements interface PdfModel.
func (_gbc *PdfActionMovie )ToPdfObject ()_bd .PdfObject {_gbc .PdfAction .ToPdfObject ();_gde :=_gbc ._ccf ;_gae :=_gde .PdfObject .(*_bd .PdfObjectDictionary );_gae .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeMovie )));_gae .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_gbc .Annotation );_gae .SetIfNotNil ("\u0054",_gbc .T );_gae .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_gbc .Operation );return _gde ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _b .Time ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_dca :=NewPdfAction ();_ae :=&PdfActionTrans {};_ae .PdfAction =_dca ;_dca .SetContext (_ae );return _ae ;};func (_fbbd *PdfAcroForm )fill (_dfab FieldValueProvider ,_bcec FieldAppearanceGenerator )error {if _fbbd ==nil {return nil ;};_gege ,_eega :=_dfab .FieldValues ();if _eega !=nil {return _eega ;};for _ ,_gbgce :=range _fbbd .AllFields (){_gfgfg :=_gbgce .PartialName ();_egead ,_gcege :=_gege [_gfgfg ];if !_gcege {if _bdacg ,_dbgbb :=_gbgce .FullName ();_dbgbb ==nil {_egead ,_gcege =_gege [_bdacg ];};};if !_gcege {_aag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_gfgfg );continue ;};if _bcaff :=_cegdd (_gbgce ,_egead );_bcaff !=nil {return _bcaff ;};if _bcec ==nil {continue ;};for _ ,_ggae :=range _gbgce .Annotations {_cedd ,_fffcc :=_bcec .GenerateAppearanceDict (_fbbd ,_gbgce ,_ggae );if _fffcc !=nil {return _fffcc ;};_ggae .AP =_cedd ;_ggae .ToPdfObject ();};};return nil ;};

// RemovePage removes a page by number.
func (_acdfd *PdfAppender )RemovePage (pageNum int ){_eecf :=pageNum -1;_acdfd ._cgaa =append (_acdfd ._cgaa [0:_eecf ],_acdfd ._cgaa [pageNum :]...);};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_gcge *BorderStyle )GetPdfName ()string {switch *_gcge {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";};return "";};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_aeefd FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_aeefd .Mask ()|fl .Mask ())};

// L returns the value of the L component of the color.
func (_dgddc *PdfColorLab )L ()float64 {return float64 (_dgddc [0])};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _bd .PdfObject ;};var _bcaa =false ;var (_cbgg =_dc .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_dgbe =_dc .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_dadcf =_dc .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");_abdca ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_aceag ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_deedb ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";);

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_eaffb *PdfReader )PageFromIndirectObject (ind *_bd .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_eaffb .PageList )!=len (_eaffb ._eefe ){return nil ,0,_ca .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};for _eaagc ,_gced :=range _eaffb ._eefe {if _gced ==ind {return _eaffb .PageList [_eaagc ],_eaagc +1,nil ;};};return nil ,0,_ca .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_ffccb *PdfReader )Inspect ()(map[string ]int ,error ){return _ffccb ._efgga .Inspect ()};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;func (_dfegf *pdfFontType0 )baseFields ()*fontCommon {return &_dfegf .fontCommon };

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_abff *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_dgad :=func (_gfcef float64 )float64 {if _gfcef >=6.0/29{return _gfcef *_gfcef *_gfcef ;};return 108.0/841*(_gfcef -4/29);};_fgcc :=img ._fbadbga ;if len (_fgcc )!=6{_aag .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");_fgcc =_abff .DecodeArray ();};_cbadbd :=_caa .NewReader (img .getBase ());_gfcf :=_adg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._dcbb ,img ._fbadbga );_beg :=_caa .NewWriter (_gfcf );_cadec :=_cg .Pow (2,float64 (img .BitsPerComponent ))-1;_adfef :=make ([]uint32 ,3);var (_ddeb error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_ebgg ,_cdcgb ,_ebfa float64 ;);for {_ddeb =_cbadbd .ReadSamples (_adfef );if _ddeb ==_eb .EOF {break ;}else if _ddeb !=nil {return img ,_ddeb ;};Ls =float64 (_adfef [0])/_cadec ;As =float64 (_adfef [1])/_cadec ;Bs =float64 (_adfef [2])/_cadec ;Ls =_adg .LinearInterpolate (Ls ,0.0,1.0,_fgcc [0],_fgcc [1]);As =_adg .LinearInterpolate (As ,0.0,1.0,_fgcc [2],_fgcc [3]);Bs =_adg .LinearInterpolate (Bs ,0.0,1.0,_fgcc [4],_fgcc [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_abff .WhitePoint [0]*_dgad (L );Y =_abff .WhitePoint [1]*_dgad (M );Z =_abff .WhitePoint [2]*_dgad (N );_ebgg =3.240479*X +-1.537150*Y +-0.498535*Z ;_cdcgb =-0.969256*X +1.875992*Y +0.041556*Z ;_ebfa =0.055648*X +-0.204043*Y +1.057311*Z ;_ebgg =_cg .Min (_cg .Max (_ebgg ,0),1.0);_cdcgb =_cg .Min (_cg .Max (_cdcgb ,0),1.0);_ebfa =_cg .Min (_cg .Max (_ebfa ,0),1.0);_adfef [0]=uint32 (_ebgg *_cadec );_adfef [1]=uint32 (_cdcgb *_cadec );_adfef [2]=uint32 (_ebfa *_cadec );if _ddeb =_beg .WriteSamples (_adfef );_ddeb !=nil {return img ,_ddeb ;};};return _dcae (&_gfcf ),nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_gccc *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_bd .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dage ,_geba :=_bd .GetNumbersAsFloat (objects );if _geba !=nil {return nil ,_geba ;};return _gccc .ColorFromFloats (_dage );};type pdfFontSimple struct{fontCommon ;_fedd *_bd .PdfIndirectObject ;_cegga map[_ff .CharCode ]float64 ;_cagf _ff .TextEncoder ;_dgcd _ff .TextEncoder ;_ecbec *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _bd .PdfObject ;LastChar _bd .PdfObject ;Widths _bd .PdfObject ;Encoding _bd .PdfObject ;_efbb map[rune ]_gb .CharMetrics ;};

// SetReason sets the `Reason` field of the signature.
func (_gffe *PdfSignature )SetReason (reason string ){_gffe .Reason =_bd .MakeString (reason )};func _fcag (_cggaac *_bd .PdfObjectDictionary )(*PdfShadingPattern ,error ){_cagag :=&PdfShadingPattern {};_bagf :=_cggaac .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _bagf ==nil {_aag .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bffb ,_aged :=_geag (_bagf );if _aged !=nil {_aag .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_aged );return nil ,_aged ;};_cagag .Shading =_bffb ;if _ffbge :=_cggaac .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ffbge !=nil {_dgefag ,_eead :=_ffbge .(*_bd .PdfObjectArray );if !_eead {_aag .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ffbge );return nil ,_bd .ErrTypeError ;};_cagag .Matrix =_dgefag ;};if _affc :=_cggaac .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_affc !=nil {_cagag .ExtGState =_affc ;};return _cagag ,nil ;};func (_fdba *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_fb :=NewPdfAction ();_ce :=&PdfActionSound {};_ce .PdfAction =_fb ;_fb .SetContext (_ce );return _ce ;};

// ToPdfObject implements interface PdfModel.
func (_acgf *PdfAnnotationLine )ToPdfObject ()_bd .PdfObject {_acgf .PdfAnnotation .ToPdfObject ();_abe :=_acgf ._ega ;_efea :=_abe .PdfObject .(*_bd .PdfObjectDictionary );_acgf .PdfAnnotationMarkup .appendToPdfDictionary (_efea );_efea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u004c\u0069\u006e\u0065"));_efea .SetIfNotNil ("\u004c",_acgf .L );_efea .SetIfNotNil ("\u0042\u0053",_acgf .BS );_efea .SetIfNotNil ("\u004c\u0045",_acgf .LE );_efea .SetIfNotNil ("\u0049\u0043",_acgf .IC );_efea .SetIfNotNil ("\u004c\u004c",_acgf .LL );_efea .SetIfNotNil ("\u004c\u004c\u0045",_acgf .LLE );_efea .SetIfNotNil ("\u0043\u0061\u0070",_acgf .Cap );_efea .SetIfNotNil ("\u0049\u0054",_acgf .IT );_efea .SetIfNotNil ("\u004c\u004c\u004f",_acgf .LLO );_efea .SetIfNotNil ("\u0043\u0050",_acgf .CP );_efea .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_acgf .Measure );_efea .SetIfNotNil ("\u0043\u004f",_acgf .CO );return _abe ;};func (_efga *PdfReader )newPdfAnnotation3DFromDict (_bcge *_bd .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_bcab :=PdfAnnotation3D {};_bcab .T3DD =_bcge .Get ("\u0033\u0044\u0044");_bcab .T3DV =_bcge .Get ("\u0033\u0044\u0056");_bcab .T3DA =_bcge .Get ("\u0033\u0044\u0041");_bcab .T3DI =_bcge .Get ("\u0033\u0044\u0049");_bcab .T3DB =_bcge .Get ("\u0033\u0044\u0042");return &_bcab ,nil ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_bddgd *PdfPattern )ToPdfObject ()_bd .PdfObject {_cebg :=_bddgd .getDict ();_cebg .Set ("\u0054\u0079\u0070\u0065",_bd .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_cebg .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_bd .MakeInteger (_bddgd .PatternType ));return _bddgd ._ebbgg ;};func (_ceead *Image )resampleLowBits (_acda []uint32 ){_debcfa :=_adg .BytesPerLine (int (_ceead .Width ),int (_ceead .BitsPerComponent ),_ceead .ColorComponents );_fddgc :=make ([]byte ,_ceead .ColorComponents *_debcfa *int (_ceead .Height ));_bcbc :=int (_ceead .BitsPerComponent )*_ceead .ColorComponents *int (_ceead .Width );_aeabc :=uint8 (8);var (_cbgeb ,_ddaea int ;_acgee uint32 ;);for _ccadd :=0;_ccadd < int (_ceead .Height );_ccadd ++{_ddaea =_ccadd *_debcfa ;for _bdbdg :=0;_bdbdg < _bcbc ;_bdbdg ++{_acgee =_acda [_cbgeb ];_aeabc -=uint8 (_ceead .BitsPerComponent );_fddgc [_ddaea ]|=byte (_acgee )<<_aeabc ;if _aeabc ==0{_aeabc =8;_ddaea ++;};_cbgeb ++;};};_ceead .Data =_fddgc ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_cdeef *_bd .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_cafed *PdfAnnotationStamp )ToPdfObject ()_bd .PdfObject {_cafed .PdfAnnotation .ToPdfObject ();_bcaf :=_cafed ._ega ;_geee :=_bcaf .PdfObject .(*_bd .PdfObjectDictionary );_cafed .PdfAnnotationMarkup .appendToPdfDictionary (_geee );_geee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0053\u0074\u0061m\u0070"));_geee .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cafed .Name );return _bcaf ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_bbgff *PdfOutlineTreeNode )GetContext ()PdfModel {if _bedee ,_egbad :=_bbgff ._dcaag .(*PdfOutline );_egbad {return _bedee ;};if _aacc ,_aadgb :=_bbgff ._dcaag .(*PdfOutlineItem );_aadgb {return _aacc ;};_aag .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bef *PdfActionNamed )ToPdfObject ()_bd .PdfObject {_bef .PdfAction .ToPdfObject ();_afe :=_bef ._ccf ;_add :=_afe .PdfObject .(*_bd .PdfObjectDictionary );_add .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeNamed )));_add .SetIfNotNil ("\u004e",_bef .N );return _afe ;};func _fceef ()string {return _cecgd };func _gfecc (_ccfd *[]*PdfField ,_acae FieldFilterFunc ,_fdfe bool )[]*PdfField {if _ccfd ==nil {return nil ;};_dbgbbf :=*_ccfd ;if len (*_ccfd )==0{return nil ;};_addc :=_dbgbbf [:0];if _acae ==nil {_acae =func (*PdfField )bool {return true };};var _ccgfe []*PdfField ;for _ ,_affbc :=range _dbgbbf {_bfcbg :=_acae (_affbc );if _bfcbg {_ccgfe =append (_ccgfe ,_affbc );if len (_affbc .Kids )> 0{_ccgfe =append (_ccgfe ,_gfecc (&_affbc .Kids ,_acae ,_fdfe )...);};};if !_fdfe ||!_bfcbg ||len (_affbc .Kids )> 0{_addc =append (_addc ,_affbc );};};*_ccfd =_addc ;return _ccgfe ;};func _ddgbb (_dgdfb _bd .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_dcacd :=&PdfColorspaceDeviceNAttributes {};var _fgde *_bd .PdfObjectDictionary ;if _cbea ,_ebbg :=_dgdfb .(*_bd .PdfIndirectObject );_ebbg {_dcacd ._abdd =_cbea ;var _cdbd bool ;_fgde ,_cdbd =_cbea .PdfObject .(*_bd .PdfObjectDictionary );if !_cdbd {_aag .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_ca .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};}else if _cabfe ,_eagad :=_dgdfb .(*_bd .PdfObjectDictionary );_eagad {_fgde =_cabfe ;}else {_aag .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_ca .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _efff :=_fgde .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_efff !=nil {_fbcag ,_cccc :=_bd .TraceToDirectObject (_efff ).(*_bd .PdfObjectName );if !_cccc {_aag .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");return nil ,_ca .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_dcacd .Subtype =_fbcag ;};if _abgcd :=_fgde .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_abgcd !=nil {_dcacd .Colorants =_abgcd ;};if _abcb :=_fgde .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");_abcb !=nil {_dcacd .Process =_abcb ;};if _cefb :=_fgde .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_cefb !=nil {_dcacd .MixingHints =_cefb ;};return _dcacd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gccg *PdfAnnotationPrinterMark )ToPdfObject ()_bd .PdfObject {_gccg .PdfAnnotation .ToPdfObject ();_bfde :=_gccg ._ega ;_fgcf :=_bfde .PdfObject .(*_bd .PdfObjectDictionary );_fgcf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));_fgcf .SetIfNotNil ("\u004d\u004e",_gccg .MN );return _bfde ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_eabbg *PdfTilingPattern )ToPdfObject ()_bd .PdfObject {_eabbg .PdfPattern .ToPdfObject ();_feaf :=_eabbg .getDict ();if _eabbg .PaintType !=nil {_feaf .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_eabbg .PaintType );};if _eabbg .TilingType !=nil {_feaf .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_eabbg .TilingType );};if _eabbg .BBox !=nil {_feaf .Set ("\u0042\u0042\u006f\u0078",_eabbg .BBox .ToPdfObject ());};if _eabbg .XStep !=nil {_feaf .Set ("\u0058\u0053\u0074e\u0070",_eabbg .XStep );};if _eabbg .YStep !=nil {_feaf .Set ("\u0059\u0053\u0074e\u0070",_eabbg .YStep );};if _eabbg .Resources !=nil {_feaf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_eabbg .Resources .ToPdfObject ());};if _eabbg .Matrix !=nil {_feaf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_eabbg .Matrix );};return _eabbg ._ebbgg ;};

// Items returns all children outline items.
func (_feffb *Outline )Items ()[]*OutlineItem {return _feffb .Entries };func (_bfgf *PdfShading )getShadingDict ()(*_bd .PdfObjectDictionary ,error ){_fbdc :=_bfgf ._ecebg ;if _cecad ,_bfeg :=_fbdc .(*_bd .PdfIndirectObject );_bfeg {_ddfa ,_fgdae :=_cecad .PdfObject .(*_bd .PdfObjectDictionary );if !_fgdae {return nil ,_bd .ErrTypeError ;};return _ddfa ,nil ;}else if _aabda ,_feggg :=_fbdc .(*_bd .PdfObjectStream );_feggg {return _aabda .PdfObjectDictionary ,nil ;}else if _edfgf ,_aefbe :=_fbdc .(*_bd .PdfObjectDictionary );_aefbe {return _edfgf ,nil ;}else {_aag .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_bd .ErrTypeError ;};};

// SetShadingByName sets a shading resource specified by keyName.
func (_efedd *PdfPageResources )SetShadingByName (keyName _bd .PdfObjectName ,shadingObj _bd .PdfObject )error {if _efedd .Shading ==nil {_efedd .Shading =_bd .MakeDict ();};_gffa ,_dccda :=_efedd .Shading .(*_bd .PdfObjectDictionary );if !_dccda {return _bd .ErrTypeError ;};_gffa .Set (keyName ,shadingObj );return nil ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_gffg _bd .PdfObject ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_afb :=NewPdfAction ();_eee :=&PdfActionRendition {};_eee .PdfAction =_afb ;_afb .SetContext (_eee );return _eee ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _bd .PdfObject ;MK _bd .PdfObject ;A _bd .PdfObject ;AA _bd .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cabdfb *PdfAnnotationPolygon )ToPdfObject ()_bd .PdfObject {_cabdfb .PdfAnnotation .ToPdfObject ();_ceag :=_cabdfb ._ega ;_cgfa :=_ceag .PdfObject .(*_bd .PdfObjectDictionary );_cabdfb .PdfAnnotationMarkup .appendToPdfDictionary (_cgfa );_cgfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));_cgfa .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cabdfb .Vertices );_cgfa .SetIfNotNil ("\u004c\u0045",_cabdfb .LE );_cgfa .SetIfNotNil ("\u0042\u0053",_cabdfb .BS );_cgfa .SetIfNotNil ("\u0049\u0043",_cabdfb .IC );_cgfa .SetIfNotNil ("\u0042\u0045",_cabdfb .BE );_cgfa .SetIfNotNil ("\u0049\u0054",_cabdfb .IT );_cgfa .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cabdfb .Measure );return _ceag ;};

// Encoder returns the font's text encoder.
func (_fbb pdfFontType0 )Encoder ()_ff .TextEncoder {return _fbb ._ebdd };

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_bd .PdfObjectArray ;Domain *_bd .PdfObjectArray ;Function []PdfFunction ;Extend *_bd .PdfObjectArray ;};

// ToPdfObject implements interface PdfModel.
func (_ccgf *PdfAnnotationWidget )ToPdfObject ()_bd .PdfObject {_ccgf .PdfAnnotation .ToPdfObject ();_dcad :=_ccgf ._ega ;_acge :=_dcad .PdfObject .(*_bd .PdfObjectDictionary );if _ccgf ._gbae {return _dcad ;};_ccgf ._gbae =true ;_acge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));_acge .SetIfNotNil ("\u0048",_ccgf .H );_acge .SetIfNotNil ("\u004d\u004b",_ccgf .MK );_acge .SetIfNotNil ("\u0041",_ccgf .A );_acge .SetIfNotNil ("\u0041\u0041",_ccgf .AA );_acge .SetIfNotNil ("\u0042\u0053",_ccgf .BS );_dccdc :=_ccgf .Parent ;if _ccgf ._deca !=nil {if _ccgf ._deca ._gcacg ==_ccgf ._ega {_ccgf ._deca .ToPdfObject ();};_dccdc =_ccgf ._deca .GetContainingPdfObject ();};if _dccdc !=_dcad {_acge .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dccdc );};_ccgf ._gbae =false ;return _dcad ;};

// MergePageWith appends page content to source Pdf file page content.
func (_caec *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_gffga :=pageNum -1;var _fage *PdfPage ;for _cccf ,_gecg :=range _caec ._cgaa {if _cccf ==_gffga {_fage =_gecg ;};};if _fage ==nil {return _c .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );};if _fage ._cbfbd !=nil &&_fage ._cbfbd .GetParser ()==_caec ._eege ._efgga {_fage =_fage .Duplicate ();_caec ._cgaa [_gffga ]=_fage ;};page =page .Duplicate ();_ffdea (page );_cfdb :=_gcec (_fage );_ecbcc :=_gcec (page );_dgga :=make (map[_bd .PdfObjectName ]_bd .PdfObjectName );for _abgc :=range _ecbcc {if _ ,_edbf :=_cfdb [_abgc ];_edbf {for _bde :=1;true ;_bde ++{_fcb :=_bd .PdfObjectName (string (_abgc )+_bb .Itoa (_bde ));if _ ,_faegg :=_cfdb [_fcb ];!_faegg {_dgga [_abgc ]=_fcb ;break ;};};};};_aece ,_deec :=page .GetContentStreams ();if _deec !=nil {return _deec ;};_bddc ,_deec :=_fage .GetContentStreams ();if _deec !=nil {return _deec ;};for _gbcb ,_aeddg :=range _aece {for _dafbg ,_afda :=range _dgga {_aeddg =_ad .Replace (_aeddg ,"\u002f"+string (_dafbg ),"\u002f"+string (_afda ),-1);};_aece [_gbcb ]=_aeddg ;};_bddc =append (_bddc ,_aece ...);if _ggcf :=_fage .SetContentStreams (_bddc ,_bd .NewFlateEncoder ());_ggcf !=nil {return _ggcf ;};for _ ,_gaad :=range page ._fgfgg {_fage ._fgfgg =append (_fage ._fgfgg ,_gaad );};if _fage .Resources ==nil {_fage .Resources =NewPdfPageResources ();};if page .Resources !=nil {_fage .Resources .Font =_caec .mergeResources (_fage .Resources .Font ,page .Resources .Font ,_dgga );_fage .Resources .XObject =_caec .mergeResources (_fage .Resources .XObject ,page .Resources .XObject ,_dgga );_fage .Resources .Properties =_caec .mergeResources (_fage .Resources .Properties ,page .Resources .Properties ,_dgga );if _fage .Resources .ProcSet ==nil {_fage .Resources .ProcSet =page .Resources .ProcSet ;};_fage .Resources .Shading =_caec .mergeResources (_fage .Resources .Shading ,page .Resources .Shading ,_dgga );_fage .Resources .ExtGState =_caec .mergeResources (_fage .Resources .ExtGState ,page .Resources .ExtGState ,_dgga );};_dfc ,_deec :=_fage .GetMediaBox ();if _deec !=nil {return _deec ;};_dafe ,_deec :=page .GetMediaBox ();if _deec !=nil {return _deec ;};var _dddd bool ;if _dfc .Llx > _dafe .Llx {_dfc .Llx =_dafe .Llx ;_dddd =true ;};if _dfc .Lly > _dafe .Lly {_dfc .Lly =_dafe .Lly ;_dddd =true ;};if _dfc .Urx < _dafe .Urx {_dfc .Urx =_dafe .Urx ;_dddd =true ;};if _dfc .Ury < _dafe .Ury {_dfc .Ury =_dafe .Ury ;_dddd =true ;};if _dddd {_fage .MediaBox =_dfc ;};return nil ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_bfbae *_bd .PdfIndirectObject ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_cccda *PdfPageResources )SetXObjectImageByName (keyName _bd .PdfObjectName ,ximg *XObjectImage )error {_adgc :=ximg .ToPdfObject ().(*_bd .PdfObjectStream );_efca :=_cccda .SetXObjectByName (keyName ,_adgc );return _efca ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_cddca *PdfColorspaceDeviceNAttributes )ToPdfObject ()_bd .PdfObject {_bbebe :=_bd .MakeDict ();if _cddca .Subtype !=nil {_bbebe .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cddca .Subtype );};_bbebe .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_cddca .Colorants );_bbebe .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_cddca .Process );_bbebe .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_cddca .MixingHints );if _cddca ._abdd !=nil {_cddca ._abdd .PdfObject =_bbebe ;return _cddca ._abdd ;};return _bbebe ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_afc .PSProgram ;_fdcdf *_afc .PSExecutor ;_dadcg []byte ;_ceabd *_bd .PdfObjectStream ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_gfd :=&PdfBorderStyle {};return _gfd };

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fegfb pdfCIDFontType0 )GetRuneMetrics (r rune )(_gb .CharMetrics ,bool ){return _gb .CharMetrics {Wx :_fegfb ._ffae },true ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_gegf *PdfColorspaceLab )GetNumComponents ()int {return 3};type pdfSignDictionary struct{*_bd .PdfObjectDictionary ;_gfga *SignatureHandler ;_gacb *PdfSignature ;_ffcaa int64 ;_bebfa int ;_bacc int ;_dfbdc int ;_ffebag int ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_fcfd *PdfPageResources )AddExtGState (gsName _bd .PdfObjectName ,gsDict _bd .PdfObject )error {if _fcfd .ExtGState ==nil {_fcfd .ExtGState =_bd .MakeDict ();};_gceda :=_fcfd .ExtGState ;_fgdda ,_dgbdg :=_bd .TraceToDirectObject (_gceda ).(*_bd .PdfObjectDictionary );if !_dgbdg {_aag .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_gceda ,_bd .TraceToDirectObject (_gceda ));return _bd .ErrTypeError ;};_fgdda .Set (gsName ,gsDict );return nil ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_dddgg *PdfPageResources )SetXObjectByName (keyName _bd .PdfObjectName ,stream *_bd .PdfObjectStream )error {if _dddgg .XObject ==nil {_dddgg .XObject =_bd .MakeDict ();};_becbd :=_bd .TraceToDirectObject (_dddgg .XObject );_cgedc ,_eggf :=_becbd .(*_bd .PdfObjectDictionary );if !_eggf {_aag .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_dddgg .XObject ,_becbd );return _ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cgedc .Set (keyName ,stream );return nil ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_bd .PdfObject ;GetContainingPdfObject ()_bd .PdfObject ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_adba *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_bdac :=range pages {_bdac =_bdac .Duplicate ();_ffdea (_bdac );_adba ._cgaa =append (_adba ._cgaa ,_bdac );};return ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_bfgc *PdfPage )GetPageAsIndirectObject ()*_bd .PdfIndirectObject {return _bfgc ._cbfbd };

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// SetContext set the sub annotation (context).
func (_ggbac *PdfShading )SetContext (ctx PdfModel ){_ggbac ._ebcbd =ctx };

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_decg :=&PdfOutlineItem {_bedcc :_bd .MakeIndirectObject (_bd .MakeDict ())};_decg ._dcaag =_decg ;return _decg ;};

// Y returns the value of the yellow component of the color.
func (_gceb *PdfColorDeviceCMYK )Y ()float64 {return float64 (_gceb [2])};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _gf .Permissions ;Algorithm EncryptionAlgorithm ;};func (_cafcg *PdfReader )newPdfAnnotationScreenFromDict (_cgdg *_bd .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_ddbe :=PdfAnnotationScreen {};_ddbe .T =_cgdg .Get ("\u0054");_ddbe .MK =_cgdg .Get ("\u004d\u004b");_ddbe .A =_cgdg .Get ("\u0041");_ddbe .AA =_cgdg .Get ("\u0041\u0041");return &_ddbe ,nil ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_eff :=NewPdfAnnotation ();_edfd :=&PdfAnnotationHighlight {};_edfd .PdfAnnotation =_eff ;_edfd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eff .SetContext (_edfd );return _edfd ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_egbc *PdfFieldButton )ToPdfObject ()_bd .PdfObject {_egbc .PdfField .ToPdfObject ();_fgbac :=_egbc ._gcacg ;_cefg :=_fgbac .PdfObject .(*_bd .PdfObjectDictionary );_cefg .Set ("\u0046\u0054",_bd .MakeName ("\u0042\u0074\u006e"));if _egbc .Opt !=nil {_cefg .Set ("\u004f\u0070\u0074",_egbc .Opt );};return _fgbac ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_adad *_bd .PdfIndirectObject ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _bd .PdfObject ;Q _bd .PdfObject ;RC _bd .PdfObject ;DS _bd .PdfObject ;CL _bd .PdfObject ;IT _bd .PdfObject ;BE _bd .PdfObject ;RD _bd .PdfObject ;BS _bd .PdfObject ;LE _bd .PdfObject ;};

// ToPdfObject converts date to a PDF string object.
func (_efecag *PdfDate )ToPdfObject ()_bd .PdfObject {_ccfec :=_c .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_efecag ._fagf ,_efecag ._adfc ,_efecag ._gbfe ,_efecag ._beeg ,_efecag ._ebfbe ,_efecag ._dfecg ,_efecag ._ggdf ,_efecag ._fccfce ,_efecag ._ccegg );return _bd .MakeString (_ccfec );};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// ToPdfObject implements interface PdfModel.
func (_ebbd *PdfAnnotationRichMedia )ToPdfObject ()_bd .PdfObject {_ebbd .PdfAnnotation .ToPdfObject ();_bcag :=_ebbd ._ega ;_bdbdc :=_bcag .PdfObject .(*_bd .PdfObjectDictionary );_bdbdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));_bdbdc .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_ebbd .RichMediaSettings );_bdbdc .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_ebbd .RichMediaContent );return _bcag ;};

// ToInteger convert to an integer format.
func (_ggga *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_gcga :=_cg .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_gcga *_ggga .C ()),uint32 (_gcga *_ggga .M ()),uint32 (_gcga *_ggga .Y ()),uint32 (_gcga *_ggga .K ())};};var (CourierName =_gb .CourierName ;CourierBoldName =_gb .CourierBoldName ;CourierObliqueName =_gb .CourierObliqueName ;CourierBoldObliqueName =_gb .CourierBoldObliqueName ;HelveticaName =_gb .HelveticaName ;HelveticaBoldName =_gb .HelveticaBoldName ;HelveticaObliqueName =_gb .HelveticaObliqueName ;HelveticaBoldObliqueName =_gb .HelveticaBoldObliqueName ;SymbolName =_gb .SymbolName ;ZapfDingbatsName =_gb .ZapfDingbatsName ;TimesRomanName =_gb .TimesRomanName ;TimesBoldName =_gb .TimesBoldName ;TimesItalicName =_gb .TimesItalicName ;TimesBoldItalicName =_gb .TimesBoldItalicName ;);

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _bd .PdfObjectName ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_cfba :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");};_cfba .N =N ;return _cfba ,nil ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_gdcc *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_gaadd ,_eaaeb :=color .(*PdfColorDeviceGray );if !_eaaeb {_aag .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_gaadd ),float64 (*_gaadd ),float64 (*_gaadd )),nil ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_bdace *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fddd :=vals [0];if _fddd < 0.0||_fddd > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_deafa :=vals [1];if _deafa < 0.0||_deafa > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffgg :=vals [2];if _ffgg < 0.0||_ffgg > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcf :=vals [3];if _gcf < 0.0||_gcf > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfddb :=NewPdfColorDeviceCMYK (_fddd ,_deafa ,_ffgg ,_gcf );return _bfddb ,nil ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_acdfg *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_gdgf :=_caa .NewReader (img .getBase ());_agfd :=_adg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_gcbf :=_caa .NewWriter (_agfd );_fdea :=_cg .Pow (2,float64 (img .BitsPerComponent ))-1;_agcbg :=make ([]uint32 ,3);var (_edfdc uint32 ;ANorm ,X ,Y ,Z ,_ggcce ,_dgbb ,_ecbf float64 ;_accdf error ;);for {_edfdc ,_accdf =_gdgf .ReadSample ();if _accdf ==_eb .EOF {break ;}else if _accdf !=nil {return img ,_accdf ;};ANorm =float64 (_edfdc )/_fdea ;X =_acdfg .WhitePoint [0]*_cg .Pow (ANorm ,_acdfg .Gamma );Y =_acdfg .WhitePoint [1]*_cg .Pow (ANorm ,_acdfg .Gamma );Z =_acdfg .WhitePoint [2]*_cg .Pow (ANorm ,_acdfg .Gamma );_ggcce =3.240479*X +-1.537150*Y +-0.498535*Z ;_dgbb =-0.969256*X +1.875992*Y +0.041556*Z ;_ecbf =0.055648*X +-0.204043*Y +1.057311*Z ;_ggcce =_cg .Min (_cg .Max (_ggcce ,0),1.0);_dgbb =_cg .Min (_cg .Max (_dgbb ,0),1.0);_ecbf =_cg .Min (_cg .Max (_ecbf ,0),1.0);_agcbg [0]=uint32 (_ggcce *_fdea );_agcbg [1]=uint32 (_dgbb *_fdea );_agcbg [2]=uint32 (_ecbf *_fdea );if _accdf =_gcbf .WriteSamples (_agcbg );_accdf !=nil {return img ,_accdf ;};};return _dcae (&_agfd ),nil ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_aaacg *PdfPageResources )SetFontByName (keyName _bd .PdfObjectName ,obj _bd .PdfObject )error {if _aaacg .Font ==nil {_aaacg .Font =_bd .MakeDict ();};_gafff ,_dgfb :=_bd .TraceToDirectObject (_aaacg .Font ).(*_bd .PdfObjectDictionary );if !_dgfb {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bd .TraceToDirectObject (_aaacg .Font ));return _bd .ErrTypeError ;};_gafff .Set (keyName ,obj );return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ecadd *PdfShadingType6 )ToPdfObject ()_bd .PdfObject {_ecadd .PdfShading .ToPdfObject ();_dgcba ,_afgbe :=_ecadd .getShadingDict ();if _afgbe !=nil {_aag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ecadd .BitsPerCoordinate !=nil {_dgcba .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ecadd .BitsPerCoordinate );};if _ecadd .BitsPerComponent !=nil {_dgcba .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ecadd .BitsPerComponent );};if _ecadd .BitsPerFlag !=nil {_dgcba .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ecadd .BitsPerFlag );};if _ecadd .Decode !=nil {_dgcba .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ecadd .Decode );};if _ecadd .Function !=nil {if len (_ecadd .Function )==1{_dgcba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ecadd .Function [0].ToPdfObject ());}else {_deadc :=_bd .MakeArray ();for _ ,_gaggg :=range _ecadd .Function {_deadc .Append (_gaggg .ToPdfObject ());};_dgcba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_deadc );};};return _ecadd ._ecebg ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_bd .PdfObjectDictionary )(*PdfPageResources ,error ){_gbedd :=NewPdfPageResources ();if _bafgcd :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_bafgcd !=nil {_gbedd .ExtGState =_bafgcd ;};if _bbcg :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");_bbcg !=nil &&!_bd .IsNullObject (_bbcg ){_gbedd .ColorSpace =_bbcg ;};if _gedga :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_gedga !=nil {_gbedd .Pattern =_gedga ;};if _eccfb :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_eccfb !=nil {_gbedd .Shading =_eccfb ;};if _bade :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_bade !=nil {_gbedd .XObject =_bade ;};if _daagg :=_bd .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_daagg !=nil {_gbedd .Font =_daagg ;};if _ggdbf :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");_ggdbf !=nil {_gbedd .ProcSet =_ggdbf ;};if _ffdff :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_ffdff !=nil {_gbedd .Properties =_ffdff ;};return _gbedd ,nil ;};func _cfdgf ()string {return _fdgg };

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_bd .PdfObjectInteger ;BitsPerComponent *_bd .PdfObjectInteger ;BitsPerFlag *_bd .PdfObjectInteger ;Decode *_bd .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_bab :=NewPdfAnnotation ();_bbbe :=&PdfAnnotationPolygon {};_bbbe .PdfAnnotation =_bab ;_bbbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bab .SetContext (_bbbe );return _bbbe ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_bd .PdfIndirectObject ;SV *_bd .PdfIndirectObject ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _bd .PdfObject ;Name _bd .PdfObject ;State _bd .PdfObject ;StateModel _bd .PdfObject ;};func _cdge (_agdggd []byte )(_dbddeb ,_adfb string ,_bbca error ){_aag .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_agdggd ));_ebea :=_cbgg .FindIndex (_agdggd );if _ebea ==nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_bd .ErrTypeError ;};_fgcef :=_ebea [1];_ggebc :=_ad .Index (string (_agdggd [_fgcef :]),_abdca );if _ggebc < 0{_dbddeb =string (_agdggd [_fgcef :]);return _dbddeb ,"",nil ;};_ddda :=_fgcef +_ggebc ;_dbddeb =string (_agdggd [_fgcef :_ddda ]);_feede :=_ddda ;_ggebc =_ad .Index (string (_agdggd [_feede :]),_aceag );if _ggebc < 0{_aag .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bbca );return "","",_bd .ErrTypeError ;};_gccf :=_feede +_ggebc ;_adfb =string (_agdggd [_feede :_gccf ]);return _dbddeb ,_adfb ,nil ;};func (_gcbe *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _gcbe ._efgga .GetCrypter ()!=nil &&!_gcbe ._efgga .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_dbda :=_gcbe ._cebfa ;_cgbaf :=_dbda .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _cgbaf ==nil {return nil ,nil ;};_eddde ,_ :=_bd .GetIndirect (_cgbaf );_cgbaf =_bd .TraceToDirectObject (_cgbaf );if _bd .IsNullObject (_cgbaf ){_aag .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");return nil ,nil ;};_fdegcc ,_aeafe :=_bd .GetDict (_cgbaf );if !_aeafe {_aag .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cgbaf );_aag .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cgbaf );};_aag .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");_aag .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_gcbe ._abbg {_gegb :=_gcbe .traverseObjectData (_fdegcc );if _gegb !=nil {_aag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_gegb );return nil ,_gegb ;};};_gefcf ,_bbbb :=_gcbe .newPdfAcroFormFromDict (_eddde ,_fdegcc );if _bbbb !=nil {return nil ,_bbbb ;};return _gefcf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gcg *PdfActionGoToE )ToPdfObject ()_bd .PdfObject {_gcg .PdfAction .ToPdfObject ();_dge :=_gcg ._ccf ;_dga :=_dge .PdfObject .(*_bd .PdfObjectDictionary );_dga .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeGoToE )));if _gcg .F !=nil {_dga .Set ("\u0046",_gcg .F .ToPdfObject ());};_dga .SetIfNotNil ("\u0044",_gcg .D );_dga .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gcg .NewWindow );_dga .SetIfNotNil ("\u0054",_gcg .T );return _dge ;};

// Add appends an outline item as a child of the current outline item.
func (_fgbc *OutlineItem )Add (item *OutlineItem ){_fgbc .Entries =append (_fgbc .Entries ,item )};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_aaac :=PdfColorDeviceRGB {r ,g ,b };return &_aaac ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_ceff :=NewPdfAnnotation ();_egcf :=&PdfAnnotationPopup {};_egcf .PdfAnnotation =_ceff ;_ceff .SetContext (_egcf );return _egcf ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;};

// Encoder returns the font's text encoder.
func (_ccfb pdfCIDFontType2 )Encoder ()_ff .TextEncoder {return _ccfb ._gaff };

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_ccgb *PdfFont )SubsetRegistered ()error {switch _gfgcc :=_ccgb ._ddgba .(type ){case *pdfFontType0 :_fbdb :=_gfgcc .subsetRegistered ();if _fbdb !=nil {_aag .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fbdb );return _fbdb ;};if _gfgcc ._ebce !=nil {if _gfgcc ._ebdd !=nil {_gfgcc ._ebdd .ToPdfObject ();};_gfgcc .ToPdfObject ();};default:_aag .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_gfgcc );};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bedc *PdfAnnotationSquiggly )ToPdfObject ()_bd .PdfObject {_bedc .PdfAnnotation .ToPdfObject ();_gagg :=_bedc ._ega ;_cbc :=_gagg .PdfObject .(*_bd .PdfObjectDictionary );_bedc .PdfAnnotationMarkup .appendToPdfDictionary (_cbc );_cbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));_cbc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bedc .QuadPoints );return _gagg ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_ebfad *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ebfad .AlternateSpace ==nil {return nil ,_ca .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};return _ebfad .AlternateSpace .ColorToRGB (color );};func _ebdeg (_cbfaa _bd .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_aag .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_cbfaa .String (),_cbfaa );_fffb :=NewPdfColorspaceSpecialPattern ();if _gcfg ,_dbaf :=_cbfaa .(*_bd .PdfIndirectObject );_dbaf {_fffb ._bgcgb =_gcfg ;};_cbfaa =_bd .TraceToDirectObject (_cbfaa );if _gfcb ,_dbeaaf :=_cbfaa .(*_bd .PdfObjectName );_dbeaaf {if *_gfcb !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};return _fffb ,nil ;};_bbcd ,_gcfd :=_cbfaa .(*_bd .PdfObjectArray );if !_gcfd {_aag .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_cbfaa );return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _bbcd .Len ()!=1&&_bbcd .Len ()!=2{_aag .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_bbcd );return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_cbfaa =_bbcd .Get (0);if _gcbfd ,_geae :=_cbfaa .(*_bd .PdfObjectName );_geae {if *_gcbfd !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_aag .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_gcbfd );return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _bbcd .Len ()> 1{_cbfaa =_bbcd .Get (1);_cbfaa =_bd .TraceToDirectObject (_cbfaa );_gadfg ,_fbadbg :=NewPdfColorspaceFromPdfObject (_cbfaa );if _fbadbg !=nil {return nil ,_fbadbg ;};_fffb .UnderlyingCS =_gadfg ;};_aag .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_fffb .UnderlyingCS );return _fffb ,nil ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_bcfaa :=PdfColorCalGray (grayVal );return &_bcfaa ;};

// SetBorderWidth sets the style's border width.
func (_egbg *PdfBorderStyle )SetBorderWidth (width float64 ){_egbg .W =&width };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_fegfa *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _fegfa .Alternate ==nil {if _fegfa .N ==1{_fccg :=NewPdfColorspaceDeviceGray ();return _fccg .ColorFromFloats (vals );}else if _fegfa .N ==3{_gbbf :=NewPdfColorspaceDeviceRGB ();return _gbbf .ColorFromFloats (vals );}else if _fegfa .N ==4{_gebb :=NewPdfColorspaceDeviceCMYK ();return _gebb .ColorFromFloats (vals );}else {return nil ,_ca .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _fegfa .Alternate .ColorFromFloats (vals );};

// B returns the value of the blue component of the color.
func (_bfeaa *PdfColorDeviceRGB )B ()float64 {return float64 (_bfeaa [2])};func (_cegg fontCommon )asPdfObjectDictionary (_afgef string )*_bd .PdfObjectDictionary {if _afgef !=""&&_cegg ._ddad !=""&&_afgef !=_cegg ._ddad {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_afgef ,_cegg );}else if _afgef ==""&&_cegg ._ddad ==""{_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_cegg );}else if _cegg ._ddad ==""{_cegg ._ddad =_afgef ;};_caac :=_bd .MakeDict ();_caac .Set ("\u0054\u0079\u0070\u0065",_bd .MakeName ("\u0046\u006f\u006e\u0074"));_caac .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bd .MakeName (_cegg ._gfceb ));_caac .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName (_cegg ._ddad ));if _cegg ._dcgda !=nil {_caac .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_cegg ._dcgda .ToPdfObject ());};if _cegg ._cgab !=nil {_caac .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_cegg ._cgab );}else if _cegg ._cecd !=nil {_acec ,_ddebf :=_cegg ._cecd .Stream ();if _ddebf !=nil {_aag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_ddebf );}else {_caac .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_acec );};};return _caac ;};func (_ebgc *XObjectImage )getParamsDict ()*_bd .PdfObjectDictionary {_ceeb :=_bd .MakeDict ();_ceeb .Set ("\u0057\u0069\u0064t\u0068",_bd .MakeInteger (*_ebgc .Width ));_ceeb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bd .MakeInteger (*_ebgc .Height ));_ceeb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bd .MakeInteger (int64 (_ebgc .ColorSpace .GetNumComponents ())));_ceeb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bd .MakeInteger (*_ebgc .BitsPerComponent ));return _ceeb ;};func _fcged (_fafb *_bd .PdfObjectDictionary )(*PdfShadingType1 ,error ){_ecgf :=PdfShadingType1 {};if _aced :=_fafb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_aced !=nil {_aced =_bd .TraceToDirectObject (_aced );_gadec ,_dccbe :=_aced .(*_bd .PdfObjectArray );if !_dccbe {_aag .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aced );return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecgf .Domain =_gadec ;};if _ggffg :=_fafb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ggffg !=nil {_ggffg =_bd .TraceToDirectObject (_ggffg );_fccfc ,_gedgd :=_ggffg .(*_bd .PdfObjectArray );if !_gedgd {_aag .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggffg );return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecgf .Matrix =_fccfc ;};_bfbee :=_fafb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bfbee ==nil {_aag .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_ecgf .Function =[]PdfFunction {};if _fdcg ,_dafgc :=_bfbee .(*_bd .PdfObjectArray );_dafgc {for _ ,_ffecb :=range _fdcg .Elements (){_dfgbf ,_bfbcc :=_cgdeb (_ffecb );if _bfbcc !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfbcc );return nil ,_bfbcc ;};_ecgf .Function =append (_ecgf .Function ,_dfgbf );};}else {_afbab ,_gfbbe :=_cgdeb (_bfbee );if _gfbbe !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gfbbe );return nil ,_gfbbe ;};_ecgf .Function =append (_ecgf .Function ,_afbab );};return &_ecgf ,nil ;};func (_babe *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _babe ._dcgda ==nil &&_babe .DescendantFont !=nil {return _babe .DescendantFont .FontDescriptor ();};return _babe ._dcgda ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_bd .PdfObjectInteger ;BitsPerComponent *_bd .PdfObjectInteger ;VerticesPerRow *_bd .PdfObjectInteger ;Decode *_bd .PdfObjectArray ;Function []PdfFunction ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_bd .PdfObjectBool ;SigFlags *_bd .PdfObjectInteger ;CO *_bd .PdfObjectArray ;DR *PdfPageResources ;DA *_bd .PdfObjectString ;Q *_bd .PdfObjectInteger ;XFA _bd .PdfObject ;_gdaf *_bd .PdfIndirectObject ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};type pdfFont interface{_gb .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_bd .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_bd .PdfObjectInteger ;BitsPerComponent *_bd .PdfObjectInteger ;BitsPerFlag *_bd .PdfObjectInteger ;Decode *_bd .PdfObjectArray ;Function []PdfFunction ;};func (_cfbba *PdfReader )newPdfPageFromDict (_egfdd *_bd .PdfObjectDictionary )(*PdfPage ,error ){_ebgdf :=NewPdfPage ();_ebgdf ._cedce =_egfdd ;_adae :=*_egfdd ;_cfdg ,_cbaa :=_adae .Get ("\u0054\u0079\u0070\u0065").(*_bd .PdfObjectName );if !_cbaa {return nil ,_ca .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_cfdg !="\u0050\u0061\u0067\u0065"{return nil ,_ca .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _dcebaa :=_adae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_dcebaa !=nil {_ebgdf .Parent =_dcebaa ;};if _fcgg :=_adae .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_fcgg !=nil {_gfbde ,_accdd :=_bd .GetString (_fcgg );if !_accdd {return nil ,_ca .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};_daeb ,_daged :=NewPdfDate (_gfbde .Str ());if _daged !=nil {return nil ,_daged ;};_ebgdf .LastModified =&_daeb ;};if _ggfbe :=_adae .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ggfbe !=nil &&!_bd .IsNullObject (_ggfbe ){_ecfbg ,_fgfb :=_bd .GetDict (_ggfbe );if !_fgfb {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ggfbe );};var _dgae error ;_ebgdf .Resources ,_dgae =NewPdfPageResourcesFromDict (_ecfbg );if _dgae !=nil {return nil ,_dgae ;};}else {_eddf ,_dcgg :=_ebgdf .getParentResources ();if _dcgg !=nil {return nil ,_dcgg ;};if _eddf ==nil {_eddf =NewPdfPageResources ();};_ebgdf .Resources =_eddf ;};if _bgeee :=_adae .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_bgeee !=nil {_acbg ,_bfgb :=_bd .GetArray (_bgeee );if !_bfgb {return nil ,_ca .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _gfcfg error ;_ebgdf .MediaBox ,_gfcfg =NewPdfRectangle (*_acbg );if _gfcfg !=nil {return nil ,_gfcfg ;};};if _ebcgf :=_adae .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_ebcgf !=nil {_gfdf ,_adcc :=_bd .GetArray (_ebcgf );if !_adcc {return nil ,_ca .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _cefbc error ;_ebgdf .CropBox ,_cefbc =NewPdfRectangle (*_gfdf );if _cefbc !=nil {return nil ,_cefbc ;};};if _bebec :=_adae .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_bebec !=nil {_afefc ,_cdbcb :=_bd .GetArray (_bebec );if !_cdbcb {return nil ,_ca .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _fageed error ;_ebgdf .BleedBox ,_fageed =NewPdfRectangle (*_afefc );if _fageed !=nil {return nil ,_fageed ;};};if _geeea :=_adae .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_geeea !=nil {_bdaaeg ,_edfc :=_bd .GetArray (_geeea );if !_edfc {return nil ,_ca .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _gefde error ;_ebgdf .TrimBox ,_gefde =NewPdfRectangle (*_bdaaeg );if _gefde !=nil {return nil ,_gefde ;};};if _dgaaf :=_adae .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_dgaaf !=nil {_fagg ,_fegca :=_bd .GetArray (_dgaaf );if !_fegca {return nil ,_ca .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _gcaac error ;_ebgdf .ArtBox ,_gcaac =NewPdfRectangle (*_fagg );if _gcaac !=nil {return nil ,_gcaac ;};};if _gggab :=_adae .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_gggab !=nil {_ebgdf .BoxColorInfo =_gggab ;};if _adff :=_adae .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_adff !=nil {_ebgdf .Contents =_adff ;};if _abbd :=_adae .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_abbd !=nil {_feded ,_eaeg :=_bd .GetInt (_abbd );if !_eaeg {return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};_gcefe :=int64 (*_feded );_ebgdf .Rotate =&_gcefe ;};if _gaaddd :=_adae .Get ("\u0047\u0072\u006fu\u0070");_gaaddd !=nil {_ebgdf .Group =_gaaddd ;};if _agabg :=_adae .Get ("\u0054\u0068\u0075m\u0062");_agabg !=nil {_ebgdf .Thumb =_agabg ;};if _egdgg :=_adae .Get ("\u0042");_egdgg !=nil {_ebgdf .B =_egdgg ;};if _bdda :=_adae .Get ("\u0044\u0075\u0072");_bdda !=nil {_ebgdf .Dur =_bdda ;};if _fbccc :=_adae .Get ("\u0054\u0072\u0061n\u0073");_fbccc !=nil {_ebgdf .Trans =_fbccc ;};if _dcegb :=_adae .Get ("\u0041\u0041");_dcegb !=nil {_ebgdf .AA =_dcegb ;};if _gbcg :=_adae .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gbcg !=nil {_ebgdf .Metadata =_gbcg ;};if _efce :=_adae .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_efce !=nil {_ebgdf .PieceInfo =_efce ;};if _fbaae :=_adae .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_fbaae !=nil {_ebgdf .StructParents =_fbaae ;};if _gbda :=_adae .Get ("\u0049\u0044");_gbda !=nil {_ebgdf .ID =_gbda ;};if _gbfcf :=_adae .Get ("\u0050\u005a");_gbfcf !=nil {_ebgdf .PZ =_gbfcf ;};if _bfcaa :=_adae .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_bfcaa !=nil {_ebgdf .SeparationInfo =_bfcaa ;};if _bgce :=_adae .Get ("\u0054\u0061\u0062\u0073");_bgce !=nil {_ebgdf .Tabs =_bgce ;};if _bafd :=_adae .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_bafd !=nil {_ebgdf .TemplateInstantiated =_bafd ;};if _gfad :=_adae .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_gfad !=nil {_ebgdf .PresSteps =_gfad ;};if _baba :=_adae .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_baba !=nil {_ebgdf .UserUnit =_baba ;};if _ffeba :=_adae .Get ("\u0056\u0050");_ffeba !=nil {_ebgdf .VP =_ffeba ;};if _aefde :=_adae .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_aefde !=nil {_ebgdf .Annots =_aefde ;};_ebgdf ._ccccb =_cfbba ;return _ebgdf ,nil ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_eebbe *PdfPageResources )HasExtGState (keyName _bd .PdfObjectName )bool {_ ,_dgafg :=_eebbe .GetFontByName (keyName );return _dgafg ;};

// Encoder returns the font's text encoder.
func (_dgadb *pdfFontSimple )Encoder ()_ff .TextEncoder {if _dgadb ._cagf !=nil {return _dgadb ._cagf ;};if _dgadb ._dgcd !=nil {return _dgadb ._dgcd ;};_dccfe ,_ :=_ff .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );return _dccfe ;};func (_ccab *PdfReader )newPdfFieldSignatureFromDict (_affb *_bd .PdfObjectDictionary )(*PdfFieldSignature ,error ){_bdfa :=&PdfFieldSignature {};_fbcb ,_eaggf :=_bd .GetIndirect (_affb .Get ("\u0056"));if _eaggf {var _efgc error ;_bdfa .V ,_efgc =_ccab .newPdfSignatureFromIndirect (_fbcb );if _efgc !=nil {return nil ,_efgc ;};};_bdfa .Lock ,_ =_bd .GetIndirect (_affb .Get ("\u004c\u006f\u0063\u006b"));_bdfa .SV ,_ =_bd .GetIndirect (_affb .Get ("\u0053\u0056"));return _bdfa ,nil ;};func _gagdd (_fbcca *_bd .PdfObjectDictionary ,_aeged *fontCommon ,_gfdb _ff .TextEncoder )(*pdfFontSimple ,error ){_dcaff :=_ccbca (_aeged );_dcaff ._dgcd =_gfdb ;if _gfdb ==nil {_ddef :=_fbcca .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _ddef ==nil {_ddef =_bd .MakeInteger (0);};_dcaff .FirstChar =_ddef ;_feef ,_cccca :=_bd .GetIntVal (_ddef );if !_cccca {_aag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ddef );return nil ,_bd .ErrTypeError ;};_aafg :=_ff .CharCode (_feef );_ddef =_fbcca .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _ddef ==nil {_ddef =_bd .MakeInteger (255);};_dcaff .LastChar =_ddef ;_feef ,_cccca =_bd .GetIntVal (_ddef );if !_cccca {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_ddef );return nil ,_bd .ErrTypeError ;};_bfdg :=_ff .CharCode (_feef );_dcaff ._cegga =make (map[_ff .CharCode ]float64 );_ddef =_fbcca .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _ddef !=nil {_dcaff .Widths =_ddef ;_cabab ,_cggf :=_bd .GetArray (_ddef );if !_cggf {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_ddef );return nil ,_bd .ErrTypeError ;};_dfeab ,_bfbbc :=_cabab .ToFloat64Array ();if _bfbbc !=nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");return nil ,_bfbbc ;};if len (_dfeab )!=int (_bfdg -_aafg +1){_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_bfdg -_aafg +1,len (_dfeab ));return nil ,_bd .ErrRangeError ;};for _egcfe ,_dfae :=range _dfeab {_dcaff ._cegga [_aafg +_ff .CharCode (_egcfe )]=_dfae ;};};};_dcaff .Encoding =_bd .TraceToDirectObject (_fbcca .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _dcaff ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_edb *PdfActionResetForm )ToPdfObject ()_bd .PdfObject {_edb .PdfAction .ToPdfObject ();_dbb :=_edb ._ccf ;_dcc :=_dbb .PdfObject .(*_bd .PdfObjectDictionary );_dcc .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeResetForm )));_dcc .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_edb .Fields );_dcc .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_edb .Flags );return _dbb ;};func (_fgdb *PdfReader )newPdfAnnotationUnderlineFromDict (_geb *_bd .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_faf :=PdfAnnotationUnderline {};_gac ,_acg :=_fgdb .newPdfAnnotationMarkupFromDict (_geb );if _acg !=nil {return nil ,_acg ;};_faf .PdfAnnotationMarkup =_gac ;_faf .QuadPoints =_geb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_faf ,nil ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_caad *PdfPageResources )GetFontByName (keyName _bd .PdfObjectName )(_bd .PdfObject ,bool ){if _caad .Font ==nil {return nil ,false ;};_ebcbb ,_dgdcb :=_bd .TraceToDirectObject (_caad .Font ).(*_bd .PdfObjectDictionary );if !_dgdcb {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bd .TraceToDirectObject (_caad .Font ));return nil ,false ;};if _dacaa :=_ebcbb .Get (keyName );_dacaa !=nil {return _dacaa ,true ;};return nil ,false ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_cgee *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_bd .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");};_dddgb :=&PdfColorPattern {};_ggbd ,_cbbaa :=objects [len (objects )-1].(*_bd .PdfObjectName );if !_cbbaa {_aag .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);return nil ,ErrTypeCheck ;};_dddgb .PatternName =*_ggbd ;if len (objects )> 1{_ebga :=objects [0:len (objects )-1];if _cgee .UnderlyingCS ==nil {_aag .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");return nil ,_ca .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_acfa ,_ddfd :=_cgee .UnderlyingCS .ColorFromPdfObjects (_ebga );if _ddfd !=nil {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_ddfd );return nil ,_ddfd ;};_dddgb .Color =_acfa ;};return _dddgb ,nil ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_gdefg *PdfPageResources )GetColorspaceByName (keyName _bd .PdfObjectName )(PdfColorspace ,bool ){_egag ,_ccfbd :=_gdefg .GetColorspaces ();if _ccfbd !=nil {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ccfbd );return nil ,false ;};if _egag ==nil {return nil ,false ;};_ebdda ,_cfgea :=_egag .Colorspaces [string (keyName )];if !_cfgea {return nil ,false ;};return _ebdda ,true ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_ccdf *PdfPageResourcesColorspaces )Set (key _bd .PdfObjectName ,val PdfColorspace ){if _ ,_eaded :=_ccdf .Colorspaces [string (key )];!_eaded {_ccdf .Names =append (_ccdf .Names ,string (key ));};_ccdf .Colorspaces [string (key )]=val ;};func (_ffb *PdfReader )newPdfAnnotationWidgetFromDict (_cgce *_bd .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_ggd :=PdfAnnotationWidget {};_ggd .H =_cgce .Get ("\u0048");_ggd .MK =_cgce .Get ("\u004d\u004b");_ggd .A =_cgce .Get ("\u0041");_ggd .AA =_cgce .Get ("\u0041\u0041");_ggd .BS =_cgce .Get ("\u0042\u0053");_ggd .Parent =_cgce .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_ggd ,nil ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_caaa :=NewPdfAction ();_gdg :=&PdfActionSetOCGState {};_gdg .PdfAction =_caaa ;_caaa .SetContext (_gdg );return _gdg ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_fcaa *PdfFontDescriptor )ToPdfObject ()_bd .PdfObject {_fafff :=_bd .MakeDict ();if _fcaa ._efaf ==nil {_fcaa ._efaf =&_bd .PdfIndirectObject {};};_fcaa ._efaf .PdfObject =_fafff ;_fafff .Set ("\u0054\u0079\u0070\u0065",_bd .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));if _fcaa .FontName !=nil {_fafff .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fcaa .FontName );};if _fcaa .FontFamily !=nil {_fafff .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_fcaa .FontFamily );};if _fcaa .FontStretch !=nil {_fafff .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_fcaa .FontStretch );};if _fcaa .FontWeight !=nil {_fafff .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_fcaa .FontWeight );};if _fcaa .Flags !=nil {_fafff .Set ("\u0046\u006c\u0061g\u0073",_fcaa .Flags );};if _fcaa .FontBBox !=nil {_fafff .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_fcaa .FontBBox );};if _fcaa .ItalicAngle !=nil {_fafff .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_fcaa .ItalicAngle );};if _fcaa .Ascent !=nil {_fafff .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_fcaa .Ascent );};if _fcaa .Descent !=nil {_fafff .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_fcaa .Descent );};if _fcaa .Leading !=nil {_fafff .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_fcaa .Leading );};if _fcaa .CapHeight !=nil {_fafff .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_fcaa .CapHeight );};if _fcaa .XHeight !=nil {_fafff .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_fcaa .XHeight );};if _fcaa .StemV !=nil {_fafff .Set ("\u0053\u0074\u0065m\u0056",_fcaa .StemV );};if _fcaa .StemH !=nil {_fafff .Set ("\u0053\u0074\u0065m\u0048",_fcaa .StemH );};if _fcaa .AvgWidth !=nil {_fafff .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_fcaa .AvgWidth );};if _fcaa .MaxWidth !=nil {_fafff .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_fcaa .MaxWidth );};if _fcaa .MissingWidth !=nil {_fafff .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_fcaa .MissingWidth );};if _fcaa .FontFile !=nil {_fafff .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_fcaa .FontFile );};if _fcaa .FontFile2 !=nil {_fafff .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_fcaa .FontFile2 );};if _fcaa .FontFile3 !=nil {_fafff .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_fcaa .FontFile3 );};if _fcaa .CharSet !=nil {_fafff .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_fcaa .CharSet );};if _fcaa .Style !=nil {_fafff .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fcaa .FontName );};if _fcaa .Lang !=nil {_fafff .Set ("\u004c\u0061\u006e\u0067",_fcaa .Lang );};if _fcaa .FD !=nil {_fafff .Set ("\u0046\u0044",_fcaa .FD );};if _fcaa .CIDSet !=nil {_fafff .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_fcaa .CIDSet );};return _fcaa ._efaf ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _bd .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _bd .PdfObject ;Contents _bd .PdfObject ;Rotate *int64 ;Group _bd .PdfObject ;Thumb _bd .PdfObject ;B _bd .PdfObject ;Dur _bd .PdfObject ;Trans _bd .PdfObject ;AA _bd .PdfObject ;Metadata _bd .PdfObject ;PieceInfo _bd .PdfObject ;StructParents _bd .PdfObject ;ID _bd .PdfObject ;PZ _bd .PdfObject ;SeparationInfo _bd .PdfObject ;Tabs _bd .PdfObject ;TemplateInstantiated _bd .PdfObject ;PresSteps _bd .PdfObject ;UserUnit _bd .PdfObject ;VP _bd .PdfObject ;Annots _bd .PdfObject ;_fgfgg []*PdfAnnotation ;_cedce *_bd .PdfObjectDictionary ;_cbfbd *_bd .PdfIndirectObject ;_ccccb *PdfReader ;};func (_acfc *fontFile )loadFromSegments (_gbcde ,_agdgg []byte )error {_aag .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_gbcde ),len (_agdgg ));_deab :=_acfc .parseASCIIPart (_gbcde );if _deab !=nil {return _deab ;};_aag .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_acfc );if len (_agdgg )==0{return nil ;};_aag .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_acfc );return nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _bd .PdfObject ;};func _abadg (_gbbgc []rune ,_bddg map[rune ]int ,_dfgfe map[rune ]_gb .GID )*_bd .PdfObjectArray {_cddcb :=&_bd .PdfObjectArray {};for _fdefa :=0;_fdefa < len (_gbbgc );{_fbfd :=_bddg [_gbbgc [_fdefa ]];_gaea :=_fdefa ;for _eegdc :=_fdefa +1;_eegdc < len (_gbbgc );_eegdc ++{_fgdac :=_bddg [_gbbgc [_eegdc ]];if _fbfd ==_fgdac {_gaea =_eegdc ;}else {break ;};};_fccb :=_dfgfe [_gbbgc [_fdefa ]];_aadgc :=_dfgfe [_gbbgc [_gaea ]];_cddcb .Append (_bd .MakeInteger (int64 (_fccb )));_cddcb .Append (_bd .MakeInteger (int64 (_aadgc )));_cddcb .Append (_bd .MakeInteger (int64 (_fbfd )));_fdefa =_gaea +1;};return _cddcb ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_eaebc *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fedg :=vals [0];if _fedg < 0.0||_fedg > 1.0{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fad :=NewPdfColorCalGray (_fedg );return _fad ,nil ;};func (_fdfef *PdfFunctionType0 )processSamples ()error {_bgbac :=_caa .ResampleBytes (_fdfef ._bedcf ,_fdfef .BitsPerSample );_fdfef ._ddfc =_bgbac ;return nil ;};func (_gfcee *pdfCIDFontType0 )baseFields ()*fontCommon {return &_gfcee .fontCommon };

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overriden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _bd .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_bd .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_dgafgd ,_ecbbg :=encoder .EncodeBytes (img .Data );if _ecbbg !=nil {_aag .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ecbbg );return nil ,_ecbbg ;};_gafba :=NewXObjectImage ();_bgab :=img .Width ;_ccbfa :=img .Height ;_gafba .Width =&_bgab ;_gafba .Height =&_ccbfa ;_ecfae :=img .BitsPerComponent ;_gafba .BitsPerComponent =&_ecfae ;_gafba .Filter =encoder ;_gafba .Stream =_dgafgd ;if cs ==nil {if img .ColorComponents ==1{_gafba .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_gafba .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_gafba .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_ca .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_gafba .ColorSpace =cs ;};if img ._ggcg {_ffbgg :=NewXObjectImage ();_ffbgg .Filter =encoder ;_abebg ,_acbbeg :=encoder .EncodeBytes (img ._dcbb );if _acbbeg !=nil {_aag .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_acbbeg );return nil ,_acbbeg ;};_ffbgg .Stream =_abebg ;_ffbgg .BitsPerComponent =_gafba .BitsPerComponent ;_ffbgg .Width =&img .Width ;_ffbgg .Height =&img .Height ;_ffbgg .ColorSpace =NewPdfColorspaceDeviceGray ();_gafba .SMask =_ffbgg .ToPdfObject ();}else {_gafba .SMask =xobjIn .SMask ;_gafba .ImageMask =xobjIn .ImageMask ;if _gafba .ColorSpace .GetNumComponents ()==1{_cbed (_gafba );};};return _gafba ,nil ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_agge :=map[rune ]int {};for _ ,_gcde :=range text {_agge [_gcde ]++;};return _agge ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_cgca ,_cgefc :=_de .Open (filePath );if _cgefc !=nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_cgefc );return nil ,_cgefc ;};defer _cgca .Close ();return NewPdfFontFromTTF (_cgca );};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _bd .PdfObject ;Mac _bd .PdfObject ;Unix _bd .PdfObject ;NewWindow _bd .PdfObject ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_cgbf *_bd .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_bd .PdfObjectName ;Filter *_bd .PdfObjectName ;SubFilter *_bd .PdfObjectName ;Contents *_bd .PdfObjectString ;Cert _bd .PdfObject ;ByteRange *_bd .PdfObjectArray ;Reference *_bd .PdfObjectArray ;Changes *_bd .PdfObjectArray ;Name *_bd .PdfObjectString ;M *_bd .PdfObjectString ;Location *_bd .PdfObjectString ;Reason *_bd .PdfObjectString ;ContactInfo *_bd .PdfObjectString ;R *_bd .PdfObjectInteger ;V *_bd .PdfObjectInteger ;PropBuild *_bd .PdfObjectDictionary ;PropAuthTime *_bd .PdfObjectInteger ;PropAuthType *_bd .PdfObjectName ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_aaffdb *PdfPageResources )GetExtGState (keyName _bd .PdfObjectName )(_bd .PdfObject ,bool ){if _aaffdb .ExtGState ==nil {return nil ,false ;};_egecee ,_dddfc :=_bd .TraceToDirectObject (_aaffdb .ExtGState ).(*_bd .PdfObjectDictionary );if !_dddfc {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aaffdb .ExtGState );return nil ,false ;};if _dacge :=_egecee .Get (keyName );_dacge !=nil {return _dacge ,true ;};return nil ,false ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_cbbe *PdfAcroForm ,_aagf *PdfField ,_bfadc *PdfAnnotationWidget )(*_bd .PdfObjectDictionary ,error );};

// GetPage returns the PdfPage model for the specified page number.
func (_eaage *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _eaage ._efgga .GetCrypter ()!=nil &&!_eaage ._efgga .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};if len (_eaage ._eefe )< pageNumber {return nil ,_ca .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");};_daagd :=pageNumber -1;if _daagd < 0{return nil ,_c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_ddfce :=_eaage .PageList [_daagd ];return _ddfce ,nil ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_fdga DefaultImageHandler )NewImageFromGoImage (goimg _be .Image )(*Image ,error ){_fgeaa ,_ggbdc :=_adg .FromGoImage (goimg );if _ggbdc !=nil {return nil ,_ggbdc ;};_dcace :=_dcae (_fgeaa .Base ());return &_dcace ,nil ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_dgcc *PdfColorspaceLab )DecodeArray ()[]float64 {_bdfg :=[]float64 {0,100};if _dgcc .Range !=nil &&len (_dgcc .Range )==4{_bdfg =append (_bdfg ,_dgcc .Range ...);}else {_bdfg =append (_bdfg ,-100,100,-100,100);};return _bdfg ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_daaggb []byte )(_feaab int ,_gdggc error );};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_bgga *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func _edde (_bcegc *_bd .PdfObjectDictionary )(*PdfShadingType4 ,error ){_aegfg :=PdfShadingType4 {};_gfgd :=_bcegc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _gfgd ==nil {_aag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_egaa ,_ebbadd :=_gfgd .(*_bd .PdfObjectInteger );if !_ebbadd {_aag .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gfgd );return nil ,_bd .ErrTypeError ;};_aegfg .BitsPerCoordinate =_egaa ;_gfgd =_bcegc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gfgd ==nil {_aag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_egaa ,_ebbadd =_gfgd .(*_bd .PdfObjectInteger );if !_ebbadd {_aag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gfgd );return nil ,_bd .ErrTypeError ;};_aegfg .BitsPerComponent =_egaa ;_gfgd =_bcegc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gfgd ==nil {_aag .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_egaa ,_ebbadd =_gfgd .(*_bd .PdfObjectInteger );if !_ebbadd {_aag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gfgd );return nil ,_bd .ErrTypeError ;};_aegfg .BitsPerComponent =_egaa ;_gfgd =_bcegc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gfgd ==nil {_aag .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_fegfg ,_ebbadd :=_gfgd .(*_bd .PdfObjectArray );if !_ebbadd {_aag .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gfgd );return nil ,_bd .ErrTypeError ;};_aegfg .Decode =_fegfg ;_gfgd =_bcegc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gfgd ==nil {_aag .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_aegfg .Function =[]PdfFunction {};if _ddgc ,_abadff :=_gfgd .(*_bd .PdfObjectArray );_abadff {for _ ,_dcfab :=range _ddgc .Elements (){_aaada ,_gfca :=_cgdeb (_dcfab );if _gfca !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gfca );return nil ,_gfca ;};_aegfg .Function =append (_aegfg .Function ,_aaada );};}else {_eadfe ,_eaca :=_cgdeb (_gfgd );if _eaca !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eaca );return nil ,_eaca ;};_aegfg .Function =append (_aegfg .Function ,_eadfe );};return &_aegfg ,nil ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_dcadgc *pdfCIDFontType2 )ToPdfObject ()_bd .PdfObject {if _dcadgc ._dgac ==nil {_dcadgc ._dgac =&_bd .PdfIndirectObject {};};_gfef :=_dcadgc .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_dcadgc ._dgac .PdfObject =_gfef ;if _dcadgc .CIDSystemInfo !=nil {_gfef .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_dcadgc .CIDSystemInfo );};if _dcadgc .DW !=nil {_gfef .Set ("\u0044\u0057",_dcadgc .DW );};if _dcadgc .DW2 !=nil {_gfef .Set ("\u0044\u0057\u0032",_dcadgc .DW2 );};if _dcadgc .W !=nil {_gfef .Set ("\u0057",_dcadgc .W );};if _dcadgc .W2 !=nil {_gfef .Set ("\u0057\u0032",_dcadgc .W2 );};if _dcadgc .CIDToGIDMap !=nil {_gfef .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_dcadgc .CIDToGIDMap );};return _dcadgc ._dgac ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_gbgd byte )byte ;func (_gefab *PdfPage )getParentResources ()(*PdfPageResources ,error ){_aeaggb :=_gefab .Parent ;for _aeaggb !=nil {_gafb ,_cbffd :=_bd .GetDict (_aeaggb );if !_cbffd {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_ca .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _bcfc :=_gafb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bcfc !=nil {_fffbg ,_fcfg :=_bd .GetDict (_bcfc );if !_fcfg {return nil ,_ca .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_dffcaa ,_faegd :=NewPdfPageResourcesFromDict (_fffbg );if _faegd !=nil {return nil ,_faegd ;};return _dffcaa ,nil ;};_aeaggb =_gafb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_eaad :=NewPdfAnnotation ();_bfcd :=&PdfAnnotationTrapNet {};_bfcd .PdfAnnotation =_eaad ;_eaad .SetContext (_bfcd );return _bfcd ;};func _ceea (_cdgf ,_bcdff string )string {if _ad .Contains (_cdgf ,"\u002b"){_ecedd :=_ad .Split (_cdgf ,"\u002b");if len (_ecedd )==2{_cdgf =_ecedd [1];};};return _bcdff +"\u002b"+_cdgf ;};func (_acdf *PdfReader )newPdfAnnotationSoundFromDict (_cacb *_bd .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_aebb :=PdfAnnotationSound {};_bda ,_dceg :=_acdf .newPdfAnnotationMarkupFromDict (_cacb );if _dceg !=nil {return nil ,_dceg ;};_aebb .PdfAnnotationMarkup =_bda ;_aebb .Name =_cacb .Get ("\u004e\u0061\u006d\u0065");_aebb .Sound =_cacb .Get ("\u0053\u006f\u0075n\u0064");return &_aebb ,nil ;};

// GetXObjectByName gets XObject by name.
func (_ebgbd *PdfPage )GetXObjectByName (name _bd .PdfObjectName )(_bd .PdfObject ,bool ){_abbf ,_egdd :=_ebgbd .Resources .XObject .(*_bd .PdfObjectDictionary );if !_egdd {return nil ,false ;};if _egbd :=_abbf .Get (name );_egbd !=nil {return _egbd ,true ;};return nil ,false ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_dadf *PdfFieldButton )IsCheckbox ()bool {return _dadf .GetType ()==ButtonTypeCheckbox };func (_cebc *PdfWriter )writeObject (_baddf int ,_edabc _bd .PdfObject ){_aag .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_baddf );if _eafab ,_aacdd :=_edabc .(*_bd .PdfIndirectObject );_aacdd {_cebc ._egafb [_baddf ]=crossReference {Type :1,Offset :_cebc ._gbbdg ,Generation :_eafab .GenerationNumber };_gdeaeb :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_baddf );if _cedbd ,_cacbg :=_eafab .PdfObject .(*pdfSignDictionary );_cacbg {_cedbd ._ffcaa =_cebc ._gbbdg +int64 (len (_gdeaeb ));};if _eafab .PdfObject ==nil {_aag .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");_eafab .PdfObject =_bd .MakeNull ();};_gdeaeb +=_eafab .PdfObject .WriteString ();_gdeaeb +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_cebc .writeString (_gdeaeb );return ;};if _cfgd ,_fefdgc :=_edabc .(*_bd .PdfObjectStream );_fefdgc {_cebc ._egafb [_baddf ]=crossReference {Type :1,Offset :_cebc ._gbbdg ,Generation :_cfgd .GenerationNumber };_ebdef :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_baddf );_ebdef +=_cfgd .PdfObjectDictionary .WriteString ();_ebdef +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_cebc .writeString (_ebdef );_cebc .writeBytes (_cfgd .Stream );_cebc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _ccbfb ,_cafa :=_edabc .(*_bd .PdfObjectStreams );_cafa {_cebc ._egafb [_baddf ]=crossReference {Type :1,Offset :_cebc ._gbbdg ,Generation :_ccbfb .GenerationNumber };_dbbbf :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_baddf );var _agdbe []string ;var _gddaf string ;var _bdfdc int64 ;for _bccb ,_ggedg :=range _ccbfb .Elements (){_cdfff ,_ccac :=_ggedg .(*_bd .PdfIndirectObject );if !_ccac {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_baddf ,_ggedg );continue ;};_cgfbf :=_cdfff .PdfObject .WriteString ()+"\u0020";_gddaf =_gddaf +_cgfbf ;_agdbe =append (_agdbe ,_c .Sprintf ("\u0025\u0064\u0020%\u0064",_cdfff .ObjectNumber ,_bdfdc ));_cebc ._egafb [int (_cdfff .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_baddf ,Index :_bccb };_bdfdc =_bdfdc +int64 (len ([]byte (_cgfbf )));};_gcdgf :=_ad .Join (_agdbe ,"\u0020")+"\u0020";_abbaa :=_bd .NewFlateEncoder ();_eaeba :=_abbaa .MakeStreamDict ();_eaeba .Set (_bd .PdfObjectName ("\u0054\u0079\u0070\u0065"),_bd .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));_cegcg :=int64 (_ccbfb .Len ());_eaeba .Set (_bd .PdfObjectName ("\u004e"),_bd .MakeInteger (_cegcg ));_gaae :=int64 (len (_gcdgf ));_eaeba .Set (_bd .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_bd .MakeInteger (_gaae ));_cbeeg ,_ :=_abbaa .EncodeBytes ([]byte (_gcdgf +_gddaf ));_cefdb :=int64 (len (_cbeeg ));_eaeba .Set (_bd .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_bd .MakeInteger (_cefdb ));_dbbbf +=_eaeba .WriteString ();_dbbbf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_cebc .writeString (_dbbbf );_cebc .writeBytes (_cbeeg );_cebc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_cebc .writeString (_edabc .WriteString ());};func (_fbfcc *PdfWriter )addObjects (_afaea _bd .PdfObject )error {_aag .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _afbga ,_fgcdg :=_afaea .(*_bd .PdfIndirectObject );_fgcdg {_aag .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_aag .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_afaea ,_afbga );_aag .Log .Trace ("\u002d\u0020\u0025\u0073",_afbga .PdfObject );if _fbfcc .addObject (_afbga ){_dcfde :=_fbfcc .addObjects (_afbga .PdfObject );if _dcfde !=nil {return _dcfde ;};};return nil ;};if _abfaa ,_babbe :=_afaea .(*_bd .PdfObjectStream );_babbe {_aag .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_aag .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_afaea ,_afaea );if _fbfcc .addObject (_abfaa ){_fedgb :=_fbfcc .addObjects (_abfaa .PdfObjectDictionary );if _fedgb !=nil {return _fedgb ;};};return nil ;};if _faaeg ,_gadbe :=_afaea .(*_bd .PdfObjectDictionary );_gadbe {_aag .Log .Trace ("\u0044\u0069\u0063\u0074");_aag .Log .Trace ("\u002d\u0020\u0025\u0073",_afaea );for _ ,_ccgac :=range _faaeg .Keys (){_agfcg :=_faaeg .Get (_ccgac );if _cbec ,_ddege :=_agfcg .(*_bd .PdfObjectReference );_ddege {_agfcg =_cbec .Resolve ();_faaeg .Set (_ccgac ,_agfcg );};if _ccgac !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _fdfb :=_fbfcc .addObjects (_agfcg );_fdfb !=nil {return _fdfb ;};}else {if _ ,_aeafa :=_agfcg .(*_bd .PdfObjectNull );_aeafa {continue ;};if _gfeg :=_fbfcc .hasObject (_agfcg );!_gfeg {_aag .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_agfcg ,_agfcg ,_agfcg );_fbfcc ._ggcdd [_agfcg ]=append (_fbfcc ._ggcdd [_agfcg ],_faaeg );};};};return nil ;};if _bebee ,_cegfd :=_afaea .(*_bd .PdfObjectArray );_cegfd {_aag .Log .Trace ("\u0041\u0072\u0072a\u0079");_aag .Log .Trace ("\u002d\u0020\u0025\u0073",_afaea );if _bebee ==nil {return _ca .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _eagcc ,_abgff :=range _bebee .Elements (){if _aagff ,_dffef :=_abgff .(*_bd .PdfObjectReference );_dffef {_abgff =_aagff .Resolve ();_bebee .Set (_eagcc ,_abgff );};if _dcfgg :=_fbfcc .addObjects (_abgff );_dcfgg !=nil {return _dcfgg ;};};return nil ;};if _ ,_ggaafa :=_afaea .(*_bd .PdfObjectReference );_ggaafa {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_afaea );return _ca .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _eb .ReadSeeker )(*PdfReader ,error ){_ddbee :=&PdfReader {_dedf :rs ,_fbcccg :map[_bd .PdfObject ]struct{}{},_befgd :_gbfb (),_abbg :true };_ffffg ,_edee :=_bd .NewParser (rs );if _edee !=nil {return nil ,_edee ;};_ddbee ._efgga =_ffffg ;_fdeae ,_edee :=_ddbee .IsEncrypted ();if _edee !=nil {return nil ,_edee ;};if !_fdeae {_edee =_ddbee .loadStructure ();if _edee !=nil {return nil ,_edee ;};};return _ddbee ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cfag *PdfShadingType3 )ToPdfObject ()_bd .PdfObject {_cfag .PdfShading .ToPdfObject ();_dffg ,_gedd :=_cfag .getShadingDict ();if _gedd !=nil {_aag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _cfag .Coords !=nil {_dffg .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_cfag .Coords );};if _cfag .Domain !=nil {_dffg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cfag .Domain );};if _cfag .Function !=nil {if len (_cfag .Function )==1{_dffg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cfag .Function [0].ToPdfObject ());}else {_affgbd :=_bd .MakeArray ();for _ ,_egded :=range _cfag .Function {_affgbd .Append (_egded .ToPdfObject ());};_dffg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_affgbd );};};if _cfag .Extend !=nil {_dffg .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_cfag .Extend );};return _cfag ._ecebg ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_abgeb *PdfColorspaceLab )ColorFromPdfObjects (objects []_bd .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eaddb ,_bbcf :=_bd .GetNumbersAsFloat (objects );if _bbcf !=nil {return nil ,_bbcf ;};return _abgeb .ColorFromFloats (_eaddb );};

// ValidateSignatures validates digital signatures in the document.
func (_deafd *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _deafd .AcroForm ==nil {return nil ,nil ;};if _deafd .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_cgebf *PdfSignature ;_abdafe *PdfField ;_bdbfeg SignatureHandler ;};var _ecagb []*sigFieldPair ;for _ ,_ebbdg :=range _deafd .AcroForm .AllFields (){if _ebbdg .V ==nil {continue ;};if _ggegd ,_abegd :=_bd .GetDict (_ebbdg .V );_abegd {if _cbaf ,_efeca :=_bd .GetNameVal (_ggegd .Get ("\u0054\u0079\u0070\u0065"));_efeca &&_cbaf =="\u0053\u0069\u0067"{_gbcdb ,_bdcbea :=_bd .GetIndirect (_ebbdg .V );if !_bdcbea {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");return nil ,ErrTypeCheck ;};_bgafa ,_abbdf :=_deafd .newPdfSignatureFromIndirect (_gbcdb );if _abbdf !=nil {return nil ,_abbdf ;};var _fgfeg SignatureHandler ;for _ ,_gbcdag :=range handlers {if _gbcdag .IsApplicable (_bgafa ){_fgfeg =_gbcdag ;break ;};};_ecagb =append (_ecagb ,&sigFieldPair {_cgebf :_bgafa ,_abdafe :_ebbdg ,_bdbfeg :_fgfeg });};};};var _becc []SignatureValidationResult ;for _ ,_efdg :=range _ecagb {_ddgef :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_efdg ._abdafe }};if _efdg ._bdbfeg ==nil {_ddgef .Errors =append (_ddgef .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_becc =append (_becc ,_ddgef );continue ;};_ggacf ,_gdeg :=_efdg ._bdbfeg .NewDigest (_efdg ._cgebf );if _gdeg !=nil {_ddgef .Errors =append (_ddgef .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_gdeg .Error ());_becc =append (_becc ,_ddgef );continue ;};_gage :=_efdg ._cgebf .ByteRange ;if _gage ==nil {_ddgef .Errors =append (_ddgef .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_becc =append (_becc ,_ddgef );continue ;};for _eefde :=0;_eefde < _gage .Len ();_eefde =_eefde +2{_aefed ,_ :=_bd .GetNumberAsInt64 (_gage .Get (_eefde ));_aaefe ,_ :=_bd .GetIntVal (_gage .Get (_eefde +1));if _ ,_ecdc :=_deafd ._dedf .Seek (_aefed ,_eb .SeekStart );_ecdc !=nil {return nil ,_ecdc ;};_fbaf :=make ([]byte ,_aaefe );if _ ,_ddfea :=_deafd ._dedf .Read (_fbaf );_ddfea !=nil {return nil ,_ddfea ;};_ggacf .Write (_fbaf );};_aadgd ,_gdeg :=_efdg ._bdbfeg .Validate (_efdg ._cgebf ,_ggacf );if _gdeg !=nil {return nil ,_gdeg ;};_aadgd .Name =_efdg ._cgebf .Name .Decoded ();_aadgd .Reason =_efdg ._cgebf .Reason .Decoded ();if _efdg ._cgebf .M !=nil {_fefgd ,_acadec :=NewPdfDate (_efdg ._cgebf .M .String ());if _acadec !=nil {_aadgd .Errors =append (_aadgd .Errors ,_acadec .Error ());continue ;};_aadgd .Date =_fefgd ;};_aadgd .ContactInfo =_efdg ._cgebf .ContactInfo .Decoded ();_aadgd .Location =_efdg ._cgebf .Location .Decoded ();_aadgd .Fields =_ddgef .Fields ;_becc =append (_becc ,_aadgd );};return _becc ,nil ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_eaaff *PdfAcroForm )ToPdfObject ()_bd .PdfObject {_adadf :=_eaaff ._gdaf ;_bbcda :=_adadf .PdfObject .(*_bd .PdfObjectDictionary );if _eaaff .Fields !=nil {_cfef :=_bd .PdfObjectArray {};for _ ,_afdb :=range *_eaaff .Fields {_egcce :=_afdb .GetContext ();if _egcce !=nil {_cfef .Append (_egcce .ToPdfObject ());}else {_cfef .Append (_afdb .ToPdfObject ());};};_bbcda .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_cfef );};if _eaaff .NeedAppearances !=nil {_bbcda .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_eaaff .NeedAppearances );};if _eaaff .SigFlags !=nil {_bbcda .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_eaaff .SigFlags );};if _eaaff .CO !=nil {_bbcda .Set ("\u0043\u004f",_eaaff .CO );};if _eaaff .DR !=nil {_bbcda .Set ("\u0044\u0052",_eaaff .DR .ToPdfObject ());};if _eaaff .DA !=nil {_bbcda .Set ("\u0044\u0041",_eaaff .DA );};if _eaaff .Q !=nil {_bbcda .Set ("\u0051",_eaaff .Q );};if _eaaff .XFA !=nil {_bbcda .Set ("\u0058\u0046\u0041",_eaaff .XFA );};return _adadf ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_ddee *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ToPdfObject returns the PDF representation of the function.
func (_ddcba *PdfFunctionType4 )ToPdfObject ()_bd .PdfObject {_cgdd :=_ddcba ._ceabd ;if _cgdd ==nil {_ddcba ._ceabd =&_bd .PdfObjectStream {};_cgdd =_ddcba ._ceabd ;};_efec :=_bd .MakeDict ();_efec .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bd .MakeInteger (4));_cadcd :=&_bd .PdfObjectArray {};for _ ,_fcae :=range _ddcba .Domain {_cadcd .Append (_bd .MakeFloat (_fcae ));};_efec .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cadcd );_gfbdg :=&_bd .PdfObjectArray {};for _ ,_fddfg :=range _ddcba .Range {_gfbdg .Append (_bd .MakeFloat (_fddfg ));};_efec .Set ("\u0052\u0061\u006eg\u0065",_gfbdg );if _ddcba ._dadcg ==nil &&_ddcba .Program !=nil {_ddcba ._dadcg =[]byte (_ddcba .Program .String ());};_efec .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bd .MakeInteger (int64 (len (_ddcba ._dadcg ))));_cgdd .Stream =_ddcba ._dadcg ;_cgdd .PdfObjectDictionary =_efec ;return _cgdd ;};func (_cbbg *PdfReader )newPdfAnnotationStampFromDict (_gdad *_bd .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_dgg :=PdfAnnotationStamp {};_ded ,_ffdc :=_cbbg .newPdfAnnotationMarkupFromDict (_gdad );if _ffdc !=nil {return nil ,_ffdc ;};_dgg .PdfAnnotationMarkup =_ded ;_dgg .Name =_gdad .Get ("\u004e\u0061\u006d\u0065");return &_dgg ,nil ;};

// GetAction returns the PDF action for the annotation link.
func (_agg *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _agg ._dgef !=nil {return _agg ._dgef ,nil ;};if _agg .A ==nil {return nil ,nil ;};if _agg ._cef ==nil {return nil ,nil ;};_dcaf ,_ebag :=_agg ._cef .loadAction (_agg .A );if _ebag !=nil {return nil ,_ebag ;};_agg ._dgef =_dcaf ;return _agg ._dgef ,nil ;};func (_efegg *PdfReader )buildPageList (_bfbec *_bd .PdfIndirectObject ,_eaddc *_bd .PdfIndirectObject ,_cfcgc map[_bd .PdfObject ]struct{})error {if _bfbec ==nil {return nil ;};if _ ,_bcae :=_cfcgc [_bfbec ];_bcae {_aag .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_bfbec .ObjectNumber );return nil ;};_cfcgc [_bfbec ]=struct{}{};_egbe ,_geecfa :=_bfbec .PdfObject .(*_bd .PdfObjectDictionary );if !_geecfa {return _ca .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_bbfe ,_geecfa :=(*_egbe ).Get ("\u0054\u0079\u0070\u0065").(*_bd .PdfObjectName );if !_geecfa {if _egbe .Get ("\u004b\u0069\u0064\u0073")==nil {return _ca .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_aag .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");_bbfe =_bd .MakeName ("\u0050\u0061\u0067e\u0073");_egbe .Set ("\u0054\u0079\u0070\u0065",_bbfe );};_aag .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_bbfe ,_bfbec );if *_bbfe =="\u0050\u0061\u0067\u0065"{_aabd ,_bdeff :=_efegg .newPdfPageFromDict (_egbe );if _bdeff !=nil {return _bdeff ;};_aabd .setContainer (_bfbec );if _eaddc !=nil {_egbe .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eaddc );};_efegg ._eefe =append (_efegg ._eefe ,_bfbec );_efegg .PageList =append (_efegg .PageList ,_aabd );return nil ;};if *_bbfe !="\u0050\u0061\u0067e\u0073"{_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_bbfe );return _ca .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");};if _eaddc !=nil {_egbe .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eaddc );};if !_efegg ._abbg {_bdbgb :=_efegg .traverseObjectData (_bfbec );if _bdbgb !=nil {return _bdbgb ;};};_gcace ,_faggfd :=_efegg ._efgga .Resolve (_egbe .Get ("\u004b\u0069\u0064\u0073"));if _faggfd !=nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _faggfd ;};var _adbdb *_bd .PdfObjectArray ;_adbdb ,_geecfa =_gcace .(*_bd .PdfObjectArray );if !_geecfa {_bdba ,_ebcba :=_gcace .(*_bd .PdfIndirectObject );if !_ebcba {return _ca .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_adbdb ,_geecfa =_bdba .PdfObject .(*_bd .PdfObjectArray );if !_geecfa {return _ca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_aag .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_adbdb );for _faae ,_ccdgd :=range _adbdb .Elements (){_cgffd ,_ffea :=_bd .GetIndirect (_ccdgd );if !_ffea {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_cgffd );return _ca .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_adbdb .Set (_faae ,_cgffd );_faggfd =_efegg .buildPageList (_cgffd ,_bfbec ,_cfcgc );if _faggfd !=nil {return _faggfd ;};};return nil ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_cedb *PdfFieldButton )IsPush ()bool {return _cedb .GetType ()==ButtonTypePush };

// ImageToRGB convert an indexed image to RGB.
func (_fbea *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_fbea .Base .GetNumComponents ();if N < 1{return Image {},_c .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );};_ffgf :=_adg .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._dcbb ,img ._fbadbga );_ebed :=_caa .NewReader (img .getBase ());_befgb :=_caa .NewWriter (_ffgf );var (_fagc uint32 ;_eegg int ;_fbfbc error ;);for {_fagc ,_fbfbc =_ebed .ReadSample ();if _fbfbc ==_eb .EOF {break ;}else if _fbfbc !=nil {return img ,_fbfbc ;};_eegg =int (_fagc );_aag .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_eegg ,N ,len (_fbea ._eagg ));if (_eegg +1)*N > len (_fbea ._eagg ){_eegg =len (_fbea ._eagg )/N -1;_aag .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_eegg );if _eegg < 0{_aag .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");break ;};};for _bgde :=_eegg *N ;_bgde < (_eegg +1)*N ;_bgde ++{if _fbfbc =_befgb .WriteSample (uint32 (_fbea ._eagg [_bgde ]));_fbfbc !=nil {return img ,_fbfbc ;};};};return _fbea .Base .ImageToRGB (_dcae (&_ffgf ));};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_fbaba *PdfFieldButton )IsRadio ()bool {return _fbaba .GetType ()==ButtonTypeRadio };func (_cae *PdfReader )newPdfActionGotoRFromDict (_ebdf *_bd .PdfObjectDictionary )(*PdfActionGoToR ,error ){_gga ,_fbc :=_gfgg (_ebdf .Get ("\u0046"));if _fbc !=nil {return nil ,_fbc ;};return &PdfActionGoToR {D :_ebdf .Get ("\u0044"),NewWindow :_ebdf .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_gga },nil ;};func _cabg (_baec _bd .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_eaaf :=NewPdfColorspaceSpecialIndexed ();if _dega ,_ecdg :=_baec .(*_bd .PdfIndirectObject );_ecdg {_eaaf ._dbcca =_dega ;};_baec =_bd .TraceToDirectObject (_baec );_eegbf ,_caaf :=_baec .(*_bd .PdfObjectArray );if !_caaf {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eegbf .Len ()!=4{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_baec =_eegbf .Get (0);_cabe ,_caaf :=_baec .(*_bd .PdfObjectName );if !_caaf {return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_cabe !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");};_baec =_eegbf .Get (1);_dggc ,_gfgc :=DetermineColorspaceNameFromPdfObject (_baec );if _dggc =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_dggc =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_aag .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_dggc );return nil ,_fadf ;};_bedg ,_gfgc :=NewPdfColorspaceFromPdfObject (_baec );if _gfgc !=nil {return nil ,_gfgc ;};_eaaf .Base =_bedg ;_baec =_eegbf .Get (2);_bebfg ,_gfgc :=_bd .GetNumberAsInt64 (_baec );if _gfgc !=nil {return nil ,_gfgc ;};if _bebfg > 255{return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");};_eaaf .HiVal =int (_bebfg );_baec =_eegbf .Get (3);_eaaf .Lookup =_baec ;_baec =_bd .TraceToDirectObject (_baec );var _acgeg []byte ;if _fgba ,_eab :=_baec .(*_bd .PdfObjectString );_eab {_acgeg =_fgba .Bytes ();_aag .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_acgeg );}else if _gaabe ,_ffbfc :=_baec .(*_bd .PdfObjectStream );_ffbfc {_aag .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_baec .String ());_aag .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_gaabe .Stream ),_gaabe .Stream );_agacc ,_bfef :=_bd .DecodeStream (_gaabe );if _bfef !=nil {return nil ,_bfef ;};_aag .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_agacc ),_agacc );_acgeg =_agacc ;}else {_aag .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_baec );return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_acgeg )< _eaaf .Base .GetNumComponents ()*(_eaaf .HiVal +1){_aag .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");_aag .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_acgeg ),_eaaf .Base .GetNumComponents (),_eaaf .HiVal );}else {_acgeg =_acgeg [:_eaaf .Base .GetNumComponents ()*(_eaaf .HiVal +1)];};_eaaf ._eagg =_acgeg ;return _eaaf ,nil ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_efa *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _efa .Base ==nil {return nil ,_ca .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _efa .Base .ColorToRGB (color );};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _bd .StreamEncoder ;FormType _bd .PdfObject ;BBox _bd .PdfObject ;Matrix _bd .PdfObject ;Resources *PdfPageResources ;Group _bd .PdfObject ;Ref _bd .PdfObject ;MetaData _bd .PdfObject ;PieceInfo _bd .PdfObject ;LastModified _bd .PdfObject ;StructParent _bd .PdfObject ;StructParents _bd .PdfObject ;OPI _bd .PdfObject ;OC _bd .PdfObject ;Name _bd .PdfObject ;

// Stream data.
Stream []byte ;_cccga *_bd .PdfObjectStream ;};type fontFile struct{_abaf string ;_edce string ;_bfaec _ff .SimpleEncoder ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_bbffa =subject };func (_debg *PdfReader )newPdfAnnotationFreeTextFromDict (_dce *_bd .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_cgfd :=PdfAnnotationFreeText {};_dcfg ,_eaeb :=_debg .newPdfAnnotationMarkupFromDict (_dce );if _eaeb !=nil {return nil ,_eaeb ;};_cgfd .PdfAnnotationMarkup =_dcfg ;_cgfd .DA =_dce .Get ("\u0044\u0041");_cgfd .Q =_dce .Get ("\u0051");_cgfd .RC =_dce .Get ("\u0052\u0043");_cgfd .DS =_dce .Get ("\u0044\u0053");_cgfd .CL =_dce .Get ("\u0043\u004c");_cgfd .IT =_dce .Get ("\u0049\u0054");_cgfd .BE =_dce .Get ("\u0042\u0045");_cgfd .RD =_dce .Get ("\u0052\u0044");_cgfd .BS =_dce .Get ("\u0042\u0053");_cgfd .LE =_dce .Get ("\u004c\u0045");return &_cgfd ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_gea *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_bd .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdecd ,_bcggf :=_bd .GetNumbersAsFloat (objects );if _bcggf !=nil {return nil ,_bcggf ;};return _gea .ColorFromFloats (_gdecd );};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _bd .PdfObject ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_eeaa *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _eeaa .MediaBox !=nil {return _eeaa .MediaBox ,nil ;};_egeg :=_eeaa .Parent ;for _egeg !=nil {_gdgfe ,_bfbge :=_bd .GetDict (_egeg );if !_bfbge {return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");};if _efeda :=_gdgfe .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_efeda !=nil {_bcfd ,_fbcg :=_bd .GetArray (_efeda );if !_fbcg {return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");};_gged ,_cacga :=NewPdfRectangle (*_bcfd );if _cacga !=nil {return nil ,_cacga ;};return _gged ,nil ;};_egeg =_gdgfe .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ca .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _bd .PdfObject ;AN _bd .PdfObject ;OP _bd .PdfObject ;JS _bd .PdfObject ;};var _gcefg =_dc .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_dfdad :=&XObjectImage {};_bcdba :=&_bd .PdfObjectStream {};_bcdba .PdfObjectDictionary =_bd .MakeDict ();_dfdad ._abdfc =_bcdba ;return _dfdad ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_aedf :=NewPdfAnnotation ();_gcgd :=&PdfAnnotationSquiggly {};_gcgd .PdfAnnotation =_aedf ;_gcgd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aedf .SetContext (_gcgd );return _gcgd ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_cfad *PdfPageResources )GetXObjectByName (keyName _bd .PdfObjectName )(*_bd .PdfObjectStream ,XObjectType ){if _cfad .XObject ==nil {return nil ,XObjectTypeUndefined ;};_dgcga ,_accge :=_bd .TraceToDirectObject (_cfad .XObject ).(*_bd .PdfObjectDictionary );if !_accge {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bd .TraceToDirectObject (_cfad .XObject ));return nil ,XObjectTypeUndefined ;};if _efffg :=_dgcga .Get (keyName );_efffg !=nil {_bgbgg ,_cgfcb :=_bd .GetStream (_efffg );if !_cgfcb {_aag .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_efffg );return nil ,XObjectTypeUndefined ;};_gbdc :=_bgbgg .PdfObjectDictionary ;_dcaba ,_cgfcb :=_bd .TraceToDirectObject (_gbdc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_bd .PdfObjectName );if !_cgfcb {_aag .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_gbdc .String ());return nil ,XObjectTypeUndefined ;};if *_dcaba =="\u0049\u006d\u0061g\u0065"{return _bgbgg ,XObjectTypeImage ;}else if *_dcaba =="\u0046\u006f\u0072\u006d"{return _bgbgg ,XObjectTypeForm ;}else if *_dcaba =="\u0050\u0053"{return _bgbgg ,XObjectTypePS ;}else {_aag .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_dcaba );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_cccb :=NewPdfAnnotation ();_bcb :=&PdfAnnotationRichMedia {};_bcb .PdfAnnotation =_cccb ;_cccb .SetContext (_bcb );return _bcb ;};

// ToPdfObject implements interface PdfModel.
func (_eg *PdfActionGoToR )ToPdfObject ()_bd .PdfObject {_eg .PdfAction .ToPdfObject ();_cadd :=_eg ._ccf ;_dbg :=_cadd .PdfObject .(*_bd .PdfObjectDictionary );_dbg .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeGoToR )));if _eg .F !=nil {_dbg .Set ("\u0046",_eg .F .ToPdfObject ());};_dbg .SetIfNotNil ("\u0044",_eg .D );_dbg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_eg .NewWindow );return _cadd ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eedaff *PdfShadingType2 )ToPdfObject ()_bd .PdfObject {_eedaff .PdfShading .ToPdfObject ();_fdec ,_bccg :=_eedaff .getShadingDict ();if _bccg !=nil {_aag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _fdec ==nil {_aag .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _eedaff .Coords !=nil {_fdec .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_eedaff .Coords );};if _eedaff .Domain !=nil {_fdec .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_eedaff .Domain );};if _eedaff .Function !=nil {if len (_eedaff .Function )==1{_fdec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eedaff .Function [0].ToPdfObject ());}else {_eeabg :=_bd .MakeArray ();for _ ,_gcedd :=range _eedaff .Function {_eeabg .Append (_gcedd .ToPdfObject ());};_fdec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eeabg );};};if _eedaff .Extend !=nil {_fdec .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_eedaff .Extend );};return _eedaff ._ecebg ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_aedc *PdfPageResources )GetShadingByName (keyName _bd .PdfObjectName )(*PdfShading ,bool ){if _aedc .Shading ==nil {return nil ,false ;};_afdba ,_ggaeg :=_bd .TraceToDirectObject (_aedc .Shading ).(*_bd .PdfObjectDictionary );if !_ggaeg {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aedc .Shading );return nil ,false ;};if _efdd :=_afdba .Get (keyName );_efdd !=nil {_abagb ,_dbgcb :=_geag (_efdd );if _dbgcb !=nil {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_dbgcb );return nil ,false ;};return _abagb ,true ;};return nil ,false ;};func (_cbdf *PdfReader )newPdfFieldFromIndirectObject (_bdbc *_bd .PdfIndirectObject ,_ebfadb *PdfField )(*PdfField ,error ){if _dccf ,_ddegd :=_cbdf ._befgd .GetModelFromPrimitive (_bdbc ).(*PdfField );_ddegd {return _dccf ,nil ;};_cbfcg ,_gade :=_bd .GetDict (_bdbc );if !_gade {return nil ,_c .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cgbcg :=NewPdfField ();_cgbcg ._gcacg =_bdbc ;_cgbcg ._gcacg .PdfObject =_cbfcg ;_eagc :=false ;if _aegg ,_bbbefb :=_bd .GetName (_cbfcg .Get ("\u0046\u0054"));_bbbefb {_cgbcg .FT =_aegg ;_eagc =true ;};_cgbcg ._dcdec =&_eagc ;_cgbcg .T ,_ =_cbfcg .Get ("\u0054").(*_bd .PdfObjectString );_cgbcg .TU ,_ =_cbfcg .Get ("\u0054\u0055").(*_bd .PdfObjectString );_cgbcg .TM ,_ =_cbfcg .Get ("\u0054\u004d").(*_bd .PdfObjectString );_cgbcg .Ff ,_ =_cbfcg .Get ("\u0046\u0066").(*_bd .PdfObjectInteger );_cgbcg .V =_cbfcg .Get ("\u0056");_cgbcg .DV =_cbfcg .Get ("\u0044\u0056");_cgbcg .AA =_cbfcg .Get ("\u0041\u0041");if _cgbcg .FT !=nil {switch *_cgbcg .FT {case "\u0054\u0078":_ddbca ,_adbae :=_aedff (_cbfcg );if _adbae !=nil {return nil ,_adbae ;};_ddbca .PdfField =_cgbcg ;_cgbcg ._dac =_ddbca ;case "\u0043\u0068":_fefcg ,_egba :=_fgcec (_cbfcg );if _egba !=nil {return nil ,_egba ;};_fefcg .PdfField =_cgbcg ;_cgbcg ._dac =_fefcg ;case "\u0042\u0074\u006e":_gbcc ,_bbedc :=_ggdb (_cbfcg );if _bbedc !=nil {return nil ,_bbedc ;};_gbcc .PdfField =_cgbcg ;_cgbcg ._dac =_gbcc ;case "\u0053\u0069\u0067":_cfbca ,_afdcf :=_cbdf .newPdfFieldSignatureFromDict (_cbfcg );if _afdcf !=nil {return nil ,_afdcf ;};_cfbca .PdfField =_cgbcg ;_cgbcg ._dac =_cfbca ;default:_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_cgbcg .FT );return nil ,_ca .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _ebfadb !=nil {_cgbcg .Parent =_ebfadb ;};_cgbcg .Annotations =[]*PdfAnnotationWidget {};if _egbcg ,_agacb :=_bd .GetName (_cbfcg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_agacb {if *_egbcg =="\u0057\u0069\u0064\u0067\u0065\u0074"{_cgge ,_fdaff :=_cbdf .newPdfAnnotationFromIndirectObject (_bdbc );if _fdaff !=nil {return nil ,_fdaff ;};_efcg ,_agbb :=_cgge .GetContext ().(*PdfAnnotationWidget );if !_agbb {return nil ,_ca .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_efcg ._deca =_cgbcg ;_efcg .Parent =_cgbcg ._gcacg ;_cgbcg .Annotations =append (_cgbcg .Annotations ,_efcg );return _cgbcg ,nil ;};};if _gdbb ,_abeg :=_bd .GetArray (_cbfcg .Get ("\u004b\u0069\u0064\u0073"));_abeg {_cgbcg .Kids =[]*PdfField {};for _ ,_eaebbf :=range _gdbb .Elements (){_gcca ,_baee :=_bd .GetIndirect (_eaebbf );if !_baee {_fgdeb ,_feac :=_bd .GetStream (_eaebbf );if _feac &&_fgdeb .PdfObjectDictionary !=nil {_abad ,_ddga :=_bd .GetNameVal (_fgdeb .Get ("\u0054\u0079\u0070\u0065"));if _ddga &&_abad =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_aag .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");continue ;};};return nil ,_ca .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_abdf ,_debf :=_bd .GetDict (_gcca );if !_debf {return nil ,ErrTypeCheck ;};_ ,_cgbcc :=_bd .GetName (_abdf .Get ("\u0046\u0054"));if _dbbf ,_dfga :=_bd .GetName (_abdf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_dfga &&!_cgbcc &&*_dbbf =="\u0057\u0069\u0064\u0067\u0065\u0074"{_efab ,_fdbd :=_cbdf .newPdfAnnotationFromIndirectObject (_gcca );if _fdbd !=nil {_aag .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_fdbd );return nil ,_fdbd ;};_efdb ,_faef :=_efab ._bfa .(*PdfAnnotationWidget );if !_faef {return nil ,ErrTypeCheck ;};_efdb ._deca =_cgbcg ;_cgbcg .Annotations =append (_cgbcg .Annotations ,_efdb );}else {_bcbf ,_acdgd :=_cbdf .newPdfFieldFromIndirectObject (_gcca ,_cgbcg );if _acdgd !=nil {_aag .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_acdgd );return nil ,_acdgd ;};_cgbcg .Kids =append (_cgbcg .Kids ,_bcbf );};};};return _cgbcg ,nil ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _bd .PdfObject ;Name _bd .PdfObject ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_fec *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_cbebb :=_caa .NewReader (img .getBase ());_ddaa :=_adg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_fbdd :=_caa .NewWriter (_ddaa );_eadc :=_cg .Pow (2,float64 (img .BitsPerComponent ))-1;_cbbd :=make ([]uint32 ,3);var (_eced error ;_aaef ,_ebagb ,_bfbc ,_bgddgc ,_dddc ,_ffbf float64 ;);for {_eced =_cbebb .ReadSamples (_cbbd );if _eced ==_eb .EOF {break ;}else if _eced !=nil {return img ,_eced ;};_aaef =float64 (_cbbd [0])/_eadc ;_ebagb =float64 (_cbbd [1])/_eadc ;_bfbc =float64 (_cbbd [2])/_eadc ;_bgddgc =_fec .Matrix [0]*_cg .Pow (_aaef ,_fec .Gamma [0])+_fec .Matrix [3]*_cg .Pow (_ebagb ,_fec .Gamma [1])+_fec .Matrix [6]*_cg .Pow (_bfbc ,_fec .Gamma [2]);_dddc =_fec .Matrix [1]*_cg .Pow (_aaef ,_fec .Gamma [0])+_fec .Matrix [4]*_cg .Pow (_ebagb ,_fec .Gamma [1])+_fec .Matrix [7]*_cg .Pow (_bfbc ,_fec .Gamma [2]);_ffbf =_fec .Matrix [2]*_cg .Pow (_aaef ,_fec .Gamma [0])+_fec .Matrix [5]*_cg .Pow (_ebagb ,_fec .Gamma [1])+_fec .Matrix [8]*_cg .Pow (_bfbc ,_fec .Gamma [2]);_aaef =3.240479*_bgddgc +-1.537150*_dddc +-0.498535*_ffbf ;_ebagb =-0.969256*_bgddgc +1.875992*_dddc +0.041556*_ffbf ;_bfbc =0.055648*_bgddgc +-0.204043*_dddc +1.057311*_ffbf ;_aaef =_cg .Min (_cg .Max (_aaef ,0),1.0);_ebagb =_cg .Min (_cg .Max (_ebagb ,0),1.0);_bfbc =_cg .Min (_cg .Max (_bfbc ,0),1.0);_cbbd [0]=uint32 (_aaef *_eadc );_cbbd [1]=uint32 (_ebagb *_eadc );_cbbd [2]=uint32 (_bfbc *_eadc );if _eced =_fbdd .WriteSamples (_cbbd );_eced !=nil {return img ,_eced ;};};return _dcae (&_ddaa ),nil ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_ee :=&PdfAction {};_ee ._ccf =_bd .MakeIndirectObject (_bd .MakeDict ());return _ee ;};func (_fdb *PdfReader )newPdfActionSubmitFormFromDict (_eaa *_bd .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_geg ,_ceb :=_gfgg (_eaa .Get ("\u0046"));if _ceb !=nil {return nil ,_ceb ;};return &PdfActionSubmitForm {F :_geg ,Fields :_eaa .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_eaa .Get ("\u0046\u006c\u0061g\u0073")},nil ;};func _efcbd ()string {return _bbffa };func (_dgeb *PdfReader )newPdfSignatureFromIndirect (_dfbcb *_bd .PdfIndirectObject )(*PdfSignature ,error ){_ebbda ,_cacgge :=_dfbcb .PdfObject .(*_bd .PdfObjectDictionary );if !_cacgge {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,ErrTypeCheck ;};if _gddfe ,_efege :=_dgeb ._befgd .GetModelFromPrimitive (_dfbcb ).(*PdfSignature );_efege {return _gddfe ,nil ;};_dcfge :=&PdfSignature {};_dcfge ._cgbf =_dfbcb ;_dcfge .Type ,_ =_bd .GetName (_ebbda .Get ("\u0054\u0079\u0070\u0065"));_dcfge .Filter ,_cacgge =_bd .GetName (_ebbda .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_cacgge {_aag .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_dcfge .SubFilter ,_ =_bd .GetName (_ebbda .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_dcfge .Contents ,_cacgge =_bd .GetString (_ebbda .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_cacgge {_aag .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_dcfge .Cert =_ebbda .Get ("\u0043\u0065\u0072\u0074");_dcfge .ByteRange ,_ =_bd .GetArray (_ebbda .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_dcfge .Reference ,_ =_bd .GetArray (_ebbda .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_dcfge .Changes ,_ =_bd .GetArray (_ebbda .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_dcfge .Name ,_ =_bd .GetString (_ebbda .Get ("\u004e\u0061\u006d\u0065"));_dcfge .M ,_ =_bd .GetString (_ebbda .Get ("\u004d"));_dcfge .Location ,_ =_bd .GetString (_ebbda .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));_dcfge .Reason ,_ =_bd .GetString (_ebbda .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_dcfge .ContactInfo ,_ =_bd .GetString (_ebbda .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_dcfge .R ,_ =_bd .GetInt (_ebbda .Get ("\u0052"));_dcfge .V ,_ =_bd .GetInt (_ebbda .Get ("\u0056"));_dcfge .PropBuild ,_ =_bd .GetDict (_ebbda .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_dcfge .PropAuthTime ,_ =_bd .GetInt (_ebbda .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));_dcfge .PropAuthType ,_ =_bd .GetName (_ebbda .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _dcfge ,nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_eefgc FieldFlag )Has (fl FieldFlag )bool {return (_eefgc .Mask ()&fl .Mask ())> 0};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_fdegc *PdfField )FullName ()(string ,error ){var _cfdd _af .Buffer ;if _fdegc .T ==nil {return _cfdd .String (),_ca .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_ffcg :=[]string {_fdegc .T .Decoded ()};_dgbbg :=map[*PdfField ]bool {};_dgbbg [_fdegc ]=true ;_dfbf :=_fdegc .Parent ;for _dfbf !=nil {if _ ,_ccbbb :=_dgbbg [_dfbf ];_ccbbb {return _cfdd .String (),_ca .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _dfbf .T ==nil {return _cfdd .String (),_ca .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_ffcg =append (_ffcg ,_dfbf .T .Decoded ());_dgbbg [_dfbf ]=true ;_dfbf =_dfbf .Parent ;};for _fddcf :=len (_ffcg )-1;_fddcf >=0;_fddcf --{_cfdd .WriteString (_ffcg [_fddcf ]);if _fddcf > 0{_cfdd .WriteString ("\u002e");};};return _cfdd .String (),nil ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_bggeg *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _bggeg ._ffdfb !=nil {return _bggeg ._ffdfb ,nil ;};if _bggeg .ColorSpace ==nil {return nil ,nil ;};_dcag ,_gbbe :=_befd (_bggeg .ColorSpace );if _gbbe !=nil {return nil ,_gbbe ;};_bggeg ._ffdfb =_dcag ;return _bggeg ._ffdfb ,nil ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_bega *PdfField )Flags ()FieldFlag {var _cgad FieldFlag ;_defb ,_bbgfb :=_bega .inherit (func (_ggag *PdfField )bool {if _ggag .Ff !=nil {_cgad =FieldFlag (*_bega .Ff );return true ;};return false ;});if _bbgfb !=nil {_aag .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_bbgfb );};if !_defb {_aag .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _cgad ;};

// Encoder returns the font's text encoder.
func (_dfgfg *PdfFont )Encoder ()_ff .TextEncoder {_gbac :=_dfgfg .actualFont ();if _gbac ==nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_dfgfg ._ddgba );return nil ;};return _gbac .Encoder ();};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_ccfcf _eb .ReadSeeker ;_cadda *_bd .PdfParser ;_eege *PdfReader ;Reader *PdfReader ;_cgaa []*PdfPage ;_fdcd *PdfAcroForm ;_bbab _bd .XrefTable ;_dcfff int64 ;_dbec int ;_bfad []_bd .PdfObject ;_bdae map[_bd .PdfObject ]struct{};_aab map[_bd .PdfObject ]int64 ;_ebdb map[_bd .PdfObject ]struct{};_gddf map[_bd .PdfObject ]struct{};_ccb int64 ;_cded bool ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_ggge *PdfPageResources )HasFontByName (keyName _bd .PdfObjectName )bool {_ ,_cgead :=_ggge .GetFontByName (keyName );return _cgead ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};func (_dbea *PdfReader )newPdfAnnotationSquigglyFromDict (_eedg *_bd .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_gcab :=PdfAnnotationSquiggly {};_fdde ,_eeee :=_dbea .newPdfAnnotationMarkupFromDict (_eedg );if _eeee !=nil {return nil ,_eeee ;};_gcab .PdfAnnotationMarkup =_fdde ;_gcab .QuadPoints =_eedg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gcab ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fbagg *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_aag .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_beage :=[]float64 {0.0};if _fbagg .C0 !=nil {_beage =_fbagg .C0 ;};_bdcbe :=[]float64 {1.0};if _fbagg .C1 !=nil {_bdcbe =_fbagg .C1 ;};var _cbge []float64 ;for _fgbff :=0;_fgbff < len (_beage );_fgbff ++{_caeg :=_beage [_fgbff ]+_cg .Pow (x [0],_fbagg .N )*(_bdcbe [_fgbff ]-_beage [_fgbff ]);_cbge =append (_cbge ,_caeg );};return _cbge ,nil ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_bd .PdfIndirectObject )*PdfOutlineItem {_fcfe :=PdfOutlineItem {};_fcfe ._dcaag =&_fcfe ;_fcfe .Title =_bd .MakeString (title );_gcfb :=_bd .MakeArray ();_gcfb .Append (page );_gcfb .Append (_bd .MakeName ("\u0046\u0069\u0074"));_fcfe .Dest =_gcfb ;return &_fcfe ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_ddgbc *PdfPage )GetPageDict ()*_bd .PdfObjectDictionary {_bfbca :=_ddgbc ._cedce ;_bfbca .Clear ();_bfbca .Set ("\u0054\u0079\u0070\u0065",_bd .MakeName ("\u0050\u0061\u0067\u0065"));_bfbca .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ddgbc .Parent );if _ddgbc .LastModified !=nil {_bfbca .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_ddgbc .LastModified .ToPdfObject ());};if _ddgbc .Resources !=nil {_bfbca .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ddgbc .Resources .ToPdfObject ());};if _ddgbc .CropBox !=nil {_bfbca .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_ddgbc .CropBox .ToPdfObject ());};if _ddgbc .MediaBox !=nil {_bfbca .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_ddgbc .MediaBox .ToPdfObject ());};if _ddgbc .BleedBox !=nil {_bfbca .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_ddgbc .BleedBox .ToPdfObject ());};if _ddgbc .TrimBox !=nil {_bfbca .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_ddgbc .TrimBox .ToPdfObject ());};if _ddgbc .ArtBox !=nil {_bfbca .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_ddgbc .ArtBox .ToPdfObject ());};_bfbca .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_ddgbc .BoxColorInfo );_bfbca .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ddgbc .Contents );if _ddgbc .Rotate !=nil {_bfbca .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bd .MakeInteger (*_ddgbc .Rotate ));};_bfbca .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_ddgbc .Group );_bfbca .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_ddgbc .Thumb );_bfbca .SetIfNotNil ("\u0042",_ddgbc .B );_bfbca .SetIfNotNil ("\u0044\u0075\u0072",_ddgbc .Dur );_bfbca .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_ddgbc .Trans );_bfbca .SetIfNotNil ("\u0041\u0041",_ddgbc .AA );_bfbca .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ddgbc .Metadata );_bfbca .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_ddgbc .PieceInfo );_bfbca .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_ddgbc .StructParents );_bfbca .SetIfNotNil ("\u0049\u0044",_ddgbc .ID );_bfbca .SetIfNotNil ("\u0050\u005a",_ddgbc .PZ );_bfbca .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_ddgbc .SeparationInfo );_bfbca .SetIfNotNil ("\u0054\u0061\u0062\u0073",_ddgbc .Tabs );_bfbca .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_ddgbc .TemplateInstantiated );_bfbca .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_ddgbc .PresSteps );_bfbca .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_ddgbc .UserUnit );_bfbca .SetIfNotNil ("\u0056\u0050",_ddgbc .VP );if _ddgbc ._fgfgg !=nil {_aafe :=_bd .MakeArray ();for _ ,_efbcag :=range _ddgbc ._fgfgg {if _cbfd :=_efbcag .GetContext ();_cbfd !=nil {_aafe .Append (_cbfd .ToPdfObject ());}else {_aafe .Append (_efbcag .ToPdfObject ());};};if _aafe .Len ()> 0{_bfbca .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_aafe );};}else if _ddgbc .Annots !=nil {_bfbca .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_ddgbc .Annots );};return _bfbca ;};

// ToPdfObject implements interface PdfModel.
func (_badb *PdfAnnotationCircle )ToPdfObject ()_bd .PdfObject {_badb .PdfAnnotation .ToPdfObject ();_ggf :=_badb ._ega ;_abba :=_ggf .PdfObject .(*_bd .PdfObjectDictionary );_badb .PdfAnnotationMarkup .appendToPdfDictionary (_abba );_abba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));_abba .SetIfNotNil ("\u0042\u0053",_badb .BS );_abba .SetIfNotNil ("\u0049\u0043",_badb .IC );_abba .SetIfNotNil ("\u0042\u0045",_badb .BE );_abba .SetIfNotNil ("\u0052\u0044",_badb .RD );return _ggf ;};

// SetOCProperties sets the optional content properties.
func (_dbfee *PdfWriter )SetOCProperties (ocProperties _bd .PdfObject )error {_fedba :=_dbfee ._ccbfg ;if ocProperties !=nil {_aag .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");_fedba .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _dbfee .addObjects (ocProperties );};return nil ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_cagfg *PdfOutlineTreeNode )ToPdfObject ()_bd .PdfObject {return _cagfg .GetContext ().ToPdfObject ();};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ToPdfObject returns the PDF representation of the colorspace.
func (_eaff *PdfColorspaceSpecialSeparation )ToPdfObject ()_bd .PdfObject {_caff :=_bd .MakeArray (_bd .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_caff .Append (_eaff .ColorantName );_caff .Append (_eaff .AlternateSpace .ToPdfObject ());_caff .Append (_eaff .TintTransform .ToPdfObject ());if _eaff ._eaaa !=nil {_eaff ._eaaa .PdfObject =_caff ;return _eaff ._eaaa ;};return _caff ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_bgfag *PdfFont )ToPdfObject ()_bd .PdfObject {if _bgfag ._ddgba ==nil {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _bd .MakeNull ();};return _bgfag ._ddgba .ToPdfObject ();};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_dgabe *PdfPageResources )HasColorspaceByName (keyName _bd .PdfObjectName )bool {_edcc ,_ggbef :=_dgabe .GetColorspaces ();if _ggbef !=nil {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ggbef );return false ;};if _edcc ==nil {return false ;};_ ,_cgcab :=_edcc .Colorspaces [string (keyName )];return _cgcab ;};

// ToPdfObject implements interface PdfModel.
func (_cceg *PdfAnnotationUnderline )ToPdfObject ()_bd .PdfObject {_cceg .PdfAnnotation .ToPdfObject ();_bed :=_cceg ._ega ;_ddbd :=_bed .PdfObject .(*_bd .PdfObjectDictionary );_cceg .PdfAnnotationMarkup .appendToPdfDictionary (_ddbd );_ddbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));_ddbd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cceg .QuadPoints );return _bed ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _bd .PdfObject ;Popup *PdfAnnotationPopup ;CA _bd .PdfObject ;RC _bd .PdfObject ;CreationDate _bd .PdfObject ;IRT _bd .PdfObject ;Subj _bd .PdfObject ;RT _bd .PdfObject ;IT _bd .PdfObject ;ExData _bd .PdfObject ;};

// SetLocation sets the `Location` field of the signature.
func (_gcda *PdfSignature )SetLocation (location string ){_gcda .Location =_bd .MakeString (location )};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_gg :=NewPdfAction ();_cacg :=&PdfActionNamed {};_cacg .PdfAction =_gg ;_gg .SetContext (_cacg );return _cacg ;};

// SetImage updates XObject Image with new image data.
func (_gcagd *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_gcagd .Filter .UpdateParams (img .GetParamsDict ());_bdbgba ,_dcedda :=_gcagd .Filter .EncodeBytes (img .Data );if _dcedda !=nil {return _dcedda ;};_gcagd .Stream =_bdbgba ;_defge :=img .Width ;_gcagd .Width =&_defge ;_ecbee :=img .Height ;_gcagd .Height =&_ecbee ;_feefb :=img .BitsPerComponent ;_gcagd .BitsPerComponent =&_feefb ;if cs ==nil {if img .ColorComponents ==1{_gcagd .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_gcagd .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_gcagd .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ca .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_gcagd .ColorSpace =cs ;};return nil ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_eade :=NewPdfAnnotation ();_edgf :=&PdfAnnotationLink {};_edgf .PdfAnnotation =_eade ;_eade .SetContext (_edgf );return _edgf ;};func _bgaf (_gebgg *_bd .PdfObjectDictionary )(*PdfTilingPattern ,error ){_bbde :=&PdfTilingPattern {};_edcfa :=_gebgg .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _edcfa ==nil {_aag .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bccdb ,_fbdaa :=_edcfa .(*_bd .PdfObjectInteger );if !_fbdaa {_aag .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_edcfa );return nil ,_bd .ErrTypeError ;};_bbde .PaintType =_bccdb ;_edcfa =_gebgg .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _edcfa ==nil {_aag .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_dfcbg ,_fbdaa :=_edcfa .(*_bd .PdfObjectInteger );if !_fbdaa {_aag .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edcfa );return nil ,_bd .ErrTypeError ;};_bbde .TilingType =_dfcbg ;_edcfa =_gebgg .Get ("\u0042\u0042\u006f\u0078");if _edcfa ==nil {_aag .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_edcfa =_bd .TraceToDirectObject (_edcfa );_fcffgg ,_fbdaa :=_edcfa .(*_bd .PdfObjectArray );if !_fbdaa {_aag .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edcfa );return nil ,_bd .ErrTypeError ;};_eedb ,_aedgb :=NewPdfRectangle (*_fcffgg );if _aedgb !=nil {_aag .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_aedgb );return nil ,_aedgb ;};_bbde .BBox =_eedb ;_edcfa =_gebgg .Get ("\u0058\u0053\u0074e\u0070");if _edcfa ==nil {_aag .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fcegd ,_aedgb :=_bd .GetNumberAsFloat (_edcfa );if _aedgb !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_fcegd );return nil ,_aedgb ;};_bbde .XStep =_bd .MakeFloat (_fcegd );_edcfa =_gebgg .Get ("\u0059\u0053\u0074e\u0070");if _edcfa ==nil {_aag .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cbfba ,_aedgb :=_bd .GetNumberAsFloat (_edcfa );if _aedgb !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_cbfba );return nil ,_aedgb ;};_bbde .YStep =_bd .MakeFloat (_cbfba );_edcfa =_gebgg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _edcfa ==nil {_aag .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gebgg ,_fbdaa =_bd .TraceToDirectObject (_edcfa ).(*_bd .PdfObjectDictionary );if !_fbdaa {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_edcfa );};_dcbdb ,_aedgb :=NewPdfPageResourcesFromDict (_gebgg );if _aedgb !=nil {return nil ,_aedgb ;};_bbde .Resources =_dcbdb ;if _bacbea :=_gebgg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bacbea !=nil {_bbba ,_dbcac :=_bacbea .(*_bd .PdfObjectArray );if !_dbcac {_aag .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bacbea );return nil ,_bd .ErrTypeError ;};_bbde .Matrix =_bbba ;};return _bbde ,nil ;};

// String returns a string that describes `base`.
func (_bfbbd fontCommon )String ()string {return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_bfbbd .coreString ());};func (_afge *PdfAppender )mergeResources (_bbag ,_gffc _bd .PdfObject ,_gdgc map[_bd .PdfObjectName ]_bd .PdfObjectName )_bd .PdfObject {if _gffc ==nil &&_bbag ==nil {return nil ;};if _gffc ==nil {return _bbag ;};_adfa ,_eegd :=_bd .GetDict (_gffc );if !_eegd {return _bbag ;};if _bbag ==nil {_ddce :=_bd .MakeDict ();_ddce .Merge (_adfa );return _gffc ;};_fdeb ,_eegd :=_bd .GetDict (_bbag );if !_eegd {_aag .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");_fdeb =_bd .MakeDict ();};for _ ,_fbgc :=range _adfa .Keys (){if _ebgbc ,_aebc :=_gdgc [_fbgc ];_aebc {_fdeb .Set (_ebgbc ,_adfa .Get (_fbgc ));}else {_fdeb .Set (_fbgc ,_adfa .Get (_fbgc ));};};return _fdeb ;};func _edfde (_afed _bd .PdfObject ){_aag .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_afed ,_afed .String ());if _adafc ,_babff :=_afed .(*_bd .PdfObjectStream );_babff {_ecbgg ,_eddfg :=_bd .DecodeStream (_adafc );if _eddfg !=nil {_aag .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_eddfg );return ;};_aag .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_ecbgg );}else if _agag ,_gefgg :=_afed .(*_bd .PdfIndirectObject );_gefgg {_aag .Log .Debug ("\u0025\u0054\u0020%\u0076",_agag .PdfObject ,_agag .PdfObject );_aag .Log .Debug ("\u0025\u0073",_agag .PdfObject .String ());};};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};var _fdgg ="";func (_gaag *PdfAppender )addNewObject (_age _bd .PdfObject ){if _ ,_fdg :=_gaag ._bdae [_age ];!_fdg {_gaag ._bfad =append (_gaag ._bfad ,_age );_gaag ._bdae [_age ]=struct{}{};};};func (_bbabe *pdfFontSimple )baseFields ()*fontCommon {return &_bbabe .fontCommon };

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_dccec *XObjectImage )ToImage ()(*Image ,error ){_agbbc :=&Image {};if _dccec .Height ==nil {return nil ,_ca .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_agbbc .Height =*_dccec .Height ;if _dccec .Width ==nil {return nil ,_ca .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_agbbc .Width =*_dccec .Width ;if _dccec .BitsPerComponent ==nil {return nil ,_ca .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");};_agbbc .BitsPerComponent =*_dccec .BitsPerComponent ;_agbbc .ColorComponents =_dccec .ColorSpace .GetNumComponents ();_dccec ._abdfc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bd .MakeInteger (int64 (_agbbc .ColorComponents )));_begdg ,_gcbcg :=_bd .DecodeStream (_dccec ._abdfc );if _gcbcg !=nil {return nil ,_gcbcg ;};_agbbc .Data =_begdg ;if _dccec .Decode !=nil {_ggbff ,_aeed :=_dccec .Decode .(*_bd .PdfObjectArray );if !_aeed {_aag .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");return nil ,_ca .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_bacbd ,_ffdddc :=_ggbff .ToFloat64Array ();if _ffdddc !=nil {return nil ,_ffdddc ;};_agbbc ._fbadbga =_bacbd ;};return _agbbc ,nil ;};func _cdgg (_afbbe _bd .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_fdfa :=NewPdfColorspaceSpecialSeparation ();if _dfba ,_agca :=_afbbe .(*_bd .PdfIndirectObject );_agca {_fdfa ._eaaa =_dfba ;};_afbbe =_bd .TraceToDirectObject (_afbbe );_egfg ,_bfcb :=_afbbe .(*_bd .PdfObjectArray );if !_bfcb {return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _egfg .Len ()!=4{return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_afbbe =_egfg .Get (0);_dcegc ,_bfcb :=_afbbe .(*_bd .PdfObjectName );if !_bfcb {return nil ,_c .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_dcegc !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_c .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};_afbbe =_egfg .Get (1);_dcegc ,_bfcb =_afbbe .(*_bd .PdfObjectName );if !_bfcb {return nil ,_c .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");};_fdfa .ColorantName =_dcegc ;_afbbe =_egfg .Get (2);_afec ,_eebc :=NewPdfColorspaceFromPdfObject (_afbbe );if _eebc !=nil {return nil ,_eebc ;};_fdfa .AlternateSpace =_afec ;_eggd ,_eebc :=_cgdeb (_egfg .Get (3));if _eebc !=nil {return nil ,_eebc ;};_fdfa .TintTransform =_eggd ;return _fdfa ,nil ;};func (_edcf *PdfReader )newPdfAnnotationStrikeOut (_aaa *_bd .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_fbf :=PdfAnnotationStrikeOut {};_abag ,_egfa :=_edcf .newPdfAnnotationMarkupFromDict (_aaa );if _egfa !=nil {return nil ,_egfa ;};_fbf .PdfAnnotationMarkup =_abag ;_fbf .QuadPoints =_aaa .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fbf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dbd *PdfActionSubmitForm )ToPdfObject ()_bd .PdfObject {_dbd .PdfAction .ToPdfObject ();_aed :=_dbd ._ccf ;_cdc :=_aed .PdfObject .(*_bd .PdfObjectDictionary );_cdc .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeSubmitForm )));if _dbd .F !=nil {_cdc .Set ("\u0046",_dbd .F .ToPdfObject ());};_cdc .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_dbd .Fields );_cdc .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_dbd .Flags );return _aed ;};type pdfCIDFontType0 struct{fontCommon ;_dgcf *_bd .PdfIndirectObject ;_dfbgc _ff .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_bd .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bd .PdfObject ;W _bd .PdfObject ;DW2 _bd .PdfObject ;W2 _bd .PdfObject ;_abecd map[_ff .CharCode ]float64 ;_ffae float64 ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_cfeg :=NewPdfAnnotation ();_aceg :=&PdfAnnotationProjection {};_aceg .PdfAnnotation =_cfeg ;_aceg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfeg .SetContext (_aceg );return _aceg ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_addb :=NewPdfAnnotation ();_adde :=&PdfAnnotationFileAttachment {};_adde .PdfAnnotation =_addb ;_adde .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_addb .SetContext (_adde );return _adde ;};func (_cafc *PdfReader )newPdfAnnotationInkFromDict (_cca *_bd .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_caba :=PdfAnnotationInk {};_eaf ,_egcd :=_cafc .newPdfAnnotationMarkupFromDict (_cca );if _egcd !=nil {return nil ,_egcd ;};_caba .PdfAnnotationMarkup =_eaf ;_caba .InkList =_cca .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_caba .BS =_cca .Get ("\u0042\u0053");return &_caba ,nil ;};func _gbfb ()*modelManager {_ebcgd :=modelManager {};_ebcgd ._afac =map[PdfModel ]_bd .PdfObject {};_ebcgd ._eded =map[_bd .PdfObject ]PdfModel {};return &_ebcgd ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_ccfdb *PdfPageResources )GetXObjectImageByName (keyName _bd .PdfObjectName )(*XObjectImage ,error ){_edegf ,_eeaad :=_ccfdb .GetXObjectByName (keyName );if _edegf ==nil {return nil ,nil ;};if _eeaad !=XObjectTypeImage {return nil ,_ca .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");};_efced ,_edbda :=NewXObjectImageFromStream (_edegf );if _edbda !=nil {return nil ,_edbda ;};return _efced ,nil ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _bd .PdfObject ;Open _bd .PdfObject ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};func (_bcfgb fontCommon )fontFlags ()int {if _bcfgb ._dcgda ==nil {return 0;};return _bcfgb ._dcgda ._eeec ;};func (_fgegg *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _ggebg []*PdfFieldSignature ;for _ ,_aaba :=range _fgegg .AllFields (){switch _bcca :=_aaba .GetContext ().(type ){case *PdfFieldSignature :_dcgb :=_bcca ;_ggebg =append (_ggebg ,_dcgb );};};return _ggebg ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_ffd :=NewPdfAction ();_ag :=&PdfActionLaunch {};_ag .PdfAction =_ffd ;_ffd .SetContext (_ag );return _ag ;};

// ToPdfObject returns the PDF representation of the function.
func (_fbfga *PdfFunctionType0 )ToPdfObject ()_bd .PdfObject {if _fbfga ._ffbdc ==nil {_fbfga ._ffbdc =&_bd .PdfObjectStream {};};_gebaf :=_bd .MakeDict ();_gebaf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bd .MakeInteger (0));_gefb :=&_bd .PdfObjectArray {};for _ ,_fgeea :=range _fbfga .Domain {_gefb .Append (_bd .MakeFloat (_fgeea ));};_gebaf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gefb );_gdfbf :=&_bd .PdfObjectArray {};for _ ,_ebef :=range _fbfga .Range {_gdfbf .Append (_bd .MakeFloat (_ebef ));};_gebaf .Set ("\u0052\u0061\u006eg\u0065",_gdfbf );_bbeeg :=&_bd .PdfObjectArray {};for _ ,_dedgd :=range _fbfga .Size {_bbeeg .Append (_bd .MakeInteger (int64 (_dedgd )));};_gebaf .Set ("\u0053\u0069\u007a\u0065",_bbeeg );_gebaf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_bd .MakeInteger (int64 (_fbfga .BitsPerSample )));if _fbfga .Order !=1{_gebaf .Set ("\u004f\u0072\u0064e\u0072",_bd .MakeInteger (int64 (_fbfga .Order )));};_gebaf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bd .MakeInteger (int64 (len (_fbfga ._bedcf ))));_fbfga ._ffbdc .Stream =_fbfga ._bedcf ;_fbfga ._ffbdc .PdfObjectDictionary =_gebaf ;return _fbfga ._ffbdc ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_bcgeb *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_bd .PdfObject )(PdfColor ,error ){if _bcgeb .Alternate ==nil {if _bcgeb .N ==1{_eaga :=NewPdfColorspaceDeviceGray ();return _eaga .ColorFromPdfObjects (objects );}else if _bcgeb .N ==3{_debcf :=NewPdfColorspaceDeviceRGB ();return _debcf .ColorFromPdfObjects (objects );}else if _bcgeb .N ==4{_dbfa :=NewPdfColorspaceDeviceCMYK ();return _dbfa .ColorFromPdfObjects (objects );}else {return nil ,_ca .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _bcgeb .Alternate .ColorFromPdfObjects (objects );};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_ebgd *PdfAppender )UpdateObject (obj _bd .PdfObject ){_ebgd .replaceObject (obj ,obj );if _ ,_badc :=_ebgd ._bdae [obj ];!_badc {_ebgd ._bfad =append (_ebgd ._bfad ,obj );_ebgd ._bdae [obj ]=struct{}{};};};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_dbgca *PdfPageResources )GetXObjectFormByName (keyName _bd .PdfObjectName )(*XObjectForm ,error ){_ccede ,_ffcfg :=_dbgca .GetXObjectByName (keyName );if _ccede ==nil {return nil ,nil ;};if _ffcfg !=XObjectTypeForm {return nil ,_ca .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");};_ccccbb ,_ggegb :=NewXObjectFormFromStream (_ccede );if _ggegb !=nil {return nil ,_ggegb ;};return _ccccbb ,nil ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_bd .PdfObjectStream )(*XObjectImage ,error ){_fgbdcf :=&XObjectImage {};_fgbdcf ._abdfc =stream ;_addbgg :=*(stream .PdfObjectDictionary );_gbacc ,_ebbdae :=_bd .NewEncoderFromStream (stream );if _ebbdae !=nil {return nil ,_ebbdae ;};_fgbdcf .Filter =_gbacc ;if _ggccg :=_bd .TraceToDirectObject (_addbgg .Get ("\u0057\u0069\u0064t\u0068"));_ggccg !=nil {_afdee ,_bfgce :=_ggccg .(*_bd .PdfObjectInteger );if !_bfgce {return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");};_geeac :=int64 (*_afdee );_fgbdcf .Width =&_geeac ;}else {return nil ,_ca .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _cegca :=_bd .TraceToDirectObject (_addbgg .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_cegca !=nil {_cfggg ,_eaaad :=_cegca .(*_bd .PdfObjectInteger );if !_eaaad {return nil ,_ca .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_egaag :=int64 (*_cfggg );_fgbdcf .Height =&_egaag ;}else {return nil ,_ca .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _ggebd :=_bd .TraceToDirectObject (_addbgg .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_ggebd !=nil {_efgfc ,_dfaec :=NewPdfColorspaceFromPdfObject (_ggebd );if _dfaec !=nil {return nil ,_dfaec ;};_fgbdcf .ColorSpace =_efgfc ;}else {_aag .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");_fgbdcf .ColorSpace =NewPdfColorspaceDeviceGray ();};if _fcbg :=_bd .TraceToDirectObject (_addbgg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_fcbg !=nil {_aaaca ,_efdfe :=_fcbg .(*_bd .PdfObjectInteger );if !_efdfe {return nil ,_ca .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_gbef :=int64 (*_aaaca );_fgbdcf .BitsPerComponent =&_gbef ;};_fgbdcf .Intent =_addbgg .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");_fgbdcf .ImageMask =_addbgg .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_fgbdcf .Mask =_addbgg .Get ("\u004d\u0061\u0073\u006b");_fgbdcf .Decode =_addbgg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_fgbdcf .Interpolate =_addbgg .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");_fgbdcf .Alternatives =_addbgg .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_fgbdcf .SMask =_addbgg .Get ("\u0053\u004d\u0061s\u006b");_fgbdcf .SMaskInData =_addbgg .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");_fgbdcf .Matte =_addbgg .Get ("\u004d\u0061\u0074t\u0065");_fgbdcf .Name =_addbgg .Get ("\u004e\u0061\u006d\u0065");_fgbdcf .StructParent =_addbgg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_fgbdcf .ID =_addbgg .Get ("\u0049\u0044");_fgbdcf .OPI =_addbgg .Get ("\u004f\u0050\u0049");_fgbdcf .Metadata =_addbgg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_fgbdcf .OC =_addbgg .Get ("\u004f\u0043");_fgbdcf .Stream =stream .Stream ;return _fgbdcf ,nil ;};func _efccg ()_b .Time {return _eeedd };

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _bd .PdfObject ;MK _bd .PdfObject ;A _bd .PdfObject ;AA _bd .PdfObject ;BS _bd .PdfObject ;Parent _bd .PdfObject ;_deca *PdfField ;_gbae bool ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_cda *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_bdbec :=_caa .NewReader (img .getBase ());_dabb :=_adg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_cda .AlternateSpace .GetNumComponents (),nil ,img ._dcbb ,nil );_cfg :=_caa .NewWriter (_dabb );_bbaeg :=_cg .Pow (2,float64 (img .BitsPerComponent ))-1;_aag .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");_aag .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_cda .TintTransform );_fgbag :=_cda .AlternateSpace .DecodeArray ();var (_aadc uint32 ;_bfbfb error ;);for {_aadc ,_bfbfb =_bdbec .ReadSample ();if _bfbfb ==_eb .EOF {break ;};if _bfbfb !=nil {return img ,_bfbfb ;};_dcbd :=float64 (_aadc )/_bbaeg ;_ecga ,_fgae :=_cda .TintTransform .Evaluate ([]float64 {_dcbd });if _fgae !=nil {return img ,_fgae ;};for _dbacg ,_cgbc :=range _ecga {_cddf :=_adg .LinearInterpolate (_cgbc ,_fgbag [_dbacg *2],_fgbag [_dbacg *2+1],0,1);if _fgae =_cfg .WriteSample (uint32 (_cddf *_bbaeg ));_fgae !=nil {return img ,_fgae ;};};};return _cda .AlternateSpace .ImageToRGB (_dcae (&_dabb ));};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_eage *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_cgdgd :=_eage .actualFont ();if _cgdgd ==nil {_aag .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_eage ._ddgba );return _gb .CharMetrics {},false ;};if _fdbe ,_acbbeb :=_cgdgd .GetRuneMetrics (r );_acbbeb {return _fdbe ,true ;};if _daec ,_gfdg :=_eage .GetFontDescriptor ();_gfdg ==nil &&_daec !=nil {return _gb .CharMetrics {Wx :_daec ._cgcd },true ;};_aag .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eage );return _gb .CharMetrics {},false ;};

// ToPdfObject implements interface PdfModel.
func (_gcd *PdfAnnotationSound )ToPdfObject ()_bd .PdfObject {_gcd .PdfAnnotation .ToPdfObject ();_ffc :=_gcd ._ega ;_fee :=_ffc .PdfObject .(*_bd .PdfObjectDictionary );_gcd .PdfAnnotationMarkup .appendToPdfDictionary (_fee );_fee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0053\u006f\u0075n\u0064"));_fee .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_gcd .Sound );_fee .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gcd .Name );return _ffc ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _bd .PdfObject ;IsMap _bd .PdfObject ;};

// GetNumComponents returns the number of color components.
func (_dbad *PdfColorspaceICCBased )GetNumComponents ()int {return _dbad .N };

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _bd .PdfObject ;FS _bd .PdfObject ;F _bd .PdfObject ;UF _bd .PdfObject ;DOS _bd .PdfObject ;Mac _bd .PdfObject ;Unix _bd .PdfObject ;ID _bd .PdfObject ;V _bd .PdfObject ;EF _bd .PdfObject ;RF _bd .PdfObject ;Desc _bd .PdfObject ;CI _bd .PdfObject ;_bdea _bd .PdfObject ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _bd .PdfObjectArray )(*PdfRectangle ,error ){_bbagf :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");};var _fada error ;_bbagf .Llx ,_fada =_bd .GetNumberAsFloat (arr .Get (0));if _fada !=nil {return nil ,_fada ;};_bbagf .Lly ,_fada =_bd .GetNumberAsFloat (arr .Get (1));if _fada !=nil {return nil ,_fada ;};_bbagf .Urx ,_fada =_bd .GetNumberAsFloat (arr .Get (2));if _fada !=nil {return nil ,_fada ;};_bbagf .Ury ,_fada =_bd .GetNumberAsFloat (arr .Get (3));if _fada !=nil {return nil ,_fada ;};return &_bbagf ,nil ;};func (_cadfc *PdfWriter )copyObject (_ecfad _bd .PdfObject ,_bggaeb map[_bd .PdfObject ]_bd .PdfObject ,_ggggf map[_bd .PdfObject ]struct{},_dfbab bool )_bd .PdfObject {_defbb :=!_cadfc ._dfbe &&_ggggf !=nil ;if _agdfe ,_dffcd :=_bggaeb [_ecfad ];_dffcd {if _defbb &&!_dfbab {delete (_ggggf ,_ecfad );};return _agdfe ;};_bacd :=_ecfad ;switch _fdbgb :=_ecfad .(type ){case *_bd .PdfObjectArray :_adggb :=_bd .MakeArray ();_bacd =_adggb ;_bggaeb [_ecfad ]=_bacd ;for _ ,_eeece :=range _fdbgb .Elements (){_adggb .Append (_cadfc .copyObject (_eeece ,_bggaeb ,_ggggf ,_dfbab ));};case *_bd .PdfObjectStreams :_bafed :=&_bd .PdfObjectStreams {PdfObjectReference :_fdbgb .PdfObjectReference };_bacd =_bafed ;_bggaeb [_ecfad ]=_bacd ;for _ ,_fgfc :=range _fdbgb .Elements (){_bafed .Append (_cadfc .copyObject (_fgfc ,_bggaeb ,_ggggf ,_dfbab ));};case *_bd .PdfObjectStream :_gfgfe :=&_bd .PdfObjectStream {Stream :_fdbgb .Stream ,PdfObjectReference :_fdbgb .PdfObjectReference };_bacd =_gfgfe ;_bggaeb [_ecfad ]=_bacd ;_gfgfe .PdfObjectDictionary =_cadfc .copyObject (_fdbgb .PdfObjectDictionary ,_bggaeb ,_ggggf ,_dfbab ).(*_bd .PdfObjectDictionary );case *_bd .PdfObjectDictionary :var _eaddg bool ;if _defbb &&!_dfbab {if _bcggfc ,_ :=_bd .GetNameVal (_fdbgb .Get ("\u0054\u0079\u0070\u0065"));_bcggfc =="\u0050\u0061\u0067\u0065"{_ ,_dcddd :=_cadfc ._efegf [_fdbgb ];_dfbab =!_dcddd ;_eaddg =_dfbab ;};};_eadcd :=_bd .MakeDict ();_bacd =_eadcd ;_bggaeb [_ecfad ]=_bacd ;for _ ,_beefc :=range _fdbgb .Keys (){_eadcd .Set (_beefc ,_cadfc .copyObject (_fdbgb .Get (_beefc ),_bggaeb ,_ggggf ,_dfbab ));};if _eaddg {_bacd =_bd .MakeNull ();_dfbab =false ;};case *_bd .PdfIndirectObject :_gddac :=&_bd .PdfIndirectObject {PdfObjectReference :_fdbgb .PdfObjectReference };_bacd =_gddac ;_bggaeb [_ecfad ]=_bacd ;_gddac .PdfObject =_cadfc .copyObject (_fdbgb .PdfObject ,_bggaeb ,_ggggf ,_dfbab );case *_bd .PdfObjectString :_cefbcb :=*_fdbgb ;_bacd =&_cefbcb ;_bggaeb [_ecfad ]=_bacd ;case *_bd .PdfObjectName :_dacgf :=_bd .PdfObjectName (*_fdbgb );_bacd =&_dacgf ;_bggaeb [_ecfad ]=_bacd ;case *_bd .PdfObjectNull :_bacd =_bd .MakeNull ();_bggaeb [_ecfad ]=_bacd ;case *_bd .PdfObjectInteger :_cbcbe :=_bd .PdfObjectInteger (*_fdbgb );_bacd =&_cbcbe ;_bggaeb [_ecfad ]=_bacd ;case *_bd .PdfObjectReference :_dgcgec :=_bd .PdfObjectReference (*_fdbgb );_bacd =&_dgcgec ;_bggaeb [_ecfad ]=_bacd ;case *_bd .PdfObjectFloat :_dggea :=_bd .PdfObjectFloat (*_fdbgb );_bacd =&_dggea ;_bggaeb [_ecfad ]=_bacd ;case *_bd .PdfObjectBool :_caecb :=_bd .PdfObjectBool (*_fdbgb );_bacd =&_caecb ;_bggaeb [_ecfad ]=_bacd ;case *pdfSignDictionary :_agff :=&pdfSignDictionary {PdfObjectDictionary :_bd .MakeDict (),_gfga :_fdbgb ._gfga ,_gacb :_fdbgb ._gacb };_bacd =_agff ;_bggaeb [_ecfad ]=_bacd ;for _ ,_abebc :=range _fdbgb .Keys (){_agff .Set (_abebc ,_cadfc .copyObject (_fdbgb .Get (_abebc ),_bggaeb ,_ggggf ,_dfbab ));};default:_aag .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_ecfad );};if _defbb &&_dfbab {_ggggf [_ecfad ]=struct{}{};};return _bacd ;};

// GetContentStreams returns the content stream as an array of strings.
func (_ebada *PdfPage )GetContentStreams ()([]string ,error ){if _ebada .Contents ==nil {return nil ,nil ;};_aeabf :=_bd .TraceToDirectObject (_ebada .Contents );var _bgdbe []_bd .PdfObject ;if _cacfe ,_bbfgc :=_aeabf .(*_bd .PdfObjectArray );_bbfgc {_bgdbe =_cacfe .Elements ();}else {_bgdbe =[]_bd .PdfObject {_aeabf };};var _fcge []string ;for _ ,_ddeeg :=range _bgdbe {_gaeb ,_feaa :=_ffdcf (_ddeeg );if _feaa !=nil {return nil ,_feaa ;};_fcge =append (_fcge ,_gaeb );};return _fcge ,nil ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_gfgcg *PdfPattern )IsTiling ()bool {return _gfgcg .PatternType ==1};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// GetBorderWidth returns the border style's width.
func (_egfd *PdfBorderStyle )GetBorderWidth ()float64 {if _egfd .W ==nil {return 1;};return *_egfd .W ;};func (_dbcd *PdfAppender )updateObjectsDeep (_ggef _bd .PdfObject ,_gbg map[_bd .PdfObject ]struct{}){if _gbg ==nil {_gbg =map[_bd .PdfObject ]struct{}{};};if _ ,_effd :=_gbg [_ggef ];_effd ||_ggef ==nil {return ;};_gbg [_ggef ]=struct{}{};_bfcc :=_bd .ResolveReferencesDeep (_ggef ,_dbcd ._gddf );if _bfcc !=nil {_aag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfcc );};switch _bgc :=_ggef .(type ){case *_bd .PdfIndirectObject :switch {case _bgc .GetParser ()==_dbcd ._eege ._efgga :return ;case _bgc .GetParser ()==_dbcd .Reader ._efgga :_bfbga ,_ :=_dbcd ._eege .GetIndirectObjectByNumber (int (_bgc .ObjectNumber ));_feag ,_eddg :=_bfbga .(*_bd .PdfIndirectObject );if _eddg &&_feag !=nil {if _feag .PdfObject !=_bgc .PdfObject &&_feag .PdfObject .WriteString ()!=_bgc .PdfObject .WriteString (){_dbcd .addNewObject (_ggef );_dbcd ._aab [_ggef ]=_bgc .ObjectNumber ;};};default:_dbcd .addNewObject (_ggef );};_dbcd .updateObjectsDeep (_bgc .PdfObject ,_gbg );case *_bd .PdfObjectArray :for _ ,_bged :=range _bgc .Elements (){_dbcd .updateObjectsDeep (_bged ,_gbg );};case *_bd .PdfObjectDictionary :for _ ,_agba :=range _bgc .Keys (){_dbcd .updateObjectsDeep (_bgc .Get (_agba ),_gbg );};case *_bd .PdfObjectStreams :if _bgc .GetParser ()!=_dbcd ._eege ._efgga {for _ ,_ceed :=range _bgc .Elements (){_dbcd .updateObjectsDeep (_ceed ,_gbg );};};case *_bd .PdfObjectStream :switch {case _bgc .GetParser ()==_dbcd ._eege ._efgga :return ;case _bgc .GetParser ()==_dbcd .Reader ._efgga :if _afcb ,_gagd :=_dbcd ._eege ._efgga .LookupByReference (_bgc .PdfObjectReference );_gagd ==nil {var _bgf bool ;if _ddgb ,_bgdd :=_bd .GetStream (_afcb );_bgdd &&_af .Equal (_ddgb .Stream ,_bgc .Stream ){_bgf =true ;};if _bdff ,_efdf :=_bd .GetDict (_afcb );_bgf &&_efdf {_bgf =_bdff .WriteString ()==_bgc .PdfObjectDictionary .WriteString ();};if _bgf {return ;};};if _bgc .ObjectNumber !=0{_dbcd ._aab [_ggef ]=_bgc .ObjectNumber ;};default:if _ ,_fcfa :=_dbcd ._bdae [_ggef ];!_fcfa {_dbcd .addNewObject (_ggef );};};_dbcd .updateObjectsDeep (_bgc .PdfObjectDictionary ,_gbg );};};func (_fdf *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_afbe *PdfWriter )AddPage (page *PdfPage )error {_ffdea (page );_ebdbf :=page .ToPdfObject ();_aag .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");_aag .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_ebdbf );_afccc ,_ddgf :=_bd .GetIndirect (_ebdbf );if !_ddgf {return _ca .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");};_aag .Log .Trace ("\u0025\u0073",_afccc );_aag .Log .Trace ("\u0025\u0073",_afccc .PdfObject );_abcc ,_ddgf :=_bd .GetDict (_afccc .PdfObject );if !_ddgf {return _ca .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_dedef ,_ddgf :=_bd .GetName (_abcc .Get ("\u0054\u0079\u0070\u0065"));if !_ddgf {return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_abcc .Get ("\u0054\u0079\u0070\u0065"));};if _dedef .String ()!="\u0050\u0061\u0067\u0065"{return _ca .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_debda :=[]_bd .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};_agagg ,_fgaec :=_bd .GetIndirect (_abcc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_aag .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_abcc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_fgaec );for _fgaec {_aag .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_agagg );_edebc ,_cggdd :=_bd .GetDict (_agagg .PdfObject );if !_cggdd {return _ca .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_afaf :=range _debda {_aag .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_afaf );if _abcc .Get (_afaf )!=nil {_aag .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _afbdd :=_edebc .Get (_afaf );_afbdd !=nil {_aag .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_afaf );_abcc .Set (_afaf ,_afbdd );};};_agagg ,_fgaec =_bd .GetIndirect (_edebc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_aag .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_edebc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_aag .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");_abcc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_afbe ._eegaf );_afccc .PdfObject =_abcc ;_abcf ,_ddgf :=_bd .GetDict (_afbe ._eegaf .PdfObject );if !_ddgf {return _ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_dbcfc ,_ddgf :=_bd .GetArray (_abcf .Get ("\u004b\u0069\u0064\u0073"));if !_ddgf {return _ca .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_dbcfc .Append (_afccc );_afbe ._efegf [_abcc ]=struct{}{};_bbebc ,_ddgf :=_bd .GetInt (_abcf .Get ("\u0043\u006f\u0075n\u0074"));if !_ddgf {return _ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};*_bbebc =*_bbebc +1;_afbe .addObject (_afccc );_ggebac :=_afbe .addObjects (_abcc );if _ggebac !=nil {return _ggebac ;};return nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_febe *PdfFieldChoice )ToPdfObject ()_bd .PdfObject {_febe .PdfField .ToPdfObject ();_abggc :=_febe ._gcacg ;_dfag :=_abggc .PdfObject .(*_bd .PdfObjectDictionary );_dfag .Set ("\u0046\u0054",_bd .MakeName ("\u0043\u0068"));if _febe .Opt !=nil {_dfag .Set ("\u004f\u0070\u0074",_febe .Opt );};if _febe .TI !=nil {_dfag .Set ("\u0054\u0049",_febe .TI );};if _febe .I !=nil {_dfag .Set ("\u0049",_febe .I );};return _abggc ;};func (_gcgfb PdfFont )actualFont ()pdfFont {if _gcgfb ._ddgba ==nil {_aag .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gcgfb );};return _gcgfb ._ddgba ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_fagf int64 ;_adfc int64 ;_gbfe int64 ;_beeg int64 ;_ebfbe int64 ;_dfecg int64 ;_ggdf byte ;_fccfce int64 ;_ccegg int64 ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_babb *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_bd .PdfObject )(PdfColor ,error ){if len (objects )!=_babb .GetNumComponents (){return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcdd ,_aecc :=_bd .GetNumbersAsFloat (objects );if _aecc !=nil {return nil ,_aecc ;};return _babb .ColorFromFloats (_dcdd );};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bd .PdfObject ;};func (_eaebg *PdfWriter )hasObject (_bedda _bd .PdfObject )bool {_ ,_geeee :=_eaebg ._egeab [_bedda ];return _geeee ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fcgcb pdfCIDFontType2 )GetCharMetrics (code _ff .CharCode )(_gb .CharMetrics ,bool ){if _cgeeb ,_cdbb :=_fcgcb ._gbfg [code ];_cdbb {return _gb .CharMetrics {Wx :float64 (_cgeeb )},true ;};_dgdda :=rune (code );_bgdb ,_bgbc :=_fcgcb ._cgece [_dgdda ];if !_bgbc {_bgdb =int (_fcgcb ._cdfge );};return _gb .CharMetrics {Wx :float64 (_bgdb )},true ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_eadb :=PdfPage {};_eadb ._cedce =_bd .MakeDict ();_eadb .Resources =NewPdfPageResources ();_eagaa :=_bd .PdfIndirectObject {};_eagaa .PdfObject =_eadb ._cedce ;_eadb ._cbfbd =&_eagaa ;return &_eadb ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_bfdaa *PdfPage )SetContentStreams (cStreams []string ,encoder _bd .StreamEncoder )error {if len (cStreams )==0{_bfdaa .Contents =nil ;return nil ;};if encoder ==nil {encoder =_bd .NewRawEncoder ();};var _bgebg []*_bd .PdfObjectStream ;for _ ,_acce :=range cStreams {_gffgc :=&_bd .PdfObjectStream {};_gdff :=encoder .MakeStreamDict ();_bagad ,_abdcc :=encoder .EncodeBytes ([]byte (_acce ));if _abdcc !=nil {return _abdcc ;};_gdff .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bd .MakeInteger (int64 (len (_bagad ))));_gffgc .PdfObjectDictionary =_gdff ;_gffgc .Stream =[]byte (_bagad );_bgebg =append (_bgebg ,_gffgc );};if len (_bgebg )==1{_bfdaa .Contents =_bgebg [0];}else {_dfecd :=_bd .MakeArray ();for _ ,_bgged :=range _bgebg {_dfecd .Append (_bgged );};_bfdaa .Contents =_dfecd ;};return nil ;};func (_eaebcg *PdfReader )loadStructure ()error {if _eaebcg ._efgga .GetCrypter ()!=nil &&!_eaebcg ._efgga .IsAuthenticated (){return _c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_aade :=_eaebcg ._efgga .GetTrailer ();if _aade ==nil {return _c .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_gbcda ,_cfee :=_aade .Get ("\u0052\u006f\u006f\u0074").(*_bd .PdfObjectReference );if !_cfee {return _c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_aade );};_cbfdd ,_bedce :=_eaebcg ._efgga .LookupByReference (*_gbcda );if _bedce !=nil {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bedce );return _bedce ;};_aceaf ,_cfee :=_cbfdd .(*_bd .PdfIndirectObject );if !_cfee {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_cbfdd ,*_aade );return _ca .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_bafgc ,_cfee :=(*_aceaf ).PdfObject .(*_bd .PdfObjectDictionary );if !_cfee {_aag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_aceaf .PdfObject );return _ca .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_aag .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bafgc );_eedag ,_cfee :=_bafgc .Get ("\u0050\u0061\u0067e\u0073").(*_bd .PdfObjectReference );if !_cfee {return _ca .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_gcee ,_bedce :=_eaebcg ._efgga .LookupByReference (*_eedag );if _bedce !=nil {_aag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _bedce ;};_badd ,_cfee :=_gcee .(*_bd .PdfIndirectObject );if !_cfee {_aag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");_aag .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_badd );return _ca .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_dcgeg ,_cfee :=_badd .PdfObject .(*_bd .PdfObjectDictionary );if !_cfee {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_badd );return _ca .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_dbedg ,_cfee :=_bd .GetInt (_dcgeg .Get ("\u0043\u006f\u0075n\u0074"));if !_cfee {_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return _ca .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_cfee =_bd .GetName (_dcgeg .Get ("\u0054\u0079\u0070\u0065"));!_cfee {_aag .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");_dcgeg .Set ("\u0054\u0079\u0070\u0065",_bd .MakeName ("\u0050\u0061\u0067e\u0073"));};_eaebcg ._bgede =_gbcda ;_eaebcg ._cebfa =_bafgc ;_eaebcg ._aegdf =_dcgeg ;_eaebcg ._cbca =_badd ;_eaebcg ._fdafa =int (*_dbedg );_eaebcg ._eefe =[]*_bd .PdfIndirectObject {};_edfdd :=map[_bd .PdfObject ]struct{}{};_bedce =_eaebcg .buildPageList (_badd ,nil ,_edfdd );if _bedce !=nil {return _bedce ;};_aag .Log .Trace ("\u002d\u002d\u002d");_aag .Log .Trace ("\u0054\u004f\u0043");_aag .Log .Trace ("\u0050\u0061\u0067e\u0073");_aag .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_eaebcg ._eefe ),_eaebcg ._eefe );_eaebcg ._afgegb ,_bedce =_eaebcg .loadOutlines ();if _bedce !=nil {_aag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_bedce );return _bedce ;};_eaebcg .AcroForm ,_bedce =_eaebcg .loadForms ();if _bedce !=nil {return _bedce ;};return nil ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_eefd *modelManager )GetPrimitiveFromModel (model PdfModel )_bd .PdfObject {_adcbd ,_dgfgf :=_eefd ._afac [model ];if !_dgfgf {return nil ;};return _adcbd ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;func _acfcc (_dafaa *_bd .PdfObjectArray )(float64 ,error ){_cbegd ,_egfga :=_dafaa .ToFloat64Array ();if _egfga !=nil {_aag .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dafaa ,_egfga );};switch len (_cbegd ){case 1:return _cbegd [0],nil ;case 3:_agefe :=PdfColorspaceDeviceRGB {};_gbeag ,_cfaee :=_agefe .ColorFromFloats (_cbegd );if _cfaee !=nil {return 0.0,_cfaee ;};return _gbeag .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_dddcd :=PdfColorspaceDeviceCMYK {};_gfgb ,_dccag :=_dddcd .ColorFromFloats (_cbegd );if _dccag !=nil {return 0.0,_dccag ;};_bedcd ,_dccag :=_dddcd .ColorToRGB (_gfgb .(*PdfColorDeviceCMYK ));if _dccag !=nil {return 0.0,_dccag ;};return _bedcd .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_egfga =_ca .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_aag .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dafaa ,_egfga );return 0.0,_egfga ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_bd .PdfObjectStream )(*XObjectForm ,error ){_gegcbf :=&XObjectForm {};_gegcbf ._cccga =stream ;_edef :=*(stream .PdfObjectDictionary );_cgffc ,_cgaba :=_bd .NewEncoderFromStream (stream );if _cgaba !=nil {return nil ,_cgaba ;};_gegcbf .Filter =_cgffc ;if _ecda :=_edef .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_ecda !=nil {_afecb ,_beddc :=_ecda .(*_bd .PdfObjectName );if !_beddc {return nil ,_ca .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if *_afecb !="\u0046\u006f\u0072\u006d"{_aag .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ca .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");};};if _bded :=_edef .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_bded !=nil {_gegcbf .FormType =_bded ;};if _dcdde :=_edef .Get ("\u0042\u0042\u006f\u0078");_dcdde !=nil {_gegcbf .BBox =_dcdde ;};if _gceca :=_edef .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gceca !=nil {_gegcbf .Matrix =_gceca ;};if _gabec :=_edef .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gabec !=nil {_gabec =_bd .TraceToDirectObject (_gabec );_aaadf ,_ffag :=_gabec .(*_bd .PdfObjectDictionary );if !_ffag {_aag .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_bd .ErrTypeError ;};_aaead ,_gdcbg :=NewPdfPageResourcesFromDict (_aaadf );if _gdcbg !=nil {_aag .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");return nil ,_gdcbg ;};_gegcbf .Resources =_aaead ;_aag .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_gegcbf .Resources );};_gegcbf .Group =_edef .Get ("\u0047\u0072\u006fu\u0070");_gegcbf .Ref =_edef .Get ("\u0052\u0065\u0066");_gegcbf .MetaData =_edef .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_gegcbf .PieceInfo =_edef .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_gegcbf .LastModified =_edef .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_gegcbf .StructParent =_edef .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_gegcbf .StructParents =_edef .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_gegcbf .OPI =_edef .Get ("\u004f\u0050\u0049");_gegcbf .OC =_edef .Get ("\u004f\u0043");_gegcbf .Name =_edef .Get ("\u004e\u0061\u006d\u0065");_gegcbf .Stream =stream .Stream ;return _gegcbf ,nil ;};func (_bagc *PdfReader )traverseObjectData (_eggea _bd .PdfObject )error {return _bd .ResolveReferencesDeep (_eggea ,_bagc ._fbcccg );};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_ff .SimpleEncoder ,error ){_cddgf ,_dbeaae :=_ggce (basefont );if _dbeaae !=nil {return nil ,nil ,_dbeaae ;};_fgbgd ,_bfbed :=_cddgf .Encoder ().(_ff .SimpleEncoder );if !_bfbed {return nil ,nil ,_c .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_cddgf .Encoder ());};_adcf :=make (map[rune ]_ff .GlyphName );for _ddfg :=range alphabet {if _ ,_begd :=_fgbgd .RuneToCharcode (_ddfg );!_begd {_ ,_dfee :=_cddgf ._efbb [_ddfg ];if !_dfee {_aag .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_ddfg ,_ddfg );continue ;};_gfbca ,_dfee :=_ff .RuneToGlyph (_ddfg );if !_dfee {_aag .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_ddfg ,_ddfg );continue ;};if len (_adcf )>=255{return nil ,nil ,_ca .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");};_adcf [_ddfg ]=_gfbca ;};};var (_bebda []_ff .CharCode ;_bdef []_ff .CharCode ;);for _cfbcc :=_ff .CharCode (1);_cfbcc <=0xff;_cfbcc ++{_aeadg ,_fcgd :=_fgbgd .CharcodeToRune (_cfbcc );if !_fcgd {_bebda =append (_bebda ,_cfbcc );continue ;};if _ ,_fcgd =alphabet [_aeadg ];!_fcgd {_bdef =append (_bdef ,_cfbcc );};};_daaa :=append (_bebda ,_bdef ...);if len (_daaa )< len (_adcf ){return nil ,nil ,_c .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_adcf ),len (_daaa ));};_fbcc :=make ([]rune ,0,len (_adcf ));for _abage :=range _adcf {_fbcc =append (_fbcc ,_abage );};_fg .Slice (_fbcc ,func (_dagb ,_dcaa int )bool {return _fbcc [_dagb ]< _fbcc [_dcaa ]});_ccbbbf :=make (map[_ff .CharCode ]_ff .GlyphName ,len (_fbcc ));for _ ,_cdcb :=range _fbcc {_eaea :=_daaa [0];_daaa =_daaa [1:];_ccbbbf [_eaea ]=_adcf [_cdcb ];};_fgbgd =_ff .ApplyDifferences (_fgbgd ,_ccbbbf );_cddgf .SetEncoder (_fgbgd );return &PdfFont {_ddgba :&_cddgf },_fgbgd ,nil ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_gaga *PdfFieldSignature )ToPdfObject ()_bd .PdfObject {if _gaga .PdfAnnotationWidget !=nil {_gaga .PdfAnnotationWidget .ToPdfObject ();};_gaga .PdfField .ToPdfObject ();_dacc :=_gaga ._gcacg ;_fbgde :=_dacc .PdfObject .(*_bd .PdfObjectDictionary );_fbgde .SetIfNotNil ("\u0046\u0054",_bd .MakeName ("\u0053\u0069\u0067"));_fbgde .SetIfNotNil ("\u004c\u006f\u0063\u006b",_gaga .Lock );_fbgde .SetIfNotNil ("\u0053\u0056",_gaga .SV );if _gaga .V !=nil {_fbgde .SetIfNotNil ("\u0056",_gaga .V .ToPdfObject ());};return _dacc ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_ebd :=NewPdfAction ();_dea :=&PdfActionGoToR {};_dea .PdfAction =_ebd ;_ebd .SetContext (_dea );return _dea ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_egec *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_gdfb :=0.3*_egec .R ()+0.59*_egec .G ()+0.11*_egec .B ();_gdfb =_cg .Min (_cg .Max (_gdfb ,0.0),1.0);return NewPdfColorDeviceGray (_gdfb );};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _bd .PdfObject ;_eagg []byte ;_dbcca *_bd .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_bdfcg *PdfAnnotationTrapNet )ToPdfObject ()_bd .PdfObject {_bdfcg .PdfAnnotation .ToPdfObject ();_cfc :=_bdfcg ._ega ;_aegb :=_cfc .PdfObject .(*_bd .PdfObjectDictionary );_aegb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));return _cfc ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_ecg *PdfAnnotation )GetContext ()PdfModel {if _ecg ==nil {return nil ;};return _ecg ._bfa ;};

// ToPdfObject implements interface PdfModel.
func (_facd *PdfAnnotationInk )ToPdfObject ()_bd .PdfObject {_facd .PdfAnnotation .ToPdfObject ();_ddcf :=_facd ._ega ;_cfa :=_ddcf .PdfObject .(*_bd .PdfObjectDictionary );_facd .PdfAnnotationMarkup .appendToPdfDictionary (_cfa );_cfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0049\u006e\u006b"));_cfa .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_facd .InkList );_cfa .SetIfNotNil ("\u0042\u0053",_facd .BS );return _ddcf ;};func (_fge *PdfReader )newPdfAnnotationRedactFromDict (_aaag *_bd .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_egfbb :=PdfAnnotationRedact {};_eeeg ,_afg :=_fge .newPdfAnnotationMarkupFromDict (_aaag );if _afg !=nil {return nil ,_afg ;};_egfbb .PdfAnnotationMarkup =_eeeg ;_egfbb .QuadPoints =_aaag .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_egfbb .IC =_aaag .Get ("\u0049\u0043");_egfbb .RO =_aaag .Get ("\u0052\u004f");_egfbb .OverlayText =_aaag .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_egfbb .Repeat =_aaag .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_egfbb .DA =_aaag .Get ("\u0044\u0041");_egfbb .Q =_aaag .Get ("\u0051");return &_egfbb ,nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_ddcaf *PdfPage )AppendContentStream (contentStr string )error {_bagg ,_daeeb :=_ddcaf .GetContentStreams ();if _daeeb !=nil {return _daeeb ;};if len (_bagg )==0{_bagg =[]string {contentStr };return _ddcaf .SetContentStreams (_bagg ,_bd .NewFlateEncoder ());};var _cdebb _af .Buffer ;_cdebb .WriteString (_bagg [len (_bagg )-1]);_cdebb .WriteString ("\u000a");_cdebb .WriteString (contentStr );_bagg [len (_bagg )-1]=_cdebb .String ();return _ddcaf .SetContentStreams (_bagg ,_bd .NewFlateEncoder ());};var _efbgd ="";

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_bfffc *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbcf :=vals [0];if _dbcf < 0.0||_dbcf > 1.0{_aag .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");};if _dbcf < 0.0{_dbcf =0.0;}else if _dbcf > 1.0{_dbcf =1.0;};return NewPdfColorDeviceGray (_dbcf ),nil ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_cbad *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_cbad .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_cbad ._fdcd =acroForm ;};

// ToPdfObject implements interface PdfModel.
func (_ea *PdfActionHide )ToPdfObject ()_bd .PdfObject {_ea .PdfAction .ToPdfObject ();_fgf :=_ea ._ccf ;_ccg :=_fgf .PdfObject .(*_bd .PdfObjectDictionary );_ccg .SetIfNotNil ("\u0053",_bd .MakeName (string (ActionTypeHide )));_ccg .SetIfNotNil ("\u0054",_ea .T );_ccg .SetIfNotNil ("\u0048",_ea .H );return _fgf ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_abbcd *OutlineItem )Insert (index uint ,item *OutlineItem ){_ebbbf :=uint (len (_abbcd .Entries ));if index > _ebbbf {index =_ebbbf ;};_abbcd .Entries =append (_abbcd .Entries [:index ],append ([]*OutlineItem {item },_abbcd .Entries [index :]...)...);};var _egccf _b .Time ;func (_afd *PdfAnnotation )String ()string {_ggaf :="";_bg ,_bfbd :=_afd .ToPdfObject ().(*_bd .PdfIndirectObject );if _bfbd {_ggaf =_c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_afd ._bfa ,_bg .PdfObject .String ());};return _ggaf ;};func (_eadba *PdfWriter )updateObjectNumbers (){_abbde :=_eadba .ObjNumOffset ;_cdecd :=0;for _ ,_gdgggd :=range _eadba ._fceb {_fccdb :=int64 (_cdecd +1+_abbde );_fcfc :=true ;if _eadba ._dfbe {if _edeag ,_aecca :=_eadba ._abdbb [_gdgggd ];_aecca {_fccdb =_edeag ;_fcfc =false ;};};switch _cfdge :=_gdgggd .(type ){case *_bd .PdfIndirectObject :_cfdge .ObjectNumber =_fccdb ;_cfdge .GenerationNumber =0;case *_bd .PdfObjectStream :_cfdge .ObjectNumber =_fccdb ;_cfdge .GenerationNumber =0;case *_bd .PdfObjectStreams :_cfdge .ObjectNumber =_fccdb ;_cfdge .GenerationNumber =0;default:_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_cfdge );continue ;};if _fcfc {_cdecd ++;};};_aedga :=func (_feabd _bd .PdfObject )int64 {switch _gbbef :=_feabd .(type ){case *_bd .PdfIndirectObject :return _gbbef .ObjectNumber ;case *_bd .PdfObjectStream :return _gbbef .ObjectNumber ;case *_bd .PdfObjectStreams :return _gbbef .ObjectNumber ;};return 0;};_fg .SliceStable (_eadba ._fceb ,func (_dfdaf ,_acfgb int )bool {return _aedga (_eadba ._fceb [_dfdaf ])< _aedga (_eadba ._fceb [_acfgb ])});};

// SetDate sets the `M` field of the signature.
func (_gcefc *PdfSignature )SetDate (date _b .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_gcefc .M =_bd .MakeString (date .Format (format ));};

// GetContainingPdfObject implements interface PdfModel.
func (_dedg *PdfFilespec )GetContainingPdfObject ()_bd .PdfObject {return _dedg ._bdea };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_agad *PdfShadingType5 )ToPdfObject ()_bd .PdfObject {_agad .PdfShading .ToPdfObject ();_gfge ,_efbfg :=_agad .getShadingDict ();if _efbfg !=nil {_aag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _agad .BitsPerCoordinate !=nil {_gfge .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_agad .BitsPerCoordinate );};if _agad .BitsPerComponent !=nil {_gfge .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_agad .BitsPerComponent );};if _agad .VerticesPerRow !=nil {_gfge .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_agad .VerticesPerRow );};if _agad .Decode !=nil {_gfge .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_agad .Decode );};if _agad .Function !=nil {if len (_agad .Function )==1{_gfge .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_agad .Function [0].ToPdfObject ());}else {_begfe :=_bd .MakeArray ();for _ ,_gaacd :=range _agad .Function {_begfe .Append (_gaacd .ToPdfObject ());};_gfge .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_begfe );};};return _agad ._ecebg ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_aadf []_bd .PdfObject )([]_bd .PdfObject ,error );};var _ _bd .PdfObject =&pdfSignDictionary {};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_gabe *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_ccde ,_ceac :=color .(*PdfColorDeviceCMYK );if !_ceac {_aag .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");return nil ,_ca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fgca :=_ccde .C ();_defc :=_ccde .M ();_dfgf :=_ccde .Y ();_gfdd :=_ccde .K ();_fgca =_fgca *(1-_gfdd )+_gfdd ;_defc =_defc *(1-_gfdd )+_gfdd ;_dfgf =_dfgf *(1-_gfdd )+_gfdd ;_deag :=1-_fgca ;_egff :=1-_defc ;_gbgb :=1-_dfgf ;return NewPdfColorDeviceRGB (_deag ,_egff ,_gbgb ),nil ;};func _aedff (_aaae *_bd .PdfObjectDictionary )(*PdfFieldText ,error ){_gcbd :=&PdfFieldText {};_gcbd .DA ,_ =_bd .GetString (_aaae .Get ("\u0044\u0041"));_gcbd .Q ,_ =_bd .GetInt (_aaae .Get ("\u0051"));_gcbd .DS ,_ =_bd .GetString (_aaae .Get ("\u0044\u0053"));_gcbd .RV =_aaae .Get ("\u0052\u0056");_gcbd .MaxLen ,_ =_bd .GetInt (_aaae .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _gcbd ,nil ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_bgcgg DefaultImageHandler )Read (reader _eb .Reader )(*Image ,error ){_defe ,_ ,_fagee :=_be .Decode (reader );if _fagee !=nil {_aag .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_fagee );return nil ,_fagee ;};return _bgcgg .NewImageFromGoImage (_defe );};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_bdaf *PdfField )ToPdfObject ()_bd .PdfObject {_gdac :=_bdaf ._gcacg ;_accf :=_gdac .PdfObject .(*_bd .PdfObjectDictionary );_fefd :=_bd .MakeArray ();for _ ,_ecbg :=range _bdaf .Kids {_fefd .Append (_ecbg .ToPdfObject ());};for _ ,_dcgc :=range _bdaf .Annotations {if _dcgc ._ega !=_bdaf ._gcacg {_fefd .Append (_dcgc .GetContext ().ToPdfObject ());};};if _bdaf .Parent !=nil {_accf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bdaf .Parent .GetContainingPdfObject ());};if _fefd .Len ()> 0{_accf .Set ("\u004b\u0069\u0064\u0073",_fefd );};_accf .SetIfNotNil ("\u0046\u0054",_bdaf .FT );_accf .SetIfNotNil ("\u0054",_bdaf .T );_accf .SetIfNotNil ("\u0054\u0055",_bdaf .TU );_accf .SetIfNotNil ("\u0054\u004d",_bdaf .TM );_accf .SetIfNotNil ("\u0046\u0066",_bdaf .Ff );_accf .SetIfNotNil ("\u0056",_bdaf .V );_accf .SetIfNotNil ("\u0044\u0056",_bdaf .DV );_accf .SetIfNotNil ("\u0041\u0041",_bdaf .AA );return _gdac ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _bd .PdfObject )(PdfColorspace ,error ){var _cdd *_bd .PdfIndirectObject ;var _cfea *_bd .PdfObjectName ;var _fbadb *_bd .PdfObjectArray ;if _bebfd ,_ebcg :=obj .(*_bd .PdfIndirectObject );_ebcg {_cdd =_bebfd ;};obj =_bd .TraceToDirectObject (obj );switch _cfcd :=obj .(type ){case *_bd .PdfObjectArray :_fbadb =_cfcd ;case *_bd .PdfObjectName :_cfea =_cfcd ;};if _cfea !=nil {switch *_cfea {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;default:_aag .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_cfea );return nil ,_fadf ;};};if _fbadb !=nil &&_fbadb .Len ()> 0{var _cag _bd .PdfObject =_cdd ;if _cdd ==nil {_cag =_fbadb ;};if _eedd ,_cdgd :=_bd .GetName (_fbadb .Get (0));_cdgd {switch _eedd .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _fbadb .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _fbadb .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fbadb .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _edfdf (_cag );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _edca (_cag );case "\u004c\u0061\u0062":return _egea (_cag );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _cacbe (_cag );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _ebdeg (_cag );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _cabg (_cag );case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _cdgg (_cag );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _daag (_cag );default:_aag .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_eedd );};};};_aag .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());return nil ,ErrTypeCheck ;};func (_dbbg *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_dfgfc *PdfColorspaceDeviceN )ToPdfObject ()_bd .PdfObject {_dbef :=_bd .MakeArray (_bd .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_dbef .Append (_dfgfc .ColorantNames );_dbef .Append (_dfgfc .AlternateSpace .ToPdfObject ());_dbef .Append (_dfgfc .TintTransform .ToPdfObject ());if _dfgfc .Attributes !=nil {_dbef .Append (_dfgfc .Attributes .ToPdfObject ());};if _dfgfc ._ffcd !=nil {_dfgfc ._ffcd .PdfObject =_dbef ;return _dfgfc ._ffcd ;};return _dbef ;};

// HasFontByName checks if has font resource by name.
func (_aded *PdfPage )HasFontByName (name _bd .PdfObjectName )bool {_dcedd ,_bgcgc :=_aded .Resources .Font .(*_bd .PdfObjectDictionary );if !_bgcgc {return false ;};if _eddd :=_dcedd .Get (name );_eddd !=nil {return true ;};return false ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_afcg *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _gegaf []*PdfOutlineTreeNode ;var _dbfed []string ;var _geea func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_geea =func (_ecbeg *PdfOutlineTreeNode ,_becbe *[]*PdfOutlineTreeNode ,_bcde *[]string ,_dbfedb int ){if _ecbeg ==nil {return ;};if _ecbeg ._dcaag ==nil {_aag .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_dfefe ,_geac :=_ecbeg ._dcaag .(*PdfOutlineItem );if _geac {*_becbe =append (*_becbe ,&_dfefe .PdfOutlineTreeNode );_bdcc :=_ad .Repeat ("\u0020",_dbfedb *2)+_dfefe .Title .Decoded ();*_bcde =append (*_bcde ,_bdcc );};if _ecbeg .First !=nil {_gdgeg :=_ad .Repeat ("\u0020",_dbfedb *2)+"\u002b";*_bcde =append (*_bcde ,_gdgeg );_geea (_ecbeg .First ,_becbe ,_bcde ,_dbfedb +1);};if _geac &&_dfefe .Next !=nil {_geea (_dfefe .Next ,_becbe ,_bcde ,_dbfedb );};};_geea (_afcg ._afgegb ,&_gegaf ,&_dbfed ,0);return _gegaf ,_dbfed ,nil ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _bd .StreamEncoder ;Intent _bd .PdfObject ;ImageMask _bd .PdfObject ;Mask _bd .PdfObject ;Matte _bd .PdfObject ;Decode _bd .PdfObject ;Interpolate _bd .PdfObject ;Alternatives _bd .PdfObject ;SMask _bd .PdfObject ;SMaskInData _bd .PdfObject ;Name _bd .PdfObject ;StructParent _bd .PdfObject ;ID _bd .PdfObject ;OPI _bd .PdfObject ;Metadata _bd .PdfObject ;OC _bd .PdfObject ;Stream []byte ;_abdfc *_bd .PdfObjectStream ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_bafe :=&PdfFilespec {};_bafe ._bdea =_bd .MakeIndirectObject (_bd .MakeDict ());return _bafe ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fcec pdfFontType0 )GetRuneMetrics (r rune )(_gb .CharMetrics ,bool ){if _fcec .DescendantFont ==nil {_aag .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_fcec );return _gb .CharMetrics {},false ;};return _fcec .DescendantFont .GetRuneMetrics (r );};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_dacg *PdfOutlineItem )GetContainingPdfObject ()_bd .PdfObject {return _dacg ._bedcc };

// PdfVersion returns version of the PDF file.
func (_dbcdc *PdfReader )PdfVersion ()_bd .Version {return _dbcdc ._efgga .PdfVersion ()};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_dcaag interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_bd .PdfObjectInteger ;TilingType *_bd .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_bd .PdfObjectFloat ;YStep *_bd .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_bd .PdfObjectArray ;};

// PartialName returns the partial name of the field.
func (_cdfd *PdfField )PartialName ()string {_dadbf :="";if _cdfd .T !=nil {_dadbf =_cdfd .T .Decoded ();}else {_aag .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");};return _dadbf ;};

// ReplacePage replaces the original page to a new page.
func (_deaa *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_bfcdb :=pageNum -1;for _faad :=range _deaa ._cgaa {if _faad ==_bfcdb {_eefb :=page .Duplicate ();_ffdea (_eefb );_deaa ._cgaa [_faad ]=_eefb ;};};};

// Val returns the color value.
func (_dbgf *PdfColorDeviceGray )Val ()float64 {return float64 (*_dbgf )};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_abcg :=PdfDate {};_dbecc :=_gcefg .FindAllStringSubmatch (dateStr ,1);if len (_dbecc )< 1{return _abcg ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );};if len (_dbecc [0])!=10{return _abcg ,_ca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");};_abcg ._fagf ,_ =_bb .ParseInt (_dbecc [0][1],10,32);_abcg ._adfc ,_ =_bb .ParseInt (_dbecc [0][2],10,32);_abcg ._gbfe ,_ =_bb .ParseInt (_dbecc [0][3],10,32);_abcg ._beeg ,_ =_bb .ParseInt (_dbecc [0][4],10,32);_abcg ._ebfbe ,_ =_bb .ParseInt (_dbecc [0][5],10,32);_abcg ._dfecg ,_ =_bb .ParseInt (_dbecc [0][6],10,32);if len (_dbecc [0][7])> 0{_abcg ._ggdf =_dbecc [0][7][0];}else {_abcg ._ggdf ='+';};if len (_dbecc [0][8])> 0{_abcg ._fccfce ,_ =_bb .ParseInt (_dbecc [0][8],10,32);}else {_abcg ._fccfce =0;};if len (_dbecc [0][9])> 0{_abcg ._ccegg ,_ =_bb .ParseInt (_dbecc [0][9],10,32);}else {_abcg ._ccegg =0;};return _abcg ,nil ;};func _dfacd (_fgdc *_bd .PdfObjectDictionary )(*PdfShadingType3 ,error ){_aafcg :=PdfShadingType3 {};_bbdda :=_fgdc .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _bbdda ==nil {_aag .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;};_ffebd ,_caege :=_bbdda .(*_bd .PdfObjectArray );if !_caege {_aag .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbdda );return nil ,_bd .ErrTypeError ;};if _ffebd .Len ()!=6{_aag .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ffebd .Len ());return nil ,ErrInvalidAttribute ;};_aafcg .Coords =_ffebd ;if _fgcefa :=_fgdc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fgcefa !=nil {_fgcefa =_bd .TraceToDirectObject (_fgcefa );_dfece ,_feefg :=_fgcefa .(*_bd .PdfObjectArray );if !_feefg {_aag .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fgcefa );return nil ,_bd .ErrTypeError ;};_aafcg .Domain =_dfece ;};_bbdda =_fgdc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bbdda ==nil {_aag .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_aafcg .Function =[]PdfFunction {};if _bdbfe ,_deege :=_bbdda .(*_bd .PdfObjectArray );_deege {for _ ,_ccbbf :=range _bdbfe .Elements (){_cgcaab ,_ggdbe :=_cgdeb (_ccbbf );if _ggdbe !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggdbe );return nil ,_ggdbe ;};_aafcg .Function =append (_aafcg .Function ,_cgcaab );};}else {_befac ,_acdfdb :=_cgdeb (_bbdda );if _acdfdb !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acdfdb );return nil ,_acdfdb ;};_aafcg .Function =append (_aafcg .Function ,_befac );};if _deffe :=_fgdc .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_deffe !=nil {_deffe =_bd .TraceToDirectObject (_deffe );_gbgf ,_fccga :=_deffe .(*_bd .PdfObjectArray );if !_fccga {_aag .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_deffe );return nil ,_bd .ErrTypeError ;};if _gbgf .Len ()!=2{_aag .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gbgf .Len ());return nil ,ErrInvalidAttribute ;};_aafcg .Extend =_gbgf ;};return &_aafcg ,nil ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_dbeg *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _dbeg .Alternate ==nil {_aag .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _dbeg .N ==1{_aag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_bbge :=NewPdfColorspaceDeviceGray ();return _bbge .ImageToRGB (img );}else if _dbeg .N ==3{_aag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return img ,nil ;}else if _dbeg .N ==4{_aag .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_fbga :=NewPdfColorspaceDeviceCMYK ();return _fbga .ImageToRGB (img );}else {return img ,_ca .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_aag .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_dbeg );_ggaa ,_gbecf :=_dbeg .Alternate .ImageToRGB (img );_aag .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_aag .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_ggaa );return _ggaa ,_gbecf ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_bfbe *PdfColorCalRGB )GetNumComponents ()int {return 3};

// AddOutlineTree adds outlines to a PDF file.
func (_eeaag *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_eeaag ._abbcc =outlineTree };

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_daebb *PdfReader )GetOutlines ()(*Outline ,error ){if _daebb ==nil {return nil ,_ca .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");};_cbacg :=_daebb .GetOutlineTree ();if _cbacg ==nil {return nil ,_ca .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");};var _fdaeg func (_dbcaa *PdfOutlineTreeNode ,_adfac *[]*OutlineItem );_fdaeg =func (_fagga *PdfOutlineTreeNode ,_eedbf *[]*OutlineItem ){if _fagga ==nil {return ;};if _fagga ._dcaag ==nil {_aag .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");return ;};var _bcdeb *OutlineItem ;if _bfeef ,_adebd :=_fagga ._dcaag .(*PdfOutlineItem );_adebd {_cdgeg :=_bfeef .Dest ;if (_cdgeg ==nil ||_bd .IsNullObject (_cdgeg ))&&_bfeef .A !=nil {if _fcaab ,_aeegc :=_bd .GetDict (_bfeef .A );_aeegc {_cdgeg ,_ =_bd .GetArray (_fcaab .Get ("\u0044"));};};var _fedcd OutlineDest ;if _cdgeg !=nil &&!_bd .IsNullObject (_cdgeg ){if _fcaf ,_bfbbdg :=_gefa (_cdgeg ,_daebb );_bfbbdg ==nil {_fedcd =*_fcaf ;}else {_aag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_cdgeg ,_bfbbdg );};};_bcdeb =NewOutlineItem (_bfeef .Title .Decoded (),_fedcd );*_eedbf =append (*_eedbf ,_bcdeb );if _bfeef .Next !=nil {_fdaeg (_bfeef .Next ,_eedbf );};};if _fagga .First !=nil {if _bcdeb !=nil {_eedbf =&_bcdeb .Entries ;};_fdaeg (_fagga .First ,_eedbf );};};_ddaf :=NewOutline ();_fdaeg (_cbacg ,&_ddaf .Entries );return _ddaf ,nil ;};func (_gdga *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// G returns the value of the green component of the color.
func (_fede *PdfColorDeviceRGB )G ()float64 {return float64 (_fede [1])};func (_ebfgg *PdfPage )setContainer (_gafe *_bd .PdfIndirectObject ){_gafe .PdfObject =_ebfgg ._cedce ;_ebfgg ._cbfbd =_gafe ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_bbabg *Image )ConvertToBinary ()error {if _bbabg .ColorComponents ==1&&_bbabg .BitsPerComponent ==1{return nil ;};_dggfa ,_gdaa :=_bbabg .ToGoImage ();if _gdaa !=nil {return _gdaa ;};_ddbgf ,_gdaa :=_adg .MonochromeConverter .Convert (_dggfa );if _gdaa !=nil {return _gdaa ;};_bbabg .BitsPerComponent =1;_bbabg .ColorComponents =1;_bbabg .Data =_ddbgf .Base ().Data ;return nil ;};

// String returns a string describing the font descriptor.
func (_bgad *PdfFontDescriptor )String ()string {var _aaca []string ;if _bgad .FontName !=nil {_aaca =append (_aaca ,_bgad .FontName .String ());};if _bgad .FontFamily !=nil {_aaca =append (_aaca ,_bgad .FontFamily .String ());};if _bgad .fontFile !=nil {_aaca =append (_aaca ,_bgad .fontFile .String ());};if _bgad ._fgag !=nil {_aaca =append (_aaca ,_bgad ._fgag .String ());};_aaca =append (_aaca ,_c .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_bgad .FontFile3 !=nil ));return _c .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_ad .Join (_aaca ,"\u002c\u0020"));};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_bd .PdfObjectInteger ;BitsPerComponent *_bd .PdfObjectInteger ;BitsPerFlag *_bd .PdfObjectInteger ;Decode *_bd .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ebae *PdfShadingType4 )ToPdfObject ()_bd .PdfObject {_ebae .PdfShading .ToPdfObject ();_abagd ,_faffa :=_ebae .getShadingDict ();if _faffa !=nil {_aag .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ebae .BitsPerCoordinate !=nil {_abagd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ebae .BitsPerCoordinate );};if _ebae .BitsPerComponent !=nil {_abagd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ebae .BitsPerComponent );};if _ebae .BitsPerFlag !=nil {_abagd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ebae .BitsPerFlag );};if _ebae .Decode !=nil {_abagd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ebae .Decode );};if _ebae .Function !=nil {if len (_ebae .Function )==1{_abagd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ebae .Function [0].ToPdfObject ());}else {_ceec :=_bd .MakeArray ();for _ ,_gfbg :=range _ebae .Function {_ceec .Append (_gfbg .ToPdfObject ());};_abagd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ceec );};};return _ebae ._ecebg ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dafa *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_bd .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_faba ,_fdac :=_bd .GetNumbersAsFloat (objects );if _fdac !=nil {return nil ,_fdac ;};return _dafa .ColorFromFloats (_faba );};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_adag *PdfColorspaceLab )ToPdfObject ()_bd .PdfObject {_gdag :=_bd .MakeArray ();_gdag .Append (_bd .MakeName ("\u004c\u0061\u0062"));_faege :=_bd .MakeDict ();if _adag .WhitePoint !=nil {_gegfc :=_bd .MakeArray (_bd .MakeFloat (_adag .WhitePoint [0]),_bd .MakeFloat (_adag .WhitePoint [1]),_bd .MakeFloat (_adag .WhitePoint [2]));_faege .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_gegfc );}else {_aag .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};if _adag .BlackPoint !=nil {_cddc :=_bd .MakeArray (_bd .MakeFloat (_adag .BlackPoint [0]),_bd .MakeFloat (_adag .BlackPoint [1]),_bd .MakeFloat (_adag .BlackPoint [2]));_faege .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cddc );};if _adag .Range !=nil {_gcgdb :=_bd .MakeArray (_bd .MakeFloat (_adag .Range [0]),_bd .MakeFloat (_adag .Range [1]),_bd .MakeFloat (_adag .Range [2]),_bd .MakeFloat (_adag .Range [3]));_faege .Set ("\u0052\u0061\u006eg\u0065",_gcgdb );};_gdag .Append (_faege );if _adag ._adad !=nil {_adag ._adad .PdfObject =_gdag ;return _adag ._adad ;};return _gdag ;};

// ToInteger convert to an integer format.
func (_abge *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_afgd :=_cg .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_afgd *_abge .R ()),uint32 (_afgd *_abge .G ()),uint32 (_afgd *_abge .B ())};};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_fe :=NewPdfAction ();_cb :=&PdfActionMovie {};_cb .PdfAction =_fe ;_fe .SetContext (_cb );return _cb ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_abaab *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_abaab ._ffdfb =colorspace ;};func (_afgc *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _deed :=_afgc ._dcgda ;_deed !=nil {return _deed ;};return _afgc ._ecbec ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bd .PdfObject ;};func (_bcfe *PdfReader )newPdfActionMovieFromDict (_dbc *_bd .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_dbc .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_dbc .Get ("\u0054"),Operation :_dbc .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;};func (_dde *PdfReader )newPdfActionImportDataFromDict (_ddb *_bd .PdfObjectDictionary )(*PdfActionImportData ,error ){_fce ,_dcg :=_gfgg (_ddb .Get ("\u0046"));if _dcg !=nil {return nil ,_dcg ;};return &PdfActionImportData {F :_fce },nil ;};func (_gbdg fontCommon )coreString ()string {_cgec :="";if _gbdg ._dcgda !=nil {_cgec =_gbdg ._dcgda .String ();};return _c .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_gbdg ._ddad ,_gbdg ._gfceb ,_gbdg ._cggc ,_gbdg ._gebbb ,_gbdg ._cgab !=nil ,_gbdg .fontFlags (),_cgec );};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_abfc *PdfFont )GetCharMetrics (code _ff .CharCode )(CharMetrics ,bool ){var _ffec _gb .CharMetrics ;switch _afgfg :=_abfc ._ddgba .(type ){case *pdfFontSimple :if _ffdda ,_baaf :=_afgfg .GetCharMetrics (code );_baaf {return _ffdda ,_baaf ;};case *pdfFontType0 :if _ecec ,_fbdf :=_afgfg .GetCharMetrics (code );_fbdf {return _ecec ,_fbdf ;};case *pdfCIDFontType0 :if _aefe ,_eccc :=_afgfg .GetCharMetrics (code );_eccc {return _aefe ,_eccc ;};case *pdfCIDFontType2 :if _ebff ,_fcda :=_afgfg .GetCharMetrics (code );_fcda {return _ebff ,_fcda ;};default:_aag .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_abfc ._ddgba );return _ffec ,false ;};if _bfbgb ,_dbgcc :=_abfc .GetFontDescriptor ();_dbgcc ==nil &&_bfbgb !=nil {return _gb .CharMetrics {Wx :_bfbgb ._cgcd },true ;};_aag .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_abfc );return _ffec ,false ;};func _ggce (_acad StdFontName )(pdfFontSimple ,error ){_ccddg ,_afgeg :=_gb .NewStdFontByName (_acad );if !_afgeg {return pdfFontSimple {},ErrFontNotSupported ;};_aegd :=_eedgg (_ccddg );return _aegd ,nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_dbcba *PdfShadingPattern )ToPdfObject ()_bd .PdfObject {_dbcba .PdfPattern .ToPdfObject ();_fegeb :=_dbcba .getDict ();if _dbcba .Shading !=nil {_fegeb .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_dbcba .Shading .ToPdfObject ());};if _dbcba .Matrix !=nil {_fegeb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dbcba .Matrix );};if _dbcba .ExtGState !=nil {_fegeb .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_dbcba .ExtGState );};return _dbcba ._ebbgg ;};

// Register registers (caches) a model to primitive object relationship.
func (_aaeee *modelManager )Register (primitive _bd .PdfObject ,model PdfModel ){_aaeee ._afac [model ]=primitive ;_aaeee ._eded [primitive ]=model ;};func _gefa (_gdcfd _bd .PdfObject ,_cdfa *PdfReader )(*OutlineDest ,error ){_afgb ,_ggebf :=_bd .GetArray (_gdcfd );if !_ggebf {return nil ,_ca .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};_bgee :=_afgb .Len ();if _bgee < 2{return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_bgee );};_dfgb :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_cbbdec :=_afgb .Get (0);if _dcgcea ,_ccagb :=_bd .GetIndirect (_cbbdec );_ccagb {if _ ,_cbgc ,_bgdee :=_cdfa .PageFromIndirectObject (_dcgcea );_bgdee ==nil {_dfgb .Page =int64 (_cbgc -1);}else {_aag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_dcgcea );};_dfgb .PageObj =_dcgcea ;}else if _bffed ,_bfdbe :=_bd .GetIntVal (_cbbdec );_bfdbe {if _bffed >=0&&_bffed < len (_cdfa .PageList ){_dfgb .PageObj =_cdfa .PageList [_bffed ].GetPageAsIndirectObject ();}else {_aag .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_bffed );};_dfgb .Page =int64 (_bffed );}else {return nil ,_c .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_cbbdec );};_dadcgb ,_ggebf :=_bd .GetNameVal (_afgb .Get (1));if !_ggebf {_aag .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_afgb .Get (1));return _dfgb ,nil ;};switch _dadcgb {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _bgee > 2{_dfgb .Y ,_ =_bd .GetNumberAsFloat (_bd .TraceToDirectObject (_afgb .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _bgee > 2{_dfgb .X ,_ =_bd .GetNumberAsFloat (_bd .TraceToDirectObject (_afgb .Get (2)));};case "\u0058\u0059\u005a":if _bgee > 4{_dfgb .X ,_ =_bd .GetNumberAsFloat (_bd .TraceToDirectObject (_afgb .Get (2)));_dfgb .Y ,_ =_bd .GetNumberAsFloat (_bd .TraceToDirectObject (_afgb .Get (3)));_dfgb .Zoom ,_ =_bd .GetNumberAsFloat (_bd .TraceToDirectObject (_afgb .Get (4)));};default:_dadcgb ="\u0046\u0069\u0074";};_dfgb .Mode =_dadcgb ;return _dfgb ,nil ;};

// String returns the name of the colorspace (DeviceN).
func (_gaee *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};func _gbdgf (_fdgca *_bd .PdfObjectDictionary )(*PdfShadingType5 ,error ){_dbggg :=PdfShadingType5 {};_feadb :=_fdgca .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _feadb ==nil {_aag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_ebdge ,_gbffd :=_feadb .(*_bd .PdfObjectInteger );if !_gbffd {_aag .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_feadb );return nil ,_bd .ErrTypeError ;};_dbggg .BitsPerCoordinate =_ebdge ;_feadb =_fdgca .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _feadb ==nil {_aag .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_ebdge ,_gbffd =_feadb .(*_bd .PdfObjectInteger );if !_gbffd {_aag .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_feadb );return nil ,_bd .ErrTypeError ;};_dbggg .BitsPerComponent =_ebdge ;_feadb =_fdgca .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _feadb ==nil {_aag .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");return nil ,ErrRequiredAttributeMissing ;};_ebdge ,_gbffd =_feadb .(*_bd .PdfObjectInteger );if !_gbffd {_aag .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_feadb );return nil ,_bd .ErrTypeError ;};_dbggg .VerticesPerRow =_ebdge ;_feadb =_fdgca .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _feadb ==nil {_aag .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_adbga ,_gbffd :=_feadb .(*_bd .PdfObjectArray );if !_gbffd {_aag .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_feadb );return nil ,_bd .ErrTypeError ;};_dbggg .Decode =_adbga ;if _ceagg :=_fdgca .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ceagg !=nil {_dbggg .Function =[]PdfFunction {};if _eagb ,_dabcb :=_ceagg .(*_bd .PdfObjectArray );_dabcb {for _ ,_ddcfe :=range _eagb .Elements (){_gaeef ,_ecdb :=_cgdeb (_ddcfe );if _ecdb !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ecdb );return nil ,_ecdb ;};_dbggg .Function =append (_dbggg .Function ,_gaeef );};}else {_facdad ,_daaeg :=_cgdeb (_ceagg );if _daaeg !=nil {_aag .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_daaeg );return nil ,_daaeg ;};_dbggg .Function =append (_dbggg .Function ,_facdad );};};return &_dbggg ,nil ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_bd .PdfObject ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_bd .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_eaaa *_bd .PdfIndirectObject ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_dcec *PdfPageResources )SetPatternByName (keyName _bd .PdfObjectName ,pattern _bd .PdfObject )error {if _dcec .Pattern ==nil {_dcec .Pattern =_bd .MakeDict ();};_cdba ,_fecf :=_dcec .Pattern .(*_bd .PdfObjectDictionary );if !_fecf {return _bd .ErrTypeError ;};_cdba .Set (keyName ,pattern );return nil ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_ggdc *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};func (_daaed *PdfWriter )addObject (_gcgda _bd .PdfObject )bool {_bfedb :=_daaed .hasObject (_gcgda );if !_bfedb {_aaege :=_bd .ResolveReferencesDeep (_gcgda ,_daaed ._dfegff );if _aaege !=nil {_aag .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_aaege );};_daaed ._fceb =append (_daaed ._fceb ,_gcgda );_daaed ._egeab [_gcgda ]=struct{}{};return true ;};return false ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_bggc *PdfReader )GetOCProperties ()(_bd .PdfObject ,error ){_ecca :=_bggc ._cebfa ;_aeceb :=_ecca .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_aeceb =_bd .ResolveReference (_aeceb );if !_bggc ._abbg {_cbde :=_bggc .traverseObjectData (_aeceb );if _cbde !=nil {return nil ,_cbde ;};};return _aeceb ,nil ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_eec :=NewPdfAction ();_dg :=&PdfActionGoTo {};_dg .PdfAction =_eec ;_eec .SetContext (_dg );return _dg ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _bd .PdfObject )(*PdfFilespec ,error ){_bfgd :=&PdfFilespec {};var _afff *_bd .PdfObjectDictionary ;if _bfccb ,_aeab :=_bd .GetIndirect (obj );_aeab {_bfgd ._bdea =_bfccb ;_ffff ,_bfbgf :=_bd .GetDict (_bfccb .PdfObject );if !_bfbgf {_aag .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bd .ErrTypeError ;};_afff =_ffff ;}else if _agae ,_edag :=_bd .GetDict (obj );_edag {_bfgd ._bdea =_agae ;_afff =_agae ;}else {_aag .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_bd .ErrTypeError ;};if _afff ==nil {_aag .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ca .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _gfed :=_afff .Get ("\u0054\u0079\u0070\u0065");_gfed !=nil {_feagg ,_fcbb :=_gfed .(*_bd .PdfObjectName );if !_fcbb {_aag .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gfed );}else {if *_feagg !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_aag .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_feagg );};};};if _facbd :=_afff .Get ("\u0046\u0053");_facbd !=nil {_bfgd .FS =_facbd ;};if _fcff :=_afff .Get ("\u0046");_fcff !=nil {_bfgd .F =_fcff ;};if _gegcb :=_afff .Get ("\u0055\u0046");_gegcb !=nil {_bfgd .UF =_gegcb ;};if _affgc :=_afff .Get ("\u0044\u004f\u0053");_affgc !=nil {_bfgd .DOS =_affgc ;};if _cbae :=_afff .Get ("\u004d\u0061\u0063");_cbae !=nil {_bfgd .Mac =_cbae ;};if _gaed :=_afff .Get ("\u0055\u006e\u0069\u0078");_gaed !=nil {_bfgd .Unix =_gaed ;};if _efef :=_afff .Get ("\u0049\u0044");_efef !=nil {_bfgd .ID =_efef ;};if _dece :=_afff .Get ("\u0056");_dece !=nil {_bfgd .V =_dece ;};if _ceee :=_afff .Get ("\u0045\u0046");_ceee !=nil {_bfgd .EF =_ceee ;};if _gccda :=_afff .Get ("\u0052\u0046");_gccda !=nil {_bfgd .RF =_gccda ;};if _bbgad :=_afff .Get ("\u0044\u0065\u0073\u0063");_bbgad !=nil {_bfgd .Desc =_bbgad ;};if _dgeff :=_afff .Get ("\u0043\u0049");_dgeff !=nil {_bfgd .CI =_dgeff ;};return _bfgd ,nil ;};func _ffdea (_gcgcf *PdfPage ){_cbaaf :=_dcf .GetLicenseKey ();if _cbaaf !=nil &&_cbaaf .IsLicensed (){return ;};_bcdfg :=_bd .PdfObjectName ("\u0055\u0046\u0031");if !_gcgcf .Resources .HasFontByName (_bcdfg ){_gcgcf .Resources .SetFontByName (_bcdfg ,DefaultFont ().ToPdfObject ());};var _dfcaa []string ;_dfcaa =append (_dfcaa ,"\u0071");_dfcaa =append (_dfcaa ,"\u0042\u0054");_dfcaa =append (_dfcaa ,_c .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_bcdfg .String ()));_dfcaa =append (_dfcaa ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_dfcaa =append (_dfcaa ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_eeggfd :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";_dfcaa =append (_dfcaa ,_c .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_eeggfd ));_dfcaa =append (_dfcaa ,"\u0045\u0054");_dfcaa =append (_dfcaa ,"\u0051");_gbfdf :=_ad .Join (_dfcaa ,"\u000a");_gcgcf .AddContentStreamByString (_gbfdf );_gcgcf .ToPdfObject ();};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_cbbgb *_bd .PdfIndirectObject ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_ggfc *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };func (_ebgb *PdfReader )newPdfAnnotationTextFromDict (_dddg *_bd .PdfObjectDictionary )(*PdfAnnotationText ,error ){_ebad :=PdfAnnotationText {};_dbcg ,_gdf :=_ebgb .newPdfAnnotationMarkupFromDict (_dddg );if _gdf !=nil {return nil ,_gdf ;};_ebad .PdfAnnotationMarkup =_dbcg ;_ebad .Open =_dddg .Get ("\u004f\u0070\u0065\u006e");_ebad .Name =_dddg .Get ("\u004e\u0061\u006d\u0065");_ebad .State =_dddg .Get ("\u0053\u0074\u0061t\u0065");_ebad .StateModel =_dddg .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_ebad ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_bbaf *PdfFunctionType3 )ToPdfObject ()_bd .PdfObject {_gecef :=_bd .MakeDict ();_gecef .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bd .MakeInteger (3));_dbffe :=&_bd .PdfObjectArray {};for _ ,_feeg :=range _bbaf .Domain {_dbffe .Append (_bd .MakeFloat (_feeg ));};_gecef .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dbffe );if _bbaf .Range !=nil {_feea :=&_bd .PdfObjectArray {};for _ ,_cceb :=range _bbaf .Range {_feea .Append (_bd .MakeFloat (_cceb ));};_gecef .Set ("\u0052\u0061\u006eg\u0065",_feea );};if _bbaf .Functions !=nil {_feccf :=&_bd .PdfObjectArray {};for _ ,_egafc :=range _bbaf .Functions {_feccf .Append (_egafc .ToPdfObject ());};_gecef .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_feccf );};if _bbaf .Bounds !=nil {_debfa :=&_bd .PdfObjectArray {};for _ ,_dbacf :=range _bbaf .Bounds {_debfa .Append (_bd .MakeFloat (_dbacf ));};_gecef .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_debfa );};if _bbaf .Encode !=nil {_gccab :=&_bd .PdfObjectArray {};for _ ,_bdfcf :=range _bbaf .Encode {_gccab .Append (_bd .MakeFloat (_bdfcf ));};_gecef .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_gccab );};if _bbaf ._bgbf !=nil {_bbaf ._bgbf .PdfObject =_gecef ;return _bbaf ._bgbf ;};return _gecef ;};func (_efb *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_abefb *PdfPageResources )HasXObjectByName (keyName _bd .PdfObjectName )bool {_bfeed ,_ :=_abefb .GetXObjectByName (keyName );return _bfeed !=nil ;};

// SetContext sets the sub action (context).
func (_ge *PdfAction )SetContext (ctx PdfModel ){_ge ._cadc =ctx };