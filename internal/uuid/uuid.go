//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package uuid ;import (_d "crypto/rand";_ee "encoding/hex";_e "io";);var _c =_d .Reader ;func NewUUID ()(UUID ,error ){var uuid UUID ;_ ,_ac :=_e .ReadFull (_c ,uuid [:]);if _ac !=nil {return _fe ,_ac ;};uuid [6]=(uuid [6]&0x0f)|0x40;uuid [8]=(uuid [8]&0x3f)|0x80;
return uuid ,nil ;};type UUID [16]byte ;func _fb (_ef []byte ,_dd UUID ){_ee .Encode (_ef ,_dd [:4]);_ef [8]='-';_ee .Encode (_ef [9:13],_dd [4:6]);_ef [13]='-';_ee .Encode (_ef [14:18],_dd [6:8]);_ef [18]='-';_ee .Encode (_ef [19:23],_dd [8:10]);_ef [23]='-';
_ee .Encode (_ef [24:],_dd [10:]);};var Nil =_fe ;func MustUUID ()UUID {uuid ,_daa :=NewUUID ();if _daa !=nil {panic (_daa );};return uuid ;};func (_ed UUID )String ()string {var _eg [36]byte ;_fb (_eg [:],_ed );return string (_eg [:])};var _fe UUID ;