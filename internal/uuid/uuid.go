//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package uuid ;import (_e "crypto/rand";_bf "encoding/hex";_ba "io";);func MustUUID ()UUID {uuid ,_dg :=NewUUID ();if _dg !=nil {panic (_dg );};return uuid ;};func _bcg (_a []byte ,_bcb UUID ){_bf .Encode (_a ,_bcb [:4]);_a [8]='-';_bf .Encode (_a [9:13],_bcb [4:6]);
_a [13]='-';_bf .Encode (_a [14:18],_bcb [6:8]);_a [18]='-';_bf .Encode (_a [19:23],_bcb [8:10]);_a [23]='-';_bf .Encode (_a [24:],_bcb [10:]);};type UUID [16]byte ;var _ec =_e .Reader ;var _ab UUID ;var Nil =_ab ;func (_ca UUID )String ()string {var _bc [36]byte ;
_bcg (_bc [:],_ca );return string (_bc [:])};func NewUUID ()(UUID ,error ){var uuid UUID ;_ ,_c :=_ba .ReadFull (_ec ,uuid [:]);if _c !=nil {return _ab ,_c ;};uuid [6]=(uuid [6]&0x0f)|0x40;uuid [8]=(uuid [8]&0x3f)|0x80;return uuid ,nil ;};