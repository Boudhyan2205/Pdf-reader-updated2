//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package uuid ;import (_a "crypto/rand";_cb "encoding/hex";_c "io";);func (_ba UUID )String ()string {var _fg [36]byte ;_ca (_fg [:],_ba );return string (_fg [:])};var _ab =_a .Reader ;var _ae UUID ;type UUID [16]byte ;var Nil =_ae ;func NewUUID ()(UUID ,error ){var uuid UUID ;
_ ,_b :=_c .ReadFull (_ab ,uuid [:]);if _b !=nil {return _ae ,_b ;};uuid [6]=(uuid [6]&0x0f)|0x40;uuid [8]=(uuid [8]&0x3f)|0x80;return uuid ,nil ;};func MustUUID ()UUID {uuid ,_d :=NewUUID ();if _d !=nil {panic (_d );};return uuid ;};func _ca (_abg []byte ,_abb UUID ){_cb .Encode (_abg ,_abb [:4]);
_abg [8]='-';_cb .Encode (_abg [9:13],_abb [4:6]);_abg [13]='-';_cb .Encode (_abg [14:18],_abb [6:8]);_abg [18]='-';_cb .Encode (_abg [19:23],_abb [8:10]);_abg [23]='-';_cb .Encode (_abg [24:],_abb [10:]);};