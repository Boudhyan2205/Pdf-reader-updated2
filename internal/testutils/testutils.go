//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package testutils ;import (_e "crypto/md5";_bd "encoding/hex";_gg "errors";_bf "fmt";_ee "github.com/unidoc/unipdf/v3/common";_bg "github.com/unidoc/unipdf/v3/core";_ecc "image";_ec "image/png";_c "io";_f "os";_bb "os/exec";_a "path/filepath";_b "strings";
_d "testing";);func ComparePNGFiles (file1 ,file2 string )(bool ,error ){_ad ,_eaaf :=HashFile (file1 );if _eaaf !=nil {return false ,_eaaf ;};_egc ,_eaaf :=HashFile (file2 );if _eaaf !=nil {return false ,_eaaf ;};if _ad ==_egc {return true ,nil ;};_ef ,_eaaf :=ReadPNG (file1 );
if _eaaf !=nil {return false ,_eaaf ;};_bgf ,_eaaf :=ReadPNG (file2 );if _eaaf !=nil {return false ,_eaaf ;};if _ef .Bounds ()!=_bgf .Bounds (){return false ,nil ;};return CompareImages (_ef ,_bgf );};var (ErrRenderNotSupported =_gg .New ("\u0072\u0065\u006e\u0064\u0065r\u0069\u006e\u0067\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006c\u0065\u0073 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006f\u006e\u0020\u0074\u0068\u0069\u0073\u0020\u0073\u0079\u0073\u0074\u0065m");
);func CopyFile (src ,dst string )error {_fe ,_bfe :=_f .Open (src );if _bfe !=nil {return _bfe ;};defer _fe .Close ();_fd ,_bfe :=_f .Create (dst );if _bfe !=nil {return _bfe ;};defer _fd .Close ();_ ,_bfe =_c .Copy (_fd ,_fe );return _bfe ;};func CompareDictionariesDeep (d1 ,d2 *_bg .PdfObjectDictionary )bool {if len (d1 .Keys ())!=len (d2 .Keys ()){_ee .Log .Debug ("\u0044\u0069\u0063\u0074\u0020\u0065\u006e\u0074\u0072\u0069\u0065\u0073\u0020\u006d\u0069s\u006da\u0074\u0063\u0068\u0020\u0028\u0025\u0064\u0020\u0021\u003d\u0020\u0025\u0064\u0029",len (d1 .Keys ()),len (d2 .Keys ()));
_ee .Log .Debug ("\u0057\u0061s\u0020\u0027\u0025s\u0027\u0020\u0076\u0073\u0020\u0027\u0025\u0073\u0027",d1 .WriteString (),d2 .WriteString ());return false ;};for _ ,_ab :=range d1 .Keys (){if _ab =="\u0050\u0061\u0072\u0065\u006e\u0074"{continue ;};
_aec :=_bg .TraceToDirectObject (d1 .Get (_ab ));_bda :=_bg .TraceToDirectObject (d2 .Get (_ab ));if _aec ==nil {_ee .Log .Debug ("\u00761\u0020\u0069\u0073\u0020\u006e\u0069l");return false ;};if _bda ==nil {_ee .Log .Debug ("\u00762\u0020\u0069\u0073\u0020\u006e\u0069l");
return false ;};switch _eaafe :=_aec .(type ){case *_bg .PdfObjectDictionary :_gda ,_aa :=_bda .(*_bg .PdfObjectDictionary );if !_aa {_ee .Log .Debug ("\u0054\u0079\u0070\u0065 m\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020\u0025\u0054\u0020\u0076\u0073\u0020%\u0054",_aec ,_bda );
return false ;};if !CompareDictionariesDeep (_eaafe ,_gda ){return false ;};continue ;case *_bg .PdfObjectArray :_aed ,_bdad :=_bda .(*_bg .PdfObjectArray );if !_bdad {_ee .Log .Debug ("\u00762\u0020n\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
return false ;};if _eaafe .Len ()!=_aed .Len (){_ee .Log .Debug ("\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006d\u0069s\u006da\u0074\u0063\u0068\u0020\u0028\u0025\u0064\u0020\u0021\u003d\u0020\u0025\u0064\u0029",_eaafe .Len (),_aed .Len ());
return false ;};for _be :=0;_be < _eaafe .Len ();_be ++{_faf :=_bg .TraceToDirectObject (_eaafe .Get (_be ));_cdb :=_bg .TraceToDirectObject (_aed .Get (_be ));if _dba ,_edd :=_faf .(*_bg .PdfObjectDictionary );_edd {_acb ,_adg :=_cdb .(*_bg .PdfObjectDictionary );
if !_adg {return false ;};if !CompareDictionariesDeep (_dba ,_acb ){return false ;};}else {if _faf .WriteString ()!=_cdb .WriteString (){_ee .Log .Debug ("M\u0069\u0073\u006d\u0061tc\u0068 \u0027\u0025\u0073\u0027\u0020!\u003d\u0020\u0027\u0025\u0073\u0027",_faf .WriteString (),_cdb .WriteString ());
return false ;};};};continue ;};if _aec .String ()!=_bda .String (){_ee .Log .Debug ("\u006b\u0065y\u003d\u0025\u0073\u0020\u004d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0021\u0020\u0027\u0025\u0073\u0027\u0020\u0021\u003d\u0020'%\u0073\u0027",_ab ,_aec .String (),_bda .String ());
_ee .Log .Debug ("\u0046o\u0072 \u0027\u0025\u0054\u0027\u0020\u002d\u0020\u0027\u0025\u0054\u0027",_aec ,_bda );_ee .Log .Debug ("\u0046\u006f\u0072\u0020\u0027\u0025\u002b\u0076\u0027\u0020\u002d\u0020'\u0025\u002b\u0076\u0027",_aec ,_bda );return false ;
};};return true ;};func RenderPDFToPNGs (pdfPath string ,dpi int ,outpathTpl string )error {if dpi <=0{dpi =100;};if _ ,_cec :=_bb .LookPath ("\u0067\u0073");_cec !=nil {return ErrRenderNotSupported ;};return _bb .Command ("\u0067\u0073","\u002d\u0073\u0044\u0045\u0056\u0049\u0043\u0045\u003d\u0070\u006e\u0067a\u006c\u0070\u0068\u0061","\u002d\u006f",outpathTpl ,_bf .Sprintf ("\u002d\u0072\u0025\u0064",dpi ),pdfPath ).Run ();
};func ReadPNG (file string )(_ecc .Image ,error ){_eb ,_gb :=_f .Open (file );if _gb !=nil {return nil ,_gb ;};defer _eb .Close ();return _ec .Decode (_eb );};func _fa (_dd _bg .PdfObject ,_bbe map[int64 ]_bg .PdfObject )error {switch _eeg :=_dd .(type ){case *_bg .PdfIndirectObject :_agf :=_eeg ;
_fa (_agf .PdfObject ,_bbe );case *_bg .PdfObjectDictionary :_ffa :=_eeg ;for _ ,_cece :=range _ffa .Keys (){_fff :=_ffa .Get (_cece );if _gde ,_eab :=_fff .(*_bg .PdfObjectReference );_eab {_fag ,_gad :=_bbe [_gde .ObjectNumber ];if !_gad {return _gg .New ("r\u0065\u0066\u0065\u0072\u0065\u006ec\u0065\u0020\u0074\u006f\u0020\u006f\u0075\u0074\u0073i\u0064\u0065\u0020o\u0062j\u0065\u0063\u0074");
};_ffa .Set (_cece ,_fag );}else {_fa (_fff ,_bbe );};};case *_bg .PdfObjectArray :_fdb :=_eeg ;for _bdc ,_cc :=range _fdb .Elements (){if _ffdc ,_ceg :=_cc .(*_bg .PdfObjectReference );_ceg {_db ,_feda :=_bbe [_ffdc .ObjectNumber ];if !_feda {return _gg .New ("r\u0065\u0066\u0065\u0072\u0065\u006ec\u0065\u0020\u0074\u006f\u0020\u006f\u0075\u0074\u0073i\u0064\u0065\u0020o\u0062j\u0065\u0063\u0074");
};_fdb .Set (_bdc ,_db );}else {_fa (_cc ,_bbe );};};};return nil ;};func CompareImages (img1 ,img2 _ecc .Image )(bool ,error ){_ece :=img1 .Bounds ();_ea :=0;for _ae :=0;_ae < _ece .Size ().X ;_ae ++{for _eaa :=0;_eaa < _ece .Size ().Y ;_eaa ++{_eef ,_ag ,_eg ,_ :=img1 .At (_ae ,_eaa ).RGBA ();
_bbc ,_egf ,_fed ,_ :=img2 .At (_ae ,_eaa ).RGBA ();if _eef !=_bbc ||_ag !=_egf ||_eg !=_fed {_ea ++;};};};_gf :=float64 (_ea )/float64 (_ece .Dx ()*_ece .Dy ());if _gf > 0.0001{_bf .Printf ("\u0064\u0069\u0066f \u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0064\u0029\u000a",_gf ,_ea );
return false ,nil ;};return true ,nil ;};func HashFile (file string )(string ,error ){_ed ,_gc :=_f .Open (file );if _gc !=nil {return "",_gc ;};defer _ed .Close ();_ff :=_e .New ();if _ ,_gc =_c .Copy (_ff ,_ed );_gc !=nil {return "",_gc ;};return _bd .EncodeToString (_ff .Sum (nil )),nil ;
};func ParseIndirectObjects (rawpdf string )(map[int64 ]_bg .PdfObject ,error ){_dc :=_bg .NewParserFromString (rawpdf );_efb :=map[int64 ]_bg .PdfObject {};for {_adb ,_aca :=_dc .ParseIndirectObject ();if _aca !=nil {if _aca ==_c .EOF {break ;};return nil ,_aca ;
};switch _dcg :=_adb .(type ){case *_bg .PdfIndirectObject :_efb [_dcg .ObjectNumber ]=_adb ;case *_bg .PdfObjectStream :_efb [_dcg .ObjectNumber ]=_adb ;};};for _ ,_bae :=range _efb {_fa (_bae ,_efb );};return _efb ,nil ;};func RunRenderTest (t *_d .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ){_fec :=_b .TrimSuffix (_a .Base (pdfPath ),_a .Ext (pdfPath ));
t .Run ("\u0072\u0065\u006e\u0064\u0065\u0072",func (_gdd *_d .T ){_ba :=_a .Join (outputDir ,_fec );_ge :=_ba +"\u002d%\u0064\u002e\u0070\u006e\u0067";if _ecca :=RenderPDFToPNGs (pdfPath ,0,_ge );_ecca !=nil {_gdd .Skip (_ecca );};for _ga :=1;true ;_ga ++{_eac :=_bf .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_ba ,_ga );
_fdf :=_a .Join (baselineRenderPath ,_bf .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_fec ,_ga ));if _ ,_bad :=_f .Stat (_eac );_bad !=nil {break ;};_gdd .Logf ("\u0025\u0073",_fdf );if saveBaseline {_gdd .Logf ("\u0043\u006fp\u0079\u0069\u006eg\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_eac ,_fdf );
_cf :=CopyFile (_eac ,_fdf );if _cf !=nil {_gdd .Fatalf ("\u0045\u0052\u0052OR\u0020\u0063\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_fdf ,_cf );};continue ;};_gdd .Run (_bf .Sprintf ("\u0070\u0061\u0067\u0065\u0025\u0064",_ga ),func (_cd *_d .T ){_cd .Logf ("\u0043o\u006dp\u0061\u0072\u0069\u006e\u0067 \u0025\u0073 \u0076\u0073\u0020\u0025\u0073",_eac ,_fdf );
_ac ,_cdd :=ComparePNGFiles (_eac ,_fdf );if _f .IsNotExist (_cdd ){_cd .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_ac {_cd .Fatal ("\u0077\u0072\u006f\u006eg \u0070\u0061\u0067\u0065\u0020\u0072\u0065\u006e\u0064\u0065\u0072\u0065\u0064");
};});};});};