//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_e "encoding/binary";_ag "errors";_eg "fmt";_ca "github.com/unidoc/unipdf/v3/common";_ae "github.com/unidoc/unipdf/v3/internal/bitwise";_ad "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_g "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_df "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_de "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_fg "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_fb "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_cb "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_bf "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_be "golang.org/x/xerrors";_c "image";_b "io";_f "math";_fa "strings";_d "time";);func (_gff *template1 )setIndex (_cae *_df .DecoderStats ){_cae .SetIndex (0x080)};
func (_ccgc *PageInformationSegment )readWidthAndHeight ()error {_efaeg ,_bgba :=_ccgc ._gacd .ReadBits (32);if _bgba !=nil {return _bgba ;};_ccgc .PageBMWidth =int (_efaeg &_f .MaxInt32 );_efaeg ,_bgba =_ccgc ._gacd .ReadBits (32);if _bgba !=nil {return _bgba ;
};_ccgc .PageBMHeight =int (_efaeg &_f .MaxInt32 );return nil ;};func (_fceac *TableSegment )HtLow ()int32 {return _fceac ._gddd };func (_dab *HalftoneRegion )checkInput ()error {if _dab .IsMMREncoded {if _dab .HTemplate !=0{_ca .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_dab .HTemplate );
};if _dab .HSkipEnabled {_ca .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_dab .HSkipEnabled );
};};return nil ;};func (_faafa *SymbolDictionary )addSymbol (_edeb Regioner )error {_eegg ,_efcf :=_edeb .GetRegionBitmap ();if _efcf !=nil {return _efcf ;};_faafa ._gegce [_faafa ._bcac ]=_eegg ;_faafa ._ccag =append (_faafa ._ccag ,_eegg );_ca .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_eegg );
return nil ;};func (_gde *SymbolDictionary )setCodingStatistics ()error {if _gde ._ffea ==nil {_gde ._ffea =_df .NewStats (512,1);};if _gde ._cacbe ==nil {_gde ._cacbe =_df .NewStats (512,1);};if _gde ._acfff ==nil {_gde ._acfff =_df .NewStats (512,1);
};if _gde ._fged ==nil {_gde ._fged =_df .NewStats (512,1);};if _gde ._afcg ==nil {_gde ._afcg =_df .NewStats (512,1);};if _gde .UseRefinementAggregation &&_gde ._dfed ==nil {_gde ._dfed =_df .NewStats (1<<uint (_gde ._geece ),1);_gde ._cdcf =_df .NewStats (512,1);
_gde ._effa =_df .NewStats (512,1);};if _gde ._fgba ==nil {_gde ._fgba =_df .NewStats (65536,1);};if _gde ._dagg ==nil {var _eccc error ;_gde ._dagg ,_eccc =_df .New (_gde ._bfca );if _eccc !=nil {return _eccc ;};};return nil ;};func (_bbgb *TableSegment )StreamReader ()_ae .StreamReader {return _bbgb ._cbb };
func (_caaa *PatternDictionary )extractPatterns (_gffd *_g .Bitmap )error {var _cca int ;_gegc :=make ([]*_g .Bitmap ,_caaa .GrayMax +1);for _cca <=int (_caaa .GrayMax ){_fbb :=int (_caaa .HdpWidth )*_cca ;_ddccd :=_c .Rect (_fbb ,0,_fbb +int (_caaa .HdpWidth ),int (_caaa .HdpHeight ));
_dbag ,_bfdd :=_g .Extract (_ddccd ,_gffd );if _bfdd !=nil {return _bfdd ;};_gegc [_cca ]=_dbag ;_cca ++;};_caaa .Patterns =_gegc ;return nil ;};func (_cgbba *TextRegion )readHuffmanFlags ()error {var (_cedd int ;_ecgb uint64 ;_fcgc error ;);_ ,_fcgc =_cgbba ._cbgc .ReadBit ();
if _fcgc !=nil {return _fcgc ;};_cedd ,_fcgc =_cgbba ._cbgc .ReadBit ();if _fcgc !=nil {return _fcgc ;};_cgbba .SbHuffRSize =int8 (_cedd );_ecgb ,_fcgc =_cgbba ._cbgc .ReadBits (2);if _fcgc !=nil {return _fcgc ;};_cgbba .SbHuffRDY =int8 (_ecgb )&0xf;_ecgb ,_fcgc =_cgbba ._cbgc .ReadBits (2);
if _fcgc !=nil {return _fcgc ;};_cgbba .SbHuffRDX =int8 (_ecgb )&0xf;_ecgb ,_fcgc =_cgbba ._cbgc .ReadBits (2);if _fcgc !=nil {return _fcgc ;};_cgbba .SbHuffRDHeight =int8 (_ecgb )&0xf;_ecgb ,_fcgc =_cgbba ._cbgc .ReadBits (2);if _fcgc !=nil {return _fcgc ;
};_cgbba .SbHuffRDWidth =int8 (_ecgb )&0xf;_ecgb ,_fcgc =_cgbba ._cbgc .ReadBits (2);if _fcgc !=nil {return _fcgc ;};_cgbba .SbHuffDT =int8 (_ecgb )&0xf;_ecgb ,_fcgc =_cgbba ._cbgc .ReadBits (2);if _fcgc !=nil {return _fcgc ;};_cgbba .SbHuffDS =int8 (_ecgb )&0xf;
_ecgb ,_fcgc =_cgbba ._cbgc .ReadBits (2);if _fcgc !=nil {return _fcgc ;};_cgbba .SbHuffFS =int8 (_ecgb )&0xf;return nil ;};func (_ga *EndOfStripe )parseHeader (_dec *Header ,_bb _ae .StreamReader )error {_feg ,_gag :=_ga ._aec .ReadBits (32);if _gag !=nil {return _gag ;
};_ga ._gf =int (_feg &_f .MaxInt32 );return nil ;};func (_gaec *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_eccf int ;_fdadb int32 ;_bbf error ;_bea =int32 (_gaec ._dfe +_gaec .NumberOfNewSymbols );_dedg =make ([]int ,_bea ););for _fdca :=int32 (0);
_fdca < _bea ;_fdca +=_fdadb {if _gaec .IsHuffmanEncoded {_bagbf ,_bcgb :=_de .GetStandardTable (1);if _bcgb !=nil {return nil ,_bcgb ;};_ccdb ,_bcgb :=_bagbf .Decode (_gaec ._bfca );if _bcgb !=nil {return nil ,_bcgb ;};_fdadb =int32 (_ccdb );}else {_fdadb ,_bbf =_gaec ._dagg .DecodeInt (_gaec ._afcg );
if _bbf !=nil {return nil ,_bbf ;};};if _fdadb !=0{for _dbef :=_fdca ;_dbef < _fdca +_fdadb ;_dbef ++{_dedg [_dbef ]=_eccf ;};};if _eccf ==0{_eccf =1;}else {_eccf =0;};};return _dedg ,nil ;};func (_cfbf *Header )readSegmentDataLength (_gdd _ae .StreamReader )(_ggca error ){_cfbf .SegmentDataLength ,_ggca =_gdd .ReadBits (32);
if _ggca !=nil {return _ggca ;};_cfbf .SegmentDataLength &=_f .MaxInt32 ;return nil ;};func (_febb *TextRegion )Encode (w _ae .BinaryWriter )(_bcfb int ,_faga error ){const _fdegce ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _bcfb ,_faga =_febb .RegionInfo .Encode (w );_faga !=nil {return _bcfb ,_cb .Wrap (_faga ,_fdegce ,"");};var _ebacb int ;if _ebacb ,_faga =_febb .encodeFlags (w );_faga !=nil {return _bcfb ,_cb .Wrap (_faga ,_fdegce ,"");};_bcfb +=_ebacb ;if _ebacb ,_faga =_febb .encodeSymbols (w );
_faga !=nil {return _bcfb ,_cb .Wrap (_faga ,_fdegce ,"");};_bcfb +=_ebacb ;return _bcfb ,nil ;};func (_fdec *HalftoneRegion )computeSegmentDataStructure ()error {_fdec .DataOffset =_fdec ._dgdf .StreamPosition ();_fdec .DataHeaderLength =_fdec .DataOffset -_fdec .DataHeaderOffset ;
_fdec .DataLength =int64 (_fdec ._dgdf .Length ())-_fdec .DataHeaderLength ;return nil ;};func _agbb (_ecb _ae .StreamReader ,_dfa *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_aa :_ecb ,RegionInfo :NewRegionSegment (_ecb ),_cd :_dfa ,_eb :&template0 {},_ea :&template1 {}};
};func (_afgbc *SymbolDictionary )Encode (w _ae .BinaryWriter )(_dadgd int ,_dagf error ){const _eeec ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _afgbc ==nil {return 0,_cb .Error (_eeec ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");
};if _dadgd ,_dagf =_afgbc .encodeFlags (w );_dagf !=nil {return _dadgd ,_cb .Wrap (_dagf ,_eeec ,"");};_acec ,_dagf :=_afgbc .encodeATFlags (w );if _dagf !=nil {return _dadgd ,_cb .Wrap (_dagf ,_eeec ,"");};_dadgd +=_acec ;if _acec ,_dagf =_afgbc .encodeRefinementATFlags (w );
_dagf !=nil {return _dadgd ,_cb .Wrap (_dagf ,_eeec ,"");};_dadgd +=_acec ;if _acec ,_dagf =_afgbc .encodeNumSyms (w );_dagf !=nil {return _dadgd ,_cb .Wrap (_dagf ,_eeec ,"");};_dadgd +=_acec ;if _acec ,_dagf =_afgbc .encodeSymbols (w );_dagf !=nil {return _dadgd ,_cb .Wrap (_dagf ,_eeec ,"");
};_dadgd +=_acec ;return _dadgd ,nil ;};func (_adgg *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_bgbf ,_gfdg :=_adgg ._gacd .ReadBit ();if _gfdg !=nil {return _gfdg ;};if _bgbf ==1{_adgg ._eaff =true ;};return nil ;};func (_cge *GenericRefinementRegion )setParameters (_daee *_df .DecoderStats ,_ede *_df .Decoder ,_dcb int8 ,_eeb ,_eaa uint32 ,_gaga *_g .Bitmap ,_eed ,_eedd int32 ,_ecg bool ,_abe []int8 ,_bfef []int8 ){_ca .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _daee !=nil {_cge ._ebg =_daee ;};if _ede !=nil {_cge ._ebd =_ede ;};_cge .TemplateID =_dcb ;_cge .RegionInfo .BitmapWidth =_eeb ;_cge .RegionInfo .BitmapHeight =_eaa ;_cge .ReferenceBitmap =_gaga ;_cge .ReferenceDX =_eed ;_cge .ReferenceDY =_eedd ;
_cge .IsTPGROn =_ecg ;_cge .GrAtX =_abe ;_cge .GrAtY =_bfef ;_cge .RegionBitmap =nil ;_ca .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_cge );
};func (_adbb *Header )subInputReader ()(_ae .StreamReader ,error ){return _ae .NewSubstreamReader (_adbb .Reader ,_adbb .SegmentDataStartOffset ,_adbb .SegmentDataLength );};func (_fedc *TextRegion )createRegionBitmap ()error {_fedc .RegionBitmap =_g .New (int (_fedc .RegionInfo .BitmapWidth ),int (_fedc .RegionInfo .BitmapHeight ));
if _fedc .DefaultPixel !=0{_fedc .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_cabge *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _cabge .IsHuffmanEncoded {switch _cabge .SdHuffDecodeWidthSelection {case 0:_faf ,_dfaf :=_de .GetStandardTable (2);
if _dfaf !=nil {return 0,_dfaf ;};return _faf .Decode (_cabge ._bfca );case 1:_bdcfb ,_cfga :=_de .GetStandardTable (3);if _cfga !=nil {return 0,_cfga ;};return _bdcfb .Decode (_cabge ._bfca );case 3:if _cabge ._abgd ==nil {var _fff int ;if _cabge .SdHuffDecodeHeightSelection ==3{_fff ++;
};_geae ,_agecg :=_cabge .getUserTable (_fff );if _agecg !=nil {return 0,_agecg ;};_cabge ._abgd =_geae ;};return _cabge ._abgd .Decode (_cabge ._bfca );};}else {_ded ,_abff :=_cabge ._dagg .DecodeInt (_cabge ._acfff );if _abff !=nil {return 0,_abff ;};
return int64 (_ded ),nil ;};return 0,nil ;};type EndOfStripe struct{_aec _ae .StreamReader ;_gf int ;};func (_ecgg *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_cege ,_eeccf :=_ecgg ._gacd .ReadBit ();if _eeccf !=nil {return _eeccf ;
};if _cege ==1{_ecgg ._dgee =true ;};return nil ;};func (_acd *GenericRegion )getPixel (_cea ,_dca int )int8 {if _cea < 0||_cea >=_acd .Bitmap .Width {return 0;};if _dca < 0||_dca >=_acd .Bitmap .Height {return 0;};if _acd .Bitmap .GetPixel (_cea ,_dca ){return 1;
};return 0;};func (_cfd *Header )readNumberOfReferredToSegments (_daff _ae .StreamReader )(uint64 ,error ){const _gbg ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_bccb ,_ffgg :=_daff .ReadBits (3);if _ffgg !=nil {return 0,_cb .Wrap (_ffgg ,_gbg ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_bccb &=0xf;var _afa []byte ;if _bccb <=4{_afa =make ([]byte ,5);for _eecc :=0;_eecc <=4;_eecc ++{_ffec ,_ebga :=_daff .ReadBit ();
if _ebga !=nil {return 0,_cb .Wrap (_ebga ,_gbg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_afa [_eecc ]=byte (_ffec );};}else {_bccb ,_ffgg =_daff .ReadBits (29);if _ffgg !=nil {return 0,_ffgg ;};_bccb &=_f .MaxInt32 ;_fee :=(_bccb +8)>>3;
_fee <<=3;_afa =make ([]byte ,_fee );var _gffbd uint64 ;for _gffbd =0;_gffbd < _fee ;_gffbd ++{_bed ,_agfg :=_daff .ReadBit ();if _agfg !=nil {return 0,_cb .Wrap (_agfg ,_gbg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_afa [_gffbd ]=byte (_bed );
};};return _bccb ,nil ;};func (_fagc *GenericRefinementRegion )String ()string {_agce :=&_fa .Builder {};_agce .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_agce .WriteString (_fagc .RegionInfo .String ()+"\u000a");
_agce .WriteString (_eg .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fagc .IsTPGROn ));_agce .WriteString (_eg .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_fagc .TemplateID ));
_agce .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_fagc .GrAtX ));_agce .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_fagc .GrAtY ));
_agce .WriteString (_eg .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_fagc .ReferenceDX ));_agce .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_fagc .ReferenceDY ));
return _agce .String ();};func (_adcg *PageInformationSegment )encodeStripingInformation (_fgcc _ae .BinaryWriter )(_aggd int ,_fdgf error ){const _aefb ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_adcg .IsStripe {if _aggd ,_fdgf =_fgcc .Write ([]byte {0x00,0x00});_fdgf !=nil {return 0,_cb .Wrap (_fdgf ,_aefb ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _aggd ,nil ;};_cad :=make ([]byte ,2);_e .BigEndian .PutUint16 (_cad ,_adcg .MaxStripeSize |1<<15);
if _aggd ,_fdgf =_fgcc .Write (_cad );_fdgf !=nil {return 0,_cb .Wrapf (_fdgf ,_aefb ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_adcg .MaxStripeSize );};return _aggd ,nil ;};func (_bbba *PageInformationSegment )readCombinationOperator ()error {_fgeg ,_becbg :=_bbba ._gacd .ReadBits (2);
if _becbg !=nil {return _becbg ;};_bbba ._cfg =_g .CombinationOperator (int (_fgeg ));return nil ;};func (_aead *SymbolDictionary )setExportedSymbols (_agdbg []int ){for _eebc :=uint32 (0);_eebc < _aead ._dfe +_aead .NumberOfNewSymbols ;_eebc ++{if _agdbg [_eebc ]==1{var _abfe *_g .Bitmap ;
if _eebc < _aead ._dfe {_abfe =_aead ._ebeab [_eebc ];}else {_abfe =_aead ._gegce [_eebc -_aead ._dfe ];};_ca .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_abfe );
_aead ._daba =append (_aead ._daba ,_abfe );};};};func (_bedc *PageInformationSegment )Size ()int {return 19};func (_feaba *SymbolDictionary )readNumberOfExportedSymbols ()error {_deca ,_feba :=_feaba ._bfca .ReadBits (32);if _feba !=nil {return _feba ;
};_feaba .NumberOfExportedSymbols =uint32 (_deca &_f .MaxUint32 );return nil ;};func (_bgda *SymbolDictionary )encodeRefinementATFlags (_abgg _ae .BinaryWriter )(_gcca int ,_gdfb error ){const _bgea ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_bgda .UseRefinementAggregation ||_bgda .SdrTemplate !=0{return 0,nil ;};for _fea :=0;_fea < 2;_fea ++{if _gdfb =_abgg .WriteByte (byte (_bgda .SdrATX [_fea ]));_gdfb !=nil {return _gcca ,_cb .Wrapf (_gdfb ,_bgea ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_fea );
};_gcca ++;if _gdfb =_abgg .WriteByte (byte (_bgda .SdrATY [_fea ]));_gdfb !=nil {return _gcca ,_cb .Wrapf (_gdfb ,_bgea ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_fea );};_gcca ++;};return _gcca ,nil ;};func (_dae *GenericRefinementRegion )overrideAtTemplate0 (_edaa ,_ffd ,_ead ,_bcb ,_debc int )int {if _dae ._ee [0]{_edaa &=0xfff7;
if _dae .GrAtY [0]==0&&int (_dae .GrAtX [0])>=-_debc {_edaa |=(_bcb >>uint (7-(_debc +int (_dae .GrAtX [0])))&0x1)<<3;}else {_edaa |=_dae .getPixel (_dae .RegionBitmap ,_ffd +int (_dae .GrAtX [0]),_ead +int (_dae .GrAtY [0]))<<3;};};if _dae ._ee [1]{_edaa &=0xefff;
if _dae .GrAtY [1]==0&&int (_dae .GrAtX [1])>=-_debc {_edaa |=(_bcb >>uint (7-(_debc +int (_dae .GrAtX [1])))&0x1)<<12;}else {_edaa |=_dae .getPixel (_dae .ReferenceBitmap ,_ffd +int (_dae .GrAtX [1]),_ead +int (_dae .GrAtY [1]));};};return _edaa ;};func (_acggd *PageInformationSegment )readDefaultPixelValue ()error {_gebde ,_cabc :=_acggd ._gacd .ReadBit ();
if _cabc !=nil {return _cabc ;};_acggd .DefaultPixelValue =uint8 (_gebde &0xf);return nil ;};var _ templater =&template0 {};func (_ggcaa *Header )writeReferredToSegments (_eaef _ae .BinaryWriter )(_bfa int ,_fgca error ){const _dffbb ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_ddcc uint16 ;_aebg uint32 ;);_afcb :=_ggcaa .referenceSize ();_bcfae :=1;_dcf :=make ([]byte ,_afcb );for _ ,_bbdc :=range _ggcaa .RTSNumbers {switch _afcb {case 4:_aebg =uint32 (_bbdc );_e .BigEndian .PutUint32 (_dcf ,_aebg );_bcfae ,_fgca =_eaef .Write (_dcf );
if _fgca !=nil {return 0,_cb .Wrap (_fgca ,_dffbb ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_ddcc =uint16 (_bbdc );_e .BigEndian .PutUint16 (_dcf ,_ddcc );_bcfae ,_fgca =_eaef .Write (_dcf );if _fgca !=nil {return 0,_cb .Wrap (_fgca ,_dffbb ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _fgca =_eaef .WriteByte (byte (_bbdc ));_fgca !=nil {return 0,_cb .Wrap (_fgca ,_dffbb ,"\u0075\u0069\u006et\u0038");};};_bfa +=_bcfae ;};return _bfa ,nil ;};func (_bfcb *PatternDictionary )setGbAtPixels (){if _bfcb .HDTemplate ==0{_bfcb .GBAtX =make ([]int8 ,4);
_bfcb .GBAtY =make ([]int8 ,4);_bfcb .GBAtX [0]=-int8 (_bfcb .HdpWidth );_bfcb .GBAtY [0]=0;_bfcb .GBAtX [1]=-3;_bfcb .GBAtY [1]=-1;_bfcb .GBAtX [2]=2;_bfcb .GBAtY [2]=-2;_bfcb .GBAtX [3]=-2;_bfcb .GBAtY [3]=-2;}else {_bfcb .GBAtX =[]int8 {-int8 (_bfcb .HdpWidth )};
_bfcb .GBAtY =[]int8 {0};};};func (_ecgeg *Header )readSegmentPageAssociation (_aeab Documenter ,_bad _ae .StreamReader ,_bgdg uint64 ,_dce ...int )(_gbbd error ){const _abc ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_ecgeg .PageAssociationFieldSize {_ffda ,_ffdg :=_bad .ReadBits (8);if _ffdg !=nil {return _cb .Wrap (_ffdg ,_abc ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ecgeg .PageAssociation =int (_ffda &0xFF);}else {_eaaff ,_fegae :=_bad .ReadBits (32);
if _fegae !=nil {return _cb .Wrap (_fegae ,_abc ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ecgeg .PageAssociation =int (_eaaff &_f .MaxInt32 );};if _bgdg ==0{return nil ;};if _ecgeg .PageAssociation !=0{_eddg ,_aag :=_aeab .GetPage (_ecgeg .PageAssociation );
if _aag !=nil {return _cb .Wrap (_aag ,_abc ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _ecfa int ;for _egd :=uint64 (0);_egd < _bgdg ;_egd ++{_ecfa =_dce [_egd ];_ecgeg .RTSegments [_egd ],_aag =_eddg .GetSegment (_ecfa );
if _aag !=nil {var _aff error ;_ecgeg .RTSegments [_egd ],_aff =_aeab .GetGlobalSegment (_ecfa );if _aff !=nil {return _cb .Wrapf (_aag ,_abc ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_ecgeg .PageAssociation );
};};};return nil ;};for _fgd :=uint64 (0);_fgd < _bgdg ;_fgd ++{_ecgeg .RTSegments [_fgd ],_gbbd =_aeab .GetGlobalSegment (_dce [_fgd ]);if _gbbd !=nil {return _cb .Wrapf (_gbbd ,_abc ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_dce [_fgd ]);
};};return nil ;};func (_fbdf *Header )readSegmentNumber (_afged _ae .StreamReader )error {const _bece ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_cacb :=make ([]byte ,4);_ ,_bgd :=_afged .Read (_cacb );
if _bgd !=nil {return _cb .Wrap (_bgd ,_bece ,"");};_fbdf .SegmentNumber =_e .BigEndian .Uint32 (_cacb );return nil ;};func (_agdd *GenericRegion )String ()string {_bef :=&_fa .Builder {};_bef .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_bef .WriteString (_agdd .RegionSegment .String ()+"\u000a");_bef .WriteString (_eg .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_agdd .UseExtTemplates ));_bef .WriteString (_eg .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_agdd .IsTPGDon ));
_bef .WriteString (_eg .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_agdd .GBTemplate ));_bef .WriteString (_eg .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_agdd .IsMMREncoded ));
_bef .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_agdd .GBAtX ));_bef .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_agdd .GBAtY ));
_bef .WriteString (_eg .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_agdd .GBAtOverride ));return _bef .String ();};func (_dac *GenericRegion )Encode (w _ae .BinaryWriter )(_eea int ,_dba error ){const _aefd ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _dac .Bitmap ==nil {return 0,_cb .Error (_aefd ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_aafb ,_dba :=_dac .RegionSegment .Encode (w );if _dba !=nil {return 0,_cb .Wrap (_dba ,_aefd ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_eea +=_aafb ;if _dba =w .SkipBits (4);_dba !=nil {return _eea ,_cb .Wrap (_dba ,_aefd ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _eba int ;if _dac .IsTPGDon {_eba =1;};if _dba =w .WriteBit (_eba );
_dba !=nil {return _eea ,_cb .Wrap (_dba ,_aefd ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_eba =0;if _dba =w .WriteBit (int (_dac .GBTemplate >>1)&0x01);_dba !=nil {return _eea ,_cb .Wrap (_dba ,_aefd ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _dba =w .WriteBit (int (_dac .GBTemplate )&0x01);_dba !=nil {return _eea ,_cb .Wrap (_dba ,_aefd ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _dac .UseMMR {_eba =1;};if _dba =w .WriteBit (_eba );
_dba !=nil {return _eea ,_cb .Wrap (_dba ,_aefd ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_eea ++;if _aafb ,_dba =_dac .writeGBAtPixels (w );_dba !=nil {return _eea ,_cb .Wrap (_dba ,_aefd ,"");};_eea +=_aafb ;_efd :=_fb .New ();
if _dba =_efd .EncodeBitmap (_dac .Bitmap ,_dac .IsTPGDon );_dba !=nil {return _eea ,_cb .Wrap (_dba ,_aefd ,"");};_efd .Final ();var _accg int64 ;if _accg ,_dba =_efd .WriteTo (w );_dba !=nil {return _eea ,_cb .Wrap (_dba ,_aefd ,"");};_eea +=int (_accg );
return _eea ,nil ;};func (_bbaff Type )String ()string {switch _bbaff {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_gaea *TextRegion )getSymbols ()error {if _gaea .Header .RTSegments !=nil {return _gaea .initSymbols ();
};return nil ;};func (_decb *GenericRegion )overrideAtTemplate3 (_abeg ,_bgf ,_gbf ,_dge ,_dcbg int )int {_abeg &=0x3EF;if _decb .GBAtY [0]==0&&_decb .GBAtX [0]>=-int8 (_dcbg ){_abeg |=(_dge >>uint (7-(int8 (_dcbg )+_decb .GBAtX [0]))&0x1)<<4;}else {_abeg |=int (_decb .getPixel (_bgf +int (_decb .GBAtX [0]),_gbf +int (_decb .GBAtY [0])))<<4;
};return _abeg ;};func (_gcgc *PageInformationSegment )checkInput ()error {if _gcgc .PageBMHeight ==_f .MaxInt32 {if !_gcgc .IsStripe {_ca .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_adcb *HalftoneRegion )GetRegionBitmap ()(*_g .Bitmap ,error ){if _adcb .HalftoneRegionBitmap !=nil {return _adcb .HalftoneRegionBitmap ,nil ;};var _bga error ;_adcb .HalftoneRegionBitmap =_g .New (int (_adcb .RegionSegment .BitmapWidth ),int (_adcb .RegionSegment .BitmapHeight ));
if _adcb .Patterns ==nil ||len (_adcb .Patterns )==0{_adcb .Patterns ,_bga =_adcb .GetPatterns ();if _bga !=nil {return nil ,_bga ;};};if _adcb .HDefaultPixel ==1{_adcb .HalftoneRegionBitmap .SetDefaultPixel ();};_dgb :=_f .Ceil (_f .Log (float64 (len (_adcb .Patterns )))/_f .Log (2));
_adee :=int (_dgb );var _ecbc [][]int ;_ecbc ,_bga =_adcb .grayScaleDecoding (_adee );if _bga !=nil {return nil ,_bga ;};if _bga =_adcb .renderPattern (_ecbc );_bga !=nil {return nil ,_bga ;};return _adcb .HalftoneRegionBitmap ,nil ;};func (_gefa *Header )readHeaderLength (_aefda _ae .StreamReader ,_ggb int64 ){_gefa .HeaderLength =_aefda .StreamPosition ()-_ggb ;
};var _ SegmentEncoder =&RegionSegment {};func (_aaebd *TextRegion )checkInput ()error {const _ffagb ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_aaebd .UseRefinement {if _aaebd .SbrTemplate !=0{_ca .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_aaebd .SbrTemplate =0;};};if _aaebd .SbHuffFS ==2||_aaebd .SbHuffRDWidth ==2||_aaebd .SbHuffRDHeight ==2||_aaebd .SbHuffRDX ==2||_aaebd .SbHuffRDY ==2{return _cb .Error (_ffagb ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_aaebd .UseRefinement {if _aaebd .SbHuffRSize !=0{_ca .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_aaebd .SbHuffRSize =0;};if _aaebd .SbHuffRDY !=0{_ca .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_aaebd .SbHuffRDY =0;};if _aaebd .SbHuffRDX !=0{_ca .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_aaebd .SbHuffRDX =0;};if _aaebd .SbHuffRDWidth !=0{_ca .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_aaebd .SbHuffRDWidth =0;};if _aaebd .SbHuffRDHeight !=0{_ca .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_aaebd .SbHuffRDHeight =0;};
};return nil ;};type PageInformationSegment struct{_gacd _ae .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_dgee bool ;_cfg _g .CombinationOperator ;_eaff bool ;DefaultPixelValue uint8 ;_fbdfe bool ;IsLossless bool ;
IsStripe bool ;MaxStripeSize uint16 ;};func (_gdde *SymbolDictionary )checkInput ()error {if _gdde .SdHuffDecodeHeightSelection ==2{_ca .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_gdde .SdHuffDecodeHeightSelection );
};if _gdde .SdHuffDecodeWidthSelection ==2{_ca .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_gdde .SdHuffDecodeWidthSelection );
};if _gdde .IsHuffmanEncoded {if _gdde .SdTemplate !=0{_ca .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_gdde .SdTemplate );
};if !_gdde .UseRefinementAggregation {if !_gdde .UseRefinementAggregation {if _gdde ._febg {_ca .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_gdde ._febg =false ;};if _gdde ._cdfa {_ca .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_gdde ._cdfa =false ;};};};}else {if _gdde .SdHuffBMSizeSelection !=0{_ca .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_gdde .SdHuffBMSizeSelection =0;};if _gdde .SdHuffDecodeWidthSelection !=0{_ca .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_gdde .SdHuffDecodeWidthSelection =0;};if _gdde .SdHuffDecodeHeightSelection !=0{_ca .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_gdde .SdHuffDecodeHeightSelection =0;};};if !_gdde .UseRefinementAggregation {if _gdde .SdrTemplate !=0{_ca .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_gdde .SdrTemplate );
_gdde .SdrTemplate =0;};};if !_gdde .IsHuffmanEncoded ||!_gdde .UseRefinementAggregation {if _gdde .SdHuffAggInstanceSelection {_ca .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_gdde .SdHuffAggInstanceSelection );
};};return nil ;};type PatternDictionary struct{_cbgf _ae .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;
Patterns []*_g .Bitmap ;GrayMax uint32 ;};type SymbolDictionary struct{_bfca _ae .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_febg bool ;_cdfa bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;
UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_dfe uint32 ;_ebeab []*_g .Bitmap ;_bcac uint32 ;_gegce []*_g .Bitmap ;
_fdecf _de .Tabler ;_abgd _de .Tabler ;_ddeg _de .Tabler ;_ddgda _de .Tabler ;_daba []*_g .Bitmap ;_ccag []*_g .Bitmap ;_dagg *_df .Decoder ;_egea *TextRegion ;_bcge *GenericRegion ;_bbdb *GenericRefinementRegion ;_fgba *_df .DecoderStats ;_cacbe *_df .DecoderStats ;
_acfff *_df .DecoderStats ;_fged *_df .DecoderStats ;_afcg *_df .DecoderStats ;_cdcf *_df .DecoderStats ;_effa *_df .DecoderStats ;_ffea *_df .DecoderStats ;_dfed *_df .DecoderStats ;_geece int8 ;_fdcc *_g .Bitmaps ;_bdcg []int ;_edbfe map[int ]int ;_bge bool ;
};func (_dfgf *GenericRegion )overrideAtTemplate0a (_acfg ,_bbbb ,_caa ,_egeg ,_ccbd ,_efa int )int {if _dfgf .GBAtOverride [0]{_acfg &=0xFFEF;if _dfgf .GBAtY [0]==0&&_dfgf .GBAtX [0]>=-int8 (_ccbd ){_acfg |=(_egeg >>uint (int8 (_efa )-_dfgf .GBAtX [0]&0x1))<<4;
}else {_acfg |=int (_dfgf .getPixel (_bbbb +int (_dfgf .GBAtX [0]),_caa +int (_dfgf .GBAtY [0])))<<4;};};if _dfgf .GBAtOverride [1]{_acfg &=0xFBFF;if _dfgf .GBAtY [1]==0&&_dfgf .GBAtX [1]>=-int8 (_ccbd ){_acfg |=(_egeg >>uint (int8 (_efa )-_dfgf .GBAtX [1]&0x1))<<10;
}else {_acfg |=int (_dfgf .getPixel (_bbbb +int (_dfgf .GBAtX [1]),_caa +int (_dfgf .GBAtY [1])))<<10;};};if _dfgf .GBAtOverride [2]{_acfg &=0xF7FF;if _dfgf .GBAtY [2]==0&&_dfgf .GBAtX [2]>=-int8 (_ccbd ){_acfg |=(_egeg >>uint (int8 (_efa )-_dfgf .GBAtX [2]&0x1))<<11;
}else {_acfg |=int (_dfgf .getPixel (_bbbb +int (_dfgf .GBAtX [2]),_caa +int (_dfgf .GBAtY [2])))<<11;};};if _dfgf .GBAtOverride [3]{_acfg &=0x7FFF;if _dfgf .GBAtY [3]==0&&_dfgf .GBAtX [3]>=-int8 (_ccbd ){_acfg |=(_egeg >>uint (int8 (_efa )-_dfgf .GBAtX [3]&0x1))<<15;
}else {_acfg |=int (_dfgf .getPixel (_bbbb +int (_dfgf .GBAtX [3]),_caa +int (_dfgf .GBAtY [3])))<<15;};};return _acfg ;};func (_ecc *GenericRegion )InitEncode (bm *_g .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _aeg ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _cb .Error (_aeg ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _cb .Error (_aeg ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_ecc .Bitmap =bm ;_ecc .GBTemplate =byte (template );switch _ecc .GBTemplate {case 0:_ecc .GBAtX =[]int8 {3,-3,2,-2};_ecc .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_ecc .GBAtX =[]int8 {3};_ecc .GBAtY =[]int8 {-1};case 2,3:_ecc .GBAtX =[]int8 {2};_ecc .GBAtY =[]int8 {-1};
default:return _cb .Errorf (_aeg ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_ecc .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_ecc .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_cga *SymbolDictionary )GetDictionary ()([]*_g .Bitmap ,error ){_ca .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_ca .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_ca .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_cga ._daba ,_cga ._gegce );
}();if _cga ._daba ==nil {var _cgcb error ;if _cga .UseRefinementAggregation {_cga ._geece =_cga .getSbSymCodeLen ();};if !_cga .IsHuffmanEncoded {if _cgcb =_cga .setCodingStatistics ();_cgcb !=nil {return nil ,_cgcb ;};};_cga ._gegce =make ([]*_g .Bitmap ,_cga .NumberOfNewSymbols );
var _cdfg []int ;if _cga .IsHuffmanEncoded &&!_cga .UseRefinementAggregation {_cdfg =make ([]int ,_cga .NumberOfNewSymbols );};if _cgcb =_cga .setSymbolsArray ();_cgcb !=nil {return nil ,_cgcb ;};var _abdcf ,_dfgbe int64 ;_cga ._bcac =0;for _cga ._bcac < _cga .NumberOfNewSymbols {_dfgbe ,_cgcb =_cga .decodeHeightClassDeltaHeight ();
if _cgcb !=nil {return nil ,_cgcb ;};_abdcf +=_dfgbe ;var _ddcf ,_aggb uint32 ;_bfgf :=int64 (_cga ._bcac );for {var _aegd int64 ;_aegd ,_cgcb =_cga .decodeDifferenceWidth ();if _be .Is (_cgcb ,_bf .ErrOOB ){break ;};if _cgcb !=nil {return nil ,_cgcb ;
};if _cga ._bcac >=_cga .NumberOfNewSymbols {break ;};_ddcf +=uint32 (_aegd );_aggb +=_ddcf ;if !_cga .IsHuffmanEncoded ||_cga .UseRefinementAggregation {if !_cga .UseRefinementAggregation {_cgcb =_cga .decodeDirectlyThroughGenericRegion (_ddcf ,uint32 (_abdcf ));
if _cgcb !=nil {return nil ,_cgcb ;};}else {_cgcb =_cga .decodeAggregate (_ddcf ,uint32 (_abdcf ));if _cgcb !=nil {return nil ,_cgcb ;};};}else if _cga .IsHuffmanEncoded &&!_cga .UseRefinementAggregation {_cdfg [_cga ._bcac ]=int (_ddcf );};_cga ._bcac ++;
};if _cga .IsHuffmanEncoded &&!_cga .UseRefinementAggregation {var _eca int64 ;if _cga .SdHuffBMSizeSelection ==0{var _facc _de .Tabler ;_facc ,_cgcb =_de .GetStandardTable (1);if _cgcb !=nil {return nil ,_cgcb ;};_eca ,_cgcb =_facc .Decode (_cga ._bfca );
if _cgcb !=nil {return nil ,_cgcb ;};}else {_eca ,_cgcb =_cga .huffDecodeBmSize ();if _cgcb !=nil {return nil ,_cgcb ;};};_cga ._bfca .Align ();var _ccfc *_g .Bitmap ;_ccfc ,_cgcb =_cga .decodeHeightClassCollectiveBitmap (_eca ,uint32 (_abdcf ),_aggb );
if _cgcb !=nil {return nil ,_cgcb ;};_cgcb =_cga .decodeHeightClassBitmap (_ccfc ,_bfgf ,int (_abdcf ),_cdfg );if _cgcb !=nil {return nil ,_cgcb ;};};};_fbcg ,_cgcb :=_cga .getToExportFlags ();if _cgcb !=nil {return nil ,_cgcb ;};_cga .setExportedSymbols (_fbcg );
};return _cga ._daba ,nil ;};func (_bffb *GenericRegion )setOverrideFlag (_ebaf int ){_bffb .GBAtOverride [_ebaf ]=true ;_bffb ._acf =true ;};func (_gebc *TextRegion )decodeRdy ()(int64 ,error ){const _gge ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";
if _gebc .IsHuffmanEncoded {if _gebc .SbHuffRDY ==3{if _gebc ._debce ==nil {var (_ddge int ;_dedb error ;);if _gebc .SbHuffFS ==3{_ddge ++;};if _gebc .SbHuffDS ==3{_ddge ++;};if _gebc .SbHuffDT ==3{_ddge ++;};if _gebc .SbHuffRDWidth ==3{_ddge ++;};if _gebc .SbHuffRDHeight ==3{_ddge ++;
};if _gebc .SbHuffRDX ==3{_ddge ++;};_gebc ._debce ,_dedb =_gebc .getUserTable (_ddge );if _dedb !=nil {return 0,_cb .Wrap (_dedb ,_gge ,"");};};return _gebc ._debce .Decode (_gebc ._cbgc );};_deac ,_gbdbb :=_de .GetStandardTable (14+int (_gebc .SbHuffRDY ));
if _gbdbb !=nil {return 0,_gbdbb ;};return _deac .Decode (_gebc ._cbgc );};_bbee ,_dbcb :=_gebc ._fdaa .DecodeInt (_gebc ._dgdg );if _dbcb !=nil {return 0,_cb .Wrap (_dbcb ,_gge ,"");};return int64 (_bbee ),nil ;};func (_dgdb *TextRegion )decodeRdx ()(int64 ,error ){const _aeadb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _dgdb .IsHuffmanEncoded {if _dgdb .SbHuffRDX ==3{if _dgdb ._cafg ==nil {var (_fegc int ;_aafab error ;);if _dgdb .SbHuffFS ==3{_fegc ++;};if _dgdb .SbHuffDS ==3{_fegc ++;};if _dgdb .SbHuffDT ==3{_fegc ++;};if _dgdb .SbHuffRDWidth ==3{_fegc ++;};if _dgdb .SbHuffRDHeight ==3{_fegc ++;
};_dgdb ._cafg ,_aafab =_dgdb .getUserTable (_fegc );if _aafab !=nil {return 0,_cb .Wrap (_aafab ,_aeadb ,"");};};return _dgdb ._cafg .Decode (_dgdb ._cbgc );};_adge ,_aece :=_de .GetStandardTable (14+int (_dgdb .SbHuffRDX ));if _aece !=nil {return 0,_cb .Wrap (_aece ,_aeadb ,"");
};return _adge .Decode (_dgdb ._cbgc );};_dcfdg ,_fbed :=_dgdb ._fdaa .DecodeInt (_dgdb ._dedc );if _fbed !=nil {return 0,_cb .Wrap (_fbed ,_aeadb ,"");};return int64 (_dcfdg ),nil ;};func (_cfff *PatternDictionary )parseHeader ()error {_ca .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_ca .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_edbf :=_cfff ._cbgf .ReadBits (5);if _edbf !=nil {return _edbf ;};if _edbf =_cfff .readTemplate ();_edbf !=nil {return _edbf ;};if _edbf =_cfff .readIsMMREncoded ();_edbf !=nil {return _edbf ;};if _edbf =_cfff .readPatternWidthAndHeight ();_edbf !=nil {return _edbf ;
};if _edbf =_cfff .readGrayMax ();_edbf !=nil {return _edbf ;};if _edbf =_cfff .computeSegmentDataStructure ();_edbf !=nil {return _edbf ;};return _cfff .checkInput ();};func (_bagd *TextRegion )String ()string {_dedge :=&_fa .Builder {};_dedge .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_dedge .WriteString (_bagd .RegionInfo .String ()+"\u000a");_dedge .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_bagd .SbrTemplate ));_dedge .WriteString (_eg .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_bagd .SbDsOffset ));
_dedge .WriteString (_eg .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_bagd .DefaultPixel ));_dedge .WriteString (_eg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_bagd .CombinationOperator ));
_dedge .WriteString (_eg .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_bagd .IsTransposed ));_dedge .WriteString (_eg .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bagd .ReferenceCorner ));
_dedge .WriteString (_eg .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_bagd .UseRefinement ));_dedge .WriteString (_eg .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_bagd .IsHuffmanEncoded ));
if _bagd .IsHuffmanEncoded {_dedge .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bagd .SbHuffRSize ));_dedge .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_bagd .SbHuffRDY ));
_dedge .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_bagd .SbHuffRDX ));_dedge .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_bagd .SbHuffRDHeight ));
_dedge .WriteString (_eg .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_bagd .SbHuffRDWidth ));_dedge .WriteString (_eg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_bagd .SbHuffDT ));
_dedge .WriteString (_eg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_bagd .SbHuffDS ));_dedge .WriteString (_eg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_bagd .SbHuffFS ));
};_dedge .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bagd .SbrATX ));_dedge .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_bagd .SbrATY ));
_dedge .WriteString (_eg .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bagd .NumberOfSymbolInstances ));_dedge .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bagd .SbrATX ));
return _dedge .String ();};func (_fgbe *GenericRegion )decodeTemplate3 (_aedf ,_gcc ,_fbdc int ,_fcbb ,_fda int )(_eafb error ){const _fbce ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_beg ,_bbc int ;_cag int ;
_bbg byte ;_bfda ,_geab int ;);if _aedf >=1{_bbg ,_eafb =_fgbe .Bitmap .GetByte (_fda );if _eafb !=nil {return _cb .Wrap (_eafb ,_fbce ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cag =int (_bbg );};_beg =(_cag >>1)&0x70;for _bagb :=0;_bagb < _fbdc ;
_bagb =_bfda {var (_gafa byte ;_fbcb int ;);_bfda =_bagb +8;if _dffc :=_gcc -_bagb ;_dffc > 8{_fbcb =8;}else {_fbcb =_dffc ;};if _aedf >=1{_cag <<=8;if _bfda < _gcc {_bbg ,_eafb =_fgbe .Bitmap .GetByte (_fda +1);if _eafb !=nil {return _cb .Wrap (_eafb ,_fbce ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_cag |=int (_bbg );};};for _bgg :=0;_bgg < _fbcb ;_bgg ++{if _fgbe ._acf {_bbc =_fgbe .overrideAtTemplate3 (_beg ,_bagb +_bgg ,_aedf ,int (_gafa ),_bgg );_fgbe ._bbbd .SetIndex (int32 (_bbc ));}else {_fgbe ._bbbd .SetIndex (int32 (_beg ));};_geab ,_eafb =_fgbe ._abdc .DecodeBit (_fgbe ._bbbd );
if _eafb !=nil {return _cb .Wrap (_eafb ,_fbce ,"");};_gafa |=byte (_geab )<<byte (7-_bgg );_beg =((_beg &0x1f7)<<1)|_geab |((_cag >>uint (8-_bgg ))&0x010);};if _aaeb :=_fgbe .Bitmap .SetByte (_fcbb ,_gafa );_aaeb !=nil {return _cb .Wrap (_aaeb ,_fbce ,"");
};_fcbb ++;_fda ++;};return nil ;};func (_agag *TextRegion )setParameters (_fagbf *_df .Decoder ,_eefa ,_cfddd bool ,_gagd ,_adace uint32 ,_feaa uint32 ,_cafgd int8 ,_edef uint32 ,_afbb int8 ,_dbfc _g .CombinationOperator ,_edaag int8 ,_dcaa int16 ,_cagfe ,_efgf ,_fdcd ,_fbcdb ,_bede ,_ebcf ,_cgcbf ,_dafc ,_geaf ,_bcad int8 ,_gccaa ,_gacde []int8 ,_aded []*_g .Bitmap ,_afbbg int8 ){_agag ._fdaa =_fagbf ;
_agag .IsHuffmanEncoded =_eefa ;_agag .UseRefinement =_cfddd ;_agag .RegionInfo .BitmapWidth =_gagd ;_agag .RegionInfo .BitmapHeight =_adace ;_agag .NumberOfSymbolInstances =_feaa ;_agag .SbStrips =_cafgd ;_agag .NumberOfSymbols =_edef ;_agag .DefaultPixel =_afbb ;
_agag .CombinationOperator =_dbfc ;_agag .IsTransposed =_edaag ;_agag .ReferenceCorner =_dcaa ;_agag .SbDsOffset =_cagfe ;_agag .SbHuffFS =_efgf ;_agag .SbHuffDS =_fdcd ;_agag .SbHuffDT =_fbcdb ;_agag .SbHuffRDWidth =_bede ;_agag .SbHuffRDHeight =_ebcf ;
_agag .SbHuffRSize =_geaf ;_agag .SbHuffRDX =_cgcbf ;_agag .SbHuffRDY =_dafc ;_agag .SbrTemplate =_bcad ;_agag .SbrATX =_gccaa ;_agag .SbrATY =_gacde ;_agag .Symbols =_aded ;_agag ._dgca =_afbbg ;};func (_cceb *TextRegion )decodeRI ()(int64 ,error ){if !_cceb .UseRefinement {return 0,nil ;
};if _cceb .IsHuffmanEncoded {_bdec ,_dgcaf :=_cceb ._cbgc .ReadBit ();return int64 (_bdec ),_dgcaf ;};_fede ,_ceae :=_cceb ._fdaa .DecodeInt (_cceb ._gbgca );return int64 (_fede ),_ceae ;};func (_geeg *Header )writeReferredToCount (_cfcg _ae .BinaryWriter )(_ggfc int ,_cfbgc error ){const _bdb ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_geeg .RTSNumbers =make ([]int ,len (_geeg .RTSegments ));for _bagf ,_aadd :=range _geeg .RTSegments {_geeg .RTSNumbers [_bagf ]=int (_aadd .SegmentNumber );};if len (_geeg .RTSNumbers )<=4{var _fcbe byte ;if len (_geeg .RetainBits )>=1{_fcbe =_geeg .RetainBits [0];
};_fcbe |=byte (len (_geeg .RTSNumbers ))<<5;if _cfbgc =_cfcg .WriteByte (_fcbe );_cfbgc !=nil {return 0,_cb .Wrap (_cfbgc ,_bdb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_cafd :=uint32 (len (_geeg .RTSNumbers ));
_fgdc :=make ([]byte ,4+_ad .Ceil (len (_geeg .RTSNumbers )+1,8));_cafd |=0x7<<29;_e .BigEndian .PutUint32 (_fgdc ,_cafd );copy (_fgdc [1:],_geeg .RetainBits );_ggfc ,_cfbgc =_cfcg .Write (_fgdc );if _cfbgc !=nil {return 0,_cb .Wrap (_cfbgc ,_bdb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _ggfc ,nil ;};var _ SegmentEncoder =&GenericRegion {};func (_gffdb *SymbolDictionary )encodeATFlags (_dgdae _ae .BinaryWriter )(_dgeef int ,_dbaf error ){const _cde ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _gffdb .IsHuffmanEncoded ||_gffdb .SdTemplate !=0{return 0,nil ;};_gdb :=4;if _gffdb .SdTemplate !=0{_gdb =1;};for _aedb :=0;_aedb < _gdb ;_aedb ++{if _dbaf =_dgdae .WriteByte (byte (_gffdb .SdATX [_aedb ]));_dbaf !=nil {return _dgeef ,_cb .Wrapf (_dbaf ,_cde ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_aedb );
};_dgeef ++;if _dbaf =_dgdae .WriteByte (byte (_gffdb .SdATY [_aedb ]));_dbaf !=nil {return _dgeef ,_cb .Wrapf (_dbaf ,_cde ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_aedb );};_dgeef ++;};return _dgeef ,nil ;};type Regioner interface{GetRegionBitmap ()(*_g .Bitmap ,error );
GetRegionInfo ()*RegionSegment ;};func (_aeda *GenericRegion )Init (h *Header ,r _ae .StreamReader )error {_aeda .RegionSegment =NewRegionSegment (r );_aeda ._aabc =r ;return _aeda .parseHeader ();};func (_baba *Header )pageSize ()uint {if _baba .PageAssociation <=255{return 1;
};return 4;};func (_gfgb *PageInformationSegment )Init (h *Header ,r _ae .StreamReader )(_aac error ){_gfgb ._gacd =r ;if _aac =_gfgb .parseHeader ();_aac !=nil {return _cb .Wrap (_aac ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};type templater interface{form (_fag ,_ddb ,_fcf ,_fed ,_cfe int16 )int16 ;setIndex (_cac *_df .DecoderStats );};func (_aceb *Header )parse (_cdfc Documenter ,_ffag _ae .StreamReader ,_agdb int64 ,_cccf OrganizationType )(_acfgf error ){const _faaf ="\u0070\u0061\u0072s\u0065";
_ca .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _acfgf !=nil {_ca .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_acfgf );
}else {_ca .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_acfgf =_ffag .Seek (_agdb ,_b .SeekStart );
if _acfgf !=nil {return _cb .Wrap (_acfgf ,_faaf ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _acfgf =_aceb .readSegmentNumber (_ffag );_acfgf !=nil {return _cb .Wrap (_acfgf ,_faaf ,"");};if _acfgf =_aceb .readHeaderFlags ();_acfgf !=nil {return _cb .Wrap (_acfgf ,_faaf ,"");
};var _bbd uint64 ;_bbd ,_acfgf =_aceb .readNumberOfReferredToSegments (_ffag );if _acfgf !=nil {return _cb .Wrap (_acfgf ,_faaf ,"");};_aceb .RTSNumbers ,_acfgf =_aceb .readReferredToSegmentNumbers (_ffag ,int (_bbd ));if _acfgf !=nil {return _cb .Wrap (_acfgf ,_faaf ,"");
};_acfgf =_aceb .readSegmentPageAssociation (_cdfc ,_ffag ,_bbd ,_aceb .RTSNumbers ...);if _acfgf !=nil {return _cb .Wrap (_acfgf ,_faaf ,"");};if _aceb .Type !=TEndOfFile {if _acfgf =_aceb .readSegmentDataLength (_ffag );_acfgf !=nil {return _cb .Wrap (_acfgf ,_faaf ,"");
};};_aceb .readDataStartOffset (_ffag ,_cccf );_aceb .readHeaderLength (_ffag ,_agdb );_ca .Log .Trace ("\u0025\u0073",_aceb );return nil ;};func (_debd *Header )Encode (w _ae .BinaryWriter )(_bgc int ,_adac error ){const _aafa ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _ebdgf _ae .BinaryWriter ;_ca .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _adac !=nil {_ca .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_adac );
}else {_ca .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_debd );_ca .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _debd .SegmentData !=nil {_dbac ,_aabg :=_debd .SegmentData .(SegmentEncoder );if !_aabg {return 0,_cb .Errorf (_aafa ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_debd .SegmentData );
};_ebdgf =_ae .BufferedMSB ();_bgc ,_adac =_dbac .Encode (_ebdgf );if _adac !=nil {return 0,_cb .Wrap (_adac ,_aafa ,"");};_debd .SegmentDataLength =uint64 (_bgc );};if _debd .pageSize ()==4{_debd .PageAssociationFieldSize =true ;};var _cefg int ;_cefg ,_adac =_debd .writeSegmentNumber (w );
if _adac !=nil {return 0,_cb .Wrap (_adac ,_aafa ,"");};_bgc +=_cefg ;if _adac =_debd .writeFlags (w );_adac !=nil {return _bgc ,_cb .Wrap (_adac ,_aafa ,"");};_bgc ++;_cefg ,_adac =_debd .writeReferredToCount (w );if _adac !=nil {return 0,_cb .Wrap (_adac ,_aafa ,"");
};_bgc +=_cefg ;_cefg ,_adac =_debd .writeReferredToSegments (w );if _adac !=nil {return 0,_cb .Wrap (_adac ,_aafa ,"");};_bgc +=_cefg ;_cefg ,_adac =_debd .writeSegmentPageAssociation (w );if _adac !=nil {return 0,_cb .Wrap (_adac ,_aafa ,"");};_bgc +=_cefg ;
_cefg ,_adac =_debd .writeSegmentDataLength (w );if _adac !=nil {return 0,_cb .Wrap (_adac ,_aafa ,"");};_bgc +=_cefg ;_debd .HeaderLength =int64 (_bgc )-int64 (_debd .SegmentDataLength );if _ebdgf !=nil {if _ ,_adac =w .Write (_ebdgf .Data ());_adac !=nil {return _bgc ,_cb .Wrap (_adac ,_aafa ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _bgc ,nil ;};func (_fabff *HalftoneRegion )renderPattern (_ffca [][]int )(_gfe error ){var _cafb ,_dfcf int ;for _fcda :=0;_fcda < int (_fabff .HGridHeight );_fcda ++{for _fegg :=0;_fegg < int (_fabff .HGridWidth );_fegg ++{_cafb =_fabff .computeX (_fcda ,_fegg );
_dfcf =_fabff .computeY (_fcda ,_fegg );_dcag :=_fabff .Patterns [_ffca [_fcda ][_fegg ]];if _gfe =_g .Blit (_dcag ,_fabff .HalftoneRegionBitmap ,_cafb +int (_fabff .HGridX ),_dfcf +int (_fabff .HGridY ),_fabff .CombinationOperator );_gfe !=nil {return _gfe ;
};};};return nil ;};type TextRegion struct{_cbgc _ae .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _g .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;
UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_aade int64 ;
SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_g .Bitmap ;Symbols []*_g .Bitmap ;_fdaa *_df .Decoder ;_afdd *GenericRefinementRegion ;_baaeg *_df .DecoderStats ;_gcae *_df .DecoderStats ;_fdga *_df .DecoderStats ;_fegf *_df .DecoderStats ;_gbgca *_df .DecoderStats ;
_dabfd *_df .DecoderStats ;_gbbg *_df .DecoderStats ;_gdcf *_df .DecoderStats ;_dedc *_df .DecoderStats ;_dgdg *_df .DecoderStats ;_cagf *_df .DecoderStats ;_dgca int8 ;_bdadd *_de .FixedSizeTable ;Header *Header ;_gbae _de .Tabler ;_gfdc _de .Tabler ;
_egec _de .Tabler ;_eggcd _de .Tabler ;_dfbe _de .Tabler ;_cafg _de .Tabler ;_debce _de .Tabler ;_ddbb _de .Tabler ;_edcgd ,_dbce map[int ]int ;_fgcga []int ;_add *_g .Points ;_bdcgd *_g .Bitmaps ;_eebf *_ad .IntSlice ;_dggc ,_badd int ;_abaf *_g .Boxes ;
};func (_fac *RegionSegment )readCombinationOperator ()error {_cdc ,_gbaaa :=_fac ._ffad .ReadBits (3);if _gbaaa !=nil {return _gbaaa ;};_fac .CombinaionOperator =_g .CombinationOperator (_cdc &0xF);return nil ;};func (_aad *HalftoneRegion )combineGrayscalePlanes (_beca []*_g .Bitmap ,_bbbbe int )error {_bccf :=0;
for _ffbb :=0;_ffbb < _beca [_bbbbe ].Height ;_ffbb ++{for _dgfb :=0;_dgfb < _beca [_bbbbe ].Width ;_dgfb +=8{_ccc ,_becb :=_beca [_bbbbe +1].GetByte (_bccf );if _becb !=nil {return _becb ;};_fcg ,_becb :=_beca [_bbbbe ].GetByte (_bccf );if _becb !=nil {return _becb ;
};_becb =_beca [_bbbbe ].SetByte (_bccf ,_g .CombineBytes (_fcg ,_ccc ,_g .CmbOpXor ));if _becb !=nil {return _becb ;};_bccf ++;};};return nil ;};func (_dfae *PageInformationSegment )readMaxStripeSize ()error {_ecggb ,_bggg :=_dfae ._gacd .ReadBits (15);
if _bggg !=nil {return _bggg ;};_dfae .MaxStripeSize =uint16 (_ecggb &_f .MaxUint16 );return nil ;};func (_dece *Header )CleanSegmentData (){if _dece .SegmentData !=nil {_dece .SegmentData =nil ;};};func (_fdadc *SymbolDictionary )Init (h *Header ,r _ae .StreamReader )error {_fdadc .Header =h ;
_fdadc ._bfca =r ;return _fdadc .parseHeader ();};func (_edbff *TextRegion )computeSymbolCodeLength ()error {if _edbff .IsHuffmanEncoded {return _edbff .symbolIDCodeLengths ();};_edbff ._dgca =int8 (_f .Ceil (_f .Log (float64 (_edbff .NumberOfSymbols ))/_f .Log (2)));
return nil ;};func (_cgf *SymbolDictionary )InitEncode (symbols *_g .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _fagg ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_cgf .SdATX =[]int8 {3,-3,2,-2};_cgf .SdATY =[]int8 {-1,-1,-2,-2};_cgf ._fdcc =symbols ;_cgf ._bdcg =make ([]int ,len (symbolList ));copy (_cgf ._bdcg ,symbolList );if len (_cgf ._bdcg )!=_cgf ._fdcc .Size (){return _cb .Error (_fagg ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_cgf .NumberOfNewSymbols =uint32 (symbols .Size ());_cgf .NumberOfExportedSymbols =uint32 (symbols .Size ());_cgf ._edbfe =symbolMap ;_cgf ._bge =unborderSymbols ;return nil ;};func (_bcef *RegionSegment )String ()string {_fdgb :=&_fa .Builder {};_fdgb .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_fdgb .WriteString (_eg .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_bcef .BitmapWidth ,_bcef .BitmapHeight ));
_fdgb .WriteString (_eg .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_bcef .XLocation ,_bcef .YLocation ));_fdgb .WriteString (_eg .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_bcef .CombinaionOperator ));
return _fdgb .String ();};func (_edddeg *TextRegion )Init (header *Header ,r _ae .StreamReader )error {_edddeg .Header =header ;_edddeg ._cbgc =r ;_edddeg .RegionInfo =NewRegionSegment (_edddeg ._cbgc );return _edddeg .parseHeader ();};func (_dbea *TableSegment )HtRS ()int32 {return _dbea ._bdad };
var (_gddc Segmenter ;_dgbg =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _gddc },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _gddc },TProfiles :func ()Segmenter {return _gddc },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _gddc },TBitmap :func ()Segmenter {return _gddc }};
);func (_fbcf *Header )GetSegmentData ()(Segmenter ,error ){var _gbbb Segmenter ;if _fbcf .SegmentData !=nil {_gbbb =_fbcf .SegmentData ;};if _gbbb ==nil {_fcaa ,_fega :=_dgbg [_fbcf .Type ];if !_fega {return nil ,_eg .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_fbcf .Type ,_fbcf .Type );
};_gbbb =_fcaa ();_ca .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_fbcf .SegmentNumber ,_fbcf .SegmentDataStartOffset );
_efg ,_cgdf :=_fbcf .subInputReader ();if _cgdf !=nil {return nil ,_cgdf ;};if _ffgc :=_gbbb .Init (_fbcf ,_efg );_ffgc !=nil {_ca .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_ffgc ,_gbbb );
return nil ,_ffgc ;};_fbcf .SegmentData =_gbbb ;};return _gbbb ,nil ;};func (_afgd *GenericRegion )updateOverrideFlags ()error {const _gbc ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _afgd .GBAtX ==nil ||_afgd .GBAtY ==nil {return nil ;
};if len (_afgd .GBAtX )!=len (_afgd .GBAtY ){return _cb .Errorf (_gbc ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_afgd .GBAtX ),len (_afgd .GBAtY ));
};_afgd .GBAtOverride =make ([]bool ,len (_afgd .GBAtX ));switch _afgd .GBTemplate {case 0:if !_afgd .UseExtTemplates {if _afgd .GBAtX [0]!=3||_afgd .GBAtY [0]!=-1{_afgd .setOverrideFlag (0);};if _afgd .GBAtX [1]!=-3||_afgd .GBAtY [1]!=-1{_afgd .setOverrideFlag (1);
};if _afgd .GBAtX [2]!=2||_afgd .GBAtY [2]!=-2{_afgd .setOverrideFlag (2);};if _afgd .GBAtX [3]!=-2||_afgd .GBAtY [3]!=-2{_afgd .setOverrideFlag (3);};}else {if _afgd .GBAtX [0]!=-2||_afgd .GBAtY [0]!=0{_afgd .setOverrideFlag (0);};if _afgd .GBAtX [1]!=0||_afgd .GBAtY [1]!=-2{_afgd .setOverrideFlag (1);
};if _afgd .GBAtX [2]!=-2||_afgd .GBAtY [2]!=-1{_afgd .setOverrideFlag (2);};if _afgd .GBAtX [3]!=-1||_afgd .GBAtY [3]!=-2{_afgd .setOverrideFlag (3);};if _afgd .GBAtX [4]!=1||_afgd .GBAtY [4]!=-2{_afgd .setOverrideFlag (4);};if _afgd .GBAtX [5]!=2||_afgd .GBAtY [5]!=-1{_afgd .setOverrideFlag (5);
};if _afgd .GBAtX [6]!=-3||_afgd .GBAtY [6]!=0{_afgd .setOverrideFlag (6);};if _afgd .GBAtX [7]!=-4||_afgd .GBAtY [7]!=0{_afgd .setOverrideFlag (7);};if _afgd .GBAtX [8]!=2||_afgd .GBAtY [8]!=-2{_afgd .setOverrideFlag (8);};if _afgd .GBAtX [9]!=3||_afgd .GBAtY [9]!=-1{_afgd .setOverrideFlag (9);
};if _afgd .GBAtX [10]!=-2||_afgd .GBAtY [10]!=-2{_afgd .setOverrideFlag (10);};if _afgd .GBAtX [11]!=-3||_afgd .GBAtY [11]!=-1{_afgd .setOverrideFlag (11);};};case 1:if _afgd .GBAtX [0]!=3||_afgd .GBAtY [0]!=-1{_afgd .setOverrideFlag (0);};case 2:if _afgd .GBAtX [0]!=2||_afgd .GBAtY [0]!=-1{_afgd .setOverrideFlag (0);
};case 3:if _afgd .GBAtX [0]!=2||_afgd .GBAtY [0]!=-1{_afgd .setOverrideFlag (0);};};return nil ;};func NewRegionSegment (r _ae .StreamReader )*RegionSegment {return &RegionSegment {_ffad :r }};func (_bded *TextRegion )decodeStripT ()(_eaag int64 ,_gbcc error ){if _bded .IsHuffmanEncoded {if _bded .SbHuffDT ==3{if _bded ._egec ==nil {var _ggfde int ;
if _bded .SbHuffFS ==3{_ggfde ++;};if _bded .SbHuffDS ==3{_ggfde ++;};_bded ._egec ,_gbcc =_bded .getUserTable (_ggfde );if _gbcc !=nil {return 0,_gbcc ;};};_eaag ,_gbcc =_bded ._egec .Decode (_bded ._cbgc );if _gbcc !=nil {return 0,_gbcc ;};}else {var _cdgg _de .Tabler ;
_cdgg ,_gbcc =_de .GetStandardTable (11+int (_bded .SbHuffDT ));if _gbcc !=nil {return 0,_gbcc ;};_eaag ,_gbcc =_cdgg .Decode (_bded ._cbgc );if _gbcc !=nil {return 0,_gbcc ;};};}else {var _bcdd int32 ;_bcdd ,_gbcc =_bded ._fdaa .DecodeInt (_bded ._baaeg );
if _gbcc !=nil {return 0,_gbcc ;};_eaag =int64 (_bcdd );};_eaag *=int64 (-_bded .SbStrips );return _eaag ,nil ;};func (_ebf *HalftoneRegion )parseHeader ()error {if _def :=_ebf .RegionSegment .parseHeader ();_def !=nil {return _def ;};_eddde ,_bgff :=_ebf ._dgdf .ReadBit ();
if _bgff !=nil {return _bgff ;};_ebf .HDefaultPixel =int8 (_eddde );_ebafd ,_bgff :=_ebf ._dgdf .ReadBits (3);if _bgff !=nil {return _bgff ;};_ebf .CombinationOperator =_g .CombinationOperator (_ebafd &0xf);_eddde ,_bgff =_ebf ._dgdf .ReadBit ();if _bgff !=nil {return _bgff ;
};if _eddde ==1{_ebf .HSkipEnabled =true ;};_ebafd ,_bgff =_ebf ._dgdf .ReadBits (2);if _bgff !=nil {return _bgff ;};_ebf .HTemplate =byte (_ebafd &0xf);_eddde ,_bgff =_ebf ._dgdf .ReadBit ();if _bgff !=nil {return _bgff ;};if _eddde ==1{_ebf .IsMMREncoded =true ;
};_ebafd ,_bgff =_ebf ._dgdf .ReadBits (32);if _bgff !=nil {return _bgff ;};_ebf .HGridWidth =uint32 (_ebafd &_f .MaxUint32 );_ebafd ,_bgff =_ebf ._dgdf .ReadBits (32);if _bgff !=nil {return _bgff ;};_ebf .HGridHeight =uint32 (_ebafd &_f .MaxUint32 );_ebafd ,_bgff =_ebf ._dgdf .ReadBits (32);
if _bgff !=nil {return _bgff ;};_ebf .HGridX =int32 (_ebafd &_f .MaxInt32 );_ebafd ,_bgff =_ebf ._dgdf .ReadBits (32);if _bgff !=nil {return _bgff ;};_ebf .HGridY =int32 (_ebafd &_f .MaxInt32 );_ebafd ,_bgff =_ebf ._dgdf .ReadBits (16);if _bgff !=nil {return _bgff ;
};_ebf .HRegionX =uint16 (_ebafd &_f .MaxUint16 );_ebafd ,_bgff =_ebf ._dgdf .ReadBits (16);if _bgff !=nil {return _bgff ;};_ebf .HRegionY =uint16 (_ebafd &_f .MaxUint16 );if _bgff =_ebf .computeSegmentDataStructure ();_bgff !=nil {return _bgff ;};return _ebf .checkInput ();
};func (_fccb *Header )String ()string {_bagc :=&_fa .Builder {};_bagc .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_bagc .WriteString (_eg .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_fccb .SegmentNumber ));
_bagc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_fccb .Type ));_bagc .WriteString (_eg .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_fccb .RetainFlag ));
_bagc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fccb .PageAssociation ));_bagc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_fccb .PageAssociationFieldSize ));
_bagc .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_ffdc :=range _fccb .RTSNumbers {_bagc .WriteString (_eg .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_ffdc ));};_bagc .WriteString (_eg .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_fccb .HeaderLength ));
_bagc .WriteString (_eg .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_fccb .SegmentDataLength ));_bagc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_fccb .SegmentDataStartOffset ));
return _bagc .String ();};func (_egag *TableSegment )HtPS ()int32 {return _egag ._dbec };func (_da *GenericRefinementRegion )decodeTemplate (_geg ,_dad ,_eee ,_dggf ,_agc ,_ege ,_dga ,_gfba ,_dde ,_eaba int ,_dff templater )(_gbbf error ){var (_cbcc ,_ggc ,_gad ,_aed ,_aaf int16 ;
_abd ,_gdf ,_cdf ,_ddgf int ;_fgb byte ;);if _dde >=1&&(_dde -1)< _da .ReferenceBitmap .Height {_fgb ,_gbbf =_da .ReferenceBitmap .GetByte (_eaba -_dggf );if _gbbf !=nil {return ;};_abd =int (_fgb );};if _dde >=0&&(_dde )< _da .ReferenceBitmap .Height {_fgb ,_gbbf =_da .ReferenceBitmap .GetByte (_eaba );
if _gbbf !=nil {return ;};_gdf =int (_fgb );};if _dde >=-1&&(_dde +1)< _da .ReferenceBitmap .Height {_fgb ,_gbbf =_da .ReferenceBitmap .GetByte (_eaba +_dggf );if _gbbf !=nil {return ;};_cdf =int (_fgb );};_eaba ++;if _geg >=1{_fgb ,_gbbf =_da .RegionBitmap .GetByte (_gfba -_eee );
if _gbbf !=nil {return ;};_ddgf =int (_fgb );};_gfba ++;_bab :=_da .ReferenceDX %8;_baa :=6+_bab ;_dbf :=_eaba %_dggf ;if _baa >=0{if _baa < 8{_cbcc =int16 (_abd >>uint (_baa ))&0x07;};if _baa < 8{_ggc =int16 (_gdf >>uint (_baa ))&0x07;};if _baa < 8{_gad =int16 (_cdf >>uint (_baa ))&0x07;
};if _baa ==6&&_dbf > 1{if _dde >=1&&(_dde -1)< _da .ReferenceBitmap .Height {_fgb ,_gbbf =_da .ReferenceBitmap .GetByte (_eaba -_dggf -2);if _gbbf !=nil {return _gbbf ;};_cbcc |=int16 (_fgb <<2)&0x04;};if _dde >=0&&_dde < _da .ReferenceBitmap .Height {_fgb ,_gbbf =_da .ReferenceBitmap .GetByte (_eaba -2);
if _gbbf !=nil {return _gbbf ;};_ggc |=int16 (_fgb <<2)&0x04;};if _dde >=-1&&_dde +1< _da .ReferenceBitmap .Height {_fgb ,_gbbf =_da .ReferenceBitmap .GetByte (_eaba +_dggf -2);if _gbbf !=nil {return _gbbf ;};_gad |=int16 (_fgb <<2)&0x04;};};if _baa ==0{_abd =0;
_gdf =0;_cdf =0;if _dbf < _dggf -1{if _dde >=1&&_dde -1< _da .ReferenceBitmap .Height {_fgb ,_gbbf =_da .ReferenceBitmap .GetByte (_eaba -_dggf );if _gbbf !=nil {return _gbbf ;};_abd =int (_fgb );};if _dde >=0&&_dde < _da .ReferenceBitmap .Height {_fgb ,_gbbf =_da .ReferenceBitmap .GetByte (_eaba );
if _gbbf !=nil {return _gbbf ;};_gdf =int (_fgb );};if _dde >=-1&&_dde +1< _da .ReferenceBitmap .Height {_fgb ,_gbbf =_da .ReferenceBitmap .GetByte (_eaba +_dggf );if _gbbf !=nil {return _gbbf ;};_cdf =int (_fgb );};};_eaba ++;};}else {_cbcc =int16 (_abd <<1)&0x07;
_ggc =int16 (_gdf <<1)&0x07;_gad =int16 (_cdf <<1)&0x07;_abd =0;_gdf =0;_cdf =0;if _dbf < _dggf -1{if _dde >=1&&_dde -1< _da .ReferenceBitmap .Height {_fgb ,_gbbf =_da .ReferenceBitmap .GetByte (_eaba -_dggf );if _gbbf !=nil {return _gbbf ;};_abd =int (_fgb );
};if _dde >=0&&_dde < _da .ReferenceBitmap .Height {_fgb ,_gbbf =_da .ReferenceBitmap .GetByte (_eaba );if _gbbf !=nil {return _gbbf ;};_gdf =int (_fgb );};if _dde >=-1&&_dde +1< _da .ReferenceBitmap .Height {_fgb ,_gbbf =_da .ReferenceBitmap .GetByte (_eaba +_dggf );
if _gbbf !=nil {return _gbbf ;};_cdf =int (_fgb );};_eaba ++;};_cbcc |=int16 ((_abd >>7)&0x07);_ggc |=int16 ((_gdf >>7)&0x07);_gad |=int16 ((_cdf >>7)&0x07);};_aed =int16 (_ddgf >>6);_aaf =0;_ccee :=(2-_bab )%8;_abd <<=uint (_ccee );_gdf <<=uint (_ccee );
_cdf <<=uint (_ccee );_ddgf <<=2;var _bag int ;for _bcca :=0;_bcca < _dad ;_bcca ++{_afg :=_bcca &0x07;_agfd :=_dff .form (_cbcc ,_ggc ,_gad ,_aed ,_aaf );if _da ._bg {_fgb ,_gbbf =_da .RegionBitmap .GetByte (_da .RegionBitmap .GetByteIndex (_bcca ,_geg ));
if _gbbf !=nil {return _gbbf ;};_da ._ebg .SetIndex (int32 (_da .overrideAtTemplate0 (int (_agfd ),_bcca ,_geg ,int (_fgb ),_afg )));}else {_da ._ebg .SetIndex (int32 (_agfd ));};_bag ,_gbbf =_da ._ebd .DecodeBit (_da ._ebg );if _gbbf !=nil {return _gbbf ;
};if _gbbf =_da .RegionBitmap .SetPixel (_bcca ,_geg ,byte (_bag ));_gbbf !=nil {return _gbbf ;};_cbcc =((_cbcc <<1)|0x01&int16 (_abd >>7))&0x07;_ggc =((_ggc <<1)|0x01&int16 (_gdf >>7))&0x07;_gad =((_gad <<1)|0x01&int16 (_cdf >>7))&0x07;_aed =((_aed <<1)|0x01&int16 (_ddgf >>7))&0x07;
_aaf =int16 (_bag );if (_bcca -int (_da .ReferenceDX ))%8==5{_abd =0;_gdf =0;_cdf =0;if ((_bcca -int (_da .ReferenceDX ))/8)+1< _da .ReferenceBitmap .RowStride {if _dde >=1&&(_dde -1)< _da .ReferenceBitmap .Height {_fgb ,_gbbf =_da .ReferenceBitmap .GetByte (_eaba -_dggf );
if _gbbf !=nil {return _gbbf ;};_abd =int (_fgb );};if _dde >=0&&_dde < _da .ReferenceBitmap .Height {_fgb ,_gbbf =_da .ReferenceBitmap .GetByte (_eaba );if _gbbf !=nil {return _gbbf ;};_gdf =int (_fgb );};if _dde >=-1&&(_dde +1)< _da .ReferenceBitmap .Height {_fgb ,_gbbf =_da .ReferenceBitmap .GetByte (_eaba +_dggf );
if _gbbf !=nil {return _gbbf ;};_cdf =int (_fgb );};};_eaba ++;}else {_abd <<=1;_gdf <<=1;_cdf <<=1;};if _afg ==5&&_geg >=1{if ((_bcca >>3)+1)>=_da .RegionBitmap .RowStride {_ddgf =0;}else {_fgb ,_gbbf =_da .RegionBitmap .GetByte (_gfba -_eee );if _gbbf !=nil {return _gbbf ;
};_ddgf =int (_fgb );};_gfba ++;}else {_ddgf <<=1;};};return nil ;};func (_gedd *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _gedd ._ddeg ==nil {var (_eabd int ;_eaaffg error ;);if _gedd .SdHuffDecodeHeightSelection ==3{_eabd ++;};if _gedd .SdHuffDecodeWidthSelection ==3{_eabd ++;
};_gedd ._ddeg ,_eaaffg =_gedd .getUserTable (_eabd );if _eaaffg !=nil {return 0,_eaaffg ;};};return _gedd ._ddeg .Decode (_gedd ._bfca );};func (_cegb *SymbolDictionary )decodeDirectlyThroughGenericRegion (_gece ,_ggcce uint32 )error {if _cegb ._bcge ==nil {_cegb ._bcge =NewGenericRegion (_cegb ._bfca );
};_cegb ._bcge .setParametersWithAt (false ,byte (_cegb .SdTemplate ),false ,false ,_cegb .SdATX ,_cegb .SdATY ,_gece ,_ggcce ,_cegb ._fgba ,_cegb ._dagg );return _cegb .addSymbol (_cegb ._bcge );};func (_fadg *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _fadg .IsHuffmanEncoded {return _fadg .decodeHeightClassDeltaHeightWithHuffman ();
};_ggda ,_dggfe :=_fadg ._dagg .DecodeInt (_fadg ._cacbe );if _dggfe !=nil {return 0,_dggfe ;};return int64 (_ggda ),nil ;};func (_fe *EndOfStripe )LineNumber ()int {return _fe ._gf };var _ _de .BasicTabler =&TableSegment {};func (_caeg *GenericRegion )parseHeader ()(_bgb error ){_ca .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _bgb !=nil {_ca .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_bgb );
}else {_ca .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_fddf int ;_egfa uint64 ;);if _bgb =_caeg .RegionSegment .parseHeader ();_bgb !=nil {return _bgb ;};if _ ,_bgb =_caeg ._aabc .ReadBits (3);_bgb !=nil {return _bgb ;};_fddf ,_bgb =_caeg ._aabc .ReadBit ();if _bgb !=nil {return _bgb ;};if _fddf ==1{_caeg .UseExtTemplates =true ;
};_fddf ,_bgb =_caeg ._aabc .ReadBit ();if _bgb !=nil {return _bgb ;};if _fddf ==1{_caeg .IsTPGDon =true ;};_egfa ,_bgb =_caeg ._aabc .ReadBits (2);if _bgb !=nil {return _bgb ;};_caeg .GBTemplate =byte (_egfa &0xf);_fddf ,_bgb =_caeg ._aabc .ReadBit ();
if _bgb !=nil {return _bgb ;};if _fddf ==1{_caeg .IsMMREncoded =true ;};if !_caeg .IsMMREncoded {_gecf :=1;if _caeg .GBTemplate ==0{_gecf =4;if _caeg .UseExtTemplates {_gecf =12;};};if _bgb =_caeg .readGBAtPixels (_gecf );_bgb !=nil {return _bgb ;};};if _bgb =_caeg .computeSegmentDataStructure ();
_bgb !=nil {return _bgb ;};_ca .Log .Trace ("\u0025\u0073",_caeg );return nil ;};func (_afcgg *TextRegion )decodeSymbolInstances ()error {_cdde ,_cfcbg :=_afcgg .decodeStripT ();if _cfcbg !=nil {return _cfcbg ;};var (_cdge int64 ;_adfe uint32 ;);for _adfe < _afcgg .NumberOfSymbolInstances {_fabfa ,_bbag :=_afcgg .decodeDT ();
if _bbag !=nil {return _bbag ;};_cdde +=_fabfa ;var _caegf int64 ;_bgae :=true ;_afcgg ._aade =0;for {if _bgae {_caegf ,_bbag =_afcgg .decodeDfs ();if _bbag !=nil {return _bbag ;};_cdge +=_caegf ;_afcgg ._aade =_cdge ;_bgae =false ;}else {_afbf ,_fccd :=_afcgg .decodeIds ();
if _be .Is (_fccd ,_bf .ErrOOB ){break ;};if _fccd !=nil {return _fccd ;};if _adfe >=_afcgg .NumberOfSymbolInstances {break ;};_afcgg ._aade +=_afbf +int64 (_afcgg .SbDsOffset );};_cbba ,_cceef :=_afcgg .decodeCurrentT ();if _cceef !=nil {return _cceef ;
};_faed :=_cdde +_cbba ;_cddg ,_cceef :=_afcgg .decodeID ();if _cceef !=nil {return _cceef ;};_egb ,_cceef :=_afcgg .decodeRI ();if _cceef !=nil {return _cceef ;};_ebbd ,_cceef :=_afcgg .decodeIb (_egb ,_cddg );if _cceef !=nil {return _cceef ;};if _cceef =_afcgg .blit (_ebbd ,_faed );
_cceef !=nil {return _cceef ;};_adfe ++;};};return nil ;};func (_ebee *SymbolDictionary )setRefinementAtPixels ()error {if !_ebee .UseRefinementAggregation ||_ebee .SdrTemplate !=0{return nil ;};if _fbfc :=_ebee .readRefinementAtPixels (2);_fbfc !=nil {return _fbfc ;
};return nil ;};func (_bbe *template0 )setIndex (_cfb *_df .DecoderStats ){_cfb .SetIndex (0x100)};func _bdbb (_afae _ae .StreamReader ,_ebfe *Header )*TextRegion {_beag :=&TextRegion {_cbgc :_afae ,Header :_ebfe ,RegionInfo :NewRegionSegment (_afae )};
return _beag ;};func (_gffb *HalftoneRegion )Init (hd *Header ,r _ae .StreamReader )error {_gffb ._dgdf =r ;_gffb ._gbeff =hd ;_gffb .RegionSegment =NewRegionSegment (r );return _gffb .parseHeader ();};func (_cgbe *PageInformationSegment )CombinationOperator ()_g .CombinationOperator {return _cgbe ._cfg };
func (_bgbc *TextRegion )decodeIds ()(int64 ,error ){const _cdfgf ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _bgbc .IsHuffmanEncoded {if _bgbc .SbHuffDS ==3{if _bgbc ._gfdc ==nil {_gdec :=0;if _bgbc .SbHuffFS ==3{_gdec ++;};var _fadf error ;_bgbc ._gfdc ,_fadf =_bgbc .getUserTable (_gdec );
if _fadf !=nil {return 0,_cb .Wrap (_fadf ,_cdfgf ,"");};};return _bgbc ._gfdc .Decode (_bgbc ._cbgc );};_cfgg ,_gcab :=_de .GetStandardTable (8+int (_bgbc .SbHuffDS ));if _gcab !=nil {return 0,_cb .Wrap (_gcab ,_cdfgf ,"");};return _cfgg .Decode (_bgbc ._cbgc );
};_abba ,_ebdb :=_bgbc ._fdaa .DecodeInt (_bgbc ._fdga );if _ebdb !=nil {return 0,_cb .Wrap (_ebdb ,_cdfgf ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_abba ),nil ;};func (_dgcb *Header )readReferredToSegmentNumbers (_bdac _ae .StreamReader ,_acff int )([]int ,error ){const _agaa ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_gagc :=make ([]int ,_acff );if _acff > 0{_dgcb .RTSegments =make ([]*Header ,_acff );var (_dadg uint64 ;_ffaaa error ;);for _adb :=0;_adb < _acff ;_adb ++{_dadg ,_ffaaa =_bdac .ReadBits (byte (_dgcb .referenceSize ())<<3);if _ffaaa !=nil {return nil ,_cb .Wrapf (_ffaaa ,_agaa ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_adb );
};_gagc [_adb ]=int (_dadg &_f .MaxInt32 );};};return _gagc ,nil ;};func (_ceba *TextRegion )setCodingStatistics ()error {if _ceba ._baaeg ==nil {_ceba ._baaeg =_df .NewStats (512,1);};if _ceba ._gcae ==nil {_ceba ._gcae =_df .NewStats (512,1);};if _ceba ._fdga ==nil {_ceba ._fdga =_df .NewStats (512,1);
};if _ceba ._fegf ==nil {_ceba ._fegf =_df .NewStats (512,1);};if _ceba ._gbgca ==nil {_ceba ._gbgca =_df .NewStats (512,1);};if _ceba ._dabfd ==nil {_ceba ._dabfd =_df .NewStats (512,1);};if _ceba ._gbbg ==nil {_ceba ._gbbg =_df .NewStats (512,1);};if _ceba ._gdcf ==nil {_ceba ._gdcf =_df .NewStats (1<<uint (_ceba ._dgca ),1);
};if _ceba ._dedc ==nil {_ceba ._dedc =_df .NewStats (512,1);};if _ceba ._dgdg ==nil {_ceba ._dgdg =_df .NewStats (512,1);};if _ceba ._fdaa ==nil {var _ggbga error ;_ceba ._fdaa ,_ggbga =_df .New (_ceba ._cbgc );if _ggbga !=nil {return _ggbga ;};};return nil ;
};func _efc (_gdc int )int {if _gdc ==0{return 0;};_gdc |=_gdc >>1;_gdc |=_gdc >>2;_gdc |=_gdc >>4;_gdc |=_gdc >>8;_gdc |=_gdc >>16;return (_gdc +1)>>1;};func (_ccb *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_gba ,_baf ,_ed ,_ebdg ,_egg ,_cab ,_debe ,_cbe ,_ce int )error {var (_fab ,_cdb ,_cce ,_dc ,_gbe ,_caf int ;
_cf byte ;_cafe error ;);if _gba > 0{_cf ,_cafe =_ccb .RegionBitmap .GetByte (_debe -_ed );if _cafe !=nil {return _cafe ;};_cce =int (_cf );};if _cbe > 0&&_cbe <=_ccb .ReferenceBitmap .Height {_cf ,_cafe =_ccb .ReferenceBitmap .GetByte (_ce -_ebdg +_cab );
if _cafe !=nil {return _cafe ;};_dc =int (_cf )<<4;};if _cbe >=0&&_cbe < _ccb .ReferenceBitmap .Height {_cf ,_cafe =_ccb .ReferenceBitmap .GetByte (_ce +_cab );if _cafe !=nil {return _cafe ;};_gbe =int (_cf )<<1;};if _cbe > -2&&_cbe < _ccb .ReferenceBitmap .Height -1{_cf ,_cafe =_ccb .ReferenceBitmap .GetByte (_ce +_ebdg +_cab );
if _cafe !=nil {return _cafe ;};_caf =int (_cf );};_fab =((_cce >>5)&0x6)|((_caf >>2)&0x30)|(_gbe &0x180)|(_dc &0xc00);var _gc int ;for _dfg :=0;_dfg < _egg ;_dfg =_gc {var _ged int ;_gc =_dfg +8;var _agbg int ;if _agbg =_baf -_dfg ;_agbg > 8{_agbg =8;
};_dgg :=_gc < _baf ;_bcf :=_gc < _ccb .ReferenceBitmap .Width ;_fga :=_cab +1;if _gba > 0{_cf =0;if _dgg {_cf ,_cafe =_ccb .RegionBitmap .GetByte (_debe -_ed +1);if _cafe !=nil {return _cafe ;};};_cce =(_cce <<8)|int (_cf );};if _cbe > 0&&_cbe <=_ccb .ReferenceBitmap .Height {var _bac int ;
if _bcf {_cf ,_cafe =_ccb .ReferenceBitmap .GetByte (_ce -_ebdg +_fga );if _cafe !=nil {return _cafe ;};_bac =int (_cf )<<4;};_dc =(_dc <<8)|_bac ;};if _cbe >=0&&_cbe < _ccb .ReferenceBitmap .Height {var _agd int ;if _bcf {_cf ,_cafe =_ccb .ReferenceBitmap .GetByte (_ce +_fga );
if _cafe !=nil {return _cafe ;};_agd =int (_cf )<<1;};_gbe =(_gbe <<8)|_agd ;};if _cbe > -2&&_cbe < (_ccb .ReferenceBitmap .Height -1){_cf =0;if _bcf {_cf ,_cafe =_ccb .ReferenceBitmap .GetByte (_ce +_ebdg +_fga );if _cafe !=nil {return _cafe ;};};_caf =(_caf <<8)|int (_cf );
};for _ddg :=0;_ddg < _agbg ;_ddg ++{var _cee int ;_fdc :=false ;_efb :=(_fab >>4)&0x1ff;if _efb ==0x1ff{_fdc =true ;_cee =1;}else if _efb ==0x00{_fdc =true ;};if !_fdc {if _ccb ._bg {_cdb =_ccb .overrideAtTemplate0 (_fab ,_dfg +_ddg ,_gba ,_ged ,_ddg );
_ccb ._ebg .SetIndex (int32 (_cdb ));}else {_ccb ._ebg .SetIndex (int32 (_fab ));};_cee ,_cafe =_ccb ._ebd .DecodeBit (_ccb ._ebg );if _cafe !=nil {return _cafe ;};};_gfbe :=uint (7-_ddg );_ged |=_cee <<_gfbe ;_fab =((_fab &0xdb6)<<1)|_cee |(_cce >>_gfbe +5)&0x002|((_caf >>_gfbe +2)&0x010)|((_gbe >>_gfbe )&0x080)|((_dc >>_gfbe )&0x400);
};_cafe =_ccb .RegionBitmap .SetByte (_debe ,byte (_ged ));if _cafe !=nil {return _cafe ;};_debe ++;_ce ++;};return nil ;};func (_dbfd *PageInformationSegment )readIsStriped ()error {_dacb ,_dbb :=_dbfd ._gacd .ReadBit ();if _dbb !=nil {return _dbb ;};
if _dacb ==1{_dbfd .IsStripe =true ;};return nil ;};func (_feab *SymbolDictionary )readAtPixels (_dgfg int )error {_feab .SdATX =make ([]int8 ,_dgfg );_feab .SdATY =make ([]int8 ,_dgfg );var (_ggbf byte ;_ebaca error ;);for _ggfa :=0;_ggfa < _dgfg ;_ggfa ++{_ggbf ,_ebaca =_feab ._bfca .ReadByte ();
if _ebaca !=nil {return _ebaca ;};_feab .SdATX [_ggfa ]=int8 (_ggbf );_ggbf ,_ebaca =_feab ._bfca .ReadByte ();if _ebaca !=nil {return _ebaca ;};_feab .SdATY [_ggfa ]=int8 (_ggbf );};return nil ;};func (_fbaf *TableSegment )Init (h *Header ,r _ae .StreamReader )error {_fbaf ._cbb =r ;
return _fbaf .parseHeader ();};func (_fdfe *PatternDictionary )readPatternWidthAndHeight ()error {_dfcc ,_dgda :=_fdfe ._cbgf .ReadByte ();if _dgda !=nil {return _dgda ;};_fdfe .HdpWidth =_dfcc ;_dfcc ,_dgda =_fdfe ._cbgf .ReadByte ();if _dgda !=nil {return _dgda ;
};_fdfe .HdpHeight =_dfcc ;return nil ;};func (_cade *RegionSegment )parseHeader ()error {const _debff ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ca .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_ca .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_fabb ,_edaace :=_cade ._ffad .ReadBits (32);
if _edaace !=nil {return _cb .Wrap (_edaace ,_debff ,"\u0077\u0069\u0064t\u0068");};_cade .BitmapWidth =uint32 (_fabb &_f .MaxUint32 );_fabb ,_edaace =_cade ._ffad .ReadBits (32);if _edaace !=nil {return _cb .Wrap (_edaace ,_debff ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_cade .BitmapHeight =uint32 (_fabb &_f .MaxUint32 );_fabb ,_edaace =_cade ._ffad .ReadBits (32);if _edaace !=nil {return _cb .Wrap (_edaace ,_debff ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_cade .XLocation =uint32 (_fabb &_f .MaxUint32 );
_fabb ,_edaace =_cade ._ffad .ReadBits (32);if _edaace !=nil {return _cb .Wrap (_edaace ,_debff ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_cade .YLocation =uint32 (_fabb &_f .MaxUint32 );if _ ,_edaace =_cade ._ffad .ReadBits (5);
_edaace !=nil {return _cb .Wrap (_edaace ,_debff ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _edaace =_cade .readCombinationOperator ();_edaace !=nil {return _cb .Wrap (_edaace ,_debff ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};return nil ;};func (_ebfc *SymbolDictionary )parseHeader ()(_defd error ){_ca .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _defd !=nil {_ca .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_defd );
}else {_ca .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _defd =_ebfc .readRegionFlags ();_defd !=nil {return _defd ;};if _defd =_ebfc .setAtPixels ();_defd !=nil {return _defd ;};if _defd =_ebfc .setRefinementAtPixels ();_defd !=nil {return _defd ;};if _defd =_ebfc .readNumberOfExportedSymbols ();_defd !=nil {return _defd ;
};if _defd =_ebfc .readNumberOfNewSymbols ();_defd !=nil {return _defd ;};if _defd =_ebfc .setInSyms ();_defd !=nil {return _defd ;};if _ebfc ._cdfa {_fbcc :=_ebfc .Header .RTSegments ;for _cfcb :=len (_fbcc )-1;_cfcb >=0;_cfcb --{if _fbcc [_cfcb ].Type ==0{_egad ,_ffeeb :=_fbcc [_cfcb ].SegmentData .(*SymbolDictionary );
if !_ffeeb {_defd =_eg .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_fbcc [_cfcb ]);
return _defd ;};if _egad ._cdfa {_ebfc .setRetainedCodingContexts (_egad );};break ;};};};if _defd =_ebfc .checkInput ();_defd !=nil {return _defd ;};return nil ;};func (_gaee *SymbolDictionary )encodeFlags (_cfdf _ae .BinaryWriter )(_edg int ,_ggbg error ){const _dcg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _ggbg =_cfdf .SkipBits (3);_ggbg !=nil {return 0,_cb .Wrap (_ggbg ,_dcg ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _eeeg int ;if _gaee .SdrTemplate > 0{_eeeg =1;};if _ggbg =_cfdf .WriteBit (_eeeg );_ggbg !=nil {return _edg ,_cb .Wrap (_ggbg ,_dcg ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_eeeg =0;if _gaee .SdTemplate > 1{_eeeg =1;};if _ggbg =_cfdf .WriteBit (_eeeg );_ggbg !=nil {return _edg ,_cb .Wrap (_ggbg ,_dcg ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_eeeg =0;if _gaee .SdTemplate ==1||_gaee .SdTemplate ==3{_eeeg =1;
};if _ggbg =_cfdf .WriteBit (_eeeg );_ggbg !=nil {return _edg ,_cb .Wrap (_ggbg ,_dcg ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_eeeg =0;if _gaee ._febg {_eeeg =1;};if _ggbg =_cfdf .WriteBit (_eeeg );_ggbg !=nil {return _edg ,_cb .Wrap (_ggbg ,_dcg ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_eeeg =0;if _gaee ._cdfa {_eeeg =1;};if _ggbg =_cfdf .WriteBit (_eeeg );_ggbg !=nil {return _edg ,_cb .Wrap (_ggbg ,_dcg ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_eeeg =0;if _gaee .SdHuffAggInstanceSelection {_eeeg =1;
};if _ggbg =_cfdf .WriteBit (_eeeg );_ggbg !=nil {return _edg ,_cb .Wrap (_ggbg ,_dcg ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_eeeg =int (_gaee .SdHuffBMSizeSelection );if _ggbg =_cfdf .WriteBit (_eeeg );_ggbg !=nil {return _edg ,_cb .Wrap (_ggbg ,_dcg ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_eeeg =0;if _gaee .SdHuffDecodeWidthSelection > 1{_eeeg =1;};if _ggbg =_cfdf .WriteBit (_eeeg );_ggbg !=nil {return _edg ,_cb .Wrap (_ggbg ,_dcg ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_eeeg =0;switch _gaee .SdHuffDecodeWidthSelection {case 1,3:_eeeg =1;
};if _ggbg =_cfdf .WriteBit (_eeeg );_ggbg !=nil {return _edg ,_cb .Wrap (_ggbg ,_dcg ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_eeeg =0;if _gaee .SdHuffDecodeHeightSelection > 1{_eeeg =1;};if _ggbg =_cfdf .WriteBit (_eeeg );_ggbg !=nil {return _edg ,_cb .Wrap (_ggbg ,_dcg ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_eeeg =0;switch _gaee .SdHuffDecodeHeightSelection {case 1,3:_eeeg =1;};if _ggbg =_cfdf .WriteBit (_eeeg );_ggbg !=nil {return _edg ,_cb .Wrap (_ggbg ,_dcg ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_eeeg =0;if _gaee .UseRefinementAggregation {_eeeg =1;
};if _ggbg =_cfdf .WriteBit (_eeeg );_ggbg !=nil {return _edg ,_cb .Wrap (_ggbg ,_dcg ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_eeeg =0;if _gaee .IsHuffmanEncoded {_eeeg =1;};if _ggbg =_cfdf .WriteBit (_eeeg );_ggbg !=nil {return _edg ,_cb .Wrap (_ggbg ,_dcg ,"\u0073\u0064\u0048\u0075\u0066\u0066");
};return 2,nil ;};func (_dbeb *SymbolDictionary )getSbSymCodeLen ()int8 {_bebc :=int8 (_f .Ceil (_f .Log (float64 (_dbeb ._dfe +_dbeb .NumberOfNewSymbols ))/_f .Log (2)));if _dbeb .IsHuffmanEncoded &&_bebc < 1{return 1;};return _bebc ;};type GenericRegion struct{_aabc _ae .StreamReader ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_acf bool ;
Bitmap *_g .Bitmap ;_abdc *_df .Decoder ;_bbbd *_df .DecoderStats ;_ade *_fg .Decoder ;};func (_dfd *TextRegion )GetRegionInfo ()*RegionSegment {return _dfd .RegionInfo };func (_aedg *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_aedg .SdHuffAggInstanceSelection {_bgde ,_gdbb :=_de .GetStandardTable (1);
if _gdbb !=nil {return 0,_gdbb ;};return _bgde .Decode (_aedg ._bfca );};if _aedg ._ddgda ==nil {var (_gdfgf int ;_ddfff error ;);if _aedg .SdHuffDecodeHeightSelection ==3{_gdfgf ++;};if _aedg .SdHuffDecodeWidthSelection ==3{_gdfgf ++;};if _aedg .SdHuffBMSizeSelection ==3{_gdfgf ++;
};_aedg ._ddgda ,_ddfff =_aedg .getUserTable (_gdfgf );if _ddfff !=nil {return 0,_ddfff ;};};return _aedg ._ddgda .Decode (_aedg ._bfca );};func (_abed *PatternDictionary )computeSegmentDataStructure ()error {_abed .DataOffset =_abed ._cbgf .StreamPosition ();
_abed .DataHeaderLength =_abed .DataOffset -_abed .DataHeaderOffset ;_abed .DataLength =int64 (_abed ._cbgf .Length ())-_abed .DataHeaderLength ;return nil ;};func (_edc *GenericRegion )decodeTemplate1 (_cgbb ,_edff ,_eeebb int ,_fbc ,_gda int )(_dagb error ){const _aae ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_bde ,_aba int ;_ffc ,_ecba int ;_cbf byte ;_daad ,_gbda int ;);if _cgbb >=1{_cbf ,_dagb =_edc .Bitmap .GetByte (_gda );if _dagb !=nil {return _cb .Wrap (_dagb ,_aae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ffc =int (_cbf );};if _cgbb >=2{_cbf ,_dagb =_edc .Bitmap .GetByte (_gda -_edc .Bitmap .RowStride );
if _dagb !=nil {return _cb .Wrap (_dagb ,_aae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ecba =int (_cbf )<<5;};_bde =((_ffc >>1)&0x1f8)|((_ecba >>1)&0x1e00);for _ecf :=0;_ecf < _eeebb ;_ecf =_daad {var (_gca byte ;_afb int ;);_daad =_ecf +8;if _fbe :=_edff -_ecf ;
_fbe > 8{_afb =8;}else {_afb =_fbe ;};if _cgbb > 0{_ffc <<=8;if _daad < _edff {_cbf ,_dagb =_edc .Bitmap .GetByte (_gda +1);if _dagb !=nil {return _cb .Wrap (_dagb ,_aae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ffc |=int (_cbf );};};if _cgbb > 1{_ecba <<=8;
if _daad < _edff {_cbf ,_dagb =_edc .Bitmap .GetByte (_gda -_edc .Bitmap .RowStride +1);if _dagb !=nil {return _cb .Wrap (_dagb ,_aae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ecba |=int (_cbf )<<5;};};for _dbab :=0;_dbab < _afb ;_dbab ++{if _edc ._acf {_aba =_edc .overrideAtTemplate1 (_bde ,_ecf +_dbab ,_cgbb ,int (_gca ),_dbab );
_edc ._bbbd .SetIndex (int32 (_aba ));}else {_edc ._bbbd .SetIndex (int32 (_bde ));};_gbda ,_dagb =_edc ._abdc .DecodeBit (_edc ._bbbd );if _dagb !=nil {return _cb .Wrap (_dagb ,_aae ,"");};_gca |=byte (_gbda )<<uint (7-_dbab );_ebca :=uint (8-_dbab );
_bde =((_bde &0xefb)<<1)|_gbda |((_ffc >>_ebca )&0x8)|((_ecba >>_ebca )&0x200);};if _fcb :=_edc .Bitmap .SetByte (_fbc ,_gca );_fcb !=nil {return _cb .Wrap (_fcb ,_aae ,"");};_fbc ++;_gda ++;};return nil ;};func (_bgbab *SymbolDictionary )readRegionFlags ()error {var (_acb uint64 ;
_adegb int ;);_ ,_decf :=_bgbab ._bfca .ReadBits (3);if _decf !=nil {return _decf ;};_adegb ,_decf =_bgbab ._bfca .ReadBit ();if _decf !=nil {return _decf ;};_bgbab .SdrTemplate =int8 (_adegb );_acb ,_decf =_bgbab ._bfca .ReadBits (2);if _decf !=nil {return _decf ;
};_bgbab .SdTemplate =int8 (_acb &0xf);_adegb ,_decf =_bgbab ._bfca .ReadBit ();if _decf !=nil {return _decf ;};if _adegb ==1{_bgbab ._febg =true ;};_adegb ,_decf =_bgbab ._bfca .ReadBit ();if _decf !=nil {return _decf ;};if _adegb ==1{_bgbab ._cdfa =true ;
};_adegb ,_decf =_bgbab ._bfca .ReadBit ();if _decf !=nil {return _decf ;};if _adegb ==1{_bgbab .SdHuffAggInstanceSelection =true ;};_adegb ,_decf =_bgbab ._bfca .ReadBit ();if _decf !=nil {return _decf ;};_bgbab .SdHuffBMSizeSelection =int8 (_adegb );
_acb ,_decf =_bgbab ._bfca .ReadBits (2);if _decf !=nil {return _decf ;};_bgbab .SdHuffDecodeWidthSelection =int8 (_acb &0xf);_acb ,_decf =_bgbab ._bfca .ReadBits (2);if _decf !=nil {return _decf ;};_bgbab .SdHuffDecodeHeightSelection =int8 (_acb &0xf);
_adegb ,_decf =_bgbab ._bfca .ReadBit ();if _decf !=nil {return _decf ;};if _adegb ==1{_bgbab .UseRefinementAggregation =true ;};_adegb ,_decf =_bgbab ._bfca .ReadBit ();if _decf !=nil {return _decf ;};if _adegb ==1{_bgbab .IsHuffmanEncoded =true ;};return nil ;
};func (_cbd *PageInformationSegment )readContainsRefinement ()error {_dffg ,_fbac :=_cbd ._gacd .ReadBit ();if _fbac !=nil {return _fbac ;};if _dffg ==1{_cbd ._fbdfe =true ;};return nil ;};func (_gffe *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _ffce ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _gffe .SbHuffRSize ==0{_gaaa ,_gbba :=_de .GetStandardTable (1);if _gbba !=nil {return 0,_cb .Wrap (_gbba ,_ffce ,"");};return _gaaa .Decode (_gffe ._cbgc );};if _gffe ._ddbb ==nil {var (_eag int ;_ebfcf error ;);if _gffe .SbHuffFS ==3{_eag ++;};if _gffe .SbHuffDS ==3{_eag ++;
};if _gffe .SbHuffDT ==3{_eag ++;};if _gffe .SbHuffRDWidth ==3{_eag ++;};if _gffe .SbHuffRDHeight ==3{_eag ++;};if _gffe .SbHuffRDX ==3{_eag ++;};if _gffe .SbHuffRDY ==3{_eag ++;};_gffe ._ddbb ,_ebfcf =_gffe .getUserTable (_eag );if _ebfcf !=nil {return 0,_cb .Wrap (_ebfcf ,_ffce ,"");
};};_fegd ,_gbbbe :=_gffe ._ddbb .Decode (_gffe ._cbgc );if _gbbbe !=nil {return 0,_cb .Wrap (_gbbbe ,_ffce ,"");};return _fegd ,nil ;};func (_fdb *GenericRegion )copyLineAbove (_cgd int )error {_cabg :=_cgd *_fdb .Bitmap .RowStride ;_bfee :=_cabg -_fdb .Bitmap .RowStride ;
for _acgg :=0;_acgg < _fdb .Bitmap .RowStride ;_acgg ++{_eaf ,_dffb :=_fdb .Bitmap .GetByte (_bfee );if _dffb !=nil {return _dffb ;};_bfee ++;if _dffb =_fdb .Bitmap .SetByte (_cabg ,_eaf );_dffb !=nil {return _dffb ;};_cabg ++;};return nil ;};func (_afd *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _afd ._dgee };
type HalftoneRegion struct{_dgdf _ae .StreamReader ;_gbeff *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _g .CombinationOperator ;HSkipEnabled bool ;
HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_g .Bitmap ;Patterns []*_g .Bitmap ;};func (_dbg *GenericRegion )setParametersWithAt (_cefb bool ,_geac byte ,_bdeg ,_bdcd bool ,_ggcf ,_fdf []int8 ,_afc ,_debfe uint32 ,_bfb *_df .DecoderStats ,_bbaf *_df .Decoder ){_dbg .IsMMREncoded =_cefb ;
_dbg .GBTemplate =_geac ;_dbg .IsTPGDon =_bdeg ;_dbg .GBAtX =_ggcf ;_dbg .GBAtY =_fdf ;_dbg .RegionSegment .BitmapHeight =_debfe ;_dbg .RegionSegment .BitmapWidth =_afc ;_dbg ._ade =nil ;_dbg .Bitmap =nil ;if _bfb !=nil {_dbg ._bbbd =_bfb ;};if _bbaf !=nil {_dbg ._abdc =_bbaf ;
};_ca .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_dbg );};func (_bd *GenericRefinementRegion )getPixel (_dgaa *_g .Bitmap ,_fdd ,_bfe int )int {if _fdd < 0||_fdd >=_dgaa .Width {return 0;
};if _bfe < 0||_bfe >=_dgaa .Height {return 0;};if _dgaa .GetPixel (_fdd ,_bfe ){return 1;};return 0;};func (_ffg *GenericRegion )decodeLine (_gcg ,_ddff ,_gaf int )error {const _aeec ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_ffee :=_ffg .Bitmap .GetByteIndex (0,_gcg );
_fcd :=_ffee -_ffg .Bitmap .RowStride ;switch _ffg .GBTemplate {case 0:if !_ffg .UseExtTemplates {return _ffg .decodeTemplate0a (_gcg ,_ddff ,_gaf ,_ffee ,_fcd );};return _ffg .decodeTemplate0b (_gcg ,_ddff ,_gaf ,_ffee ,_fcd );case 1:return _ffg .decodeTemplate1 (_gcg ,_ddff ,_gaf ,_ffee ,_fcd );
case 2:return _ffg .decodeTemplate2 (_gcg ,_ddff ,_gaf ,_ffee ,_fcd );case 3:return _ffg .decodeTemplate3 (_gcg ,_ddff ,_gaf ,_ffee ,_fcd );};return _cb .Errorf (_aeec ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_ffg .GBTemplate );
};func (_ffccc *SymbolDictionary )setRetainedCodingContexts (_ecbe *SymbolDictionary ){_ffccc ._dagg =_ecbe ._dagg ;_ffccc .IsHuffmanEncoded =_ecbe .IsHuffmanEncoded ;_ffccc .UseRefinementAggregation =_ecbe .UseRefinementAggregation ;_ffccc .SdTemplate =_ecbe .SdTemplate ;
_ffccc .SdrTemplate =_ecbe .SdrTemplate ;_ffccc .SdATX =_ecbe .SdATX ;_ffccc .SdATY =_ecbe .SdATY ;_ffccc .SdrATX =_ecbe .SdrATX ;_ffccc .SdrATY =_ecbe .SdrATY ;_ffccc ._fgba =_ecbe ._fgba ;};type SegmentEncoder interface{Encode (_ceag _ae .BinaryWriter )(_cbgg int ,_afgb error );
};func (_aecbf *GenericRegion )decodeTemplate2 (_edaac ,_abeb ,_bda int ,_ccec ,_egca int )(_ggfd error ){const _ggfg ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_ccgg ,_eebg int ;_dea ,_gae int ;_ffba byte ;
_gadb ,_afge int ;);if _edaac >=1{_ffba ,_ggfd =_aecbf .Bitmap .GetByte (_egca );if _ggfd !=nil {return _cb .Wrap (_ggfd ,_ggfg ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_dea =int (_ffba );};if _edaac >=2{_ffba ,_ggfd =_aecbf .Bitmap .GetByte (_egca -_aecbf .Bitmap .RowStride );
if _ggfd !=nil {return _cb .Wrap (_ggfd ,_ggfg ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_gae =int (_ffba )<<4;};_ccgg =(_dea >>3&0x7c)|(_gae >>3&0x380);for _fdbc :=0;_fdbc < _bda ;_fdbc =_gadb {var (_gef byte ;
_abae int ;);_gadb =_fdbc +8;if _ggdb :=_abeb -_fdbc ;_ggdb > 8{_abae =8;}else {_abae =_ggdb ;};if _edaac > 0{_dea <<=8;if _gadb < _abeb {_ffba ,_ggfd =_aecbf .Bitmap .GetByte (_egca +1);if _ggfd !=nil {return _cb .Wrap (_ggfd ,_ggfg ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_dea |=int (_ffba );};};if _edaac > 1{_gae <<=8;if _gadb < _abeb {_ffba ,_ggfd =_aecbf .Bitmap .GetByte (_egca -_aecbf .Bitmap .RowStride +1);if _ggfd !=nil {return _cb .Wrap (_ggfd ,_ggfg ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_gae |=int (_ffba )<<4;};};for _ddgd :=0;_ddgd < _abae ;_ddgd ++{_gcef :=uint (10-_ddgd );if _aecbf ._acf {_eebg =_aecbf .overrideAtTemplate2 (_ccgg ,_fdbc +_ddgd ,_edaac ,int (_gef ),_ddgd );_aecbf ._bbbd .SetIndex (int32 (_eebg ));}else {_aecbf ._bbbd .SetIndex (int32 (_ccgg ));
};_afge ,_ggfd =_aecbf ._abdc .DecodeBit (_aecbf ._bbbd );if _ggfd !=nil {return _cb .Wrap (_ggfd ,_ggfg ,"");};_gef |=byte (_afge <<uint (7-_ddgd ));_ccgg =((_ccgg &0x1bd)<<1)|_afge |((_dea >>_gcef )&0x4)|((_gae >>_gcef )&0x80);};if _accd :=_aecbf .Bitmap .SetByte (_ccec ,_gef );
_accd !=nil {return _cb .Wrap (_accd ,_ggfg ,"");};_ccec ++;_egca ++;};return nil ;};type GenericRefinementRegion struct{_eb templater ;_ea templater ;_aa _ae .StreamReader ;_cd *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;
GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_g .Bitmap ;ReferenceBitmap *_g .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_ebd *_df .Decoder ;_ebg *_df .DecoderStats ;_bg bool ;_ee []bool ;};type TableSegment struct{_cbb _ae .StreamReader ;_bbadg int32 ;
_dbec int32 ;_bdad int32 ;_gddd int32 ;_gefg int32 ;};func (_ccdg *TextRegion )setContexts (_dfbee *_df .DecoderStats ,_cgfc *_df .DecoderStats ,_babb *_df .DecoderStats ,_dbfdd *_df .DecoderStats ,_becf *_df .DecoderStats ,_ccddg *_df .DecoderStats ,_bcde *_df .DecoderStats ,_bcfd *_df .DecoderStats ,_ffaga *_df .DecoderStats ,_fcaf *_df .DecoderStats ){_ccdg ._baaeg =_cgfc ;
_ccdg ._gcae =_babb ;_ccdg ._fdga =_dbfdd ;_ccdg ._fegf =_becf ;_ccdg ._dabfd =_bcde ;_ccdg ._gbbg =_bcfd ;_ccdg ._gdcf =_ccddg ;_ccdg ._dedc =_ffaga ;_ccdg ._dgdg =_fcaf ;_ccdg ._cagf =_dfbee ;};func (_cbeb *TableSegment )parseHeader ()error {var (_bcd int ;
_adfa uint64 ;_egab error ;);_bcd ,_egab =_cbeb ._cbb .ReadBit ();if _egab !=nil {return _egab ;};if _bcd ==1{return _eg .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_bcd );
};if _adfa ,_egab =_cbeb ._cbb .ReadBits (3);_egab !=nil {return _egab ;};_cbeb ._bdad =(int32 (_adfa )+1)&0xf;if _adfa ,_egab =_cbeb ._cbb .ReadBits (3);_egab !=nil {return _egab ;};_cbeb ._dbec =(int32 (_adfa )+1)&0xf;if _adfa ,_egab =_cbeb ._cbb .ReadBits (32);
_egab !=nil {return _egab ;};_cbeb ._gddd =int32 (_adfa &_f .MaxInt32 );if _adfa ,_egab =_cbeb ._cbb .ReadBits (32);_egab !=nil {return _egab ;};_cbeb ._gefg =int32 (_adfa &_f .MaxInt32 );return nil ;};func (_gbb *GenericRefinementRegion )decodeTypicalPredictedLine (_acg ,_ba ,_fc ,_cc ,_bffc ,_ec int )error {_gg :=_acg -int (_gbb .ReferenceDY );
_gbd :=_gbb .ReferenceBitmap .GetByteIndex (0,_gg );_dg :=_gbb .RegionBitmap .GetByteIndex (0,_acg );var _acc error ;switch _gbb .TemplateID {case 0:_acc =_gbb .decodeTypicalPredictedLineTemplate0 (_acg ,_ba ,_fc ,_cc ,_bffc ,_ec ,_dg ,_gg ,_gbd );case 1:_acc =_gbb .decodeTypicalPredictedLineTemplate1 (_acg ,_ba ,_fc ,_cc ,_bffc ,_ec ,_dg ,_gg ,_gbd );
};return _acc ;};func (_gafe *HalftoneRegion )shiftAndFill (_cabe int )int {_cabe >>=8;if _cabe < 0{_fdgd :=int (_f .Log (float64 (_efc (_cabe )))/_f .Log (2));_fae :=31-_fdgd ;for _dgcg :=1;_dgcg < _fae ;_dgcg ++{_cabe |=1<<uint (31-_dgcg );};};return _cabe ;
};type template0 struct{};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;
TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;
TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_cefc *HalftoneRegion )GetPatterns ()([]*_g .Bitmap ,error ){var (_dcaf []*_g .Bitmap ;
_gbfc error ;);for _ ,_gaeb :=range _cefc ._gbeff .RTSegments {var _gbdg Segmenter ;_gbdg ,_gbfc =_gaeb .GetSegmentData ();if _gbfc !=nil {_ca .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_gbfc );
return nil ,_gbfc ;};_eafcg ,_gbcb :=_gbdg .(*PatternDictionary );if !_gbcb {_gbfc =_eg .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_gbdg );
return nil ,_gbfc ;};var _bdaa []*_g .Bitmap ;_bdaa ,_gbfc =_eafcg .GetDictionary ();if _gbfc !=nil {_ca .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gbfc );
return nil ,_gbfc ;};_dcaf =append (_dcaf ,_bdaa ...);};return _dcaf ,nil ;};func (_gbdb *PageInformationSegment )readResolution ()error {_fbdae ,_bbge :=_gbdb ._gacd .ReadBits (32);if _bbge !=nil {return _bbge ;};_gbdb .ResolutionX =int (_fbdae &_f .MaxInt32 );
_fbdae ,_bbge =_gbdb ._gacd .ReadBits (32);if _bbge !=nil {return _bbge ;};_gbdb .ResolutionY =int (_fbdae &_f .MaxInt32 );return nil ;};func (_eecb *TextRegion )decodeRdh ()(int64 ,error ){const _edcgcd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _eecb .IsHuffmanEncoded {if _eecb .SbHuffRDHeight ==3{if _eecb ._dfbe ==nil {var (_gbaf int ;_abdb error ;);if _eecb .SbHuffFS ==3{_gbaf ++;};if _eecb .SbHuffDS ==3{_gbaf ++;};if _eecb .SbHuffDT ==3{_gbaf ++;};if _eecb .SbHuffRDWidth ==3{_gbaf ++;};
_eecb ._dfbe ,_abdb =_eecb .getUserTable (_gbaf );if _abdb !=nil {return 0,_cb .Wrap (_abdb ,_edcgcd ,"");};};return _eecb ._dfbe .Decode (_eecb ._cbgc );};_cbfee ,_bebe :=_de .GetStandardTable (14+int (_eecb .SbHuffRDHeight ));if _bebe !=nil {return 0,_cb .Wrap (_bebe ,_edcgcd ,"");
};return _cbfee .Decode (_eecb ._cbgc );};_bee ,_egbd :=_eecb ._fdaa .DecodeInt (_eecb ._gbbg );if _egbd !=nil {return 0,_cb .Wrap (_egbd ,_edcgcd ,"");};return int64 (_bee ),nil ;};func (_ebac *HalftoneRegion )computeX (_fadcab ,_gaeg int )int {return _ebac .shiftAndFill (int (_ebac .HGridX )+_fadcab *int (_ebac .HRegionY )+_gaeg *int (_ebac .HRegionX ));
};func (_cfaf *TextRegion )decodeRdw ()(int64 ,error ){const _ebaa ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _cfaf .IsHuffmanEncoded {if _cfaf .SbHuffRDWidth ==3{if _cfaf ._eggcd ==nil {var (_adadg int ;_abfg error ;);if _cfaf .SbHuffFS ==3{_adadg ++;
};if _cfaf .SbHuffDS ==3{_adadg ++;};if _cfaf .SbHuffDT ==3{_adadg ++;};_cfaf ._eggcd ,_abfg =_cfaf .getUserTable (_adadg );if _abfg !=nil {return 0,_cb .Wrap (_abfg ,_ebaa ,"");};};return _cfaf ._eggcd .Decode (_cfaf ._cbgc );};_edgg ,_agcb :=_de .GetStandardTable (14+int (_cfaf .SbHuffRDWidth ));
if _agcb !=nil {return 0,_cb .Wrap (_agcb ,_ebaa ,"");};return _edgg .Decode (_cfaf ._cbgc );};_bbfb ,_geag :=_cfaf ._fdaa .DecodeInt (_cfaf ._dabfd );if _geag !=nil {return 0,_cb .Wrap (_geag ,_ebaa ,"");};return int64 (_bbfb ),nil ;};func (_aca *GenericRegion )writeGBAtPixels (_ffeb _ae .BinaryWriter )(_acca int ,_gfbg error ){const _dagd ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _aca .UseMMR {return 0,nil ;};_eaaf :=1;if _aca .GBTemplate ==0{_eaaf =4;}else if _aca .UseExtTemplates {_eaaf =12;};if len (_aca .GBAtX )!=_eaaf {return 0,_cb .Errorf (_dagd ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_aca .GBAtY )!=_eaaf {return 0,_cb .Errorf (_dagd ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _edb :=0;_edb < _eaaf ;_edb ++{if _gfbg =_ffeb .WriteByte (byte (_aca .GBAtX [_edb ]));_gfbg !=nil {return _acca ,_cb .Wrap (_gfbg ,_dagd ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_acca ++;if _gfbg =_ffeb .WriteByte (byte (_aca .GBAtY [_edb ]));
_gfbg !=nil {return _acca ,_cb .Wrap (_gfbg ,_dagd ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_acca ++;};return _acca ,nil ;};func (_dfab *SymbolDictionary )getSymbol (_afdb int )(*_g .Bitmap ,error ){const _dffe ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_fedbb ,_gacg :=_dfab ._fdcc .GetBitmap (_dfab ._bdcg [_afdb ]);if _gacg !=nil {return nil ,_cb .Wrap (_gacg ,_dffe ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _fedbb ,nil ;};func (_efbg *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_g .Points ,symbols *_g .Bitmaps ,classIDs *_ad .IntSlice ,boxes *_g .Boxes ,width ,height ,symBits int ){_efbg .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_efbg ._edcgd =globalSymbolsMap ;_efbg ._dbce =localSymbolsMap ;_efbg ._fgcga =comps ;_efbg ._add =inLL ;_efbg ._bdcgd =symbols ;_efbg ._eebf =classIDs ;_efbg ._abaf =boxes ;_efbg ._badd =symBits ;};func (_feff *TextRegion )parseHeader ()error {var _gdaf error ;
_ca .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _gdaf !=nil {_ca .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_gdaf );
}else {_ca .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _gdaf =_feff .RegionInfo .parseHeader ();
_gdaf !=nil {return _gdaf ;};if _gdaf =_feff .readRegionFlags ();_gdaf !=nil {return _gdaf ;};if _feff .IsHuffmanEncoded {if _gdaf =_feff .readHuffmanFlags ();_gdaf !=nil {return _gdaf ;};};if _gdaf =_feff .readUseRefinement ();_gdaf !=nil {return _gdaf ;
};if _gdaf =_feff .readAmountOfSymbolInstances ();_gdaf !=nil {return _gdaf ;};if _gdaf =_feff .getSymbols ();_gdaf !=nil {return _gdaf ;};if _gdaf =_feff .computeSymbolCodeLength ();_gdaf !=nil {return _gdaf ;};if _gdaf =_feff .checkInput ();_gdaf !=nil {return _gdaf ;
};_ca .Log .Trace ("\u0025\u0073",_feff .String ());return nil ;};func (_edaaca *TableSegment )HtHigh ()int32 {return _edaaca ._gefg };func (_cgef *PageInformationSegment )String ()string {_egege :=&_fa .Builder {};_egege .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_egege .WriteString (_eg .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_cgef .PageBMHeight ));_egege .WriteString (_eg .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_cgef .PageBMWidth ));
_egege .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_cgef .ResolutionX ));_egege .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_cgef .ResolutionY ));
_egege .WriteString (_eg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_cgef ._cfg ));_egege .WriteString (_eg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_cgef ._dgee ));
_egege .WriteString (_eg .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_cgef .IsLossless ));_egege .WriteString (_eg .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_cgef ._eaff ));
_egege .WriteString (_eg .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_cgef ._fbdfe ));_egege .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_cgef .IsStripe ));
_egege .WriteString (_eg .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_cgef .MaxStripeSize ));return _egege .String ();};func (_bca *GenericRefinementRegion )updateOverride ()error {if _bca .GrAtX ==nil ||_bca .GrAtY ==nil {return _ag .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_bca .GrAtX )!=len (_bca .GrAtY ){return _ag .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_bca ._ee =make ([]bool ,len (_bca .GrAtX ));switch _bca .TemplateID {case 0:if _bca .GrAtX [0]!=-1&&_bca .GrAtY [0]!=-1{_bca ._ee [0]=true ;
_bca ._bg =true ;};if _bca .GrAtX [1]!=-1&&_bca .GrAtY [1]!=-1{_bca ._ee [1]=true ;_bca ._bg =true ;};case 1:_bca ._bg =false ;};return nil ;};func (_aecbb *RegionSegment )Size ()int {return 17};func (_cefd *Header )writeSegmentPageAssociation (_afea _ae .BinaryWriter )(_fdeg int ,_dbe error ){const _gaa ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _cefd .pageSize ()!=4{if _dbe =_afea .WriteByte (byte (_cefd .PageAssociation ));_dbe !=nil {return 0,_cb .Wrap (_dbe ,_gaa ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_cbg :=make ([]byte ,4);
_e .BigEndian .PutUint32 (_cbg ,uint32 (_cefd .PageAssociation ));if _fdeg ,_dbe =_afea .Write (_cbg );_dbe !=nil {return 0,_cb .Wrap (_dbe ,_gaa ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _fdeg ,nil ;
};type Segmenter interface{Init (_aced *Header ,_bacd _ae .StreamReader )error ;};func (_abaff *TextRegion )blit (_gdeb *_g .Bitmap ,_debced int64 )error {if _abaff .IsTransposed ==0&&(_abaff .ReferenceCorner ==2||_abaff .ReferenceCorner ==3){_abaff ._aade +=int64 (_gdeb .Width -1);
}else if _abaff .IsTransposed ==1&&(_abaff .ReferenceCorner ==0||_abaff .ReferenceCorner ==2){_abaff ._aade +=int64 (_gdeb .Height -1);};_gafg :=_abaff ._aade ;if _abaff .IsTransposed ==1{_gafg ,_debced =_debced ,_gafg ;};switch _abaff .ReferenceCorner {case 0:_debced -=int64 (_gdeb .Height -1);
case 2:_debced -=int64 (_gdeb .Height -1);_gafg -=int64 (_gdeb .Width -1);case 3:_gafg -=int64 (_gdeb .Width -1);};_cgefg :=_g .Blit (_gdeb ,_abaff .RegionBitmap ,int (_gafg ),int (_debced ),_abaff .CombinationOperator );if _cgefg !=nil {return _cgefg ;
};if _abaff .IsTransposed ==0&&(_abaff .ReferenceCorner ==0||_abaff .ReferenceCorner ==1){_abaff ._aade +=int64 (_gdeb .Width -1);};if _abaff .IsTransposed ==1&&(_abaff .ReferenceCorner ==1||_abaff .ReferenceCorner ==3){_abaff ._aade +=int64 (_gdeb .Height -1);
};return nil ;};func (_fadc *GenericRegion )decodeTemplate0a (_fec ,_fefb ,_ffaa int ,_gagg ,_fbd int )(_bbbc error ){const _ggcc ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_dfgb ,_gea int ;_fcc ,_gfga int ;
_egc byte ;_ffga int ;);if _fec >=1{_egc ,_bbbc =_fadc .Bitmap .GetByte (_fbd );if _bbbc !=nil {return _cb .Wrap (_bbbc ,_ggcc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fcc =int (_egc );};if _fec >=2{_egc ,_bbbc =_fadc .Bitmap .GetByte (_fbd -_fadc .Bitmap .RowStride );
if _bbbc !=nil {return _cb .Wrap (_bbbc ,_ggcc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gfga =int (_egc )<<6;};_dfgb =(_fcc &0xf0)|(_gfga &0x3800);for _cebf :=0;_cebf < _ffaa ;_cebf =_ffga {var (_agec byte ;_edae int ;);_ffga =_cebf +8;if _debf :=_fefb -_cebf ;
_debf > 8{_edae =8;}else {_edae =_debf ;};if _fec > 0{_fcc <<=8;if _ffga < _fefb {_egc ,_bbbc =_fadc .Bitmap .GetByte (_fbd +1);if _bbbc !=nil {return _cb .Wrap (_bbbc ,_ggcc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_fcc |=int (_egc );};};
if _fec > 1{_bacg :=_fbd -_fadc .Bitmap .RowStride +1;_gfga <<=8;if _ffga < _fefb {_egc ,_bbbc =_fadc .Bitmap .GetByte (_bacg );if _bbbc !=nil {return _cb .Wrap (_bbbc ,_ggcc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gfga |=int (_egc )<<6;
}else {_gfga |=0;};};for _cef :=0;_cef < _edae ;_cef ++{_ccg :=uint (7-_cef );if _fadc ._acf {_gea =_fadc .overrideAtTemplate0a (_dfgb ,_cebf +_cef ,_fec ,int (_agec ),_cef ,int (_ccg ));_fadc ._bbbd .SetIndex (int32 (_gea ));}else {_fadc ._bbbd .SetIndex (int32 (_dfgb ));
};var _cgb int ;_cgb ,_bbbc =_fadc ._abdc .DecodeBit (_fadc ._bbbd );if _bbbc !=nil {return _cb .Wrap (_bbbc ,_ggcc ,"");};_agec |=byte (_cgb )<<_ccg ;_dfgb =((_dfgb &0x7bf7)<<1)|_cgb |((_fcc >>_ccg )&0x10)|((_gfga >>_ccg )&0x800);};if _eggg :=_fadc .Bitmap .SetByte (_gagg ,_agec );
_eggg !=nil {return _cb .Wrap (_eggg ,_ggcc ,"");};_gagg ++;_fbd ++;};return nil ;};func (_ffdd *GenericRegion )decodeSLTP ()(int ,error ){switch _ffdd .GBTemplate {case 0:_ffdd ._bbbd .SetIndex (0x9B25);case 1:_ffdd ._bbbd .SetIndex (0x795);case 2:_ffdd ._bbbd .SetIndex (0xE5);
case 3:_ffdd ._bbbd .SetIndex (0x195);};return _ffdd ._abdc .DecodeBit (_ffdd ._bbbd );};func (_degf *TextRegion )readUseRefinement ()error {if !_degf .UseRefinement ||_degf .SbrTemplate !=0{return nil ;};var (_cbce byte ;_ecfe error ;);_degf .SbrATX =make ([]int8 ,2);
_degf .SbrATY =make ([]int8 ,2);_cbce ,_ecfe =_degf ._cbgc .ReadByte ();if _ecfe !=nil {return _ecfe ;};_degf .SbrATX [0]=int8 (_cbce );_cbce ,_ecfe =_degf ._cbgc .ReadByte ();if _ecfe !=nil {return _ecfe ;};_degf .SbrATY [0]=int8 (_cbce );_cbce ,_ecfe =_degf ._cbgc .ReadByte ();
if _ecfe !=nil {return _ecfe ;};_degf .SbrATX [1]=int8 (_cbce );_cbce ,_ecfe =_degf ._cbgc .ReadByte ();if _ecfe !=nil {return _ecfe ;};_degf .SbrATY [1]=int8 (_cbce );return nil ;};func (_ccd *PatternDictionary )checkInput ()error {if _ccd .HdpHeight < 1||_ccd .HdpWidth < 1{return _ag .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _ccd .IsMMREncoded {if _ccd .HDTemplate !=0{_ca .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_ccebg *TextRegion )readRegionFlags ()error {var (_dcad int ;_ggaa uint64 ;_abaa error ;);_dcad ,_abaa =_ccebg ._cbgc .ReadBit ();if _abaa !=nil {return _abaa ;};_ccebg .SbrTemplate =int8 (_dcad );_ggaa ,_abaa =_ccebg ._cbgc .ReadBits (5);
if _abaa !=nil {return _abaa ;};_ccebg .SbDsOffset =int8 (_ggaa );if _ccebg .SbDsOffset > 0x0f{_ccebg .SbDsOffset -=0x20;};_dcad ,_abaa =_ccebg ._cbgc .ReadBit ();if _abaa !=nil {return _abaa ;};_ccebg .DefaultPixel =int8 (_dcad );_ggaa ,_abaa =_ccebg ._cbgc .ReadBits (2);
if _abaa !=nil {return _abaa ;};_ccebg .CombinationOperator =_g .CombinationOperator (int (_ggaa )&0x3);_dcad ,_abaa =_ccebg ._cbgc .ReadBit ();if _abaa !=nil {return _abaa ;};_ccebg .IsTransposed =int8 (_dcad );_ggaa ,_abaa =_ccebg ._cbgc .ReadBits (2);
if _abaa !=nil {return _abaa ;};_ccebg .ReferenceCorner =int16 (_ggaa )&0x3;_ggaa ,_abaa =_ccebg ._cbgc .ReadBits (2);if _abaa !=nil {return _abaa ;};_ccebg .LogSBStrips =int16 (_ggaa )&0x3;_ccebg .SbStrips =1<<uint (_ccebg .LogSBStrips );_dcad ,_abaa =_ccebg ._cbgc .ReadBit ();
if _abaa !=nil {return _abaa ;};if _dcad ==1{_ccebg .UseRefinement =true ;};_dcad ,_abaa =_ccebg ._cbgc .ReadBit ();if _abaa !=nil {return _abaa ;};if _dcad ==1{_ccebg .IsHuffmanEncoded =true ;};return nil ;};func (_adaef *TextRegion )decodeDfs ()(int64 ,error ){if _adaef .IsHuffmanEncoded {if _adaef .SbHuffFS ==3{if _adaef ._gbae ==nil {var _aeba error ;
_adaef ._gbae ,_aeba =_adaef .getUserTable (0);if _aeba !=nil {return 0,_aeba ;};};return _adaef ._gbae .Decode (_adaef ._cbgc );};_bdab ,_bbfe :=_de .GetStandardTable (6+int (_adaef .SbHuffFS ));if _bbfe !=nil {return 0,_bbfe ;};return _bdab .Decode (_adaef ._cbgc );
};_ddab ,_aacc :=_adaef ._fdaa .DecodeInt (_adaef ._gcae );if _aacc !=nil {return 0,_aacc ;};return int64 (_ddab ),nil ;};func (_bfeg *GenericRegion )overrideAtTemplate0b (_dgc ,_efae ,_gfgg ,_gee ,_abbc ,_gbcg int )int {if _bfeg .GBAtOverride [0]{_dgc &=0xFFFD;
if _bfeg .GBAtY [0]==0&&_bfeg .GBAtX [0]>=-int8 (_abbc ){_dgc |=(_gee >>uint (int8 (_gbcg )-_bfeg .GBAtX [0]&0x1))<<1;}else {_dgc |=int (_bfeg .getPixel (_efae +int (_bfeg .GBAtX [0]),_gfgg +int (_bfeg .GBAtY [0])))<<1;};};if _bfeg .GBAtOverride [1]{_dgc &=0xDFFF;
if _bfeg .GBAtY [1]==0&&_bfeg .GBAtX [1]>=-int8 (_abbc ){_dgc |=(_gee >>uint (int8 (_gbcg )-_bfeg .GBAtX [1]&0x1))<<13;}else {_dgc |=int (_bfeg .getPixel (_efae +int (_bfeg .GBAtX [1]),_gfgg +int (_bfeg .GBAtY [1])))<<13;};};if _bfeg .GBAtOverride [2]{_dgc &=0xFDFF;
if _bfeg .GBAtY [2]==0&&_bfeg .GBAtX [2]>=-int8 (_abbc ){_dgc |=(_gee >>uint (int8 (_gbcg )-_bfeg .GBAtX [2]&0x1))<<9;}else {_dgc |=int (_bfeg .getPixel (_efae +int (_bfeg .GBAtX [2]),_gfgg +int (_bfeg .GBAtY [2])))<<9;};};if _bfeg .GBAtOverride [3]{_dgc &=0xBFFF;
if _bfeg .GBAtY [3]==0&&_bfeg .GBAtX [3]>=-int8 (_abbc ){_dgc |=(_gee >>uint (int8 (_gbcg )-_bfeg .GBAtX [3]&0x1))<<14;}else {_dgc |=int (_bfeg .getPixel (_efae +int (_bfeg .GBAtX [3]),_gfgg +int (_bfeg .GBAtY [3])))<<14;};};if _bfeg .GBAtOverride [4]{_dgc &=0xEFFF;
if _bfeg .GBAtY [4]==0&&_bfeg .GBAtX [4]>=-int8 (_abbc ){_dgc |=(_gee >>uint (int8 (_gbcg )-_bfeg .GBAtX [4]&0x1))<<12;}else {_dgc |=int (_bfeg .getPixel (_efae +int (_bfeg .GBAtX [4]),_gfgg +int (_bfeg .GBAtY [4])))<<12;};};if _bfeg .GBAtOverride [5]{_dgc &=0xFFDF;
if _bfeg .GBAtY [5]==0&&_bfeg .GBAtX [5]>=-int8 (_abbc ){_dgc |=(_gee >>uint (int8 (_gbcg )-_bfeg .GBAtX [5]&0x1))<<5;}else {_dgc |=int (_bfeg .getPixel (_efae +int (_bfeg .GBAtX [5]),_gfgg +int (_bfeg .GBAtY [5])))<<5;};};if _bfeg .GBAtOverride [6]{_dgc &=0xFFFB;
if _bfeg .GBAtY [6]==0&&_bfeg .GBAtX [6]>=-int8 (_abbc ){_dgc |=(_gee >>uint (int8 (_gbcg )-_bfeg .GBAtX [6]&0x1))<<2;}else {_dgc |=int (_bfeg .getPixel (_efae +int (_bfeg .GBAtX [6]),_gfgg +int (_bfeg .GBAtY [6])))<<2;};};if _bfeg .GBAtOverride [7]{_dgc &=0xFFF7;
if _bfeg .GBAtY [7]==0&&_bfeg .GBAtX [7]>=-int8 (_abbc ){_dgc |=(_gee >>uint (int8 (_gbcg )-_bfeg .GBAtX [7]&0x1))<<3;}else {_dgc |=int (_bfeg .getPixel (_efae +int (_bfeg .GBAtX [7]),_gfgg +int (_bfeg .GBAtY [7])))<<3;};};if _bfeg .GBAtOverride [8]{_dgc &=0xF7FF;
if _bfeg .GBAtY [8]==0&&_bfeg .GBAtX [8]>=-int8 (_abbc ){_dgc |=(_gee >>uint (int8 (_gbcg )-_bfeg .GBAtX [8]&0x1))<<11;}else {_dgc |=int (_bfeg .getPixel (_efae +int (_bfeg .GBAtX [8]),_gfgg +int (_bfeg .GBAtY [8])))<<11;};};if _bfeg .GBAtOverride [9]{_dgc &=0xFFEF;
if _bfeg .GBAtY [9]==0&&_bfeg .GBAtX [9]>=-int8 (_abbc ){_dgc |=(_gee >>uint (int8 (_gbcg )-_bfeg .GBAtX [9]&0x1))<<4;}else {_dgc |=int (_bfeg .getPixel (_efae +int (_bfeg .GBAtX [9]),_gfgg +int (_bfeg .GBAtY [9])))<<4;};};if _bfeg .GBAtOverride [10]{_dgc &=0x7FFF;
if _bfeg .GBAtY [10]==0&&_bfeg .GBAtX [10]>=-int8 (_abbc ){_dgc |=(_gee >>uint (int8 (_gbcg )-_bfeg .GBAtX [10]&0x1))<<15;}else {_dgc |=int (_bfeg .getPixel (_efae +int (_bfeg .GBAtX [10]),_gfgg +int (_bfeg .GBAtY [10])))<<15;};};if _bfeg .GBAtOverride [11]{_dgc &=0xFDFF;
if _bfeg .GBAtY [11]==0&&_bfeg .GBAtX [11]>=-int8 (_abbc ){_dgc |=(_gee >>uint (int8 (_gbcg )-_bfeg .GBAtX [11]&0x1))<<10;}else {_dgc |=int (_bfeg .getPixel (_efae +int (_bfeg .GBAtX [11]),_gfgg +int (_bfeg .GBAtY [11])))<<10;};};return _dgc ;};func NewHeader (d Documenter ,r _ae .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_efdgd :=&Header {Reader :r };
if _gcce :=_efdgd .parse (d ,r ,offset ,organizationType );_gcce !=nil {return nil ,_cb .Wrap (_gcce ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _efdgd ,nil ;};func (_ddda *TextRegion )encodeSymbols (_aebe _ae .BinaryWriter )(_ebeg int ,_gccd error ){const _defg ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_acda :=make ([]byte ,4);_e .BigEndian .PutUint32 (_acda ,_ddda .NumberOfSymbols );if _ebeg ,_gccd =_aebe .Write (_acda );_gccd !=nil {return _ebeg ,_cb .Wrap (_gccd ,_defg ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_dbbf ,_gccd :=_g .NewClassedPoints (_ddda ._add ,_ddda ._fgcga );if _gccd !=nil {return 0,_cb .Wrap (_gccd ,_defg ,"");};var _afda ,_effc int ;_ecad :=_fb .New ();_ecad .Init ();if _gccd =_ecad .EncodeInteger (_fb .IADT ,0);_gccd !=nil {return _ebeg ,_cb .Wrap (_gccd ,_defg ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_dabg ,_gccd :=_dbbf .GroupByY ();if _gccd !=nil {return 0,_cb .Wrap (_gccd ,_defg ,"");};for _ ,_cecd :=range _dabg {_bdfd :=int (_cecd .YAtIndex (0));_fagd :=_bdfd -_afda ;if _gccd =_ecad .EncodeInteger (_fb .IADT ,_fagd );_gccd !=nil {return _ebeg ,_cb .Wrap (_gccd ,_defg ,"");
};var _afef int ;for _cceg ,_agee :=range _cecd .IntSlice {switch _cceg {case 0:_acgd :=int (_cecd .XAtIndex (_cceg ))-_effc ;if _gccd =_ecad .EncodeInteger (_fb .IAFS ,_acgd );_gccd !=nil {return _ebeg ,_cb .Wrap (_gccd ,_defg ,"");};_effc +=_acgd ;_afef =_effc ;
default:_deed :=int (_cecd .XAtIndex (_cceg ))-_afef ;if _gccd =_ecad .EncodeInteger (_fb .IADS ,_deed );_gccd !=nil {return _ebeg ,_cb .Wrap (_gccd ,_defg ,"");};_afef +=_deed ;};_bbde ,_ebagd :=_ddda ._eebf .Get (_agee );if _ebagd !=nil {return _ebeg ,_cb .Wrap (_ebagd ,_defg ,"");
};_cgda ,_egfb :=_ddda ._edcgd [_bbde ];if !_egfb {_cgda ,_egfb =_ddda ._dbce [_bbde ];if !_egfb {return _ebeg ,_cb .Errorf (_defg ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_bbde );
};};if _ebagd =_ecad .EncodeIAID (_ddda ._badd ,_cgda );_ebagd !=nil {return _ebeg ,_cb .Wrap (_ebagd ,_defg ,"");};};if _gccd =_ecad .EncodeOOB (_fb .IADS );_gccd !=nil {return _ebeg ,_cb .Wrap (_gccd ,_defg ,"");};};_ecad .Final ();_aadc ,_gccd :=_ecad .WriteTo (_aebe );
if _gccd !=nil {return _ebeg ,_cb .Wrap (_gccd ,_defg ,"");};_ebeg +=int (_aadc );return _ebeg ,nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_g .Bitmap ,error );};func (_dbba *TextRegion )decodeDT ()(_ecfaf int64 ,_eaab error ){if _dbba .IsHuffmanEncoded {if _dbba .SbHuffDT ==3{_ecfaf ,_eaab =_dbba ._egec .Decode (_dbba ._cbgc );
if _eaab !=nil {return 0,_eaab ;};}else {var _gbcab _de .Tabler ;_gbcab ,_eaab =_de .GetStandardTable (11+int (_dbba .SbHuffDT ));if _eaab !=nil {return 0,_eaab ;};_ecfaf ,_eaab =_gbcab .Decode (_dbba ._cbgc );if _eaab !=nil {return 0,_eaab ;};};}else {var _gcf int32 ;
_gcf ,_eaab =_dbba ._fdaa .DecodeInt (_dbba ._baaeg );if _eaab !=nil {return ;};_ecfaf =int64 (_gcf );};_ecfaf *=int64 (_dbba .SbStrips );return _ecfaf ,nil ;};func (_ecd *template0 )form (_bba ,_dag ,_eddd ,_daf ,_bec int16 )int16 {return (_bba <<10)|(_dag <<7)|(_eddd <<4)|(_daf <<1)|_bec ;
};func (_gfd *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _gfd .RegionInfo };func (_ff *EndOfStripe )Init (h *Header ,r _ae .StreamReader )error {_ff ._aec =r ;return _ff .parseHeader (h ,r );};func (_fgbb *GenericRegion )computeSegmentDataStructure ()error {_fgbb .DataOffset =_fgbb ._aabc .StreamPosition ();
_fgbb .DataHeaderLength =_fgbb .DataOffset -_fgbb .DataHeaderOffset ;_fgbb .DataLength =int64 (_fgbb ._aabc .Length ())-_fgbb .DataHeaderLength ;return nil ;};func (_eege *TextRegion )decodeID ()(int64 ,error ){if _eege .IsHuffmanEncoded {if _eege ._bdadd ==nil {_bebb ,_bfea :=_eege ._cbgc .ReadBits (byte (_eege ._dgca ));
return int64 (_bebb ),_bfea ;};return _eege ._bdadd .Decode (_eege ._cbgc );};return _eege ._fdaa .DecodeIAID (uint64 (_eege ._dgca ),_eege ._gdcf );};func (_dbc *Header )readHeaderFlags ()error {const _fedb ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_acfa ,_cfc :=_dbc .Reader .ReadBit ();if _cfc !=nil {return _cb .Wrap (_cfc ,_fedb ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _acfa !=0{_dbc .RetainFlag =true ;};_acfa ,_cfc =_dbc .Reader .ReadBit ();if _cfc !=nil {return _cb .Wrap (_cfc ,_fedb ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _acfa !=0{_dbc .PageAssociationFieldSize =true ;};_aga ,_cfc :=_dbc .Reader .ReadBits (6);if _cfc !=nil {return _cb .Wrap (_cfc ,_fedb ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_dbc .Type =Type (int (_aga ));return nil ;
};func (_ecge *GenericRegion )overrideAtTemplate1 (_adgd ,_gbef ,_eef ,_bfc ,_edcf int )int {_adgd &=0x1FF7;if _ecge .GBAtY [0]==0&&_ecge .GBAtX [0]>=-int8 (_edcf ){_adgd |=(_bfc >>uint (7-(int8 (_edcf )+_ecge .GBAtX [0]))&0x1)<<3;}else {_adgd |=int (_ecge .getPixel (_gbef +int (_ecge .GBAtX [0]),_eef +int (_ecge .GBAtY [0])))<<3;
};return _adgd ;};func (_abg *GenericRefinementRegion )parseHeader ()(_bcfa error ){_ca .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_ceb :=_d .Now ();defer func (){if _bcfa ==nil {_ca .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_d .Since (_ceb ).Nanoseconds ());
}else {_ca .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_bcfa );
};}();if _bcfa =_abg .RegionInfo .parseHeader ();_bcfa !=nil {return _bcfa ;};_ ,_bcfa =_abg ._aa .ReadBits (6);if _bcfa !=nil {return _bcfa ;};_abg .IsTPGROn ,_bcfa =_abg ._aa .ReadBool ();if _bcfa !=nil {return _bcfa ;};var _daa int ;_daa ,_bcfa =_abg ._aa .ReadBit ();
if _bcfa !=nil {return _bcfa ;};_abg .TemplateID =int8 (_daa );switch _abg .TemplateID {case 0:_abg .Template =_abg ._eb ;if _bcfa =_abg .readAtPixels ();_bcfa !=nil {return ;};case 1:_abg .Template =_abg ._ea ;};return nil ;};func (_baac *PatternDictionary )readTemplate ()error {_fdba ,_ddeb :=_baac ._cbgf .ReadBits (2);
if _ddeb !=nil {return _ddeb ;};_baac .HDTemplate =byte (_fdba );return nil ;};func (_babag *SymbolDictionary )setSymbolsArray ()error {if _babag ._ebeab ==nil {if _fcea :=_babag .retrieveImportSymbols ();_fcea !=nil {return _fcea ;};};if _babag ._ccag ==nil {_babag ._ccag =append (_babag ._ccag ,_babag ._ebeab ...);
};return nil ;};func (_aagd *PageInformationSegment )encodeFlags (_dgcf _ae .BinaryWriter )(_babc error ){const _ebag ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _babc =_dgcf .SkipBits (1);_babc !=nil {return _cb .Wrap (_babc ,_ebag ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");
};var _cedb int ;if _aagd .CombinationOperatorOverrideAllowed (){_cedb =1;};if _babc =_dgcf .WriteBit (_cedb );_babc !=nil {return _cb .Wrap (_babc ,_ebag ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_cedb =0;if _aagd ._eaff {_cedb =1;};if _babc =_dgcf .WriteBit (_cedb );_babc !=nil {return _cb .Wrap (_babc ,_ebag ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _babc =_dgcf .WriteBit ((int (_aagd ._cfg )>>1)&0x01);
_babc !=nil {return _cb .Wrap (_babc ,_ebag ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _babc =_dgcf .WriteBit (int (_aagd ._cfg )&0x01);
_babc !=nil {return _cb .Wrap (_babc ,_ebag ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_cedb =int (_aagd .DefaultPixelValue );
if _babc =_dgcf .WriteBit (_cedb );_babc !=nil {return _cb .Wrap (_babc ,_ebag ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_cedb =0;if _aagd ._fbdfe {_cedb =1;
};if _babc =_dgcf .WriteBit (_cedb );_babc !=nil {return _cb .Wrap (_babc ,_ebag ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_cedb =0;if _aagd .IsLossless {_cedb =1;};if _babc =_dgcf .WriteBit (_cedb );
_babc !=nil {return _cb .Wrap (_babc ,_ebag ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_ggd *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_feb ,_bae ,_gac ,_gcd ,_gab ,_cbc ,_cbed ,_eae ,_ffe int )(_gfg error ){var (_edd ,_agg int ;
_agf ,_ceg int ;_cbcf ,_af int ;_gce byte ;);if _feb > 0{_gce ,_gfg =_ggd .RegionBitmap .GetByte (_cbed -_gac );if _gfg !=nil {return ;};_agf =int (_gce );};if _eae > 0&&_eae <=_ggd .ReferenceBitmap .Height {_gce ,_gfg =_ggd .ReferenceBitmap .GetByte (_ffe -_gcd +_cbc );
if _gfg !=nil {return ;};_ceg =int (_gce )<<2;};if _eae >=0&&_eae < _ggd .ReferenceBitmap .Height {_gce ,_gfg =_ggd .ReferenceBitmap .GetByte (_ffe +_cbc );if _gfg !=nil {return ;};_cbcf =int (_gce );};if _eae > -2&&_eae < _ggd .ReferenceBitmap .Height -1{_gce ,_gfg =_ggd .ReferenceBitmap .GetByte (_ffe +_gcd +_cbc );
if _gfg !=nil {return ;};_af =int (_gce );};_edd =((_agf >>5)&0x6)|((_af >>2)&0x30)|(_cbcf &0xc0)|(_ceg &0x200);_agg =((_af >>2)&0x70)|(_cbcf &0xc0)|(_ceg &0x700);var _dfc int ;for _eda :=0;_eda < _gab ;_eda =_dfc {var (_bce int ;_aee int ;);_dfc =_eda +8;
if _bce =_bae -_eda ;_bce > 8{_bce =8;};_gfa :=_dfc < _bae ;_agbe :=_dfc < _ggd .ReferenceBitmap .Width ;_age :=_cbc +1;if _feb > 0{_gce =0;if _gfa {_gce ,_gfg =_ggd .RegionBitmap .GetByte (_cbed -_gac +1);if _gfg !=nil {return ;};};_agf =(_agf <<8)|int (_gce );
};if _eae > 0&&_eae <=_ggd .ReferenceBitmap .Height {var _abb int ;if _agbe {_gce ,_gfg =_ggd .ReferenceBitmap .GetByte (_ffe -_gcd +_age );if _gfg !=nil {return ;};_abb =int (_gce )<<2;};_ceg =(_ceg <<8)|_abb ;};if _eae >=0&&_eae < _ggd .ReferenceBitmap .Height {_gce =0;
if _agbe {_gce ,_gfg =_ggd .ReferenceBitmap .GetByte (_ffe +_age );if _gfg !=nil {return ;};};_cbcf =(_cbcf <<8)|int (_gce );};if _eae > -2&&_eae < (_ggd .ReferenceBitmap .Height -1){_gce =0;if _agbe {_gce ,_gfg =_ggd .ReferenceBitmap .GetByte (_ffe +_gcd +_age );
if _gfg !=nil {return ;};};_af =(_af <<8)|int (_gce );};for _gd :=0;_gd < _bce ;_gd ++{var _cabf int ;_abf :=(_agg >>4)&0x1ff;switch _abf {case 0x1ff:_cabf =1;case 0x00:_cabf =0;default:_ggd ._ebg .SetIndex (int32 (_edd ));_cabf ,_gfg =_ggd ._ebd .DecodeBit (_ggd ._ebg );
if _gfg !=nil {return ;};};_dgf :=uint (7-_gd );_aee |=_cabf <<_dgf ;_edd =((_edd &0x0d6)<<1)|_cabf |(_agf >>_dgf +5)&0x002|((_af >>_dgf +2)&0x010)|((_cbcf >>_dgf )&0x040)|((_ceg >>_dgf )&0x200);_agg =((_agg &0xdb)<<1)|((_af >>_dgf +2)&0x010)|((_cbcf >>_dgf )&0x080)|((_ceg >>_dgf )&0x400);
};_gfg =_ggd .RegionBitmap .SetByte (_cbed ,byte (_aee ));if _gfg !=nil {return ;};_cbed ++;_ffe ++;};return nil ;};func (_egagf *TextRegion )readAmountOfSymbolInstances ()error {_bacb ,_ddffb :=_egagf ._cbgc .ReadBits (32);if _ddffb !=nil {return _ddffb ;
};_egagf .NumberOfSymbolInstances =uint32 (_bacb &_f .MaxUint32 );_ggcaab :=_egagf .RegionInfo .BitmapWidth *_egagf .RegionInfo .BitmapHeight ;if _ggcaab < _egagf .NumberOfSymbolInstances {_ca .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_ggcaab ,_egagf .NumberOfSymbolInstances );
_egagf .NumberOfSymbolInstances =_ggcaab ;};return nil ;};func (_cafea *TextRegion )GetRegionBitmap ()(*_g .Bitmap ,error ){if _cafea .RegionBitmap !=nil {return _cafea .RegionBitmap ,nil ;};if !_cafea .IsHuffmanEncoded {if _abga :=_cafea .setCodingStatistics ();
_abga !=nil {return nil ,_abga ;};};if _ccdbd :=_cafea .createRegionBitmap ();_ccdbd !=nil {return nil ,_ccdbd ;};if _cdfe :=_cafea .decodeSymbolInstances ();_cdfe !=nil {return nil ,_cdfe ;};return _cafea .RegionBitmap ,nil ;};func (_fbfg *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _fbfg .SdHuffDecodeHeightSelection {case 0:_degd ,_dagbb :=_de .GetStandardTable (4);
if _dagbb !=nil {return 0,_dagbb ;};return _degd .Decode (_fbfg ._bfca );case 1:_cgdg ,_dgbe :=_de .GetStandardTable (5);if _dgbe !=nil {return 0,_dgbe ;};return _cgdg .Decode (_fbfg ._bfca );case 3:if _fbfg ._fdecf ==nil {_adf ,_cbfe :=_de .GetStandardTable (0);
if _cbfe !=nil {return 0,_cbfe ;};_fbfg ._fdecf =_adf ;};return _fbfg ._fdecf .Decode (_fbfg ._bfca );};return 0,nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_eddc *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_fgac :=range _eddc .Header .RTSegments {if _fgac .Type ==0{_cbegb ,_eeccb :=_fgac .GetSegmentData ();
if _eeccb !=nil {return _eeccb ;};_gecd ,_feeg :=_cbegb .(*SymbolDictionary );if !_feeg {return _eg .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_cbegb );
};_cfdc ,_eeccb :=_gecd .GetDictionary ();if _eeccb !=nil {return _eg .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_fgac .SegmentNumber ,_eeccb .Error ());
};_eddc ._ebeab =append (_eddc ._ebeab ,_cfdc ...);_eddc ._dfe +=_gecd .NumberOfExportedSymbols ;};};return nil ;};func (_dbcd *SymbolDictionary )decodeAggregate (_cfa ,_bgad uint32 )error {var (_efdc int64 ;_dcfd error ;);if _dbcd .IsHuffmanEncoded {_efdc ,_dcfd =_dbcd .huffDecodeRefAggNInst ();
if _dcfd !=nil {return _dcfd ;};}else {_adbg ,_gada :=_dbcd ._dagg .DecodeInt (_dbcd ._fged );if _gada !=nil {return _gada ;};_efdc =int64 (_adbg );};if _efdc > 1{return _dbcd .decodeThroughTextRegion (_cfa ,_bgad ,uint32 (_efdc ));}else if _efdc ==1{return _dbcd .decodeRefinedSymbol (_cfa ,_bgad );
};return nil ;};func (_abbf *PageInformationSegment )parseHeader ()(_gbfe error ){_ca .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _dbga ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _gbfe !=nil {_dbga +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_gbfe .Error ();}else {_dbga +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_ca .Log .Trace (_dbga );}();if _gbfe =_abbf .readWidthAndHeight ();
_gbfe !=nil {return _gbfe ;};if _gbfe =_abbf .readResolution ();_gbfe !=nil {return _gbfe ;};_ ,_gbfe =_abbf ._gacd .ReadBit ();if _gbfe !=nil {return _gbfe ;};if _gbfe =_abbf .readCombinationOperatorOverrideAllowed ();_gbfe !=nil {return _gbfe ;};if _gbfe =_abbf .readRequiresAuxiliaryBuffer ();
_gbfe !=nil {return _gbfe ;};if _gbfe =_abbf .readCombinationOperator ();_gbfe !=nil {return _gbfe ;};if _gbfe =_abbf .readDefaultPixelValue ();_gbfe !=nil {return _gbfe ;};if _gbfe =_abbf .readContainsRefinement ();_gbfe !=nil {return _gbfe ;};if _gbfe =_abbf .readIsLossless ();
_gbfe !=nil {return _gbfe ;};if _gbfe =_abbf .readIsStriped ();_gbfe !=nil {return _gbfe ;};if _gbfe =_abbf .readMaxStripeSize ();_gbfe !=nil {return _gbfe ;};if _gbfe =_abbf .checkInput ();_gbfe !=nil {return _gbfe ;};_ca .Log .Trace ("\u0025\u0073",_abbf );
return nil ;};func (_ccdd *SymbolDictionary )encodeSymbols (_acce _ae .BinaryWriter )(_bfg int ,_adcf error ){const _dgeeg ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_baggf :=_fb .New ();_baggf .Init ();_fgda ,_adcf :=_ccdd ._fdcc .SelectByIndexes (_ccdd ._bdcg );
if _adcf !=nil {return 0,_cb .Wrap (_adcf ,_dgeeg ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_fcdb :=map[*_g .Bitmap ]int {};for _fabbf ,_aacb :=range _fgda .Values {_fcdb [_aacb ]=_fabbf ;};_fgda .SortByHeight ();var _efe ,_dbabb int ;_egegeg ,_adcf :=_fgda .GroupByHeight ();
if _adcf !=nil {return 0,_cb .Wrap (_adcf ,_dgeeg ,"");};for _ ,_cdgc :=range _egegeg .Values {_fgee :=_cdgc .Values [0].Height ;_ddde :=_fgee -_efe ;if _adcf =_baggf .EncodeInteger (_fb .IADH ,_ddde );_adcf !=nil {return 0,_cb .Wrapf (_adcf ,_dgeeg ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_ddde );
};_efe =_fgee ;_fdcb ,_ffdf :=_cdgc .GroupByWidth ();if _ffdf !=nil {return 0,_cb .Wrapf (_ffdf ,_dgeeg ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_fgee );};var _dabf int ;for _ ,_ceab :=range _fdcb .Values {for _ ,_ffbc :=range _ceab .Values {_gcge :=_ffbc .Width ;
_bbca :=_gcge -_dabf ;if _ffdf =_baggf .EncodeInteger (_fb .IADW ,_bbca );_ffdf !=nil {return 0,_cb .Wrapf (_ffdf ,_dgeeg ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_bbca );};_dabf +=_bbca ;if _ffdf =_baggf .EncodeBitmap (_ffbc ,false );
_ffdf !=nil {return 0,_cb .Wrapf (_ffdf ,_dgeeg ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_fgee ,_gcge );};_dcc :=_fcdb [_ffbc ];_ccdd ._edbfe [_dcc ]=_dbabb ;_dbabb ++;};};if _ffdf =_baggf .EncodeOOB (_fb .IADW );
_ffdf !=nil {return 0,_cb .Wrap (_ffdf ,_dgeeg ,"\u0049\u0041\u0044\u0057");};};if _adcf =_baggf .EncodeInteger (_fb .IAEX ,0);_adcf !=nil {return 0,_cb .Wrap (_adcf ,_dgeeg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _adcf =_baggf .EncodeInteger (_fb .IAEX ,len (_ccdd ._bdcg ));_adcf !=nil {return 0,_cb .Wrap (_adcf ,_dgeeg ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_baggf .Final ();_bacf ,_adcf :=_baggf .WriteTo (_acce );
if _adcf !=nil {return 0,_cb .Wrap (_adcf ,_dgeeg ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");
};return int (_bacf ),nil ;};func (_dbgg *RegionSegment )Encode (w _ae .BinaryWriter )(_fbae int ,_fgbg error ){const _fcaac ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_gbgg :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gbgg ,_dbgg .BitmapWidth );
_fbae ,_fgbg =w .Write (_gbgg );if _fgbg !=nil {return 0,_cb .Wrap (_fgbg ,_fcaac ,"\u0057\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_gbgg ,_dbgg .BitmapHeight );var _fddfe int ;_fddfe ,_fgbg =w .Write (_gbgg );if _fgbg !=nil {return 0,_cb .Wrap (_fgbg ,_fcaac ,"\u0048\u0065\u0069\u0067\u0068\u0074");
};_fbae +=_fddfe ;_e .BigEndian .PutUint32 (_gbgg ,_dbgg .XLocation );_fddfe ,_fgbg =w .Write (_gbgg );if _fgbg !=nil {return 0,_cb .Wrap (_fgbg ,_fcaac ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_fbae +=_fddfe ;_e .BigEndian .PutUint32 (_gbgg ,_dbgg .YLocation );
_fddfe ,_fgbg =w .Write (_gbgg );if _fgbg !=nil {return 0,_cb .Wrap (_fgbg ,_fcaac ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_fbae +=_fddfe ;if _fgbg =w .WriteByte (byte (_dbgg .CombinaionOperator )&0x07);_fgbg !=nil {return 0,_cb .Wrap (_fgbg ,_fcaac ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};_fbae ++;return _fbae ,nil ;};func (_dbfdc *SymbolDictionary )decodeHeightClassCollectiveBitmap (_dfafe int64 ,_ebbe ,_gbgc uint32 )(*_g .Bitmap ,error ){if _dfafe ==0{_aebb :=_g .New (int (_gbgc ),int (_ebbe ));var (_ccbe byte ;_cbeg error ;);for _gdbg :=0;
_gdbg < len (_aebb .Data );_gdbg ++{_ccbe ,_cbeg =_dbfdc ._bfca .ReadByte ();if _cbeg !=nil {return nil ,_cbeg ;};if _cbeg =_aebb .SetByte (_gdbg ,_ccbe );_cbeg !=nil {return nil ,_cbeg ;};};return _aebb ,nil ;};if _dbfdc ._bcge ==nil {_dbfdc ._bcge =NewGenericRegion (_dbfdc ._bfca );
};_dbfdc ._bcge .setParameters (true ,_dbfdc ._bfca .StreamPosition (),_dfafe ,_ebbe ,_gbgc );_aegc ,_eedbf :=_dbfdc ._bcge .GetRegionBitmap ();if _eedbf !=nil {return nil ,_eedbf ;};return _aegc ,nil ;};func (_dbdf *GenericRegion )Size ()int {return _dbdf .RegionSegment .Size ()+1+2*len (_dbdf .GBAtX )};
func (_aaca *SymbolDictionary )setAtPixels ()error {if _aaca .IsHuffmanEncoded {return nil ;};_cbdb :=1;if _aaca .SdTemplate ==0{_cbdb =4;};if _gddf :=_aaca .readAtPixels (_cbdb );_gddf !=nil {return _gddf ;};return nil ;};type OrganizationType uint8 ;
var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_acdg *TextRegion )decodeIb (_bdcfc ,_dgac int64 )(*_g .Bitmap ,error ){const _bceg ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_fgbf error ;_abfc *_g .Bitmap ;);if _bdcfc ==0{if int (_dgac )> len (_acdg .Symbols )-1{return nil ,_cb .Error (_bceg ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _acdg .Symbols [int (_dgac )],nil ;};var _eedg ,_fbccc ,_gfag ,_dfga int64 ;_eedg ,_fgbf =_acdg .decodeRdw ();if _fgbf !=nil {return nil ,_cb .Wrap (_fgbf ,_bceg ,"");};_fbccc ,_fgbf =_acdg .decodeRdh ();if _fgbf !=nil {return nil ,_cb .Wrap (_fgbf ,_bceg ,"");
};_gfag ,_fgbf =_acdg .decodeRdx ();if _fgbf !=nil {return nil ,_cb .Wrap (_fgbf ,_bceg ,"");};_dfga ,_fgbf =_acdg .decodeRdy ();if _fgbf !=nil {return nil ,_cb .Wrap (_fgbf ,_bceg ,"");};if _acdg .IsHuffmanEncoded {if _ ,_fgbf =_acdg .decodeSymInRefSize ();
_fgbf !=nil {return nil ,_cb .Wrap (_fgbf ,_bceg ,"");};_acdg ._cbgc .Align ();};_cbdc :=_acdg .Symbols [_dgac ];_aedd :=uint32 (_cbdc .Width );_bcgbg :=uint32 (_cbdc .Height );_ebbdc :=int32 (uint32 (_eedg )>>1)+int32 (_gfag );_gdebg :=int32 (uint32 (_fbccc )>>1)+int32 (_dfga );
if _acdg ._afdd ==nil {_acdg ._afdd =_agbb (_acdg ._cbgc ,nil );};_acdg ._afdd .setParameters (_acdg ._cagf ,_acdg ._fdaa ,_acdg .SbrTemplate ,_aedd +uint32 (_eedg ),_bcgbg +uint32 (_fbccc ),_cbdc ,_ebbdc ,_gdebg ,false ,_acdg .SbrATX ,_acdg .SbrATY );
_abfc ,_fgbf =_acdg ._afdd .GetRegionBitmap ();if _fgbf !=nil {return nil ,_cb .Wrap (_fgbf ,_bceg ,"\u0067\u0072\u0066");};if _acdg .IsHuffmanEncoded {_acdg ._cbgc .Align ();};return _abfc ,nil ;};func (_gfb *GenericRefinementRegion )decodeSLTP ()(int ,error ){_gfb .Template .setIndex (_gfb ._ebg );
return _gfb ._ebd .DecodeBit (_gfb ._ebg );};func (_bc *GenericRefinementRegion )Init (header *Header ,r _ae .StreamReader )error {_bc ._cd =header ;_bc ._aa =r ;_bc .RegionInfo =NewRegionSegment (r );return _bc .parseHeader ();};func (_fadca *GenericRegion )setParameters (_eead bool ,_ccf ,_cfbe int64 ,_ddbg ,_gadg uint32 ){_fadca .IsMMREncoded =_eead ;
_fadca .DataOffset =_ccf ;_fadca .DataLength =_cfbe ;_fadca .RegionSegment .BitmapHeight =_ddbg ;_fadca .RegionSegment .BitmapWidth =_gadg ;_fadca ._ade =nil ;_fadca .Bitmap =nil ;};func (_faef *SymbolDictionary )readNumberOfNewSymbols ()error {_fgf ,_acbg :=_faef ._bfca .ReadBits (32);
if _acbg !=nil {return _acbg ;};_faef .NumberOfNewSymbols =uint32 (_fgf &_f .MaxUint32 );return nil ;};func (_bbcb *TextRegion )decodeCurrentT ()(int64 ,error ){if _bbcb .SbStrips !=1{if _bbcb .IsHuffmanEncoded {_ebcaf ,_bcbd :=_bbcb ._cbgc .ReadBits (byte (_bbcb .LogSBStrips ));
return int64 (_ebcaf ),_bcbd ;};_gbfg ,_daae :=_bbcb ._fdaa .DecodeInt (_bbcb ._fegf );if _daae !=nil {return 0,_daae ;};return int64 (_gbfg ),nil ;};return 0,nil ;};func (_ced *GenericRefinementRegion )readAtPixels ()error {_ced .GrAtX =make ([]int8 ,2);
_ced .GrAtY =make ([]int8 ,2);_bbb ,_eeg :=_ced ._aa .ReadByte ();if _eeg !=nil {return _eeg ;};_ced .GrAtX [0]=int8 (_bbb );_bbb ,_eeg =_ced ._aa .ReadByte ();if _eeg !=nil {return _eeg ;};_ced .GrAtY [0]=int8 (_bbb );_bbb ,_eeg =_ced ._aa .ReadByte ();
if _eeg !=nil {return _eeg ;};_ced .GrAtX [1]=int8 (_bbb );_bbb ,_eeg =_ced ._aa .ReadByte ();if _eeg !=nil {return _eeg ;};_ced .GrAtY [1]=int8 (_bbb );return nil ;};func (_adcbg *SymbolDictionary )readRefinementAtPixels (_afdbf int )error {_adcbg .SdrATX =make ([]int8 ,_afdbf );
_adcbg .SdrATY =make ([]int8 ,_afdbf );var (_afed byte ;_fffc error ;);for _ebdf :=0;_ebdf < _afdbf ;_ebdf ++{_afed ,_fffc =_adcbg ._bfca .ReadByte ();if _fffc !=nil {return _fffc ;};_adcbg .SdrATX [_ebdf ]=int8 (_afed );_afed ,_fffc =_adcbg ._bfca .ReadByte ();
if _fffc !=nil {return _fffc ;};_adcbg .SdrATY [_ebdf ]=int8 (_afed );};return nil ;};func (_gga *Header )writeSegmentNumber (_dggd _ae .BinaryWriter )(_fgcg int ,_cgdd error ){_fdad :=make ([]byte ,4);_e .BigEndian .PutUint32 (_fdad ,_gga .SegmentNumber );
if _fgcg ,_cgdd =_dggd .Write (_fdad );_cgdd !=nil {return 0,_cb .Wrap (_cgdd ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _fgcg ,nil ;};func (_aeeb *SymbolDictionary )encodeNumSyms (_fbbf _ae .BinaryWriter )(_fbcd int ,_daed error ){const _dabd ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_effe :=make ([]byte ,4);_e .BigEndian .PutUint32 (_effe ,_aeeb .NumberOfExportedSymbols );if _fbcd ,_daed =_fbbf .Write (_effe );_daed !=nil {return _fbcd ,_cb .Wrap (_daed ,_dabd ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_e .BigEndian .PutUint32 (_effe ,_aeeb .NumberOfNewSymbols );_gfeg ,_daed :=_fbbf .Write (_effe );if _daed !=nil {return _fbcd ,_cb .Wrap (_daed ,_dabd ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _fbcd +_gfeg ,nil ;};func (_ddbd *HalftoneRegion )computeY (_dded ,_bagg int )int {return _ddbd .shiftAndFill (int (_ddbd .HGridY )+_dded *int (_ddbd .HRegionX )-_bagg *int (_ddbd .HRegionY ));
};func (_bbdd *TextRegion )getUserTable (_dbeg int )(_de .Tabler ,error ){const _gdg ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _ccbec int ;for _ ,_beeg :=range _bbdd .Header .RTSegments {if _beeg .Type ==53{if _ccbec ==_dbeg {_eaee ,_ggddf :=_beeg .GetSegmentData ();
if _ggddf !=nil {return nil ,_ggddf ;};_gefgg ,_ggec :=_eaee .(*TableSegment );if !_ggec {_ca .Log .Debug (_eg .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_beeg .SegmentNumber ));
return nil ,_cb .Error (_gdg ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _de .NewEncodedTable (_gefgg );};_ccbec ++;};};return nil ,nil ;};func (_dd *GenericRefinementRegion )GetRegionBitmap ()(*_g .Bitmap ,error ){var _gb error ;_ca .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _gb !=nil {_ca .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gb );
}else {_ca .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _dd .RegionBitmap !=nil {return _dd .RegionBitmap ,nil ;};_eab :=0;if _dd .ReferenceBitmap ==nil {_dd .ReferenceBitmap ,_gb =_dd .getGrReference ();if _gb !=nil {return nil ,_gb ;};};if _dd ._ebd ==nil {_dd ._ebd ,_gb =_df .New (_dd ._aa );if _gb !=nil {return nil ,_gb ;
};};if _dd ._ebg ==nil {_dd ._ebg =_df .NewStats (8192,1);};_dd .RegionBitmap =_g .New (int (_dd .RegionInfo .BitmapWidth ),int (_dd .RegionInfo .BitmapHeight ));if _dd .TemplateID ==0{if _gb =_dd .updateOverride ();_gb !=nil {return nil ,_gb ;};};_ge :=(_dd .RegionBitmap .Width +7)&-8;
var _ddd int ;if _dd .IsTPGROn {_ddd =int (-_dd .ReferenceDY )*_dd .ReferenceBitmap .RowStride ;};_agb :=_ddd +1;for _adg :=0;_adg < _dd .RegionBitmap .Height ;_adg ++{if _dd .IsTPGROn {_fad ,_ddf :=_dd .decodeSLTP ();if _ddf !=nil {return nil ,_ddf ;};
_eab ^=_fad ;};if _eab ==0{_gb =_dd .decodeOptimized (_adg ,_dd .RegionBitmap .Width ,_dd .RegionBitmap .RowStride ,_dd .ReferenceBitmap .RowStride ,_ge ,_ddd ,_agb );if _gb !=nil {return nil ,_gb ;};}else {_gb =_dd .decodeTypicalPredictedLine (_adg ,_dd .RegionBitmap .Width ,_dd .RegionBitmap .RowStride ,_dd .ReferenceBitmap .RowStride ,_ge ,_ddd );
if _gb !=nil {return nil ,_gb ;};};};return _dd .RegionBitmap ,nil ;};func (_cbcfb *PatternDictionary )Init (h *Header ,r _ae .StreamReader )error {_cbcfb ._cbgf =r ;return _cbcfb .parseHeader ();};type Type int ;type RegionSegment struct{_ffad _ae .StreamReader ;
BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _g .CombinationOperator ;};func (_fba *GenericRegion )decodeTemplate0b (_cebe ,_eff ,_bbaa int ,_effb ,_fbfd int )(_ffb error ){const _efdg ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_bdc ,_ggf int ;_debfd ,_gadf int ;_bdf byte ;_cdbd int ;);if _cebe >=1{_bdf ,_ffb =_fba .Bitmap .GetByte (_fbfd );if _ffb !=nil {return _cb .Wrap (_ffb ,_efdg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_debfd =int (_bdf );};if _cebe >=2{_bdf ,_ffb =_fba .Bitmap .GetByte (_fbfd -_fba .Bitmap .RowStride );
if _ffb !=nil {return _cb .Wrap (_ffb ,_efdg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gadf =int (_bdf )<<6;};_bdc =(_debfd &0xf0)|(_gadf &0x3800);for _fbg :=0;_fbg < _bbaa ;_fbg =_cdbd {var (_fce byte ;_eafg int ;);_cdbd =_fbg +8;if _eeeb :=_eff -_fbg ;
_eeeb > 8{_eafg =8;}else {_eafg =_eeeb ;};if _cebe > 0{_debfd <<=8;if _cdbd < _eff {_bdf ,_ffb =_fba .Bitmap .GetByte (_fbfd +1);if _ffb !=nil {return _cb .Wrap (_ffb ,_efdg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_debfd |=int (_bdf );};
};if _cebe > 1{_gadf <<=8;if _cdbd < _eff {_bdf ,_ffb =_fba .Bitmap .GetByte (_fbfd -_fba .Bitmap .RowStride +1);if _ffb !=nil {return _cb .Wrap (_ffb ,_efdg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gadf |=int (_bdf )<<6;};};for _bcg :=0;
_bcg < _eafg ;_bcg ++{_gebd :=uint (7-_bcg );if _fba ._acf {_ggf =_fba .overrideAtTemplate0b (_bdc ,_fbg +_bcg ,_cebe ,int (_fce ),_bcg ,int (_gebd ));_fba ._bbbd .SetIndex (int32 (_ggf ));}else {_fba ._bbbd .SetIndex (int32 (_bdc ));};var _deg int ;_deg ,_ffb =_fba ._abdc .DecodeBit (_fba ._bbbd );
if _ffb !=nil {return _cb .Wrap (_ffb ,_efdg ,"");};_fce |=byte (_deg <<_gebd );_bdc =((_bdc &0x7bf7)<<1)|_deg |((_debfd >>_gebd )&0x10)|((_gadf >>_gebd )&0x800);};if _ebb :=_fba .Bitmap .SetByte (_effb ,_fce );_ebb !=nil {return _cb .Wrap (_ebb ,_efdg ,"");
};_effb ++;_fbfd ++;};return nil ;};func (_edcg *GenericRegion )readGBAtPixels (_cbea int )error {const _gfgf ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_edcg .GBAtX =make ([]int8 ,_cbea );_edcg .GBAtY =make ([]int8 ,_cbea );
for _cbfb :=0;_cbfb < _cbea ;_cbfb ++{_eded ,_eefd :=_edcg ._aabc .ReadByte ();if _eefd !=nil {return _cb .Wrapf (_eefd ,_gfgf ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cbfb );};_edcg .GBAtX [_cbfb ]=int8 (_eded );_eded ,_eefd =_edcg ._aabc .ReadByte ();
if _eefd !=nil {return _cb .Wrapf (_eefd ,_gfgf ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cbfb );};_edcg .GBAtY [_cbfb ]=int8 (_eded );};return nil ;};var _ templater =&template1 {};func (_adeg *Header )writeFlags (_gcgf _ae .BinaryWriter )(_bbad error ){const _dee ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_eeab :=byte (_adeg .Type );if _bbad =_gcgf .WriteByte (_eeab );_bbad !=nil {return _cb .Wrap (_bbad ,_dee ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_adeg .RetainFlag &&!_adeg .PageAssociationFieldSize {return nil ;};if _bbad =_gcgf .SkipBits (-8);_bbad !=nil {return _cb .Wrap (_bbad ,_dee ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _bdfg int ;if _adeg .RetainFlag {_bdfg =1;};if _bbad =_gcgf .WriteBit (_bdfg );_bbad !=nil {return _cb .Wrap (_bbad ,_dee ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_bdfg =0;if _adeg .PageAssociationFieldSize {_bdfg =1;
};if _bbad =_gcgf .WriteBit (_bdfg );_bbad !=nil {return _cb .Wrap (_bbad ,_dee ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_gcgf .FinishByte ();return nil ;};func (_bdba *SymbolDictionary )decodeNewSymbols (_afde ,_ddedg uint32 ,_ecbda *_g .Bitmap ,_eegc ,_dagc int32 )error {if _bdba ._bbdb ==nil {_bdba ._bbdb =_agbb (_bdba ._bfca ,nil );
if _bdba ._dagg ==nil {var _bccba error ;_bdba ._dagg ,_bccba =_df .New (_bdba ._bfca );if _bccba !=nil {return _bccba ;};};if _bdba ._fgba ==nil {_bdba ._fgba =_df .NewStats (65536,1);};};_bdba ._bbdb .setParameters (_bdba ._fgba ,_bdba ._dagg ,_bdba .SdrTemplate ,_afde ,_ddedg ,_ecbda ,_eegc ,_dagc ,false ,_bdba .SdrATX ,_bdba .SdrATY );
return _bdba .addSymbol (_bdba ._bbdb );};func (_fbda *Header )referenceSize ()uint {switch {case _fbda .SegmentNumber <=255:return 1;case _fbda .SegmentNumber <=65535:return 2;default:return 4;};};func (_fcad *PageInformationSegment )readIsLossless ()error {_eggc ,_fabe :=_fcad ._gacd .ReadBit ();
if _fabe !=nil {return _fabe ;};if _eggc ==1{_fcad .IsLossless =true ;};return nil ;};func (_befa *PatternDictionary )readGrayMax ()error {_bgfd ,_bedd :=_befa ._cbgf .ReadBits (32);if _bedd !=nil {return _bedd ;};_befa .GrayMax =uint32 (_bgfd &_f .MaxUint32 );
return nil ;};type EncodeInitializer interface{InitEncode ();};func (_abag *SymbolDictionary )getUserTable (_dcdd int )(_de .Tabler ,error ){var _adae int ;for _ ,_ffef :=range _abag .Header .RTSegments {if _ffef .Type ==53{if _adae ==_dcdd {_bgdd ,_ffcg :=_ffef .GetSegmentData ();
if _ffcg !=nil {return nil ,_ffcg ;};_fgegb :=_bgdd .(_de .BasicTabler );return _de .NewEncodedTable (_fgegb );};_adae ++;};};return nil ,nil ;};func (_eebgf *SymbolDictionary )decodeHeightClassBitmap (_ffbae *_g .Bitmap ,_babca int64 ,_adcc int ,_eac []int )error {for _edede :=_babca ;
_edede < int64 (_eebgf ._bcac );_edede ++{var _abcb int ;for _fdcg :=_babca ;_fdcg <=_edede -1;_fdcg ++{_abcb +=_eac [_fdcg ];};_fgad :=_c .Rect (_abcb ,0,_abcb +_eac [_edede ],_adcc );_fdcgf ,_aabgf :=_g .Extract (_fgad ,_ffbae );if _aabgf !=nil {return _aabgf ;
};_eebgf ._gegce [_edede ]=_fdcgf ;_eebgf ._ccag =append (_eebgf ._ccag ,_fdcgf );};return nil ;};func (_abgdb *TextRegion )initSymbols ()error {const _eacc ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_cfgd :=range _abgdb .Header .RTSegments {if _cfgd ==nil {return _cb .Error (_eacc ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _cfgd .Type ==0{_fbacg ,_fbdg :=_cfgd .GetSegmentData ();if _fbdg !=nil {return _cb .Wrap (_fbdg ,_eacc ,"");};_dcff ,_gcaa :=_fbacg .(*SymbolDictionary );if !_gcaa {return _cb .Error (_eacc ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dcff ._dfed =_abgdb ._gdcf ;_bdcdc ,_fbdg :=_dcff .GetDictionary ();if _fbdg !=nil {return _cb .Wrap (_fbdg ,_eacc ,"");};_abgdb .Symbols =append (_abgdb .Symbols ,_bdcdc ...);};};_abgdb .NumberOfSymbols =uint32 (len (_abgdb .Symbols ));return nil ;
};func (_aef *GenericRefinementRegion )getGrReference ()(*_g .Bitmap ,error ){segments :=_aef ._cd .RTSegments ;if len (segments )==0{return nil ,_ag .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_egf ,_ffa :=segments [0].GetSegmentData ();if _ffa !=nil {return nil ,_ffa ;};_ddc ,_cdg :=_egf .(Regioner );if !_cdg {return nil ,_eg .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_egf );
};return _ddc .GetRegionBitmap ();};func (_gbbc *GenericRegion )setParametersMMR (_afbe bool ,_dda ,_edce int64 ,_dbda ,_fdae uint32 ,_gadd byte ,_fabf ,_ecbb bool ,_eafc ,_dgd []int8 ){_gbbc .DataOffset =_dda ;_gbbc .DataLength =_edce ;_gbbc .RegionSegment =&RegionSegment {};
_gbbc .RegionSegment .BitmapHeight =_dbda ;_gbbc .RegionSegment .BitmapWidth =_fdae ;_gbbc .GBTemplate =_gadd ;_gbbc .IsMMREncoded =_afbe ;_gbbc .IsTPGDon =_fabf ;_gbbc .GBAtX =_eafc ;_gbbc .GBAtY =_dgd ;};func (_gedg *SymbolDictionary )String ()string {_fcbc :=&_fa .Builder {};
_fcbc .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_fcbc .WriteString (_eg .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_gedg .SdrTemplate ));
_fcbc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_gedg .SdTemplate ));_fcbc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_gedg ._febg ));
_fcbc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_gedg ._cdfa ));_fcbc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_gedg .SdHuffAggInstanceSelection ));
_fcbc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_gedg .SdHuffBMSizeSelection ));_fcbc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_gedg .SdHuffDecodeWidthSelection ));
_fcbc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_gedg .SdHuffDecodeHeightSelection ));_fcbc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_gedg .UseRefinementAggregation ));
_fcbc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_gedg .IsHuffmanEncoded ));_fcbc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_gedg .SdATX ));
_fcbc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_gedg .SdATY ));_fcbc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_gedg .SdrATX ));
_fcbc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_gedg .SdrATY ));_fcbc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_gedg .NumberOfExportedSymbols ));
_fcbc .WriteString (_eg .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_gedg .NumberOfNewSymbols ));_fcbc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_gedg ._dfe ));
_fcbc .WriteString (_eg .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_gedg ._bcac ));return _fcbc .String ();};func (_beb *template1 )form (_bffcd ,_fef ,_gec ,_dbd ,_edf int16 )int16 {return ((_bffcd &0x02)<<8)|(_fef <<6)|((_gec &0x03)<<4)|(_dbd <<1)|_edf ;
};func (_gccg *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _gccg .RegionSegment };func NewGenericRegion (r _ae .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_aabc :r };};func (_agcg *PatternDictionary )readIsMMREncoded ()error {_ebea ,_cfdd :=_agcg ._cbgf .ReadBit ();
if _cfdd !=nil {return _cfdd ;};if _ebea !=0{_agcg .IsMMREncoded =true ;};return nil ;};type template1 struct{};func (_geee *SymbolDictionary )setInSyms ()error {if _geee .Header .RTSegments !=nil {return _geee .retrieveImportSymbols ();};_geee ._ebeab =make ([]*_g .Bitmap ,0);
return nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _ae .StreamReader ;
SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_cfgc *PatternDictionary )GetDictionary ()([]*_g .Bitmap ,error ){if _cfgc .Patterns !=nil {return _cfgc .Patterns ,nil ;};if !_cfgc .IsMMREncoded {_cfgc .setGbAtPixels ();};_edcgc :=NewGenericRegion (_cfgc ._cbgf );
_edcgc .setParametersMMR (_cfgc .IsMMREncoded ,_cfgc .DataOffset ,_cfgc .DataLength ,uint32 (_cfgc .HdpHeight ),(_cfgc .GrayMax +1)*uint32 (_cfgc .HdpWidth ),_cfgc .HDTemplate ,false ,false ,_cfgc .GBAtX ,_cfgc .GBAtY );_acea ,_dbfde :=_edcgc .GetRegionBitmap ();
if _dbfde !=nil {return nil ,_dbfde ;};if _dbfde =_cfgc .extractPatterns (_acea );_dbfde !=nil {return nil ,_dbfde ;};return _cfgc .Patterns ,nil ;};func (_bff *GenericRefinementRegion )decodeOptimized (_ab ,_ef ,_cg ,_ac ,_ebe ,_ddfe ,_geb int )error {var (_aab error ;
_fbf int ;_db int ;);_eabg :=_ab -int (_bff .ReferenceDY );if _bcc :=int (-_bff .ReferenceDX );_bcc > 0{_fbf =_bcc ;};_deb :=_bff .ReferenceBitmap .GetByteIndex (_fbf ,_eabg );if _bff .ReferenceDX > 0{_db =int (_bff .ReferenceDX );};_fd :=_bff .RegionBitmap .GetByteIndex (_db ,_ab );
switch _bff .TemplateID {case 0:_aab =_bff .decodeTemplate (_ab ,_ef ,_cg ,_ac ,_ebe ,_ddfe ,_geb ,_fd ,_eabg ,_deb ,_bff ._eb );case 1:_aab =_bff .decodeTemplate (_ab ,_ef ,_cg ,_ac ,_ebe ,_ddfe ,_geb ,_fd ,_eabg ,_deb ,_bff ._ea );};return _aab ;};func (_eecbg *TextRegion )symbolIDCodeLengths ()error {var (_dfgag []*_de .Code ;
_fefbg uint64 ;_dbebg _de .Tabler ;_dfbg error ;);for _dffef :=0;_dffef < 35;_dffef ++{_fefbg ,_dfbg =_eecbg ._cbgc .ReadBits (4);if _dfbg !=nil {return _dfbg ;};_dgad :=int (_fefbg &0xf);if _dgad > 0{_dfgag =append (_dfgag ,_de .NewCode (int32 (_dgad ),0,int32 (_dffef ),false ));
};};_dbebg ,_dfbg =_de .NewFixedSizeTable (_dfgag );if _dfbg !=nil {return _dfbg ;};var (_ggdaf int64 ;_fegag uint32 ;_fgdcd []*_de .Code ;_ece int64 ;);for _fegag < _eecbg .NumberOfSymbols {_ece ,_dfbg =_dbebg .Decode (_eecbg ._cbgc );if _dfbg !=nil {return _dfbg ;
};if _ece < 32{if _ece > 0{_fgdcd =append (_fgdcd ,_de .NewCode (int32 (_ece ),0,int32 (_fegag ),false ));};_ggdaf =_ece ;_fegag ++;}else {var _edde ,_afac int64 ;switch _ece {case 32:_fefbg ,_dfbg =_eecbg ._cbgc .ReadBits (2);if _dfbg !=nil {return _dfbg ;
};_edde =3+int64 (_fefbg );if _fegag > 0{_afac =_ggdaf ;};case 33:_fefbg ,_dfbg =_eecbg ._cbgc .ReadBits (3);if _dfbg !=nil {return _dfbg ;};_edde =3+int64 (_fefbg );case 34:_fefbg ,_dfbg =_eecbg ._cbgc .ReadBits (7);if _dfbg !=nil {return _dfbg ;};_edde =11+int64 (_fefbg );
};for _cecg :=0;_cecg < int (_edde );_cecg ++{if _afac > 0{_fgdcd =append (_fgdcd ,_de .NewCode (int32 (_afac ),0,int32 (_fegag ),false ));};_fegag ++;};};};_eecbg ._cbgc .Align ();_eecbg ._bdadd ,_dfbg =_de .NewFixedSizeTable (_fgdcd );return _dfbg ;};
func (_gcb *SymbolDictionary )decodeRefinedSymbol (_eeaf ,_bgga uint32 )error {var (_bdfb int ;_bdcf ,_fdegc int32 ;);if _gcb .IsHuffmanEncoded {_agef ,_edeee :=_gcb ._bfca .ReadBits (byte (_gcb ._geece ));if _edeee !=nil {return _edeee ;};_bdfb =int (_agef );
_eedb ,_edeee :=_de .GetStandardTable (15);if _edeee !=nil {return _edeee ;};_adgc ,_edeee :=_eedb .Decode (_gcb ._bfca );if _edeee !=nil {return _edeee ;};_bdcf =int32 (_adgc );_adgc ,_edeee =_eedb .Decode (_gcb ._bfca );if _edeee !=nil {return _edeee ;
};_fdegc =int32 (_adgc );_eedb ,_edeee =_de .GetStandardTable (1);if _edeee !=nil {return _edeee ;};if _ ,_edeee =_eedb .Decode (_gcb ._bfca );_edeee !=nil {return _edeee ;};_gcb ._bfca .Align ();}else {_bebd ,_ggdf :=_gcb ._dagg .DecodeIAID (uint64 (_gcb ._geece ),_gcb ._dfed );
if _ggdf !=nil {return _ggdf ;};_bdfb =int (_bebd );_bdcf ,_ggdf =_gcb ._dagg .DecodeInt (_gcb ._cdcf );if _ggdf !=nil {return _ggdf ;};_fdegc ,_ggdf =_gcb ._dagg .DecodeInt (_gcb ._effa );if _ggdf !=nil {return _ggdf ;};};if _bbga :=_gcb .setSymbolsArray ();
_bbga !=nil {return _bbga ;};_cgddd :=_gcb ._ccag [_bdfb ];if _ccecf :=_gcb .decodeNewSymbols (_eeaf ,_bgga ,_cgddd ,_bdcf ,_fdegc );_ccecf !=nil {return _ccecf ;};if _gcb .IsHuffmanEncoded {_gcb ._bfca .Align ();};return nil ;};func (_eaeg *GenericRegion )overrideAtTemplate2 (_ace ,_ebeb ,_gbaa ,_debfb ,_gdfg int )int {_ace &=0x3FB;
if _eaeg .GBAtY [0]==0&&_eaeg .GBAtX [0]>=-int8 (_gdfg ){_ace |=(_debfb >>uint (7-(int8 (_gdfg )+_eaeg .GBAtX [0]))&0x1)<<2;}else {_ace |=int (_eaeg .getPixel (_ebeb +int (_eaeg .GBAtX [0]),_gbaa +int (_eaeg .GBAtY [0])))<<2;};return _ace ;};func (_cegd *TextRegion )encodeFlags (_decd _ae .BinaryWriter )(_bdeb int ,_ecde error ){const _gfff ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _ecde =_decd .WriteBit (int (_cegd .SbrTemplate ));_ecde !=nil {return _bdeb ,_cb .Wrap (_ecde ,_gfff ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_ecde =_decd .WriteBits (uint64 (_cegd .SbDsOffset ),5);_ecde !=nil {return _bdeb ,_cb .Wrap (_ecde ,_gfff ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _ecde =_decd .WriteBit (int (_cegd .DefaultPixel ));_ecde !=nil {return _bdeb ,_cb .Wrap (_ecde ,_gfff ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_ecde =_decd .WriteBits (uint64 (_cegd .CombinationOperator ),2);
_ecde !=nil {return _bdeb ,_cb .Wrap (_ecde ,_gfff ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _ecde =_decd .WriteBit (int (_cegd .IsTransposed ));_ecde !=nil {return _bdeb ,_cb .Wrap (_ecde ,_gfff ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_ecde =_decd .WriteBits (uint64 (_cegd .ReferenceCorner ),2);_ecde !=nil {return _bdeb ,_cb .Wrap (_ecde ,_gfff ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_ecde =_decd .WriteBits (uint64 (_cegd .LogSBStrips ),2);
_ecde !=nil {return _bdeb ,_cb .Wrap (_ecde ,_gfff ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _cgea int ;if _cegd .UseRefinement {_cgea =1;};if _ecde =_decd .WriteBit (_cgea );_ecde !=nil {return _bdeb ,_cb .Wrap (_ecde ,_gfff ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_cgea =0;if _cegd .IsHuffmanEncoded {_cgea =1;};if _ecde =_decd .WriteBit (_cgea );_ecde !=nil {return _bdeb ,_cb .Wrap (_ecde ,_gfff ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_bdeb =2;return _bdeb ,nil ;};func (_aabce *GenericRegion )GetRegionBitmap ()(_bced *_g .Bitmap ,_ebc error ){if _aabce .Bitmap !=nil {return _aabce .Bitmap ,nil ;
};if _aabce .IsMMREncoded {if _aabce ._ade ==nil {_aabce ._ade ,_ebc =_fg .New (_aabce ._aabc ,int (_aabce .RegionSegment .BitmapWidth ),int (_aabce .RegionSegment .BitmapHeight ),_aabce .DataOffset ,_aabce .DataLength );if _ebc !=nil {return nil ,_ebc ;
};};_aabce .Bitmap ,_ebc =_aabce ._ade .UncompressMMR ();return _aabce .Bitmap ,_ebc ;};if _ebc =_aabce .updateOverrideFlags ();_ebc !=nil {return nil ,_ebc ;};var _bfd int ;if _aabce ._abdc ==nil {_aabce ._abdc ,_ebc =_df .New (_aabce ._aabc );if _ebc !=nil {return nil ,_ebc ;
};};if _aabce ._bbbd ==nil {_aabce ._bbbd =_df .NewStats (65536,1);};_aabce .Bitmap =_g .New (int (_aabce .RegionSegment .BitmapWidth ),int (_aabce .RegionSegment .BitmapHeight ));_cdd :=int (uint32 (_aabce .Bitmap .Width +7)&(^uint32 (7)));for _fge :=0;
_fge < _aabce .Bitmap .Height ;_fge ++{if _aabce .IsTPGDon {var _fde int ;_fde ,_ebc =_aabce .decodeSLTP ();if _ebc !=nil {return nil ,_ebc ;};_bfd ^=_fde ;};if _bfd ==1{if _fge > 0{if _ebc =_aabce .copyLineAbove (_fge );_ebc !=nil {return nil ,_ebc ;};
};}else {if _ebc =_aabce .decodeLine (_fge ,_aabce .Bitmap .Width ,_cdd );_ebc !=nil {return nil ,_ebc ;};};};return _aabce .Bitmap ,nil ;};func (_cgcg *Header )readDataStartOffset (_aagf _ae .StreamReader ,_afag OrganizationType ){if _afag ==OSequential {_cgcg .SegmentDataStartOffset =uint64 (_aagf .StreamPosition ());
};};func (_dfb *SymbolDictionary )decodeThroughTextRegion (_gfge ,_gagad ,_feaf uint32 )error {if _dfb ._egea ==nil {_dfb ._egea =_bdbb (_dfb ._bfca ,nil );_dfb ._egea .setContexts (_dfb ._fgba ,_df .NewStats (512,1),_df .NewStats (512,1),_df .NewStats (512,1),_df .NewStats (512,1),_dfb ._dfed ,_df .NewStats (512,1),_df .NewStats (512,1),_df .NewStats (512,1),_df .NewStats (512,1));
};if _gbec :=_dfb .setSymbolsArray ();_gbec !=nil {return _gbec ;};_dfb ._egea .setParameters (_dfb ._dagg ,_dfb .IsHuffmanEncoded ,true ,_gfge ,_gagad ,_feaf ,1,_dfb ._dfe +_dfb ._bcac ,0,0,0,1,0,0,0,0,0,0,0,0,0,_dfb .SdrTemplate ,_dfb .SdrATX ,_dfb .SdrATY ,_dfb ._ccag ,_dfb ._geece );
return _dfb .addSymbol (_dfb ._egea );};func (_bgbbe *TableSegment )HtOOB ()int32 {return _bgbbe ._bbadg };func (_gbca *HalftoneRegion )computeGrayScalePlanes (_ecdg []*_g .Bitmap ,_edea int )([][]int ,error ){_afe :=make ([][]int ,_gbca .HGridHeight );
for _ffcc :=0;_ffcc < len (_afe );_ffcc ++{_afe [_ffcc ]=make ([]int ,_gbca .HGridWidth );};for _aeb :=0;_aeb < int (_gbca .HGridHeight );_aeb ++{for _ggdd :=0;_ggdd < int (_gbca .HGridWidth );_ggdd +=8{var _gccf int ;if _fdfc :=int (_gbca .HGridWidth )-_ggdd ;
_fdfc > 8{_gccf =8;}else {_gccf =_fdfc ;};_fdfg :=_ecdg [0].GetByteIndex (_ggdd ,_aeb );for _eeda :=0;_eeda < _gccf ;_eeda ++{_fbdcb :=_eeda +_ggdd ;_afe [_aeb ][_fbdcb ]=0;for _fgab :=0;_fgab < _edea ;_fgab ++{_cda ,_begg :=_ecdg [_fgab ].GetByte (_fdfg );
if _begg !=nil {return nil ,_begg ;};_faa :=_cda >>uint (7-_fbdcb &7);_aea :=_faa &1;_baed :=1<<uint (_fgab );_gaddf :=int (_aea )*_baed ;_afe [_aeb ][_fbdcb ]+=_gaddf ;};};};};return _afe ,nil ;};func (_ada *HalftoneRegion )grayScaleDecoding (_fgc int )([][]int ,error ){var (_cec []int8 ;
_eec []int8 ;);if !_ada .IsMMREncoded {_cec =make ([]int8 ,4);_eec =make ([]int8 ,4);if _ada .HTemplate <=1{_cec [0]=3;}else if _ada .HTemplate >=2{_cec [0]=2;};_eec [0]=-1;_cec [1]=-3;_eec [1]=-1;_cec [2]=2;_eec [2]=-2;_cec [3]=-2;_eec [3]=-2;};_geec :=make ([]*_g .Bitmap ,_fgc );
_gceg :=NewGenericRegion (_ada ._dgdf );_gceg .setParametersMMR (_ada .IsMMREncoded ,_ada .DataOffset ,_ada .DataLength ,_ada .HGridHeight ,_ada .HGridWidth ,_ada .HTemplate ,false ,_ada .HSkipEnabled ,_cec ,_eec );_cff :=_fgc -1;var _ega error ;_geec [_cff ],_ega =_gceg .GetRegionBitmap ();
if _ega !=nil {return nil ,_ega ;};for _cff > 0{_cff --;_gceg .Bitmap =nil ;_geec [_cff ],_ega =_gceg .GetRegionBitmap ();if _ega !=nil {return nil ,_ega ;};if _ega =_ada .combineGrayscalePlanes (_geec ,_cff );_ega !=nil {return nil ,_ega ;};};return _ada .computeGrayScalePlanes (_geec ,_fgc );
};func (_cafbe *Header )writeSegmentDataLength (_egda _ae .BinaryWriter )(_bgbb int ,_adad error ){_gfc :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gfc ,uint32 (_cafbe .SegmentDataLength ));if _bgbb ,_adad =_egda .Write (_gfc );_adad !=nil {return 0,_cb .Wrap (_adad ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _bgbb ,nil ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_gbdgb *PageInformationSegment )Encode (w _ae .BinaryWriter )(_afcf int ,_cba error ){const _dcagg ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_bbae :=make ([]byte ,4);_e .BigEndian .PutUint32 (_bbae ,uint32 (_gbdgb .PageBMWidth ));_afcf ,_cba =w .Write (_bbae );if _cba !=nil {return _afcf ,_cb .Wrap (_cba ,_dcagg ,"\u0077\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_bbae ,uint32 (_gbdgb .PageBMHeight ));
var _cece int ;_cece ,_cba =w .Write (_bbae );if _cba !=nil {return _cece +_afcf ,_cb .Wrap (_cba ,_dcagg ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_afcf +=_cece ;_e .BigEndian .PutUint32 (_bbae ,uint32 (_gbdgb .ResolutionX ));_cece ,_cba =w .Write (_bbae );
if _cba !=nil {return _cece +_afcf ,_cb .Wrap (_cba ,_dcagg ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_afcf +=_cece ;_e .BigEndian .PutUint32 (_bbae ,uint32 (_gbdgb .ResolutionY ));if _cece ,_cba =w .Write (_bbae );_cba !=nil {return _cece +_afcf ,_cb .Wrap (_cba ,_dcagg ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_afcf +=_cece ;if _cba =_gbdgb .encodeFlags (w );_cba !=nil {return _afcf ,_cb .Wrap (_cba ,_dcagg ,"");};_afcf ++;if _cece ,_cba =_gbdgb .encodeStripingInformation (w );_cba !=nil {return _afcf ,_cb .Wrap (_cba ,_dcagg ,"");};_afcf +=_cece ;return _afcf ,nil ;
};func (_fdg *GenericRegion )GetRegionInfo ()*RegionSegment {return _fdg .RegionSegment };