//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_f "encoding/binary";_fg "errors";_da "fmt";_def "github.com/unidoc/unipdf/v3/common";_cc "github.com/unidoc/unipdf/v3/internal/bitwise";_bd "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ba "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_ded "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_gee "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_e "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_dg "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_bdd "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_gf "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_ge "image";_d "io";_c "math";_de "strings";_b "time";);func (_bgg *PageInformationSegment )readIsLossless ()error {_bbcb ,_abdf :=_bgg ._bcfg .ReadBit ();
if _abdf !=nil {return _abdf ;};if _bbcb ==1{_bgg .IsLossless =true ;};return nil ;};func (_ebe *HalftoneRegion )computeSegmentDataStructure ()error {_ebe .DataOffset =_ebe ._dfa .AbsolutePosition ();_ebe .DataHeaderLength =_ebe .DataOffset -_ebe .DataHeaderOffset ;
_ebe .DataLength =int64 (_ebe ._dfa .AbsoluteLength ())-_ebe .DataHeaderLength ;return nil ;};func (_dggbc *TableSegment )HtHigh ()int32 {return _dggbc ._aebe };func (_efc *Header )CleanSegmentData (){if _efc .SegmentData !=nil {_efc .SegmentData =nil ;
};};func (_ccgb *Header )readSegmentDataLength (_cddg *_cc .Reader )(_gaeg error ){_ccgb .SegmentDataLength ,_gaeg =_cddg .ReadBits (32);if _gaeg !=nil {return _gaeg ;};_ccgb .SegmentDataLength &=_c .MaxInt32 ;return nil ;};func (_dbed *SymbolDictionary )addSymbol (_fdec Regioner )error {_geac ,_dgab :=_fdec .GetRegionBitmap ();
if _dgab !=nil {return _dgab ;};_dbed ._ebgfa [_dbed ._aadc ]=_geac ;_dbed ._dffg =append (_dbed ._dffg ,_geac );_def .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_geac );
return nil ;};func (_badea *GenericRefinementRegion )readAtPixels ()error {_badea .GrAtX =make ([]int8 ,2);_badea .GrAtY =make ([]int8 ,2);_bbcd ,_aed :=_badea ._geb .ReadByte ();if _aed !=nil {return _aed ;};_badea .GrAtX [0]=int8 (_bbcd );_bbcd ,_aed =_badea ._geb .ReadByte ();
if _aed !=nil {return _aed ;};_badea .GrAtY [0]=int8 (_bbcd );_bbcd ,_aed =_badea ._geb .ReadByte ();if _aed !=nil {return _aed ;};_badea .GrAtX [1]=int8 (_bbcd );_bbcd ,_aed =_badea ._geb .ReadByte ();if _aed !=nil {return _aed ;};_badea .GrAtY [1]=int8 (_bbcd );
return nil ;};func (_afe *Header )GetSegmentData ()(Segmenter ,error ){var _eefe Segmenter ;if _afe .SegmentData !=nil {_eefe =_afe .SegmentData ;};if _eefe ==nil {_afbc ,_defcg :=_aff [_afe .Type ];if !_defcg {return nil ,_da .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_afe .Type ,_afe .Type );
};_eefe =_afbc ();_def .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_afe .SegmentNumber ,_afe .SegmentDataStartOffset );
_bcbe ,_fdac :=_afe .subInputReader ();if _fdac !=nil {return nil ,_fdac ;};if _abfe :=_eefe .Init (_afe ,_bcbe );_abfe !=nil {_def .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_abfe ,_eefe );
return nil ,_abfe ;};_afe .SegmentData =_eefe ;};return _eefe ,nil ;};func (_bg *EndOfStripe )LineNumber ()int {return _bg ._ga };func (_aad *PatternDictionary )Init (h *Header ,r *_cc .Reader )error {_aad ._cfbg =r ;return _aad .parseHeader ();};func (_gbdf *GenericRegion )setParametersMMR (_afd bool ,_egbce ,_cdeg int64 ,_dfbd ,_fcadc uint32 ,_bffe byte ,_dgec ,_adbe bool ,_eeeg ,_gfcd []int8 ){_gbdf .DataOffset =_egbce ;
_gbdf .DataLength =_cdeg ;_gbdf .RegionSegment =&RegionSegment {};_gbdf .RegionSegment .BitmapHeight =_dfbd ;_gbdf .RegionSegment .BitmapWidth =_fcadc ;_gbdf .GBTemplate =_bffe ;_gbdf .IsMMREncoded =_afd ;_gbdf .IsTPGDon =_dgec ;_gbdf .GBAtX =_eeeg ;_gbdf .GBAtY =_gfcd ;
};func (_eeaa *PageInformationSegment )Encode (w _cc .BinaryWriter )(_eddd int ,_cba error ){const _bbe ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_bacf :=make ([]byte ,4);_f .BigEndian .PutUint32 (_bacf ,uint32 (_eeaa .PageBMWidth ));_eddd ,_cba =w .Write (_bacf );if _cba !=nil {return _eddd ,_bdd .Wrap (_cba ,_bbe ,"\u0077\u0069\u0064t\u0068");};_f .BigEndian .PutUint32 (_bacf ,uint32 (_eeaa .PageBMHeight ));
var _dfac int ;_dfac ,_cba =w .Write (_bacf );if _cba !=nil {return _dfac +_eddd ,_bdd .Wrap (_cba ,_bbe ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_eddd +=_dfac ;_f .BigEndian .PutUint32 (_bacf ,uint32 (_eeaa .ResolutionX ));_dfac ,_cba =w .Write (_bacf );
if _cba !=nil {return _dfac +_eddd ,_bdd .Wrap (_cba ,_bbe ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_eddd +=_dfac ;_f .BigEndian .PutUint32 (_bacf ,uint32 (_eeaa .ResolutionY ));if _dfac ,_cba =w .Write (_bacf );_cba !=nil {return _dfac +_eddd ,_bdd .Wrap (_cba ,_bbe ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_eddd +=_dfac ;if _cba =_eeaa .encodeFlags (w );_cba !=nil {return _eddd ,_bdd .Wrap (_cba ,_bbe ,"");};_eddd ++;if _dfac ,_cba =_eeaa .encodeStripingInformation (w );_cba !=nil {return _eddd ,_bdd .Wrap (_cba ,_bbe ,"");};_eddd +=_dfac ;return _eddd ,nil ;
};func (_ac *GenericRefinementRegion )overrideAtTemplate0 (_cdb ,_gfgg ,_befg ,_ace ,_dcda int )int {if _ac ._daf [0]{_cdb &=0xfff7;if _ac .GrAtY [0]==0&&int (_ac .GrAtX [0])>=-_dcda {_cdb |=(_ace >>uint (7-(_dcda +int (_ac .GrAtX [0])))&0x1)<<3;}else {_cdb |=_ac .getPixel (_ac .RegionBitmap ,_gfgg +int (_ac .GrAtX [0]),_befg +int (_ac .GrAtY [0]))<<3;
};};if _ac ._daf [1]{_cdb &=0xefff;if _ac .GrAtY [1]==0&&int (_ac .GrAtX [1])>=-_dcda {_cdb |=(_ace >>uint (7-(_dcda +int (_ac .GrAtX [1])))&0x1)<<12;}else {_cdb |=_ac .getPixel (_ac .ReferenceBitmap ,_gfgg +int (_ac .GrAtX [1]),_befg +int (_ac .GrAtY [1]));
};};return _cdb ;};type PageInformationSegment struct{_bcfg *_cc .Reader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_eff bool ;_bdad _ba .CombinationOperator ;_efdc bool ;DefaultPixelValue uint8 ;_fae bool ;IsLossless bool ;IsStripe bool ;
MaxStripeSize uint16 ;};func (_abc *GenericRegion )GetRegionBitmap ()(_gbcb *_ba .Bitmap ,_cab error ){if _abc .Bitmap !=nil {return _abc .Bitmap ,nil ;};if _abc .IsMMREncoded {if _abc ._ccf ==nil {_abc ._ccf ,_cab =_e .New (_abc ._bfc ,int (_abc .RegionSegment .BitmapWidth ),int (_abc .RegionSegment .BitmapHeight ),_abc .DataOffset ,_abc .DataLength );
if _cab !=nil {return nil ,_cab ;};};_abc .Bitmap ,_cab =_abc ._ccf .UncompressMMR ();return _abc .Bitmap ,_cab ;};if _cab =_abc .updateOverrideFlags ();_cab !=nil {return nil ,_cab ;};var _gad int ;if _abc ._bgbg ==nil {_abc ._bgbg ,_cab =_ded .New (_abc ._bfc );
if _cab !=nil {return nil ,_cab ;};};if _abc ._gcd ==nil {_abc ._gcd =_ded .NewStats (65536,1);};_abc .Bitmap =_ba .New (int (_abc .RegionSegment .BitmapWidth ),int (_abc .RegionSegment .BitmapHeight ));_gdb :=int (uint32 (_abc .Bitmap .Width +7)&(^uint32 (7)));
for _cebb :=0;_cebb < _abc .Bitmap .Height ;_cebb ++{if _abc .IsTPGDon {var _bbf int ;_bbf ,_cab =_abc .decodeSLTP ();if _cab !=nil {return nil ,_cab ;};_gad ^=_bbf ;};if _gad ==1{if _cebb > 0{if _cab =_abc .copyLineAbove (_cebb );_cab !=nil {return nil ,_cab ;
};};}else {if _cab =_abc .decodeLine (_cebb ,_abc .Bitmap .Width ,_gdb );_cab !=nil {return nil ,_cab ;};};};return _abc .Bitmap ,nil ;};func (_abbd *SymbolDictionary )encodeNumSyms (_feea _cc .BinaryWriter )(_adgge int ,_fcde error ){const _bbb ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_ddad :=make ([]byte ,4);_f .BigEndian .PutUint32 (_ddad ,_abbd .NumberOfExportedSymbols );if _adgge ,_fcde =_feea .Write (_ddad );_fcde !=nil {return _adgge ,_bdd .Wrap (_fcde ,_bbb ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_f .BigEndian .PutUint32 (_ddad ,_abbd .NumberOfNewSymbols );_faed ,_fcde :=_feea .Write (_ddad );if _fcde !=nil {return _adgge ,_bdd .Wrap (_fcde ,_bbb ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _adgge +_faed ,nil ;};
func (_abcdc *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _abcdc .IsHuffmanEncoded {switch _abcdc .SdHuffDecodeWidthSelection {case 0:_dgfe ,_dadb :=_gee .GetStandardTable (2);if _dadb !=nil {return 0,_dadb ;};return _dgfe .Decode (_abcdc ._baa );
case 1:_dbdc ,_fged :=_gee .GetStandardTable (3);if _fged !=nil {return 0,_fged ;};return _dbdc .Decode (_abcdc ._baa );case 3:if _abcdc ._gdc ==nil {var _eded int ;if _abcdc .SdHuffDecodeHeightSelection ==3{_eded ++;};_aadcd ,_efcf :=_abcdc .getUserTable (_eded );
if _efcf !=nil {return 0,_efcf ;};_abcdc ._gdc =_aadcd ;};return _abcdc ._gdc .Decode (_abcdc ._baa );};}else {_ceged ,_bceb :=_abcdc ._gebb .DecodeInt (_abcdc ._bcagb );if _bceb !=nil {return 0,_bceb ;};return int64 (_ceged ),nil ;};return 0,nil ;};func (_aab *Header )writeSegmentDataLength (_gbaf _cc .BinaryWriter )(_bbg int ,_edc error ){_abfc :=make ([]byte ,4);
_f .BigEndian .PutUint32 (_abfc ,uint32 (_aab .SegmentDataLength ));if _bbg ,_edc =_gbaf .Write (_abfc );_edc !=nil {return 0,_bdd .Wrap (_edc ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _bbg ,nil ;};func (_eb *GenericRefinementRegion )getGrReference ()(*_ba .Bitmap ,error ){segments :=_eb ._bgb .RTSegments ;if len (segments )==0{return nil ,_fg .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_cag ,_fa :=segments [0].GetSegmentData ();if _fa !=nil {return nil ,_fa ;};_gbf ,_be :=_cag .(Regioner );if !_be {return nil ,_da .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_cag );
};return _gbf .GetRegionBitmap ();};func _fdcd (_ed *_cc .Reader ,_abf *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_geb :_ed ,RegionInfo :NewRegionSegment (_ed ),_bgb :_abf ,_dee :&template0 {},_gg :&template1 {}};};func (_egde *HalftoneRegion )GetPatterns ()([]*_ba .Bitmap ,error ){var (_fdbe []*_ba .Bitmap ;
_bfcg error ;);for _ ,_gggd :=range _egde ._bcbg .RTSegments {var _aeee Segmenter ;_aeee ,_bfcg =_gggd .GetSegmentData ();if _bfcg !=nil {_def .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_bfcg );
return nil ,_bfcg ;};_dgc ,_efea :=_aeee .(*PatternDictionary );if !_efea {_bfcg =_da .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_aeee );
return nil ,_bfcg ;};var _fbbf []*_ba .Bitmap ;_fbbf ,_bfcg =_dgc .GetDictionary ();if _bfcg !=nil {_def .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bfcg );
return nil ,_bfcg ;};_fdbe =append (_fdbe ,_fbbf ...);};return _fdbe ,nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_eafb *Header )pageSize ()uint {if _eafb .PageAssociation <=255{return 1;
};return 4;};func (_bf *GenericRefinementRegion )decodeTypicalPredictedLine (_bade ,_fab ,_gea ,_bab ,_dcd ,_egc int )error {_ege :=_bade -int (_bf .ReferenceDY );_bff :=_bf .ReferenceBitmap .GetByteIndex (0,_ege );_fbe :=_bf .RegionBitmap .GetByteIndex (0,_bade );
var _fca error ;switch _bf .TemplateID {case 0:_fca =_bf .decodeTypicalPredictedLineTemplate0 (_bade ,_fab ,_gea ,_bab ,_dcd ,_egc ,_fbe ,_ege ,_bff );case 1:_fca =_bf .decodeTypicalPredictedLineTemplate1 (_bade ,_fab ,_gea ,_bab ,_dcd ,_egc ,_fbe ,_ege ,_bff );
};return _fca ;};var _ templater =&template1 {};func (_gec *GenericRegion )String ()string {_cdc :=&_de .Builder {};_cdc .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_cdc .WriteString (_gec .RegionSegment .String ()+"\u000a");
_cdc .WriteString (_da .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_gec .UseExtTemplates ));_cdc .WriteString (_da .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gec .IsTPGDon ));
_cdc .WriteString (_da .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_gec .GBTemplate ));_cdc .WriteString (_da .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_gec .IsMMREncoded ));
_cdc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_gec .GBAtX ));_cdc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_gec .GBAtY ));
_cdc .WriteString (_da .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_gec .GBAtOverride ));return _cdc .String ();};func (_fcb *Header )subInputReader ()(*_cc .Reader ,error ){_cdegc :=int (_fcb .SegmentDataLength );
if _fcb .SegmentDataLength ==_c .MaxInt32 {_cdegc =-1;};return _fcb .Reader .NewPartialReader (int (_fcb .SegmentDataStartOffset ),_cdegc ,false );};func (_dgf *template0 )setIndex (_ccd *_ded .DecoderStats ){_ccd .SetIndex (0x100)};type GenericRegion struct{_bfc *_cc .Reader ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_daagb bool ;
Bitmap *_ba .Bitmap ;_bgbg *_ded .Decoder ;_gcd *_ded .DecoderStats ;_ccf *_e .Decoder ;};func (_fdg *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_eafc int ;_cfgb int32 ;_ddce error ;_dca =int32 (_fdg ._fdee +_fdg .NumberOfNewSymbols );_fecb =make ([]int ,_dca );
);for _cgdc :=int32 (0);_cgdc < _dca ;_cgdc +=_cfgb {if _fdg .IsHuffmanEncoded {_cdfg ,_gafb :=_gee .GetStandardTable (1);if _gafb !=nil {return nil ,_gafb ;};_aaed ,_gafb :=_cdfg .Decode (_fdg ._baa );if _gafb !=nil {return nil ,_gafb ;};_cfgb =int32 (_aaed );
}else {_cfgb ,_ddce =_fdg ._gebb .DecodeInt (_fdg ._bdbeb );if _ddce !=nil {return nil ,_ddce ;};};if _cfgb !=0{if _cgdc +_cfgb > _dca {return nil ,_bdd .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _egeb :=_cgdc ;_egeb < _cgdc +_cfgb ;_egeb ++{_fecb [_egeb ]=_eafc ;};};if _eafc ==0{_eafc =1;}else {_eafc =0;};};return _fecb ,nil ;};func (_bagd *RegionSegment )readCombinationOperator ()error {_bgbf ,_fgaa :=_bagd ._cbee .ReadBits (3);if _fgaa !=nil {return _fgaa ;
};_bagd .CombinaionOperator =_ba .CombinationOperator (_bgbf &0xF);return nil ;};func (_eddad *PageInformationSegment )CombinationOperator ()_ba .CombinationOperator {return _eddad ._bdad ;};func (_fddb *PageInformationSegment )readContainsRefinement ()error {_edeb ,_cefa :=_fddb ._bcfg .ReadBit ();
if _cefa !=nil {return _cefa ;};if _edeb ==1{_fddb ._fae =true ;};return nil ;};func (_bced *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _bced ._eff };func (_fdbfa *Header )readHeaderLength (_dggb *_cc .Reader ,_eaaa int64 ){_fdbfa .HeaderLength =_dggb .AbsolutePosition ()-_eaaa ;
};func (_agc *PageInformationSegment )parseHeader ()(_debd error ){_def .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _cca ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _debd !=nil {_cca +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_debd .Error ();}else {_cca +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_def .Log .Trace (_cca );}();if _debd =_agc .readWidthAndHeight ();
_debd !=nil {return _debd ;};if _debd =_agc .readResolution ();_debd !=nil {return _debd ;};_ ,_debd =_agc ._bcfg .ReadBit ();if _debd !=nil {return _debd ;};if _debd =_agc .readCombinationOperatorOverrideAllowed ();_debd !=nil {return _debd ;};if _debd =_agc .readRequiresAuxiliaryBuffer ();
_debd !=nil {return _debd ;};if _debd =_agc .readCombinationOperator ();_debd !=nil {return _debd ;};if _debd =_agc .readDefaultPixelValue ();_debd !=nil {return _debd ;};if _debd =_agc .readContainsRefinement ();_debd !=nil {return _debd ;};if _debd =_agc .readIsLossless ();
_debd !=nil {return _debd ;};if _debd =_agc .readIsStriped ();_debd !=nil {return _debd ;};if _debd =_agc .readMaxStripeSize ();_debd !=nil {return _debd ;};if _debd =_agc .checkInput ();_debd !=nil {return _debd ;};_def .Log .Trace ("\u0025\u0073",_agc );
return nil ;};func (_acea *template0 )form (_cadf ,_dad ,_cgf ,_fcg ,_gacf int16 )int16 {return (_cadf <<10)|(_dad <<7)|(_cgf <<4)|(_fcg <<1)|_gacf ;};func (_dde *HalftoneRegion )shiftAndFill (_aaff int )int {_aaff >>=8;if _aaff < 0{_bag :=int (_c .Log (float64 (_geeb (_aaff )))/_c .Log (2));
_dbe :=31-_bag ;for _fcd :=1;_fcd < _dbe ;_fcd ++{_aaff |=1<<uint (31-_fcd );};};return _aaff ;};func (_bdc *HalftoneRegion )computeY (_adgb ,_agaa int )int {return _bdc .shiftAndFill (int (_bdc .HGridY )+_adgb *int (_bdc .HRegionX )-_agaa *int (_bdc .HRegionY ));
};func (_fefd *TextRegion )blit (_bfde *_ba .Bitmap ,_gffcb int64 )error {if _fefd .IsTransposed ==0&&(_fefd .ReferenceCorner ==2||_fefd .ReferenceCorner ==3){_fefd ._gcbc +=int64 (_bfde .Width -1);}else if _fefd .IsTransposed ==1&&(_fefd .ReferenceCorner ==0||_fefd .ReferenceCorner ==2){_fefd ._gcbc +=int64 (_bfde .Height -1);
};_cgfa :=_fefd ._gcbc ;if _fefd .IsTransposed ==1{_cgfa ,_gffcb =_gffcb ,_cgfa ;};switch _fefd .ReferenceCorner {case 0:_gffcb -=int64 (_bfde .Height -1);case 2:_gffcb -=int64 (_bfde .Height -1);_cgfa -=int64 (_bfde .Width -1);case 3:_cgfa -=int64 (_bfde .Width -1);
};_gcbf :=_ba .Blit (_bfde ,_fefd .RegionBitmap ,int (_cgfa ),int (_gffcb ),_fefd .CombinationOperator );if _gcbf !=nil {return _gcbf ;};if _fefd .IsTransposed ==0&&(_fefd .ReferenceCorner ==0||_fefd .ReferenceCorner ==1){_fefd ._gcbc +=int64 (_bfde .Width -1);
};if _fefd .IsTransposed ==1&&(_fefd .ReferenceCorner ==1||_fefd .ReferenceCorner ==3){_fefd ._gcbc +=int64 (_bfde .Height -1);};return nil ;};func (_bdcd *TextRegion )decodeRdh ()(int64 ,error ){const _fbcb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _bdcd .IsHuffmanEncoded {if _bdcd .SbHuffRDHeight ==3{if _bdcd ._gaef ==nil {var (_ffgg int ;_bcagg error ;);if _bdcd .SbHuffFS ==3{_ffgg ++;};if _bdcd .SbHuffDS ==3{_ffgg ++;};if _bdcd .SbHuffDT ==3{_ffgg ++;};if _bdcd .SbHuffRDWidth ==3{_ffgg ++;};
_bdcd ._gaef ,_bcagg =_bdcd .getUserTable (_ffgg );if _bcagg !=nil {return 0,_bdd .Wrap (_bcagg ,_fbcb ,"");};};return _bdcd ._gaef .Decode (_bdcd ._efcfe );};_deffb ,_fded :=_gee .GetStandardTable (14+int (_bdcd .SbHuffRDHeight ));if _fded !=nil {return 0,_bdd .Wrap (_fded ,_fbcb ,"");
};return _deffb .Decode (_bdcd ._efcfe );};_ecbg ,_aeag :=_bdcd ._aabe .DecodeInt (_bdcd ._cccfb );if _aeag !=nil {return 0,_bdd .Wrap (_aeag ,_fbcb ,"");};return int64 (_ecbg ),nil ;};func (_cda *RegionSegment )Encode (w _cc .BinaryWriter )(_fadg int ,_ffbg error ){const _deba ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_cgfc :=make ([]byte ,4);_f .BigEndian .PutUint32 (_cgfc ,_cda .BitmapWidth );_fadg ,_ffbg =w .Write (_cgfc );if _ffbg !=nil {return 0,_bdd .Wrap (_ffbg ,_deba ,"\u0057\u0069\u0064t\u0068");};_f .BigEndian .PutUint32 (_cgfc ,_cda .BitmapHeight );var _ccaf int ;
_ccaf ,_ffbg =w .Write (_cgfc );if _ffbg !=nil {return 0,_bdd .Wrap (_ffbg ,_deba ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_fadg +=_ccaf ;_f .BigEndian .PutUint32 (_cgfc ,_cda .XLocation );_ccaf ,_ffbg =w .Write (_cgfc );if _ffbg !=nil {return 0,_bdd .Wrap (_ffbg ,_deba ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_fadg +=_ccaf ;_f .BigEndian .PutUint32 (_cgfc ,_cda .YLocation );_ccaf ,_ffbg =w .Write (_cgfc );if _ffbg !=nil {return 0,_bdd .Wrap (_ffbg ,_deba ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_fadg +=_ccaf ;if _ffbg =w .WriteByte (byte (_cda .CombinaionOperator )&0x07);
_ffbg !=nil {return 0,_bdd .Wrap (_ffbg ,_deba ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_fadg ++;return _fadg ,nil ;};type template1 struct{};func (_gggb *Header )String ()string {_fddd :=&_de .Builder {};
_fddd .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_fddd .WriteString (_da .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_gggb .SegmentNumber ));
_fddd .WriteString (_da .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_gggb .Type ));_fddd .WriteString (_da .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_gggb .RetainFlag ));
_fddd .WriteString (_da .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gggb .PageAssociation ));_fddd .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_gggb .PageAssociationFieldSize ));
_fddd .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_bafe :=range _gggb .RTSNumbers {_fddd .WriteString (_da .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_bafe ));};_fddd .WriteString (_da .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_gggb .HeaderLength ));
_fddd .WriteString (_da .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_gggb .SegmentDataLength ));_fddd .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_gggb .SegmentDataStartOffset ));
return _fddd .String ();};func (_aea *GenericRegion )overrideAtTemplate0a (_gdbe ,_facb ,_ccfg ,_dbda ,_dfeg ,_cccc int )int {if _aea .GBAtOverride [0]{_gdbe &=0xFFEF;if _aea .GBAtY [0]==0&&_aea .GBAtX [0]>=-int8 (_dfeg ){_gdbe |=(_dbda >>uint (int8 (_cccc )-_aea .GBAtX [0]&0x1))<<4;
}else {_gdbe |=int (_aea .getPixel (_facb +int (_aea .GBAtX [0]),_ccfg +int (_aea .GBAtY [0])))<<4;};};if _aea .GBAtOverride [1]{_gdbe &=0xFBFF;if _aea .GBAtY [1]==0&&_aea .GBAtX [1]>=-int8 (_dfeg ){_gdbe |=(_dbda >>uint (int8 (_cccc )-_aea .GBAtX [1]&0x1))<<10;
}else {_gdbe |=int (_aea .getPixel (_facb +int (_aea .GBAtX [1]),_ccfg +int (_aea .GBAtY [1])))<<10;};};if _aea .GBAtOverride [2]{_gdbe &=0xF7FF;if _aea .GBAtY [2]==0&&_aea .GBAtX [2]>=-int8 (_dfeg ){_gdbe |=(_dbda >>uint (int8 (_cccc )-_aea .GBAtX [2]&0x1))<<11;
}else {_gdbe |=int (_aea .getPixel (_facb +int (_aea .GBAtX [2]),_ccfg +int (_aea .GBAtY [2])))<<11;};};if _aea .GBAtOverride [3]{_gdbe &=0x7FFF;if _aea .GBAtY [3]==0&&_aea .GBAtX [3]>=-int8 (_dfeg ){_gdbe |=(_dbda >>uint (int8 (_cccc )-_aea .GBAtX [3]&0x1))<<15;
}else {_gdbe |=int (_aea .getPixel (_facb +int (_aea .GBAtX [3]),_ccfg +int (_aea .GBAtY [3])))<<15;};};return _gdbe ;};func (_bcbgf *TextRegion )decodeIds ()(int64 ,error ){const _addb ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _bcbgf .IsHuffmanEncoded {if _bcbgf .SbHuffDS ==3{if _bcbgf ._adc ==nil {_daeg :=0;
if _bcbgf .SbHuffFS ==3{_daeg ++;};var _fbgd error ;_bcbgf ._adc ,_fbgd =_bcbgf .getUserTable (_daeg );if _fbgd !=nil {return 0,_bdd .Wrap (_fbgd ,_addb ,"");};};return _bcbgf ._adc .Decode (_bcbgf ._efcfe );};_aebab ,_gbdb :=_gee .GetStandardTable (8+int (_bcbgf .SbHuffDS ));
if _gbdb !=nil {return 0,_bdd .Wrap (_gbdb ,_addb ,"");};return _aebab .Decode (_bcbgf ._efcfe );};_gaaf ,_ggbb :=_bcbgf ._aabe .DecodeInt (_bcbgf ._gdgcb );if _ggbb !=nil {return 0,_bdd .Wrap (_ggbb ,_addb ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_gaaf ),nil ;
};func (_efda *GenericRegion )Size ()int {return _efda .RegionSegment .Size ()+1+2*len (_efda .GBAtX )};func (_gcae *PageInformationSegment )Size ()int {return 19};func (_ffg *GenericRegion )decodeTemplate0a (_dge ,_cfe ,_adf int ,_bceg ,_cebbd int )(_cgd error ){const _gfgd ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_cacca ,_ged int ;_adge ,_fabb int ;_dfd byte ;_fcac int ;);if _dge >=1{_dfd ,_cgd =_ffg .Bitmap .GetByte (_cebbd );if _cgd !=nil {return _bdd .Wrap (_cgd ,_gfgd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_adge =int (_dfd );};if _dge >=2{_dfd ,_cgd =_ffg .Bitmap .GetByte (_cebbd -_ffg .Bitmap .RowStride );
if _cgd !=nil {return _bdd .Wrap (_cgd ,_gfgd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fabb =int (_dfd )<<6;};_cacca =(_adge &0xf0)|(_fabb &0x3800);for _gedb :=0;_gedb < _adf ;_gedb =_fcac {var (_bcb byte ;_bdda int ;);_fcac =_gedb +8;if _fcgd :=_cfe -_gedb ;
_fcgd > 8{_bdda =8;}else {_bdda =_fcgd ;};if _dge > 0{_adge <<=8;if _fcac < _cfe {_dfd ,_cgd =_ffg .Bitmap .GetByte (_cebbd +1);if _cgd !=nil {return _bdd .Wrap (_cgd ,_gfgd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_adge |=int (_dfd );};};
if _dge > 1{_ecec :=_cebbd -_ffg .Bitmap .RowStride +1;_fabb <<=8;if _fcac < _cfe {_dfd ,_cgd =_ffg .Bitmap .GetByte (_ecec );if _cgd !=nil {return _bdd .Wrap (_cgd ,_gfgd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fabb |=int (_dfd )<<6;}else {_fabb |=0;
};};for _dgd :=0;_dgd < _bdda ;_dgd ++{_dgfb :=uint (7-_dgd );if _ffg ._daagb {_ged =_ffg .overrideAtTemplate0a (_cacca ,_gedb +_dgd ,_dge ,int (_bcb ),_dgd ,int (_dgfb ));_ffg ._gcd .SetIndex (int32 (_ged ));}else {_ffg ._gcd .SetIndex (int32 (_cacca ));
};var _fecca int ;_fecca ,_cgd =_ffg ._bgbg .DecodeBit (_ffg ._gcd );if _cgd !=nil {return _bdd .Wrap (_cgd ,_gfgd ,"");};_bcb |=byte (_fecca )<<_dgfb ;_cacca =((_cacca &0x7bf7)<<1)|_fecca |((_adge >>_dgfb )&0x10)|((_fabb >>_dgfb )&0x800);};if _egg :=_ffg .Bitmap .SetByte (_bceg ,_bcb );
_egg !=nil {return _bdd .Wrap (_egg ,_gfgd ,"");};_bceg ++;_cebbd ++;};return nil ;};func (_afbgg *PageInformationSegment )readWidthAndHeight ()error {_cbca ,_afff :=_afbgg ._bcfg .ReadBits (32);if _afff !=nil {return _afff ;};_afbgg .PageBMWidth =int (_cbca &_c .MaxInt32 );
_cbca ,_afff =_afbgg ._bcfg .ReadBits (32);if _afff !=nil {return _afff ;};_afbgg .PageBMHeight =int (_cbca &_c .MaxInt32 );return nil ;};func (_dege *SymbolDictionary )setAtPixels ()error {if _dege .IsHuffmanEncoded {return nil ;};_facc :=1;if _dege .SdTemplate ==0{_facc =4;
};if _agedf :=_dege .readAtPixels (_facc );_agedf !=nil {return _agedf ;};return nil ;};func (_ffcg *TextRegion )String ()string {_dbgg :=&_de .Builder {};_dbgg .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_dbgg .WriteString (_ffcg .RegionInfo .String ()+"\u000a");_dbgg .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_ffcg .SbrTemplate ));_dbgg .WriteString (_da .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_ffcg .SbDsOffset ));
_dbgg .WriteString (_da .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_ffcg .DefaultPixel ));_dbgg .WriteString (_da .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_ffcg .CombinationOperator ));
_dbgg .WriteString (_da .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_ffcg .IsTransposed ));_dbgg .WriteString (_da .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_ffcg .ReferenceCorner ));
_dbgg .WriteString (_da .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_ffcg .UseRefinement ));_dbgg .WriteString (_da .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_ffcg .IsHuffmanEncoded ));
if _ffcg .IsHuffmanEncoded {_dbgg .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_ffcg .SbHuffRSize ));_dbgg .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_ffcg .SbHuffRDY ));
_dbgg .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_ffcg .SbHuffRDX ));_dbgg .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_ffcg .SbHuffRDHeight ));
_dbgg .WriteString (_da .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_ffcg .SbHuffRDWidth ));_dbgg .WriteString (_da .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_ffcg .SbHuffDT ));
_dbgg .WriteString (_da .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_ffcg .SbHuffDS ));_dbgg .WriteString (_da .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_ffcg .SbHuffFS ));
};_dbgg .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_ffcg .SbrATX ));_dbgg .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_ffcg .SbrATY ));
_dbgg .WriteString (_da .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_ffcg .NumberOfSymbolInstances ));_dbgg .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_ffcg .SbrATX ));
return _dbgg .String ();};type HalftoneRegion struct{_dfa *_cc .Reader ;_bcbg *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _ba .CombinationOperator ;
HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_ba .Bitmap ;Patterns []*_ba .Bitmap ;};func (_cacf *Header )writeReferredToCount (_gead _cc .BinaryWriter )(_ccdc int ,_abfa error ){const _bafc ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_cacf .RTSNumbers =make ([]int ,len (_cacf .RTSegments ));for _ddfe ,_bebdf :=range _cacf .RTSegments {_cacf .RTSNumbers [_ddfe ]=int (_bebdf .SegmentNumber );};if len (_cacf .RTSNumbers )<=4{var _fedd byte ;if len (_cacf .RetainBits )>=1{_fedd =_cacf .RetainBits [0];
};_fedd |=byte (len (_cacf .RTSNumbers ))<<5;if _abfa =_gead .WriteByte (_fedd );_abfa !=nil {return 0,_bdd .Wrap (_abfa ,_bafc ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_fbc :=uint32 (len (_cacf .RTSNumbers ));
_afg :=make ([]byte ,4+_bd .Ceil (len (_cacf .RTSNumbers )+1,8));_fbc |=0x7<<29;_f .BigEndian .PutUint32 (_afg ,_fbc );copy (_afg [1:],_cacf .RetainBits );_ccdc ,_abfa =_gead .Write (_afg );if _abfa !=nil {return 0,_bdd .Wrap (_abfa ,_bafc ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _ccdc ,nil ;};func (_cfc *PatternDictionary )readGrayMax ()error {_dgga ,_gcb :=_cfc ._cfbg .ReadBits (32);if _gcb !=nil {return _gcb ;};_cfc .GrayMax =uint32 (_dgga &_c .MaxUint32 );return nil ;};func (_fcbc *Header )writeReferredToSegments (_agf _cc .BinaryWriter )(_fbbe int ,_cafg error ){const _bfcb ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_dece uint16 ;_cbcb uint32 ;);_gge :=_fcbc .referenceSize ();_ceee :=1;_caed :=make ([]byte ,_gge );for _ ,_bac :=range _fcbc .RTSNumbers {switch _gge {case 4:_cbcb =uint32 (_bac );_f .BigEndian .PutUint32 (_caed ,_cbcb );_ceee ,_cafg =_agf .Write (_caed );
if _cafg !=nil {return 0,_bdd .Wrap (_cafg ,_bfcb ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_dece =uint16 (_bac );_f .BigEndian .PutUint16 (_caed ,_dece );_ceee ,_cafg =_agf .Write (_caed );if _cafg !=nil {return 0,_bdd .Wrap (_cafg ,_bfcb ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _cafg =_agf .WriteByte (byte (_bac ));_cafg !=nil {return 0,_bdd .Wrap (_cafg ,_bfcb ,"\u0075\u0069\u006et\u0038");};};_fbbe +=_ceee ;};return _fbbe ,nil ;};func (_eddf *TextRegion )decodeRI ()(int64 ,error ){if !_eddf .UseRefinement {return 0,nil ;
};if _eddf .IsHuffmanEncoded {_gdgf ,_egbcf :=_eddf ._efcfe .ReadBit ();return int64 (_gdgf ),_egbcf ;};_ceea ,_gggaf :=_eddf ._aabe .DecodeInt (_eddf ._adecb );return int64 (_ceea ),_gggaf ;};func NewHeader (d Documenter ,r *_cc .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_ffca :=&Header {Reader :r };
if _cdbea :=_ffca .parse (d ,r ,offset ,organizationType );_cdbea !=nil {return nil ,_bdd .Wrap (_cdbea ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _ffca ,nil ;};func (_aedf *HalftoneRegion )Init (hd *Header ,r *_cc .Reader )error {_aedf ._dfa =r ;
_aedf ._bcbg =hd ;_aedf .RegionSegment =NewRegionSegment (r );return _aedf .parseHeader ();};func (_dada *SymbolDictionary )decodeHeightClassCollectiveBitmap (_geca int64 ,_abbe ,_eefeb uint32 )(*_ba .Bitmap ,error ){if _geca ==0{_dgfa :=_ba .New (int (_eefeb ),int (_abbe ));
var (_ecce byte ;_gaad error ;);for _edb :=0;_edb < len (_dgfa .Data );_edb ++{_ecce ,_gaad =_dada ._baa .ReadByte ();if _gaad !=nil {return nil ,_gaad ;};if _gaad =_dgfa .SetByte (_edb ,_ecce );_gaad !=nil {return nil ,_gaad ;};};return _dgfa ,nil ;};
if _dada ._gcgg ==nil {_dada ._gcgg =NewGenericRegion (_dada ._baa );};_dada ._gcgg .setParameters (true ,_dada ._baa .AbsolutePosition (),_geca ,_abbe ,_eefeb );_dgdfc ,_efb :=_dada ._gcgg .GetRegionBitmap ();if _efb !=nil {return nil ,_efb ;};return _dgdfc ,nil ;
};type GenericRefinementRegion struct{_dee templater ;_gg templater ;_geb *_cc .Reader ;_bgb *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_ba .Bitmap ;ReferenceBitmap *_ba .Bitmap ;
ReferenceDX int32 ;ReferenceDY int32 ;_ca *_ded .Decoder ;_ff *_ded .DecoderStats ;_fga bool ;_daf []bool ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_ba .Bitmap ,error );};func (_ggad *Header )writeSegmentPageAssociation (_cbce _cc .BinaryWriter )(_bffa int ,_cbbdd error ){const _abfea ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _ggad .pageSize ()!=4{if _cbbdd =_cbce .WriteByte (byte (_ggad .PageAssociation ));_cbbdd !=nil {return 0,_bdd .Wrap (_cbbdd ,_abfea ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_dgdc :=make ([]byte ,4);
_f .BigEndian .PutUint32 (_dgdc ,uint32 (_ggad .PageAssociation ));if _bffa ,_cbbdd =_cbce .Write (_dgdc );_cbbdd !=nil {return 0,_bdd .Wrap (_cbbdd ,_abfea ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};
return _bffa ,nil ;};func (_gffg *PatternDictionary )readIsMMREncoded ()error {_afge ,_cefd :=_gffg ._cfbg .ReadBit ();if _cefd !=nil {return _cefd ;};if _afge !=0{_gffg .IsMMREncoded =true ;};return nil ;};func (_fcc *GenericRegion )Init (h *Header ,r *_cc .Reader )error {_fcc .RegionSegment =NewRegionSegment (r );
_fcc ._bfc =r ;return _fcc .parseHeader ();};func (_bcg *TextRegion )decodeStripT ()(_acfa int64 ,_cgda error ){if _bcg .IsHuffmanEncoded {if _bcg .SbHuffDT ==3{if _bcg ._eagdf ==nil {var _aggg int ;if _bcg .SbHuffFS ==3{_aggg ++;};if _bcg .SbHuffDS ==3{_aggg ++;
};_bcg ._eagdf ,_cgda =_bcg .getUserTable (_aggg );if _cgda !=nil {return 0,_cgda ;};};_acfa ,_cgda =_bcg ._eagdf .Decode (_bcg ._efcfe );if _cgda !=nil {return 0,_cgda ;};}else {var _gfead _gee .Tabler ;_gfead ,_cgda =_gee .GetStandardTable (11+int (_bcg .SbHuffDT ));
if _cgda !=nil {return 0,_cgda ;};_acfa ,_cgda =_gfead .Decode (_bcg ._efcfe );if _cgda !=nil {return 0,_cgda ;};};}else {var _cdag int32 ;_cdag ,_cgda =_bcg ._aabe .DecodeInt (_bcg ._aagbf );if _cgda !=nil {return 0,_cgda ;};_acfa =int64 (_cdag );};_acfa *=int64 (-_bcg .SbStrips );
return _acfa ,nil ;};var _ _gee .BasicTabler =&TableSegment {};func (_bfec *TextRegion )decodeRdy ()(int64 ,error ){const _cbcc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _bfec .IsHuffmanEncoded {if _bfec .SbHuffRDY ==3{if _bfec ._ccggb ==nil {var (_dfgb int ;
_cdfa error ;);if _bfec .SbHuffFS ==3{_dfgb ++;};if _bfec .SbHuffDS ==3{_dfgb ++;};if _bfec .SbHuffDT ==3{_dfgb ++;};if _bfec .SbHuffRDWidth ==3{_dfgb ++;};if _bfec .SbHuffRDHeight ==3{_dfgb ++;};if _bfec .SbHuffRDX ==3{_dfgb ++;};_bfec ._ccggb ,_cdfa =_bfec .getUserTable (_dfgb );
if _cdfa !=nil {return 0,_bdd .Wrap (_cdfa ,_cbcc ,"");};};return _bfec ._ccggb .Decode (_bfec ._efcfe );};_effc ,_cggf :=_gee .GetStandardTable (14+int (_bfec .SbHuffRDY ));if _cggf !=nil {return 0,_cggf ;};return _effc .Decode (_bfec ._efcfe );};_bbbb ,_abfeb :=_bfec ._aabe .DecodeInt (_bfec ._gfee );
if _abfeb !=nil {return 0,_bdd .Wrap (_abfeb ,_cbcc ,"");};return int64 (_bbbb ),nil ;};func (_dfbc *TableSegment )Init (h *Header ,r *_cc .Reader )error {_dfbc ._dccb =r ;return _dfbc .parseHeader ();};func NewRegionSegment (r *_cc .Reader )*RegionSegment {return &RegionSegment {_cbee :r }};
func (_cccf *SymbolDictionary )setExportedSymbols (_bdef []int ){for _egbded :=uint32 (0);_egbded < _cccf ._fdee +_cccf .NumberOfNewSymbols ;_egbded ++{if _bdef [_egbded ]==1{var _feddc *_ba .Bitmap ;if _egbded < _cccf ._fdee {_feddc =_cccf ._bgeg [_egbded ];
}else {_feddc =_cccf ._ebgfa [_egbded -_cccf ._fdee ];};_def .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_feddc );
_cccf ._dfee =append (_cccf ._dfee ,_feddc );};};};func (_cgac *TextRegion )decodeSymbolInstances ()error {_aebf ,_fcef :=_cgac .decodeStripT ();if _fcef !=nil {return _fcef ;};var (_bbagb int64 ;_aagbd uint32 ;);for _aagbd < _cgac .NumberOfSymbolInstances {_agea ,_fceg :=_cgac .decodeDT ();
if _fceg !=nil {return _fceg ;};_aebf +=_agea ;var _dfbcb int64 ;_acb :=true ;_cgac ._gcbc =0;for {if _acb {_dfbcb ,_fceg =_cgac .decodeDfs ();if _fceg !=nil {return _fceg ;};_bbagb +=_dfbcb ;_cgac ._gcbc =_bbagb ;_acb =false ;}else {_cabd ,_cfbd :=_cgac .decodeIds ();
if _fg .Is (_cfbd ,_gf .ErrOOB ){break ;};if _cfbd !=nil {return _cfbd ;};if _aagbd >=_cgac .NumberOfSymbolInstances {break ;};_cgac ._gcbc +=_cabd +int64 (_cgac .SbDsOffset );};_bdce ,_dfga :=_cgac .decodeCurrentT ();if _dfga !=nil {return _dfga ;};_cdfe :=_aebf +_bdce ;
_bcece ,_dfga :=_cgac .decodeID ();if _dfga !=nil {return _dfga ;};_dbee ,_dfga :=_cgac .decodeRI ();if _dfga !=nil {return _dfga ;};_bcdbd ,_dfga :=_cgac .decodeIb (_dbee ,_bcece );if _dfga !=nil {return _dfga ;};if _dfga =_cgac .blit (_bcdbd ,_cdfe );
_dfga !=nil {return _dfga ;};_aagbd ++;};};return nil ;};type EncodeInitializer interface{InitEncode ();};func (_caeg *PageInformationSegment )readIsStriped ()error {_gbab ,_gbad :=_caeg ._bcfg .ReadBit ();if _gbad !=nil {return _gbad ;};if _gbab ==1{_caeg .IsStripe =true ;
};return nil ;};func (_egefa *SymbolDictionary )setSymbolsArray ()error {if _egefa ._bgeg ==nil {if _bbeb :=_egefa .retrieveImportSymbols ();_bbeb !=nil {return _bbeb ;};};if _egefa ._dffg ==nil {_egefa ._dffg =append (_egefa ._dffg ,_egefa ._bgeg ...);
};return nil ;};func (_egef *PatternDictionary )computeSegmentDataStructure ()error {_egef .DataOffset =_egef ._cfbg .AbsolutePosition ();_egef .DataHeaderLength =_egef .DataOffset -_egef .DataHeaderOffset ;_egef .DataLength =int64 (_egef ._cfbg .AbsoluteLength ())-_egef .DataHeaderLength ;
return nil ;};func (_aede *TableSegment )HtLow ()int32 {return _aede ._fggd };func (_bffae *SymbolDictionary )setInSyms ()error {if _bffae .Header .RTSegments !=nil {return _bffae .retrieveImportSymbols ();};_bffae ._bgeg =make ([]*_ba .Bitmap ,0);return nil ;
};func (_aef *GenericRegion )GetRegionInfo ()*RegionSegment {return _aef .RegionSegment };func (_dgeec *TextRegion )getUserTable (_dbdb int )(_gee .Tabler ,error ){const _afee ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _agbd int ;
for _ ,_cedfa :=range _dgeec .Header .RTSegments {if _cedfa .Type ==53{if _agbd ==_dbdb {_fdedd ,_cdacc :=_cedfa .GetSegmentData ();if _cdacc !=nil {return nil ,_cdacc ;};_dacc ,_abdg :=_fdedd .(*TableSegment );if !_abdg {_def .Log .Debug (_da .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cedfa .SegmentNumber ));
return nil ,_bdd .Error (_afee ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _gee .NewEncodedTable (_dacc );};_agbd ++;};};return nil ,nil ;};func (_dbge *PageInformationSegment )encodeFlags (_aced _cc .BinaryWriter )(_dcgb error ){const _afbg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dcgb =_aced .SkipBits (1);
_dcgb !=nil {return _bdd .Wrap (_dcgb ,_afbg ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _gdgg int ;if _dbge .CombinationOperatorOverrideAllowed (){_gdgg =1;};if _dcgb =_aced .WriteBit (_gdgg );_dcgb !=nil {return _bdd .Wrap (_dcgb ,_afbg ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_gdgg =0;if _dbge ._efdc {_gdgg =1;};if _dcgb =_aced .WriteBit (_gdgg );_dcgb !=nil {return _bdd .Wrap (_dcgb ,_afbg ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _dcgb =_aced .WriteBit ((int (_dbge ._bdad )>>1)&0x01);
_dcgb !=nil {return _bdd .Wrap (_dcgb ,_afbg ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _dcgb =_aced .WriteBit (int (_dbge ._bdad )&0x01);
_dcgb !=nil {return _bdd .Wrap (_dcgb ,_afbg ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_gdgg =int (_dbge .DefaultPixelValue );
if _dcgb =_aced .WriteBit (_gdgg );_dcgb !=nil {return _bdd .Wrap (_dcgb ,_afbg ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_gdgg =0;if _dbge ._fae {_gdgg =1;
};if _dcgb =_aced .WriteBit (_gdgg );_dcgb !=nil {return _bdd .Wrap (_dcgb ,_afbg ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_gdgg =0;if _dbge .IsLossless {_gdgg =1;};if _dcgb =_aced .WriteBit (_gdgg );
_dcgb !=nil {return _bdd .Wrap (_dcgb ,_afbg ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_cgde *GenericRegion )writeGBAtPixels (_eebg _cc .BinaryWriter )(_bcag int ,_dccg error ){const _ecd ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _cgde .UseMMR {return 0,nil ;};_gaf :=1;if _cgde .GBTemplate ==0{_gaf =4;}else if _cgde .UseExtTemplates {_gaf =12;};if len (_cgde .GBAtX )!=_gaf {return 0,_bdd .Errorf (_ecd ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_cgde .GBAtY )!=_gaf {return 0,_bdd .Errorf (_ecd ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _abed :=0;_abed < _gaf ;_abed ++{if _dccg =_eebg .WriteByte (byte (_cgde .GBAtX [_abed ]));_dccg !=nil {return _bcag ,_bdd .Wrap (_dccg ,_ecd ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_bcag ++;if _dccg =_eebg .WriteByte (byte (_cgde .GBAtY [_abed ]));
_dccg !=nil {return _bcag ,_bdd .Wrap (_dccg ,_ecd ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_bcag ++;};return _bcag ,nil ;};type RegionSegment struct{_cbee *_cc .Reader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;
YLocation uint32 ;CombinaionOperator _ba .CombinationOperator ;};func (_fbb *GenericRefinementRegion )updateOverride ()error {if _fbb .GrAtX ==nil ||_fbb .GrAtY ==nil {return _fg .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_fbb .GrAtX )!=len (_fbb .GrAtY ){return _fg .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_fbb ._daf =make ([]bool ,len (_fbb .GrAtX ));switch _fbb .TemplateID {case 0:if _fbb .GrAtX [0]!=-1&&_fbb .GrAtY [0]!=-1{_fbb ._daf [0]=true ;
_fbb ._fga =true ;};if _fbb .GrAtX [1]!=-1&&_fbb .GrAtY [1]!=-1{_fbb ._daf [1]=true ;_fbb ._fga =true ;};case 1:_fbb ._fga =false ;};return nil ;};func NewGenericRegion (r *_cc .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_bfc :r };
};func (_dbbe *TextRegion )encodeFlags (_baeb _cc .BinaryWriter )(_fafg int ,_dbdg error ){const _affbe ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dbdg =_baeb .WriteBit (int (_dbbe .SbrTemplate ));_dbdg !=nil {return _fafg ,_bdd .Wrap (_dbdg ,_affbe ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};if _ ,_dbdg =_baeb .WriteBits (uint64 (_dbbe .SbDsOffset ),5);_dbdg !=nil {return _fafg ,_bdd .Wrap (_dbdg ,_affbe ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _dbdg =_baeb .WriteBit (int (_dbbe .DefaultPixel ));_dbdg !=nil {return _fafg ,_bdd .Wrap (_dbdg ,_affbe ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");
};if _ ,_dbdg =_baeb .WriteBits (uint64 (_dbbe .CombinationOperator ),2);_dbdg !=nil {return _fafg ,_bdd .Wrap (_dbdg ,_affbe ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _dbdg =_baeb .WriteBit (int (_dbbe .IsTransposed ));
_dbdg !=nil {return _fafg ,_bdd .Wrap (_dbdg ,_affbe ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_dbdg =_baeb .WriteBits (uint64 (_dbbe .ReferenceCorner ),2);_dbdg !=nil {return _fafg ,_bdd .Wrap (_dbdg ,_affbe ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");
};if _ ,_dbdg =_baeb .WriteBits (uint64 (_dbbe .LogSBStrips ),2);_dbdg !=nil {return _fafg ,_bdd .Wrap (_dbdg ,_affbe ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _fdgcd int ;if _dbbe .UseRefinement {_fdgcd =1;};if _dbdg =_baeb .WriteBit (_fdgcd );
_dbdg !=nil {return _fafg ,_bdd .Wrap (_dbdg ,_affbe ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_fdgcd =0;if _dbbe .IsHuffmanEncoded {_fdgcd =1;};if _dbdg =_baeb .WriteBit (_fdgcd );_dbdg !=nil {return _fafg ,_bdd .Wrap (_dbdg ,_affbe ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");
};_fafg =2;return _fafg ,nil ;};func (_ddgf *PageInformationSegment )checkInput ()error {if _ddgf .PageBMHeight ==_c .MaxInt32 {if !_ddgf .IsStripe {_def .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_ebfb *GenericRegion )decodeTemplate2 (_dbd ,_dedef ,_agef int ,_adac ,_gccb int )(_cbfb error ){const _gffb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_debb ,_eaa int ;_cbd ,_edg int ;
_aba byte ;_agg ,_cedf int ;);if _dbd >=1{_aba ,_cbfb =_ebfb .Bitmap .GetByte (_gccb );if _cbfb !=nil {return _bdd .Wrap (_cbfb ,_gffb ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_cbd =int (_aba );};if _dbd >=2{_aba ,_cbfb =_ebfb .Bitmap .GetByte (_gccb -_ebfb .Bitmap .RowStride );
if _cbfb !=nil {return _bdd .Wrap (_cbfb ,_gffb ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_edg =int (_aba )<<4;};_debb =(_cbd >>3&0x7c)|(_edg >>3&0x380);for _eea :=0;_eea < _agef ;_eea =_agg {var (_ccee byte ;
_eagd int ;);_agg =_eea +8;if _deeb :=_dedef -_eea ;_deeb > 8{_eagd =8;}else {_eagd =_deeb ;};if _dbd > 0{_cbd <<=8;if _agg < _dedef {_aba ,_cbfb =_ebfb .Bitmap .GetByte (_gccb +1);if _cbfb !=nil {return _bdd .Wrap (_cbfb ,_gffb ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_cbd |=int (_aba );};};if _dbd > 1{_edg <<=8;if _agg < _dedef {_aba ,_cbfb =_ebfb .Bitmap .GetByte (_gccb -_ebfb .Bitmap .RowStride +1);if _cbfb !=nil {return _bdd .Wrap (_cbfb ,_gffb ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_edg |=int (_aba )<<4;};};for _efge :=0;_efge < _eagd ;_efge ++{_fce :=uint (10-_efge );if _ebfb ._daagb {_eaa =_ebfb .overrideAtTemplate2 (_debb ,_eea +_efge ,_dbd ,int (_ccee ),_efge );_ebfb ._gcd .SetIndex (int32 (_eaa ));}else {_ebfb ._gcd .SetIndex (int32 (_debb ));
};_cedf ,_cbfb =_ebfb ._bgbg .DecodeBit (_ebfb ._gcd );if _cbfb !=nil {return _bdd .Wrap (_cbfb ,_gffb ,"");};_ccee |=byte (_cedf <<uint (7-_efge ));_debb =((_debb &0x1bd)<<1)|_cedf |((_cbd >>_fce )&0x4)|((_edg >>_fce )&0x80);};if _decb :=_ebfb .Bitmap .SetByte (_adac ,_ccee );
_decb !=nil {return _bdd .Wrap (_decb ,_gffb ,"");};_adac ++;_gccb ++;};return nil ;};func (_aeaf *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_aeaf .SdHuffAggInstanceSelection {_gaed ,_gdbf :=_gee .GetStandardTable (1);if _gdbf !=nil {return 0,_gdbf ;
};return _gaed .Decode (_aeaf ._baa );};if _aeaf ._afea ==nil {var (_fdgc int ;_cdba error ;);if _aeaf .SdHuffDecodeHeightSelection ==3{_fdgc ++;};if _aeaf .SdHuffDecodeWidthSelection ==3{_fdgc ++;};if _aeaf .SdHuffBMSizeSelection ==3{_fdgc ++;};_aeaf ._afea ,_cdba =_aeaf .getUserTable (_fdgc );
if _cdba !=nil {return 0,_cdba ;};};return _aeaf ._afea .Decode (_aeaf ._baa );};func (_cdbg *Header )readNumberOfReferredToSegments (_bbae *_cc .Reader )(uint64 ,error ){const _ggca ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_gdfg ,_eeaeb :=_bbae .ReadBits (3);if _eeaeb !=nil {return 0,_bdd .Wrap (_eeaeb ,_ggca ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_gdfg &=0xf;var _ddg []byte ;if _gdfg <=4{_ddg =make ([]byte ,5);for _bfbb :=0;_bfbb <=4;_bfbb ++{_dgbe ,_cede :=_bbae .ReadBit ();
if _cede !=nil {return 0,_bdd .Wrap (_cede ,_ggca ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ddg [_bfbb ]=byte (_dgbe );};}else {_gdfg ,_eeaeb =_bbae .ReadBits (29);if _eeaeb !=nil {return 0,_eeaeb ;};_gdfg &=_c .MaxInt32 ;
_efcd :=(_gdfg +8)>>3;_efcd <<=3;_ddg =make ([]byte ,_efcd );var _dadgf uint64 ;for _dadgf =0;_dadgf < _efcd ;_dadgf ++{_gga ,_afbe :=_bbae .ReadBit ();if _afbe !=nil {return 0,_bdd .Wrap (_afbe ,_ggca ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_ddg [_dadgf ]=byte (_gga );};};return _gdfg ,nil ;};func (_gcaaf *SymbolDictionary )parseHeader ()(_cdcc error ){_def .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _cdcc !=nil {_def .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_cdcc );
}else {_def .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _cdcc =_gcaaf .readRegionFlags ();_cdcc !=nil {return _cdcc ;};if _cdcc =_gcaaf .setAtPixels ();_cdcc !=nil {return _cdcc ;};if _cdcc =_gcaaf .setRefinementAtPixels ();_cdcc !=nil {return _cdcc ;};if _cdcc =_gcaaf .readNumberOfExportedSymbols ();
_cdcc !=nil {return _cdcc ;};if _cdcc =_gcaaf .readNumberOfNewSymbols ();_cdcc !=nil {return _cdcc ;};if _cdcc =_gcaaf .setInSyms ();_cdcc !=nil {return _cdcc ;};if _gcaaf ._gbabdg {_cdcd :=_gcaaf .Header .RTSegments ;for _ggfc :=len (_cdcd )-1;_ggfc >=0;
_ggfc --{if _cdcd [_ggfc ].Type ==0{_fgea ,_dcbd :=_cdcd [_ggfc ].SegmentData .(*SymbolDictionary );if !_dcbd {_cdcc =_da .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cdcd [_ggfc ]);
return _cdcc ;};if _fgea ._gbabdg {_gcaaf .setRetainedCodingContexts (_fgea );};break ;};};};if _cdcc =_gcaaf .checkInput ();_cdcc !=nil {return _cdcc ;};return nil ;};func (_age *GenericRegion )decodeLine (_bfae ,_efgf ,_bgbc int )error {const _gda ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_eaf :=_age .Bitmap .GetByteIndex (0,_bfae );_cdd :=_eaf -_age .Bitmap .RowStride ;switch _age .GBTemplate {case 0:if !_age .UseExtTemplates {return _age .decodeTemplate0a (_bfae ,_efgf ,_bgbc ,_eaf ,_cdd );};return _age .decodeTemplate0b (_bfae ,_efgf ,_bgbc ,_eaf ,_cdd );
case 1:return _age .decodeTemplate1 (_bfae ,_efgf ,_bgbc ,_eaf ,_cdd );case 2:return _age .decodeTemplate2 (_bfae ,_efgf ,_bgbc ,_eaf ,_cdd );case 3:return _age .decodeTemplate3 (_bfae ,_efgf ,_bgbc ,_eaf ,_cdd );};return _bdd .Errorf (_gda ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_age .GBTemplate );
};func (_fbf *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_gfea ,_ggfe :=_fbf ._bcfg .ReadBit ();if _ggfe !=nil {return _ggfe ;};if _gfea ==1{_fbf ._efdc =true ;};return nil ;};func (_bde *GenericRegion )setOverrideFlag (_gacc int ){_bde .GBAtOverride [_gacc ]=true ;
_bde ._daagb =true ;};func (_febf *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _febf ._gebg ==nil {var (_geebf int ;_gadb error ;);if _febf .SdHuffDecodeHeightSelection ==3{_geebf ++;};if _febf .SdHuffDecodeWidthSelection ==3{_geebf ++;};_febf ._gebg ,_gadb =_febf .getUserTable (_geebf );
if _gadb !=nil {return 0,_gadb ;};};return _febf ._gebg .Decode (_febf ._baa );};func (_deg *GenericRegion )Encode (w _cc .BinaryWriter )(_ecf int ,_fgc error ){const _dcb ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _deg .Bitmap ==nil {return 0,_bdd .Error (_dcb ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_adb ,_fgc :=_deg .RegionSegment .Encode (w );if _fgc !=nil {return 0,_bdd .Wrap (_fgc ,_dcb ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_ecf +=_adb ;if _fgc =w .SkipBits (4);_fgc !=nil {return _ecf ,_bdd .Wrap (_fgc ,_dcb ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _gae int ;if _deg .IsTPGDon {_gae =1;};if _fgc =w .WriteBit (_gae );
_fgc !=nil {return _ecf ,_bdd .Wrap (_fgc ,_dcb ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_gae =0;if _fgc =w .WriteBit (int (_deg .GBTemplate >>1)&0x01);_fgc !=nil {return _ecf ,_bdd .Wrap (_fgc ,_dcb ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _fgc =w .WriteBit (int (_deg .GBTemplate )&0x01);_fgc !=nil {return _ecf ,_bdd .Wrap (_fgc ,_dcb ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _deg .UseMMR {_gae =1;};if _fgc =w .WriteBit (_gae );
_fgc !=nil {return _ecf ,_bdd .Wrap (_fgc ,_dcb ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_ecf ++;if _adb ,_fgc =_deg .writeGBAtPixels (w );_fgc !=nil {return _ecf ,_bdd .Wrap (_fgc ,_dcb ,"");};_ecf +=_adb ;_bce :=_dg .New ();
if _fgc =_bce .EncodeBitmap (_deg .Bitmap ,_deg .IsTPGDon );_fgc !=nil {return _ecf ,_bdd .Wrap (_fgc ,_dcb ,"");};_bce .Final ();var _gcc int64 ;if _gcc ,_fgc =_bce .WriteTo (w );_fgc !=nil {return _ecf ,_bdd .Wrap (_fgc ,_dcb ,"");};_ecf +=int (_gcc );
return _ecf ,nil ;};func (_dgee *TextRegion )GetRegionBitmap ()(*_ba .Bitmap ,error ){if _dgee .RegionBitmap !=nil {return _dgee .RegionBitmap ,nil ;};if !_dgee .IsHuffmanEncoded {if _cdddc :=_dgee .setCodingStatistics ();_cdddc !=nil {return nil ,_cdddc ;
};};if _ddea :=_dgee .createRegionBitmap ();_ddea !=nil {return nil ,_ddea ;};if _afeb :=_dgee .decodeSymbolInstances ();_afeb !=nil {return nil ,_afeb ;};return _dgee .RegionBitmap ,nil ;};func (_dag *SymbolDictionary )encodeFlags (_ceeed _cc .BinaryWriter )(_fbdb int ,_gbfc error ){const _gdbed ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _gbfc =_ceeed .SkipBits (3);_gbfc !=nil {return 0,_bdd .Wrap (_gbfc ,_gdbed ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _adec int ;if _dag .SdrTemplate > 0{_adec =1;};if _gbfc =_ceeed .WriteBit (_adec );_gbfc !=nil {return _fbdb ,_bdd .Wrap (_gbfc ,_gdbed ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_adec =0;if _dag .SdTemplate > 1{_adec =1;};if _gbfc =_ceeed .WriteBit (_adec );_gbfc !=nil {return _fbdb ,_bdd .Wrap (_gbfc ,_gdbed ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_adec =0;if _dag .SdTemplate ==1||_dag .SdTemplate ==3{_adec =1;
};if _gbfc =_ceeed .WriteBit (_adec );_gbfc !=nil {return _fbdb ,_bdd .Wrap (_gbfc ,_gdbed ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_adec =0;if _dag ._badg {_adec =1;};if _gbfc =_ceeed .WriteBit (_adec );_gbfc !=nil {return _fbdb ,_bdd .Wrap (_gbfc ,_gdbed ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_adec =0;if _dag ._gbabdg {_adec =1;};if _gbfc =_ceeed .WriteBit (_adec );_gbfc !=nil {return _fbdb ,_bdd .Wrap (_gbfc ,_gdbed ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_adec =0;if _dag .SdHuffAggInstanceSelection {_adec =1;
};if _gbfc =_ceeed .WriteBit (_adec );_gbfc !=nil {return _fbdb ,_bdd .Wrap (_gbfc ,_gdbed ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_adec =int (_dag .SdHuffBMSizeSelection );if _gbfc =_ceeed .WriteBit (_adec );
_gbfc !=nil {return _fbdb ,_bdd .Wrap (_gbfc ,_gdbed ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_adec =0;if _dag .SdHuffDecodeWidthSelection > 1{_adec =1;};if _gbfc =_ceeed .WriteBit (_adec );_gbfc !=nil {return _fbdb ,_bdd .Wrap (_gbfc ,_gdbed ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_adec =0;switch _dag .SdHuffDecodeWidthSelection {case 1,3:_adec =1;};if _gbfc =_ceeed .WriteBit (_adec );_gbfc !=nil {return _fbdb ,_bdd .Wrap (_gbfc ,_gdbed ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_adec =0;if _dag .SdHuffDecodeHeightSelection > 1{_adec =1;
};if _gbfc =_ceeed .WriteBit (_adec );_gbfc !=nil {return _fbdb ,_bdd .Wrap (_gbfc ,_gdbed ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_adec =0;switch _dag .SdHuffDecodeHeightSelection {case 1,3:_adec =1;};if _gbfc =_ceeed .WriteBit (_adec );
_gbfc !=nil {return _fbdb ,_bdd .Wrap (_gbfc ,_gdbed ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_adec =0;if _dag .UseRefinementAggregation {_adec =1;};if _gbfc =_ceeed .WriteBit (_adec );_gbfc !=nil {return _fbdb ,_bdd .Wrap (_gbfc ,_gdbed ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_adec =0;if _dag .IsHuffmanEncoded {_adec =1;};if _gbfc =_ceeed .WriteBit (_adec );_gbfc !=nil {return _fbdb ,_bdd .Wrap (_gbfc ,_gdbed ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};type Type int ;func (_dgbc *TextRegion )readUseRefinement ()error {if !_dgbc .UseRefinement ||_dgbc .SbrTemplate !=0{return nil ;
};var (_cbag byte ;_cded error ;);_dgbc .SbrATX =make ([]int8 ,2);_dgbc .SbrATY =make ([]int8 ,2);_cbag ,_cded =_dgbc ._efcfe .ReadByte ();if _cded !=nil {return _cded ;};_dgbc .SbrATX [0]=int8 (_cbag );_cbag ,_cded =_dgbc ._efcfe .ReadByte ();if _cded !=nil {return _cded ;
};_dgbc .SbrATY [0]=int8 (_cbag );_cbag ,_cded =_dgbc ._efcfe .ReadByte ();if _cded !=nil {return _cded ;};_dgbc .SbrATX [1]=int8 (_cbag );_cbag ,_cded =_dgbc ._efcfe .ReadByte ();if _cded !=nil {return _cded ;};_dgbc .SbrATY [1]=int8 (_cbag );return nil ;
};func (_aebg *GenericRegion )getPixel (_edda ,_caae int )int8 {if _edda < 0||_edda >=_aebg .Bitmap .Width {return 0;};if _caae < 0||_caae >=_aebg .Bitmap .Height {return 0;};if _aebg .Bitmap .GetPixel (_edda ,_caae ){return 1;};return 0;};type Segmenter interface{Init (_adfc *Header ,_gdgc *_cc .Reader )error ;
};func (_gcbe *SymbolDictionary )readRegionFlags ()error {var (_adfa uint64 ;_bcae int ;);_ ,_adbd :=_gcbe ._baa .ReadBits (3);if _adbd !=nil {return _adbd ;};_bcae ,_adbd =_gcbe ._baa .ReadBit ();if _adbd !=nil {return _adbd ;};_gcbe .SdrTemplate =int8 (_bcae );
_adfa ,_adbd =_gcbe ._baa .ReadBits (2);if _adbd !=nil {return _adbd ;};_gcbe .SdTemplate =int8 (_adfa &0xf);_bcae ,_adbd =_gcbe ._baa .ReadBit ();if _adbd !=nil {return _adbd ;};if _bcae ==1{_gcbe ._badg =true ;};_bcae ,_adbd =_gcbe ._baa .ReadBit ();
if _adbd !=nil {return _adbd ;};if _bcae ==1{_gcbe ._gbabdg =true ;};_bcae ,_adbd =_gcbe ._baa .ReadBit ();if _adbd !=nil {return _adbd ;};if _bcae ==1{_gcbe .SdHuffAggInstanceSelection =true ;};_bcae ,_adbd =_gcbe ._baa .ReadBit ();if _adbd !=nil {return _adbd ;
};_gcbe .SdHuffBMSizeSelection =int8 (_bcae );_adfa ,_adbd =_gcbe ._baa .ReadBits (2);if _adbd !=nil {return _adbd ;};_gcbe .SdHuffDecodeWidthSelection =int8 (_adfa &0xf);_adfa ,_adbd =_gcbe ._baa .ReadBits (2);if _adbd !=nil {return _adbd ;};_gcbe .SdHuffDecodeHeightSelection =int8 (_adfa &0xf);
_bcae ,_adbd =_gcbe ._baa .ReadBit ();if _adbd !=nil {return _adbd ;};if _bcae ==1{_gcbe .UseRefinementAggregation =true ;};_bcae ,_adbd =_gcbe ._baa .ReadBit ();if _adbd !=nil {return _adbd ;};if _bcae ==1{_gcbe .IsHuffmanEncoded =true ;};return nil ;
};func (_fge *GenericRefinementRegion )parseHeader ()(_efe error ){_def .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_bfe :=_b .Now ();defer func (){if _efe ==nil {_def .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_b .Since (_bfe ).Nanoseconds ());
}else {_def .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_efe );
};}();if _efe =_fge .RegionInfo .parseHeader ();_efe !=nil {return _efe ;};_ ,_efe =_fge ._geb .ReadBits (6);if _efe !=nil {return _efe ;};_fge .IsTPGROn ,_efe =_fge ._geb .ReadBool ();if _efe !=nil {return _efe ;};var _caa int ;_caa ,_efe =_fge ._geb .ReadBit ();
if _efe !=nil {return _efe ;};_fge .TemplateID =int8 (_caa );switch _fge .TemplateID {case 0:_fge .Template =_fge ._dee ;if _efe =_fge .readAtPixels ();_efe !=nil {return _efe ;};case 1:_fge .Template =_fge ._gg ;};return nil ;};func (_cgeg *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _eeee ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _cgeg .SbHuffRSize ==0{_fgfc ,_fdeea :=_gee .GetStandardTable (1);if _fdeea !=nil {return 0,_bdd .Wrap (_fdeea ,_eeee ,"");};return _fgfc .Decode (_cgeg ._efcfe );};if _cgeg ._dage ==nil {var (_ccda int ;_bfea error ;);if _cgeg .SbHuffFS ==3{_ccda ++;
};if _cgeg .SbHuffDS ==3{_ccda ++;};if _cgeg .SbHuffDT ==3{_ccda ++;};if _cgeg .SbHuffRDWidth ==3{_ccda ++;};if _cgeg .SbHuffRDHeight ==3{_ccda ++;};if _cgeg .SbHuffRDX ==3{_ccda ++;};if _cgeg .SbHuffRDY ==3{_ccda ++;};_cgeg ._dage ,_bfea =_cgeg .getUserTable (_ccda );
if _bfea !=nil {return 0,_bdd .Wrap (_bfea ,_eeee ,"");};};_ccfc ,_bgfg :=_cgeg ._dage .Decode (_cgeg ._efcfe );if _bgfg !=nil {return 0,_bdd .Wrap (_bgfg ,_eeee ,"");};return _ccfc ,nil ;};func (_eeae *GenericRegion )overrideAtTemplate2 (_dddf ,_eage ,_fcffc ,_ecfe ,_fdbf int )int {_dddf &=0x3FB;
if _eeae .GBAtY [0]==0&&_eeae .GBAtX [0]>=-int8 (_fdbf ){_dddf |=(_ecfe >>uint (7-(int8 (_fdbf )+_eeae .GBAtX [0]))&0x1)<<2;}else {_dddf |=int (_eeae .getPixel (_eage +int (_eeae .GBAtX [0]),_fcffc +int (_eeae .GBAtY [0])))<<2;};return _dddf ;};type SegmentEncoder interface{Encode (_dgge _cc .BinaryWriter )(_eaae int ,_cbbee error );
};func (_gedc *PageInformationSegment )String ()string {_fadf :=&_de .Builder {};_fadf .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_fadf .WriteString (_da .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_gedc .PageBMHeight ));_fadf .WriteString (_da .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_gedc .PageBMWidth ));
_fadf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_gedc .ResolutionX ));_fadf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_gedc .ResolutionY ));
_fadf .WriteString (_da .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_gedc ._bdad ));_fadf .WriteString (_da .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_gedc ._eff ));
_fadf .WriteString (_da .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_gedc .IsLossless ));_fadf .WriteString (_da .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gedc ._efdc ));
_fadf .WriteString (_da .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_gedc ._fae ));_fadf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_gedc .IsStripe ));
_fadf .WriteString (_da .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_gedc .MaxStripeSize ));return _fadf .String ();};func (_bacg *PageInformationSegment )readResolution ()error {_ddc ,_dcce :=_bacg ._bcfg .ReadBits (32);
if _dcce !=nil {return _dcce ;};_bacg .ResolutionX =int (_ddc &_c .MaxInt32 );_ddc ,_dcce =_bacg ._bcfg .ReadBits (32);if _dcce !=nil {return _dcce ;};_bacg .ResolutionY =int (_ddc &_c .MaxInt32 );return nil ;};func (_fade *SymbolDictionary )decodeRefinedSymbol (_gdef ,_fdcc uint32 )error {var (_becb int ;
_dddge ,_ccgg int32 ;);if _fade .IsHuffmanEncoded {_adbc ,_ceccb :=_fade ._baa .ReadBits (byte (_fade ._acfd ));if _ceccb !=nil {return _ceccb ;};_becb =int (_adbc );_ddcg ,_ceccb :=_gee .GetStandardTable (15);if _ceccb !=nil {return _ceccb ;};_dbb ,_ceccb :=_ddcg .Decode (_fade ._baa );
if _ceccb !=nil {return _ceccb ;};_dddge =int32 (_dbb );_dbb ,_ceccb =_ddcg .Decode (_fade ._baa );if _ceccb !=nil {return _ceccb ;};_ccgg =int32 (_dbb );_ddcg ,_ceccb =_gee .GetStandardTable (1);if _ceccb !=nil {return _ceccb ;};if _ ,_ceccb =_ddcg .Decode (_fade ._baa );
_ceccb !=nil {return _ceccb ;};_fade ._baa .Align ();}else {_cfbe ,_cdac :=_fade ._gebb .DecodeIAID (uint64 (_fade ._acfd ),_fade ._cace );if _cdac !=nil {return _cdac ;};_becb =int (_cfbe );_dddge ,_cdac =_fade ._gebb .DecodeInt (_fade ._bgcb );if _cdac !=nil {return _cdac ;
};_ccgg ,_cdac =_fade ._gebb .DecodeInt (_fade ._egfg );if _cdac !=nil {return _cdac ;};};if _ebab :=_fade .setSymbolsArray ();_ebab !=nil {return _ebab ;};_abcg :=_fade ._dffg [_becb ];if _eedbd :=_fade .decodeNewSymbols (_gdef ,_fdcc ,_abcg ,_dddge ,_ccgg );
_eedbd !=nil {return _eedbd ;};if _fade .IsHuffmanEncoded {_fade ._baa .Align ();};return nil ;};func (_cddd *Header )writeSegmentNumber (_gecb _cc .BinaryWriter )(_gbff int ,_gcac error ){_gffa :=make ([]byte ,4);_f .BigEndian .PutUint32 (_gffa ,_cddd .SegmentNumber );
if _gbff ,_gcac =_gecb .Write (_gffa );_gcac !=nil {return 0,_bdd .Wrap (_gcac ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _gbff ,nil ;};func (_egdd *GenericRefinementRegion )getPixel (_adg *_ba .Bitmap ,_beg ,_gba int )int {if _beg < 0||_beg >=_adg .Width {return 0;
};if _gba < 0||_gba >=_adg .Height {return 0;};if _adg .GetPixel (_beg ,_gba ){return 1;};return 0;};func (_gbcbd *TableSegment )StreamReader ()*_cc .Reader {return _gbcbd ._dccb };func (_cfac *SymbolDictionary )decodeDirectlyThroughGenericRegion (_fadc ,_fabe uint32 )error {if _cfac ._gcgg ==nil {_cfac ._gcgg =NewGenericRegion (_cfac ._baa );
};_cfac ._gcgg .setParametersWithAt (false ,byte (_cfac .SdTemplate ),false ,false ,_cfac .SdATX ,_cfac .SdATY ,_fadc ,_fabe ,_cfac ._ffad ,_cfac ._gebb );return _cfac .addSymbol (_cfac ._gcgg );};func (_ega *GenericRegion )decodeTemplate1 (_eaea ,_eafe ,_dede int ,_gdec ,_facf int )(_fedg error ){const _abcb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_badb ,_aga int ;_agda ,_ada int ;_eedc byte ;_aaa ,_gbdc int ;);if _eaea >=1{_eedc ,_fedg =_ega .Bitmap .GetByte (_facf );if _fedg !=nil {return _bdd .Wrap (_fedg ,_abcb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_agda =int (_eedc );};if _eaea >=2{_eedc ,_fedg =_ega .Bitmap .GetByte (_facf -_ega .Bitmap .RowStride );
if _fedg !=nil {return _bdd .Wrap (_fedg ,_abcb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ada =int (_eedc )<<5;};_badb =((_agda >>1)&0x1f8)|((_ada >>1)&0x1e00);for _ccce :=0;_ccce < _dede ;_ccce =_aaa {var (_bcdc byte ;_eeba int ;);_aaa =_ccce +8;
if _egbdg :=_eafe -_ccce ;_egbdg > 8{_eeba =8;}else {_eeba =_egbdg ;};if _eaea > 0{_agda <<=8;if _aaa < _eafe {_eedc ,_fedg =_ega .Bitmap .GetByte (_facf +1);if _fedg !=nil {return _bdd .Wrap (_fedg ,_abcb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");
};_agda |=int (_eedc );};};if _eaea > 1{_ada <<=8;if _aaa < _eafe {_eedc ,_fedg =_ega .Bitmap .GetByte (_facf -_ega .Bitmap .RowStride +1);if _fedg !=nil {return _bdd .Wrap (_fedg ,_abcb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ada |=int (_eedc )<<5;
};};for _bcdb :=0;_bcdb < _eeba ;_bcdb ++{if _ega ._daagb {_aga =_ega .overrideAtTemplate1 (_badb ,_ccce +_bcdb ,_eaea ,int (_bcdc ),_bcdb );_ega ._gcd .SetIndex (int32 (_aga ));}else {_ega ._gcd .SetIndex (int32 (_badb ));};_gbdc ,_fedg =_ega ._bgbg .DecodeBit (_ega ._gcd );
if _fedg !=nil {return _bdd .Wrap (_fedg ,_abcb ,"");};_bcdc |=byte (_gbdc )<<uint (7-_bcdb );_bba :=uint (8-_bcdb );_badb =((_badb &0xefb)<<1)|_gbdc |((_agda >>_bba )&0x8)|((_ada >>_bba )&0x200);};if _aeba :=_ega .Bitmap .SetByte (_gdec ,_bcdc );_aeba !=nil {return _bdd .Wrap (_aeba ,_abcb ,"");
};_gdec ++;_facf ++;};return nil ;};func (_babg *PatternDictionary )readPatternWidthAndHeight ()error {_fbgb ,_ecgb :=_babg ._cfbg .ReadByte ();if _ecgb !=nil {return _ecgb ;};_babg .HdpWidth =_fbgb ;_fbgb ,_ecgb =_babg ._cfbg .ReadByte ();if _ecgb !=nil {return _ecgb ;
};_babg .HdpHeight =_fbgb ;return nil ;};func (_gggg *SymbolDictionary )encodeATFlags (_bafd _cc .BinaryWriter )(_efeb int ,_cge error ){const _bgcbd ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _gggg .IsHuffmanEncoded ||_gggg .SdTemplate !=0{return 0,nil ;
};_gcaa :=4;if _gggg .SdTemplate !=0{_gcaa =1;};for _gcba :=0;_gcba < _gcaa ;_gcba ++{if _cge =_bafd .WriteByte (byte (_gggg .SdATX [_gcba ]));_cge !=nil {return _efeb ,_bdd .Wrapf (_cge ,_bgcbd ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_gcba );};
_efeb ++;if _cge =_bafd .WriteByte (byte (_gggg .SdATY [_gcba ]));_cge !=nil {return _efeb ,_bdd .Wrapf (_cge ,_bgcbd ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_gcba );};_efeb ++;};return _efeb ,nil ;};func (_fbgg *TextRegion )readAmountOfSymbolInstances ()error {_fbaef ,_deea :=_fbgg ._efcfe .ReadBits (32);
if _deea !=nil {return _deea ;};_fbgg .NumberOfSymbolInstances =uint32 (_fbaef &_c .MaxUint32 );_edea :=_fbgg .RegionInfo .BitmapWidth *_fbgg .RegionInfo .BitmapHeight ;if _edea < _fbgg .NumberOfSymbolInstances {_def .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_edea ,_fbgg .NumberOfSymbolInstances );
_fbgg .NumberOfSymbolInstances =_edea ;};return nil ;};func (_gde *GenericRefinementRegion )Init (header *Header ,r *_cc .Reader )error {_gde ._bgb =header ;_gde ._geb =r ;_gde .RegionInfo =NewRegionSegment (r );return _gde .parseHeader ();};func (_ggf *Header )readSegmentPageAssociation (_ddab Documenter ,_gfef *_cc .Reader ,_eefb uint64 ,_dab ...int )(_gbgg error ){const _dcfg ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_ggf .PageAssociationFieldSize {_afbb ,_beceb :=_gfef .ReadBits (8);if _beceb !=nil {return _bdd .Wrap (_beceb ,_dcfg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ggf .PageAssociation =int (_afbb &0xFF);}else {_dff ,_ccfe :=_gfef .ReadBits (32);
if _ccfe !=nil {return _bdd .Wrap (_ccfe ,_dcfg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ggf .PageAssociation =int (_dff &_c .MaxInt32 );};if _eefb ==0{return nil ;};if _ggf .PageAssociation !=0{_fgbfa ,_dcgc :=_ddab .GetPage (_ggf .PageAssociation );
if _dcgc !=nil {return _bdd .Wrap (_dcgc ,_dcfg ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _fcgdc int ;for _cbbe :=uint64 (0);_cbbe < _eefb ;_cbbe ++{_fcgdc =_dab [_cbbe ];
_ggf .RTSegments [_cbbe ],_dcgc =_fgbfa .GetSegment (_fcgdc );if _dcgc !=nil {var _bdae error ;_ggf .RTSegments [_cbbe ],_bdae =_ddab .GetGlobalSegment (_fcgdc );if _bdae !=nil {return _bdd .Wrapf (_dcgc ,_dcfg ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_ggf .PageAssociation );
};};};return nil ;};for _ebc :=uint64 (0);_ebc < _eefb ;_ebc ++{_ggf .RTSegments [_ebc ],_gbgg =_ddab .GetGlobalSegment (_dab [_ebc ]);if _gbgg !=nil {return _bdd .Wrapf (_gbgg ,_dcfg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_dab [_ebc ]);
};};return nil ;};func (_gfde *GenericRegion )decodeTemplate3 (_dea ,_cceb ,_fgf int ,_cfg ,_fba int )(_af error ){const _gfgf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_defg ,_gecg int ;_afc int ;_fgbf byte ;
_efdd ,_agac int ;);if _dea >=1{_fgbf ,_af =_gfde .Bitmap .GetByte (_fba );if _af !=nil {return _bdd .Wrap (_af ,_gfgf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_afc =int (_fgbf );};_defg =(_afc >>1)&0x70;for _afb :=0;_afb < _fgf ;_afb =_efdd {var (_afa byte ;
_geba int ;);_efdd =_afb +8;if _fdag :=_cceb -_afb ;_fdag > 8{_geba =8;}else {_geba =_fdag ;};if _dea >=1{_afc <<=8;if _efdd < _cceb {_fgbf ,_af =_gfde .Bitmap .GetByte (_fba +1);if _af !=nil {return _bdd .Wrap (_af ,_gfgf ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_afc |=int (_fgbf );};};for _aag :=0;_aag < _geba ;_aag ++{if _gfde ._daagb {_gecg =_gfde .overrideAtTemplate3 (_defg ,_afb +_aag ,_dea ,int (_afa ),_aag );_gfde ._gcd .SetIndex (int32 (_gecg ));}else {_gfde ._gcd .SetIndex (int32 (_defg ));};_agac ,_af =_gfde ._bgbg .DecodeBit (_gfde ._gcd );
if _af !=nil {return _bdd .Wrap (_af ,_gfgf ,"");};_afa |=byte (_agac )<<byte (7-_aag );_defg =((_defg &0x1f7)<<1)|_agac |((_afc >>uint (8-_aag ))&0x010);};if _cbge :=_gfde .Bitmap .SetByte (_cfg ,_afa );_cbge !=nil {return _bdd .Wrap (_cbge ,_gfgf ,"");
};_cfg ++;_fba ++;};return nil ;};type templater interface{form (_gbg ,_efg ,_bgcc ,_ffb ,_ag int16 )int16 ;setIndex (_agd *_ded .DecoderStats );};func (_fcfg *GenericRegion )decodeTemplate0b (_dec ,_fgaff ,_dga int ,_bgad ,_dbfd int )(_daca error ){const _cecc ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_aee ,_abe int ;_ggg ,_gbgd int ;_abgb byte ;_dbfg int ;);if _dec >=1{_abgb ,_daca =_fcfg .Bitmap .GetByte (_dbfd );if _daca !=nil {return _bdd .Wrap (_daca ,_cecc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ggg =int (_abgb );};if _dec >=2{_abgb ,_daca =_fcfg .Bitmap .GetByte (_dbfd -_fcfg .Bitmap .RowStride );
if _daca !=nil {return _bdd .Wrap (_daca ,_cecc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gbgd =int (_abgb )<<6;};_aee =(_ggg &0xf0)|(_gbgd &0x3800);for _dfbf :=0;_dfbf < _dga ;_dfbf =_dbfg {var (_ebfd byte ;_fcff int ;);_dbfg =_dfbf +8;if _egbd :=_fgaff -_dfbf ;
_egbd > 8{_fcff =8;}else {_fcff =_egbd ;};if _dec > 0{_ggg <<=8;if _dbfg < _fgaff {_abgb ,_daca =_fcfg .Bitmap .GetByte (_dbfd +1);if _daca !=nil {return _bdd .Wrap (_daca ,_cecc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ggg |=int (_abgb );
};};if _dec > 1{_gbgd <<=8;if _dbfg < _fgaff {_abgb ,_daca =_fcfg .Bitmap .GetByte (_dbfd -_fcfg .Bitmap .RowStride +1);if _daca !=nil {return _bdd .Wrap (_daca ,_cecc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gbgd |=int (_abgb )<<6;};};for _fgcg :=0;
_fgcg < _fcff ;_fgcg ++{_agb :=uint (7-_fgcg );if _fcfg ._daagb {_abe =_fcfg .overrideAtTemplate0b (_aee ,_dfbf +_fgcg ,_dec ,int (_ebfd ),_fgcg ,int (_agb ));_fcfg ._gcd .SetIndex (int32 (_abe ));}else {_fcfg ._gcd .SetIndex (int32 (_aee ));};var _bfad int ;
_bfad ,_daca =_fcfg ._bgbg .DecodeBit (_fcfg ._gcd );if _daca !=nil {return _bdd .Wrap (_daca ,_cecc ,"");};_ebfd |=byte (_bfad <<_agb );_aee =((_aee &0x7bf7)<<1)|_bfad |((_ggg >>_agb )&0x10)|((_gbgd >>_agb )&0x800);};if _ddd :=_fcfg .Bitmap .SetByte (_bgad ,_ebfd );
_ddd !=nil {return _bdd .Wrap (_ddd ,_cecc ,"");};_bgad ++;_dbfd ++;};return nil ;};func (_dfacd *SymbolDictionary )String ()string {_degc :=&_de .Builder {};_degc .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");
_degc .WriteString (_da .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_dfacd .SdrTemplate ));_degc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_dfacd .SdTemplate ));
_degc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_dfacd ._badg ));_degc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_dfacd ._gbabdg ));
_degc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dfacd .SdHuffAggInstanceSelection ));
_degc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_dfacd .SdHuffBMSizeSelection ));_degc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dfacd .SdHuffDecodeWidthSelection ));
_degc .WriteString (_da .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dfacd .SdHuffDecodeHeightSelection ));_degc .WriteString (_da .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dfacd .UseRefinementAggregation ));
_degc .WriteString (_da .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_dfacd .IsHuffmanEncoded ));_degc .WriteString (_da .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dfacd .SdATX ));
_degc .WriteString (_da .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dfacd .SdATY ));_degc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dfacd .SdrATX ));
_degc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dfacd .SdrATY ));_degc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dfacd .NumberOfExportedSymbols ));
_degc .WriteString (_da .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_dfacd .NumberOfNewSymbols ));_degc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dfacd ._fdee ));
_degc .WriteString (_da .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_dfacd ._aadc ));return _degc .String ();};func (_fccb *PatternDictionary )readTemplate ()error {_defgb ,_adgeaf :=_fccb ._cfbg .ReadBits (2);
if _adgeaf !=nil {return _adgeaf ;};_fccb .HDTemplate =byte (_defgb );return nil ;};func (_dbfa *Header )parse (_aegf Documenter ,_abbg *_cc .Reader ,_fdbc int64 ,_fbeb OrganizationType )(_deec error ){const _babbg ="\u0070\u0061\u0072s\u0065";_def .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _deec !=nil {_def .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_deec );}else {_def .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_deec =_abbg .Seek (_fdbc ,_d .SeekStart );if _deec !=nil {return _bdd .Wrap (_deec ,_babbg ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _deec =_dbfa .readSegmentNumber (_abbg );_deec !=nil {return _bdd .Wrap (_deec ,_babbg ,"");
};if _deec =_dbfa .readHeaderFlags ();_deec !=nil {return _bdd .Wrap (_deec ,_babbg ,"");};var _dbfag uint64 ;_dbfag ,_deec =_dbfa .readNumberOfReferredToSegments (_abbg );if _deec !=nil {return _bdd .Wrap (_deec ,_babbg ,"");};_dbfa .RTSNumbers ,_deec =_dbfa .readReferredToSegmentNumbers (_abbg ,int (_dbfag ));
if _deec !=nil {return _bdd .Wrap (_deec ,_babbg ,"");};_deec =_dbfa .readSegmentPageAssociation (_aegf ,_abbg ,_dbfag ,_dbfa .RTSNumbers ...);if _deec !=nil {return _bdd .Wrap (_deec ,_babbg ,"");};if _dbfa .Type !=TEndOfFile {if _deec =_dbfa .readSegmentDataLength (_abbg );
_deec !=nil {return _bdd .Wrap (_deec ,_babbg ,"");};};_dbfa .readDataStartOffset (_abbg ,_fbeb );_dbfa .readHeaderLength (_abbg ,_fdbc );_def .Log .Trace ("\u0025\u0073",_dbfa );return nil ;};func (_caec *RegionSegment )String ()string {_ebd :=&_de .Builder {};
_ebd .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_ebd .WriteString (_da .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_caec .BitmapWidth ,_caec .BitmapHeight ));
_ebd .WriteString (_da .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_caec .XLocation ,_caec .YLocation ));_ebd .WriteString (_da .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_caec .CombinaionOperator ));
return _ebd .String ();};func (_aca *Header )referenceSize ()uint {switch {case _aca .SegmentNumber <=255:return 1;case _aca .SegmentNumber <=65535:return 2;default:return 4;};};func (_ab *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_bb ,_eeb ,_bdb ,_deef ,_ae ,_fe ,_gdg ,_egcf ,_eec int )error {var (_cec ,_dba ,_egf ,_cg ,_cece ,_ced int ;
_fdc byte ;_ad error ;);if _bb > 0{_fdc ,_ad =_ab .RegionBitmap .GetByte (_gdg -_bdb );if _ad !=nil {return _ad ;};_egf =int (_fdc );};if _egcf > 0&&_egcf <=_ab .ReferenceBitmap .Height {_fdc ,_ad =_ab .ReferenceBitmap .GetByte (_eec -_deef +_fe );if _ad !=nil {return _ad ;
};_cg =int (_fdc )<<4;};if _egcf >=0&&_egcf < _ab .ReferenceBitmap .Height {_fdc ,_ad =_ab .ReferenceBitmap .GetByte (_eec +_fe );if _ad !=nil {return _ad ;};_cece =int (_fdc )<<1;};if _egcf > -2&&_egcf < _ab .ReferenceBitmap .Height -1{_fdc ,_ad =_ab .ReferenceBitmap .GetByte (_eec +_deef +_fe );
if _ad !=nil {return _ad ;};_ced =int (_fdc );};_cec =((_egf >>5)&0x6)|((_ced >>2)&0x30)|(_cece &0x180)|(_cg &0xc00);var _cbf int ;for _gcg :=0;_gcg < _ae ;_gcg =_cbf {var _cd int ;_cbf =_gcg +8;var _efd int ;if _efd =_eeb -_gcg ;_efd > 8{_efd =8;};_defc :=_cbf < _eeb ;
_cac :=_cbf < _ab .ReferenceBitmap .Width ;_ffc :=_fe +1;if _bb > 0{_fdc =0;if _defc {_fdc ,_ad =_ab .RegionBitmap .GetByte (_gdg -_bdb +1);if _ad !=nil {return _ad ;};};_egf =(_egf <<8)|int (_fdc );};if _egcf > 0&&_egcf <=_ab .ReferenceBitmap .Height {var _bge int ;
if _cac {_fdc ,_ad =_ab .ReferenceBitmap .GetByte (_eec -_deef +_ffc );if _ad !=nil {return _ad ;};_bge =int (_fdc )<<4;};_cg =(_cg <<8)|_bge ;};if _egcf >=0&&_egcf < _ab .ReferenceBitmap .Height {var _aeb int ;if _cac {_fdc ,_ad =_ab .ReferenceBitmap .GetByte (_eec +_ffc );
if _ad !=nil {return _ad ;};_aeb =int (_fdc )<<1;};_cece =(_cece <<8)|_aeb ;};if _egcf > -2&&_egcf < (_ab .ReferenceBitmap .Height -1){_fdc =0;if _cac {_fdc ,_ad =_ab .ReferenceBitmap .GetByte (_eec +_deef +_ffc );if _ad !=nil {return _ad ;};};_ced =(_ced <<8)|int (_fdc );
};for _dfg :=0;_dfg < _efd ;_dfg ++{var _cbg int ;_bbd :=false ;_ea :=(_cec >>4)&0x1ff;if _ea ==0x1ff{_bbd =true ;_cbg =1;}else if _ea ==0x00{_bbd =true ;};if !_bbd {if _ab ._fga {_dba =_ab .overrideAtTemplate0 (_cec ,_gcg +_dfg ,_bb ,_cd ,_dfg );_ab ._ff .SetIndex (int32 (_dba ));
}else {_ab ._ff .SetIndex (int32 (_cec ));};_cbg ,_ad =_ab ._ca .DecodeBit (_ab ._ff );if _ad !=nil {return _ad ;};};_gbc :=uint (7-_dfg );_cd |=_cbg <<_gbc ;_cec =((_cec &0xdb6)<<1)|_cbg |(_egf >>_gbc +5)&0x002|((_ced >>_gbc +2)&0x010)|((_cece >>_gbc )&0x080)|((_cg >>_gbc )&0x400);
};_ad =_ab .RegionBitmap .SetByte (_gdg ,byte (_cd ));if _ad !=nil {return _ad ;};_gdg ++;_eec ++;};return nil ;};func (_baeg *PageInformationSegment )encodeStripingInformation (_eaeb _cc .BinaryWriter )(_eafa int ,_bcec error ){const _dgdf ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_baeg .IsStripe {if _eafa ,_bcec =_eaeb .Write ([]byte {0x00,0x00});_bcec !=nil {return 0,_bdd .Wrap (_bcec ,_dgdf ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _eafa ,nil ;};_dgecd :=make ([]byte ,2);_f .BigEndian .PutUint16 (_dgecd ,_baeg .MaxStripeSize |1<<15);
if _eafa ,_bcec =_eaeb .Write (_dgecd );_bcec !=nil {return 0,_bdd .Wrapf (_bcec ,_dgdf ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_baeg .MaxStripeSize );};return _eafa ,nil ;};func (_agdc *SymbolDictionary )decodeThroughTextRegion (_dgde ,_adee ,_acee uint32 )error {if _agdc ._ebcc ==nil {_agdc ._ebcc =_gbffb (_agdc ._baa ,nil );
_agdc ._ebcc .setContexts (_agdc ._ffad ,_ded .NewStats (512,1),_ded .NewStats (512,1),_ded .NewStats (512,1),_ded .NewStats (512,1),_agdc ._cace ,_ded .NewStats (512,1),_ded .NewStats (512,1),_ded .NewStats (512,1),_ded .NewStats (512,1));};if _ffaae :=_agdc .setSymbolsArray ();
_ffaae !=nil {return _ffaae ;};_agdc ._ebcc .setParameters (_agdc ._gebb ,_agdc .IsHuffmanEncoded ,true ,_dgde ,_adee ,_acee ,1,_agdc ._fdee +_agdc ._aadc ,0,0,0,1,0,0,0,0,0,0,0,0,0,_agdc .SdrTemplate ,_agdc .SdrATX ,_agdc .SdrATY ,_agdc ._dffg ,_agdc ._acfd );
return _agdc .addSymbol (_agdc ._ebcc );};func (_gffc *TextRegion )Encode (w _cc .BinaryWriter )(_aabb int ,_ebda error ){const _edgg ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _aabb ,_ebda =_gffc .RegionInfo .Encode (w );
_ebda !=nil {return _aabb ,_bdd .Wrap (_ebda ,_edgg ,"");};var _fffcf int ;if _fffcf ,_ebda =_gffc .encodeFlags (w );_ebda !=nil {return _aabb ,_bdd .Wrap (_ebda ,_edgg ,"");};_aabb +=_fffcf ;if _fffcf ,_ebda =_gffc .encodeSymbols (w );_ebda !=nil {return _aabb ,_bdd .Wrap (_ebda ,_edgg ,"");
};_aabb +=_fffcf ;return _aabb ,nil ;};func (_bcba *GenericRegion )overrideAtTemplate3 (_bbag ,_fabba ,_add ,_fbea ,_aeda int )int {_bbag &=0x3EF;if _bcba .GBAtY [0]==0&&_bcba .GBAtX [0]>=-int8 (_aeda ){_bbag |=(_fbea >>uint (7-(int8 (_aeda )+_bcba .GBAtX [0]))&0x1)<<4;
}else {_bbag |=int (_bcba .getPixel (_fabba +int (_bcba .GBAtX [0]),_add +int (_bcba .GBAtY [0])))<<4;};return _bbag ;};func (_fffe *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_ba .Points ,symbols *_ba .Bitmaps ,classIDs *_bd .IntSlice ,boxes *_ba .Boxes ,width ,height ,symBits int ){_fffe .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_fffe ._afce =globalSymbolsMap ;_fffe ._aceag =localSymbolsMap ;_fffe ._gaedc =comps ;_fffe ._fbac =inLL ;_fffe ._gaadb =symbols ;_fffe ._affb =classIDs ;_fffe ._bccd =boxes ;_fffe ._dacac =symBits ;};var _ SegmentEncoder =&GenericRegion {};func _geeb (_efde int )int {if _efde ==0{return 0;
};_efde |=_efde >>1;_efde |=_efde >>2;_efde |=_efde >>4;_efde |=_efde >>8;_efde |=_efde >>16;return (_efde +1)>>1;};func (_bbga *SymbolDictionary )readNumberOfExportedSymbols ()error {_baaf ,_cgg :=_bbga ._baa .ReadBits (32);if _cgg !=nil {return _cgg ;
};_bbga .NumberOfExportedSymbols =uint32 (_baaf &_c .MaxUint32 );return nil ;};func (_dccef *TextRegion )decodeID ()(int64 ,error ){if _dccef .IsHuffmanEncoded {if _dccef ._dadaf ==nil {_cbaa ,_bdga :=_dccef ._efcfe .ReadBits (byte (_dccef ._cbbdf ));return int64 (_cbaa ),_bdga ;
};return _dccef ._dadaf .Decode (_dccef ._efcfe );};return _dccef ._aabe .DecodeIAID (uint64 (_dccef ._cbbdf ),_dccef ._fgda );};func (_fbae *TextRegion )readHuffmanFlags ()error {var (_ecdd int ;_efbd uint64 ;_gaade error ;);_ ,_gaade =_fbae ._efcfe .ReadBit ();
if _gaade !=nil {return _gaade ;};_ecdd ,_gaade =_fbae ._efcfe .ReadBit ();if _gaade !=nil {return _gaade ;};_fbae .SbHuffRSize =int8 (_ecdd );_efbd ,_gaade =_fbae ._efcfe .ReadBits (2);if _gaade !=nil {return _gaade ;};_fbae .SbHuffRDY =int8 (_efbd )&0xf;
_efbd ,_gaade =_fbae ._efcfe .ReadBits (2);if _gaade !=nil {return _gaade ;};_fbae .SbHuffRDX =int8 (_efbd )&0xf;_efbd ,_gaade =_fbae ._efcfe .ReadBits (2);if _gaade !=nil {return _gaade ;};_fbae .SbHuffRDHeight =int8 (_efbd )&0xf;_efbd ,_gaade =_fbae ._efcfe .ReadBits (2);
if _gaade !=nil {return _gaade ;};_fbae .SbHuffRDWidth =int8 (_efbd )&0xf;_efbd ,_gaade =_fbae ._efcfe .ReadBits (2);if _gaade !=nil {return _gaade ;};_fbae .SbHuffDT =int8 (_efbd )&0xf;_efbd ,_gaade =_fbae ._efcfe .ReadBits (2);if _gaade !=nil {return _gaade ;
};_fbae .SbHuffDS =int8 (_efbd )&0xf;_efbd ,_gaade =_fbae ._efcfe .ReadBits (2);if _gaade !=nil {return _gaade ;};_fbae .SbHuffFS =int8 (_efbd )&0xf;return nil ;};var _ SegmentEncoder =&RegionSegment {};func (_dfef *Header )Encode (w _cc .BinaryWriter )(_baf int ,_abga error ){const _aagb ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _dgbf _cc .BinaryWriter ;_def .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _abga !=nil {_def .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_abga );
}else {_def .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_dfef );_def .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _dfef .SegmentData !=nil {_ffd ,_dbaa :=_dfef .SegmentData .(SegmentEncoder );if !_dbaa {return 0,_bdd .Errorf (_aagb ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_dfef .SegmentData );
};_dgbf =_cc .BufferedMSB ();_baf ,_abga =_ffd .Encode (_dgbf );if _abga !=nil {return 0,_bdd .Wrap (_abga ,_aagb ,"");};_dfef .SegmentDataLength =uint64 (_baf );};if _dfef .pageSize ()==4{_dfef .PageAssociationFieldSize =true ;};var _babb int ;_babb ,_abga =_dfef .writeSegmentNumber (w );
if _abga !=nil {return 0,_bdd .Wrap (_abga ,_aagb ,"");};_baf +=_babb ;if _abga =_dfef .writeFlags (w );_abga !=nil {return _baf ,_bdd .Wrap (_abga ,_aagb ,"");};_baf ++;_babb ,_abga =_dfef .writeReferredToCount (w );if _abga !=nil {return 0,_bdd .Wrap (_abga ,_aagb ,"");
};_baf +=_babb ;_babb ,_abga =_dfef .writeReferredToSegments (w );if _abga !=nil {return 0,_bdd .Wrap (_abga ,_aagb ,"");};_baf +=_babb ;_babb ,_abga =_dfef .writeSegmentPageAssociation (w );if _abga !=nil {return 0,_bdd .Wrap (_abga ,_aagb ,"");};_baf +=_babb ;
_babb ,_abga =_dfef .writeSegmentDataLength (w );if _abga !=nil {return 0,_bdd .Wrap (_abga ,_aagb ,"");};_baf +=_babb ;_dfef .HeaderLength =int64 (_baf )-int64 (_dfef .SegmentDataLength );if _dgbf !=nil {if _ ,_abga =w .Write (_dgbf .Data ());_abga !=nil {return _baf ,_bdd .Wrap (_abga ,_aagb ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _baf ,nil ;};func (_gbffc *RegionSegment )parseHeader ()error {const _ddgb ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_def .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_def .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_gbbc ,_dfaf :=_gbffc ._cbee .ReadBits (32);
if _dfaf !=nil {return _bdd .Wrap (_dfaf ,_ddgb ,"\u0077\u0069\u0064t\u0068");};_gbffc .BitmapWidth =uint32 (_gbbc &_c .MaxUint32 );_gbbc ,_dfaf =_gbffc ._cbee .ReadBits (32);if _dfaf !=nil {return _bdd .Wrap (_dfaf ,_ddgb ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_gbffc .BitmapHeight =uint32 (_gbbc &_c .MaxUint32 );_gbbc ,_dfaf =_gbffc ._cbee .ReadBits (32);if _dfaf !=nil {return _bdd .Wrap (_dfaf ,_ddgb ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_gbffc .XLocation =uint32 (_gbbc &_c .MaxUint32 );
_gbbc ,_dfaf =_gbffc ._cbee .ReadBits (32);if _dfaf !=nil {return _bdd .Wrap (_dfaf ,_ddgb ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_gbffc .YLocation =uint32 (_gbbc &_c .MaxUint32 );if _ ,_dfaf =_gbffc ._cbee .ReadBits (5);_dfaf !=nil {return _bdd .Wrap (_dfaf ,_ddgb ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _dfaf =_gbffc .readCombinationOperator ();_dfaf !=nil {return _bdd .Wrap (_dfaf ,_ddgb ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_egd *GenericRefinementRegion )decodeSLTP ()(int ,error ){_egd .Template .setIndex (_egd ._ff );
return _egd ._ca .DecodeBit (_egd ._ff );};func (_ffab *PageInformationSegment )readDefaultPixelValue ()error {_cdg ,_caedb :=_ffab ._bcfg .ReadBit ();if _caedb !=nil {return _caedb ;};_ffab .DefaultPixelValue =uint8 (_cdg &0xf);return nil ;};func (_ee *GenericRefinementRegion )GetRegionBitmap ()(*_ba .Bitmap ,error ){var _eg error ;
_def .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _eg !=nil {_def .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_eg );
}else {_def .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _ee .RegionBitmap !=nil {return _ee .RegionBitmap ,nil ;};_gb :=0;if _ee .ReferenceBitmap ==nil {_ee .ReferenceBitmap ,_eg =_ee .getGrReference ();if _eg !=nil {return nil ,_eg ;};};if _ee ._ca ==nil {_ee ._ca ,_eg =_ded .New (_ee ._geb );if _eg !=nil {return nil ,_eg ;
};};if _ee ._ff ==nil {_ee ._ff =_ded .NewStats (8192,1);};_ee .RegionBitmap =_ba .New (int (_ee .RegionInfo .BitmapWidth ),int (_ee .RegionInfo .BitmapHeight ));if _ee .TemplateID ==0{if _eg =_ee .updateOverride ();_eg !=nil {return nil ,_eg ;};};_cb :=(_ee .RegionBitmap .Width +7)&-8;
var _deb int ;if _ee .IsTPGROn {_deb =int (-_ee .ReferenceDY )*_ee .ReferenceBitmap .RowStride ;};_egb :=_deb +1;for _gbd :=0;_gbd < _ee .RegionBitmap .Height ;_gbd ++{if _ee .IsTPGROn {_gac ,_dc :=_ee .decodeSLTP ();if _dc !=nil {return nil ,_dc ;};_gb ^=_gac ;
};if _gb ==0{_eg =_ee .decodeOptimized (_gbd ,_ee .RegionBitmap .Width ,_ee .RegionBitmap .RowStride ,_ee .ReferenceBitmap .RowStride ,_cb ,_deb ,_egb );if _eg !=nil {return nil ,_eg ;};}else {_eg =_ee .decodeTypicalPredictedLine (_gbd ,_ee .RegionBitmap .Width ,_ee .RegionBitmap .RowStride ,_ee .ReferenceBitmap .RowStride ,_cb ,_deb );
if _eg !=nil {return nil ,_eg ;};};};return _ee .RegionBitmap ,nil ;};func (_cdgf *SymbolDictionary )getUserTable (_cage int )(_gee .Tabler ,error ){var _aged int ;for _ ,_dbga :=range _cdgf .Header .RTSegments {if _dbga .Type ==53{if _aged ==_cage {_bafg ,_feb :=_dbga .GetSegmentData ();
if _feb !=nil {return nil ,_feb ;};_eeagg :=_bafg .(_gee .BasicTabler );return _gee .NewEncodedTable (_eeagg );};_aged ++;};};return nil ,nil ;};func (_eab *GenericRegion )copyLineAbove (_fdcda int )error {_caff :=_fdcda *_eab .Bitmap .RowStride ;_egdde :=_caff -_eab .Bitmap .RowStride ;
for _fecc :=0;_fecc < _eab .Bitmap .RowStride ;_fecc ++{_fgaf ,_bdfc :=_eab .Bitmap .GetByte (_egdde );if _bdfc !=nil {return _bdfc ;};_egdde ++;if _bdfc =_eab .Bitmap .SetByte (_caff ,_fgaf );_bdfc !=nil {return _bdfc ;};_caff ++;};return nil ;};func (_eeegc *PatternDictionary )setGbAtPixels (){if _eeegc .HDTemplate ==0{_eeegc .GBAtX =make ([]int8 ,4);
_eeegc .GBAtY =make ([]int8 ,4);_eeegc .GBAtX [0]=-int8 (_eeegc .HdpWidth );_eeegc .GBAtY [0]=0;_eeegc .GBAtX [1]=-3;_eeegc .GBAtY [1]=-1;_eeegc .GBAtX [2]=2;_eeegc .GBAtY [2]=-2;_eeegc .GBAtX [3]=-2;_eeegc .GBAtY [3]=-2;}else {_eeegc .GBAtX =[]int8 {-int8 (_eeegc .HdpWidth )};
_eeegc .GBAtY =[]int8 {0};};};func (_cgfb *GenericRegion )setParametersWithAt (_dgb bool ,_ccb byte ,_dbae ,_ffa bool ,_dda ,_eefd []int8 ,_feccg ,_bfdg uint32 ,_acf *_ded .DecoderStats ,_dace *_ded .Decoder ){_cgfb .IsMMREncoded =_dgb ;_cgfb .GBTemplate =_ccb ;
_cgfb .IsTPGDon =_dbae ;_cgfb .GBAtX =_dda ;_cgfb .GBAtY =_eefd ;_cgfb .RegionSegment .BitmapHeight =_bfdg ;_cgfb .RegionSegment .BitmapWidth =_feccg ;_cgfb ._ccf =nil ;_cgfb .Bitmap =nil ;if _acf !=nil {_cgfb ._gcd =_acf ;};if _dace !=nil {_cgfb ._bgbg =_dace ;
};_def .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_cgfb );};
func (_eegc *TextRegion )setContexts (_caea *_ded .DecoderStats ,_agfb *_ded .DecoderStats ,_gade *_ded .DecoderStats ,_degb *_ded .DecoderStats ,_bgcf *_ded .DecoderStats ,_decc *_ded .DecoderStats ,_bceceb *_ded .DecoderStats ,_cdgb *_ded .DecoderStats ,_dgbca *_ded .DecoderStats ,_aeagd *_ded .DecoderStats ){_eegc ._aagbf =_agfb ;
_eegc ._fbdbb =_gade ;_eegc ._gdgcb =_degb ;_eegc ._gfbb =_bgcf ;_eegc ._dgdeca =_bceceb ;_eegc ._cccfb =_cdgb ;_eegc ._fgda =_decc ;_eegc ._eebb =_dgbca ;_eegc ._gfee =_aeagd ;_eegc ._cfab =_caea ;};func (_daaf *TextRegion )decodeRdw ()(int64 ,error ){const _ebcf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _daaf .IsHuffmanEncoded {if _daaf .SbHuffRDWidth ==3{if _daaf ._fbgf ==nil {var (_ceeee int ;_adga error ;);if _daaf .SbHuffFS ==3{_ceeee ++;};if _daaf .SbHuffDS ==3{_ceeee ++;};if _daaf .SbHuffDT ==3{_ceeee ++;};_daaf ._fbgf ,_adga =_daaf .getUserTable (_ceeee );
if _adga !=nil {return 0,_bdd .Wrap (_adga ,_ebcf ,"");};};return _daaf ._fbgf .Decode (_daaf ._efcfe );};_ecca ,_babc :=_gee .GetStandardTable (14+int (_daaf .SbHuffRDWidth ));if _babc !=nil {return 0,_bdd .Wrap (_babc ,_ebcf ,"");};return _ecca .Decode (_daaf ._efcfe );
};_cefe ,_adcg :=_daaf ._aabe .DecodeInt (_daaf ._dgdeca );if _adcg !=nil {return 0,_bdd .Wrap (_adcg ,_ebcf ,"");};return int64 (_cefe ),nil ;};func (_cff *GenericRegion )parseHeader ()(_efgd error ){_def .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _efgd !=nil {_def .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_efgd );
}else {_def .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_gff int ;_fbd uint64 ;);if _efgd =_cff .RegionSegment .parseHeader ();_efgd !=nil {return _efgd ;};if _ ,_efgd =_cff ._bfc .ReadBits (3);_efgd !=nil {return _efgd ;};_gff ,_efgd =_cff ._bfc .ReadBit ();if _efgd !=nil {return _efgd ;};if _gff ==1{_cff .UseExtTemplates =true ;
};_gff ,_efgd =_cff ._bfc .ReadBit ();if _efgd !=nil {return _efgd ;};if _gff ==1{_cff .IsTPGDon =true ;};_fbd ,_efgd =_cff ._bfc .ReadBits (2);if _efgd !=nil {return _efgd ;};_cff .GBTemplate =byte (_fbd &0xf);_gff ,_efgd =_cff ._bfc .ReadBit ();if _efgd !=nil {return _efgd ;
};if _gff ==1{_cff .IsMMREncoded =true ;};if !_cff .IsMMREncoded {_dcbe :=1;if _cff .GBTemplate ==0{_dcbe =4;if _cff .UseExtTemplates {_dcbe =12;};};if _efgd =_cff .readGBAtPixels (_dcbe );_efgd !=nil {return _efgd ;};};if _efgd =_cff .computeSegmentDataStructure ();
_efgd !=nil {return _efgd ;};_def .Log .Trace ("\u0025\u0073",_cff );return nil ;};func (_cdbe *HalftoneRegion )renderPattern (_cddc [][]int )(_gdd error ){var _ggga ,_fgbb int ;for _abfg :=0;_abfg < int (_cdbe .HGridHeight );_abfg ++{for _fdd :=0;_fdd < int (_cdbe .HGridWidth );
_fdd ++{_ggga =_cdbe .computeX (_abfg ,_fdd );_fgbb =_cdbe .computeY (_abfg ,_fdd );_eedb :=_cdbe .Patterns [_cddc [_abfg ][_fdd ]];if _gdd =_ba .Blit (_eedb ,_cdbe .HalftoneRegionBitmap ,_ggga +int (_cdbe .HGridX ),_fgbb +int (_cdbe .HGridY ),_cdbe .CombinationOperator );
_gdd !=nil {return _gdd ;};};};return nil ;};func (_aebga *SymbolDictionary )encodeSymbols (_ggb _cc .BinaryWriter )(_ccec int ,_ebca error ){const _dgbfg ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_geadg :=_dg .New ();_geadg .Init ();
_eebgb ,_ebca :=_aebga ._aggee .SelectByIndexes (_aebga ._bbgd );if _ebca !=nil {return 0,_bdd .Wrap (_ebca ,_dgbfg ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_cgdb :=map[*_ba .Bitmap ]int {};for _agae ,_fefb :=range _eebgb .Values {_cgdb [_fefb ]=_agae ;
};_eebgb .SortByHeight ();var _cgab ,_afgf int ;_ecc ,_ebca :=_eebgb .GroupByHeight ();if _ebca !=nil {return 0,_bdd .Wrap (_ebca ,_dgbfg ,"");};for _ ,_gcga :=range _ecc .Values {_ggcc :=_gcga .Values [0].Height ;_agfc :=_ggcc -_cgab ;if _ebca =_geadg .EncodeInteger (_dg .IADH ,_agfc );
_ebca !=nil {return 0,_bdd .Wrapf (_ebca ,_dgbfg ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_agfc );};_cgab =_ggcc ;_bbdc ,_acc :=_gcga .GroupByWidth ();if _acc !=nil {return 0,_bdd .Wrapf (_acc ,_dgbfg ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_ggcc );
};var _geeef int ;for _ ,_bcc :=range _bbdc .Values {for _ ,_gacb :=range _bcc .Values {_eaga :=_gacb .Width ;_deed :=_eaga -_geeef ;if _acc =_geadg .EncodeInteger (_dg .IADW ,_deed );_acc !=nil {return 0,_bdd .Wrapf (_acc ,_dgbfg ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_deed );
};_geeef +=_deed ;if _acc =_geadg .EncodeBitmap (_gacb ,false );_acc !=nil {return 0,_bdd .Wrapf (_acc ,_dgbfg ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_ggcc ,_eaga );};_cefdg :=_cgdb [_gacb ];_aebga ._gfded [_cefdg ]=_afgf ;
_afgf ++;};};if _acc =_geadg .EncodeOOB (_dg .IADW );_acc !=nil {return 0,_bdd .Wrap (_acc ,_dgbfg ,"\u0049\u0041\u0044\u0057");};};if _ebca =_geadg .EncodeInteger (_dg .IAEX ,0);_ebca !=nil {return 0,_bdd .Wrap (_ebca ,_dgbfg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _ebca =_geadg .EncodeInteger (_dg .IAEX ,len (_aebga ._bbgd ));_ebca !=nil {return 0,_bdd .Wrap (_ebca ,_dgbfg ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_geadg .Final ();_eeag ,_ebca :=_geadg .WriteTo (_ggb );
if _ebca !=nil {return 0,_bdd .Wrap (_ebca ,_dgbfg ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");
};return int (_eeag ),nil ;};func (_gab *HalftoneRegion )GetRegionBitmap ()(*_ba .Bitmap ,error ){if _gab .HalftoneRegionBitmap !=nil {return _gab .HalftoneRegionBitmap ,nil ;};var _abaa error ;_gab .HalftoneRegionBitmap =_ba .New (int (_gab .RegionSegment .BitmapWidth ),int (_gab .RegionSegment .BitmapHeight ));
if _gab .Patterns ==nil ||len (_gab .Patterns )==0{_gab .Patterns ,_abaa =_gab .GetPatterns ();if _abaa !=nil {return nil ,_abaa ;};};if _gab .HDefaultPixel ==1{_gab .HalftoneRegionBitmap .SetDefaultPixel ();};_aeec :=_c .Ceil (_c .Log (float64 (len (_gab .Patterns )))/_c .Log (2));
_fde :=int (_aeec );var _gdad [][]int ;_gdad ,_abaa =_gab .grayScaleDecoding (_fde );if _abaa !=nil {return nil ,_abaa ;};if _abaa =_gab .renderPattern (_gdad );_abaa !=nil {return nil ,_abaa ;};return _gab .HalftoneRegionBitmap ,nil ;};func (_dcf *template1 )form (_aebd ,_bfb ,_bdbe ,_dfb ,_cga int16 )int16 {return ((_aebd &0x02)<<8)|(_bfb <<6)|((_bdbe &0x03)<<4)|(_dfb <<1)|_cga ;
};func (_gfd *EndOfStripe )parseHeader ()error {_fc ,_gfa :=_gfd ._gc .ReadBits (32);if _gfa !=nil {return _gfa ;};_gfd ._ga =int (_fc &_c .MaxInt32 );return nil ;};func (_bbaea *SymbolDictionary )InitEncode (symbols *_ba .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _aagc ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_bbaea .SdATX =[]int8 {3,-3,2,-2};_bbaea .SdATY =[]int8 {-1,-1,-2,-2};_bbaea ._aggee =symbols ;_bbaea ._bbgd =make ([]int ,len (symbolList ));copy (_bbaea ._bbgd ,symbolList );if len (_bbaea ._bbgd )!=_bbaea ._aggee .Size (){return _bdd .Error (_aagc ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_bbaea .NumberOfNewSymbols =uint32 (symbols .Size ());_bbaea .NumberOfExportedSymbols =uint32 (symbols .Size ());_bbaea ._gfded =symbolMap ;_bbaea ._aadd =unborderSymbols ;return nil ;};func (_fdcf *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_fabc ,_bc ,_ddb ,_fag ,_gdf ,_bgec ,_deeg ,_ceb ,_bcd int )(_beb error ){var (_eed ,_fbg int ;
_fac ,_ecg int ;_dac ,_cdf int ;_fdb byte ;);if _fabc > 0{_fdb ,_beb =_fdcf .RegionBitmap .GetByte (_deeg -_ddb );if _beb !=nil {return _beb ;};_fac =int (_fdb );};if _ceb > 0&&_ceb <=_fdcf .ReferenceBitmap .Height {_fdb ,_beb =_fdcf .ReferenceBitmap .GetByte (_bcd -_fag +_bgec );
if _beb !=nil {return _beb ;};_ecg =int (_fdb )<<2;};if _ceb >=0&&_ceb < _fdcf .ReferenceBitmap .Height {_fdb ,_beb =_fdcf .ReferenceBitmap .GetByte (_bcd +_bgec );if _beb !=nil {return _beb ;};_dac =int (_fdb );};if _ceb > -2&&_ceb < _fdcf .ReferenceBitmap .Height -1{_fdb ,_beb =_fdcf .ReferenceBitmap .GetByte (_bcd +_fag +_bgec );
if _beb !=nil {return _beb ;};_cdf =int (_fdb );};_eed =((_fac >>5)&0x6)|((_cdf >>2)&0x30)|(_dac &0xc0)|(_ecg &0x200);_fbg =((_cdf >>2)&0x70)|(_dac &0xc0)|(_ecg &0x700);var _fgb int ;for _caf :=0;_caf < _gdf ;_caf =_fgb {var (_daa int ;_eef int ;);_fgb =_caf +8;
if _daa =_bc -_caf ;_daa > 8{_daa =8;};_bdbg :=_fgb < _bc ;_ebg :=_fgb < _fdcf .ReferenceBitmap .Width ;_bebd :=_bgec +1;if _fabc > 0{_fdb =0;if _bdbg {_fdb ,_beb =_fdcf .RegionBitmap .GetByte (_deeg -_ddb +1);if _beb !=nil {return _beb ;};};_fac =(_fac <<8)|int (_fdb );
};if _ceb > 0&&_ceb <=_fdcf .ReferenceBitmap .Height {var _cef int ;if _ebg {_fdb ,_beb =_fdcf .ReferenceBitmap .GetByte (_bcd -_fag +_bebd );if _beb !=nil {return _beb ;};_cef =int (_fdb )<<2;};_ecg =(_ecg <<8)|_cef ;};if _ceb >=0&&_ceb < _fdcf .ReferenceBitmap .Height {_fdb =0;
if _ebg {_fdb ,_beb =_fdcf .ReferenceBitmap .GetByte (_bcd +_bebd );if _beb !=nil {return _beb ;};};_dac =(_dac <<8)|int (_fdb );};if _ceb > -2&&_ceb < (_fdcf .ReferenceBitmap .Height -1){_fdb =0;if _ebg {_fdb ,_beb =_fdcf .ReferenceBitmap .GetByte (_bcd +_fag +_bebd );
if _beb !=nil {return _beb ;};};_cdf =(_cdf <<8)|int (_fdb );};for _eae :=0;_eae < _daa ;_eae ++{var _eee int ;_cde :=(_fbg >>4)&0x1ff;switch _cde {case 0x1ff:_eee =1;case 0x00:_eee =0;default:_fdcf ._ff .SetIndex (int32 (_eed ));_eee ,_beb =_fdcf ._ca .DecodeBit (_fdcf ._ff );
if _beb !=nil {return _beb ;};};_dafc :=uint (7-_eae );_eef |=_eee <<_dafc ;_eed =((_eed &0x0d6)<<1)|_eee |(_fac >>_dafc +5)&0x002|((_cdf >>_dafc +2)&0x010)|((_dac >>_dafc )&0x040)|((_ecg >>_dafc )&0x200);_fbg =((_fbg &0xdb)<<1)|((_cdf >>_dafc +2)&0x010)|((_dac >>_dafc )&0x080)|((_ecg >>_dafc )&0x400);
};_beb =_fdcf .RegionBitmap .SetByte (_deeg ,byte (_eef ));if _beb !=nil {return _beb ;};_deeg ++;_bcd ++;};return nil ;};func (_dbcd *TextRegion )encodeSymbols (_becbb _cc .BinaryWriter )(_dcgcb int ,_egac error ){const _baef ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_ffe :=make ([]byte ,4);_f .BigEndian .PutUint32 (_ffe ,_dbcd .NumberOfSymbols );if _dcgcb ,_egac =_becbb .Write (_ffe );_egac !=nil {return _dcgcb ,_bdd .Wrap (_egac ,_baef ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_befgc ,_egac :=_ba .NewClassedPoints (_dbcd ._fbac ,_dbcd ._gaedc );if _egac !=nil {return 0,_bdd .Wrap (_egac ,_baef ,"");};var _gedce ,_ebde int ;_ggbf :=_dg .New ();_ggbf .Init ();if _egac =_ggbf .EncodeInteger (_dg .IADT ,0);_egac !=nil {return _dcgcb ,_bdd .Wrap (_egac ,_baef ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_bcbd ,_egac :=_befgc .GroupByY ();if _egac !=nil {return 0,_bdd .Wrap (_egac ,_baef ,"");};for _ ,_adaf :=range _bcbd {_bdgf :=int (_adaf .YAtIndex (0));_egace :=_bdgf -_gedce ;if _egac =_ggbf .EncodeInteger (_dg .IADT ,_egace );_egac !=nil {return _dcgcb ,_bdd .Wrap (_egac ,_baef ,"");
};var _bcgg int ;for _edba ,_ccbb :=range _adaf .IntSlice {switch _edba {case 0:_efec :=int (_adaf .XAtIndex (_edba ))-_ebde ;if _egac =_ggbf .EncodeInteger (_dg .IAFS ,_efec );_egac !=nil {return _dcgcb ,_bdd .Wrap (_egac ,_baef ,"");};_ebde +=_efec ;
_bcgg =_ebde ;default:_ggcba :=int (_adaf .XAtIndex (_edba ))-_bcgg ;if _egac =_ggbf .EncodeInteger (_dg .IADS ,_ggcba );_egac !=nil {return _dcgcb ,_bdd .Wrap (_egac ,_baef ,"");};_bcgg +=_ggcba ;};_bgffe ,_beea :=_dbcd ._affb .Get (_ccbb );if _beea !=nil {return _dcgcb ,_bdd .Wrap (_beea ,_baef ,"");
};_gaegc ,_bbee :=_dbcd ._afce [_bgffe ];if !_bbee {_gaegc ,_bbee =_dbcd ._aceag [_bgffe ];if !_bbee {return _dcgcb ,_bdd .Errorf (_baef ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_bgffe );
};};if _beea =_ggbf .EncodeIAID (_dbcd ._dacac ,_gaegc );_beea !=nil {return _dcgcb ,_bdd .Wrap (_beea ,_baef ,"");};};if _egac =_ggbf .EncodeOOB (_dg .IADS );_egac !=nil {return _dcgcb ,_bdd .Wrap (_egac ,_baef ,"");};};_ggbf .Final ();_eeg ,_egac :=_ggbf .WriteTo (_becbb );
if _egac !=nil {return _dcgcb ,_bdd .Wrap (_egac ,_baef ,"");};_dcgcb +=int (_eeg );return _dcgcb ,nil ;};func (_gfade *SymbolDictionary )checkInput ()error {if _gfade .SdHuffDecodeHeightSelection ==2{_def .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_gfade .SdHuffDecodeHeightSelection );
};if _gfade .SdHuffDecodeWidthSelection ==2{_def .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_gfade .SdHuffDecodeWidthSelection );
};if _gfade .IsHuffmanEncoded {if _gfade .SdTemplate !=0{_def .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_gfade .SdTemplate );
};if !_gfade .UseRefinementAggregation {if !_gfade .UseRefinementAggregation {if _gfade ._badg {_def .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_gfade ._badg =false ;};if _gfade ._gbabdg {_def .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_gfade ._gbabdg =false ;};};};}else {if _gfade .SdHuffBMSizeSelection !=0{_def .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_gfade .SdHuffBMSizeSelection =0;};if _gfade .SdHuffDecodeWidthSelection !=0{_def .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_gfade .SdHuffDecodeWidthSelection =0;};if _gfade .SdHuffDecodeHeightSelection !=0{_def .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_gfade .SdHuffDecodeHeightSelection =0;};};if !_gfade .UseRefinementAggregation {if _gfade .SdrTemplate !=0{_def .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_gfade .SdrTemplate );
_gfade .SdrTemplate =0;};};if !_gfade .IsHuffmanEncoded ||!_gfade .UseRefinementAggregation {if _gfade .SdHuffAggInstanceSelection {_def .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_gfade .SdHuffAggInstanceSelection );
};};return nil ;};func (_eebaf *TextRegion )symbolIDCodeLengths ()error {var (_cfbc []*_gee .Code ;_eagac uint64 ;_eefce _gee .Tabler ;_addgc error ;);for _aggea :=0;_aggea < 35;_aggea ++{_eagac ,_addgc =_eebaf ._efcfe .ReadBits (4);if _addgc !=nil {return _addgc ;
};_faef :=int (_eagac &0xf);if _faef > 0{_cfbc =append (_cfbc ,_gee .NewCode (int32 (_faef ),0,int32 (_aggea ),false ));};};_eefce ,_addgc =_gee .NewFixedSizeTable (_cfbc );if _addgc !=nil {return _addgc ;};var (_cffc int64 ;_fbfa uint32 ;_dface []*_gee .Code ;
_bagff int64 ;);for _fbfa < _eebaf .NumberOfSymbols {_bagff ,_addgc =_eefce .Decode (_eebaf ._efcfe );if _addgc !=nil {return _addgc ;};if _bagff < 32{if _bagff > 0{_dface =append (_dface ,_gee .NewCode (int32 (_bagff ),0,int32 (_fbfa ),false ));};_cffc =_bagff ;
_fbfa ++;}else {var _gdgd ,_cfea int64 ;switch _bagff {case 32:_eagac ,_addgc =_eebaf ._efcfe .ReadBits (2);if _addgc !=nil {return _addgc ;};_gdgd =3+int64 (_eagac );if _fbfa > 0{_cfea =_cffc ;};case 33:_eagac ,_addgc =_eebaf ._efcfe .ReadBits (3);if _addgc !=nil {return _addgc ;
};_gdgd =3+int64 (_eagac );case 34:_eagac ,_addgc =_eebaf ._efcfe .ReadBits (7);if _addgc !=nil {return _addgc ;};_gdgd =11+int64 (_eagac );};for _eeac :=0;_eeac < int (_gdgd );_eeac ++{if _cfea > 0{_dface =append (_dface ,_gee .NewCode (int32 (_cfea ),0,int32 (_fbfa ),false ));
};_fbfa ++;};};};_eebaf ._efcfe .Align ();_eebaf ._dadaf ,_addgc =_gee .NewFixedSizeTable (_dface );return _addgc ;};func (_acag *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _acag .IsHuffmanEncoded {return _acag .decodeHeightClassDeltaHeightWithHuffman ();
};_acgb ,_ecgd :=_acag ._gebb .DecodeInt (_acag ._ccbe );if _ecgd !=nil {return 0,_ecgd ;};return int64 (_acgb ),nil ;};func (_daab *PageInformationSegment )readMaxStripeSize ()error {_dbfe ,_dcgca :=_daab ._bcfg .ReadBits (15);if _dcgca !=nil {return _dcgca ;
};_daab .MaxStripeSize =uint16 (_dbfe &_c .MaxUint16 );return nil ;};func (_cbbd *HalftoneRegion )checkInput ()error {if _cbbd .IsMMREncoded {if _cbbd .HTemplate !=0{_def .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_cbbd .HTemplate );
};if _cbbd .HSkipEnabled {_def .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_cbbd .HSkipEnabled );
};};return nil ;};func (_adgg *SymbolDictionary )encodeRefinementATFlags (_geea _cc .BinaryWriter )(_gdfd int ,_fef error ){const _gfec ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_adgg .UseRefinementAggregation ||_adgg .SdrTemplate !=0{return 0,nil ;};for _bfed :=0;_bfed < 2;_bfed ++{if _fef =_geea .WriteByte (byte (_adgg .SdrATX [_bfed ]));_fef !=nil {return _gdfd ,_bdd .Wrapf (_fef ,_gfec ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_bfed );
};_gdfd ++;if _fef =_geea .WriteByte (byte (_adgg .SdrATY [_bfed ]));_fef !=nil {return _gdfd ,_bdd .Wrapf (_fef ,_gfec ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_bfed );};_gdfd ++;};return _gdfd ,nil ;};func (_adde *TableSegment )HtPS ()int32 {return _adde ._bfca };
func (_dggf *TextRegion )setCodingStatistics ()error {if _dggf ._aagbf ==nil {_dggf ._aagbf =_ded .NewStats (512,1);};if _dggf ._fbdbb ==nil {_dggf ._fbdbb =_ded .NewStats (512,1);};if _dggf ._gdgcb ==nil {_dggf ._gdgcb =_ded .NewStats (512,1);};if _dggf ._gfbb ==nil {_dggf ._gfbb =_ded .NewStats (512,1);
};if _dggf ._adecb ==nil {_dggf ._adecb =_ded .NewStats (512,1);};if _dggf ._dgdeca ==nil {_dggf ._dgdeca =_ded .NewStats (512,1);};if _dggf ._cccfb ==nil {_dggf ._cccfb =_ded .NewStats (512,1);};if _dggf ._fgda ==nil {_dggf ._fgda =_ded .NewStats (1<<uint (_dggf ._cbbdf ),1);
};if _dggf ._eebb ==nil {_dggf ._eebb =_ded .NewStats (512,1);};if _dggf ._gfee ==nil {_dggf ._gfee =_ded .NewStats (512,1);};if _dggf ._aabe ==nil {var _gegf error ;_dggf ._aabe ,_gegf =_ded .New (_dggf ._efcfe );if _gegf !=nil {return _gegf ;};};return nil ;
};func (_ggfd *SymbolDictionary )readRefinementAtPixels (_effe int )error {_ggfd .SdrATX =make ([]int8 ,_effe );_ggfd .SdrATY =make ([]int8 ,_effe );var (_eggc byte ;_egbde error ;);for _deeff :=0;_deeff < _effe ;_deeff ++{_eggc ,_egbde =_ggfd ._baa .ReadByte ();
if _egbde !=nil {return _egbde ;};_ggfd .SdrATX [_deeff ]=int8 (_eggc );_eggc ,_egbde =_ggfd ._baa .ReadByte ();if _egbde !=nil {return _egbde ;};_ggfd .SdrATY [_deeff ]=int8 (_eggc );};return nil ;};func (_eba *GenericRefinementRegion )String ()string {_fcf :=&_de .Builder {};
_fcf .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_fcf .WriteString (_eba .RegionInfo .String ()+"\u000a");_fcf .WriteString (_da .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_eba .IsTPGROn ));
_fcf .WriteString (_da .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_eba .TemplateID ));_fcf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_eba .GrAtX ));
_fcf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_eba .GrAtY ));_fcf .WriteString (_da .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_eba .ReferenceDX ));
_fcf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_eba .ReferenceDY ));return _fcf .String ();};func (_agaf *HalftoneRegion )parseHeader ()error {if _ebgbf :=_agaf .RegionSegment .parseHeader ();
_ebgbf !=nil {return _ebgbf ;};_ade ,_cbgd :=_agaf ._dfa .ReadBit ();if _cbgd !=nil {return _cbgd ;};_agaf .HDefaultPixel =int8 (_ade );_gfe ,_cbgd :=_agaf ._dfa .ReadBits (3);if _cbgd !=nil {return _cbgd ;};_agaf .CombinationOperator =_ba .CombinationOperator (_gfe &0xf);
_ade ,_cbgd =_agaf ._dfa .ReadBit ();if _cbgd !=nil {return _cbgd ;};if _ade ==1{_agaf .HSkipEnabled =true ;};_gfe ,_cbgd =_agaf ._dfa .ReadBits (2);if _cbgd !=nil {return _cbgd ;};_agaf .HTemplate =byte (_gfe &0xf);_ade ,_cbgd =_agaf ._dfa .ReadBit ();
if _cbgd !=nil {return _cbgd ;};if _ade ==1{_agaf .IsMMREncoded =true ;};_gfe ,_cbgd =_agaf ._dfa .ReadBits (32);if _cbgd !=nil {return _cbgd ;};_agaf .HGridWidth =uint32 (_gfe &_c .MaxUint32 );_gfe ,_cbgd =_agaf ._dfa .ReadBits (32);if _cbgd !=nil {return _cbgd ;
};_agaf .HGridHeight =uint32 (_gfe &_c .MaxUint32 );_gfe ,_cbgd =_agaf ._dfa .ReadBits (32);if _cbgd !=nil {return _cbgd ;};_agaf .HGridX =int32 (_gfe &_c .MaxInt32 );_gfe ,_cbgd =_agaf ._dfa .ReadBits (32);if _cbgd !=nil {return _cbgd ;};_agaf .HGridY =int32 (_gfe &_c .MaxInt32 );
_gfe ,_cbgd =_agaf ._dfa .ReadBits (16);if _cbgd !=nil {return _cbgd ;};_agaf .HRegionX =uint16 (_gfe &_c .MaxUint16 );_gfe ,_cbgd =_agaf ._dfa .ReadBits (16);if _cbgd !=nil {return _cbgd ;};_agaf .HRegionY =uint16 (_gfe &_c .MaxUint16 );if _cbgd =_agaf .computeSegmentDataStructure ();
_cbgd !=nil {return _cbgd ;};return _agaf .checkInput ();};func (_eccc *TextRegion )parseHeader ()error {var _ceda error ;_def .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _ceda !=nil {_def .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_ceda );
}else {_def .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _ceda =_eccc .RegionInfo .parseHeader ();
_ceda !=nil {return _ceda ;};if _ceda =_eccc .readRegionFlags ();_ceda !=nil {return _ceda ;};if _eccc .IsHuffmanEncoded {if _ceda =_eccc .readHuffmanFlags ();_ceda !=nil {return _ceda ;};};if _ceda =_eccc .readUseRefinement ();_ceda !=nil {return _ceda ;
};if _ceda =_eccc .readAmountOfSymbolInstances ();_ceda !=nil {return _ceda ;};if _ceda =_eccc .getSymbols ();_ceda !=nil {return _ceda ;};if _ceda =_eccc .computeSymbolCodeLength ();_ceda !=nil {return _ceda ;};if _ceda =_eccc .checkInput ();_ceda !=nil {return _ceda ;
};_def .Log .Trace ("\u0025\u0073",_eccc .String ());return nil ;};func (_cebg *GenericRegion )decodeSLTP ()(int ,error ){switch _cebg .GBTemplate {case 0:_cebg ._gcd .SetIndex (0x9B25);case 1:_cebg ._gcd .SetIndex (0x795);case 2:_cebg ._gcd .SetIndex (0xE5);
case 3:_cebg ._gcd .SetIndex (0x195);};return _cebg ._bgbg .DecodeBit (_cebg ._gcd );};func (_fgcc *SymbolDictionary )Encode (w _cc .BinaryWriter )(_fada int ,_befe error ){const _bfg ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _fgcc ==nil {return 0,_bdd .Error (_bfg ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _fada ,_befe =_fgcc .encodeFlags (w );_befe !=nil {return _fada ,_bdd .Wrap (_befe ,_bfg ,"");
};_fgeb ,_befe :=_fgcc .encodeATFlags (w );if _befe !=nil {return _fada ,_bdd .Wrap (_befe ,_bfg ,"");};_fada +=_fgeb ;if _fgeb ,_befe =_fgcc .encodeRefinementATFlags (w );_befe !=nil {return _fada ,_bdd .Wrap (_befe ,_bfg ,"");};_fada +=_fgeb ;if _fgeb ,_befe =_fgcc .encodeNumSyms (w );
_befe !=nil {return _fada ,_bdd .Wrap (_befe ,_bfg ,"");};_fada +=_fgeb ;if _fgeb ,_befe =_fgcc .encodeSymbols (w );_befe !=nil {return _fada ,_bdd .Wrap (_befe ,_bfg ,"");};_fada +=_fgeb ;return _fada ,nil ;};func (_bee *TableSegment )HtRS ()int32 {return _bee ._gfda };
func (_bbfd *SymbolDictionary )getSbSymCodeLen ()int8 {_bgff :=int8 (_c .Ceil (_c .Log (float64 (_bbfd ._fdee +_bbfd .NumberOfNewSymbols ))/_c .Log (2)));if _bbfd .IsHuffmanEncoded &&_bgff < 1{return 1;};return _bgff ;};func (_dcba *TextRegion )getSymbols ()error {if _dcba .Header .RTSegments !=nil {return _dcba .initSymbols ();
};return nil ;};func (_aggd *PageInformationSegment )Init (h *Header ,r *_cc .Reader )(_gbggc error ){_aggd ._bcfg =r ;if _gbggc =_aggd .parseHeader ();_gbggc !=nil {return _bdd .Wrap (_gbggc ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};type TableSegment struct{_dccb *_cc .Reader ;_cagd int32 ;_bfca int32 ;_gfda int32 ;_fggd int32 ;_aebe int32 ;};func (_cdcdc *TextRegion )decodeRdx ()(int64 ,error ){const _cdbc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _cdcdc .IsHuffmanEncoded {if _cdcdc .SbHuffRDX ==3{if _cdcdc ._gbcg ==nil {var (_facae int ;
_bggb error ;);if _cdcdc .SbHuffFS ==3{_facae ++;};if _cdcdc .SbHuffDS ==3{_facae ++;};if _cdcdc .SbHuffDT ==3{_facae ++;};if _cdcdc .SbHuffRDWidth ==3{_facae ++;};if _cdcdc .SbHuffRDHeight ==3{_facae ++;};_cdcdc ._gbcg ,_bggb =_cdcdc .getUserTable (_facae );
if _bggb !=nil {return 0,_bdd .Wrap (_bggb ,_cdbc ,"");};};return _cdcdc ._gbcg .Decode (_cdcdc ._efcfe );};_ccebb ,_bagg :=_gee .GetStandardTable (14+int (_cdcdc .SbHuffRDX ));if _bagg !=nil {return 0,_bdd .Wrap (_bagg ,_cdbc ,"");};return _ccebb .Decode (_cdcdc ._efcfe );
};_cccca ,_ffgc :=_cdcdc ._aabe .DecodeInt (_cdcdc ._eebb );if _ffgc !=nil {return 0,_bdd .Wrap (_ffgc ,_cdbc ,"");};return int64 (_cccca ),nil ;};func (_fec *GenericRegion )InitEncode (bm *_ba .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _ece ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _bdd .Error (_ece ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _bdd .Error (_ece ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_fec .Bitmap =bm ;_fec .GBTemplate =byte (template );switch _fec .GBTemplate {case 0:_fec .GBAtX =[]int8 {3,-3,2,-2};_fec .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_fec .GBAtX =[]int8 {3};_fec .GBAtY =[]int8 {-1};case 2,3:_fec .GBAtX =[]int8 {2};_fec .GBAtY =[]int8 {-1};
default:return _bdd .Errorf (_ece ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_fec .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_fec .IsTPGDon =duplicateLineRemoval ;return nil ;};func _gbffb (_ebbd *_cc .Reader ,_cgb *Header )*TextRegion {_fdeb :=&TextRegion {_efcfe :_ebbd ,Header :_cgb ,RegionInfo :NewRegionSegment (_ebbd )};
return _fdeb ;};func (_agbg *SymbolDictionary )getSymbol (_fceb int )(*_ba .Bitmap ,error ){const _gfga ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_gafa ,_beff :=_agbg ._aggee .GetBitmap (_agbg ._bbgd [_fceb ]);if _beff !=nil {return nil ,_bdd .Wrap (_beff ,_gfga ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");
};return _gafa ,nil ;};type OrganizationType uint8 ;func (_eedf *PatternDictionary )GetDictionary ()([]*_ba .Bitmap ,error ){if _eedf .Patterns !=nil {return _eedf .Patterns ,nil ;};if !_eedf .IsMMREncoded {_eedf .setGbAtPixels ();};_fcgf :=NewGenericRegion (_eedf ._cfbg );
_fcgf .setParametersMMR (_eedf .IsMMREncoded ,_eedf .DataOffset ,_eedf .DataLength ,uint32 (_eedf .HdpHeight ),(_eedf .GrayMax +1)*uint32 (_eedf .HdpWidth ),_eedf .HDTemplate ,false ,false ,_eedf .GBAtX ,_eedf .GBAtY );_addg ,_gfce :=_fcgf .GetRegionBitmap ();
if _gfce !=nil {return nil ,_gfce ;};if _gfce =_eedf .extractPatterns (_addg );_gfce !=nil {return nil ,_gfce ;};return _eedf .Patterns ,nil ;};func (_bdbf *template1 )setIndex (_gfad *_ded .DecoderStats ){_gfad .SetIndex (0x080)};func (_ede *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _ede .RegionSegment };
func (_fff *SymbolDictionary )decodeNewSymbols (_ceag ,_ceeec uint32 ,_gcaf *_ba .Bitmap ,_dgdec ,_dfc int32 )error {if _fff ._fcbcc ==nil {_fff ._fcbcc =_fdcd (_fff ._baa ,nil );if _fff ._gebb ==nil {var _afgd error ;_fff ._gebb ,_afgd =_ded .New (_fff ._baa );
if _afgd !=nil {return _afgd ;};};if _fff ._ffad ==nil {_fff ._ffad =_ded .NewStats (65536,1);};};_fff ._fcbcc .setParameters (_fff ._ffad ,_fff ._gebb ,_fff .SdrTemplate ,_ceag ,_ceeec ,_gcaf ,_dgdec ,_dfc ,false ,_fff .SdrATX ,_fff .SdrATY );return _fff .addSymbol (_fff ._fcbcc );
};func (_geec *GenericRefinementRegion )decodeOptimized (_dd ,_cagb ,_df ,_egbc ,_cf ,_ce ,_geg int )error {var (_ec error ;_a int ;_fd int ;);_gfaa :=_dd -int (_geec .ReferenceDY );if _fb :=int (-_geec .ReferenceDX );_fb > 0{_a =_fb ;};_gce :=_geec .ReferenceBitmap .GetByteIndex (_a ,_gfaa );
if _geec .ReferenceDX > 0{_fd =int (_geec .ReferenceDX );};_bad :=_geec .RegionBitmap .GetByteIndex (_fd ,_dd );switch _geec .TemplateID {case 0:_ec =_geec .decodeTemplate (_dd ,_cagb ,_df ,_egbc ,_cf ,_ce ,_geg ,_bad ,_gfaa ,_gce ,_geec ._dee );case 1:_ec =_geec .decodeTemplate (_dd ,_cagb ,_df ,_egbc ,_cf ,_ce ,_geg ,_bad ,_gfaa ,_gce ,_geec ._gg );
};return _ec ;};func (_defce *TextRegion )computeSymbolCodeLength ()error {if _defce .IsHuffmanEncoded {return _defce .symbolIDCodeLengths ();};_defce ._cbbdf =int8 (_c .Ceil (_c .Log (float64 (_defce .NumberOfSymbols ))/_c .Log (2)));return nil ;};func (_ffaf *TextRegion )readRegionFlags ()error {var (_gbdbg int ;
_dagg uint64 ;_dccc error ;);_gbdbg ,_dccc =_ffaf ._efcfe .ReadBit ();if _dccc !=nil {return _dccc ;};_ffaf .SbrTemplate =int8 (_gbdbg );_dagg ,_dccc =_ffaf ._efcfe .ReadBits (5);if _dccc !=nil {return _dccc ;};_ffaf .SbDsOffset =int8 (_dagg );if _ffaf .SbDsOffset > 0x0f{_ffaf .SbDsOffset -=0x20;
};_gbdbg ,_dccc =_ffaf ._efcfe .ReadBit ();if _dccc !=nil {return _dccc ;};_ffaf .DefaultPixel =int8 (_gbdbg );_dagg ,_dccc =_ffaf ._efcfe .ReadBits (2);if _dccc !=nil {return _dccc ;};_ffaf .CombinationOperator =_ba .CombinationOperator (int (_dagg )&0x3);
_gbdbg ,_dccc =_ffaf ._efcfe .ReadBit ();if _dccc !=nil {return _dccc ;};_ffaf .IsTransposed =int8 (_gbdbg );_dagg ,_dccc =_ffaf ._efcfe .ReadBits (2);if _dccc !=nil {return _dccc ;};_ffaf .ReferenceCorner =int16 (_dagg )&0x3;_dagg ,_dccc =_ffaf ._efcfe .ReadBits (2);
if _dccc !=nil {return _dccc ;};_ffaf .LogSBStrips =int16 (_dagg )&0x3;_ffaf .SbStrips =1<<uint (_ffaf .LogSBStrips );_gbdbg ,_dccc =_ffaf ._efcfe .ReadBit ();if _dccc !=nil {return _dccc ;};if _gbdbg ==1{_ffaf .UseRefinement =true ;};_gbdbg ,_dccc =_ffaf ._efcfe .ReadBit ();
if _dccc !=nil {return _dccc ;};if _gbdbg ==1{_ffaf .IsHuffmanEncoded =true ;};return nil ;};func (_gfb *SymbolDictionary )Init (h *Header ,r *_cc .Reader )error {_gfb .Header =h ;_gfb ._baa =r ;return _gfb .parseHeader ();};func (_gaca *SymbolDictionary )decodeAggregate (_cfaa ,_dbaab uint32 )error {var (_aafd int64 ;
_cadb error ;);if _gaca .IsHuffmanEncoded {_aafd ,_cadb =_gaca .huffDecodeRefAggNInst ();if _cadb !=nil {return _cadb ;};}else {_baad ,_fddc :=_gaca ._gebb .DecodeInt (_gaca ._fdcde );if _fddc !=nil {return _fddc ;};_aafd =int64 (_baad );};if _aafd > 1{return _gaca .decodeThroughTextRegion (_cfaa ,_dbaab ,uint32 (_aafd ));
}else if _aafd ==1{return _gaca .decodeRefinedSymbol (_cfaa ,_dbaab );};return nil ;};func (_bae *GenericRefinementRegion )setParameters (_fed *_ded .DecoderStats ,_ceg *_ded .Decoder ,_gfdg int8 ,_ebgb ,_fda uint32 ,_fad *_ba .Bitmap ,_egdg ,_dbf int32 ,_ccc bool ,_bece []int8 ,_gagd []int8 ){_def .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _fed !=nil {_bae ._ff =_fed ;};if _ceg !=nil {_bae ._ca =_ceg ;};_bae .TemplateID =_gfdg ;_bae .RegionInfo .BitmapWidth =_ebgb ;_bae .RegionInfo .BitmapHeight =_fda ;_bae .ReferenceBitmap =_fad ;_bae .ReferenceDX =_egdg ;_bae .ReferenceDY =_dbf ;_bae .IsTPGROn =_ccc ;
_bae .GrAtX =_bece ;_bae .GrAtY =_gagd ;_bae .RegionBitmap =nil ;_def .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_bae );
};func (_fcfga *PatternDictionary )checkInput ()error {if _fcfga .HdpHeight < 1||_fcfga .HdpWidth < 1{return _fg .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _fcfga .IsMMREncoded {if _fcfga .HDTemplate !=0{_def .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_dgdg *GenericRegion )updateOverrideFlags ()error {const _dfe ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dgdg .GBAtX ==nil ||_dgdg .GBAtY ==nil {return nil ;};
if len (_dgdg .GBAtX )!=len (_dgdg .GBAtY ){return _bdd .Errorf (_dfe ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_dgdg .GBAtX ),len (_dgdg .GBAtY ));
};_dgdg .GBAtOverride =make ([]bool ,len (_dgdg .GBAtX ));switch _dgdg .GBTemplate {case 0:if !_dgdg .UseExtTemplates {if _dgdg .GBAtX [0]!=3||_dgdg .GBAtY [0]!=-1{_dgdg .setOverrideFlag (0);};if _dgdg .GBAtX [1]!=-3||_dgdg .GBAtY [1]!=-1{_dgdg .setOverrideFlag (1);
};if _dgdg .GBAtX [2]!=2||_dgdg .GBAtY [2]!=-2{_dgdg .setOverrideFlag (2);};if _dgdg .GBAtX [3]!=-2||_dgdg .GBAtY [3]!=-2{_dgdg .setOverrideFlag (3);};}else {if _dgdg .GBAtX [0]!=-2||_dgdg .GBAtY [0]!=0{_dgdg .setOverrideFlag (0);};if _dgdg .GBAtX [1]!=0||_dgdg .GBAtY [1]!=-2{_dgdg .setOverrideFlag (1);
};if _dgdg .GBAtX [2]!=-2||_dgdg .GBAtY [2]!=-1{_dgdg .setOverrideFlag (2);};if _dgdg .GBAtX [3]!=-1||_dgdg .GBAtY [3]!=-2{_dgdg .setOverrideFlag (3);};if _dgdg .GBAtX [4]!=1||_dgdg .GBAtY [4]!=-2{_dgdg .setOverrideFlag (4);};if _dgdg .GBAtX [5]!=2||_dgdg .GBAtY [5]!=-1{_dgdg .setOverrideFlag (5);
};if _dgdg .GBAtX [6]!=-3||_dgdg .GBAtY [6]!=0{_dgdg .setOverrideFlag (6);};if _dgdg .GBAtX [7]!=-4||_dgdg .GBAtY [7]!=0{_dgdg .setOverrideFlag (7);};if _dgdg .GBAtX [8]!=2||_dgdg .GBAtY [8]!=-2{_dgdg .setOverrideFlag (8);};if _dgdg .GBAtX [9]!=3||_dgdg .GBAtY [9]!=-1{_dgdg .setOverrideFlag (9);
};if _dgdg .GBAtX [10]!=-2||_dgdg .GBAtY [10]!=-2{_dgdg .setOverrideFlag (10);};if _dgdg .GBAtX [11]!=-3||_dgdg .GBAtY [11]!=-1{_dgdg .setOverrideFlag (11);};};case 1:if _dgdg .GBAtX [0]!=3||_dgdg .GBAtY [0]!=-1{_dgdg .setOverrideFlag (0);};case 2:if _dgdg .GBAtX [0]!=2||_dgdg .GBAtY [0]!=-1{_dgdg .setOverrideFlag (0);
};case 3:if _dgdg .GBAtX [0]!=2||_dgdg .GBAtY [0]!=-1{_dgdg .setOverrideFlag (0);};};return nil ;};func (_dbgc *TableSegment )parseHeader ()error {var (_fffc int ;_bbebg uint64 ;_agaag error ;);_fffc ,_agaag =_dbgc ._dccb .ReadBit ();if _agaag !=nil {return _agaag ;
};if _fffc ==1{return _da .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_fffc );
};if _bbebg ,_agaag =_dbgc ._dccb .ReadBits (3);_agaag !=nil {return _agaag ;};_dbgc ._gfda =(int32 (_bbebg )+1)&0xf;if _bbebg ,_agaag =_dbgc ._dccb .ReadBits (3);_agaag !=nil {return _agaag ;};_dbgc ._bfca =(int32 (_bbebg )+1)&0xf;if _bbebg ,_agaag =_dbgc ._dccb .ReadBits (32);
_agaag !=nil {return _agaag ;};_dbgc ._fggd =int32 (_bbebg &_c .MaxInt32 );if _bbebg ,_agaag =_dbgc ._dccb .ReadBits (32);_agaag !=nil {return _agaag ;};_dbgc ._aebe =int32 (_bbebg &_c .MaxInt32 );return nil ;};func (_gabg *SymbolDictionary )readNumberOfNewSymbols ()error {_bbac ,_ccbf :=_gabg ._baa .ReadBits (32);
if _ccbf !=nil {return _ccbf ;};_gabg .NumberOfNewSymbols =uint32 (_bbac &_c .MaxUint32 );return nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_bcde *TextRegion )initSymbols ()error {const _bgbcb ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_ggdc :=range _bcde .Header .RTSegments {if _ggdc ==nil {return _bdd .Error (_bgbcb ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _ggdc .Type ==0{_afdd ,_cbaag :=_ggdc .GetSegmentData ();if _cbaag !=nil {return _bdd .Wrap (_cbaag ,_bgbcb ,"");};_cgegg ,_egbe :=_afdd .(*SymbolDictionary );if !_egbe {return _bdd .Error (_bgbcb ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cgegg ._cace =_bcde ._fgda ;_dacab ,_cbaag :=_cgegg .GetDictionary ();if _cbaag !=nil {return _bdd .Wrap (_cbaag ,_bgbcb ,"");};_bcde .Symbols =append (_bcde .Symbols ,_dacab ...);};};_bcde .NumberOfSymbols =uint32 (len (_bcde .Symbols ));return nil ;
};func (_cfa *GenericRefinementRegion )decodeTemplate (_bfa ,_bef ,_aa ,_fdcb ,_bdf ,_cad ,_fee ,_daag ,_ddf ,_ebgf int ,_geee templater )(_bca error ){var (_abg ,_egcd ,_gfg ,_cce ,_bbc int16 ;_gfc ,_fcad ,_bfd ,_cbff int ;_eede byte ;);if _ddf >=1&&(_ddf -1)< _cfa .ReferenceBitmap .Height {_eede ,_bca =_cfa .ReferenceBitmap .GetByte (_ebgf -_fdcb );
if _bca !=nil {return _bca ;};_gfc =int (_eede );};if _ddf >=0&&(_ddf )< _cfa .ReferenceBitmap .Height {_eede ,_bca =_cfa .ReferenceBitmap .GetByte (_ebgf );if _bca !=nil {return _bca ;};_fcad =int (_eede );};if _ddf >=-1&&(_ddf +1)< _cfa .ReferenceBitmap .Height {_eede ,_bca =_cfa .ReferenceBitmap .GetByte (_ebgf +_fdcb );
if _bca !=nil {return _bca ;};_bfd =int (_eede );};_ebgf ++;if _bfa >=1{_eede ,_bca =_cfa .RegionBitmap .GetByte (_daag -_aa );if _bca !=nil {return _bca ;};_cbff =int (_eede );};_daag ++;_gag :=_cfa .ReferenceDX %8;_eag :=6+_gag ;_bga :=_ebgf %_fdcb ;
if _eag >=0{if _eag < 8{_abg =int16 (_gfc >>uint (_eag ))&0x07;};if _eag < 8{_egcd =int16 (_fcad >>uint (_eag ))&0x07;};if _eag < 8{_gfg =int16 (_bfd >>uint (_eag ))&0x07;};if _eag ==6&&_bga > 1{if _ddf >=1&&(_ddf -1)< _cfa .ReferenceBitmap .Height {_eede ,_bca =_cfa .ReferenceBitmap .GetByte (_ebgf -_fdcb -2);
if _bca !=nil {return _bca ;};_abg |=int16 (_eede <<2)&0x04;};if _ddf >=0&&_ddf < _cfa .ReferenceBitmap .Height {_eede ,_bca =_cfa .ReferenceBitmap .GetByte (_ebgf -2);if _bca !=nil {return _bca ;};_egcd |=int16 (_eede <<2)&0x04;};if _ddf >=-1&&_ddf +1< _cfa .ReferenceBitmap .Height {_eede ,_bca =_cfa .ReferenceBitmap .GetByte (_ebgf +_fdcb -2);
if _bca !=nil {return _bca ;};_gfg |=int16 (_eede <<2)&0x04;};};if _eag ==0{_gfc =0;_fcad =0;_bfd =0;if _bga < _fdcb -1{if _ddf >=1&&_ddf -1< _cfa .ReferenceBitmap .Height {_eede ,_bca =_cfa .ReferenceBitmap .GetByte (_ebgf -_fdcb );if _bca !=nil {return _bca ;
};_gfc =int (_eede );};if _ddf >=0&&_ddf < _cfa .ReferenceBitmap .Height {_eede ,_bca =_cfa .ReferenceBitmap .GetByte (_ebgf );if _bca !=nil {return _bca ;};_fcad =int (_eede );};if _ddf >=-1&&_ddf +1< _cfa .ReferenceBitmap .Height {_eede ,_bca =_cfa .ReferenceBitmap .GetByte (_ebgf +_fdcb );
if _bca !=nil {return _bca ;};_bfd =int (_eede );};};_ebgf ++;};}else {_abg =int16 (_gfc <<1)&0x07;_egcd =int16 (_fcad <<1)&0x07;_gfg =int16 (_bfd <<1)&0x07;_gfc =0;_fcad =0;_bfd =0;if _bga < _fdcb -1{if _ddf >=1&&_ddf -1< _cfa .ReferenceBitmap .Height {_eede ,_bca =_cfa .ReferenceBitmap .GetByte (_ebgf -_fdcb );
if _bca !=nil {return _bca ;};_gfc =int (_eede );};if _ddf >=0&&_ddf < _cfa .ReferenceBitmap .Height {_eede ,_bca =_cfa .ReferenceBitmap .GetByte (_ebgf );if _bca !=nil {return _bca ;};_fcad =int (_eede );};if _ddf >=-1&&_ddf +1< _cfa .ReferenceBitmap .Height {_eede ,_bca =_cfa .ReferenceBitmap .GetByte (_ebgf +_fdcb );
if _bca !=nil {return _bca ;};_bfd =int (_eede );};_ebgf ++;};_abg |=int16 ((_gfc >>7)&0x07);_egcd |=int16 ((_fcad >>7)&0x07);_gfg |=int16 ((_bfd >>7)&0x07);};_cce =int16 (_cbff >>6);_bbc =0;_bec :=(2-_gag )%8;_gfc <<=uint (_bec );_fcad <<=uint (_bec );
_bfd <<=uint (_bec );_cbff <<=2;var _ebf int ;for _aeg :=0;_aeg < _bef ;_aeg ++{_cacc :=_aeg &0x07;_bgc :=_geee .form (_abg ,_egcd ,_gfg ,_cce ,_bbc );if _cfa ._fga {_eede ,_bca =_cfa .RegionBitmap .GetByte (_cfa .RegionBitmap .GetByteIndex (_aeg ,_bfa ));
if _bca !=nil {return _bca ;};_cfa ._ff .SetIndex (int32 (_cfa .overrideAtTemplate0 (int (_bgc ),_aeg ,_bfa ,int (_eede ),_cacc )));}else {_cfa ._ff .SetIndex (int32 (_bgc ));};_ebf ,_bca =_cfa ._ca .DecodeBit (_cfa ._ff );if _bca !=nil {return _bca ;};
if _bca =_cfa .RegionBitmap .SetPixel (_aeg ,_bfa ,byte (_ebf ));_bca !=nil {return _bca ;};_abg =((_abg <<1)|0x01&int16 (_gfc >>7))&0x07;_egcd =((_egcd <<1)|0x01&int16 (_fcad >>7))&0x07;_gfg =((_gfg <<1)|0x01&int16 (_bfd >>7))&0x07;_cce =((_cce <<1)|0x01&int16 (_cbff >>7))&0x07;
_bbc =int16 (_ebf );if (_aeg -int (_cfa .ReferenceDX ))%8==5{_gfc =0;_fcad =0;_bfd =0;if ((_aeg -int (_cfa .ReferenceDX ))/8)+1< _cfa .ReferenceBitmap .RowStride {if _ddf >=1&&(_ddf -1)< _cfa .ReferenceBitmap .Height {_eede ,_bca =_cfa .ReferenceBitmap .GetByte (_ebgf -_fdcb );
if _bca !=nil {return _bca ;};_gfc =int (_eede );};if _ddf >=0&&_ddf < _cfa .ReferenceBitmap .Height {_eede ,_bca =_cfa .ReferenceBitmap .GetByte (_ebgf );if _bca !=nil {return _bca ;};_fcad =int (_eede );};if _ddf >=-1&&(_ddf +1)< _cfa .ReferenceBitmap .Height {_eede ,_bca =_cfa .ReferenceBitmap .GetByte (_ebgf +_fdcb );
if _bca !=nil {return _bca ;};_bfd =int (_eede );};};_ebgf ++;}else {_gfc <<=1;_fcad <<=1;_bfd <<=1;};if _cacc ==5&&_bfa >=1{if ((_aeg >>3)+1)>=_cfa .RegionBitmap .RowStride {_cbff =0;}else {_eede ,_bca =_cfa .RegionBitmap .GetByte (_daag -_aa );if _bca !=nil {return _bca ;
};_cbff =int (_eede );};_daag ++;}else {_cbff <<=1;};};return nil ;};type template0 struct{};func (_cbbg *PageInformationSegment )readCombinationOperator ()error {_bace ,_gedbf :=_cbbg ._bcfg .ReadBits (2);if _gedbf !=nil {return _gedbf ;};_cbbg ._bdad =_ba .CombinationOperator (int (_bace ));
return nil ;};type TextRegion struct{_efcfe *_cc .Reader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _ba .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;
IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_gcbc int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;
RegionBitmap *_ba .Bitmap ;Symbols []*_ba .Bitmap ;_aabe *_ded .Decoder ;_bada *GenericRefinementRegion ;_aagbf *_ded .DecoderStats ;_fbdbb *_ded .DecoderStats ;_gdgcb *_ded .DecoderStats ;_gfbb *_ded .DecoderStats ;_adecb *_ded .DecoderStats ;_dgdeca *_ded .DecoderStats ;
_cccfb *_ded .DecoderStats ;_fgda *_ded .DecoderStats ;_eebb *_ded .DecoderStats ;_gfee *_ded .DecoderStats ;_cfab *_ded .DecoderStats ;_cbbdf int8 ;_dadaf *_gee .FixedSizeTable ;Header *Header ;_dded _gee .Tabler ;_adc _gee .Tabler ;_eagdf _gee .Tabler ;
_fbgf _gee .Tabler ;_gaef _gee .Tabler ;_gbcg _gee .Tabler ;_ccggb _gee .Tabler ;_dage _gee .Tabler ;_afce ,_aceag map[int ]int ;_gaedc []int ;_fbac *_ba .Points ;_gaadb *_ba .Bitmaps ;_affb *_bd .IntSlice ;_fbce ,_dacac int ;_bccd *_ba .Boxes ;};func (_cdda *SymbolDictionary )setCodingStatistics ()error {if _cdda ._dgbed ==nil {_cdda ._dgbed =_ded .NewStats (512,1);
};if _cdda ._ccbe ==nil {_cdda ._ccbe =_ded .NewStats (512,1);};if _cdda ._bcagb ==nil {_cdda ._bcagb =_ded .NewStats (512,1);};if _cdda ._fdcde ==nil {_cdda ._fdcde =_ded .NewStats (512,1);};if _cdda ._bdbeb ==nil {_cdda ._bdbeb =_ded .NewStats (512,1);
};if _cdda .UseRefinementAggregation &&_cdda ._cace ==nil {_cdda ._cace =_ded .NewStats (1<<uint (_cdda ._acfd ),1);_cdda ._bgcb =_ded .NewStats (512,1);_cdda ._egfg =_ded .NewStats (512,1);};if _cdda ._ffad ==nil {_cdda ._ffad =_ded .NewStats (65536,1);
};if _cdda ._gebb ==nil {var _dgfea error ;_cdda ._gebb ,_dgfea =_ded .New (_cdda ._baa );if _dgfea !=nil {return _dgfea ;};};return nil ;};func (_cbc *Header )writeFlags (_caac _cc .BinaryWriter )(_bfbba error ){const _eecg ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_bffb :=byte (_cbc .Type );if _bfbba =_caac .WriteByte (_bffb );_bfbba !=nil {return _bdd .Wrap (_bfbba ,_eecg ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_cbc .RetainFlag &&!_cbc .PageAssociationFieldSize {return nil ;};if _bfbba =_caac .SkipBits (-8);_bfbba !=nil {return _bdd .Wrap (_bfbba ,_eecg ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _acec int ;if _cbc .RetainFlag {_acec =1;};if _bfbba =_caac .WriteBit (_acec );_bfbba !=nil {return _bdd .Wrap (_bfbba ,_eecg ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_acec =0;
if _cbc .PageAssociationFieldSize {_acec =1;};if _bfbba =_caac .WriteBit (_acec );_bfbba !=nil {return _bdd .Wrap (_bfbba ,_eecg ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_caac .FinishByte ();
return nil ;};type EndOfStripe struct{_gc *_cc .Reader ;_ga int ;};func (_bgac *TextRegion )checkInput ()error {const _cgge ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_bgac .UseRefinement {if _bgac .SbrTemplate !=0{_def .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_bgac .SbrTemplate =0;};};if _bgac .SbHuffFS ==2||_bgac .SbHuffRDWidth ==2||_bgac .SbHuffRDHeight ==2||_bgac .SbHuffRDX ==2||_bgac .SbHuffRDY ==2{return _bdd .Error (_cgge ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_bgac .UseRefinement {if _bgac .SbHuffRSize !=0{_def .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_bgac .SbHuffRSize =0;};if _bgac .SbHuffRDY !=0{_def .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_bgac .SbHuffRDY =0;};if _bgac .SbHuffRDX !=0{_def .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_bgac .SbHuffRDX =0;};if _bgac .SbHuffRDWidth !=0{_def .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_bgac .SbHuffRDWidth =0;};if _bgac .SbHuffRDHeight !=0{_def .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_bgac .SbHuffRDHeight =0;};};
return nil ;};func (_ecfb *HalftoneRegion )computeGrayScalePlanes (_bfba []*_ba .Bitmap ,_bbaf int )([][]int ,error ){_bgecea :=make ([][]int ,_ecfb .HGridHeight );for _gegb :=0;_gegb < len (_bgecea );_gegb ++{_bgecea [_gegb ]=make ([]int ,_ecfb .HGridWidth );
};for _gca :=0;_gca < int (_ecfb .HGridHeight );_gca ++{for _fcfb :=0;_fcfb < int (_ecfb .HGridWidth );_fcfb +=8{var _eeda int ;if _bcf :=int (_ecfb .HGridWidth )-_fcfb ;_bcf > 8{_eeda =8;}else {_eeda =_bcf ;};_aaf :=_bfba [0].GetByteIndex (_fcfb ,_gca );
for _cae :=0;_cae < _eeda ;_cae ++{_dcg :=_cae +_fcfb ;_bgecea [_gca ][_dcg ]=0;for _bged :=0;_bged < _bbaf ;_bged ++{_daage ,_cbe :=_bfba [_bged ].GetByte (_aaf );if _cbe !=nil {return nil ,_cbe ;};_gegc :=_daage >>uint (7-_dcg &7);_cccd :=_gegc &1;_dgce :=1<<uint (_bged );
_eecf :=int (_cccd )*_dgce ;_bgecea [_gca ][_dcg ]+=_eecf ;};};};};return _bgecea ,nil ;};func (_cegf *TextRegion )GetRegionInfo ()*RegionSegment {return _cegf .RegionInfo };type PatternDictionary struct{_cfbg *_cc .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;
DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_ba .Bitmap ;GrayMax uint32 ;};func (_gcaee *TextRegion )setParameters (_gffca *_ded .Decoder ,_bafdb ,_aaad bool ,_egga ,_cgc uint32 ,_agec uint32 ,_edbae int8 ,_gaga uint32 ,_bdbb int8 ,_agfa _ba .CombinationOperator ,_feg int8 ,_eac int16 ,_cfba ,_efag ,_bdeg ,_bagf ,_gdae ,_efdf ,_cggc ,_gfdd ,_caffa ,_dgef int8 ,_eegg ,_gcfg []int8 ,_afef []*_ba .Bitmap ,_abde int8 ){_gcaee ._aabe =_gffca ;
_gcaee .IsHuffmanEncoded =_bafdb ;_gcaee .UseRefinement =_aaad ;_gcaee .RegionInfo .BitmapWidth =_egga ;_gcaee .RegionInfo .BitmapHeight =_cgc ;_gcaee .NumberOfSymbolInstances =_agec ;_gcaee .SbStrips =_edbae ;_gcaee .NumberOfSymbols =_gaga ;_gcaee .DefaultPixel =_bdbb ;
_gcaee .CombinationOperator =_agfa ;_gcaee .IsTransposed =_feg ;_gcaee .ReferenceCorner =_eac ;_gcaee .SbDsOffset =_cfba ;_gcaee .SbHuffFS =_efag ;_gcaee .SbHuffDS =_bdeg ;_gcaee .SbHuffDT =_bagf ;_gcaee .SbHuffRDWidth =_gdae ;_gcaee .SbHuffRDHeight =_efdf ;
_gcaee .SbHuffRSize =_caffa ;_gcaee .SbHuffRDX =_cggc ;_gcaee .SbHuffRDY =_gfdd ;_gcaee .SbrTemplate =_dgef ;_gcaee .SbrATX =_eegg ;_gcaee .SbrATY =_gcfg ;_gcaee .Symbols =_afef ;_gcaee ._cbbdf =_abde ;};const (ORandom OrganizationType =iota ;OSequential ;
);func (_fbag *GenericRegion )setParameters (_gbb bool ,_cbb ,_deff int64 ,_faca ,_gebe uint32 ){_fbag .IsMMREncoded =_gbb ;_fbag .DataOffset =_cbb ;_fbag .DataLength =_deff ;_fbag .RegionSegment .BitmapHeight =_faca ;_fbag .RegionSegment .BitmapWidth =_gebe ;
_fbag ._ccf =nil ;_fbag .Bitmap =nil ;};func (_adgeg *HalftoneRegion )grayScaleDecoding (_cee int )([][]int ,error ){var (_fgbc []int8 ;_daac []int8 ;);if !_adgeg .IsMMREncoded {_fgbc =make ([]int8 ,4);_daac =make ([]int8 ,4);if _adgeg .HTemplate <=1{_fgbc [0]=3;
}else if _adgeg .HTemplate >=2{_fgbc [0]=2;};_daac [0]=-1;_fgbc [1]=-3;_daac [1]=-1;_fgbc [2]=2;_daac [2]=-2;_fgbc [3]=-2;_daac [3]=-2;};_bda :=make ([]*_ba .Bitmap ,_cee );_deae :=NewGenericRegion (_adgeg ._dfa );_deae .setParametersMMR (_adgeg .IsMMREncoded ,_adgeg .DataOffset ,_adgeg .DataLength ,_adgeg .HGridHeight ,_adgeg .HGridWidth ,_adgeg .HTemplate ,false ,_adgeg .HSkipEnabled ,_fgbc ,_daac );
_dadg :=_cee -1;var _eedca error ;_bda [_dadg ],_eedca =_deae .GetRegionBitmap ();if _eedca !=nil {return nil ,_eedca ;};for _dadg > 0{_dadg --;_deae .Bitmap =nil ;_bda [_dadg ],_eedca =_deae .GetRegionBitmap ();if _eedca !=nil {return nil ,_eedca ;};if _eedca =_adgeg .combineGrayscalePlanes (_bda ,_dadg );
_eedca !=nil {return nil ,_eedca ;};};return _adgeg .computeGrayScalePlanes (_bda ,_cee );};func (_dfbfb *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _dfbfb .SdHuffDecodeHeightSelection {case 0:_eaeg ,_afbca :=_gee .GetStandardTable (4);
if _afbca !=nil {return 0,_afbca ;};return _eaeg .Decode (_dfbfb ._baa );case 1:_dbaf ,_bgfb :=_gee .GetStandardTable (5);if _bgfb !=nil {return 0,_bgfb ;};return _dbaf .Decode (_dfbfb ._baa );case 3:if _dfbfb ._dabg ==nil {_bdbgf ,_cbdb :=_gee .GetStandardTable (0);
if _cbdb !=nil {return 0,_cbdb ;};_dfbfb ._dabg =_bdbgf ;};return _dfbfb ._dabg .Decode (_dfbfb ._baa );};return 0,nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;
TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;
TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;
);type Regioner interface{GetRegionBitmap ()(*_ba .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_abgd *PatternDictionary )extractPatterns (_gbabd *_ba .Bitmap )error {var _bdcc int ;_agge :=make ([]*_ba .Bitmap ,_abgd .GrayMax +1);for _bdcc <=int (_abgd .GrayMax ){_acab :=int (_abgd .HdpWidth )*_bdcc ;
_caaa :=_ge .Rect (_acab ,0,_acab +int (_abgd .HdpWidth ),int (_abgd .HdpHeight ));_fbeg ,_ggcf :=_ba .Extract (_caaa ,_gbabd );if _ggcf !=nil {return _ggcf ;};_agge [_bdcc ]=_fbeg ;_bdcc ++;};_abgd .Patterns =_agge ;return nil ;};type SymbolDictionary struct{_baa *_cc .Reader ;
SdrTemplate int8 ;SdTemplate int8 ;_badg bool ;_gbabdg bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;
SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_fdee uint32 ;_bgeg []*_ba .Bitmap ;_aadc uint32 ;_ebgfa []*_ba .Bitmap ;_dabg _gee .Tabler ;_gdc _gee .Tabler ;_gebg _gee .Tabler ;_afea _gee .Tabler ;
_dfee []*_ba .Bitmap ;_dffg []*_ba .Bitmap ;_gebb *_ded .Decoder ;_ebcc *TextRegion ;_gcgg *GenericRegion ;_fcbcc *GenericRefinementRegion ;_ffad *_ded .DecoderStats ;_ccbe *_ded .DecoderStats ;_bcagb *_ded .DecoderStats ;_fdcde *_ded .DecoderStats ;_bdbeb *_ded .DecoderStats ;
_bgcb *_ded .DecoderStats ;_egfg *_ded .DecoderStats ;_dgbed *_ded .DecoderStats ;_cace *_ded .DecoderStats ;_acfd int8 ;_aggee *_ba .Bitmaps ;_bbgd []int ;_gfded map[int ]int ;_aadd bool ;};func (_ead *SymbolDictionary )setRefinementAtPixels ()error {if !_ead .UseRefinementAggregation ||_ead .SdrTemplate !=0{return nil ;
};if _acca :=_ead .readRefinementAtPixels (2);_acca !=nil {return _acca ;};return nil ;};func (_abgg *GenericRegion )overrideAtTemplate0b (_fabbf ,_faf ,_ecb ,_bdg ,_cbdc ,_fcgde int )int {if _abgg .GBAtOverride [0]{_fabbf &=0xFFFD;if _abgg .GBAtY [0]==0&&_abgg .GBAtX [0]>=-int8 (_cbdc ){_fabbf |=(_bdg >>uint (int8 (_fcgde )-_abgg .GBAtX [0]&0x1))<<1;
}else {_fabbf |=int (_abgg .getPixel (_faf +int (_abgg .GBAtX [0]),_ecb +int (_abgg .GBAtY [0])))<<1;};};if _abgg .GBAtOverride [1]{_fabbf &=0xDFFF;if _abgg .GBAtY [1]==0&&_abgg .GBAtX [1]>=-int8 (_cbdc ){_fabbf |=(_bdg >>uint (int8 (_fcgde )-_abgg .GBAtX [1]&0x1))<<13;
}else {_fabbf |=int (_abgg .getPixel (_faf +int (_abgg .GBAtX [1]),_ecb +int (_abgg .GBAtY [1])))<<13;};};if _abgg .GBAtOverride [2]{_fabbf &=0xFDFF;if _abgg .GBAtY [2]==0&&_abgg .GBAtX [2]>=-int8 (_cbdc ){_fabbf |=(_bdg >>uint (int8 (_fcgde )-_abgg .GBAtX [2]&0x1))<<9;
}else {_fabbf |=int (_abgg .getPixel (_faf +int (_abgg .GBAtX [2]),_ecb +int (_abgg .GBAtY [2])))<<9;};};if _abgg .GBAtOverride [3]{_fabbf &=0xBFFF;if _abgg .GBAtY [3]==0&&_abgg .GBAtX [3]>=-int8 (_cbdc ){_fabbf |=(_bdg >>uint (int8 (_fcgde )-_abgg .GBAtX [3]&0x1))<<14;
}else {_fabbf |=int (_abgg .getPixel (_faf +int (_abgg .GBAtX [3]),_ecb +int (_abgg .GBAtY [3])))<<14;};};if _abgg .GBAtOverride [4]{_fabbf &=0xEFFF;if _abgg .GBAtY [4]==0&&_abgg .GBAtX [4]>=-int8 (_cbdc ){_fabbf |=(_bdg >>uint (int8 (_fcgde )-_abgg .GBAtX [4]&0x1))<<12;
}else {_fabbf |=int (_abgg .getPixel (_faf +int (_abgg .GBAtX [4]),_ecb +int (_abgg .GBAtY [4])))<<12;};};if _abgg .GBAtOverride [5]{_fabbf &=0xFFDF;if _abgg .GBAtY [5]==0&&_abgg .GBAtX [5]>=-int8 (_cbdc ){_fabbf |=(_bdg >>uint (int8 (_fcgde )-_abgg .GBAtX [5]&0x1))<<5;
}else {_fabbf |=int (_abgg .getPixel (_faf +int (_abgg .GBAtX [5]),_ecb +int (_abgg .GBAtY [5])))<<5;};};if _abgg .GBAtOverride [6]{_fabbf &=0xFFFB;if _abgg .GBAtY [6]==0&&_abgg .GBAtX [6]>=-int8 (_cbdc ){_fabbf |=(_bdg >>uint (int8 (_fcgde )-_abgg .GBAtX [6]&0x1))<<2;
}else {_fabbf |=int (_abgg .getPixel (_faf +int (_abgg .GBAtX [6]),_ecb +int (_abgg .GBAtY [6])))<<2;};};if _abgg .GBAtOverride [7]{_fabbf &=0xFFF7;if _abgg .GBAtY [7]==0&&_abgg .GBAtX [7]>=-int8 (_cbdc ){_fabbf |=(_bdg >>uint (int8 (_fcgde )-_abgg .GBAtX [7]&0x1))<<3;
}else {_fabbf |=int (_abgg .getPixel (_faf +int (_abgg .GBAtX [7]),_ecb +int (_abgg .GBAtY [7])))<<3;};};if _abgg .GBAtOverride [8]{_fabbf &=0xF7FF;if _abgg .GBAtY [8]==0&&_abgg .GBAtX [8]>=-int8 (_cbdc ){_fabbf |=(_bdg >>uint (int8 (_fcgde )-_abgg .GBAtX [8]&0x1))<<11;
}else {_fabbf |=int (_abgg .getPixel (_faf +int (_abgg .GBAtX [8]),_ecb +int (_abgg .GBAtY [8])))<<11;};};if _abgg .GBAtOverride [9]{_fabbf &=0xFFEF;if _abgg .GBAtY [9]==0&&_abgg .GBAtX [9]>=-int8 (_cbdc ){_fabbf |=(_bdg >>uint (int8 (_fcgde )-_abgg .GBAtX [9]&0x1))<<4;
}else {_fabbf |=int (_abgg .getPixel (_faf +int (_abgg .GBAtX [9]),_ecb +int (_abgg .GBAtY [9])))<<4;};};if _abgg .GBAtOverride [10]{_fabbf &=0x7FFF;if _abgg .GBAtY [10]==0&&_abgg .GBAtX [10]>=-int8 (_cbdc ){_fabbf |=(_bdg >>uint (int8 (_fcgde )-_abgg .GBAtX [10]&0x1))<<15;
}else {_fabbf |=int (_abgg .getPixel (_faf +int (_abgg .GBAtX [10]),_ecb +int (_abgg .GBAtY [10])))<<15;};};if _abgg .GBAtOverride [11]{_fabbf &=0xFDFF;if _abgg .GBAtY [11]==0&&_abgg .GBAtX [11]>=-int8 (_cbdc ){_fabbf |=(_bdg >>uint (int8 (_fcgde )-_abgg .GBAtX [11]&0x1))<<10;
}else {_fabbf |=int (_abgg .getPixel (_faf +int (_abgg .GBAtX [11]),_ecb +int (_abgg .GBAtY [11])))<<10;};};return _fabbf ;};func (_aaec *RegionSegment )Size ()int {return 17};func (_gbaba *TextRegion )decodeDT ()(_fcgdaf int64 ,_gbce error ){if _gbaba .IsHuffmanEncoded {if _gbaba .SbHuffDT ==3{_fcgdaf ,_gbce =_gbaba ._eagdf .Decode (_gbaba ._efcfe );
if _gbce !=nil {return 0,_gbce ;};}else {var _afffb _gee .Tabler ;_afffb ,_gbce =_gee .GetStandardTable (11+int (_gbaba .SbHuffDT ));if _gbce !=nil {return 0,_gbce ;};_fcgdaf ,_gbce =_afffb .Decode (_gbaba ._efcfe );if _gbce !=nil {return 0,_gbce ;};};
}else {var _dbadb int32 ;_dbadb ,_gbce =_gbaba ._aabe .DecodeInt (_gbaba ._aagbf );if _gbce !=nil {return 0,_gbce ;};_fcgdaf =int64 (_dbadb );};_fcgdaf *=int64 (_gbaba .SbStrips );return _fcgdaf ,nil ;};var _ templater =&template0 {};func (_ggeb *TextRegion )decodeDfs ()(int64 ,error ){if _ggeb .IsHuffmanEncoded {if _ggeb .SbHuffFS ==3{if _ggeb ._dded ==nil {var _bgfc error ;
_ggeb ._dded ,_bgfc =_ggeb .getUserTable (0);if _bgfc !=nil {return 0,_bgfc ;};};return _ggeb ._dded .Decode (_ggeb ._efcfe );};_ecfa ,_dae :=_gee .GetStandardTable (6+int (_ggeb .SbHuffFS ));if _dae !=nil {return 0,_dae ;};return _ecfa .Decode (_ggeb ._efcfe );
};_agee ,_gagc :=_ggeb ._aabe .DecodeInt (_ggeb ._fbdbb );if _gagc !=nil {return 0,_gagc ;};return int64 (_agee ),nil ;};func (_cgff *Header )readHeaderFlags ()error {const _bcdd ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_fcgda ,_abeb :=_cgff .Reader .ReadBit ();if _abeb !=nil {return _bdd .Wrap (_abeb ,_bcdd ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _fcgda !=0{_cgff .RetainFlag =true ;};_fcgda ,_abeb =_cgff .Reader .ReadBit ();if _abeb !=nil {return _bdd .Wrap (_abeb ,_bcdd ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _fcgda !=0{_cgff .PageAssociationFieldSize =true ;};_dbg ,_abeb :=_cgff .Reader .ReadBits (6);if _abeb !=nil {return _bdd .Wrap (_abeb ,_bcdd ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_cgff .Type =Type (int (_dbg ));
return nil ;};func (_fgfe *HalftoneRegion )computeX (_fdagb ,_cfb int )int {return _fgfe .shiftAndFill (int (_fgfe .HGridX )+_fdagb *int (_fgfe .HRegionY )+_cfb *int (_fgfe .HRegionX ));};func (_cege *Header )readDataStartOffset (_fdf *_cc .Reader ,_cfed OrganizationType ){if _cfed ==OSequential {_cege .SegmentDataStartOffset =uint64 (_fdf .AbsolutePosition ());
};};func (_fgd *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_dbeb ,_efcdd :=_fgd ._bcfg .ReadBit ();if _efcdd !=nil {return _efcdd ;};if _dbeb ==1{_fgd ._eff =true ;};return nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;
RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader *_cc .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};
func (_badd *TextRegion )decodeIb (_bdceb ,_bgbe int64 )(*_ba .Bitmap ,error ){const _gabga ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_afeab error ;_deefe *_ba .Bitmap ;);if _bdceb ==0{if int (_bgbe )> len (_badd .Symbols )-1{return nil ,_bdd .Error (_gabga ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _badd .Symbols [int (_bgbe )],nil ;};var _fbegg ,_dbbb ,_aeddd ,_ecba int64 ;_fbegg ,_afeab =_badd .decodeRdw ();if _afeab !=nil {return nil ,_bdd .Wrap (_afeab ,_gabga ,"");};_dbbb ,_afeab =_badd .decodeRdh ();if _afeab !=nil {return nil ,_bdd .Wrap (_afeab ,_gabga ,"");
};_aeddd ,_afeab =_badd .decodeRdx ();if _afeab !=nil {return nil ,_bdd .Wrap (_afeab ,_gabga ,"");};_ecba ,_afeab =_badd .decodeRdy ();if _afeab !=nil {return nil ,_bdd .Wrap (_afeab ,_gabga ,"");};if _badd .IsHuffmanEncoded {if _ ,_afeab =_badd .decodeSymInRefSize ();
_afeab !=nil {return nil ,_bdd .Wrap (_afeab ,_gabga ,"");};_badd ._efcfe .Align ();};_edcd :=_badd .Symbols [_bgbe ];_dedeff :=uint32 (_edcd .Width );_gdeg :=uint32 (_edcd .Height );_cdgfb :=int32 (uint32 (_fbegg )>>1)+int32 (_aeddd );_ecga :=int32 (uint32 (_dbbb )>>1)+int32 (_ecba );
if _badd ._bada ==nil {_badd ._bada =_fdcd (_badd ._efcfe ,nil );};_badd ._bada .setParameters (_badd ._cfab ,_badd ._aabe ,_badd .SbrTemplate ,_dedeff +uint32 (_fbegg ),_gdeg +uint32 (_dbbb ),_edcd ,_cdgfb ,_ecga ,false ,_badd .SbrATX ,_badd .SbrATY );
_deefe ,_afeab =_badd ._bada .GetRegionBitmap ();if _afeab !=nil {return nil ,_bdd .Wrap (_afeab ,_gabga ,"\u0067\u0072\u0066");};if _badd .IsHuffmanEncoded {_badd ._efcfe .Align ();};return _deefe ,nil ;};func (_acdd *SymbolDictionary )GetDictionary ()([]*_ba .Bitmap ,error ){_def .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_def .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_def .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_acdd ._dfee ,_acdd ._ebgfa );
}();if _acdd ._dfee ==nil {var _gcbd error ;if _acdd .UseRefinementAggregation {_acdd ._acfd =_acdd .getSbSymCodeLen ();};if !_acdd .IsHuffmanEncoded {if _gcbd =_acdd .setCodingStatistics ();_gcbd !=nil {return nil ,_gcbd ;};};_acdd ._ebgfa =make ([]*_ba .Bitmap ,_acdd .NumberOfNewSymbols );
var _fdca []int ;if _acdd .IsHuffmanEncoded &&!_acdd .UseRefinementAggregation {_fdca =make ([]int ,_acdd .NumberOfNewSymbols );};if _gcbd =_acdd .setSymbolsArray ();_gcbd !=nil {return nil ,_gcbd ;};var _efa ,_dgecg int64 ;_acdd ._aadc =0;for _acdd ._aadc < _acdd .NumberOfNewSymbols {_dgecg ,_gcbd =_acdd .decodeHeightClassDeltaHeight ();
if _gcbd !=nil {return nil ,_gcbd ;};_efa +=_dgecg ;var _gcdb ,_fabbg uint32 ;_ecdb :=int64 (_acdd ._aadc );for {var _bbgf int64 ;_bbgf ,_gcbd =_acdd .decodeDifferenceWidth ();if _fg .Is (_gcbd ,_gf .ErrOOB ){break ;};if _gcbd !=nil {return nil ,_gcbd ;
};if _acdd ._aadc >=_acdd .NumberOfNewSymbols {break ;};_gcdb +=uint32 (_bbgf );_fabbg +=_gcdb ;if !_acdd .IsHuffmanEncoded ||_acdd .UseRefinementAggregation {if !_acdd .UseRefinementAggregation {_gcbd =_acdd .decodeDirectlyThroughGenericRegion (_gcdb ,uint32 (_efa ));
if _gcbd !=nil {return nil ,_gcbd ;};}else {_gcbd =_acdd .decodeAggregate (_gcdb ,uint32 (_efa ));if _gcbd !=nil {return nil ,_gcbd ;};};}else if _acdd .IsHuffmanEncoded &&!_acdd .UseRefinementAggregation {_fdca [_acdd ._aadc ]=int (_gcdb );};_acdd ._aadc ++;
};if _acdd .IsHuffmanEncoded &&!_acdd .UseRefinementAggregation {var _aedb int64 ;if _acdd .SdHuffBMSizeSelection ==0{var _efdb _gee .Tabler ;_efdb ,_gcbd =_gee .GetStandardTable (1);if _gcbd !=nil {return nil ,_gcbd ;};_aedb ,_gcbd =_efdb .Decode (_acdd ._baa );
if _gcbd !=nil {return nil ,_gcbd ;};}else {_aedb ,_gcbd =_acdd .huffDecodeBmSize ();if _gcbd !=nil {return nil ,_gcbd ;};};_acdd ._baa .Align ();var _fedf *_ba .Bitmap ;_fedf ,_gcbd =_acdd .decodeHeightClassCollectiveBitmap (_aedb ,uint32 (_efa ),_fabbg );
if _gcbd !=nil {return nil ,_gcbd ;};_gcbd =_acdd .decodeHeightClassBitmap (_fedf ,_ecdb ,int (_efa ),_fdca );if _gcbd !=nil {return nil ,_gcbd ;};};};_eefc ,_gcbd :=_acdd .getToExportFlags ();if _gcbd !=nil {return nil ,_gcbd ;};_acdd .setExportedSymbols (_eefc );
};return _acdd ._dfee ,nil ;};func (_gcfb Type )String ()string {switch _gcfb {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_geab *TextRegion )createRegionBitmap ()error {_geab .RegionBitmap =_ba .New (int (_geab .RegionInfo .BitmapWidth ),int (_geab .RegionInfo .BitmapHeight ));
if _geab .DefaultPixel !=0{_geab .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_gdfc *TableSegment )HtOOB ()int32 {return _gdfc ._cagd };func (_gef *TextRegion )decodeCurrentT ()(int64 ,error ){if _gef .SbStrips !=1{if _gef .IsHuffmanEncoded {_fcbcg ,_ggd :=_gef ._efcfe .ReadBits (byte (_gef .LogSBStrips ));
return int64 (_fcbcg ),_ggd ;};_gffce ,_daga :=_gef ._aabe .DecodeInt (_gef ._gfbb );if _daga !=nil {return 0,_daga ;};return int64 (_gffce ),nil ;};return 0,nil ;};func (_ebaa *SymbolDictionary )decodeHeightClassBitmap (_cacef *_ba .Bitmap ,_acff int64 ,_ebaf int ,_dgcd []int )error {for _cgad :=_acff ;
_cgad < int64 (_ebaa ._aadc );_cgad ++{var _cceea int ;for _abcd :=_acff ;_abcd <=_cgad -1;_abcd ++{_cceea +=_dgcd [_abcd ];};_adbg :=_ge .Rect (_cceea ,0,_cceea +_dgcd [_cgad ],_ebaf );_egaa ,_afbgd :=_ba .Extract (_adbg ,_cacef );if _afbgd !=nil {return _afbgd ;
};_ebaa ._ebgfa [_cgad ]=_egaa ;_ebaa ._dffg =append (_ebaa ._dffg ,_egaa );};return nil ;};func (_fdba *SymbolDictionary )readAtPixels (_dbfda int )error {_fdba .SdATX =make ([]int8 ,_dbfda );_fdba .SdATY =make ([]int8 ,_dbfda );var (_fbee byte ;_aadg error ;
);for _eafga :=0;_eafga < _dbfda ;_eafga ++{_fbee ,_aadg =_fdba ._baa .ReadByte ();if _aadg !=nil {return _aadg ;};_fdba .SdATX [_eafga ]=int8 (_fbee );_fbee ,_aadg =_fdba ._baa .ReadByte ();if _aadg !=nil {return _aadg ;};_fdba .SdATY [_eafga ]=int8 (_fbee );
};return nil ;};func (_eeeb *Header )readReferredToSegmentNumbers (_ccg *_cc .Reader ,_badbd int )([]int ,error ){const _cagf ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_ffaa :=make ([]int ,_badbd );if _badbd > 0{_eeeb .RTSegments =make ([]*Header ,_badbd );var (_fgba uint64 ;_cada error ;);for _cffe :=0;_cffe < _badbd ;_cffe ++{_fgba ,_cada =_ccg .ReadBits (byte (_eeeb .referenceSize ())<<3);if _cada !=nil {return nil ,_bdd .Wrapf (_cada ,_cagf ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_cffe );
};_ffaa [_cffe ]=int (_fgba &_c .MaxInt32 );};};return _ffaa ,nil ;};func (_aedd *GenericRegion )computeSegmentDataStructure ()error {_aedd .DataOffset =_aedd ._bfc .AbsolutePosition ();_aedd .DataHeaderLength =_aedd .DataOffset -_aedd .DataHeaderOffset ;
_aedd .DataLength =int64 (_aedd ._bfc .AbsoluteLength ())-_aedd .DataHeaderLength ;return nil ;};var (_gbfd Segmenter ;_aff =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _gbfd },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _gbfd },TProfiles :func ()Segmenter {return _gbfd },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _gbfd },TBitmap :func ()Segmenter {return _gbfd }};
);func (_cdff *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_aegfe :=range _cdff .Header .RTSegments {if _aegfe .Type ==0{_dgfac ,_dafe :=_aegfe .GetSegmentData ();if _dafe !=nil {return _dafe ;};_caceb ,_gfcf :=_dgfac .(*SymbolDictionary );
if !_gfcf {return _da .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_dgfac );
};_gbba ,_dafe :=_caceb .GetDictionary ();if _dafe !=nil {return _da .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_aegfe .SegmentNumber ,_dafe .Error ());
};_cdff ._bgeg =append (_cdff ._bgeg ,_gbba ...);_cdff ._fdee +=_caceb .NumberOfExportedSymbols ;};};return nil ;};func (_dcbb *Header )readSegmentNumber (_cefg *_cc .Reader )error {const _gaa ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_ffda :=make ([]byte ,4);_ ,_ffbd :=_cefg .Read (_ffda );if _ffbd !=nil {return _bdd .Wrap (_ffbd ,_gaa ,"");};_dcbb .SegmentNumber =_f .BigEndian .Uint32 (_ffda );return nil ;};func (_db *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _db .RegionInfo };
func (_gd *EndOfStripe )Init (h *Header ,r *_cc .Reader )error {_gd ._gc =r ;return _gd .parseHeader ()};func (_decef *SymbolDictionary )setRetainedCodingContexts (_aaaa *SymbolDictionary ){_decef ._gebb =_aaaa ._gebb ;_decef .IsHuffmanEncoded =_aaaa .IsHuffmanEncoded ;
_decef .UseRefinementAggregation =_aaaa .UseRefinementAggregation ;_decef .SdTemplate =_aaaa .SdTemplate ;_decef .SdrTemplate =_aaaa .SdrTemplate ;_decef .SdATX =_aaaa .SdATX ;_decef .SdATY =_aaaa .SdATY ;_decef .SdrATX =_aaaa .SdrATX ;_decef .SdrATY =_aaaa .SdrATY ;
_decef ._ffad =_aaaa ._ffad ;};func (_acd *HalftoneRegion )combineGrayscalePlanes (_beced []*_ba .Bitmap ,_dbad int )error {_eafg :=0;for _egce :=0;_egce < _beced [_dbad ].Height ;_egce ++{for _afcc :=0;_afcc < _beced [_dbad ].Width ;_afcc +=8{_abb ,_dddg :=_beced [_dbad +1].GetByte (_eafg );
if _dddg !=nil {return _dddg ;};_caccb ,_dddg :=_beced [_dbad ].GetByte (_eafg );if _dddg !=nil {return _dddg ;};_dddg =_beced [_dbad ].SetByte (_eafg ,_ba .CombineBytes (_caccb ,_abb ,_ba .CmbOpXor ));if _dddg !=nil {return _dddg ;};_eafg ++;};};return nil ;
};func (_dbc *PatternDictionary )parseHeader ()error {_def .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_def .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_gcda :=_dbc ._cfbg .ReadBits (5);if _gcda !=nil {return _gcda ;};if _gcda =_dbc .readTemplate ();_gcda !=nil {return _gcda ;};if _gcda =_dbc .readIsMMREncoded ();_gcda !=nil {return _gcda ;};if _gcda =_dbc .readPatternWidthAndHeight ();_gcda !=nil {return _gcda ;
};if _gcda =_dbc .readGrayMax ();_gcda !=nil {return _gcda ;};if _gcda =_dbc .computeSegmentDataStructure ();_gcda !=nil {return _gcda ;};return _dbc .checkInput ();};func (_cabb *TextRegion )Init (header *Header ,r *_cc .Reader )error {_cabb .Header =header ;
_cabb ._efcfe =r ;_cabb .RegionInfo =NewRegionSegment (_cabb ._efcfe );return _cabb .parseHeader ();};func (_ebgg *GenericRegion )readGBAtPixels (_ebb int )error {const _bege ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_ebgg .GBAtX =make ([]int8 ,_ebb );_ebgg .GBAtY =make ([]int8 ,_ebb );for _feda :=0;_feda < _ebb ;_feda ++{_bgece ,_ecbc :=_ebgg ._bfc .ReadByte ();if _ecbc !=nil {return _bdd .Wrapf (_ecbc ,_bege ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_feda );
};_ebgg .GBAtX [_feda ]=int8 (_bgece );_bgece ,_ecbc =_ebgg ._bfc .ReadByte ();if _ecbc !=nil {return _bdd .Wrapf (_ecbc ,_bege ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_feda );};_ebgg .GBAtY [_feda ]=int8 (_bgece );};return nil ;
};func (_ggc *GenericRegion )overrideAtTemplate1 (_acg ,_fage ,_gedd ,_aae ,_geae int )int {_acg &=0x1FF7;if _ggc .GBAtY [0]==0&&_ggc .GBAtX [0]>=-int8 (_geae ){_acg |=(_aae >>uint (7-(int8 (_geae )+_ggc .GBAtX [0]))&0x1)<<3;}else {_acg |=int (_ggc .getPixel (_fage +int (_ggc .GBAtX [0]),_gedd +int (_ggc .GBAtY [0])))<<3;
};return _acg ;};