//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_c "encoding/binary";_d "errors";_a "fmt";_gf "github.com/unidoc/unipdf/v3/common";_ed "github.com/unidoc/unipdf/v3/internal/bitwise";_dd "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_f "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_be "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ae "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_eb "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_ef "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_dg "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_fe "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_bg "image";_e "io";_b "math";_ec "strings";_bf "time";);func (_caff *Header )readReferredToSegmentNumbers (_fab *_ed .Reader ,_eeba int )([]int ,error ){const _fcb ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_ggde :=make ([]int ,_eeba );if _eeba > 0{_caff .RTSegments =make ([]*Header ,_eeba );var (_ggfb uint64 ;_cgeg error ;);for _gfab :=0;_gfab < _eeba ;_gfab ++{_ggfb ,_cgeg =_fab .ReadBits (byte (_caff .referenceSize ())<<3);if _cgeg !=nil {return nil ,_dg .Wrapf (_cgeg ,_fcb ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_gfab );
};_ggde [_gfab ]=int (_ggfb &_b .MaxInt32 );};};return _ggde ,nil ;};func (_edgg *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_f .Points ,symbols *_f .Bitmaps ,classIDs *_dd .IntSlice ,boxes *_f .Boxes ,width ,height ,symBits int ){_edgg .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_edgg ._gcgc =globalSymbolsMap ;_edgg ._edae =localSymbolsMap ;_edgg ._abae =comps ;_edgg ._cage =inLL ;_edgg ._bcecdb =symbols ;_edgg ._bcae =classIDs ;_edgg ._ffbf =boxes ;_edgg ._abcg =symBits ;};func (_ecd *GenericRefinementRegion )GetRegionBitmap ()(*_f .Bitmap ,error ){var _ag error ;
_gf .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ag !=nil {_gf .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ag );
}else {_gf .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _ecd .RegionBitmap !=nil {return _ecd .RegionBitmap ,nil ;};_df :=0;if _ecd .ReferenceBitmap ==nil {_ecd .ReferenceBitmap ,_ag =_ecd .getGrReference ();if _ag !=nil {return nil ,_ag ;};};if _ecd ._fg ==nil {_ecd ._fg ,_ag =_be .New (_ecd ._fed );
if _ag !=nil {return nil ,_ag ;};};if _ecd ._af ==nil {_ecd ._af =_be .NewStats (8192,1);};_ecd .RegionBitmap =_f .New (int (_ecd .RegionInfo .BitmapWidth ),int (_ecd .RegionInfo .BitmapHeight ));if _ecd .TemplateID ==0{if _ag =_ecd .updateOverride ();
_ag !=nil {return nil ,_ag ;};};_ebb :=(_ecd .RegionBitmap .Width +7)&-8;var _gc int ;if _ecd .IsTPGROn {_gc =int (-_ecd .ReferenceDY )*_ecd .ReferenceBitmap .RowStride ;};_cc :=_gc +1;for _db :=0;_db < _ecd .RegionBitmap .Height ;_db ++{if _ecd .IsTPGROn {_gd ,_bcg :=_ecd .decodeSLTP ();
if _bcg !=nil {return nil ,_bcg ;};_df ^=_gd ;};if _df ==0{_ag =_ecd .decodeOptimized (_db ,_ecd .RegionBitmap .Width ,_ecd .RegionBitmap .RowStride ,_ecd .ReferenceBitmap .RowStride ,_ebb ,_gc ,_cc );if _ag !=nil {return nil ,_ag ;};}else {_ag =_ecd .decodeTypicalPredictedLine (_db ,_ecd .RegionBitmap .Width ,_ecd .RegionBitmap .RowStride ,_ecd .ReferenceBitmap .RowStride ,_ebb ,_gc );
if _ag !=nil {return nil ,_ag ;};};};return _ecd .RegionBitmap ,nil ;};func (_adfd *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _adfd ._eeddc ==nil {var (_eeed int ;_gccf error ;);if _adfd .SdHuffDecodeHeightSelection ==3{_eeed ++;};if _adfd .SdHuffDecodeWidthSelection ==3{_eeed ++;
};_adfd ._eeddc ,_gccf =_adfd .getUserTable (_eeed );if _gccf !=nil {return 0,_gccf ;};};return _adfd ._eeddc .Decode (_adfd ._eecc );};func (_dafe *SymbolDictionary )encodeATFlags (_fdcc _ed .BinaryWriter )(_eagd int ,_cffa error ){const _afgd ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _dafe .IsHuffmanEncoded ||_dafe .SdTemplate !=0{return 0,nil ;};_cbcaf :=4;if _dafe .SdTemplate !=0{_cbcaf =1;};for _ffbg :=0;_ffbg < _cbcaf ;_ffbg ++{if _cffa =_fdcc .WriteByte (byte (_dafe .SdATX [_ffbg ]));_cffa !=nil {return _eagd ,_dg .Wrapf (_cffa ,_afgd ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_ffbg );
};_eagd ++;if _cffa =_fdcc .WriteByte (byte (_dafe .SdATY [_ffbg ]));_cffa !=nil {return _eagd ,_dg .Wrapf (_cffa ,_afgd ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_ffbg );};_eagd ++;};return _eagd ,nil ;};func (_bbe *GenericRefinementRegion )String ()string {_dga :=&_ec .Builder {};
_dga .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_dga .WriteString (_bbe .RegionInfo .String ()+"\u000a");_dga .WriteString (_a .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bbe .IsTPGROn ));
_dga .WriteString (_a .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_bbe .TemplateID ));_dga .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_bbe .GrAtX ));
_dga .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_bbe .GrAtY ));_dga .WriteString (_a .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_bbe .ReferenceDX ));
_dga .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_bbe .ReferenceDY ));return _dga .String ();};func (_ddbb *TextRegion )readAmountOfSymbolInstances ()error {_deab ,_agddb :=_ddbb ._cbge .ReadBits (32);
if _agddb !=nil {return _agddb ;};_ddbb .NumberOfSymbolInstances =uint32 (_deab &_b .MaxUint32 );_caeb :=_ddbb .RegionInfo .BitmapWidth *_ddbb .RegionInfo .BitmapHeight ;if _caeb < _ddbb .NumberOfSymbolInstances {_gf .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_caeb ,_ddbb .NumberOfSymbolInstances );
_ddbb .NumberOfSymbolInstances =_caeb ;};return nil ;};type Segmenter interface{Init (_ebfe *Header ,_bcec *_ed .Reader )error ;};type templater interface{form (_dedd ,_cde ,_cacc ,_cda ,_eadf int16 )int16 ;setIndex (_gba *_be .DecoderStats );};func (_cgbb *HalftoneRegion )GetRegionBitmap ()(*_f .Bitmap ,error ){if _cgbb .HalftoneRegionBitmap !=nil {return _cgbb .HalftoneRegionBitmap ,nil ;
};var _ebbg error ;_cgbb .HalftoneRegionBitmap =_f .New (int (_cgbb .RegionSegment .BitmapWidth ),int (_cgbb .RegionSegment .BitmapHeight ));if _cgbb .Patterns ==nil ||len (_cgbb .Patterns )==0{_cgbb .Patterns ,_ebbg =_cgbb .GetPatterns ();if _ebbg !=nil {return nil ,_ebbg ;
};};if _cgbb .HDefaultPixel ==1{_cgbb .HalftoneRegionBitmap .SetDefaultPixel ();};_ebec :=_b .Ceil (_b .Log (float64 (len (_cgbb .Patterns )))/_b .Log (2));_ageb :=int (_ebec );var _dae [][]int ;_dae ,_ebbg =_cgbb .grayScaleDecoding (_ageb );if _ebbg !=nil {return nil ,_ebbg ;
};if _ebbg =_cgbb .renderPattern (_dae );_ebbg !=nil {return nil ,_ebbg ;};return _cgbb .HalftoneRegionBitmap ,nil ;};func (_bfg *EndOfStripe )Init (h *Header ,r *_ed .Reader )error {_bfg ._dc =r ;return _bfg .parseHeader ();};func (_agdb *GenericRegion )Size ()int {return _agdb .RegionSegment .Size ()+1+2*len (_agdb .GBAtX )};
func (_bbfc *SymbolDictionary )setRetainedCodingContexts (_ccbe *SymbolDictionary ){_bbfc ._bfdg =_ccbe ._bfdg ;_bbfc .IsHuffmanEncoded =_ccbe .IsHuffmanEncoded ;_bbfc .UseRefinementAggregation =_ccbe .UseRefinementAggregation ;_bbfc .SdTemplate =_ccbe .SdTemplate ;
_bbfc .SdrTemplate =_ccbe .SdrTemplate ;_bbfc .SdATX =_ccbe .SdATX ;_bbfc .SdATY =_ccbe .SdATY ;_bbfc .SdrATX =_ccbe .SdrATX ;_bbfc .SdrATY =_ccbe .SdrATY ;_bbfc ._edfe =_ccbe ._edfe ;};func (_cbef *HalftoneRegion )Init (hd *Header ,r *_ed .Reader )error {_cbef ._cfc =r ;
_cbef ._cagg =hd ;_cbef .RegionSegment =NewRegionSegment (r );return _cbef .parseHeader ();};func (_acd *GenericRefinementRegion )decodeOptimized (_aee ,_gb ,_ecc ,_agb ,_bee ,_cdc ,_afc int )error {var (_ebe error ;_aec int ;_dac int ;);_bbf :=_aee -int (_acd .ReferenceDY );
if _aed :=int (-_acd .ReferenceDX );_aed > 0{_aec =_aed ;};_beg :=_acd .ReferenceBitmap .GetByteIndex (_aec ,_bbf );if _acd .ReferenceDX > 0{_dac =int (_acd .ReferenceDX );};_de :=_acd .RegionBitmap .GetByteIndex (_dac ,_aee );switch _acd .TemplateID {case 0:_ebe =_acd .decodeTemplate (_aee ,_gb ,_ecc ,_agb ,_bee ,_cdc ,_afc ,_de ,_bbf ,_beg ,_acd ._bb );
case 1:_ebe =_acd .decodeTemplate (_aee ,_gb ,_ecc ,_agb ,_bee ,_cdc ,_afc ,_de ,_bbf ,_beg ,_acd ._fc );};return _ebe ;};func (_cag *GenericRegion )decodeSLTP ()(int ,error ){switch _cag .GBTemplate {case 0:_cag ._ecg .SetIndex (0x9B25);case 1:_cag ._ecg .SetIndex (0x795);
case 2:_cag ._ecg .SetIndex (0xE5);case 3:_cag ._ecg .SetIndex (0x195);};return _cag ._beed .DecodeBit (_cag ._ecg );};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);var _ SegmentEncoder =&GenericRegion {};type template0 struct{};func (_bbga *Header )writeSegmentDataLength (_cdbg _ed .BinaryWriter )(_ffff int ,_gacb error ){_cgfb :=make ([]byte ,4);
_c .BigEndian .PutUint32 (_cgfb ,uint32 (_bbga .SegmentDataLength ));if _ffff ,_gacb =_cdbg .Write (_cgfb );_gacb !=nil {return 0,_dg .Wrap (_gacb ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _ffff ,nil ;};func (_ceg *GenericRegion )parseHeader ()(_cbag error ){_gf .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _cbag !=nil {_gf .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_cbag );
}else {_gf .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_fgd int ;_dee uint64 ;);if _cbag =_ceg .RegionSegment .parseHeader ();_cbag !=nil {return _cbag ;};if _ ,_cbag =_ceg ._eag .ReadBits (3);_cbag !=nil {return _cbag ;};_fgd ,_cbag =_ceg ._eag .ReadBit ();if _cbag !=nil {return _cbag ;};if _fgd ==1{_ceg .UseExtTemplates =true ;
};_fgd ,_cbag =_ceg ._eag .ReadBit ();if _cbag !=nil {return _cbag ;};if _fgd ==1{_ceg .IsTPGDon =true ;};_dee ,_cbag =_ceg ._eag .ReadBits (2);if _cbag !=nil {return _cbag ;};_ceg .GBTemplate =byte (_dee &0xf);_fgd ,_cbag =_ceg ._eag .ReadBit ();if _cbag !=nil {return _cbag ;
};if _fgd ==1{_ceg .IsMMREncoded =true ;};if !_ceg .IsMMREncoded {_acc :=1;if _ceg .GBTemplate ==0{_acc =4;if _ceg .UseExtTemplates {_acc =12;};};if _cbag =_ceg .readGBAtPixels (_acc );_cbag !=nil {return _cbag ;};};if _cbag =_ceg .computeSegmentDataStructure ();
_cbag !=nil {return _cbag ;};_gf .Log .Trace ("\u0025\u0073",_ceg );return nil ;};func (_gaaf *GenericRegion )decodeTemplate1 (_aca ,_bgce ,_bdb int ,_fdbe ,_ede int )(_ecdg error ){const _bffd ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_fde ,_dba int ;_ffd ,_gbd int ;_bbbg byte ;_gfaf ,_fdbg int ;);if _aca >=1{_bbbg ,_ecdg =_gaaf .Bitmap .GetByte (_ede );if _ecdg !=nil {return _dg .Wrap (_ecdg ,_bffd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ffd =int (_bbbg );};if _aca >=2{_bbbg ,_ecdg =_gaaf .Bitmap .GetByte (_ede -_gaaf .Bitmap .RowStride );
if _ecdg !=nil {return _dg .Wrap (_ecdg ,_bffd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gbd =int (_bbbg )<<5;};_fde =((_ffd >>1)&0x1f8)|((_gbd >>1)&0x1e00);for _ddbc :=0;_ddbc < _bdb ;_ddbc =_gfaf {var (_bab byte ;_bdc int ;);_gfaf =_ddbc +8;
if _aga :=_bgce -_ddbc ;_aga > 8{_bdc =8;}else {_bdc =_aga ;};if _aca > 0{_ffd <<=8;if _gfaf < _bgce {_bbbg ,_ecdg =_gaaf .Bitmap .GetByte (_ede +1);if _ecdg !=nil {return _dg .Wrap (_ecdg ,_bffd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ffd |=int (_bbbg );
};};if _aca > 1{_gbd <<=8;if _gfaf < _bgce {_bbbg ,_ecdg =_gaaf .Bitmap .GetByte (_ede -_gaaf .Bitmap .RowStride +1);if _ecdg !=nil {return _dg .Wrap (_ecdg ,_bffd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gbd |=int (_bbbg )<<5;};};for _cbad :=0;
_cbad < _bdc ;_cbad ++{if _gaaf ._edd {_dba =_gaaf .overrideAtTemplate1 (_fde ,_ddbc +_cbad ,_aca ,int (_bab ),_cbad );_gaaf ._ecg .SetIndex (int32 (_dba ));}else {_gaaf ._ecg .SetIndex (int32 (_fde ));};_fdbg ,_ecdg =_gaaf ._beed .DecodeBit (_gaaf ._ecg );
if _ecdg !=nil {return _dg .Wrap (_ecdg ,_bffd ,"");};_bab |=byte (_fdbg )<<uint (7-_cbad );_beeb :=uint (8-_cbad );_fde =((_fde &0xefb)<<1)|_fdbg |((_ffd >>_beeb )&0x8)|((_gbd >>_beeb )&0x200);};if _edbc :=_gaaf .Bitmap .SetByte (_fdbe ,_bab );_edbc !=nil {return _dg .Wrap (_edbc ,_bffd ,"");
};_fdbe ++;_ede ++;};return nil ;};func (_bdd *PageInformationSegment )readIsStriped ()error {_agad ,_cggdg :=_bdd ._efcg .ReadBit ();if _cggdg !=nil {return _cggdg ;};if _agad ==1{_bdd .IsStripe =true ;};return nil ;};func (_fdgd *TextRegion )setContexts (_cdfg *_be .DecoderStats ,_fbaa *_be .DecoderStats ,_ggeb *_be .DecoderStats ,_effb *_be .DecoderStats ,_aede *_be .DecoderStats ,_aaee *_be .DecoderStats ,_aggba *_be .DecoderStats ,_fcea *_be .DecoderStats ,_fceac *_be .DecoderStats ,_cddda *_be .DecoderStats ){_fdgd ._dbefe =_fbaa ;
_fdgd ._daca =_ggeb ;_fdgd ._aecbe =_effb ;_fdgd ._fegf =_aede ;_fdgd ._ceca =_aggba ;_fdgd ._gbcf =_fcea ;_fdgd ._baea =_aaee ;_fdgd ._gbfbd =_fceac ;_fdgd ._bbef =_cddda ;_fdgd ._deec =_cdfg ;};func (_cgfg *TextRegion )decodeRI ()(int64 ,error ){if !_cgfg .UseRefinement {return 0,nil ;
};if _cgfg .IsHuffmanEncoded {_efba ,_gagfc :=_cgfg ._cbge .ReadBit ();return int64 (_efba ),_gagfc ;};_aabg ,_ddcc :=_cgfg ._efbd .DecodeInt (_cgfg ._ecfgga );return int64 (_aabg ),_ddcc ;};func (_gcdf *GenericRegion )overrideAtTemplate3 (_fccg ,_fbbd ,_bgdg ,_eeace ,_gdb int )int {_fccg &=0x3EF;
if _gcdf .GBAtY [0]==0&&_gcdf .GBAtX [0]>=-int8 (_gdb ){_fccg |=(_eeace >>uint (7-(int8 (_gdb )+_gcdf .GBAtX [0]))&0x1)<<4;}else {_fccg |=int (_gcdf .getPixel (_fbbd +int (_gcdf .GBAtX [0]),_bgdg +int (_gcdf .GBAtY [0])))<<4;};return _fccg ;};func (_cbee *TableSegment )Init (h *Header ,r *_ed .Reader )error {_cbee ._aeff =r ;
return _cbee .parseHeader ();};func (_edb *GenericRegion )GetRegionInfo ()*RegionSegment {return _edb .RegionSegment };func (_eafe *SymbolDictionary )readAtPixels (_ecgb int )error {_eafe .SdATX =make ([]int8 ,_ecgb );_eafe .SdATY =make ([]int8 ,_ecgb );
var (_fgbg byte ;_dbbca error ;);for _cecf :=0;_cecf < _ecgb ;_cecf ++{_fgbg ,_dbbca =_eafe ._eecc .ReadByte ();if _dbbca !=nil {return _dbbca ;};_eafe .SdATX [_cecf ]=int8 (_fgbg );_fgbg ,_dbbca =_eafe ._eecc .ReadByte ();if _dbbca !=nil {return _dbbca ;
};_eafe .SdATY [_cecf ]=int8 (_fgbg );};return nil ;};func (_aedgg *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _aedgg .SdHuffDecodeHeightSelection {case 0:_gcef ,_aead :=_ae .GetStandardTable (4);if _aead !=nil {return 0,_aead ;
};return _gcef .Decode (_aedgg ._eecc );case 1:_geffb ,_gddd :=_ae .GetStandardTable (5);if _gddd !=nil {return 0,_gddd ;};return _geffb .Decode (_aedgg ._eecc );case 3:if _aedgg ._bgbc ==nil {_bffb ,_cfff :=_ae .GetStandardTable (0);if _cfff !=nil {return 0,_cfff ;
};_aedgg ._bgbc =_bffb ;};return _aedgg ._bgbc .Decode (_aedgg ._eecc );};return 0,nil ;};func (_cgea *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_eedc ,_bcbe :=_cgea ._efcg .ReadBit ();if _bcbe !=nil {return _bcbe ;};if _eedc ==1{_cgea ._fdfb =true ;
};return nil ;};func (_beea *GenericRegion )decodeLine (_gcf ,_fcg ,_dcg int )error {const _gfc ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_eba :=_beea .Bitmap .GetByteIndex (0,_gcf );_efgg :=_eba -_beea .Bitmap .RowStride ;switch _beea .GBTemplate {case 0:if !_beea .UseExtTemplates {return _beea .decodeTemplate0a (_gcf ,_fcg ,_dcg ,_eba ,_efgg );
};return _beea .decodeTemplate0b (_gcf ,_fcg ,_dcg ,_eba ,_efgg );case 1:return _beea .decodeTemplate1 (_gcf ,_fcg ,_dcg ,_eba ,_efgg );case 2:return _beea .decodeTemplate2 (_gcf ,_fcg ,_dcg ,_eba ,_efgg );case 3:return _beea .decodeTemplate3 (_gcf ,_fcg ,_dcg ,_eba ,_efgg );
};return _dg .Errorf (_gfc ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_beea .GBTemplate );};func (_deca *PatternDictionary )extractPatterns (_bbeeg *_f .Bitmap )error {var _acbf int ;
_gfde :=make ([]*_f .Bitmap ,_deca .GrayMax +1);for _acbf <=int (_deca .GrayMax ){_cdbgb :=int (_deca .HdpWidth )*_acbf ;_eddge :=_bg .Rect (_cdbgb ,0,_cdbgb +int (_deca .HdpWidth ),int (_deca .HdpHeight ));_cggg ,_egc :=_f .Extract (_eddge ,_bbeeg );if _egc !=nil {return _egc ;
};_gfde [_acbf ]=_cggg ;_acbf ++;};_deca .Patterns =_gfde ;return nil ;};func (_fbgg *GenericRegion )String ()string {_efab :=&_ec .Builder {};_efab .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_efab .WriteString (_fbgg .RegionSegment .String ()+"\u000a");_efab .WriteString (_a .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_fbgg .UseExtTemplates ));
_efab .WriteString (_a .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fbgg .IsTPGDon ));_efab .WriteString (_a .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_fbgg .GBTemplate ));
_efab .WriteString (_a .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_fbgg .IsMMREncoded ));_efab .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_fbgg .GBAtX ));
_efab .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_fbgg .GBAtY ));_efab .WriteString (_a .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_fbgg .GBAtOverride ));
return _efab .String ();};func (_gdfe *GenericRegion )setParameters (_fac bool ,_eeab ,_bae int64 ,_dbbd ,_degd uint32 ){_gdfe .IsMMREncoded =_fac ;_gdfe .DataOffset =_eeab ;_gdfe .DataLength =_bae ;_gdfe .RegionSegment .BitmapHeight =_dbbd ;_gdfe .RegionSegment .BitmapWidth =_degd ;
_gdfe ._bbb =nil ;_gdfe .Bitmap =nil ;};func (_eccd *SymbolDictionary )setRefinementAtPixels ()error {if !_eccd .UseRefinementAggregation ||_eccd .SdrTemplate !=0{return nil ;};if _adfe :=_eccd .readRefinementAtPixels (2);_adfe !=nil {return _adfe ;};return nil ;
};func (_aeg *GenericRegion )decodeTemplate0b (_cbe ,_eegc ,_agfd int ,_fcee ,_cfe int )(_aecg error ){const _gcg ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_cee ,_aegb int ;_ebd ,_gef int ;_dfa byte ;
_bcdc int ;);if _cbe >=1{_dfa ,_aecg =_aeg .Bitmap .GetByte (_cfe );if _aecg !=nil {return _dg .Wrap (_aecg ,_gcg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ebd =int (_dfa );};if _cbe >=2{_dfa ,_aecg =_aeg .Bitmap .GetByte (_cfe -_aeg .Bitmap .RowStride );
if _aecg !=nil {return _dg .Wrap (_aecg ,_gcg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gef =int (_dfa )<<6;};_cee =(_ebd &0xf0)|(_gef &0x3800);for _dbb :=0;_dbb < _agfd ;_dbb =_bcdc {var (_dfe byte ;_cdd int ;);_bcdc =_dbb +8;if _gadc :=_eegc -_dbb ;
_gadc > 8{_cdd =8;}else {_cdd =_gadc ;};if _cbe > 0{_ebd <<=8;if _bcdc < _eegc {_dfa ,_aecg =_aeg .Bitmap .GetByte (_cfe +1);if _aecg !=nil {return _dg .Wrap (_aecg ,_gcg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ebd |=int (_dfa );};};if _cbe > 1{_gef <<=8;
if _bcdc < _eegc {_dfa ,_aecg =_aeg .Bitmap .GetByte (_cfe -_aeg .Bitmap .RowStride +1);if _aecg !=nil {return _dg .Wrap (_aecg ,_gcg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gef |=int (_dfa )<<6;};};for _dffg :=0;_dffg < _cdd ;_dffg ++{_ffg :=uint (7-_dffg );
if _aeg ._edd {_aegb =_aeg .overrideAtTemplate0b (_cee ,_dbb +_dffg ,_cbe ,int (_dfe ),_dffg ,int (_ffg ));_aeg ._ecg .SetIndex (int32 (_aegb ));}else {_aeg ._ecg .SetIndex (int32 (_cee ));};var _aag int ;_aag ,_aecg =_aeg ._beed .DecodeBit (_aeg ._ecg );
if _aecg !=nil {return _dg .Wrap (_aecg ,_gcg ,"");};_dfe |=byte (_aag <<_ffg );_cee =((_cee &0x7bf7)<<1)|_aag |((_ebd >>_ffg )&0x10)|((_gef >>_ffg )&0x800);};if _gfd :=_aeg .Bitmap .SetByte (_fcee ,_dfe );_gfd !=nil {return _dg .Wrap (_gfd ,_gcg ,"");
};_fcee ++;_cfe ++;};return nil ;};type GenericRefinementRegion struct{_bb templater ;_fc templater ;_fed *_ed .Reader ;_eg *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_f .Bitmap ;
ReferenceBitmap *_f .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_fg *_be .Decoder ;_af *_be .DecoderStats ;_fbg bool ;_cg []bool ;};func (_eacf *GenericRegion )overrideAtTemplate0a (_bfe ,_eeac ,_ffad ,_baaf ,_ecae ,_bcag int )int {if _eacf .GBAtOverride [0]{_bfe &=0xFFEF;
if _eacf .GBAtY [0]==0&&_eacf .GBAtX [0]>=-int8 (_ecae ){_bfe |=(_baaf >>uint (int8 (_bcag )-_eacf .GBAtX [0]&0x1))<<4;}else {_bfe |=int (_eacf .getPixel (_eeac +int (_eacf .GBAtX [0]),_ffad +int (_eacf .GBAtY [0])))<<4;};};if _eacf .GBAtOverride [1]{_bfe &=0xFBFF;
if _eacf .GBAtY [1]==0&&_eacf .GBAtX [1]>=-int8 (_ecae ){_bfe |=(_baaf >>uint (int8 (_bcag )-_eacf .GBAtX [1]&0x1))<<10;}else {_bfe |=int (_eacf .getPixel (_eeac +int (_eacf .GBAtX [1]),_ffad +int (_eacf .GBAtY [1])))<<10;};};if _eacf .GBAtOverride [2]{_bfe &=0xF7FF;
if _eacf .GBAtY [2]==0&&_eacf .GBAtX [2]>=-int8 (_ecae ){_bfe |=(_baaf >>uint (int8 (_bcag )-_eacf .GBAtX [2]&0x1))<<11;}else {_bfe |=int (_eacf .getPixel (_eeac +int (_eacf .GBAtX [2]),_ffad +int (_eacf .GBAtY [2])))<<11;};};if _eacf .GBAtOverride [3]{_bfe &=0x7FFF;
if _eacf .GBAtY [3]==0&&_eacf .GBAtX [3]>=-int8 (_ecae ){_bfe |=(_baaf >>uint (int8 (_bcag )-_eacf .GBAtX [3]&0x1))<<15;}else {_bfe |=int (_eacf .getPixel (_eeac +int (_eacf .GBAtX [3]),_ffad +int (_eacf .GBAtY [3])))<<15;};};return _bfe ;};type TableSegment struct{_aeff *_ed .Reader ;
_deea int32 ;_cbacb int32 ;_aafed int32 ;_fcaa int32 ;_bbdc int32 ;};type HalftoneRegion struct{_cfc *_ed .Reader ;_cagg *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;
CombinationOperator _f .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_f .Bitmap ;Patterns []*_f .Bitmap ;
};func (_edc *HalftoneRegion )parseHeader ()error {if _gge :=_edc .RegionSegment .parseHeader ();_gge !=nil {return _gge ;};_agc ,_ece :=_edc ._cfc .ReadBit ();if _ece !=nil {return _ece ;};_edc .HDefaultPixel =int8 (_agc );_gfdd ,_ece :=_edc ._cfc .ReadBits (3);
if _ece !=nil {return _ece ;};_edc .CombinationOperator =_f .CombinationOperator (_gfdd &0xf);_agc ,_ece =_edc ._cfc .ReadBit ();if _ece !=nil {return _ece ;};if _agc ==1{_edc .HSkipEnabled =true ;};_gfdd ,_ece =_edc ._cfc .ReadBits (2);if _ece !=nil {return _ece ;
};_edc .HTemplate =byte (_gfdd &0xf);_agc ,_ece =_edc ._cfc .ReadBit ();if _ece !=nil {return _ece ;};if _agc ==1{_edc .IsMMREncoded =true ;};_gfdd ,_ece =_edc ._cfc .ReadBits (32);if _ece !=nil {return _ece ;};_edc .HGridWidth =uint32 (_gfdd &_b .MaxUint32 );
_gfdd ,_ece =_edc ._cfc .ReadBits (32);if _ece !=nil {return _ece ;};_edc .HGridHeight =uint32 (_gfdd &_b .MaxUint32 );_gfdd ,_ece =_edc ._cfc .ReadBits (32);if _ece !=nil {return _ece ;};_edc .HGridX =int32 (_gfdd &_b .MaxInt32 );_gfdd ,_ece =_edc ._cfc .ReadBits (32);
if _ece !=nil {return _ece ;};_edc .HGridY =int32 (_gfdd &_b .MaxInt32 );_gfdd ,_ece =_edc ._cfc .ReadBits (16);if _ece !=nil {return _ece ;};_edc .HRegionX =uint16 (_gfdd &_b .MaxUint16 );_gfdd ,_ece =_edc ._cfc .ReadBits (16);if _ece !=nil {return _ece ;
};_edc .HRegionY =uint16 (_gfdd &_b .MaxUint16 );if _ece =_edc .computeSegmentDataStructure ();_ece !=nil {return _ece ;};return _edc .checkInput ();};func (_aeab *TextRegion )decodeRdh ()(int64 ,error ){const _adcb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _aeab .IsHuffmanEncoded {if _aeab .SbHuffRDHeight ==3{if _aeab ._ecdc ==nil {var (_ggacf int ;_cdeb error ;);if _aeab .SbHuffFS ==3{_ggacf ++;};if _aeab .SbHuffDS ==3{_ggacf ++;};if _aeab .SbHuffDT ==3{_ggacf ++;};if _aeab .SbHuffRDWidth ==3{_ggacf ++;
};_aeab ._ecdc ,_cdeb =_aeab .getUserTable (_ggacf );if _cdeb !=nil {return 0,_dg .Wrap (_cdeb ,_adcb ,"");};};return _aeab ._ecdc .Decode (_aeab ._cbge );};_ccdgc ,_efea :=_ae .GetStandardTable (14+int (_aeab .SbHuffRDHeight ));if _efea !=nil {return 0,_dg .Wrap (_efea ,_adcb ,"");
};return _ccdgc .Decode (_aeab ._cbge );};_bgbb ,_fbfc :=_aeab ._efbd .DecodeInt (_aeab ._gbcf );if _fbfc !=nil {return 0,_dg .Wrap (_fbfc ,_adcb ,"");};return int64 (_bgbb ),nil ;};func (_dgce *GenericRegion )Encode (w _ed .BinaryWriter )(_dfg int ,_aef error ){const _gca ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _dgce .Bitmap ==nil {return 0,_dg .Error (_gca ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_ageee ,_aef :=_dgce .RegionSegment .Encode (w );if _aef !=nil {return 0,_dg .Wrap (_aef ,_gca ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_dfg +=_ageee ;if _aef =w .SkipBits (4);_aef !=nil {return _dfg ,_dg .Wrap (_aef ,_gca ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _egef int ;if _dgce .IsTPGDon {_egef =1;};if _aef =w .WriteBit (_egef );
_aef !=nil {return _dfg ,_dg .Wrap (_aef ,_gca ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_egef =0;if _aef =w .WriteBit (int (_dgce .GBTemplate >>1)&0x01);_aef !=nil {return _dfg ,_dg .Wrap (_aef ,_gca ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _aef =w .WriteBit (int (_dgce .GBTemplate )&0x01);_aef !=nil {return _dfg ,_dg .Wrap (_aef ,_gca ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _dgce .UseMMR {_egef =1;};if _aef =w .WriteBit (_egef );
_aef !=nil {return _dfg ,_dg .Wrap (_aef ,_gca ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_dfg ++;if _ageee ,_aef =_dgce .writeGBAtPixels (w );_aef !=nil {return _dfg ,_dg .Wrap (_aef ,_gca ,"");};_dfg +=_ageee ;_dec :=_ef .New ();
if _aef =_dec .EncodeBitmap (_dgce .Bitmap ,_dgce .IsTPGDon );_aef !=nil {return _dfg ,_dg .Wrap (_aef ,_gca ,"");};_dec .Final ();var _dgceb int64 ;if _dgceb ,_aef =_dec .WriteTo (w );_aef !=nil {return _dfg ,_dg .Wrap (_aef ,_gca ,"");};_dfg +=int (_dgceb );
return _dfg ,nil ;};var _ _ae .BasicTabler =&TableSegment {};func (_da *GenericRefinementRegion )Init (header *Header ,r *_ed .Reader )error {_da ._eg =header ;_da ._fed =r ;_da .RegionInfo =NewRegionSegment (r );return _da .parseHeader ();};func (_fcgb *SymbolDictionary )setInSyms ()error {if _fcgb .Header .RTSegments !=nil {return _fcgb .retrieveImportSymbols ();
};_fcgb ._gea =make ([]*_f .Bitmap ,0);return nil ;};func (_geca *SymbolDictionary )getUserTable (_cbeb int )(_ae .Tabler ,error ){var _ggad int ;for _ ,_dgffd :=range _geca .Header .RTSegments {if _dgffd .Type ==53{if _ggad ==_cbeb {_gccc ,_fdfa :=_dgffd .GetSegmentData ();
if _fdfa !=nil {return nil ,_fdfa ;};_dfbg :=_gccc .(_ae .BasicTabler );return _ae .NewEncodedTable (_dfbg );};_ggad ++;};};return nil ,nil ;};func (_gaf *HalftoneRegion )shiftAndFill (_ddbg int )int {_ddbg >>=8;if _ddbg < 0{_fga :=int (_b .Log (float64 (_fefb (_ddbg )))/_b .Log (2));
_ddbcg :=31-_fga ;for _gfcb :=1;_gfcb < _ddbcg ;_gfcb ++{_ddbg |=1<<uint (31-_gfcb );};};return _ddbg ;};func (_gae *Header )writeSegmentPageAssociation (_ebbc _ed .BinaryWriter )(_abef int ,_daab error ){const _dbbc ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _gae .pageSize ()!=4{if _daab =_ebbc .WriteByte (byte (_gae .PageAssociation ));_daab !=nil {return 0,_dg .Wrap (_daab ,_dbbc ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_gfabb :=make ([]byte ,4);
_c .BigEndian .PutUint32 (_gfabb ,uint32 (_gae .PageAssociation ));if _abef ,_daab =_ebbc .Write (_gfabb );_daab !=nil {return 0,_dg .Wrap (_daab ,_dbbc ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _abef ,nil ;
};func (_fbfg *SymbolDictionary )String ()string {_gcgdf :=&_ec .Builder {};_gcgdf .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_gcgdf .WriteString (_a .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_fbfg .SdrTemplate ));
_gcgdf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_fbfg .SdTemplate ));_gcgdf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_fbfg ._gbcb ));
_gcgdf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_fbfg ._bfcb ));_gcgdf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_fbfg .SdHuffAggInstanceSelection ));
_gcgdf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_fbfg .SdHuffBMSizeSelection ));_gcgdf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_fbfg .SdHuffDecodeWidthSelection ));
_gcgdf .WriteString (_a .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_fbfg .SdHuffDecodeHeightSelection ));_gcgdf .WriteString (_a .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_fbfg .UseRefinementAggregation ));
_gcgdf .WriteString (_a .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_fbfg .IsHuffmanEncoded ));_gcgdf .WriteString (_a .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_fbfg .SdATX ));
_gcgdf .WriteString (_a .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_fbfg .SdATY ));_gcgdf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_fbfg .SdrATX ));
_gcgdf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_fbfg .SdrATY ));_gcgdf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_fbfg .NumberOfExportedSymbols ));
_gcgdf .WriteString (_a .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_fbfg .NumberOfNewSymbols ));_gcgdf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_fbfg ._eaae ));
_gcgdf .WriteString (_a .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_fbfg ._aefc ));return _gcgdf .String ();};func (_efge *TextRegion )decodeIb (_bgaf ,_gfcf int64 )(*_f .Bitmap ,error ){const _gbgd ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_gfbf error ;_edgfa *_f .Bitmap ;);if _bgaf ==0{if int (_gfcf )> len (_efge .Symbols )-1{return nil ,_dg .Error (_gbgd ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _efge .Symbols [int (_gfcf )],nil ;};var _gbee ,_gdff ,_agabf ,_ebfa int64 ;_gbee ,_gfbf =_efge .decodeRdw ();if _gfbf !=nil {return nil ,_dg .Wrap (_gfbf ,_gbgd ,"");};_gdff ,_gfbf =_efge .decodeRdh ();if _gfbf !=nil {return nil ,_dg .Wrap (_gfbf ,_gbgd ,"");
};_agabf ,_gfbf =_efge .decodeRdx ();if _gfbf !=nil {return nil ,_dg .Wrap (_gfbf ,_gbgd ,"");};_ebfa ,_gfbf =_efge .decodeRdy ();if _gfbf !=nil {return nil ,_dg .Wrap (_gfbf ,_gbgd ,"");};if _efge .IsHuffmanEncoded {if _ ,_gfbf =_efge .decodeSymInRefSize ();
_gfbf !=nil {return nil ,_dg .Wrap (_gfbf ,_gbgd ,"");};_efge ._cbge .Align ();};_abcb :=_efge .Symbols [_gfcf ];_ddf :=uint32 (_abcb .Width );_cfce :=uint32 (_abcb .Height );_bfba :=int32 (uint32 (_gbee )>>1)+int32 (_agabf );_aaca :=int32 (uint32 (_gdff )>>1)+int32 (_ebfa );
if _efge ._adfgc ==nil {_efge ._adfgc =_bebb (_efge ._cbge ,nil );};_efge ._adfgc .setParameters (_efge ._deec ,_efge ._efbd ,_efge .SbrTemplate ,_ddf +uint32 (_gbee ),_cfce +uint32 (_gdff ),_abcb ,_bfba ,_aaca ,false ,_efge .SbrATX ,_efge .SbrATY );_edgfa ,_gfbf =_efge ._adfgc .GetRegionBitmap ();
if _gfbf !=nil {return nil ,_dg .Wrap (_gfbf ,_gbgd ,"\u0067\u0072\u0066");};if _efge .IsHuffmanEncoded {_efge ._cbge .Align ();};return _edgfa ,nil ;};func (_deff *RegionSegment )Size ()int {return 17};func (_dcag Type )String ()string {switch _dcag {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_baee *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _baee .RegionSegment };
type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_f .Bitmap ,error );};var _ templater =&template0 {};func (_ecdgc *PatternDictionary )readPatternWidthAndHeight ()error {_afg ,_feag :=_ecdgc ._agce .ReadByte ();if _feag !=nil {return _feag ;
};_ecdgc .HdpWidth =_afg ;_afg ,_feag =_ecdgc ._agce .ReadByte ();if _feag !=nil {return _feag ;};_ecdgc .HdpHeight =_afg ;return nil ;};func (_agaa *SymbolDictionary )decodeThroughTextRegion (_afdb ,_cdcea ,_gafg uint32 )error {if _agaa ._gaff ==nil {_agaa ._gaff =_gadgc (_agaa ._eecc ,nil );
_agaa ._gaff .setContexts (_agaa ._edfe ,_be .NewStats (512,1),_be .NewStats (512,1),_be .NewStats (512,1),_be .NewStats (512,1),_agaa ._dge ,_be .NewStats (512,1),_be .NewStats (512,1),_be .NewStats (512,1),_be .NewStats (512,1));};if _bced :=_agaa .setSymbolsArray ();
_bced !=nil {return _bced ;};_agaa ._gaff .setParameters (_agaa ._bfdg ,_agaa .IsHuffmanEncoded ,true ,_afdb ,_cdcea ,_gafg ,1,_agaa ._eaae +_agaa ._aefc ,0,0,0,1,0,0,0,0,0,0,0,0,0,_agaa .SdrTemplate ,_agaa .SdrATX ,_agaa .SdrATY ,_agaa ._egad ,_agaa ._cegc );
return _agaa .addSymbol (_agaa ._gaff );};func (_cbf *SymbolDictionary )checkInput ()error {if _cbf .SdHuffDecodeHeightSelection ==2{_gf .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_cbf .SdHuffDecodeHeightSelection );
};if _cbf .SdHuffDecodeWidthSelection ==2{_gf .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_cbf .SdHuffDecodeWidthSelection );
};if _cbf .IsHuffmanEncoded {if _cbf .SdTemplate !=0{_gf .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_cbf .SdTemplate );};
if !_cbf .UseRefinementAggregation {if !_cbf .UseRefinementAggregation {if _cbf ._gbcb {_gf .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_cbf ._gbcb =false ;};if _cbf ._bfcb {_gf .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_cbf ._bfcb =false ;};};};}else {if _cbf .SdHuffBMSizeSelection !=0{_gf .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_cbf .SdHuffBMSizeSelection =0;};if _cbf .SdHuffDecodeWidthSelection !=0{_gf .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_cbf .SdHuffDecodeWidthSelection =0;};if _cbf .SdHuffDecodeHeightSelection !=0{_gf .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_cbf .SdHuffDecodeHeightSelection =0;};};if !_cbf .UseRefinementAggregation {if _cbf .SdrTemplate !=0{_gf .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_cbf .SdrTemplate );
_cbf .SdrTemplate =0;};};if !_cbf .IsHuffmanEncoded ||!_cbf .UseRefinementAggregation {if _cbf .SdHuffAggInstanceSelection {_gf .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_cbf .SdHuffAggInstanceSelection );
};};return nil ;};func (_bbeb *GenericRegion )decodeTemplate2 (_afa ,_bgda ,_agg int ,_ggd ,_cdcbf int )(_aadc error ){const _bda ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_dfgg ,_aeag int ;_abag ,_abgg int ;
_gaae byte ;_fag ,_fgcc int ;);if _afa >=1{_gaae ,_aadc =_bbeb .Bitmap .GetByte (_cdcbf );if _aadc !=nil {return _dg .Wrap (_aadc ,_bda ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_abag =int (_gaae );};if _afa >=2{_gaae ,_aadc =_bbeb .Bitmap .GetByte (_cdcbf -_bbeb .Bitmap .RowStride );
if _aadc !=nil {return _dg .Wrap (_aadc ,_bda ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_abgg =int (_gaae )<<4;};_dfgg =(_abag >>3&0x7c)|(_abgg >>3&0x380);for _abaa :=0;_abaa < _agg ;_abaa =_fag {var (_cdef byte ;
_gac int ;);_fag =_abaa +8;if _ecb :=_bgda -_abaa ;_ecb > 8{_gac =8;}else {_gac =_ecb ;};if _afa > 0{_abag <<=8;if _fag < _bgda {_gaae ,_aadc =_bbeb .Bitmap .GetByte (_cdcbf +1);if _aadc !=nil {return _dg .Wrap (_aadc ,_bda ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_abag |=int (_gaae );};};if _afa > 1{_abgg <<=8;if _fag < _bgda {_gaae ,_aadc =_bbeb .Bitmap .GetByte (_cdcbf -_bbeb .Bitmap .RowStride +1);if _aadc !=nil {return _dg .Wrap (_aadc ,_bda ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_abgg |=int (_gaae )<<4;};};for _dafb :=0;_dafb < _gac ;_dafb ++{_adfg :=uint (10-_dafb );if _bbeb ._edd {_aeag =_bbeb .overrideAtTemplate2 (_dfgg ,_abaa +_dafb ,_afa ,int (_cdef ),_dafb );_bbeb ._ecg .SetIndex (int32 (_aeag ));}else {_bbeb ._ecg .SetIndex (int32 (_dfgg ));
};_fgcc ,_aadc =_bbeb ._beed .DecodeBit (_bbeb ._ecg );if _aadc !=nil {return _dg .Wrap (_aadc ,_bda ,"");};_cdef |=byte (_fgcc <<uint (7-_dafb ));_dfgg =((_dfgg &0x1bd)<<1)|_fgcc |((_abag >>_adfg )&0x4)|((_abgg >>_adfg )&0x80);};if _cgfd :=_bbeb .Bitmap .SetByte (_ggd ,_cdef );
_cgfd !=nil {return _dg .Wrap (_cgfd ,_bda ,"");};_ggd ++;_cdcbf ++;};return nil ;};func (_gbbe *TextRegion )encodeSymbols (_bfgca _ed .BinaryWriter )(_acddb int ,_ceag error ){const _gged ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_aeagc :=make ([]byte ,4);_c .BigEndian .PutUint32 (_aeagc ,_gbbe .NumberOfSymbols );if _acddb ,_ceag =_bfgca .Write (_aeagc );_ceag !=nil {return _acddb ,_dg .Wrap (_ceag ,_gged ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_cedf ,_ceag :=_f .NewClassedPoints (_gbbe ._cage ,_gbbe ._abae );if _ceag !=nil {return 0,_dg .Wrap (_ceag ,_gged ,"");};var _ebfc ,_eagbd int ;_afec :=_ef .New ();_afec .Init ();if _ceag =_afec .EncodeInteger (_ef .IADT ,0);_ceag !=nil {return _acddb ,_dg .Wrap (_ceag ,_gged ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_aggb ,_ceag :=_cedf .GroupByY ();if _ceag !=nil {return 0,_dg .Wrap (_ceag ,_gged ,"");};for _ ,_bdagg :=range _aggb {_bgea :=int (_bdagg .YAtIndex (0));_gcbc :=_bgea -_ebfc ;if _ceag =_afec .EncodeInteger (_ef .IADT ,_gcbc );_ceag !=nil {return _acddb ,_dg .Wrap (_ceag ,_gged ,"");
};var _ffdf int ;for _eebb ,_gadf :=range _bdagg .IntSlice {switch _eebb {case 0:_gdcd :=int (_bdagg .XAtIndex (_eebb ))-_eagbd ;if _ceag =_afec .EncodeInteger (_ef .IAFS ,_gdcd );_ceag !=nil {return _acddb ,_dg .Wrap (_ceag ,_gged ,"");};_eagbd +=_gdcd ;
_ffdf =_eagbd ;default:_aefae :=int (_bdagg .XAtIndex (_eebb ))-_ffdf ;if _ceag =_afec .EncodeInteger (_ef .IADS ,_aefae );_ceag !=nil {return _acddb ,_dg .Wrap (_ceag ,_gged ,"");};_ffdf +=_aefae ;};_gbgf ,_bbffb :=_gbbe ._bcae .Get (_gadf );if _bbffb !=nil {return _acddb ,_dg .Wrap (_bbffb ,_gged ,"");
};_dfagf ,_ggdb :=_gbbe ._gcgc [_gbgf ];if !_ggdb {_dfagf ,_ggdb =_gbbe ._edae [_gbgf ];if !_ggdb {return _acddb ,_dg .Errorf (_gged ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_gbgf );
};};if _bbffb =_afec .EncodeIAID (_gbbe ._abcg ,_dfagf );_bbffb !=nil {return _acddb ,_dg .Wrap (_bbffb ,_gged ,"");};};if _ceag =_afec .EncodeOOB (_ef .IADS );_ceag !=nil {return _acddb ,_dg .Wrap (_ceag ,_gged ,"");};};_afec .Final ();_ffdd ,_ceag :=_afec .WriteTo (_bfgca );
if _ceag !=nil {return _acddb ,_dg .Wrap (_ceag ,_gged ,"");};_acddb +=int (_ffdd );return _acddb ,nil ;};func (_aacf *GenericRefinementRegion )readAtPixels ()error {_aacf .GrAtX =make ([]int8 ,2);_aacf .GrAtY =make ([]int8 ,2);_bgc ,_dda :=_aacf ._fed .ReadByte ();
if _dda !=nil {return _dda ;};_aacf .GrAtX [0]=int8 (_bgc );_bgc ,_dda =_aacf ._fed .ReadByte ();if _dda !=nil {return _dda ;};_aacf .GrAtY [0]=int8 (_bgc );_bgc ,_dda =_aacf ._fed .ReadByte ();if _dda !=nil {return _dda ;};_aacf .GrAtX [1]=int8 (_bgc );
_bgc ,_dda =_aacf ._fed .ReadByte ();if _dda !=nil {return _dda ;};_aacf .GrAtY [1]=int8 (_bgc );return nil ;};type SegmentEncoder interface{Encode (_ddag _ed .BinaryWriter )(_aeae int ,_geec error );};func (_abd *GenericRefinementRegion )overrideAtTemplate0 (_egb ,_ded ,_edf ,_fbe ,_cac int )int {if _abd ._cg [0]{_egb &=0xfff7;
if _abd .GrAtY [0]==0&&int (_abd .GrAtX [0])>=-_cac {_egb |=(_fbe >>uint (7-(_cac +int (_abd .GrAtX [0])))&0x1)<<3;}else {_egb |=_abd .getPixel (_abd .RegionBitmap ,_ded +int (_abd .GrAtX [0]),_edf +int (_abd .GrAtY [0]))<<3;};};if _abd ._cg [1]{_egb &=0xefff;
if _abd .GrAtY [1]==0&&int (_abd .GrAtX [1])>=-_cac {_egb |=(_fbe >>uint (7-(_cac +int (_abd .GrAtX [1])))&0x1)<<12;}else {_egb |=_abd .getPixel (_abd .ReferenceBitmap ,_ded +int (_abd .GrAtX [1]),_edf +int (_abd .GrAtY [1]));};};return _egb ;};func (_cdfc *SymbolDictionary )encodeRefinementATFlags (_ddbfe _ed .BinaryWriter )(_ccce int ,_bfgc error ){const _caegc ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_cdfc .UseRefinementAggregation ||_cdfc .SdrTemplate !=0{return 0,nil ;};for _gdfd :=0;_gdfd < 2;_gdfd ++{if _bfgc =_ddbfe .WriteByte (byte (_cdfc .SdrATX [_gdfd ]));_bfgc !=nil {return _ccce ,_dg .Wrapf (_bfgc ,_caegc ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_gdfd );
};_ccce ++;if _bfgc =_ddbfe .WriteByte (byte (_cdfc .SdrATY [_gdfd ]));_bfgc !=nil {return _ccce ,_dg .Wrapf (_bfgc ,_caegc ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_gdfd );};_ccce ++;};return _ccce ,nil ;};func (_bc *EndOfStripe )parseHeader ()error {_ba ,_fb :=_bc ._dc .ReadBits (32);
if _fb !=nil {return _fb ;};_bc ._gg =int (_ba &_b .MaxInt32 );return nil ;};func (_aebe *GenericRegion )overrideAtTemplate1 (_ebdd ,_gbgg ,_debb ,_cabb ,_eeag int )int {_ebdd &=0x1FF7;if _aebe .GBAtY [0]==0&&_aebe .GBAtX [0]>=-int8 (_eeag ){_ebdd |=(_cabb >>uint (7-(int8 (_eeag )+_aebe .GBAtX [0]))&0x1)<<3;
}else {_ebdd |=int (_aebe .getPixel (_gbgg +int (_aebe .GBAtX [0]),_debb +int (_aebe .GBAtY [0])))<<3;};return _ebdd ;};func (_bgg *Header )referenceSize ()uint {switch {case _bgg .SegmentNumber <=255:return 1;case _bgg .SegmentNumber <=65535:return 2;
default:return 4;};};func (_abab *SymbolDictionary )decodeHeightClassCollectiveBitmap (_acbc int64 ,_gcfd ,_cebf uint32 )(*_f .Bitmap ,error ){if _acbc ==0{_efce :=_f .New (int (_cebf ),int (_gcfd ));var (_dgcd byte ;_dedf error ;);for _efee :=0;_efee < len (_efce .Data );
_efee ++{_dgcd ,_dedf =_abab ._eecc .ReadByte ();if _dedf !=nil {return nil ,_dedf ;};if _dedf =_efce .SetByte (_efee ,_dgcd );_dedf !=nil {return nil ,_dedf ;};};return _efce ,nil ;};if _abab ._gffc ==nil {_abab ._gffc =NewGenericRegion (_abab ._eecc );
};_abab ._gffc .setParameters (true ,_abab ._eecc .AbsolutePosition (),_acbc ,_gcfd ,_cebf );_afeae ,_bgae :=_abab ._gffc .GetRegionBitmap ();if _bgae !=nil {return nil ,_bgae ;};return _afeae ,nil ;};func (_gbef *Header )writeFlags (_eaf _ed .BinaryWriter )(_gfb error ){const _ffade ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_fgbb :=byte (_gbef .Type );if _gfb =_eaf .WriteByte (_fgbb );_gfb !=nil {return _dg .Wrap (_gfb ,_ffade ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_gbef .RetainFlag &&!_gbef .PageAssociationFieldSize {return nil ;};if _gfb =_eaf .SkipBits (-8);_gfb !=nil {return _dg .Wrap (_gfb ,_ffade ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _eaaa int ;if _gbef .RetainFlag {_eaaa =1;};if _gfb =_eaf .WriteBit (_eaaa );_gfb !=nil {return _dg .Wrap (_gfb ,_ffade ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_eaaa =0;if _gbef .PageAssociationFieldSize {_eaaa =1;
};if _gfb =_eaf .WriteBit (_eaaa );_gfb !=nil {return _dg .Wrap (_gfb ,_ffade ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_eaf .FinishByte ();return nil ;};func (_aafc *HalftoneRegion )computeSegmentDataStructure ()error {_aafc .DataOffset =_aafc ._cfc .AbsolutePosition ();
_aafc .DataHeaderLength =_aafc .DataOffset -_aafc .DataHeaderOffset ;_aafc .DataLength =int64 (_aafc ._cfc .AbsoluteLength ())-_aafc .DataHeaderLength ;return nil ;};func (_dde *GenericRefinementRegion )getPixel (_cef *_f .Bitmap ,_dbe ,_ca int )int {if _dbe < 0||_dbe >=_cef .Width {return 0;
};if _ca < 0||_ca >=_cef .Height {return 0;};if _cef .GetPixel (_dbe ,_ca ){return 1;};return 0;};func (_eceg *PatternDictionary )readIsMMREncoded ()error {_dadgb ,_fdcg :=_eceg ._agce .ReadBit ();if _fdcg !=nil {return _fdcg ;};if _dadgb !=0{_eceg .IsMMREncoded =true ;
};return nil ;};func (_efdd *Header )readHeaderLength (_bded *_ed .Reader ,_gbggg int64 ){_efdd .HeaderLength =_bded .AbsolutePosition ()-_gbggg ;};func (_dfda *template1 )form (_faea ,_gfe ,_ggg ,_agee ,_cce int16 )int16 {return ((_faea &0x02)<<8)|(_gfe <<6)|((_ggg &0x03)<<4)|(_agee <<1)|_cce ;
};func (_gcfb *GenericRegion )decodeTemplate0a (_fcab ,_fdb ,_ggc int ,_fgf ,_cebc int )(_agdc error ){const _fff ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_gfca ,_addd int ;_dafg ,_fdg int ;_cega byte ;
_edbf int ;);if _fcab >=1{_cega ,_agdc =_gcfb .Bitmap .GetByte (_cebc );if _agdc !=nil {return _dg .Wrap (_agdc ,_fff ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dafg =int (_cega );};if _fcab >=2{_cega ,_agdc =_gcfb .Bitmap .GetByte (_cebc -_gcfb .Bitmap .RowStride );
if _agdc !=nil {return _dg .Wrap (_agdc ,_fff ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fdg =int (_cega )<<6;};_gfca =(_dafg &0xf0)|(_fdg &0x3800);for _gdce :=0;_gdce < _ggc ;_gdce =_edbf {var (_fcga byte ;_dfgc int ;);_edbf =_gdce +8;if _eadb :=_fdb -_gdce ;
_eadb > 8{_dfgc =8;}else {_dfgc =_eadb ;};if _fcab > 0{_dafg <<=8;if _edbf < _fdb {_cega ,_agdc =_gcfb .Bitmap .GetByte (_cebc +1);if _agdc !=nil {return _dg .Wrap (_agdc ,_fff ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_dafg |=int (_cega );
};};if _fcab > 1{_daadd :=_cebc -_gcfb .Bitmap .RowStride +1;_fdg <<=8;if _edbf < _fdb {_cega ,_agdc =_gcfb .Bitmap .GetByte (_daadd );if _agdc !=nil {return _dg .Wrap (_agdc ,_fff ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fdg |=int (_cega )<<6;
}else {_fdg |=0;};};for _bcc :=0;_bcc < _dfgc ;_bcc ++{_ccef :=uint (7-_bcc );if _gcfb ._edd {_addd =_gcfb .overrideAtTemplate0a (_gfca ,_gdce +_bcc ,_fcab ,int (_fcga ),_bcc ,int (_ccef ));_gcfb ._ecg .SetIndex (int32 (_addd ));}else {_gcfb ._ecg .SetIndex (int32 (_gfca ));
};var _bgcd int ;_bgcd ,_agdc =_gcfb ._beed .DecodeBit (_gcfb ._ecg );if _agdc !=nil {return _dg .Wrap (_agdc ,_fff ,"");};_fcga |=byte (_bgcd )<<_ccef ;_gfca =((_gfca &0x7bf7)<<1)|_bgcd |((_dafg >>_ccef )&0x10)|((_fdg >>_ccef )&0x800);};if _daaa :=_gcfb .Bitmap .SetByte (_fgf ,_fcga );
_daaa !=nil {return _dg .Wrap (_daaa ,_fff ,"");};_fgf ++;_cebc ++;};return nil ;};func (_gegbd *PatternDictionary )GetDictionary ()([]*_f .Bitmap ,error ){if _gegbd .Patterns !=nil {return _gegbd .Patterns ,nil ;};if !_gegbd .IsMMREncoded {_gegbd .setGbAtPixels ();
};_agab :=NewGenericRegion (_gegbd ._agce );_agab .setParametersMMR (_gegbd .IsMMREncoded ,_gegbd .DataOffset ,_gegbd .DataLength ,uint32 (_gegbd .HdpHeight ),(_gegbd .GrayMax +1)*uint32 (_gegbd .HdpWidth ),_gegbd .HDTemplate ,false ,false ,_gegbd .GBAtX ,_gegbd .GBAtY );
_cbde ,_dfbdf :=_agab .GetRegionBitmap ();if _dfbdf !=nil {return nil ,_dfbdf ;};if _dfbdf =_gegbd .extractPatterns (_cbde );_dfbdf !=nil {return nil ,_dfbdf ;};return _gegbd .Patterns ,nil ;};func _fefb (_efaf int )int {if _efaf ==0{return 0;};_efaf |=_efaf >>1;
_efaf |=_efaf >>2;_efaf |=_efaf >>4;_efaf |=_efaf >>8;_efaf |=_efaf >>16;return (_efaf +1)>>1;};func (_afef *GenericRegion )updateOverrideFlags ()error {const _edaf ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _afef .GBAtX ==nil ||_afef .GBAtY ==nil {return nil ;};if len (_afef .GBAtX )!=len (_afef .GBAtY ){return _dg .Errorf (_edaf ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_afef .GBAtX ),len (_afef .GBAtY ));
};_afef .GBAtOverride =make ([]bool ,len (_afef .GBAtX ));switch _afef .GBTemplate {case 0:if !_afef .UseExtTemplates {if _afef .GBAtX [0]!=3||_afef .GBAtY [0]!=-1{_afef .setOverrideFlag (0);};if _afef .GBAtX [1]!=-3||_afef .GBAtY [1]!=-1{_afef .setOverrideFlag (1);
};if _afef .GBAtX [2]!=2||_afef .GBAtY [2]!=-2{_afef .setOverrideFlag (2);};if _afef .GBAtX [3]!=-2||_afef .GBAtY [3]!=-2{_afef .setOverrideFlag (3);};}else {if _afef .GBAtX [0]!=-2||_afef .GBAtY [0]!=0{_afef .setOverrideFlag (0);};if _afef .GBAtX [1]!=0||_afef .GBAtY [1]!=-2{_afef .setOverrideFlag (1);
};if _afef .GBAtX [2]!=-2||_afef .GBAtY [2]!=-1{_afef .setOverrideFlag (2);};if _afef .GBAtX [3]!=-1||_afef .GBAtY [3]!=-2{_afef .setOverrideFlag (3);};if _afef .GBAtX [4]!=1||_afef .GBAtY [4]!=-2{_afef .setOverrideFlag (4);};if _afef .GBAtX [5]!=2||_afef .GBAtY [5]!=-1{_afef .setOverrideFlag (5);
};if _afef .GBAtX [6]!=-3||_afef .GBAtY [6]!=0{_afef .setOverrideFlag (6);};if _afef .GBAtX [7]!=-4||_afef .GBAtY [7]!=0{_afef .setOverrideFlag (7);};if _afef .GBAtX [8]!=2||_afef .GBAtY [8]!=-2{_afef .setOverrideFlag (8);};if _afef .GBAtX [9]!=3||_afef .GBAtY [9]!=-1{_afef .setOverrideFlag (9);
};if _afef .GBAtX [10]!=-2||_afef .GBAtY [10]!=-2{_afef .setOverrideFlag (10);};if _afef .GBAtX [11]!=-3||_afef .GBAtY [11]!=-1{_afef .setOverrideFlag (11);};};case 1:if _afef .GBAtX [0]!=3||_afef .GBAtY [0]!=-1{_afef .setOverrideFlag (0);};case 2:if _afef .GBAtX [0]!=2||_afef .GBAtY [0]!=-1{_afef .setOverrideFlag (0);
};case 3:if _afef .GBAtX [0]!=2||_afef .GBAtY [0]!=-1{_afef .setOverrideFlag (0);};};return nil ;};func (_fcbc *SymbolDictionary )readNumberOfExportedSymbols ()error {_cadeb ,_bba :=_fcbc ._eecc .ReadBits (32);if _bba !=nil {return _bba ;};_fcbc .NumberOfExportedSymbols =uint32 (_cadeb &_b .MaxUint32 );
return nil ;};func (_feea *TableSegment )HtHigh ()int32 {return _feea ._bbdc };func (_ggbf *TableSegment )HtPS ()int32 {return _ggbf ._cbacb };func (_fcbb *TextRegion )readUseRefinement ()error {if !_fcbb .UseRefinement ||_fcbb .SbrTemplate !=0{return nil ;
};var (_ecbef byte ;_efda error ;);_fcbb .SbrATX =make ([]int8 ,2);_fcbb .SbrATY =make ([]int8 ,2);_ecbef ,_efda =_fcbb ._cbge .ReadByte ();if _efda !=nil {return _efda ;};_fcbb .SbrATX [0]=int8 (_ecbef );_ecbef ,_efda =_fcbb ._cbge .ReadByte ();if _efda !=nil {return _efda ;
};_fcbb .SbrATY [0]=int8 (_ecbef );_ecbef ,_efda =_fcbb ._cbge .ReadByte ();if _efda !=nil {return _efda ;};_fcbb .SbrATX [1]=int8 (_ecbef );_ecbef ,_efda =_fcbb ._cbge .ReadByte ();if _efda !=nil {return _efda ;};_fcbb .SbrATY [1]=int8 (_ecbef );return nil ;
};func (_cea *PageInformationSegment )readContainsRefinement ()error {_abaf ,_bdgg :=_cea ._efcg .ReadBit ();if _bdgg !=nil {return _bdgg ;};if _abaf ==1{_cea ._fdd =true ;};return nil ;};type EncodeInitializer interface{InitEncode ();};func (_gdfag *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_dcae int ;
_gcaab int32 ;_cedg error ;_gdbg =int32 (_gdfag ._eaae +_gdfag .NumberOfNewSymbols );_egeg =make ([]int ,_gdbg ););for _abce :=int32 (0);_abce < _gdbg ;_abce +=_gcaab {if _gdfag .IsHuffmanEncoded {_egea ,_ccdge :=_ae .GetStandardTable (1);if _ccdge !=nil {return nil ,_ccdge ;
};_gdgg ,_ccdge :=_egea .Decode (_gdfag ._eecc );if _ccdge !=nil {return nil ,_ccdge ;};_gcaab =int32 (_gdgg );}else {_gcaab ,_cedg =_gdfag ._bfdg .DecodeInt (_gdfag ._fdef );if _cedg !=nil {return nil ,_cedg ;};};if _gcaab !=0{if _abce +_gcaab > _gdbg {return nil ,_dg .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _dfeb :=_abce ;_dfeb < _abce +_gcaab ;_dfeb ++{_egeg [_dfeb ]=_dcae ;};};if _dcae ==0{_dcae =1;}else {_dcae =0;};};return _egeg ,nil ;};func (_cbab *GenericRegion )copyLineAbove (_bde int )error {_cca :=_bde *_cbab .Bitmap .RowStride ;_gbg :=_cca -_cbab .Bitmap .RowStride ;
for _cgf :=0;_cgf < _cbab .Bitmap .RowStride ;_cgf ++{_eae ,_cfg :=_cbab .Bitmap .GetByte (_gbg );if _cfg !=nil {return _cfg ;};_gbg ++;if _cfg =_cbab .Bitmap .SetByte (_cca ,_eae );_cfg !=nil {return _cfg ;};_cca ++;};return nil ;};func (_fgg *PageInformationSegment )Encode (w _ed .BinaryWriter )(_gbcc int ,_ebbd error ){const _def ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_cbagf :=make ([]byte ,4);_c .BigEndian .PutUint32 (_cbagf ,uint32 (_fgg .PageBMWidth ));_gbcc ,_ebbd =w .Write (_cbagf );if _ebbd !=nil {return _gbcc ,_dg .Wrap (_ebbd ,_def ,"\u0077\u0069\u0064t\u0068");};_c .BigEndian .PutUint32 (_cbagf ,uint32 (_fgg .PageBMHeight ));
var _eeabf int ;_eeabf ,_ebbd =w .Write (_cbagf );if _ebbd !=nil {return _eeabf +_gbcc ,_dg .Wrap (_ebbd ,_def ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_gbcc +=_eeabf ;_c .BigEndian .PutUint32 (_cbagf ,uint32 (_fgg .ResolutionX ));_eeabf ,_ebbd =w .Write (_cbagf );
if _ebbd !=nil {return _eeabf +_gbcc ,_dg .Wrap (_ebbd ,_def ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_gbcc +=_eeabf ;_c .BigEndian .PutUint32 (_cbagf ,uint32 (_fgg .ResolutionY ));if _eeabf ,_ebbd =w .Write (_cbagf );_ebbd !=nil {return _eeabf +_gbcc ,_dg .Wrap (_ebbd ,_def ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_gbcc +=_eeabf ;if _ebbd =_fgg .encodeFlags (w );_ebbd !=nil {return _gbcc ,_dg .Wrap (_ebbd ,_def ,"");};_gbcc ++;if _eeabf ,_ebbd =_fgg .encodeStripingInformation (w );_ebbd !=nil {return _gbcc ,_dg .Wrap (_ebbd ,_def ,"");};_gbcc +=_eeabf ;return _gbcc ,nil ;
};func (_gce *GenericRefinementRegion )decodeSLTP ()(int ,error ){_gce .Template .setIndex (_gce ._af );return _gce ._fg .DecodeBit (_gce ._af );};func (_dfb *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_dgc ,_eea ,_agd ,_deba ,_eda ,_bef ,_fca ,_eaa ,_abg int )(_daad error ){var (_gag ,_acda int ;
_cbd ,_gad int ;_bgd ,_cba int ;_dfd byte ;);if _dgc > 0{_dfd ,_daad =_dfb .RegionBitmap .GetByte (_fca -_agd );if _daad !=nil {return _daad ;};_cbd =int (_dfd );};if _eaa > 0&&_eaa <=_dfb .ReferenceBitmap .Height {_dfd ,_daad =_dfb .ReferenceBitmap .GetByte (_abg -_deba +_bef );
if _daad !=nil {return _daad ;};_gad =int (_dfd )<<2;};if _eaa >=0&&_eaa < _dfb .ReferenceBitmap .Height {_dfd ,_daad =_dfb .ReferenceBitmap .GetByte (_abg +_bef );if _daad !=nil {return _daad ;};_bgd =int (_dfd );};if _eaa > -2&&_eaa < _dfb .ReferenceBitmap .Height -1{_dfd ,_daad =_dfb .ReferenceBitmap .GetByte (_abg +_deba +_bef );
if _daad !=nil {return _daad ;};_cba =int (_dfd );};_gag =((_cbd >>5)&0x6)|((_cba >>2)&0x30)|(_bgd &0xc0)|(_gad &0x200);_acda =((_cba >>2)&0x70)|(_bgd &0xc0)|(_gad &0x700);var _dff int ;for _gbe :=0;_gbe < _eda ;_gbe =_dff {var (_age int ;_edab int ;);
_dff =_gbe +8;if _age =_eea -_gbe ;_age > 8{_age =8;};_bfb :=_dff < _eea ;_ddb :=_dff < _dfb .ReferenceBitmap .Width ;_ccf :=_bef +1;if _dgc > 0{_dfd =0;if _bfb {_dfd ,_daad =_dfb .RegionBitmap .GetByte (_fca -_agd +1);if _daad !=nil {return _daad ;};};
_cbd =(_cbd <<8)|int (_dfd );};if _eaa > 0&&_eaa <=_dfb .ReferenceBitmap .Height {var _adc int ;if _ddb {_dfd ,_daad =_dfb .ReferenceBitmap .GetByte (_abg -_deba +_ccf );if _daad !=nil {return _daad ;};_adc =int (_dfd )<<2;};_gad =(_gad <<8)|_adc ;};if _eaa >=0&&_eaa < _dfb .ReferenceBitmap .Height {_dfd =0;
if _ddb {_dfd ,_daad =_dfb .ReferenceBitmap .GetByte (_abg +_ccf );if _daad !=nil {return _daad ;};};_bgd =(_bgd <<8)|int (_dfd );};if _eaa > -2&&_eaa < (_dfb .ReferenceBitmap .Height -1){_dfd =0;if _ddb {_dfd ,_daad =_dfb .ReferenceBitmap .GetByte (_abg +_deba +_ccf );
if _daad !=nil {return _daad ;};};_cba =(_cba <<8)|int (_dfd );};for _eabe :=0;_eabe < _age ;_eabe ++{var _cdg int ;_dgd :=(_acda >>4)&0x1ff;switch _dgd {case 0x1ff:_cdg =1;case 0x00:_cdg =0;default:_dfb ._af .SetIndex (int32 (_gag ));_cdg ,_daad =_dfb ._fg .DecodeBit (_dfb ._af );
if _daad !=nil {return _daad ;};};_ge :=uint (7-_eabe );_edab |=_cdg <<_ge ;_gag =((_gag &0x0d6)<<1)|_cdg |(_cbd >>_ge +5)&0x002|((_cba >>_ge +2)&0x010)|((_bgd >>_ge )&0x040)|((_gad >>_ge )&0x200);_acda =((_acda &0xdb)<<1)|((_cba >>_ge +2)&0x010)|((_bgd >>_ge )&0x080)|((_gad >>_ge )&0x400);
};_daad =_dfb .RegionBitmap .SetByte (_fca ,byte (_edab ));if _daad !=nil {return _daad ;};_fca ++;_abg ++;};return nil ;};func (_aaae *TableSegment )HtOOB ()int32 {return _aaae ._deea };func (_bcecd *PageInformationSegment )Init (h *Header ,r *_ed .Reader )(_cgdd error ){_bcecd ._efcg =r ;
if _cgdd =_bcecd .parseHeader ();_cgdd !=nil {return _dg .Wrap (_cgdd ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_cgbbb *PageInformationSegment )Size ()int {return 19};
type TextRegion struct{_cbge *_ed .Reader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _f .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;
SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_cgeb int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_f .Bitmap ;
Symbols []*_f .Bitmap ;_efbd *_be .Decoder ;_adfgc *GenericRefinementRegion ;_dbefe *_be .DecoderStats ;_daca *_be .DecoderStats ;_aecbe *_be .DecoderStats ;_fegf *_be .DecoderStats ;_ecfgga *_be .DecoderStats ;_ceca *_be .DecoderStats ;_gbcf *_be .DecoderStats ;
_baea *_be .DecoderStats ;_gbfbd *_be .DecoderStats ;_bbef *_be .DecoderStats ;_deec *_be .DecoderStats ;_bedb int8 ;_cbgg *_ae .FixedSizeTable ;Header *Header ;_dcf _ae .Tabler ;_dgfg _ae .Tabler ;_egfg _ae .Tabler ;_bgabd _ae .Tabler ;_ecdc _ae .Tabler ;
_eedg _ae .Tabler ;_aacg _ae .Tabler ;_ggfgc _ae .Tabler ;_gcgc ,_edae map[int ]int ;_abae []int ;_cage *_f .Points ;_bcecdb *_f .Bitmaps ;_bcae *_dd .IntSlice ;_dbaa ,_abcg int ;_ffbf *_f .Boxes ;};func (_ddceg *TextRegion )decodeStripT ()(_fbbbd int64 ,_addfe error ){if _ddceg .IsHuffmanEncoded {if _ddceg .SbHuffDT ==3{if _ddceg ._egfg ==nil {var _edcca int ;
if _ddceg .SbHuffFS ==3{_edcca ++;};if _ddceg .SbHuffDS ==3{_edcca ++;};_ddceg ._egfg ,_addfe =_ddceg .getUserTable (_edcca );if _addfe !=nil {return 0,_addfe ;};};_fbbbd ,_addfe =_ddceg ._egfg .Decode (_ddceg ._cbge );if _addfe !=nil {return 0,_addfe ;
};}else {var _acec _ae .Tabler ;_acec ,_addfe =_ae .GetStandardTable (11+int (_ddceg .SbHuffDT ));if _addfe !=nil {return 0,_addfe ;};_fbbbd ,_addfe =_acec .Decode (_ddceg ._cbge );if _addfe !=nil {return 0,_addfe ;};};}else {var _cdbf int32 ;_cdbf ,_addfe =_ddceg ._efbd .DecodeInt (_ddceg ._dbefe );
if _addfe !=nil {return 0,_addfe ;};_fbbbd =int64 (_cdbf );};_fbbbd *=int64 (-_ddceg .SbStrips );return _fbbbd ,nil ;};func (_eedd *Header )readNumberOfReferredToSegments (_dfdb *_ed .Reader )(uint64 ,error ){const _dad ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_face ,_fgag :=_dfdb .ReadBits (3);if _fgag !=nil {return 0,_dg .Wrap (_fgag ,_dad ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_face &=0xf;var _cbefa []byte ;if _face <=4{_cbefa =make ([]byte ,5);for _eaee :=0;_eaee <=4;_eaee ++{_dcgb ,_ggab :=_dfdb .ReadBit ();
if _ggab !=nil {return 0,_dg .Wrap (_ggab ,_dad ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cbefa [_eaee ]=byte (_dcgb );};}else {_face ,_fgag =_dfdb .ReadBits (29);if _fgag !=nil {return 0,_fgag ;};_face &=_b .MaxInt32 ;
_dfee :=(_face +8)>>3;_dfee <<=3;_cbefa =make ([]byte ,_dfee );var _bfad uint64 ;for _bfad =0;_bfad < _dfee ;_bfad ++{_edcc ,_dcgc :=_dfdb .ReadBit ();if _dcgc !=nil {return 0,_dg .Wrap (_dcgc ,_dad ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_cbefa [_bfad ]=byte (_edcc );};};return _face ,nil ;};type Type int ;func (_eebc *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _eebc .IsHuffmanEncoded {return _eebc .decodeHeightClassDeltaHeightWithHuffman ();};_afede ,_cccef :=_eebc ._bfdg .DecodeInt (_eebc ._gfed );
if _cccef !=nil {return 0,_cccef ;};return int64 (_afede ),nil ;};func (_gebb *SymbolDictionary )decodeRefinedSymbol (_gcad ,_facg uint32 )error {var (_fgdcd int ;_dgda ,_fegg int32 ;);if _gebb .IsHuffmanEncoded {_fedc ,_cgedg :=_gebb ._eecc .ReadBits (byte (_gebb ._cegc ));
if _cgedg !=nil {return _cgedg ;};_fgdcd =int (_fedc );_dfgb ,_cgedg :=_ae .GetStandardTable (15);if _cgedg !=nil {return _cgedg ;};_bfac ,_cgedg :=_dfgb .Decode (_gebb ._eecc );if _cgedg !=nil {return _cgedg ;};_dgda =int32 (_bfac );_bfac ,_cgedg =_dfgb .Decode (_gebb ._eecc );
if _cgedg !=nil {return _cgedg ;};_fegg =int32 (_bfac );_dfgb ,_cgedg =_ae .GetStandardTable (1);if _cgedg !=nil {return _cgedg ;};if _ ,_cgedg =_dfgb .Decode (_gebb ._eecc );_cgedg !=nil {return _cgedg ;};_gebb ._eecc .Align ();}else {_dea ,_ggfg :=_gebb ._bfdg .DecodeIAID (uint64 (_gebb ._cegc ),_gebb ._dge );
if _ggfg !=nil {return _ggfg ;};_fgdcd =int (_dea );_dgda ,_ggfg =_gebb ._bfdg .DecodeInt (_gebb ._gada );if _ggfg !=nil {return _ggfg ;};_fegg ,_ggfg =_gebb ._bfdg .DecodeInt (_gebb ._gfddb );if _ggfg !=nil {return _ggfg ;};};if _fgfe :=_gebb .setSymbolsArray ();
_fgfe !=nil {return _fgfe ;};_fcge :=_gebb ._egad [_fgdcd ];if _gefgf :=_gebb .decodeNewSymbols (_gcad ,_facg ,_fcge ,_dgda ,_fegg );_gefgf !=nil {return _gefgf ;};if _gebb .IsHuffmanEncoded {_gebb ._eecc .Align ();};return nil ;};func (_afd *Header )readHeaderFlags ()error {const _cace ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_degda ,_cbac :=_afd .Reader .ReadBit ();if _cbac !=nil {return _dg .Wrap (_cbac ,_cace ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _degda !=0{_afd .RetainFlag =true ;};_degda ,_cbac =_afd .Reader .ReadBit ();if _cbac !=nil {return _dg .Wrap (_cbac ,_cace ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _degda !=0{_afd .PageAssociationFieldSize =true ;};_aaa ,_cbac :=_afd .Reader .ReadBits (6);if _cbac !=nil {return _dg .Wrap (_cbac ,_cace ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_afd .Type =Type (int (_aaa ));return nil ;
};func (_cgb *GenericRegion )decodeTemplate3 (_aaf ,_bbfa ,_faa int ,_bga ,_bbd int )(_aadg error ){const _fcff ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_cgfc ,_caf int ;_cfb int ;_bdcc byte ;_dcd ,_bedc int ;
);if _aaf >=1{_bdcc ,_aadg =_cgb .Bitmap .GetByte (_bbd );if _aadg !=nil {return _dg .Wrap (_aadg ,_fcff ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cfb =int (_bdcc );};_cgfc =(_cfb >>1)&0x70;for _dafgb :=0;_dafgb < _faa ;_dafgb =_dcd {var (_efec byte ;
_ccec int ;);_dcd =_dafgb +8;if _geg :=_bbfa -_dafgb ;_geg > 8{_ccec =8;}else {_ccec =_geg ;};if _aaf >=1{_cfb <<=8;if _dcd < _bbfa {_bdcc ,_aadg =_cgb .Bitmap .GetByte (_bbd +1);if _aadg !=nil {return _dg .Wrap (_aadg ,_fcff ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_cfb |=int (_bdcc );};};for _bffa :=0;_bffa < _ccec ;_bffa ++{if _cgb ._edd {_caf =_cgb .overrideAtTemplate3 (_cgfc ,_dafgb +_bffa ,_aaf ,int (_efec ),_bffa );_cgb ._ecg .SetIndex (int32 (_caf ));}else {_cgb ._ecg .SetIndex (int32 (_cgfc ));};_bedc ,_aadg =_cgb ._beed .DecodeBit (_cgb ._ecg );
if _aadg !=nil {return _dg .Wrap (_aadg ,_fcff ,"");};_efec |=byte (_bedc )<<byte (7-_bffa );_cgfc =((_cgfc &0x1f7)<<1)|_bedc |((_cfb >>uint (8-_bffa ))&0x010);};if _adb :=_cgb .Bitmap .SetByte (_bga ,_efec );_adb !=nil {return _dg .Wrap (_adb ,_fcff ,"");
};_bga ++;_bbd ++;};return nil ;};func (_agac *TextRegion )decodeRdx ()(int64 ,error ){const _acde ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _agac .IsHuffmanEncoded {if _agac .SbHuffRDX ==3{if _agac ._eedg ==nil {var (_gead int ;_ffc error ;);
if _agac .SbHuffFS ==3{_gead ++;};if _agac .SbHuffDS ==3{_gead ++;};if _agac .SbHuffDT ==3{_gead ++;};if _agac .SbHuffRDWidth ==3{_gead ++;};if _agac .SbHuffRDHeight ==3{_gead ++;};_agac ._eedg ,_ffc =_agac .getUserTable (_gead );if _ffc !=nil {return 0,_dg .Wrap (_ffc ,_acde ,"");
};};return _agac ._eedg .Decode (_agac ._cbge );};_adfgf ,_bfbfb :=_ae .GetStandardTable (14+int (_agac .SbHuffRDX ));if _bfbfb !=nil {return 0,_dg .Wrap (_bfbfb ,_acde ,"");};return _adfgf .Decode (_agac ._cbge );};_ccfa ,_gffec :=_agac ._efbd .DecodeInt (_agac ._gbfbd );
if _gffec !=nil {return 0,_dg .Wrap (_gffec ,_acde ,"");};return int64 (_ccfa ),nil ;};func (_adce *RegionSegment )readCombinationOperator ()error {_bccf ,_abdca :=_adce ._gcc .ReadBits (3);if _abdca !=nil {return _abdca ;};_adce .CombinaionOperator =_f .CombinationOperator (_bccf &0xF);
return nil ;};func (_fbeg *SymbolDictionary )Encode (w _ed .BinaryWriter )(_dgfc int ,_gfg error ){const _cga ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _fbeg ==nil {return 0,_dg .Error (_cga ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");
};if _dgfc ,_gfg =_fbeg .encodeFlags (w );_gfg !=nil {return _dgfc ,_dg .Wrap (_gfg ,_cga ,"");};_ffgb ,_gfg :=_fbeg .encodeATFlags (w );if _gfg !=nil {return _dgfc ,_dg .Wrap (_gfg ,_cga ,"");};_dgfc +=_ffgb ;if _ffgb ,_gfg =_fbeg .encodeRefinementATFlags (w );
_gfg !=nil {return _dgfc ,_dg .Wrap (_gfg ,_cga ,"");};_dgfc +=_ffgb ;if _ffgb ,_gfg =_fbeg .encodeNumSyms (w );_gfg !=nil {return _dgfc ,_dg .Wrap (_gfg ,_cga ,"");};_dgfc +=_ffgb ;if _ffgb ,_gfg =_fbeg .encodeSymbols (w );_gfg !=nil {return _dgfc ,_dg .Wrap (_gfg ,_cga ,"");
};_dgfc +=_ffgb ;return _dgfc ,nil ;};type EndOfStripe struct{_dc *_ed .Reader ;_gg int ;};func (_gecdb *PatternDictionary )computeSegmentDataStructure ()error {_gecdb .DataOffset =_gecdb ._agce .AbsolutePosition ();_gecdb .DataHeaderLength =_gecdb .DataOffset -_gecdb .DataHeaderOffset ;
_gecdb .DataLength =int64 (_gecdb ._agce .AbsoluteLength ())-_gecdb .DataHeaderLength ;return nil ;};func (_fffb *PageInformationSegment )encodeStripingInformation (_gbccg _ed .BinaryWriter )(_eaed int ,_gefg error ){const _abgfd ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_fffb .IsStripe {if _eaed ,_gefg =_gbccg .Write ([]byte {0x00,0x00});_gefg !=nil {return 0,_dg .Wrap (_gefg ,_abgfd ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _eaed ,nil ;};_edad :=make ([]byte ,2);_c .BigEndian .PutUint16 (_edad ,_fffb .MaxStripeSize |1<<15);
if _eaed ,_gefg =_gbccg .Write (_edad );_gefg !=nil {return 0,_dg .Wrapf (_gefg ,_abgfd ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_fffb .MaxStripeSize );};return _eaed ,nil ;};func (_addfd *TextRegion )GetRegionInfo ()*RegionSegment {return _addfd .RegionInfo };
func (_efad *PageInformationSegment )readResolution ()error {_gbdad ,_gadb :=_efad ._efcg .ReadBits (32);if _gadb !=nil {return _gadb ;};_efad .ResolutionX =int (_gbdad &_b .MaxInt32 );_gbdad ,_gadb =_efad ._efcg .ReadBits (32);if _gadb !=nil {return _gadb ;
};_efad .ResolutionY =int (_gbdad &_b .MaxInt32 );return nil ;};func (_cfaa *SymbolDictionary )GetDictionary ()([]*_f .Bitmap ,error ){_gf .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_gf .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_gf .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_cfaa ._geb ,_cfaa ._cgeac );
}();if _cfaa ._geb ==nil {var _dbef error ;if _cfaa .UseRefinementAggregation {_cfaa ._cegc =_cfaa .getSbSymCodeLen ();};if !_cfaa .IsHuffmanEncoded {if _dbef =_cfaa .setCodingStatistics ();_dbef !=nil {return nil ,_dbef ;};};_cfaa ._cgeac =make ([]*_f .Bitmap ,_cfaa .NumberOfNewSymbols );
var _fdgg []int ;if _cfaa .IsHuffmanEncoded &&!_cfaa .UseRefinementAggregation {_fdgg =make ([]int ,_cfaa .NumberOfNewSymbols );};if _dbef =_cfaa .setSymbolsArray ();_dbef !=nil {return nil ,_dbef ;};var _cggf ,_gfad int64 ;_cfaa ._aefc =0;for _cfaa ._aefc < _cfaa .NumberOfNewSymbols {_gfad ,_dbef =_cfaa .decodeHeightClassDeltaHeight ();
if _dbef !=nil {return nil ,_dbef ;};_cggf +=_gfad ;var _bffe ,_dagd uint32 ;_fcfb :=int64 (_cfaa ._aefc );for {var _agfb int64 ;_agfb ,_dbef =_cfaa .decodeDifferenceWidth ();if _d .Is (_dbef ,_fe .ErrOOB ){break ;};if _dbef !=nil {return nil ,_dbef ;};
if _cfaa ._aefc >=_cfaa .NumberOfNewSymbols {break ;};_bffe +=uint32 (_agfb );_dagd +=_bffe ;if !_cfaa .IsHuffmanEncoded ||_cfaa .UseRefinementAggregation {if !_cfaa .UseRefinementAggregation {_dbef =_cfaa .decodeDirectlyThroughGenericRegion (_bffe ,uint32 (_cggf ));
if _dbef !=nil {return nil ,_dbef ;};}else {_dbef =_cfaa .decodeAggregate (_bffe ,uint32 (_cggf ));if _dbef !=nil {return nil ,_dbef ;};};}else if _cfaa .IsHuffmanEncoded &&!_cfaa .UseRefinementAggregation {_fdgg [_cfaa ._aefc ]=int (_bffe );};_cfaa ._aefc ++;
};if _cfaa .IsHuffmanEncoded &&!_cfaa .UseRefinementAggregation {var _acbe int64 ;if _cfaa .SdHuffBMSizeSelection ==0{var _dadc _ae .Tabler ;_dadc ,_dbef =_ae .GetStandardTable (1);if _dbef !=nil {return nil ,_dbef ;};_acbe ,_dbef =_dadc .Decode (_cfaa ._eecc );
if _dbef !=nil {return nil ,_dbef ;};}else {_acbe ,_dbef =_cfaa .huffDecodeBmSize ();if _dbef !=nil {return nil ,_dbef ;};};_cfaa ._eecc .Align ();var _fggd *_f .Bitmap ;_fggd ,_dbef =_cfaa .decodeHeightClassCollectiveBitmap (_acbe ,uint32 (_cggf ),_dagd );
if _dbef !=nil {return nil ,_dbef ;};_dbef =_cfaa .decodeHeightClassBitmap (_fggd ,_fcfb ,int (_cggf ),_fdgg );if _dbef !=nil {return nil ,_dbef ;};};};_gfbb ,_dbef :=_cfaa .getToExportFlags ();if _dbef !=nil {return nil ,_dbef ;};_cfaa .setExportedSymbols (_gfbb );
};return _cfaa ._geb ,nil ;};func (_gadd *Header )GetSegmentData ()(Segmenter ,error ){var _ebag Segmenter ;if _gadd .SegmentData !=nil {_ebag =_gadd .SegmentData ;};if _ebag ==nil {_bcb ,_ega :=_bdcd [_gadd .Type ];if !_ega {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_gadd .Type ,_gadd .Type );
};_ebag =_bcb ();_gf .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_gadd .SegmentNumber ,_gadd .SegmentDataStartOffset );
_bgcea ,_afed :=_gadd .subInputReader ();if _afed !=nil {return nil ,_afed ;};if _bedcf :=_ebag .Init (_gadd ,_bgcea );_bedcf !=nil {_gf .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_bedcf ,_ebag );
return nil ,_bedcf ;};_gadd .SegmentData =_ebag ;};return _ebag ,nil ;};func (_ecaa *GenericRegion )getPixel (_bdccc ,_dfgf int )int8 {if _bdccc < 0||_bdccc >=_ecaa .Bitmap .Width {return 0;};if _dfgf < 0||_dfgf >=_ecaa .Bitmap .Height {return 0;};if _ecaa .Bitmap .GetPixel (_bdccc ,_dfgf ){return 1;
};return 0;};func (_feed *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _feed ._ccaf };func (_fcfc *TextRegion )readHuffmanFlags ()error {var (_cbaac int ;_cedb uint64 ;_bffdb error ;);_ ,_bffdb =_fcfc ._cbge .ReadBit ();if _bffdb !=nil {return _bffdb ;
};_cbaac ,_bffdb =_fcfc ._cbge .ReadBit ();if _bffdb !=nil {return _bffdb ;};_fcfc .SbHuffRSize =int8 (_cbaac );_cedb ,_bffdb =_fcfc ._cbge .ReadBits (2);if _bffdb !=nil {return _bffdb ;};_fcfc .SbHuffRDY =int8 (_cedb )&0xf;_cedb ,_bffdb =_fcfc ._cbge .ReadBits (2);
if _bffdb !=nil {return _bffdb ;};_fcfc .SbHuffRDX =int8 (_cedb )&0xf;_cedb ,_bffdb =_fcfc ._cbge .ReadBits (2);if _bffdb !=nil {return _bffdb ;};_fcfc .SbHuffRDHeight =int8 (_cedb )&0xf;_cedb ,_bffdb =_fcfc ._cbge .ReadBits (2);if _bffdb !=nil {return _bffdb ;
};_fcfc .SbHuffRDWidth =int8 (_cedb )&0xf;_cedb ,_bffdb =_fcfc ._cbge .ReadBits (2);if _bffdb !=nil {return _bffdb ;};_fcfc .SbHuffDT =int8 (_cedb )&0xf;_cedb ,_bffdb =_fcfc ._cbge .ReadBits (2);if _bffdb !=nil {return _bffdb ;};_fcfc .SbHuffDS =int8 (_cedb )&0xf;
_cedb ,_bffdb =_fcfc ._cbge .ReadBits (2);if _bffdb !=nil {return _bffdb ;};_fcfc .SbHuffFS =int8 (_cedb )&0xf;return nil ;};func (_fadda *Header )String ()string {_ccba :=&_ec .Builder {};_ccba .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_ccba .WriteString (_a .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_fadda .SegmentNumber ));_ccba .WriteString (_a .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_fadda .Type ));
_ccba .WriteString (_a .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_fadda .RetainFlag ));_ccba .WriteString (_a .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fadda .PageAssociation ));
_ccba .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_fadda .PageAssociationFieldSize ));
_ccba .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_bdfa :=range _fadda .RTSNumbers {_ccba .WriteString (_a .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_bdfa ));};_ccba .WriteString (_a .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_fadda .HeaderLength ));
_ccba .WriteString (_a .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_fadda .SegmentDataLength ));_ccba .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_fadda .SegmentDataStartOffset ));
return _ccba .String ();};func (_egd *Header )readSegmentDataLength (_cfbd *_ed .Reader )(_gfag error ){_egd .SegmentDataLength ,_gfag =_cfbd .ReadBits (32);if _gfag !=nil {return _gfag ;};_egd .SegmentDataLength &=_b .MaxInt32 ;return nil ;};func (_fdbgd *HalftoneRegion )computeGrayScalePlanes (_ddae []*_f .Bitmap ,_abdc int )([][]int ,error ){_bgcc :=make ([][]int ,_fdbgd .HGridHeight );
for _caa :=0;_caa < len (_bgcc );_caa ++{_bgcc [_caa ]=make ([]int ,_fdbgd .HGridWidth );};for _cade :=0;_cade < int (_fdbgd .HGridHeight );_cade ++{for _ebed :=0;_ebed < int (_fdbgd .HGridWidth );_ebed +=8{var _cfgc int ;if _gegc :=int (_fdbgd .HGridWidth )-_ebed ;
_gegc > 8{_cfgc =8;}else {_cfgc =_gegc ;};_fbfa :=_ddae [0].GetByteIndex (_ebed ,_cade );for _bgdd :=0;_bgdd < _cfgc ;_bgdd ++{_ggca :=_bgdd +_ebed ;_bgcc [_cade ][_ggca ]=0;for _dcda :=0;_dcda < _abdc ;_dcda ++{_cbaa ,_fadd :=_ddae [_dcda ].GetByte (_fbfa );
if _fadd !=nil {return nil ,_fadd ;};_ecfgg :=_cbaa >>uint (7-_ggca &7);_accg :=_ecfgg &1;_gbbb :=1<<uint (_dcda );_bdca :=int (_accg )*_gbbb ;_bgcc [_cade ][_ggca ]+=_bdca ;};};};};return _bgcc ,nil ;};func (_eff *GenericRefinementRegion )decodeTypicalPredictedLine (_fa ,_gdd ,_eab ,_ead ,_aeb ,_gbb int )error {_agbe :=_fa -int (_eff .ReferenceDY );
_gfa :=_eff .ReferenceBitmap .GetByteIndex (0,_agbe );_ccc :=_eff .RegionBitmap .GetByteIndex (0,_fa );var _abf error ;switch _eff .TemplateID {case 0:_abf =_eff .decodeTypicalPredictedLineTemplate0 (_fa ,_gdd ,_eab ,_ead ,_aeb ,_gbb ,_ccc ,_agbe ,_gfa );
case 1:_abf =_eff .decodeTypicalPredictedLineTemplate1 (_fa ,_gdd ,_eab ,_ead ,_aeb ,_gbb ,_ccc ,_agbe ,_gfa );};return _abf ;};func (_bdag *SymbolDictionary )readRegionFlags ()error {var (_ffebb uint64 ;_geee int ;);_ ,_gfcag :=_bdag ._eecc .ReadBits (3);
if _gfcag !=nil {return _gfcag ;};_geee ,_gfcag =_bdag ._eecc .ReadBit ();if _gfcag !=nil {return _gfcag ;};_bdag .SdrTemplate =int8 (_geee );_ffebb ,_gfcag =_bdag ._eecc .ReadBits (2);if _gfcag !=nil {return _gfcag ;};_bdag .SdTemplate =int8 (_ffebb &0xf);
_geee ,_gfcag =_bdag ._eecc .ReadBit ();if _gfcag !=nil {return _gfcag ;};if _geee ==1{_bdag ._gbcb =true ;};_geee ,_gfcag =_bdag ._eecc .ReadBit ();if _gfcag !=nil {return _gfcag ;};if _geee ==1{_bdag ._bfcb =true ;};_geee ,_gfcag =_bdag ._eecc .ReadBit ();
if _gfcag !=nil {return _gfcag ;};if _geee ==1{_bdag .SdHuffAggInstanceSelection =true ;};_geee ,_gfcag =_bdag ._eecc .ReadBit ();if _gfcag !=nil {return _gfcag ;};_bdag .SdHuffBMSizeSelection =int8 (_geee );_ffebb ,_gfcag =_bdag ._eecc .ReadBits (2);if _gfcag !=nil {return _gfcag ;
};_bdag .SdHuffDecodeWidthSelection =int8 (_ffebb &0xf);_ffebb ,_gfcag =_bdag ._eecc .ReadBits (2);if _gfcag !=nil {return _gfcag ;};_bdag .SdHuffDecodeHeightSelection =int8 (_ffebb &0xf);_geee ,_gfcag =_bdag ._eecc .ReadBit ();if _gfcag !=nil {return _gfcag ;
};if _geee ==1{_bdag .UseRefinementAggregation =true ;};_geee ,_gfcag =_bdag ._eecc .ReadBit ();if _gfcag !=nil {return _gfcag ;};if _geee ==1{_bdag .IsHuffmanEncoded =true ;};return nil ;};func (_decd *SymbolDictionary )setAtPixels ()error {if _decd .IsHuffmanEncoded {return nil ;
};_bcdb :=1;if _decd .SdTemplate ==0{_bcdb =4;};if _eefg :=_decd .readAtPixels (_bcdb );_eefg !=nil {return _eefg ;};return nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;
RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader *_ed .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_cfd *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_baafd ,_bfff :=_cfd ._efcg .ReadBit ();
if _bfff !=nil {return _bfff ;};if _baafd ==1{_cfd ._ccaf =true ;};return nil ;};func (_fdgf *TextRegion )computeSymbolCodeLength ()error {if _fdgf .IsHuffmanEncoded {return _fdgf .symbolIDCodeLengths ();};_fdgf ._bedb =int8 (_b .Ceil (_b .Log (float64 (_fdgf .NumberOfSymbols ))/_b .Log (2)));
return nil ;};func NewGenericRegion (r *_ed .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_eag :r };};func (_cgfce *Header )Encode (w _ed .BinaryWriter )(_gcaa int ,_eed error ){const _ffac ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _bdg _ed .BinaryWriter ;_gf .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _eed !=nil {_gf .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_eed );
}else {_gf .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_cgfce );_gf .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _cgfce .SegmentData !=nil {_fgaa ,_efeg :=_cgfce .SegmentData .(SegmentEncoder );if !_efeg {return 0,_dg .Errorf (_ffac ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_cgfce .SegmentData );
};_bdg =_ed .BufferedMSB ();_gcaa ,_eed =_fgaa .Encode (_bdg );if _eed !=nil {return 0,_dg .Wrap (_eed ,_ffac ,"");};_cgfce .SegmentDataLength =uint64 (_gcaa );};if _cgfce .pageSize ()==4{_cgfce .PageAssociationFieldSize =true ;};var _cdgd int ;_cdgd ,_eed =_cgfce .writeSegmentNumber (w );
if _eed !=nil {return 0,_dg .Wrap (_eed ,_ffac ,"");};_gcaa +=_cdgd ;if _eed =_cgfce .writeFlags (w );_eed !=nil {return _gcaa ,_dg .Wrap (_eed ,_ffac ,"");};_gcaa ++;_cdgd ,_eed =_cgfce .writeReferredToCount (w );if _eed !=nil {return 0,_dg .Wrap (_eed ,_ffac ,"");
};_gcaa +=_cdgd ;_cdgd ,_eed =_cgfce .writeReferredToSegments (w );if _eed !=nil {return 0,_dg .Wrap (_eed ,_ffac ,"");};_gcaa +=_cdgd ;_cdgd ,_eed =_cgfce .writeSegmentPageAssociation (w );if _eed !=nil {return 0,_dg .Wrap (_eed ,_ffac ,"");};_gcaa +=_cdgd ;
_cdgd ,_eed =_cgfce .writeSegmentDataLength (w );if _eed !=nil {return 0,_dg .Wrap (_eed ,_ffac ,"");};_gcaa +=_cdgd ;_cgfce .HeaderLength =int64 (_gcaa )-int64 (_cgfce .SegmentDataLength );if _bdg !=nil {if _ ,_eed =w .Write (_bdg .Data ());_eed !=nil {return _gcaa ,_dg .Wrap (_eed ,_ffac ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _gcaa ,nil ;};func (_bdeb *TextRegion )setParameters (_fcaf *_be .Decoder ,_fcbe ,_dcb bool ,_bcac ,_gdfc uint32 ,_aadggb uint32 ,_facec int8 ,_fdgdc uint32 ,_gbbc int8 ,_fega _f .CombinationOperator ,_ddad int8 ,_dcce int16 ,_fafg ,_fdda ,_efeb ,_fagd ,_cddag ,_eggc ,_eeda ,_ddda ,_becf ,_cbcggg int8 ,_cbdf ,_fbgeg []int8 ,_agbg []*_f .Bitmap ,_daag int8 ){_bdeb ._efbd =_fcaf ;
_bdeb .IsHuffmanEncoded =_fcbe ;_bdeb .UseRefinement =_dcb ;_bdeb .RegionInfo .BitmapWidth =_bcac ;_bdeb .RegionInfo .BitmapHeight =_gdfc ;_bdeb .NumberOfSymbolInstances =_aadggb ;_bdeb .SbStrips =_facec ;_bdeb .NumberOfSymbols =_fdgdc ;_bdeb .DefaultPixel =_gbbc ;
_bdeb .CombinationOperator =_fega ;_bdeb .IsTransposed =_ddad ;_bdeb .ReferenceCorner =_dcce ;_bdeb .SbDsOffset =_fafg ;_bdeb .SbHuffFS =_fdda ;_bdeb .SbHuffDS =_efeb ;_bdeb .SbHuffDT =_fagd ;_bdeb .SbHuffRDWidth =_cddag ;_bdeb .SbHuffRDHeight =_eggc ;
_bdeb .SbHuffRSize =_becf ;_bdeb .SbHuffRDX =_eeda ;_bdeb .SbHuffRDY =_ddda ;_bdeb .SbrTemplate =_cbcggg ;_bdeb .SbrATX =_cbdf ;_bdeb .SbrATY =_fbgeg ;_bdeb .Symbols =_agbg ;_bdeb ._bedb =_daag ;};func NewHeader (d Documenter ,r *_ed .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_fgb :=&Header {Reader :r };
if _begg :=_fgb .parse (d ,r ,offset ,organizationType );_begg !=nil {return nil ,_dg .Wrap (_begg ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _fgb ,nil ;};func (_cced *TableSegment )parseHeader ()error {var (_cfdf int ;_dcdg uint64 ;_cecb error ;
);_cfdf ,_cecb =_cced ._aeff .ReadBit ();if _cecb !=nil {return _cecb ;};if _cfdf ==1{return _a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_cfdf );
};if _dcdg ,_cecb =_cced ._aeff .ReadBits (3);_cecb !=nil {return _cecb ;};_cced ._aafed =(int32 (_dcdg )+1)&0xf;if _dcdg ,_cecb =_cced ._aeff .ReadBits (3);_cecb !=nil {return _cecb ;};_cced ._cbacb =(int32 (_dcdg )+1)&0xf;if _dcdg ,_cecb =_cced ._aeff .ReadBits (32);
_cecb !=nil {return _cecb ;};_cced ._fcaa =int32 (_dcdg &_b .MaxInt32 );if _dcdg ,_cecb =_cced ._aeff .ReadBits (32);_cecb !=nil {return _cecb ;};_cced ._bbdc =int32 (_dcdg &_b .MaxInt32 );return nil ;};func (_ggeg *SymbolDictionary )decodeNewSymbols (_efcc ,_gebbe uint32 ,_bcgfa *_f .Bitmap ,_cec ,_daac int32 )error {if _ggeg ._caeg ==nil {_ggeg ._caeg =_bebb (_ggeg ._eecc ,nil );
if _ggeg ._bfdg ==nil {var _effc error ;_ggeg ._bfdg ,_effc =_be .New (_ggeg ._eecc );if _effc !=nil {return _effc ;};};if _ggeg ._edfe ==nil {_ggeg ._edfe =_be .NewStats (65536,1);};};_ggeg ._caeg .setParameters (_ggeg ._edfe ,_ggeg ._bfdg ,_ggeg .SdrTemplate ,_efcc ,_gebbe ,_bcgfa ,_cec ,_daac ,false ,_ggeg .SdrATX ,_ggeg .SdrATY );
return _ggeg .addSymbol (_ggeg ._caeg );};type RegionSegment struct{_gcc *_ed .Reader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _f .CombinationOperator ;};func (_bgca *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _bgca .IsHuffmanEncoded {switch _bgca .SdHuffDecodeWidthSelection {case 0:_ade ,_gda :=_ae .GetStandardTable (2);
if _gda !=nil {return 0,_gda ;};return _ade .Decode (_bgca ._eecc );case 1:_efdb ,_fgga :=_ae .GetStandardTable (3);if _fgga !=nil {return 0,_fgga ;};return _efdb .Decode (_bgca ._eecc );case 3:if _bgca ._acaf ==nil {var _gbbd int ;if _bgca .SdHuffDecodeHeightSelection ==3{_gbbd ++;
};_adceg ,_gacbd :=_bgca .getUserTable (_gbbd );if _gacbd !=nil {return 0,_gacbd ;};_bgca ._acaf =_adceg ;};return _bgca ._acaf .Decode (_bgca ._eecc );};}else {_cafa ,_bddf :=_bgca ._bfdg .DecodeInt (_bgca ._bfcc );if _bddf !=nil {return 0,_bddf ;};return int64 (_cafa ),nil ;
};return 0,nil ;};func (_cdae *PageInformationSegment )readMaxStripeSize ()error {_ccdg ,_egfe :=_cdae ._efcg .ReadBits (15);if _egfe !=nil {return _egfe ;};_cdae .MaxStripeSize =uint16 (_ccdg &_b .MaxUint16 );return nil ;};func (_bea *PageInformationSegment )checkInput ()error {if _bea .PageBMHeight ==_b .MaxInt32 {if !_bea .IsStripe {_gf .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_cf *GenericRegion )Init (h *Header ,r *_ed .Reader )error {_cf .RegionSegment =NewRegionSegment (r );_cf ._eag =r ;return _cf .parseHeader ();};func (_abec *SymbolDictionary )encodeSymbols (_ccced _ed .BinaryWriter )(_acdf int ,_fdga error ){const _ffbgf ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_gbfc :=_ef .New ();_gbfc .Init ();_abfe ,_fdga :=_abec ._dfc .SelectByIndexes (_abec ._cdda );if _fdga !=nil {return 0,_dg .Wrap (_fdga ,_ffbgf ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_bcdf :=map[*_f .Bitmap ]int {};for _gfcae ,_cgdb :=range _abfe .Values {_bcdf [_cgdb ]=_gfcae ;
};_abfe .SortByHeight ();var _gecg ,_bcdcc int ;_dbf ,_fdga :=_abfe .GroupByHeight ();if _fdga !=nil {return 0,_dg .Wrap (_fdga ,_ffbgf ,"");};for _ ,_befb :=range _dbf .Values {_cgeag :=_befb .Values [0].Height ;_bgdac :=_cgeag -_gecg ;if _fdga =_gbfc .EncodeInteger (_ef .IADH ,_bgdac );
_fdga !=nil {return 0,_dg .Wrapf (_fdga ,_ffbgf ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_bgdac );};_gecg =_cgeag ;_aggf ,_eafg :=_befb .GroupByWidth ();if _eafg !=nil {return 0,_dg .Wrapf (_eafg ,_ffbgf ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_cgeag );
};var _bgfb int ;for _ ,_dbff :=range _aggf .Values {for _ ,_dece :=range _dbff .Values {_befd :=_dece .Width ;_aebd :=_befd -_bgfb ;if _eafg =_gbfc .EncodeInteger (_ef .IADW ,_aebd );_eafg !=nil {return 0,_dg .Wrapf (_eafg ,_ffbgf ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_aebd );
};_bgfb +=_aebd ;if _eafg =_gbfc .EncodeBitmap (_dece ,false );_eafg !=nil {return 0,_dg .Wrapf (_eafg ,_ffbgf ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_cgeag ,_befd );};_dade :=_bcdf [_dece ];_abec ._bbca [_dade ]=_bcdcc ;
_bcdcc ++;};};if _eafg =_gbfc .EncodeOOB (_ef .IADW );_eafg !=nil {return 0,_dg .Wrap (_eafg ,_ffbgf ,"\u0049\u0041\u0044\u0057");};};if _fdga =_gbfc .EncodeInteger (_ef .IAEX ,0);_fdga !=nil {return 0,_dg .Wrap (_fdga ,_ffbgf ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _fdga =_gbfc .EncodeInteger (_ef .IAEX ,len (_abec ._cdda ));_fdga !=nil {return 0,_dg .Wrap (_fdga ,_ffbgf ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_gbfc .Final ();_fecc ,_fdga :=_gbfc .WriteTo (_ccced );
if _fdga !=nil {return 0,_dg .Wrap (_fdga ,_ffbgf ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");
};return int (_fecc ),nil ;};func (_cae *GenericRefinementRegion )parseHeader ()(_aac error ){_gf .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_efg :=_bf .Now ();defer func (){if _aac ==nil {_gf .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_bf .Since (_efg ).Nanoseconds ());
}else {_gf .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_aac );
};}();if _aac =_cae .RegionInfo .parseHeader ();_aac !=nil {return _aac ;};_ ,_aac =_cae ._fed .ReadBits (6);if _aac !=nil {return _aac ;};_cae .IsTPGROn ,_aac =_cae ._fed .ReadBool ();if _aac !=nil {return _aac ;};var _bca int ;_bca ,_aac =_cae ._fed .ReadBit ();
if _aac !=nil {return _aac ;};_cae .TemplateID =int8 (_bca );switch _cae .TemplateID {case 0:_cae .Template =_cae ._bb ;if _aac =_cae .readAtPixels ();_aac !=nil {return _aac ;};case 1:_cae .Template =_cae ._fc ;};return nil ;};func (_eagb *SymbolDictionary )InitEncode (symbols *_f .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _ebagc ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_eagb .SdATX =[]int8 {3,-3,2,-2};_eagb .SdATY =[]int8 {-1,-1,-2,-2};_eagb ._dfc =symbols ;_eagb ._cdda =make ([]int ,len (symbolList ));copy (_eagb ._cdda ,symbolList );if len (_eagb ._cdda )!=_eagb ._dfc .Size (){return _dg .Error (_ebagc ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_eagb .NumberOfNewSymbols =uint32 (symbols .Size ());_eagb .NumberOfExportedSymbols =uint32 (symbols .Size ());_eagb ._bbca =symbolMap ;_eagb ._bagc =unborderSymbols ;return nil ;};func (_dce *template0 )form (_agbc ,_gaa ,_fbc ,_aba ,_afba int16 )int16 {return (_agbc <<10)|(_gaa <<7)|(_fbc <<4)|(_aba <<1)|_afba ;
};func (_ecfe *TextRegion )decodeDfs ()(int64 ,error ){if _ecfe .IsHuffmanEncoded {if _ecfe .SbHuffFS ==3{if _ecfe ._dcf ==nil {var _gfef error ;_ecfe ._dcf ,_gfef =_ecfe .getUserTable (0);if _gfef !=nil {return 0,_gfef ;};};return _ecfe ._dcf .Decode (_ecfe ._cbge );
};_fgdd ,_bcef :=_ae .GetStandardTable (6+int (_ecfe .SbHuffFS ));if _bcef !=nil {return 0,_bcef ;};return _fgdd .Decode (_ecfe ._cbge );};_dfdba ,_efecg :=_ecfe ._efbd .DecodeInt (_ecfe ._daca );if _efecg !=nil {return 0,_efecg ;};return int64 (_dfdba ),nil ;
};func (_dfbf *SymbolDictionary )setExportedSymbols (_ggace []int ){for _baag :=uint32 (0);_baag < _dfbf ._eaae +_dfbf .NumberOfNewSymbols ;_baag ++{if _ggace [_baag ]==1{var _aaac *_f .Bitmap ;if _baag < _dfbf ._eaae {_aaac =_dfbf ._gea [_baag ];}else {_aaac =_dfbf ._cgeac [_baag -_dfbf ._eaae ];
};_gf .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_aaac );_dfbf ._geb =append (_dfbf ._geb ,_aaac );
};};};func (_cgbd *TextRegion )checkInput ()error {const _bfga ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_cgbd .UseRefinement {if _cgbd .SbrTemplate !=0{_gf .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_cgbd .SbrTemplate =0;};};if _cgbd .SbHuffFS ==2||_cgbd .SbHuffRDWidth ==2||_cgbd .SbHuffRDHeight ==2||_cgbd .SbHuffRDX ==2||_cgbd .SbHuffRDY ==2{return _dg .Error (_bfga ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_cgbd .UseRefinement {if _cgbd .SbHuffRSize !=0{_gf .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_cgbd .SbHuffRSize =0;};if _cgbd .SbHuffRDY !=0{_gf .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_cgbd .SbHuffRDY =0;};if _cgbd .SbHuffRDX !=0{_gf .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_cgbd .SbHuffRDX =0;};if _cgbd .SbHuffRDWidth !=0{_gf .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_cgbd .SbHuffRDWidth =0;};if _cgbd .SbHuffRDHeight !=0{_gf .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_cgbd .SbHuffRDHeight =0;};};return nil ;
};func (_ggac *PageInformationSegment )encodeFlags (_ddg _ed .BinaryWriter )(_edec error ){const _ebbcb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _edec =_ddg .SkipBits (1);_edec !=nil {return _dg .Wrap (_edec ,_ebbcb ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");
};var _ecbd int ;if _ggac .CombinationOperatorOverrideAllowed (){_ecbd =1;};if _edec =_ddg .WriteBit (_ecbd );_edec !=nil {return _dg .Wrap (_edec ,_ebbcb ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_ecbd =0;if _ggac ._fdfb {_ecbd =1;};if _edec =_ddg .WriteBit (_ecbd );_edec !=nil {return _dg .Wrap (_edec ,_ebbcb ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _edec =_ddg .WriteBit ((int (_ggac ._ebgg )>>1)&0x01);
_edec !=nil {return _dg .Wrap (_edec ,_ebbcb ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _edec =_ddg .WriteBit (int (_ggac ._ebgg )&0x01);
_edec !=nil {return _dg .Wrap (_edec ,_ebbcb ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_ecbd =int (_ggac .DefaultPixelValue );
if _edec =_ddg .WriteBit (_ecbd );_edec !=nil {return _dg .Wrap (_edec ,_ebbcb ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_ecbd =0;if _ggac ._fdd {_ecbd =1;
};if _edec =_ddg .WriteBit (_ecbd );_edec !=nil {return _dg .Wrap (_edec ,_ebbcb ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_ecbd =0;if _ggac .IsLossless {_ecbd =1;};if _edec =_ddg .WriteBit (_ecbd );
_edec !=nil {return _dg .Wrap (_edec ,_ebbcb ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_bdba *Header )readDataStartOffset (_dcgf *_ed .Reader ,_aefa OrganizationType ){if _aefa ==OSequential {_bdba .SegmentDataStartOffset =uint64 (_dcgf .AbsolutePosition ());
};};func (_dddg *TextRegion )getUserTable (_ddeb int )(_ae .Tabler ,error ){const _eefeg ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _fba int ;for _ ,_gagd :=range _dddg .Header .RTSegments {if _gagd .Type ==53{if _fba ==_ddeb {_edee ,_dbed :=_gagd .GetSegmentData ();
if _dbed !=nil {return nil ,_dbed ;};_gcfg ,_gbcce :=_edee .(*TableSegment );if !_gbcce {_gf .Log .Debug (_a .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_gagd .SegmentNumber ));
return nil ,_dg .Error (_eefeg ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _ae .NewEncodedTable (_gcfg );};_fba ++;};};return nil ,nil ;};func (_ffadb *GenericRegion )overrideAtTemplate0b (_eee ,_fad ,_gegb ,_bfa ,_bgab ,_ddbd int )int {if _ffadb .GBAtOverride [0]{_eee &=0xFFFD;if _ffadb .GBAtY [0]==0&&_ffadb .GBAtX [0]>=-int8 (_bgab ){_eee |=(_bfa >>uint (int8 (_ddbd )-_ffadb .GBAtX [0]&0x1))<<1;
}else {_eee |=int (_ffadb .getPixel (_fad +int (_ffadb .GBAtX [0]),_gegb +int (_ffadb .GBAtY [0])))<<1;};};if _ffadb .GBAtOverride [1]{_eee &=0xDFFF;if _ffadb .GBAtY [1]==0&&_ffadb .GBAtX [1]>=-int8 (_bgab ){_eee |=(_bfa >>uint (int8 (_ddbd )-_ffadb .GBAtX [1]&0x1))<<13;
}else {_eee |=int (_ffadb .getPixel (_fad +int (_ffadb .GBAtX [1]),_gegb +int (_ffadb .GBAtY [1])))<<13;};};if _ffadb .GBAtOverride [2]{_eee &=0xFDFF;if _ffadb .GBAtY [2]==0&&_ffadb .GBAtX [2]>=-int8 (_bgab ){_eee |=(_bfa >>uint (int8 (_ddbd )-_ffadb .GBAtX [2]&0x1))<<9;
}else {_eee |=int (_ffadb .getPixel (_fad +int (_ffadb .GBAtX [2]),_gegb +int (_ffadb .GBAtY [2])))<<9;};};if _ffadb .GBAtOverride [3]{_eee &=0xBFFF;if _ffadb .GBAtY [3]==0&&_ffadb .GBAtX [3]>=-int8 (_bgab ){_eee |=(_bfa >>uint (int8 (_ddbd )-_ffadb .GBAtX [3]&0x1))<<14;
}else {_eee |=int (_ffadb .getPixel (_fad +int (_ffadb .GBAtX [3]),_gegb +int (_ffadb .GBAtY [3])))<<14;};};if _ffadb .GBAtOverride [4]{_eee &=0xEFFF;if _ffadb .GBAtY [4]==0&&_ffadb .GBAtX [4]>=-int8 (_bgab ){_eee |=(_bfa >>uint (int8 (_ddbd )-_ffadb .GBAtX [4]&0x1))<<12;
}else {_eee |=int (_ffadb .getPixel (_fad +int (_ffadb .GBAtX [4]),_gegb +int (_ffadb .GBAtY [4])))<<12;};};if _ffadb .GBAtOverride [5]{_eee &=0xFFDF;if _ffadb .GBAtY [5]==0&&_ffadb .GBAtX [5]>=-int8 (_bgab ){_eee |=(_bfa >>uint (int8 (_ddbd )-_ffadb .GBAtX [5]&0x1))<<5;
}else {_eee |=int (_ffadb .getPixel (_fad +int (_ffadb .GBAtX [5]),_gegb +int (_ffadb .GBAtY [5])))<<5;};};if _ffadb .GBAtOverride [6]{_eee &=0xFFFB;if _ffadb .GBAtY [6]==0&&_ffadb .GBAtX [6]>=-int8 (_bgab ){_eee |=(_bfa >>uint (int8 (_ddbd )-_ffadb .GBAtX [6]&0x1))<<2;
}else {_eee |=int (_ffadb .getPixel (_fad +int (_ffadb .GBAtX [6]),_gegb +int (_ffadb .GBAtY [6])))<<2;};};if _ffadb .GBAtOverride [7]{_eee &=0xFFF7;if _ffadb .GBAtY [7]==0&&_ffadb .GBAtX [7]>=-int8 (_bgab ){_eee |=(_bfa >>uint (int8 (_ddbd )-_ffadb .GBAtX [7]&0x1))<<3;
}else {_eee |=int (_ffadb .getPixel (_fad +int (_ffadb .GBAtX [7]),_gegb +int (_ffadb .GBAtY [7])))<<3;};};if _ffadb .GBAtOverride [8]{_eee &=0xF7FF;if _ffadb .GBAtY [8]==0&&_ffadb .GBAtX [8]>=-int8 (_bgab ){_eee |=(_bfa >>uint (int8 (_ddbd )-_ffadb .GBAtX [8]&0x1))<<11;
}else {_eee |=int (_ffadb .getPixel (_fad +int (_ffadb .GBAtX [8]),_gegb +int (_ffadb .GBAtY [8])))<<11;};};if _ffadb .GBAtOverride [9]{_eee &=0xFFEF;if _ffadb .GBAtY [9]==0&&_ffadb .GBAtX [9]>=-int8 (_bgab ){_eee |=(_bfa >>uint (int8 (_ddbd )-_ffadb .GBAtX [9]&0x1))<<4;
}else {_eee |=int (_ffadb .getPixel (_fad +int (_ffadb .GBAtX [9]),_gegb +int (_ffadb .GBAtY [9])))<<4;};};if _ffadb .GBAtOverride [10]{_eee &=0x7FFF;if _ffadb .GBAtY [10]==0&&_ffadb .GBAtX [10]>=-int8 (_bgab ){_eee |=(_bfa >>uint (int8 (_ddbd )-_ffadb .GBAtX [10]&0x1))<<15;
}else {_eee |=int (_ffadb .getPixel (_fad +int (_ffadb .GBAtX [10]),_gegb +int (_ffadb .GBAtY [10])))<<15;};};if _ffadb .GBAtOverride [11]{_eee &=0xFDFF;if _ffadb .GBAtY [11]==0&&_ffadb .GBAtX [11]>=-int8 (_bgab ){_eee |=(_bfa >>uint (int8 (_ddbd )-_ffadb .GBAtX [11]&0x1))<<10;
}else {_eee |=int (_ffadb .getPixel (_fad +int (_ffadb .GBAtX [11]),_gegb +int (_ffadb .GBAtY [11])))<<10;};};return _eee ;};func (_edda *TextRegion )String ()string {_fbgf :=&_ec .Builder {};_fbgf .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_fbgf .WriteString (_edda .RegionInfo .String ()+"\u000a");_fbgf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_edda .SbrTemplate ));_fbgf .WriteString (_a .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_edda .SbDsOffset ));
_fbgf .WriteString (_a .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_edda .DefaultPixel ));_fbgf .WriteString (_a .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_edda .CombinationOperator ));
_fbgf .WriteString (_a .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_edda .IsTransposed ));_fbgf .WriteString (_a .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_edda .ReferenceCorner ));
_fbgf .WriteString (_a .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_edda .UseRefinement ));_fbgf .WriteString (_a .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_edda .IsHuffmanEncoded ));
if _edda .IsHuffmanEncoded {_fbgf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_edda .SbHuffRSize ));_fbgf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_edda .SbHuffRDY ));
_fbgf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_edda .SbHuffRDX ));_fbgf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_edda .SbHuffRDHeight ));
_fbgf .WriteString (_a .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_edda .SbHuffRDWidth ));_fbgf .WriteString (_a .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_edda .SbHuffDT ));
_fbgf .WriteString (_a .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_edda .SbHuffDS ));_fbgf .WriteString (_a .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_edda .SbHuffFS ));
};_fbgf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_edda .SbrATX ));_fbgf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_edda .SbrATY ));
_fbgf .WriteString (_a .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_edda .NumberOfSymbolInstances ));_fbgf .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_edda .SbrATX ));
return _fbgf .String ();};func (_aff *TextRegion )decodeRdw ()(int64 ,error ){const _ebdg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _aff .IsHuffmanEncoded {if _aff .SbHuffRDWidth ==3{if _aff ._bgabd ==nil {var (_cbcgg int ;_cdga error ;);if _aff .SbHuffFS ==3{_cbcgg ++;
};if _aff .SbHuffDS ==3{_cbcgg ++;};if _aff .SbHuffDT ==3{_cbcgg ++;};_aff ._bgabd ,_cdga =_aff .getUserTable (_cbcgg );if _cdga !=nil {return 0,_dg .Wrap (_cdga ,_ebdg ,"");};};return _aff ._bgabd .Decode (_aff ._cbge );};_adbbb ,_aafd :=_ae .GetStandardTable (14+int (_aff .SbHuffRDWidth ));
if _aafd !=nil {return 0,_dg .Wrap (_aafd ,_ebdg ,"");};return _adbbb .Decode (_aff ._cbge );};_aega ,_gadbe :=_aff ._efbd .DecodeInt (_aff ._ceca );if _gadbe !=nil {return 0,_dg .Wrap (_gadbe ,_ebdg ,"");};return int64 (_aega ),nil ;};func (_bdga *PageInformationSegment )readIsLossless ()error {_dgdg ,_cbabb :=_bdga ._efcg .ReadBit ();
if _cbabb !=nil {return _cbabb ;};if _dgdg ==1{_bdga .IsLossless =true ;};return nil ;};func (_fgae *TextRegion )Encode (w _ed .BinaryWriter )(_gacc int ,_geea error ){const _dcef ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _gacc ,_geea =_fgae .RegionInfo .Encode (w );_geea !=nil {return _gacc ,_dg .Wrap (_geea ,_dcef ,"");};var _fggdf int ;if _fggdf ,_geea =_fgae .encodeFlags (w );_geea !=nil {return _gacc ,_dg .Wrap (_geea ,_dcef ,"");};_gacc +=_fggdf ;if _fggdf ,_geea =_fgae .encodeSymbols (w );
_geea !=nil {return _gacc ,_dg .Wrap (_geea ,_dcef ,"");};_gacc +=_fggdf ;return _gacc ,nil ;};func (_bad *TextRegion )parseHeader ()error {var _gcfdb error ;_gf .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _gcfdb !=nil {_gf .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_gcfdb );
}else {_gf .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _gcfdb =_bad .RegionInfo .parseHeader ();
_gcfdb !=nil {return _gcfdb ;};if _gcfdb =_bad .readRegionFlags ();_gcfdb !=nil {return _gcfdb ;};if _bad .IsHuffmanEncoded {if _gcfdb =_bad .readHuffmanFlags ();_gcfdb !=nil {return _gcfdb ;};};if _gcfdb =_bad .readUseRefinement ();_gcfdb !=nil {return _gcfdb ;
};if _gcfdb =_bad .readAmountOfSymbolInstances ();_gcfdb !=nil {return _gcfdb ;};if _gcfdb =_bad .getSymbols ();_gcfdb !=nil {return _gcfdb ;};if _gcfdb =_bad .computeSymbolCodeLength ();_gcfdb !=nil {return _gcfdb ;};if _gcfdb =_bad .checkInput ();_gcfdb !=nil {return _gcfdb ;
};_gf .Log .Trace ("\u0025\u0073",_bad .String ());return nil ;};var _ templater =&template1 {};func (_dag *SymbolDictionary )getSymbol (_ace int )(*_f .Bitmap ,error ){const _dgfb ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_bafd ,_dafbf :=_dag ._dfc .GetBitmap (_dag ._cdda [_ace ]);
if _dafbf !=nil {return nil ,_dg .Wrap (_dafbf ,_dgfb ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _bafd ,nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;
TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;
TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;
TExtension Type =62;TBitmap Type =70;);type PatternDictionary struct{_agce *_ed .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;
HdpHeight byte ;Patterns []*_f .Bitmap ;GrayMax uint32 ;};func (_cggc *GenericRegion )readGBAtPixels (_cbc int )error {const _cddd ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_cggc .GBAtX =make ([]int8 ,_cbc );_cggc .GBAtY =make ([]int8 ,_cbc );
for _adgg :=0;_adgg < _cbc ;_adgg ++{_ecaf ,_babg :=_cggc ._eag .ReadByte ();if _babg !=nil {return _dg .Wrapf (_babg ,_cddd ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_adgg );};_cggc .GBAtX [_adgg ]=int8 (_ecaf );_ecaf ,_babg =_cggc ._eag .ReadByte ();
if _babg !=nil {return _dg .Wrapf (_babg ,_cddd ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_adgg );};_cggc .GBAtY [_adgg ]=int8 (_ecaf );};return nil ;};func (_gec *HalftoneRegion )renderPattern (_dgcebe [][]int )(_gecd error ){var _bfd ,_gdde int ;
for _aadd :=0;_aadd < int (_gec .HGridHeight );_aadd ++{for _bbee :=0;_bbee < int (_gec .HGridWidth );_bbee ++{_bfd =_gec .computeX (_aadd ,_bbee );_gdde =_gec .computeY (_aadd ,_bbee );_abgf :=_gec .Patterns [_dgcebe [_aadd ][_bbee ]];if _gecd =_f .Blit (_abgf ,_gec .HalftoneRegionBitmap ,_bfd +int (_gec .HGridX ),_gdde +int (_gec .HGridY ),_gec .CombinationOperator );
_gecd !=nil {return _gecd ;};};};return nil ;};func (_cgc *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_ad ,_bcd ,_daa ,_efe ,_fd ,_aea ,_fcf ,_cbb ,_faf int )error {var (_ebee ,_bgb ,_ga ,_deb ,_bed ,_ff int ;_afb byte ;_gdf error ;);
if _ad > 0{_afb ,_gdf =_cgc .RegionBitmap .GetByte (_fcf -_daa );if _gdf !=nil {return _gdf ;};_ga =int (_afb );};if _cbb > 0&&_cbb <=_cgc .ReferenceBitmap .Height {_afb ,_gdf =_cgc .ReferenceBitmap .GetByte (_faf -_efe +_aea );if _gdf !=nil {return _gdf ;
};_deb =int (_afb )<<4;};if _cbb >=0&&_cbb < _cgc .ReferenceBitmap .Height {_afb ,_gdf =_cgc .ReferenceBitmap .GetByte (_faf +_aea );if _gdf !=nil {return _gdf ;};_bed =int (_afb )<<1;};if _cbb > -2&&_cbb < _cgc .ReferenceBitmap .Height -1{_afb ,_gdf =_cgc .ReferenceBitmap .GetByte (_faf +_efe +_aea );
if _gdf !=nil {return _gdf ;};_ff =int (_afb );};_ebee =((_ga >>5)&0x6)|((_ff >>2)&0x30)|(_bed &0x180)|(_deb &0xc00);var _bff int ;for _adg :=0;_adg < _fd ;_adg =_bff {var _ffe int ;_bff =_adg +8;var _adf int ;if _adf =_bcd -_adg ;_adf > 8{_adf =8;};_fbf :=_bff < _bcd ;
_ebc :=_bff < _cgc .ReferenceBitmap .Width ;_baa :=_aea +1;if _ad > 0{_afb =0;if _fbf {_afb ,_gdf =_cgc .RegionBitmap .GetByte (_fcf -_daa +1);if _gdf !=nil {return _gdf ;};};_ga =(_ga <<8)|int (_afb );};if _cbb > 0&&_cbb <=_cgc .ReferenceBitmap .Height {var _fbb int ;
if _ebc {_afb ,_gdf =_cgc .ReferenceBitmap .GetByte (_faf -_efe +_baa );if _gdf !=nil {return _gdf ;};_fbb =int (_afb )<<4;};_deb =(_deb <<8)|_fbb ;};if _cbb >=0&&_cbb < _cgc .ReferenceBitmap .Height {var _acg int ;if _ebc {_afb ,_gdf =_cgc .ReferenceBitmap .GetByte (_faf +_baa );
if _gdf !=nil {return _gdf ;};_acg =int (_afb )<<1;};_bed =(_bed <<8)|_acg ;};if _cbb > -2&&_cbb < (_cgc .ReferenceBitmap .Height -1){_afb =0;if _ebc {_afb ,_gdf =_cgc .ReferenceBitmap .GetByte (_faf +_efe +_baa );if _gdf !=nil {return _gdf ;};};_ff =(_ff <<8)|int (_afb );
};for _cdb :=0;_cdb < _adf ;_cdb ++{var _ebf int ;_fge :=false ;_ee :=(_ebee >>4)&0x1ff;if _ee ==0x1ff{_fge =true ;_ebf =1;}else if _ee ==0x00{_fge =true ;};if !_fge {if _cgc ._fbg {_bgb =_cgc .overrideAtTemplate0 (_ebee ,_adg +_cdb ,_ad ,_ffe ,_cdb );
_cgc ._af .SetIndex (int32 (_bgb ));}else {_cgc ._af .SetIndex (int32 (_ebee ));};_ebf ,_gdf =_cgc ._fg .DecodeBit (_cgc ._af );if _gdf !=nil {return _gdf ;};};_aecb :=uint (7-_cdb );_ffe |=_ebf <<_aecb ;_ebee =((_ebee &0xdb6)<<1)|_ebf |(_ga >>_aecb +5)&0x002|((_ff >>_aecb +2)&0x010)|((_bed >>_aecb )&0x080)|((_deb >>_aecb )&0x400);
};_gdf =_cgc .RegionBitmap .SetByte (_fcf ,byte (_ffe ));if _gdf !=nil {return _gdf ;};_fcf ++;_faf ++;};return nil ;};func (_cad *GenericRegion )setParametersMMR (_ccd bool ,_bgfd ,_fdc int64 ,_cge ,_fefd uint32 ,_bdad byte ,_dgcf ,_aafe bool ,_acb ,_ced []int8 ){_cad .DataOffset =_bgfd ;
_cad .DataLength =_fdc ;_cad .RegionSegment =&RegionSegment {};_cad .RegionSegment .BitmapHeight =_cge ;_cad .RegionSegment .BitmapWidth =_fefd ;_cad .GBTemplate =_bdad ;_cad .IsMMREncoded =_ccd ;_cad .IsTPGDon =_dgcf ;_cad .GBAtX =_acb ;_cad .GBAtY =_ced ;
};func (_dgb *PageInformationSegment )readWidthAndHeight ()error {_eefb ,_eabg :=_dgb ._efcg .ReadBits (32);if _eabg !=nil {return _eabg ;};_dgb .PageBMWidth =int (_eefb &_b .MaxInt32 );_eefb ,_eabg =_dgb ._efcg .ReadBits (32);if _eabg !=nil {return _eabg ;
};_dgb .PageBMHeight =int (_eefb &_b .MaxInt32 );return nil ;};func (_fbd *GenericRegion )GetRegionBitmap ()(_gagf *_f .Bitmap ,_fbbb error ){if _fbd .Bitmap !=nil {return _fbd .Bitmap ,nil ;};if _fbd .IsMMREncoded {if _fbd ._bbb ==nil {_fbd ._bbb ,_fbbb =_eb .New (_fbd ._eag ,int (_fbd .RegionSegment .BitmapWidth ),int (_fbd .RegionSegment .BitmapHeight ),_fbd .DataOffset ,_fbd .DataLength );
if _fbbb !=nil {return nil ,_fbbb ;};};_fbd .Bitmap ,_fbbb =_fbd ._bbb .UncompressMMR ();return _fbd .Bitmap ,_fbbb ;};if _fbbb =_fbd .updateOverrideFlags ();_fbbb !=nil {return nil ,_fbbb ;};var _cggd int ;if _fbd ._beed ==nil {_fbd ._beed ,_fbbb =_be .New (_fbd ._eag );
if _fbbb !=nil {return nil ,_fbbb ;};};if _fbd ._ecg ==nil {_fbd ._ecg =_be .NewStats (65536,1);};_fbd .Bitmap =_f .New (int (_fbd .RegionSegment .BitmapWidth ),int (_fbd .RegionSegment .BitmapHeight ));_bge :=int (uint32 (_fbd .Bitmap .Width +7)&(^uint32 (7)));
for _add :=0;_add < _fbd .Bitmap .Height ;_add ++{if _fbd .IsTPGDon {var _ddbf int ;_ddbf ,_fbbb =_fbd .decodeSLTP ();if _fbbb !=nil {return nil ,_fbbb ;};_cggd ^=_ddbf ;};if _cggd ==1{if _add > 0{if _fbbb =_fbd .copyLineAbove (_add );_fbbb !=nil {return nil ,_fbbb ;
};};}else {if _fbbb =_fbd .decodeLine (_add ,_fbd .Bitmap .Width ,_bge );_fbbb !=nil {return nil ,_fbbb ;};};};return _fbd .Bitmap ,nil ;};func (_cbeg *GenericRegion )overrideAtTemplate2 (_bebc ,_eef ,_deg ,_cfa ,_egfa int )int {_bebc &=0x3FB;if _cbeg .GBAtY [0]==0&&_cbeg .GBAtX [0]>=-int8 (_egfa ){_bebc |=(_cfa >>uint (7-(int8 (_egfa )+_cbeg .GBAtX [0]))&0x1)<<2;
}else {_bebc |=int (_cbeg .getPixel (_eef +int (_cbeg .GBAtX [0]),_deg +int (_cbeg .GBAtY [0])))<<2;};return _bebc ;};func (_bbgd *PageInformationSegment )parseHeader ()(_edfb error ){_gf .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _bdcf ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _edfb !=nil {_bdcf +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_edfb .Error ();}else {_bdcf +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_gf .Log .Trace (_bdcf );}();if _edfb =_bbgd .readWidthAndHeight ();
_edfb !=nil {return _edfb ;};if _edfb =_bbgd .readResolution ();_edfb !=nil {return _edfb ;};_ ,_edfb =_bbgd ._efcg .ReadBit ();if _edfb !=nil {return _edfb ;};if _edfb =_bbgd .readCombinationOperatorOverrideAllowed ();_edfb !=nil {return _edfb ;};if _edfb =_bbgd .readRequiresAuxiliaryBuffer ();
_edfb !=nil {return _edfb ;};if _edfb =_bbgd .readCombinationOperator ();_edfb !=nil {return _edfb ;};if _edfb =_bbgd .readDefaultPixelValue ();_edfb !=nil {return _edfb ;};if _edfb =_bbgd .readContainsRefinement ();_edfb !=nil {return _edfb ;};if _edfb =_bbgd .readIsLossless ();
_edfb !=nil {return _edfb ;};if _edfb =_bbgd .readIsStriped ();_edfb !=nil {return _edfb ;};if _edfb =_bbgd .readMaxStripeSize ();_edfb !=nil {return _edfb ;};if _edfb =_bbgd .checkInput ();_edfb !=nil {return _edfb ;};_gf .Log .Trace ("\u0025\u0073",_bbgd );
return nil ;};func (_ecfggc *SymbolDictionary )parseHeader ()(_dbbbg error ){_gf .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _dbbbg !=nil {_gf .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_dbbbg );
}else {_gf .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _dbbbg =_ecfggc .readRegionFlags ();_dbbbg !=nil {return _dbbbg ;};if _dbbbg =_ecfggc .setAtPixels ();_dbbbg !=nil {return _dbbbg ;};if _dbbbg =_ecfggc .setRefinementAtPixels ();_dbbbg !=nil {return _dbbbg ;};if _dbbbg =_ecfggc .readNumberOfExportedSymbols ();
_dbbbg !=nil {return _dbbbg ;};if _dbbbg =_ecfggc .readNumberOfNewSymbols ();_dbbbg !=nil {return _dbbbg ;};if _dbbbg =_ecfggc .setInSyms ();_dbbbg !=nil {return _dbbbg ;};if _ecfggc ._bfcb {_cffb :=_ecfggc .Header .RTSegments ;for _bebd :=len (_cffb )-1;
_bebd >=0;_bebd --{if _cffb [_bebd ].Type ==0{_dgcg ,_fcfbe :=_cffb [_bebd ].SegmentData .(*SymbolDictionary );if !_fcfbe {_dbbbg =_a .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cffb [_bebd ]);
return _dbbbg ;};if _dgcg ._bfcb {_ecfggc .setRetainedCodingContexts (_dgcg );};break ;};};};if _dbbbg =_ecfggc .checkInput ();_dbbbg !=nil {return _dbbbg ;};return nil ;};type PageInformationSegment struct{_efcg *_ed .Reader ;PageBMHeight int ;PageBMWidth int ;
ResolutionX int ;ResolutionY int ;_ccaf bool ;_ebgg _f .CombinationOperator ;_fdfb bool ;DefaultPixelValue uint8 ;_fdd bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_efef *TextRegion )decodeRdy ()(int64 ,error ){const _bddfe ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";
if _efef .IsHuffmanEncoded {if _efef .SbHuffRDY ==3{if _efef ._aacg ==nil {var (_cbfg int ;_eebf error ;);if _efef .SbHuffFS ==3{_cbfg ++;};if _efef .SbHuffDS ==3{_cbfg ++;};if _efef .SbHuffDT ==3{_cbfg ++;};if _efef .SbHuffRDWidth ==3{_cbfg ++;};if _efef .SbHuffRDHeight ==3{_cbfg ++;
};if _efef .SbHuffRDX ==3{_cbfg ++;};_efef ._aacg ,_eebf =_efef .getUserTable (_cbfg );if _eebf !=nil {return 0,_dg .Wrap (_eebf ,_bddfe ,"");};};return _efef ._aacg .Decode (_efef ._cbge );};_ecdf ,_afgf :=_ae .GetStandardTable (14+int (_efef .SbHuffRDY ));
if _afgf !=nil {return 0,_afgf ;};return _ecdf .Decode (_efef ._cbge );};_geac ,_dfcd :=_efef ._efbd .DecodeInt (_efef ._bbef );if _dfcd !=nil {return 0,_dg .Wrap (_dfcd ,_bddfe ,"");};return int64 (_geac ),nil ;};func (_eeb *HalftoneRegion )combineGrayscalePlanes (_bcf []*_f .Bitmap ,_fcgf int )error {_ecab :=0;
for _abb :=0;_abb < _bcf [_fcgf ].Height ;_abb ++{for _bgfg :=0;_bgfg < _bcf [_fcgf ].Width ;_bgfg +=8{_dgfa ,_ecfg :=_bcf [_fcgf +1].GetByte (_ecab );if _ecfg !=nil {return _ecfg ;};_eefe ,_ecfg :=_bcf [_fcgf ].GetByte (_ecab );if _ecfg !=nil {return _ecfg ;
};_ecfg =_bcf [_fcgf ].SetByte (_ecab ,_f .CombineBytes (_eefe ,_dgfa ,_f .CmbOpXor ));if _ecfg !=nil {return _ecfg ;};_ecab ++;};};return nil ;};func (_bdge *SymbolDictionary )setSymbolsArray ()error {if _bdge ._gea ==nil {if _aedgc :=_bdge .retrieveImportSymbols ();
_aedgc !=nil {return _aedgc ;};};if _bdge ._egad ==nil {_bdge ._egad =append (_bdge ._egad ,_bdge ._gea ...);};return nil ;};type template1 struct{};func (_edgb *RegionSegment )Encode (w _ed .BinaryWriter )(_cbbe int ,_abfd error ){const _dafcb ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_fdeg :=make ([]byte ,4);_c .BigEndian .PutUint32 (_fdeg ,_edgb .BitmapWidth );_cbbe ,_abfd =w .Write (_fdeg );if _abfd !=nil {return 0,_dg .Wrap (_abfd ,_dafcb ,"\u0057\u0069\u0064t\u0068");};_c .BigEndian .PutUint32 (_fdeg ,_edgb .BitmapHeight );var _eccf int ;
_eccf ,_abfd =w .Write (_fdeg );if _abfd !=nil {return 0,_dg .Wrap (_abfd ,_dafcb ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_cbbe +=_eccf ;_c .BigEndian .PutUint32 (_fdeg ,_edgb .XLocation );_eccf ,_abfd =w .Write (_fdeg );if _abfd !=nil {return 0,_dg .Wrap (_abfd ,_dafcb ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_cbbe +=_eccf ;_c .BigEndian .PutUint32 (_fdeg ,_edgb .YLocation );_eccf ,_abfd =w .Write (_fdeg );if _abfd !=nil {return 0,_dg .Wrap (_abfd ,_dafcb ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_cbbe +=_eccf ;if _abfd =w .WriteByte (byte (_edgb .CombinaionOperator )&0x07);
_abfd !=nil {return 0,_dg .Wrap (_abfd ,_dafcb ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_cbbe ++;return _cbbe ,nil ;};type SymbolDictionary struct{_eecc *_ed .Reader ;SdrTemplate int8 ;SdTemplate int8 ;
_gbcb bool ;_bfcb bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;
NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_eaae uint32 ;_gea []*_f .Bitmap ;_aefc uint32 ;_cgeac []*_f .Bitmap ;_bgbc _ae .Tabler ;_acaf _ae .Tabler ;_eeddc _ae .Tabler ;_gbf _ae .Tabler ;_geb []*_f .Bitmap ;_egad []*_f .Bitmap ;
_bfdg *_be .Decoder ;_gaff *TextRegion ;_gffc *GenericRegion ;_caeg *GenericRefinementRegion ;_edfe *_be .DecoderStats ;_gfed *_be .DecoderStats ;_bfcc *_be .DecoderStats ;_cfda *_be .DecoderStats ;_fdef *_be .DecoderStats ;_gada *_be .DecoderStats ;_gfddb *_be .DecoderStats ;
_bacc *_be .DecoderStats ;_dge *_be .DecoderStats ;_cegc int8 ;_dfc *_f .Bitmaps ;_cdda []int ;_bbca map[int ]int ;_bagc bool ;};func (_ggba *PatternDictionary )readTemplate ()error {_gddb ,_decae :=_ggba ._agce .ReadBits (2);if _decae !=nil {return _decae ;
};_ggba .HDTemplate =byte (_gddb );return nil ;};func (_adaf *TextRegion )decodeDT ()(_bbfe int64 ,_bbda error ){if _adaf .IsHuffmanEncoded {if _adaf .SbHuffDT ==3{_bbfe ,_bbda =_adaf ._egfg .Decode (_adaf ._cbge );if _bbda !=nil {return 0,_bbda ;};}else {var _aagba _ae .Tabler ;
_aagba ,_bbda =_ae .GetStandardTable (11+int (_adaf .SbHuffDT ));if _bbda !=nil {return 0,_bbda ;};_bbfe ,_bbda =_aagba .Decode (_adaf ._cbge );if _bbda !=nil {return 0,_bbda ;};};}else {var _dbbbd int32 ;_dbbbd ,_bbda =_adaf ._efbd .DecodeInt (_adaf ._dbefe );
if _bbda !=nil {return 0,_bbda ;};_bbfe =int64 (_dbbbd );};_bbfe *=int64 (_adaf .SbStrips );return _bbfe ,nil ;};func _bebb (_dgf *_ed .Reader ,_gcda *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_fed :_dgf ,RegionInfo :NewRegionSegment (_dgf ),_eg :_gcda ,_bb :&template0 {},_fc :&template1 {}};
};func (_bbg *GenericRegion )setOverrideFlag (_ecf int ){_bbg .GBAtOverride [_ecf ]=true ;_bbg ._edd =true ;};func (_dbcb *HalftoneRegion )GetPatterns ()([]*_f .Bitmap ,error ){var (_cddf []*_f .Bitmap ;_agbcc error ;);for _ ,_dafc :=range _dbcb ._cagg .RTSegments {var _dbd Segmenter ;
_dbd ,_agbcc =_dafc .GetSegmentData ();if _agbcc !=nil {_gf .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_agbcc );return nil ,_agbcc ;};_acdd ,_egefa :=_dbd .(*PatternDictionary );
if !_egefa {_agbcc =_a .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_dbd );
return nil ,_agbcc ;};var _bagg []*_f .Bitmap ;_bagg ,_agbcc =_acdd .GetDictionary ();if _agbcc !=nil {_gf .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_agbcc );
return nil ,_agbcc ;};_cddf =append (_cddf ,_bagg ...);};return _cddf ,nil ;};func (_gaeg *SymbolDictionary )setCodingStatistics ()error {if _gaeg ._bacc ==nil {_gaeg ._bacc =_be .NewStats (512,1);};if _gaeg ._gfed ==nil {_gaeg ._gfed =_be .NewStats (512,1);
};if _gaeg ._bfcc ==nil {_gaeg ._bfcc =_be .NewStats (512,1);};if _gaeg ._cfda ==nil {_gaeg ._cfda =_be .NewStats (512,1);};if _gaeg ._fdef ==nil {_gaeg ._fdef =_be .NewStats (512,1);};if _gaeg .UseRefinementAggregation &&_gaeg ._dge ==nil {_gaeg ._dge =_be .NewStats (1<<uint (_gaeg ._cegc ),1);
_gaeg ._gada =_be .NewStats (512,1);_gaeg ._gfddb =_be .NewStats (512,1);};if _gaeg ._edfe ==nil {_gaeg ._edfe =_be .NewStats (65536,1);};if _gaeg ._bfdg ==nil {var _acbg error ;_gaeg ._bfdg ,_acbg =_be .New (_gaeg ._eecc );if _acbg !=nil {return _acbg ;
};};return nil ;};func (_dacba *RegionSegment )String ()string {_acgf :=&_ec .Builder {};_acgf .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_acgf .WriteString (_a .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_dacba .BitmapWidth ,_dacba .BitmapHeight ));
_acgf .WriteString (_a .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_dacba .XLocation ,_dacba .YLocation ));_acgf .WriteString (_a .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_dacba .CombinaionOperator ));
return _acgf .String ();};func (_daeg *SymbolDictionary )encodeFlags (_abc _ed .BinaryWriter )(_fbbbf int ,_ggec error ){const _gggb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ggec =_abc .SkipBits (3);_ggec !=nil {return 0,_dg .Wrap (_ggec ,_gggb ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");
};var _gdgf int ;if _daeg .SdrTemplate > 0{_gdgf =1;};if _ggec =_abc .WriteBit (_gdgf );_ggec !=nil {return _fbbbf ,_dg .Wrap (_ggec ,_gggb ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gdgf =0;if _daeg .SdTemplate > 1{_gdgf =1;};
if _ggec =_abc .WriteBit (_gdgf );_ggec !=nil {return _fbbbf ,_dg .Wrap (_ggec ,_gggb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gdgf =0;if _daeg .SdTemplate ==1||_daeg .SdTemplate ==3{_gdgf =1;};if _ggec =_abc .WriteBit (_gdgf );
_ggec !=nil {return _fbbbf ,_dg .Wrap (_ggec ,_gggb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gdgf =0;if _daeg ._gbcb {_gdgf =1;};if _ggec =_abc .WriteBit (_gdgf );_ggec !=nil {return _fbbbf ,_dg .Wrap (_ggec ,_gggb ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_gdgf =0;if _daeg ._bfcb {_gdgf =1;};if _ggec =_abc .WriteBit (_gdgf );_ggec !=nil {return _fbbbf ,_dg .Wrap (_ggec ,_gggb ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_gdgf =0;if _daeg .SdHuffAggInstanceSelection {_gdgf =1;
};if _ggec =_abc .WriteBit (_gdgf );_ggec !=nil {return _fbbbf ,_dg .Wrap (_ggec ,_gggb ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_gdgf =int (_daeg .SdHuffBMSizeSelection );if _ggec =_abc .WriteBit (_gdgf );_ggec !=nil {return _fbbbf ,_dg .Wrap (_ggec ,_gggb ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_gdgf =0;if _daeg .SdHuffDecodeWidthSelection > 1{_gdgf =1;};if _ggec =_abc .WriteBit (_gdgf );_ggec !=nil {return _fbbbf ,_dg .Wrap (_ggec ,_gggb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_gdgf =0;switch _daeg .SdHuffDecodeWidthSelection {case 1,3:_gdgf =1;
};if _ggec =_abc .WriteBit (_gdgf );_ggec !=nil {return _fbbbf ,_dg .Wrap (_ggec ,_gggb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_gdgf =0;if _daeg .SdHuffDecodeHeightSelection > 1{_gdgf =1;};if _ggec =_abc .WriteBit (_gdgf );
_ggec !=nil {return _fbbbf ,_dg .Wrap (_ggec ,_gggb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_gdgf =0;switch _daeg .SdHuffDecodeHeightSelection {case 1,3:_gdgf =1;};if _ggec =_abc .WriteBit (_gdgf );_ggec !=nil {return _fbbbf ,_dg .Wrap (_ggec ,_gggb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_gdgf =0;if _daeg .UseRefinementAggregation {_gdgf =1;};if _ggec =_abc .WriteBit (_gdgf );_ggec !=nil {return _fbbbf ,_dg .Wrap (_ggec ,_gggb ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_gdgf =0;if _daeg .IsHuffmanEncoded {_gdgf =1;};if _ggec =_abc .WriteBit (_gdgf );
_ggec !=nil {return _fbbbf ,_dg .Wrap (_ggec ,_gggb ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};var (_bfgbg Segmenter ;_bdcd =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _bfgbg },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _bfgbg },TProfiles :func ()Segmenter {return _bfgbg },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _bfgbg },TBitmap :func ()Segmenter {return _bfgbg }};
);func (_ecbb *TextRegion )GetRegionBitmap ()(*_f .Bitmap ,error ){if _ecbb .RegionBitmap !=nil {return _ecbb .RegionBitmap ,nil ;};if !_ecbb .IsHuffmanEncoded {if _dedb :=_ecbb .setCodingStatistics ();_dedb !=nil {return nil ,_dedb ;};};if _aagd :=_ecbb .createRegionBitmap ();
_aagd !=nil {return nil ,_aagd ;};if _abda :=_ecbb .decodeSymbolInstances ();_abda !=nil {return nil ,_abda ;};return _ecbb .RegionBitmap ,nil ;};func (_fdbgb *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_cgdde :=range _fdbgb .Header .RTSegments {if _cgdde .Type ==0{_ecaed ,_edgf :=_cgdde .GetSegmentData ();
if _edgf !=nil {return _edgf ;};_defb ,_ffgf :=_ecaed .(*SymbolDictionary );if !_ffgf {return _a .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_ecaed );
};_gggg ,_edgf :=_defb .GetDictionary ();if _edgf !=nil {return _a .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_cgdde .SegmentNumber ,_edgf .Error ());
};_fdbgb ._gea =append (_fdbgb ._gea ,_gggg ...);_fdbgb ._eaae +=_defb .NumberOfExportedSymbols ;};};return nil ;};func (_dccb *TableSegment )HtLow ()int32 {return _dccb ._fcaa };func (_faeg *TextRegion )decodeSymbolInstances ()error {_cggfa ,_dbeg :=_faeg .decodeStripT ();
if _dbeg !=nil {return _dbeg ;};var (_aaba int64 ;_beebe uint32 ;);for _beebe < _faeg .NumberOfSymbolInstances {_fbbdg ,_faec :=_faeg .decodeDT ();if _faec !=nil {return _faec ;};_cggfa +=_fbbdg ;var _gedd int64 ;_fdba :=true ;_faeg ._cgeb =0;for {if _fdba {_gedd ,_faec =_faeg .decodeDfs ();
if _faec !=nil {return _faec ;};_aaba +=_gedd ;_faeg ._cgeb =_aaba ;_fdba =false ;}else {_cbcg ,_dfdg :=_faeg .decodeIds ();if _d .Is (_dfdg ,_fe .ErrOOB ){break ;};if _dfdg !=nil {return _dfdg ;};if _beebe >=_faeg .NumberOfSymbolInstances {break ;};_faeg ._cgeb +=_cbcg +int64 (_faeg .SbDsOffset );
};_gfdc ,_dcac :=_faeg .decodeCurrentT ();if _dcac !=nil {return _dcac ;};_ecea :=_cggfa +_gfdc ;_aae ,_dcac :=_faeg .decodeID ();if _dcac !=nil {return _dcac ;};_bbdb ,_dcac :=_faeg .decodeRI ();if _dcac !=nil {return _dcac ;};_cdbe ,_dcac :=_faeg .decodeIb (_bbdb ,_aae );
if _dcac !=nil {return _dcac ;};if _dcac =_faeg .blit (_cdbe ,_ecea );_dcac !=nil {return _dcac ;};_beebe ++;};};return nil ;};func (_bgeb *SymbolDictionary )encodeNumSyms (_dgg _ed .BinaryWriter )(_gdbe int ,_dacd error ){const _cbace ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_eegaf :=make ([]byte ,4);_c .BigEndian .PutUint32 (_eegaf ,_bgeb .NumberOfExportedSymbols );if _gdbe ,_dacd =_dgg .Write (_eegaf );_dacd !=nil {return _gdbe ,_dg .Wrap (_dacd ,_cbace ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_c .BigEndian .PutUint32 (_eegaf ,_bgeb .NumberOfNewSymbols );_fbge ,_dacd :=_dgg .Write (_eegaf );if _dacd !=nil {return _gdbe ,_dg .Wrap (_dacd ,_cbace ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _gdbe +_fbge ,nil ;};
const (ORandom OrganizationType =iota ;OSequential ;);func (_bdef *PageInformationSegment )readCombinationOperator ()error {_caaf ,_efde :=_bdef ._efcg .ReadBits (2);if _efde !=nil {return _efde ;};_bdef ._ebgg =_f .CombinationOperator (int (_caaf ));return nil ;
};func (_adcc *template0 )setIndex (_dbc *_be .DecoderStats ){_dbc .SetIndex (0x100)};func (_cbca *Header )writeReferredToSegments (_ffgc _ed .BinaryWriter )(_fbfb int ,_aagb error ){const _addg ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_abeg uint16 ;_ffb uint32 ;);_baga :=_cbca .referenceSize ();_ddce :=1;_efb :=make ([]byte ,_baga );for _ ,_dca :=range _cbca .RTSNumbers {switch _baga {case 4:_ffb =uint32 (_dca );_c .BigEndian .PutUint32 (_efb ,_ffb );_ddce ,_aagb =_ffgc .Write (_efb );
if _aagb !=nil {return 0,_dg .Wrap (_aagb ,_addg ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_abeg =uint16 (_dca );_c .BigEndian .PutUint16 (_efb ,_abeg );_ddce ,_aagb =_ffgc .Write (_efb );if _aagb !=nil {return 0,_dg .Wrap (_aagb ,_addg ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _aagb =_ffgc .WriteByte (byte (_dca ));_aagb !=nil {return 0,_dg .Wrap (_aagb ,_addg ,"\u0075\u0069\u006et\u0038");};};_fbfb +=_ddce ;};return _fbfb ,nil ;};func (_adac *TextRegion )readRegionFlags ()error {var (_fbfac int ;_bedg uint64 ;_bbgb error ;
);_fbfac ,_bbgb =_adac ._cbge .ReadBit ();if _bbgb !=nil {return _bbgb ;};_adac .SbrTemplate =int8 (_fbfac );_bedg ,_bbgb =_adac ._cbge .ReadBits (5);if _bbgb !=nil {return _bbgb ;};_adac .SbDsOffset =int8 (_bedg );if _adac .SbDsOffset > 0x0f{_adac .SbDsOffset -=0x20;
};_fbfac ,_bbgb =_adac ._cbge .ReadBit ();if _bbgb !=nil {return _bbgb ;};_adac .DefaultPixel =int8 (_fbfac );_bedg ,_bbgb =_adac ._cbge .ReadBits (2);if _bbgb !=nil {return _bbgb ;};_adac .CombinationOperator =_f .CombinationOperator (int (_bedg )&0x3);
_fbfac ,_bbgb =_adac ._cbge .ReadBit ();if _bbgb !=nil {return _bbgb ;};_adac .IsTransposed =int8 (_fbfac );_bedg ,_bbgb =_adac ._cbge .ReadBits (2);if _bbgb !=nil {return _bbgb ;};_adac .ReferenceCorner =int16 (_bedg )&0x3;_bedg ,_bbgb =_adac ._cbge .ReadBits (2);
if _bbgb !=nil {return _bbgb ;};_adac .LogSBStrips =int16 (_bedg )&0x3;_adac .SbStrips =1<<uint (_adac .LogSBStrips );_fbfac ,_bbgb =_adac ._cbge .ReadBit ();if _bbgb !=nil {return _bbgb ;};if _fbfac ==1{_adac .UseRefinement =true ;};_fbfac ,_bbgb =_adac ._cbge .ReadBit ();
if _bbgb !=nil {return _bbgb ;};if _fbfac ==1{_adac .IsHuffmanEncoded =true ;};return nil ;};func (_ebaf *PatternDictionary )readGrayMax ()error {_geff ,_cff :=_ebaf ._agce .ReadBits (32);if _cff !=nil {return _cff ;};_ebaf .GrayMax =uint32 (_geff &_b .MaxUint32 );
return nil ;};func (_gddg *Header )writeReferredToCount (_ccdf _ed .BinaryWriter )(_eegcf int ,_begb error ){const _ada ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_gddg .RTSNumbers =make ([]int ,len (_gddg .RTSegments ));
for _aegbe ,_eeaf :=range _gddg .RTSegments {_gddg .RTSNumbers [_aegbe ]=int (_eeaf .SegmentNumber );};if len (_gddg .RTSNumbers )<=4{var _eegd byte ;if len (_gddg .RetainBits )>=1{_eegd =_gddg .RetainBits [0];};_eegd |=byte (len (_gddg .RTSNumbers ))<<5;
if _begb =_ccdf .WriteByte (_eegd );_begb !=nil {return 0,_dg .Wrap (_begb ,_ada ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_eace :=uint32 (len (_gddg .RTSNumbers ));_begc :=make ([]byte ,4+_dd .Ceil (len (_gddg .RTSNumbers )+1,8));
_eace |=0x7<<29;_c .BigEndian .PutUint32 (_begc ,_eace );copy (_begc [1:],_gddg .RetainBits );_eegcf ,_begb =_ccdf .Write (_begc );if _begb !=nil {return 0,_dg .Wrap (_begb ,_ada ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _eegcf ,nil ;
};func (_agdd *TextRegion )decodeIds ()(int64 ,error ){const _abfdf ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _agdd .IsHuffmanEncoded {if _agdd .SbHuffDS ==3{if _agdd ._dgfg ==nil {_edde :=0;if _agdd .SbHuffFS ==3{_edde ++;};var _cgff error ;_agdd ._dgfg ,_cgff =_agdd .getUserTable (_edde );
if _cgff !=nil {return 0,_dg .Wrap (_cgff ,_abfdf ,"");};};return _agdd ._dgfg .Decode (_agdd ._cbge );};_fbef ,_cgbe :=_ae .GetStandardTable (8+int (_agdd .SbHuffDS ));if _cgbe !=nil {return 0,_dg .Wrap (_cgbe ,_abfdf ,"");};return _fbef .Decode (_agdd ._cbge );
};_bbddb ,_bbdcb :=_agdd ._efbd .DecodeInt (_agdd ._aecbe );if _bbdcb !=nil {return 0,_dg .Wrap (_bbdcb ,_abfdf ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_bbddb ),nil ;};func (_ecfd *TextRegion )Init (header *Header ,r *_ed .Reader )error {_ecfd .Header =header ;
_ecfd ._cbge =r ;_ecfd .RegionInfo =NewRegionSegment (_ecfd ._cbge );return _ecfd .parseHeader ();};func (_bgf *GenericRefinementRegion )updateOverride ()error {if _bgf .GrAtX ==nil ||_bgf .GrAtY ==nil {return _d .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_bgf .GrAtX )!=len (_bgf .GrAtY ){return _d .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_bgf ._cg =make ([]bool ,len (_bgf .GrAtX ));switch _bgf .TemplateID {case 0:if _bgf .GrAtX [0]!=-1&&_bgf .GrAtY [0]!=-1{_bgf ._cg [0]=true ;
_bgf ._fbg =true ;};if _bgf .GrAtX [1]!=-1&&_bgf .GrAtY [1]!=-1{_bgf ._cg [1]=true ;_bgf ._fbg =true ;};case 1:_bgf ._fbg =false ;};return nil ;};func (_cgdg *TableSegment )StreamReader ()*_ed .Reader {return _cgdg ._aeff };func (_gagg *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _bdefb ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _gagg .SbHuffRSize ==0{_afcg ,_ddgg :=_ae .GetStandardTable (1);if _ddgg !=nil {return 0,_dg .Wrap (_ddgg ,_bdefb ,"");};return _afcg .Decode (_gagg ._cbge );};if _gagg ._ggfgc ==nil {var (_geeae int ;_cfgd error ;);if _gagg .SbHuffFS ==3{_geeae ++;
};if _gagg .SbHuffDS ==3{_geeae ++;};if _gagg .SbHuffDT ==3{_geeae ++;};if _gagg .SbHuffRDWidth ==3{_geeae ++;};if _gagg .SbHuffRDHeight ==3{_geeae ++;};if _gagg .SbHuffRDX ==3{_geeae ++;};if _gagg .SbHuffRDY ==3{_geeae ++;};_gagg ._ggfgc ,_cfgd =_gagg .getUserTable (_geeae );
if _cfgd !=nil {return 0,_dg .Wrap (_cfgd ,_bdefb ,"");};};_afab ,_dfef :=_gagg ._ggfgc .Decode (_gagg ._cbge );if _dfef !=nil {return 0,_dg .Wrap (_dfef ,_bdefb ,"");};return _afab ,nil ;};func (_dfag *Header )subInputReader ()(*_ed .Reader ,error ){_dadg :=int (_dfag .SegmentDataLength );
if _dfag .SegmentDataLength ==_b .MaxInt32 {_dadg =-1;};return _dfag .Reader .NewPartialReader (int (_dfag .SegmentDataStartOffset ),_dadg ,false );};func (_ceggb *TextRegion )decodeID ()(int64 ,error ){if _ceggb .IsHuffmanEncoded {if _ceggb ._cbgg ==nil {_fage ,_cfef :=_ceggb ._cbge .ReadBits (byte (_ceggb ._bedb ));
return int64 (_fage ),_cfef ;};return _ceggb ._cbgg .Decode (_ceggb ._cbge );};return _ceggb ._efbd .DecodeIAID (uint64 (_ceggb ._bedb ),_ceggb ._baea );};func (_fee *Header )readSegmentPageAssociation (_gfff Documenter ,_efc *_ed .Reader ,_cbg uint64 ,_eccb ...int )(_aedg error ){const _bfgb ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_fee .PageAssociationFieldSize {_ggce ,_fafb :=_efc .ReadBits (8);if _fafb !=nil {return _dg .Wrap (_fafb ,_bfgb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fee .PageAssociation =int (_ggce &0xFF);}else {_cadef ,_fabc :=_efc .ReadBits (32);
if _fabc !=nil {return _dg .Wrap (_fabc ,_bfgb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fee .PageAssociation =int (_cadef &_b .MaxInt32 );};if _cbg ==0{return nil ;};if _fee .PageAssociation !=0{_cceg ,_dfbc :=_gfff .GetPage (_fee .PageAssociation );
if _dfbc !=nil {return _dg .Wrap (_dfbc ,_bfgb ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _cfaf int ;for _cgge :=uint64 (0);_cgge < _cbg ;_cgge ++{_cfaf =_eccb [_cgge ];
_fee .RTSegments [_cgge ],_dfbc =_cceg .GetSegment (_cfaf );if _dfbc !=nil {var _bcgb error ;_fee .RTSegments [_cgge ],_bcgb =_gfff .GetGlobalSegment (_cfaf );if _bcgb !=nil {return _dg .Wrapf (_dfbc ,_bfgb ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_fee .PageAssociation );
};};};return nil ;};for _acge :=uint64 (0);_acge < _cbg ;_acge ++{_fee .RTSegments [_acge ],_aedg =_gfff .GetGlobalSegment (_eccb [_acge ]);if _aedg !=nil {return _dg .Wrapf (_aedg ,_bfgb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_eccb [_acge ]);
};};return nil ;};func (_cacf *SymbolDictionary )readRefinementAtPixels (_fcd int )error {_cacf .SdrATX =make ([]int8 ,_fcd );_cacf .SdrATY =make ([]int8 ,_fcd );var (_deee byte ;_bccd error ;);for _acff :=0;_acff < _fcd ;_acff ++{_deee ,_bccd =_cacf ._eecc .ReadByte ();
if _bccd !=nil {return _bccd ;};_cacf .SdrATX [_acff ]=int8 (_deee );_deee ,_bccd =_cacf ._eecc .ReadByte ();if _bccd !=nil {return _bccd ;};_cacf .SdrATY [_acff ]=int8 (_deee );};return nil ;};func (_ecgc *SymbolDictionary )getSbSymCodeLen ()int8 {_bdegg :=int8 (_b .Ceil (_b .Log (float64 (_ecgc ._eaae +_ecgc .NumberOfNewSymbols ))/_b .Log (2)));
if _ecgc .IsHuffmanEncoded &&_bdegg < 1{return 1;};return _bdegg ;};func (_bega *PatternDictionary )parseHeader ()error {_gf .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_gf .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_bfed :=_bega ._agce .ReadBits (5);if _bfed !=nil {return _bfed ;};if _bfed =_bega .readTemplate ();_bfed !=nil {return _bfed ;};if _bfed =_bega .readIsMMREncoded ();_bfed !=nil {return _bfed ;};if _bfed =_bega .readPatternWidthAndHeight ();_bfed !=nil {return _bfed ;
};if _bfed =_bega .readGrayMax ();_bfed !=nil {return _bfed ;};if _bfed =_bega .computeSegmentDataStructure ();_bfed !=nil {return _bfed ;};return _bega .checkInput ();};func (_gbda *Header )pageSize ()uint {if _gbda .PageAssociation <=255{return 1;};return 4;
};func (_bdeg *PatternDictionary )checkInput ()error {if _bdeg .HdpHeight < 1||_bdeg .HdpWidth < 1{return _d .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _bdeg .IsMMREncoded {if _bdeg .HDTemplate !=0{_gf .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_gaaeb *SymbolDictionary )decodeAggregate (_gde ,_cedd uint32 )error {var (_gbfb int64 ;_addf error ;);if _gaaeb .IsHuffmanEncoded {_gbfb ,_addf =_gaaeb .huffDecodeRefAggNInst ();if _addf !=nil {return _addf ;};}else {_bdee ,_edff :=_gaaeb ._bfdg .DecodeInt (_gaaeb ._cfda );
if _edff !=nil {return _edff ;};_gbfb =int64 (_bdee );};if _gbfb > 1{return _gaaeb .decodeThroughTextRegion (_gde ,_cedd ,uint32 (_gbfb ));}else if _gbfb ==1{return _gaaeb .decodeRefinedSymbol (_gde ,_cedd );};return nil ;};func (_gbeee *TextRegion )setCodingStatistics ()error {if _gbeee ._dbefe ==nil {_gbeee ._dbefe =_be .NewStats (512,1);
};if _gbeee ._daca ==nil {_gbeee ._daca =_be .NewStats (512,1);};if _gbeee ._aecbe ==nil {_gbeee ._aecbe =_be .NewStats (512,1);};if _gbeee ._fegf ==nil {_gbeee ._fegf =_be .NewStats (512,1);};if _gbeee ._ecfgga ==nil {_gbeee ._ecfgga =_be .NewStats (512,1);
};if _gbeee ._ceca ==nil {_gbeee ._ceca =_be .NewStats (512,1);};if _gbeee ._gbcf ==nil {_gbeee ._gbcf =_be .NewStats (512,1);};if _gbeee ._baea ==nil {_gbeee ._baea =_be .NewStats (1<<uint (_gbeee ._bedb ),1);};if _gbeee ._gbfbd ==nil {_gbeee ._gbfbd =_be .NewStats (512,1);
};if _gbeee ._bbef ==nil {_gbeee ._bbef =_be .NewStats (512,1);};if _gbeee ._efbd ==nil {var _ebce error ;_gbeee ._efbd ,_ebce =_be .New (_gbeee ._cbge );if _ebce !=nil {return _ebce ;};};return nil ;};func (_cgca *SymbolDictionary )readNumberOfNewSymbols ()error {_ebbf ,_eafd :=_cgca ._eecc .ReadBits (32);
if _eafd !=nil {return _eafd ;};_cgca .NumberOfNewSymbols =uint32 (_ebbf &_b .MaxUint32 );return nil ;};func (_dgfd *HalftoneRegion )computeY (_cccg ,_dfbd int )int {return _dgfd .shiftAndFill (int (_dgfd .HGridY )+_cccg *int (_dgfd .HRegionX )-_dfbd *int (_dgfd .HRegionY ));
};func (_gcba *TextRegion )encodeFlags (_bgfe _ed .BinaryWriter )(_eadbc int ,_abgc error ){const _gbff ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _abgc =_bgfe .WriteBit (int (_gcba .SbrTemplate ));_abgc !=nil {return _eadbc ,_dg .Wrap (_abgc ,_gbff ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};if _ ,_abgc =_bgfe .WriteBits (uint64 (_gcba .SbDsOffset ),5);_abgc !=nil {return _eadbc ,_dg .Wrap (_abgc ,_gbff ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _abgc =_bgfe .WriteBit (int (_gcba .DefaultPixel ));_abgc !=nil {return _eadbc ,_dg .Wrap (_abgc ,_gbff ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");
};if _ ,_abgc =_bgfe .WriteBits (uint64 (_gcba .CombinationOperator ),2);_abgc !=nil {return _eadbc ,_dg .Wrap (_abgc ,_gbff ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _abgc =_bgfe .WriteBit (int (_gcba .IsTransposed ));
_abgc !=nil {return _eadbc ,_dg .Wrap (_abgc ,_gbff ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_abgc =_bgfe .WriteBits (uint64 (_gcba .ReferenceCorner ),2);_abgc !=nil {return _eadbc ,_dg .Wrap (_abgc ,_gbff ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");
};if _ ,_abgc =_bgfe .WriteBits (uint64 (_gcba .LogSBStrips ),2);_abgc !=nil {return _eadbc ,_dg .Wrap (_abgc ,_gbff ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _ddeg int ;if _gcba .UseRefinement {_ddeg =1;};if _abgc =_bgfe .WriteBit (_ddeg );
_abgc !=nil {return _eadbc ,_dg .Wrap (_abgc ,_gbff ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_ddeg =0;if _gcba .IsHuffmanEncoded {_ddeg =1;};if _abgc =_bgfe .WriteBit (_ddeg );_abgc !=nil {return _eadbc ,_dg .Wrap (_abgc ,_gbff ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");
};_eadbc =2;return _eadbc ,nil ;};func (_egg *template1 )setIndex (_cgg *_be .DecoderStats ){_cgg .SetIndex (0x080)};func NewRegionSegment (r *_ed .Reader )*RegionSegment {return &RegionSegment {_gcc :r }};func (_cdcb *GenericRefinementRegion )decodeTemplate (_gcd ,_abe ,_eca ,_gdc ,_efa ,_aa ,_dfbe ,_bbc ,_fae ,_eeg int ,_ddc templater )(_aad error ){var (_fce ,_bce ,_fgee ,_adfc ,_fbgb int16 ;
_gdfa ,_gab ,_fcc ,_gdcf int ;_gga byte ;);if _fae >=1&&(_fae -1)< _cdcb .ReferenceBitmap .Height {_gga ,_aad =_cdcb .ReferenceBitmap .GetByte (_eeg -_gdc );if _aad !=nil {return _aad ;};_gdfa =int (_gga );};if _fae >=0&&(_fae )< _cdcb .ReferenceBitmap .Height {_gga ,_aad =_cdcb .ReferenceBitmap .GetByte (_eeg );
if _aad !=nil {return _aad ;};_gab =int (_gga );};if _fae >=-1&&(_fae +1)< _cdcb .ReferenceBitmap .Height {_gga ,_aad =_cdcb .ReferenceBitmap .GetByte (_eeg +_gdc );if _aad !=nil {return _aad ;};_fcc =int (_gga );};_eeg ++;if _gcd >=1{_gga ,_aad =_cdcb .RegionBitmap .GetByte (_bbc -_eca );
if _aad !=nil {return _aad ;};_gdcf =int (_gga );};_bbc ++;_aab :=_cdcb .ReferenceDX %8;_bd :=6+_aab ;_ggf :=_eeg %_gdc ;if _bd >=0{if _bd < 8{_fce =int16 (_gdfa >>uint (_bd ))&0x07;};if _bd < 8{_bce =int16 (_gab >>uint (_bd ))&0x07;};if _bd < 8{_fgee =int16 (_fcc >>uint (_bd ))&0x07;
};if _bd ==6&&_ggf > 1{if _fae >=1&&(_fae -1)< _cdcb .ReferenceBitmap .Height {_gga ,_aad =_cdcb .ReferenceBitmap .GetByte (_eeg -_gdc -2);if _aad !=nil {return _aad ;};_fce |=int16 (_gga <<2)&0x04;};if _fae >=0&&_fae < _cdcb .ReferenceBitmap .Height {_gga ,_aad =_cdcb .ReferenceBitmap .GetByte (_eeg -2);
if _aad !=nil {return _aad ;};_bce |=int16 (_gga <<2)&0x04;};if _fae >=-1&&_fae +1< _cdcb .ReferenceBitmap .Height {_gga ,_aad =_cdcb .ReferenceBitmap .GetByte (_eeg +_gdc -2);if _aad !=nil {return _aad ;};_fgee |=int16 (_gga <<2)&0x04;};};if _bd ==0{_gdfa =0;
_gab =0;_fcc =0;if _ggf < _gdc -1{if _fae >=1&&_fae -1< _cdcb .ReferenceBitmap .Height {_gga ,_aad =_cdcb .ReferenceBitmap .GetByte (_eeg -_gdc );if _aad !=nil {return _aad ;};_gdfa =int (_gga );};if _fae >=0&&_fae < _cdcb .ReferenceBitmap .Height {_gga ,_aad =_cdcb .ReferenceBitmap .GetByte (_eeg );
if _aad !=nil {return _aad ;};_gab =int (_gga );};if _fae >=-1&&_fae +1< _cdcb .ReferenceBitmap .Height {_gga ,_aad =_cdcb .ReferenceBitmap .GetByte (_eeg +_gdc );if _aad !=nil {return _aad ;};_fcc =int (_gga );};};_eeg ++;};}else {_fce =int16 (_gdfa <<1)&0x07;
_bce =int16 (_gab <<1)&0x07;_fgee =int16 (_fcc <<1)&0x07;_gdfa =0;_gab =0;_fcc =0;if _ggf < _gdc -1{if _fae >=1&&_fae -1< _cdcb .ReferenceBitmap .Height {_gga ,_aad =_cdcb .ReferenceBitmap .GetByte (_eeg -_gdc );if _aad !=nil {return _aad ;};_gdfa =int (_gga );
};if _fae >=0&&_fae < _cdcb .ReferenceBitmap .Height {_gga ,_aad =_cdcb .ReferenceBitmap .GetByte (_eeg );if _aad !=nil {return _aad ;};_gab =int (_gga );};if _fae >=-1&&_fae +1< _cdcb .ReferenceBitmap .Height {_gga ,_aad =_cdcb .ReferenceBitmap .GetByte (_eeg +_gdc );
if _aad !=nil {return _aad ;};_fcc =int (_gga );};_eeg ++;};_fce |=int16 ((_gdfa >>7)&0x07);_bce |=int16 ((_gab >>7)&0x07);_fgee |=int16 ((_fcc >>7)&0x07);};_adfc =int16 (_gdcf >>6);_fbgb =0;_daf :=(2-_aab )%8;_gdfa <<=uint (_daf );_gab <<=uint (_daf );
_fcc <<=uint (_daf );_gdcf <<=2;var _ceb int ;for _bdf :=0;_bdf < _abe ;_bdf ++{_ccb :=_bdf &0x07;_dfbb :=_ddc .form (_fce ,_bce ,_fgee ,_adfc ,_fbgb );if _cdcb ._fbg {_gga ,_aad =_cdcb .RegionBitmap .GetByte (_cdcb .RegionBitmap .GetByteIndex (_bdf ,_gcd ));
if _aad !=nil {return _aad ;};_cdcb ._af .SetIndex (int32 (_cdcb .overrideAtTemplate0 (int (_dfbb ),_bdf ,_gcd ,int (_gga ),_ccb )));}else {_cdcb ._af .SetIndex (int32 (_dfbb ));};_ceb ,_aad =_cdcb ._fg .DecodeBit (_cdcb ._af );if _aad !=nil {return _aad ;
};if _aad =_cdcb .RegionBitmap .SetPixel (_bdf ,_gcd ,byte (_ceb ));_aad !=nil {return _aad ;};_fce =((_fce <<1)|0x01&int16 (_gdfa >>7))&0x07;_bce =((_bce <<1)|0x01&int16 (_gab >>7))&0x07;_fgee =((_fgee <<1)|0x01&int16 (_fcc >>7))&0x07;_adfc =((_adfc <<1)|0x01&int16 (_gdcf >>7))&0x07;
_fbgb =int16 (_ceb );if (_bdf -int (_cdcb .ReferenceDX ))%8==5{_gdfa =0;_gab =0;_fcc =0;if ((_bdf -int (_cdcb .ReferenceDX ))/8)+1< _cdcb .ReferenceBitmap .RowStride {if _fae >=1&&(_fae -1)< _cdcb .ReferenceBitmap .Height {_gga ,_aad =_cdcb .ReferenceBitmap .GetByte (_eeg -_gdc );
if _aad !=nil {return _aad ;};_gdfa =int (_gga );};if _fae >=0&&_fae < _cdcb .ReferenceBitmap .Height {_gga ,_aad =_cdcb .ReferenceBitmap .GetByte (_eeg );if _aad !=nil {return _aad ;};_gab =int (_gga );};if _fae >=-1&&(_fae +1)< _cdcb .ReferenceBitmap .Height {_gga ,_aad =_cdcb .ReferenceBitmap .GetByte (_eeg +_gdc );
if _aad !=nil {return _aad ;};_fcc =int (_gga );};};_eeg ++;}else {_gdfa <<=1;_gab <<=1;_fcc <<=1;};if _ccb ==5&&_gcd >=1{if ((_bdf >>3)+1)>=_cdcb .RegionBitmap .RowStride {_gdcf =0;}else {_gga ,_aad =_cdcb .RegionBitmap .GetByte (_bbc -_eca );if _aad !=nil {return _aad ;
};_gdcf =int (_gga );};_bbc ++;}else {_gdcf <<=1;};};return nil ;};func (_fec *GenericRegion )setParametersWithAt (_bgfa bool ,_ddba byte ,_egbe ,_cgd bool ,_baf ,_gcgd []int8 ,_feb ,_bgcf uint32 ,_gdfb *_be .DecoderStats ,_eddg *_be .Decoder ){_fec .IsMMREncoded =_bgfa ;
_fec .GBTemplate =_ddba ;_fec .IsTPGDon =_egbe ;_fec .GBAtX =_baf ;_fec .GBAtY =_gcgd ;_fec .RegionSegment .BitmapHeight =_bgcf ;_fec .RegionSegment .BitmapWidth =_feb ;_fec ._bbb =nil ;_fec .Bitmap =nil ;if _gdfb !=nil {_fec ._ecg =_gdfb ;};if _eddg !=nil {_fec ._beed =_eddg ;
};_gf .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_fec );};func (_cfcd *SymbolDictionary )Init (h *Header ,r *_ed .Reader )error {_cfcd .Header =h ;
_cfcd ._eecc =r ;return _cfcd .parseHeader ();};func (_bbbaa *TextRegion )createRegionBitmap ()error {_bbbaa .RegionBitmap =_f .New (int (_bbbaa .RegionInfo .BitmapWidth ),int (_bbbaa .RegionInfo .BitmapHeight ));if _bbbaa .DefaultPixel !=0{_bbbaa .RegionBitmap .SetDefaultPixel ();
};return nil ;};func (_cd *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _cd .RegionInfo };func (_eac *GenericRegion )computeSegmentDataStructure ()error {_eac .DataOffset =_eac ._eag .AbsolutePosition ();_eac .DataHeaderLength =_eac .DataOffset -_eac .DataHeaderOffset ;
_eac .DataLength =int64 (_eac ._eag .AbsoluteLength ())-_eac .DataHeaderLength ;return nil ;};func (_aadgf *Header )writeSegmentNumber (_fefbf _ed .BinaryWriter )(_fced int ,_edge error ){_ecbc :=make ([]byte ,4);_c .BigEndian .PutUint32 (_ecbc ,_aadgf .SegmentNumber );
if _fced ,_edge =_fefbf .Write (_ecbc );_edge !=nil {return 0,_dg .Wrap (_edge ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _fced ,nil ;};func (_bcgf *Header )CleanSegmentData (){if _bcgf .SegmentData !=nil {_bcgf .SegmentData =nil ;
};};type GenericRegion struct{_eag *_ed .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;
GBAtY []int8 ;GBAtOverride []bool ;_edd bool ;Bitmap *_f .Bitmap ;_beed *_be .Decoder ;_ecg *_be .DecoderStats ;_bbb *_eb .Decoder ;};func (_cdeg *TableSegment )HtRS ()int32 {return _cdeg ._aafed };var _ SegmentEncoder =&RegionSegment {};func (_fef *GenericRefinementRegion )setParameters (_fea *_be .DecoderStats ,_ege *_be .Decoder ,_bag int8 ,_cab ,_beb uint32 ,_gff *_f .Bitmap ,_agf ,_aeeb int32 ,_gee bool ,_efd []int8 ,_ged []int8 ){_gf .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _fea !=nil {_fef ._af =_fea ;};if _ege !=nil {_fef ._fg =_ege ;};_fef .TemplateID =_bag ;_fef .RegionInfo .BitmapWidth =_cab ;_fef .RegionInfo .BitmapHeight =_beb ;_fef .ReferenceBitmap =_gff ;_fef .ReferenceDX =_agf ;_fef .ReferenceDY =_aeeb ;_fef .IsTPGROn =_gee ;
_fef .GrAtX =_efd ;_fef .GrAtY =_ged ;_fef .RegionBitmap =nil ;_gf .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_fef );
};func (_ffeb *PatternDictionary )Init (h *Header ,r *_ed .Reader )error {_ffeb ._agce =r ;return _ffeb .parseHeader ();};func _gadgc (_bbfb *_ed .Reader ,_ccg *Header )*TextRegion {_efdc :=&TextRegion {_cbge :_bbfb ,Header :_ccg ,RegionInfo :NewRegionSegment (_bbfb )};
return _efdc ;};func (_egbc *HalftoneRegion )grayScaleDecoding (_gcdad int )([][]int ,error ){var (_cgfa []int8 ;_gbc []int8 ;);if !_egbc .IsMMREncoded {_cgfa =make ([]int8 ,4);_gbc =make ([]int8 ,4);if _egbc .HTemplate <=1{_cgfa [0]=3;}else if _egbc .HTemplate >=2{_cgfa [0]=2;
};_gbc [0]=-1;_cgfa [1]=-3;_gbc [1]=-1;_cgfa [2]=2;_gbc [2]=-2;_cgfa [3]=-2;_gbc [3]=-2;};_edg :=make ([]*_f .Bitmap ,_gcdad );_caab :=NewGenericRegion (_egbc ._cfc );_caab .setParametersMMR (_egbc .IsMMREncoded ,_egbc .DataOffset ,_egbc .DataLength ,_egbc .HGridHeight ,_egbc .HGridWidth ,_egbc .HTemplate ,false ,_egbc .HSkipEnabled ,_cgfa ,_gbc );
_bdfg :=_gcdad -1;var _gdg error ;_edg [_bdfg ],_gdg =_caab .GetRegionBitmap ();if _gdg !=nil {return nil ,_gdg ;};for _bdfg > 0{_bdfg --;_caab .Bitmap =nil ;_edg [_bdfg ],_gdg =_caab .GetRegionBitmap ();if _gdg !=nil {return nil ,_gdg ;};if _gdg =_egbc .combineGrayscalePlanes (_edg ,_bdfg );
_gdg !=nil {return nil ,_gdg ;};};return _egbc .computeGrayScalePlanes (_edg ,_gcdad );};func (_adbf *HalftoneRegion )computeX (_cfga ,_cdf int )int {return _adbf .shiftAndFill (int (_adbf .HGridX )+_cfga *int (_adbf .HRegionY )+_cdf *int (_adbf .HRegionX ));
};func (_bgcfg *PageInformationSegment )CombinationOperator ()_f .CombinationOperator {return _bgcfg ._ebgg ;};func (_aeda *PageInformationSegment )String ()string {_cgec :=&_ec .Builder {};_cgec .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_cgec .WriteString (_a .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_aeda .PageBMHeight ));_cgec .WriteString (_a .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_aeda .PageBMWidth ));
_cgec .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_aeda .ResolutionX ));_cgec .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_aeda .ResolutionY ));
_cgec .WriteString (_a .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_aeda ._ebgg ));_cgec .WriteString (_a .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_aeda ._ccaf ));
_cgec .WriteString (_a .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_aeda .IsLossless ));_cgec .WriteString (_a .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_aeda ._fdfb ));
_cgec .WriteString (_a .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_aeda ._fdd ));_cgec .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_aeda .IsStripe ));
_cgec .WriteString (_a .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_aeda .MaxStripeSize ));return _cgec .String ();};func (_ab *EndOfStripe )LineNumber ()int {return _ab ._gg };type Documenter interface{GetPage (int )(Pager ,error );
GetGlobalSegment (int )(*Header ,error );};func (_fbgd *SymbolDictionary )decodeHeightClassBitmap (_bagd *_f .Bitmap ,_eaff int64 ,_baeg int ,_fbfbd []int )error {for _bebca :=_eaff ;_bebca < int64 (_fbgd ._aefc );_bebca ++{var _ddaa int ;for _gaac :=_eaff ;
_gaac <=_bebca -1;_gaac ++{_ddaa +=_fbfbd [_gaac ];};_efac :=_bg .Rect (_ddaa ,0,_ddaa +_fbfbd [_bebca ],_baeg );_adbb ,_dbcc :=_f .Extract (_efac ,_bagd );if _dbcc !=nil {return _dbcc ;};_fbgd ._cgeac [_bebca ]=_adbb ;_fbgd ._egad =append (_fbgd ._egad ,_adbb );
};return nil ;};func (_dgff *GenericRegion )InitEncode (bm *_f .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _eec ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _dg .Error (_eec ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _dg .Error (_eec ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_dgff .Bitmap =bm ;_dgff .GBTemplate =byte (template );switch _dgff .GBTemplate {case 0:_dgff .GBAtX =[]int8 {3,-3,2,-2};_dgff .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_dgff .GBAtX =[]int8 {3};_dgff .GBAtY =[]int8 {-1};case 2,3:_dgff .GBAtX =[]int8 {2};_dgff .GBAtY =[]int8 {-1};
default:return _dg .Errorf (_eec ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_dgff .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_dgff .IsTPGDon =duplicateLineRemoval ;return nil ;};type OrganizationType uint8 ;func (_fdefb *TextRegion )initSymbols ()error {const _cbgf ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_cgfcb :=range _fdefb .Header .RTSegments {if _cgfcb ==nil {return _dg .Error (_cbgf ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _cgfcb .Type ==0{_gfeb ,_dccf :=_cgfcb .GetSegmentData ();if _dccf !=nil {return _dg .Wrap (_dccf ,_cbgf ,"");};_ddea ,_ffaca :=_gfeb .(*SymbolDictionary );if !_ffaca {return _dg .Error (_cbgf ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ddea ._dge =_fdefb ._baea ;_gdee ,_dccf :=_ddea .GetDictionary ();if _dccf !=nil {return _dg .Wrap (_dccf ,_cbgf ,"");};_fdefb .Symbols =append (_fdefb .Symbols ,_gdee ...);};};_fdefb .NumberOfSymbols =uint32 (len (_fdefb .Symbols ));return nil ;};func (_beef *RegionSegment )parseHeader ()error {const _gaad ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_gf .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_gf .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_gbga ,_abdf :=_beef ._gcc .ReadBits (32);if _abdf !=nil {return _dg .Wrap (_abdf ,_gaad ,"\u0077\u0069\u0064t\u0068");};_beef .BitmapWidth =uint32 (_gbga &_b .MaxUint32 );_gbga ,_abdf =_beef ._gcc .ReadBits (32);if _abdf !=nil {return _dg .Wrap (_abdf ,_gaad ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_beef .BitmapHeight =uint32 (_gbga &_b .MaxUint32 );_gbga ,_abdf =_beef ._gcc .ReadBits (32);if _abdf !=nil {return _dg .Wrap (_abdf ,_gaad ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_beef .XLocation =uint32 (_gbga &_b .MaxUint32 );
_gbga ,_abdf =_beef ._gcc .ReadBits (32);if _abdf !=nil {return _dg .Wrap (_abdf ,_gaad ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_beef .YLocation =uint32 (_gbga &_b .MaxUint32 );if _ ,_abdf =_beef ._gcc .ReadBits (5);_abdf !=nil {return _dg .Wrap (_abdf ,_gaad ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _abdf =_beef .readCombinationOperator ();_abdf !=nil {return _dg .Wrap (_abdf ,_gaad ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};type Regioner interface{GetRegionBitmap ()(*_f .Bitmap ,error );
GetRegionInfo ()*RegionSegment ;};func (_fgc *GenericRefinementRegion )getGrReference ()(*_f .Bitmap ,error ){segments :=_fgc ._eg .RTSegments ;if len (segments )==0{return nil ,_d .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_cb ,_ac :=segments [0].GetSegmentData ();if _ac !=nil {return nil ,_ac ;};_ce ,_ea :=_cb .(Regioner );if !_ea {return nil ,_a .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_cb );
};return _ce .GetRegionBitmap ();};func (_edef *PatternDictionary )setGbAtPixels (){if _edef .HDTemplate ==0{_edef .GBAtX =make ([]int8 ,4);_edef .GBAtY =make ([]int8 ,4);_edef .GBAtX [0]=-int8 (_edef .HdpWidth );_edef .GBAtY [0]=0;_edef .GBAtX [1]=-3;
_edef .GBAtY [1]=-1;_edef .GBAtX [2]=2;_edef .GBAtY [2]=-2;_edef .GBAtX [3]=-2;_edef .GBAtY [3]=-2;}else {_edef .GBAtX =[]int8 {-int8 (_edef .HdpWidth )};_edef .GBAtY =[]int8 {0};};};func (_bfbf *HalftoneRegion )checkInput ()error {if _bfbf .IsMMREncoded {if _bfbf .HTemplate !=0{_gf .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_bfbf .HTemplate );
};if _bfbf .HSkipEnabled {_gf .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_bfbf .HSkipEnabled );
};};return nil ;};func (_fdf *GenericRegion )writeGBAtPixels (_gacf _ed .BinaryWriter )(_cdcf int ,_dgab error ){const _afbg ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _fdf .UseMMR {return 0,nil ;};_gfdg :=1;
if _fdf .GBTemplate ==0{_gfdg =4;}else if _fdf .UseExtTemplates {_gfdg =12;};if len (_fdf .GBAtX )!=_gfdg {return 0,_dg .Errorf (_afbg ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_fdf .GBAtY )!=_gfdg {return 0,_dg .Errorf (_afbg ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _edbfg :=0;_edbfg < _gfdg ;_edbfg ++{if _dgab =_gacf .WriteByte (byte (_fdf .GBAtX [_edbfg ]));_dgab !=nil {return _cdcf ,_dg .Wrap (_dgab ,_afbg ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_cdcf ++;if _dgab =_gacf .WriteByte (byte (_fdf .GBAtY [_edbfg ]));
_dgab !=nil {return _cdcf ,_dg .Wrap (_dgab ,_afbg ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_cdcf ++;};return _cdcf ,nil ;};func (_agcc *TextRegion )symbolIDCodeLengths ()error {var (_cdegd []*_ae .Code ;_bggc uint64 ;_abafb _ae .Tabler ;
_beab error ;);for _edffe :=0;_edffe < 35;_edffe ++{_bggc ,_beab =_agcc ._cbge .ReadBits (4);if _beab !=nil {return _beab ;};_gfafb :=int (_bggc &0xf);if _gfafb > 0{_cdegd =append (_cdegd ,_ae .NewCode (int32 (_gfafb ),0,int32 (_edffe ),false ));};};_abafb ,_beab =_ae .NewFixedSizeTable (_cdegd );
if _beab !=nil {return _beab ;};var (_dbeb int64 ;_cbgb uint32 ;_gbce []*_ae .Code ;_ebfb int64 ;);for _cbgb < _agcc .NumberOfSymbols {_ebfb ,_beab =_abafb .Decode (_agcc ._cbge );if _beab !=nil {return _beab ;};if _ebfb < 32{if _ebfb > 0{_gbce =append (_gbce ,_ae .NewCode (int32 (_ebfb ),0,int32 (_cbgb ),false ));
};_dbeb =_ebfb ;_cbgb ++;}else {var _efae ,_abad int64 ;switch _ebfb {case 32:_bggc ,_beab =_agcc ._cbge .ReadBits (2);if _beab !=nil {return _beab ;};_efae =3+int64 (_bggc );if _cbgb > 0{_abad =_dbeb ;};case 33:_bggc ,_beab =_agcc ._cbge .ReadBits (3);
if _beab !=nil {return _beab ;};_efae =3+int64 (_bggc );case 34:_bggc ,_beab =_agcc ._cbge .ReadBits (7);if _beab !=nil {return _beab ;};_efae =11+int64 (_bggc );};for _cegb :=0;_cegb < int (_efae );_cegb ++{if _abad > 0{_gbce =append (_gbce ,_ae .NewCode (int32 (_abad ),0,int32 (_cbgb ),false ));
};_cbgb ++;};};};_agcc ._cbge .Align ();_agcc ._cbgg ,_beab =_ae .NewFixedSizeTable (_gbce );return _beab ;};func (_baagg *TextRegion )getSymbols ()error {if _baagg .Header .RTSegments !=nil {return _baagg .initSymbols ();};return nil ;};func (_geecg *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_geecg .SdHuffAggInstanceSelection {_bacf ,_dbbb :=_ae .GetStandardTable (1);
if _dbbb !=nil {return 0,_dbbb ;};return _bacf .Decode (_geecg ._eecc );};if _geecg ._gbf ==nil {var (_egfed int ;_ebggc error ;);if _geecg .SdHuffDecodeHeightSelection ==3{_egfed ++;};if _geecg .SdHuffDecodeWidthSelection ==3{_egfed ++;};if _geecg .SdHuffBMSizeSelection ==3{_egfed ++;
};_geecg ._gbf ,_ebggc =_geecg .getUserTable (_egfed );if _ebggc !=nil {return 0,_ebggc ;};};return _geecg ._gbf .Decode (_geecg ._eecc );};func (_dcc *SymbolDictionary )decodeDirectlyThroughGenericRegion (_edbcb ,_bfbe uint32 )error {if _dcc ._gffc ==nil {_dcc ._gffc =NewGenericRegion (_dcc ._eecc );
};_dcc ._gffc .setParametersWithAt (false ,byte (_dcc .SdTemplate ),false ,false ,_dcc .SdATX ,_dcc .SdATY ,_edbcb ,_bfbe ,_dcc ._edfe ,_dcc ._bfdg );return _dcc .addSymbol (_dcc ._gffc );};func (_fbged *TextRegion )blit (_gadg *_f .Bitmap ,_acddf int64 )error {if _fbged .IsTransposed ==0&&(_fbged .ReferenceCorner ==2||_fbged .ReferenceCorner ==3){_fbged ._cgeb +=int64 (_gadg .Width -1);
}else if _fbged .IsTransposed ==1&&(_fbged .ReferenceCorner ==0||_fbged .ReferenceCorner ==2){_fbged ._cgeb +=int64 (_gadg .Height -1);};_bbba :=_fbged ._cgeb ;if _fbged .IsTransposed ==1{_bbba ,_acddf =_acddf ,_bbba ;};switch _fbged .ReferenceCorner {case 0:_acddf -=int64 (_gadg .Height -1);
case 2:_acddf -=int64 (_gadg .Height -1);_bbba -=int64 (_gadg .Width -1);case 3:_bbba -=int64 (_gadg .Width -1);};_cdcc :=_f .Blit (_gadg ,_fbged .RegionBitmap ,int (_bbba ),int (_acddf ),_fbged .CombinationOperator );if _cdcc !=nil {return _cdcc ;};if _fbged .IsTransposed ==0&&(_fbged .ReferenceCorner ==0||_fbged .ReferenceCorner ==1){_fbged ._cgeb +=int64 (_gadg .Width -1);
};if _fbged .IsTransposed ==1&&(_fbged .ReferenceCorner ==1||_fbged .ReferenceCorner ==3){_fbged ._cgeb +=int64 (_gadg .Height -1);};return nil ;};func (_dacb *PageInformationSegment )readDefaultPixelValue ()error {_begbd ,_aefaf :=_dacb ._efcg .ReadBit ();
if _aefaf !=nil {return _aefaf ;};_dacb .DefaultPixelValue =uint8 (_begbd &0xf);return nil ;};func (_afea *Header )parse (_edbb Documenter ,_feg *_ed .Reader ,_ecbe int64 ,_gcb OrganizationType )(_bbdd error ){const _bec ="\u0070\u0061\u0072s\u0065";_gf .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _bbdd !=nil {_gf .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_bbdd );}else {_gf .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_bbdd =_feg .Seek (_ecbe ,_e .SeekStart );if _bbdd !=nil {return _dg .Wrap (_bbdd ,_bec ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _bbdd =_afea .readSegmentNumber (_feg );_bbdd !=nil {return _dg .Wrap (_bbdd ,_bec ,"");
};if _bbdd =_afea .readHeaderFlags ();_bbdd !=nil {return _dg .Wrap (_bbdd ,_bec ,"");};var _cebea uint64 ;_cebea ,_bbdd =_afea .readNumberOfReferredToSegments (_feg );if _bbdd !=nil {return _dg .Wrap (_bbdd ,_bec ,"");};_afea .RTSNumbers ,_bbdd =_afea .readReferredToSegmentNumbers (_feg ,int (_cebea ));
if _bbdd !=nil {return _dg .Wrap (_bbdd ,_bec ,"");};_bbdd =_afea .readSegmentPageAssociation (_edbb ,_feg ,_cebea ,_afea .RTSNumbers ...);if _bbdd !=nil {return _dg .Wrap (_bbdd ,_bec ,"");};if _afea .Type !=TEndOfFile {if _bbdd =_afea .readSegmentDataLength (_feg );
_bbdd !=nil {return _dg .Wrap (_bbdd ,_bec ,"");};};_afea .readDataStartOffset (_feg ,_gcb );_afea .readHeaderLength (_feg ,_ecbe );_gf .Log .Trace ("\u0025\u0073",_afea );return nil ;};func (_acf *Header )readSegmentNumber (_cfbg *_ed .Reader )error {const _fgdc ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_cdce :=make ([]byte ,4);_ ,_ebg :=_cfbg .Read (_cdce );if _ebg !=nil {return _dg .Wrap (_ebg ,_fgdc ,"");};_acf .SegmentNumber =_c .BigEndian .Uint32 (_cdce );return nil ;};func (_bfca *SymbolDictionary )addSymbol (_gcdag Regioner )error {_ebca ,_gdga :=_gcdag .GetRegionBitmap ();
if _gdga !=nil {return _gdga ;};_bfca ._cgeac [_bfca ._aefc ]=_ebca ;_bfca ._egad =append (_bfca ._egad ,_ebca );_gf .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_ebca );
return nil ;};func (_eaag *TextRegion )decodeCurrentT ()(int64 ,error ){if _eaag .SbStrips !=1{if _eaag .IsHuffmanEncoded {_dbde ,_fece :=_eaag ._cbge .ReadBits (byte (_eaag .LogSBStrips ));return int64 (_dbde ),_fece ;};_fcgee ,_gadca :=_eaag ._efbd .DecodeInt (_eaag ._fegf );
if _gadca !=nil {return 0,_gadca ;};return int64 (_fcgee ),nil ;};return 0,nil ;};