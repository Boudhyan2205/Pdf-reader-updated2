//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_e "encoding/binary";_ab "errors";_g "fmt";_aa "github.com/unidoc/unipdf/v3/common";_ec "github.com/unidoc/unipdf/v3/internal/bitwise";_ce "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ga "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_gc "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_gf "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_bg "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_bd "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";_fa "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_c "image";_a "io";_d "math";_b "strings";_fd "time";);func (_bfec *TextRegion )decodeRI ()(int64 ,error ){if !_bfec .UseRefinement {return 0,nil ;};if _bfec .IsHuffmanEncoded {_dedd ,_gdcb :=_bfec ._fbbf .ReadBit ();return int64 (_dedd ),_gdcb ;};_eggf ,_gdb :=_bfec ._cafe .DecodeInt (_bfec ._afaf );return int64 (_eggf ),_gdb ;};func (_gdda *SymbolDictionary )readNumberOfExportedSymbols ()error {_ggeg ,_bgea :=_gdda ._gggb .ReadBits (32);if _bgea !=nil {return _bgea ;};_gdda .NumberOfExportedSymbols =uint32 (_ggeg &_d .MaxUint32 );return nil ;};func (_fbeg *RegionSegment )parseHeader ()error {const _fcce ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_aa .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_aa .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_aaefg ,_bdgb :=_fbeg ._facd .ReadBits (32);if _bdgb !=nil {return _fa .Wrap (_bdgb ,_fcce ,"\u0077\u0069\u0064t\u0068");};_fbeg .BitmapWidth =uint32 (_aaefg &_d .MaxUint32 );_aaefg ,_bdgb =_fbeg ._facd .ReadBits (32);if _bdgb !=nil {return _fa .Wrap (_bdgb ,_fcce ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_fbeg .BitmapHeight =uint32 (_aaefg &_d .MaxUint32 );_aaefg ,_bdgb =_fbeg ._facd .ReadBits (32);if _bdgb !=nil {return _fa .Wrap (_bdgb ,_fcce ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_fbeg .XLocation =uint32 (_aaefg &_d .MaxUint32 );_aaefg ,_bdgb =_fbeg ._facd .ReadBits (32);if _bdgb !=nil {return _fa .Wrap (_bdgb ,_fcce ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_fbeg .YLocation =uint32 (_aaefg &_d .MaxUint32 );if _ ,_bdgb =_fbeg ._facd .ReadBits (5);_bdgb !=nil {return _fa .Wrap (_bdgb ,_fcce ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _bdgb =_fbeg .readCombinationOperator ();_bdgb !=nil {return _fa .Wrap (_bdgb ,_fcce ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};type OrganizationType uint8 ;func (_bbcbb *TextRegion )getUserTable (_aeee int )(_gf .Tabler ,error ){const _dafgf ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _cefc int ;for _ ,_dabc :=range _bbcbb .Header .RTSegments {if _dabc .Type ==53{if _cefc ==_aeee {_fbag ,_aedcg :=_dabc .GetSegmentData ();if _aedcg !=nil {return nil ,_aedcg ;};_cabb ,_bfab :=_fbag .(*TableSegment );if !_bfab {_aa .Log .Debug (_g .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_dabc .SegmentNumber ));return nil ,_fa .Error (_dafgf ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};return _gf .NewEncodedTable (_cabb );};_cefc ++;};};return nil ,nil ;};func (_efdg *SymbolDictionary )getSbSymCodeLen ()int8 {_cgced :=int8 (_d .Ceil (_d .Log (float64 (_efdg ._edec +_efdg .NumberOfNewSymbols ))/_d .Log (2)));if _efdg .IsHuffmanEncoded &&_cgced < 1{return 1;};return _cgced ;};func (_dffd *PageInformationSegment )readWidthAndHeight ()error {_fea ,_gdgd :=_dffd ._fgbf .ReadBits (32);if _gdgd !=nil {return _gdgd ;};_dffd .PageBMWidth =int (_fea &_d .MaxInt32 );_fea ,_gdgd =_dffd ._fgbf .ReadBits (32);if _gdgd !=nil {return _gdgd ;};_dffd .PageBMHeight =int (_fea &_d .MaxInt32 );return nil ;};func (_gebgd *Header )readHeaderLength (_cggc _ec .StreamReader ,_efba int64 ){_gebgd .HeaderLength =_cggc .StreamPosition ()-_efba ;};func (_fcbg *PageInformationSegment )Init (h *Header ,r _ec .StreamReader )(_bee error ){_fcbg ._fgbf =r ;if _bee =_fcbg .parseHeader ();_bee !=nil {return _fa .Wrap (_bee ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_aagd *TextRegion )initSymbols ()error {const _fdgd ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_gdeb :=range _aagd .Header .RTSegments {if _gdeb ==nil {return _fa .Error (_fdgd ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");};if _gdeb .Type ==0{_begc ,_eagf :=_gdeb .GetSegmentData ();if _eagf !=nil {return _fa .Wrap (_eagf ,_fdgd ,"");};_cgfa ,_egef :=_begc .(*SymbolDictionary );if !_egef {return _fa .Error (_fdgd ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cgfa ._dgfcg =_aagd ._cecga ;_eabae ,_eagf :=_cgfa .GetDictionary ();if _eagf !=nil {return _fa .Wrap (_eagf ,_fdgd ,"");};_aagd .Symbols =append (_aagd .Symbols ,_eabae ...);};};_aagd .NumberOfSymbols =uint32 (len (_aagd .Symbols ));return nil ;};func (_ccgg *SymbolDictionary )setInSyms ()error {if _ccgg .Header .RTSegments !=nil {return _ccgg .retrieveImportSymbols ();};_ccgg ._dbbbg =make ([]*_ga .Bitmap ,0);return nil ;};func (_ced *RegionSegment )readCombinationOperator ()error {_adedf ,_fbc :=_ced ._facd .ReadBits (3);if _fbc !=nil {return _fbc ;};_ced .CombinaionOperator =_ga .CombinationOperator (_adedf &0xF);return nil ;};func (_eda *HalftoneRegion )computeX (_adaec ,_bgbc int )int {return _eda .shiftAndFill (int (_eda .HGridX )+_adaec *int (_eda .HRegionY )+_bgbc *int (_eda .HRegionX ));};func (_bab *GenericRefinementRegion )overrideAtTemplate0 (_acbg ,_cbc ,_ccbd ,_efee ,_efc int )int {if _bab ._bea [0]{_acbg &=0xfff7;if _bab .GrAtY [0]==0&&int (_bab .GrAtX [0])>=-_efc {_acbg |=(_efee >>uint (7-(_efc +int (_bab .GrAtX [0])))&0x1)<<3;}else {_acbg |=_bab .getPixel (_bab .RegionBitmap ,_cbc +int (_bab .GrAtX [0]),_ccbd +int (_bab .GrAtY [0]))<<3;};};if _bab ._bea [1]{_acbg &=0xefff;if _bab .GrAtY [1]==0&&int (_bab .GrAtX [1])>=-_efc {_acbg |=(_efee >>uint (7-(_efc +int (_bab .GrAtX [1])))&0x1)<<12;}else {_acbg |=_bab .getPixel (_bab .ReferenceBitmap ,_cbc +int (_bab .GrAtX [1]),_ccbd +int (_bab .GrAtY [1]));};};return _acbg ;};func (_dbc *Header )writeReferredToCount (_dcfe _ec .BinaryWriter )(_cdc int ,_cded error ){const _acga ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_dbc .RTSNumbers =make ([]int ,len (_dbc .RTSegments ));for _accg ,_eaagc :=range _dbc .RTSegments {_dbc .RTSNumbers [_accg ]=int (_eaagc .SegmentNumber );};if len (_dbc .RTSNumbers )<=4{var _gfeaf byte ;if len (_dbc .RetainBits )>=1{_gfeaf =byte (_dbc .RetainBits [0]);};_gfeaf |=byte (len (_dbc .RTSNumbers ))<<5;if _cded =_dcfe .WriteByte (_gfeaf );_cded !=nil {return 0,_fa .Wrap (_cded ,_acga ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_ceee :=uint32 (len (_dbc .RTSNumbers ));_dbgc :=make ([]byte ,4+_ce .Ceil (len (_dbc .RTSNumbers )+1,8));_ceee |=0x7<<29;_e .BigEndian .PutUint32 (_dbgc ,_ceee );copy (_dbgc [1:],_dbc .RetainBits );_cdc ,_cded =_dcfe .Write (_dbgc );if _cded !=nil {return 0,_fa .Wrap (_cded ,_acga ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _cdc ,nil ;};func (_fcfb *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _fcfb .IsHuffmanEncoded {switch _fcfb .SdHuffDecodeWidthSelection {case 0:_aggc ,_cbbf :=_gf .GetStandardTable (2);if _cbbf !=nil {return 0,_cbbf ;};return _aggc .Decode (_fcfb ._gggb );case 1:_bfbf ,_baee :=_gf .GetStandardTable (3);if _baee !=nil {return 0,_baee ;};return _bfbf .Decode (_fcfb ._gggb );case 3:if _fcfb ._fedge ==nil {var _ccfe int ;if _fcfb .SdHuffDecodeHeightSelection ==3{_ccfe ++;};_afdcg ,_cefb :=_fcfb .getUserTable (_ccfe );if _cefb !=nil {return 0,_cefb ;};_fcfb ._fedge =_afdcg ;};return _fcfb ._fedge .Decode (_fcfb ._gggb );};}else {_dbaa ,_gfead :=_fcfb ._gdef .DecodeInt (_fcfb ._fcg );if _gfead !=nil {return 0,_gfead ;};if _dbaa ==_d .MaxInt32 {return int64 (_d .MaxInt64 ),nil ;};return int64 (_dbaa ),nil ;};return 0,nil ;};func (_cgc *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _cgc .RegionSegment };func (_gdgc *TextRegion )encodeSymbols (_gfbd _ec .BinaryWriter )(_eegac int ,_fegdb error ){const _edea ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_bfbe :=make ([]byte ,4);_e .BigEndian .PutUint32 (_bfbe ,_gdgc .NumberOfSymbols );if _eegac ,_fegdb =_gfbd .Write (_bfbe );_fegdb !=nil {return _eegac ,_fa .Wrap (_fegdb ,_edea ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_feeb ,_fegdb :=_ga .NewClassedPoints (_gdgc ._deggg ,_ce .IntSlice (_gdgc ._dfce ));if _fegdb !=nil {return 0,_fa .Wrap (_fegdb ,_edea ,"");};var _dfac ,_gaa int ;_geba :=_bd .New ();_geba .Init ();if _fegdb =_geba .EncodeInteger (_bd .IADT ,0);_fegdb !=nil {return _eegac ,_fa .Wrap (_fegdb ,_edea ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");};_aadf ,_fegdb :=_feeb .GroupByY ();if _fegdb !=nil {return 0,_fa .Wrap (_fegdb ,_edea ,"");};for _ ,_fddgg :=range _aadf {_eefb :=int (_fddgg .YAtIndex (0));_dcbbc :=_eefb -_dfac ;if _fegdb =_geba .EncodeInteger (_bd .IADT ,_dcbbc );_fegdb !=nil {return _eegac ,_fa .Wrap (_fegdb ,_edea ,"");};var _cfbee int ;for _bbeb ,_beba :=range _fddgg .IntSlice {switch _bbeb {case 0:_fggcf :=int (_fddgg .XAtIndex (_bbeb ))-_gaa ;if _fegdb =_geba .EncodeInteger (_bd .IAFS ,_fggcf );_fegdb !=nil {return _eegac ,_fa .Wrap (_fegdb ,_edea ,"");};_gaa +=_fggcf ;_cfbee =_gaa ;default:_eaaef :=int (_fddgg .XAtIndex (_bbeb ))-_cfbee ;if _fegdb =_geba .EncodeInteger (_bd .IADS ,_eaaef );_fegdb !=nil {return _eegac ,_fa .Wrap (_fegdb ,_edea ,"");};_cfbee +=_eaaef ;};_fdea ,_dbgcb :=_gdgc ._acfg .Get (_beba );if _dbgcb !=nil {return _eegac ,_fa .Wrap (_dbgcb ,_edea ,"");};_afag ,_feacb :=_gdgc ._ggae [_fdea ];if !_feacb {_afag ,_feacb =_gdgc ._feff [_fdea ];if !_feacb {return _eegac ,_fa .Errorf (_edea ,"\u0053\u0079\u006d\u006f\u0062\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_fdea );};};if _dbgcb =_geba .EncodeIAID (_gdgc ._eecc ,_afag );_dbgcb !=nil {return _eegac ,_fa .Wrap (_dbgcb ,_edea ,"");};};if _fegdb =_geba .EncodeOOB (_bd .IADS );_fegdb !=nil {return _eegac ,_fa .Wrap (_fegdb ,_edea ,"");};};_geba .Final ();_befe ,_fegdb :=_geba .WriteTo (_gfbd );if _fegdb !=nil {return _eegac ,_fa .Wrap (_fegdb ,_edea ,"");};_eegac +=int (_befe );return _eegac ,nil ;};type EndOfStripe struct{_dd _ec .StreamReader ;_de int ;};func (_bf *EndOfStripe )parseHeader (_eaa *Header ,_be _ec .StreamReader )error {_bb ,_dc :=_bf ._dd .ReadBits (32);if _dc !=nil {return _dc ;};_bf ._de =int (_bb &_d .MaxInt32 );return nil ;};func (_fge *template1 )setIndex (_adf *_gc .DecoderStats ){_adf .SetIndex (0x080)};func (_ebea *TextRegion )Encode (w _ec .BinaryWriter )(_dcbb int ,_fdcb error ){const _cdgbb ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _dcbb ,_fdcb =_ebea .RegionInfo .Encode (w );_fdcb !=nil {return _dcbb ,_fa .Wrap (_fdcb ,_cdgbb ,"");};var _gcdc int ;if _gcdc ,_fdcb =_ebea .encodeFlags (w );_fdcb !=nil {return _dcbb ,_fa .Wrap (_fdcb ,_cdgbb ,"");};_dcbb +=_gcdc ;if _gcdc ,_fdcb =_ebea .encodeSymbols (w );_fdcb !=nil {return _dcbb ,_fa .Wrap (_fdcb ,_cdgbb ,"");};_dcbb +=_gcdc ;return _dcbb ,nil ;};func (_adfg *GenericRegion )Encode (w _ec .BinaryWriter )(_dgcb int ,_cced error ){const _dbag ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _adfg .Bitmap ==nil {return 0,_fa .Error (_dbag ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_bafg ,_cced :=_adfg .RegionSegment .Encode (w );if _cced !=nil {return 0,_fa .Wrap (_cced ,_dbag ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_dgcb +=_bafg ;if _cced =w .SkipBits (4);_cced !=nil {return _dgcb ,_fa .Wrap (_cced ,_dbag ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _bbd int ;if _adfg .IsTPGDon {_bbd =1;};if _cced =w .WriteBit (_bbd );_cced !=nil {return _dgcb ,_fa .Wrap (_cced ,_dbag ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_bbd =0;if _cced =w .WriteBit (int (_adfg .GBTemplate >>1)&0x01);_cced !=nil {return _dgcb ,_fa .Wrap (_cced ,_dbag ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");};if _cced =w .WriteBit (int (_adfg .GBTemplate )&0x01);_cced !=nil {return _dgcb ,_fa .Wrap (_cced ,_dbag ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _adfg .UseMMR {_bbd =1;};if _cced =w .WriteBit (_bbd );_cced !=nil {return _dgcb ,_fa .Wrap (_cced ,_dbag ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_dgcb ++;if _bafg ,_cced =_adfg .writeGBAtPixels (w );_cced !=nil {return _dgcb ,_fa .Wrap (_cced ,_dbag ,"");};_dgcb +=_bafg ;_dfe :=_bd .New ();if _cced =_dfe .EncodeBitmap (_adfg .Bitmap ,_adfg .IsTPGDon );_cced !=nil {return _dgcb ,_fa .Wrap (_cced ,_dbag ,"");};_dfe .Final ();var _caeg int64 ;if _caeg ,_cced =_dfe .WriteTo (w );_cced !=nil {return _dgcb ,_fa .Wrap (_cced ,_dbag ,"");};_dgcb +=int (_caeg );return _dgcb ,nil ;};func (_gbfe *GenericRegion )InitEncode (bm *_ga .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _cfb ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";if bm ==nil {return _fa .Error (_cfb ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _fa .Error (_cfb ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");};_gbfe .Bitmap =bm ;_gbfe .GBTemplate =byte (template );switch _gbfe .GBTemplate {case 0:_gbfe .GBAtX =[]int8 {3,-3,2,-2};_gbfe .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_gbfe .GBAtX =[]int8 {3};_gbfe .GBAtY =[]int8 {-1};case 2,3:_gbfe .GBAtX =[]int8 {2};_gbfe .GBAtY =[]int8 {-1};default:return _fa .Errorf (_cfb ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );};_gbfe .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_gbfe .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_caaed *Header )pageSize ()uint {if _caaed .PageAssociation <=255{return 1;};return 4;};const (ORandom OrganizationType =iota ;OSequential ;);func (_cacc *Header )referenceSize ()uint {switch {case _cacc .SegmentNumber <=255:return 1;case _cacc .SegmentNumber <=65535:return 2;default:return 4;};};func (_fggb *Header )readNumberOfReferredToSegments (_befc _ec .StreamReader )(uint64 ,error ){const _efef ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";_babc ,_dccc :=_befc .ReadBits (3);if _dccc !=nil {return 0,_fa .Wrap (_dccc ,_efef ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_babc &=0xf;var _dfcd []byte ;if _babc <=4{_dfcd =make ([]byte ,5);for _bbbe :=0;_bbbe <=4;_bbbe ++{_eede ,_caga :=_befc .ReadBit ();if _caga !=nil {return 0,_fa .Wrap (_caga ,_efef ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dfcd [_bbbe ]=byte (_eede );};}else {_babc ,_dccc =_befc .ReadBits (29);if _dccc !=nil {return 0,_dccc ;};_babc &=_d .MaxInt32 ;_ddcd :=(_babc +8)>>3;_ddcd <<=3;_dfcd =make ([]byte ,_ddcd );var _edeeg uint64 ;for _edeeg =0;_edeeg < _ddcd ;_edeeg ++{_ccad ,_ccg :=_befc .ReadBit ();if _ccg !=nil {return 0,_fa .Wrap (_ccg ,_efef ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dfcd [_edeeg ]=byte (_ccad );};};return _babc ,nil ;};var _ templater =&template0 {};func (_cef *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _cef ._bcec };type Type int ;func (_ggd *GenericRefinementRegion )GetRegionBitmap ()(*_ga .Bitmap ,error ){var _gb error ;_aa .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _gb !=nil {_aa .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gb );}else {_aa .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _ggd .RegionBitmap !=nil {return _ggd .RegionBitmap ,nil ;};_fda :=0;if _ggd .ReferenceBitmap ==nil {_ggd .ReferenceBitmap ,_gb =_ggd .getGrReference ();if _gb !=nil {return nil ,_gb ;};};if _ggd ._gcg ==nil {_ggd ._gcg ,_gb =_gc .New (_ggd ._deb );if _gb !=nil {return nil ,_gb ;};};if _ggd ._gg ==nil {_ggd ._gg =_gc .NewStats (8192,1);};_ggd .RegionBitmap =_ga .New (int (_ggd .RegionInfo .BitmapWidth ),int (_ggd .RegionInfo .BitmapHeight ));if _ggd .TemplateID ==0{if _gb =_ggd .updateOverride ();_gb !=nil {return nil ,_gb ;};};_dg :=(_ggd .RegionBitmap .Width +7)&-8;var _eg int ;if _ggd .IsTPGROn {_eg =int (-_ggd .ReferenceDY )*_ggd .ReferenceBitmap .RowStride ;};_cca :=_eg +1;for _da :=0;_da < _ggd .RegionBitmap .Height ;_da ++{if _ggd .IsTPGROn {_ccb ,_ceb :=_ggd .decodeSLTP ();if _ceb !=nil {return nil ,_ceb ;};_fda ^=_ccb ;};if _fda ==0{_gb =_ggd .decodeOptimized (_da ,_ggd .RegionBitmap .Width ,_ggd .RegionBitmap .RowStride ,_ggd .ReferenceBitmap .RowStride ,_dg ,_eg ,_cca );if _gb !=nil {return nil ,_gb ;};}else {_gb =_ggd .decodeTypicalPredictedLine (_da ,_ggd .RegionBitmap .Width ,_ggd .RegionBitmap .RowStride ,_ggd .ReferenceBitmap .RowStride ,_dg ,_eg );if _gb !=nil {return nil ,_gb ;};};};return _ggd .RegionBitmap ,nil ;};func (_deag *PageInformationSegment )String ()string {_fccf :=&_b .Builder {};_fccf .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_fccf .WriteString (_g .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_deag .PageBMHeight ));_fccf .WriteString (_g .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_deag .PageBMWidth ));_fccf .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_deag .ResolutionX ));_fccf .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_deag .ResolutionY ));_fccf .WriteString (_g .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_deag ._faebd ));_fccf .WriteString (_g .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_deag ._bcec ));_fccf .WriteString (_g .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_deag .IsLossless ));_fccf .WriteString (_g .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_deag ._efbab ));_fccf .WriteString (_g .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_deag ._bbda ));_fccf .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_deag .IsStripe ));_fccf .WriteString (_g .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_deag .MaxStripeSize ));return _fccf .String ();};func (_fgea *Header )writeSegmentDataLength (_gebf _ec .BinaryWriter )(_fbdd int ,_gdfaa error ){_gbbcg :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gbbcg ,uint32 (_fgea .SegmentDataLength ));if _fbdd ,_gdfaa =_gebf .Write (_gbbcg );_gdfaa !=nil {return 0,_fa .Wrap (_gdfaa ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _fbdd ,nil ;};func (_gcdf *HalftoneRegion )grayScaleDecoding (_def int )([][]int ,error ){var (_gdga []int8 ;_gcga []int8 ;);if !_gcdf .IsMMREncoded {_gdga =make ([]int8 ,4);_gcga =make ([]int8 ,4);if _gcdf .HTemplate <=1{_gdga [0]=3;}else if _gcdf .HTemplate >=2{_gdga [0]=2;};_gcga [0]=-1;_gdga [1]=-3;_gcga [1]=-1;_gdga [2]=2;_gcga [2]=-2;_gdga [3]=-2;_gcga [3]=-2;};_bfdd :=make ([]*_ga .Bitmap ,_def );_dega :=NewGenericRegion (_gcdf ._deggd );_dega .setParametersMMR (_gcdf .IsMMREncoded ,_gcdf .DataOffset ,_gcdf .DataLength ,_gcdf .HGridHeight ,_gcdf .HGridWidth ,_gcdf .HTemplate ,false ,_gcdf .HSkipEnabled ,_gdga ,_gcga );_dcee :=_def -1;var _daecf error ;_bfdd [_dcee ],_daecf =_dega .GetRegionBitmap ();if _daecf !=nil {return nil ,_daecf ;};for _dcee > 0{_dcee --;_dega .Bitmap =nil ;_bfdd [_dcee ],_daecf =_dega .GetRegionBitmap ();if _daecf !=nil {return nil ,_daecf ;};if _daecf =_gcdf .combineGrayscalePlanes (_bfdd ,_dcee );_daecf !=nil {return nil ,_daecf ;};};return _gcdf .computeGrayScalePlanes (_bfdd ,_def );};func (_ggac *Header )String ()string {_fcdf :=&_b .Builder {};_fcdf .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_fcdf .WriteString (_g .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_ggac .SegmentNumber ));_fcdf .WriteString (_g .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_ggac .Type ));_fcdf .WriteString (_g .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_ggac .RetainFlag ));_fcdf .WriteString (_g .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ggac .PageAssociation ));_fcdf .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_ggac .PageAssociationFieldSize ));_fcdf .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_fafd :=range _ggac .RTSNumbers {_fcdf .WriteString (_g .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_fafd ));};_fcdf .WriteString (_g .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_ggac .HeaderLength ));_fcdf .WriteString (_g .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_ggac .SegmentDataLength ));_fcdf .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_ggac .SegmentDataStartOffset ));return _fcdf .String ();};func (_gfc *GenericRefinementRegion )getPixel (_dad *_ga .Bitmap ,_eed ,_acbb int )int {if _eed < 0||_eed >=_dad .Width {return 0;};if _acbb < 0||_acbb >=_dad .Height {return 0;};if _dad .GetPixel (_eed ,_acbb ){return 1;};return 0;};func (_dfdge *TextRegion )decodeCurrentT ()(int64 ,error ){if _dfdge .SbStrips !=1{if _dfdge .IsHuffmanEncoded {_abba ,_edge :=_dfdge ._fbbf .ReadBits (byte (_dfdge .LogSBStrips ));return int64 (_abba ),_edge ;};_ggadf ,_dcgg :=_dfdge ._cafe .DecodeInt (_dfdge ._abgb );if _dcgg !=nil {return 0,_dcgg ;};return int64 (_ggadf ),nil ;};return 0,nil ;};func (_fadb *GenericRegion )writeGBAtPixels (_cgf _ec .BinaryWriter )(_efff int ,_aedc error ){const _dce ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _fadb .UseMMR {return 0,nil ;};_bbed :=1;if _fadb .GBTemplate ==0{_bbed =4;}else if _fadb .UseExtTemplates {_bbed =12;};if len (_fadb .GBAtX )!=_bbed {return 0,_fa .Errorf (_dce ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};if len (_fadb .GBAtY )!=_bbed {return 0,_fa .Errorf (_dce ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};for _dag :=0;_dag < _bbed ;_dag ++{if _aedc =_cgf .WriteByte (byte (_fadb .GBAtX [_dag ]));_aedc !=nil {return _efff ,_fa .Wrap (_aedc ,_dce ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_efff ++;if _aedc =_cgf .WriteByte (byte (_fadb .GBAtY [_dag ]));_aedc !=nil {return _efff ,_fa .Wrap (_aedc ,_dce ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_efff ++;};return _efff ,nil ;};func (_cdac *GenericRegion )readGBAtPixels (_edf int )error {const _cbb ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_cdac .GBAtX =make ([]int8 ,_edf );_cdac .GBAtY =make ([]int8 ,_edf );for _cegb :=0;_cegb < _edf ;_cegb ++{_ecee ,_dab :=_cdac ._fgc .ReadByte ();if _dab !=nil {return _fa .Wrapf (_dab ,_cbb ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cegb );};_cdac .GBAtX [_cegb ]=int8 (_ecee );_ecee ,_dab =_cdac ._fgc .ReadByte ();if _dab !=nil {return _fa .Wrapf (_dab ,_cbb ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cegb );};_cdac .GBAtY [_cegb ]=int8 (_ecee );};return nil ;};func (_gdag *SymbolDictionary )encodeRefinementATFlags (_ffaf _ec .BinaryWriter )(_ecbc int ,_gbfb error ){const _abfb ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if !_gdag .UseRefinementAggregation ||_gdag .SdrTemplate !=0{return 0,nil ;};for _ccbag :=0;_ccbag < 2;_ccbag ++{if _gbfb =_ffaf .WriteByte (byte (_gdag .SdrATX [_ccbag ]));_gbfb !=nil {return _ecbc ,_fa .Wrapf (_gbfb ,_abfb ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_ccbag );};_ecbc ++;if _gbfb =_ffaf .WriteByte (byte (_gdag .SdrATY [_ccbag ]));_gbfb !=nil {return _ecbc ,_fa .Wrapf (_gbfb ,_abfb ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_ccbag );};_ecbc ++;};return _ecbc ,nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_ga .Bitmap ,error );};func (_befce *PatternDictionary )readIsMMREncoded ()error {_gdca ,_bcbcb :=_befce ._ggfb .ReadBit ();if _bcbcb !=nil {return _bcbcb ;};if _gdca !=0{_befce .IsMMREncoded =true ;};return nil ;};func (_cdb *template0 )form (_beac ,_gfe ,_cae ,_dca ,_bac int16 )int16 {return (_beac <<10)|(_gfe <<7)|(_cae <<4)|(_dca <<1)|_bac ;};func (_cddg *GenericRefinementRegion )String ()string {_beae :=&_b .Builder {};_beae .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_beae .WriteString (_cddg .RegionInfo .String ()+"\u000a");_beae .WriteString (_g .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cddg .IsTPGROn ));_beae .WriteString (_g .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_cddg .TemplateID ));_beae .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_cddg .GrAtX ));_beae .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_cddg .GrAtY ));_beae .WriteString (_g .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_cddg .ReferenceDX ));_beae .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_cddg .ReferenceDY ));return _beae .String ();};func (_geg *GenericRegion )Size ()int {return _geg .RegionSegment .Size ()+1+2*len (_geg .GBAtX )};type Segmenter interface{Init (_aeded *Header ,_fgec _ec .StreamReader )error ;};func (_gcb *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_gae ,_eabc ,_efg ,_adee ,_cdd ,_aac ,_ded ,_cb ,_abc int )(_faba error ){var (_dga ,_eee int ;_caa ,_bdc int ;_abdf ,_bba int ;_fga byte ;);if _gae > 0{_fga ,_faba =_gcb .RegionBitmap .GetByte (_ded -_efg );if _faba !=nil {return ;};_caa =int (_fga );};if _cb > 0&&_cb <=_gcb .ReferenceBitmap .Height {_fga ,_faba =_gcb .ReferenceBitmap .GetByte (_abc -_adee +_aac );if _faba !=nil {return ;};_bdc =int (_fga )<<2;};if _cb >=0&&_cb < _gcb .ReferenceBitmap .Height {_fga ,_faba =_gcb .ReferenceBitmap .GetByte (_abc +_aac );if _faba !=nil {return ;};_abdf =int (_fga );};if _cb > -2&&_cb < _gcb .ReferenceBitmap .Height -1{_fga ,_faba =_gcb .ReferenceBitmap .GetByte (_abc +_adee +_aac );if _faba !=nil {return ;};_bba =int (_fga );};_dga =((_caa >>5)&0x6)|((_bba >>2)&0x30)|(_abdf &0xc0)|(_bdc &0x200);_eee =((_bba >>2)&0x70)|(_abdf &0xc0)|(_bdc &0x700);var _ggc int ;for _cbf :=0;_cbf < _cdd ;_cbf =_ggc {var (_ge int ;_gdc int ;);_ggc =_cbf +8;if _ge =_eabc -_cbf ;_ge > 8{_ge =8;};_efd :=_ggc < _eabc ;_cgb :=_ggc < _gcb .ReferenceBitmap .Width ;_agf :=_aac +1;if _gae > 0{_fga =0;if _efd {_fga ,_faba =_gcb .RegionBitmap .GetByte (_ded -_efg +1);if _faba !=nil {return ;};};_caa =(_caa <<8)|int (_fga );};if _cb > 0&&_cb <=_gcb .ReferenceBitmap .Height {var _faf int ;if _cgb {_fga ,_faba =_gcb .ReferenceBitmap .GetByte (_abc -_adee +_agf );if _faba !=nil {return ;};_faf =int (_fga )<<2;};_bdc =(_bdc <<8)|_faf ;};if _cb >=0&&_cb < _gcb .ReferenceBitmap .Height {_fga =0;if _cgb {_fga ,_faba =_gcb .ReferenceBitmap .GetByte (_abc +_agf );if _faba !=nil {return ;};};_abdf =(_abdf <<8)|int (_fga );};if _cb > -2&&_cb < (_gcb .ReferenceBitmap .Height -1){_fga =0;if _cgb {_fga ,_faba =_gcb .ReferenceBitmap .GetByte (_abc +_adee +_agf );if _faba !=nil {return ;};};_bba =(_bba <<8)|int (_fga );};for _agb :=0;_agb < _ge ;_agb ++{var _gafg int ;_dba :=(_eee >>4)&0x1ff;switch _dba {case 0x1ff:_gafg =1;case 0x00:_gafg =0;default:_gcb ._gg .SetIndex (int32 (_dga ));_gafg ,_faba =_gcb ._gcg .DecodeBit (_gcb ._gg );if _faba !=nil {return ;};};_bbc :=uint (7-_agb );_gdc |=int (_gafg <<_bbc );_dga =((_dga &0x0d6)<<1)|_gafg |(_caa >>_bbc +5)&0x002|((_bba >>_bbc +2)&0x010)|((_abdf >>_bbc )&0x040)|((_bdc >>_bbc )&0x200);_eee =((_eee &0xdb)<<1)|((_bba >>_bbc +2)&0x010)|((_abdf >>_bbc )&0x080)|((_bdc >>_bbc )&0x400);};_faba =_gcb .RegionBitmap .SetByte (_ded ,byte (_gdc ));if _faba !=nil {return ;};_ded ++;_abc ++;};return nil ;};func (_bbf *Header )writeSegmentNumber (_efaa _ec .BinaryWriter )(_gade int ,_gabe error ){_ebab :=make ([]byte ,4);_e .BigEndian .PutUint32 (_ebab ,_bbf .SegmentNumber );if _gade ,_gabe =_efaa .Write (_ebab );_gabe !=nil {return 0,_fa .Wrap (_gabe ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _gade ,nil ;};type PageInformationSegment struct{_fgbf _ec .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_bcec bool ;_faebd _ga .CombinationOperator ;_efbab bool ;_cfeag uint8 ;_bbda bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_ddbb *Header )readReferredToSegmentNumbers (_bfgb _ec .StreamReader ,_dbbbd int )([]int ,error ){const _deae ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";_acf :=make ([]int ,_dbbbd );if _dbbbd > 0{_ddbb .RTSegments =make ([]*Header ,_dbbbd );var (_gaffe uint64 ;_gdee error ;);for _dgae :=0;_dgae < _dbbbd ;_dgae ++{_gaffe ,_gdee =_bfgb .ReadBits (byte (_ddbb .referenceSize ())<<3);if _gdee !=nil {return nil ,_fa .Wrapf (_gdee ,_deae ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_dgae );};_acf [_dgae ]=int (_gaffe &_d .MaxInt32 );};};return _acf ,nil ;};func (_feed *Header )CleanSegmentData (){if _feed .SegmentData !=nil {_feed .SegmentData =nil ;};};func NewHeader (d Documenter ,r _ec .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_adba :=&Header {Reader :r };if _bcbc :=_adba .parse (d ,r ,offset ,organizationType );_bcbc !=nil {return nil ,_fa .Wrap (_bcbc ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _adba ,nil ;};func (_fce *GenericRegion )overrideAtTemplate1 (_cabd ,_cecg ,_edeea ,_dbae ,_dcge int )int {_cabd &=0x1FF7;if _fce .GBAtY [0]==0&&_fce .GBAtX [0]>=-int8 (_dcge ){_cabd |=(_dbae >>uint (7-(int8 (_dcge )+_fce .GBAtX [0]))&0x1)<<3;}else {_cabd |=int (_fce .getPixel (_cecg +int (_fce .GBAtX [0]),_edeea +int (_fce .GBAtY [0])))<<3;};return _cabd ;};func (_gbbd *GenericRegion )GetRegionInfo ()*RegionSegment {return _gbbd .RegionSegment };func (_edc *HalftoneRegion )checkInput ()error {if _edc .IsMMREncoded {if _edc .HTemplate !=0{_aa .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_edc .HTemplate );};if _edc .HSkipEnabled {_aa .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_edc .HSkipEnabled );};};return nil ;};func (_cace *SymbolDictionary )encodeFlags (_aadc _ec .BinaryWriter )(_caebd int ,_dcgad error ){const _bfe ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dcgad =_aadc .SkipBits (3);_dcgad !=nil {return 0,_fa .Wrap (_dcgad ,_bfe ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _feef int ;if _cace .SdrTemplate > 0{_feef =1;};if _dcgad =_aadc .WriteBit (_feef );_dcgad !=nil {return _caebd ,_fa .Wrap (_dcgad ,_bfe ,"s\u0064\u0072\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_feef =0;if _cace .SdTemplate > 1{_feef =1;};if _dcgad =_aadc .WriteBit (_feef );_dcgad !=nil {return _caebd ,_fa .Wrap (_dcgad ,_bfe ,"\u0073\u0064\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_feef =0;if _cace .SdTemplate ==1||_cace .SdTemplate ==3{_feef =1;};if _dcgad =_aadc .WriteBit (_feef );_dcgad !=nil {return _caebd ,_fa .Wrap (_dcgad ,_bfe ,"\u0073\u0064\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_feef =0;if _cace ._deee {_feef =1;};if _dcgad =_aadc .WriteBit (_feef );_dcgad !=nil {return _caebd ,_fa .Wrap (_dcgad ,_bfe ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");};_feef =0;if _cace ._aeab {_feef =1;};if _dcgad =_aadc .WriteBit (_feef );_dcgad !=nil {return _caebd ,_fa .Wrap (_dcgad ,_bfe ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_feef =0;if _cace .SdHuffAggInstanceSelection {_feef =1;};if _dcgad =_aadc .WriteBit (_feef );_dcgad !=nil {return _caebd ,_fa .Wrap (_dcgad ,_bfe ,"\u0073\u0064\u0068\u0075\u0066\u0066\u0061\u0067\u0067\u0069\u006e\u0073\u0074");};_feef =int (_cace .SdHuffBMSizeSelection );if _dcgad =_aadc .WriteBit (_feef );_dcgad !=nil {return _caebd ,_fa .Wrap (_dcgad ,_bfe ,"\u0073\u0064\u0068u\u0066\u0066\u0062\u006d\u0073\u0069\u007a\u0065");};_feef =0;if _cace .SdHuffDecodeWidthSelection > 1{_feef =1;};if _dcgad =_aadc .WriteBit (_feef );_dcgad !=nil {return _caebd ,_fa .Wrap (_dcgad ,_bfe ,"s\u0064\u0068\u0075\u0066\u0066\u0077\u0069\u0064\u0074\u0068");};_feef =0;switch _cace .SdHuffDecodeWidthSelection {case 1,3:_feef =1;};if _dcgad =_aadc .WriteBit (_feef );_dcgad !=nil {return _caebd ,_fa .Wrap (_dcgad ,_bfe ,"s\u0064\u0068\u0075\u0066\u0066\u0077\u0069\u0064\u0074\u0068");};_feef =0;if _cace .SdHuffDecodeHeightSelection > 1{_feef =1;};if _dcgad =_aadc .WriteBit (_feef );_dcgad !=nil {return _caebd ,_fa .Wrap (_dcgad ,_bfe ,"\u0073\u0064\u0068u\u0066\u0066\u0068\u0065\u0069\u0067\u0068\u0074");};_feef =0;switch _cace .SdHuffDecodeHeightSelection {case 1,3:_feef =1;};if _dcgad =_aadc .WriteBit (_feef );_dcgad !=nil {return _caebd ,_fa .Wrap (_dcgad ,_bfe ,"\u0073\u0064\u0068u\u0066\u0066\u0068\u0065\u0069\u0067\u0068\u0074");};_feef =0;if _cace .UseRefinementAggregation {_feef =1;};if _dcgad =_aadc .WriteBit (_feef );_dcgad !=nil {return _caebd ,_fa .Wrap (_dcgad ,_bfe ,"\u0073\u0064\u0072\u0065\u0066\u0061\u0067\u0067");};_feef =0;if _cace .IsHuffmanEncoded {_feef =1;};if _dcgad =_aadc .WriteBit (_feef );_dcgad !=nil {return _caebd ,_fa .Wrap (_dcgad ,_bfe ,"\u0073\u0064\u0068\u0075\u0066\u0066");};return 2,nil ;};func (_cbd *Header )parse (_ecec Documenter ,_cebd _ec .StreamReader ,_eefgb int64 ,_fadcd OrganizationType )(_acae error ){const _bcab ="\u0070\u0061\u0072s\u0065";_aa .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _acae !=nil {_aa .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_acae );}else {_aa .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_acae =_cebd .Seek (_eefgb ,_a .SeekStart );if _acae !=nil {return _fa .Wrap (_acae ,_bcab ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _acae =_cbd .readSegmentNumber (_cebd );_acae !=nil {return _fa .Wrap (_acae ,_bcab ,"");};if _acae =_cbd .readHeaderFlags ();_acae !=nil {return _fa .Wrap (_acae ,_bcab ,"");};var _ccd uint64 ;_ccd ,_acae =_cbd .readNumberOfReferredToSegments (_cebd );if _acae !=nil {return _fa .Wrap (_acae ,_bcab ,"");};_cbd .RTSNumbers ,_acae =_cbd .readReferredToSegmentNumbers (_cebd ,int (_ccd ));if _acae !=nil {return _fa .Wrap (_acae ,_bcab ,"");};_acae =_cbd .readSegmentPageAssociation (_ecec ,_cebd ,_ccd ,_cbd .RTSNumbers ...);if _acae !=nil {return _fa .Wrap (_acae ,_bcab ,"");};if _cbd .Type !=TEndOfFile {if _acae =_cbd .readSegmentDataLength (_cebd );_acae !=nil {return _fa .Wrap (_acae ,_bcab ,"");};};_cbd .readDataStartOffset (_cebd ,_fadcd );_cbd .readHeaderLength (_cebd ,_eefgb );_aa .Log .Trace ("\u0025\u0073",_cbd );return nil ;};func (_ggad *GenericRegion )getPixel (_cfeb ,_bcfg int )int8 {if _cfeb < 0||_cfeb >=_ggad .Bitmap .Width {return 0;};if _bcfg < 0||_bcfg >=_ggad .Bitmap .Height {return 0;};if _ggad .Bitmap .GetPixel (_cfeb ,_bcfg ){return 1;};return 0;};func (_ebbc *SymbolDictionary )decodeThroughTextRegion (_fgecc ,_beda ,_dddc uint32 )error {if _ebbc ._affgc ==nil {_ebbc ._affgc =_agdea (_ebbc ._gggb ,nil );_ebbc ._affgc .setContexts (_ebbc ._bcee ,_gc .NewStats (512,1),_gc .NewStats (512,1),_gc .NewStats (512,1),_gc .NewStats (512,1),_ebbc ._dgfcg ,_gc .NewStats (512,1),_gc .NewStats (512,1),_gc .NewStats (512,1),_gc .NewStats (512,1));};if _bdaa :=_ebbc .setSymbolsArray ();_bdaa !=nil {return _bdaa ;};_ebbc ._affgc .setParameters (_ebbc ._gdef ,_ebbc .IsHuffmanEncoded ,true ,_fgecc ,_beda ,_dddc ,1,_ebbc ._edec +_ebbc ._cdbd ,0,0,0,1,0,0,0,0,0,0,0,0,0,_ebbc .SdrTemplate ,_ebbc .SdrATX ,_ebbc .SdrATY ,_ebbc ._add ,_ebbc ._bbcb );return _ebbc .addSymbol (_ebbc ._affgc );};func (_ffgg *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _ffgg .SdHuffDecodeHeightSelection {case 0:_abafg ,_eeeeb :=_gf .GetStandardTable (4);if _eeeeb !=nil {return 0,_eeeeb ;};return _abafg .Decode (_ffgg ._gggb );case 1:_aegf ,_gfeb :=_gf .GetStandardTable (5);if _gfeb !=nil {return 0,_gfeb ;};return _aegf .Decode (_ffgg ._gggb );case 3:if _ffgg ._gbdb ==nil {_adbe ,_ebec :=_gf .GetStandardTable (0);if _ebec !=nil {return 0,_ebec ;};_ffgg ._gbdb =_adbe ;};return _ffgg ._gbdb .Decode (_ffgg ._gggb );};return 0,nil ;};func (_efga *HalftoneRegion )renderPattern (_affa [][]int )(_eggdd error ){var _cga ,_dcef int ;for _efae :=0;_efae < int (_efga .HGridHeight );_efae ++{for _aca :=0;_aca < int (_efga .HGridWidth );_aca ++{_cga =_efga .computeX (_efae ,_aca );_dcef =_efga .computeY (_efae ,_aca );_gfea :=_efga .Patterns [_affa [_efae ][_aca ]];if _eggdd =_ga .Blit (_gfea ,_efga .HalftoneRegionBitmap ,_cga +int (_efga .HGridX ),_dcef +int (_efga .HGridY ),_efga .CombinationOperator );_eggdd !=nil {return _eggdd ;};};};return nil ;};func (_ffgb *GenericRegion )parseHeader ()(_gde error ){_aa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");defer func (){if _gde !=nil {_aa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_gde );}else {_aa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");};}();var (_gda int ;_dac uint64 ;);if _gde =_ffgb .RegionSegment .parseHeader ();_gde !=nil {return _gde ;};if _ ,_gde =_ffgb ._fgc .ReadBits (3);_gde !=nil {return _gde ;};_gda ,_gde =_ffgb ._fgc .ReadBit ();if _gde !=nil {return _gde ;};if _gda ==1{_ffgb .UseExtTemplates =true ;};_gda ,_gde =_ffgb ._fgc .ReadBit ();if _gde !=nil {return _gde ;};if _gda ==1{_ffgb .IsTPGDon =true ;};_dac ,_gde =_ffgb ._fgc .ReadBits (2);if _gde !=nil {return _gde ;};_ffgb .GBTemplate =byte (_dac &0xf);_gda ,_gde =_ffgb ._fgc .ReadBit ();if _gde !=nil {return _gde ;};if _gda ==1{_ffgb .IsMMREncoded =true ;};if !_ffgb .IsMMREncoded {_bgdc :=1;if _ffgb .GBTemplate ==0{_bgdc =4;if _ffgb .UseExtTemplates {_bgdc =12;};};if _gde =_ffgb .readGBAtPixels (_bgdc );_gde !=nil {return _gde ;};};if _gde =_ffgb .computeSegmentDataStructure ();_gde !=nil {return _gde ;};_aa .Log .Trace ("\u0025\u0073",_ffgb );return nil ;};func (_degg *GenericRegion )decodeTemplate3 (_gged ,_gcf ,_cab int ,_gbfa ,_bdega int )(_dgd error ){const _dee ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_ccab ,_aaf int ;_gfa int ;_bbe byte ;_eea ,_afdcf int ;);if _gged >=1{_bbe ,_dgd =_degg .Bitmap .GetByte (_bdega );if _dgd !=nil {return _fa .Wrap (_dgd ,_dee ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gfa =int (_bbe );};_ccab =(_gfa >>1)&0x70;for _edb :=0;_edb < _cab ;_edb =_eea {var (_bgdg byte ;_ddba int ;);_eea =_edb +8;if _bcb :=_gcf -_edb ;_bcb > 8{_ddba =8;}else {_ddba =_bcb ;};if _gged >=1{_gfa <<=8;if _eea < _gcf {_bbe ,_dgd =_degg .Bitmap .GetByte (_bdega +1);if _dgd !=nil {return _fa .Wrap (_dgd ,_dee ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");};_gfa |=int (_bbe );};};for _geb :=0;_geb < _ddba ;_geb ++{if _degg ._fdc {_aaf =_degg .overrideAtTemplate3 (_ccab ,_edb +_geb ,_gged ,int (_bgdg ),_geb );_degg ._ccbe .SetIndex (int32 (_aaf ));}else {_degg ._ccbe .SetIndex (int32 (_ccab ));};_afdcf ,_dgd =_degg ._aaa .DecodeBit (_degg ._ccbe );if _dgd !=nil {return _fa .Wrap (_dgd ,_dee ,"");};_bgdg |=byte (_afdcf )<<byte (7-_geb );_ccab =((_ccab &0x1f7)<<1)|_afdcf |((_gfa >>uint (8-_geb ))&0x010);};if _bdcf :=_degg .Bitmap .SetByte (_gbfa ,_bgdg );_bdcf !=nil {return _fa .Wrap (_bdcf ,_dee ,"");};_gbfa ++;_bdega ++;};return nil ;};func (_agdag *SymbolDictionary )decodeHeightClassCollectiveBitmap (_bbfd int64 ,_beb ,_ggb uint32 )(*_ga .Bitmap ,error ){if _bbfd ==0{_feggd :=_ga .New (int (_ggb ),int (_beb ));var (_edbdg byte ;_dcae error ;);for _agcc :=0;_agcc < len (_feggd .Data );_agcc ++{_edbdg ,_dcae =_agdag ._gggb .ReadByte ();if _dcae !=nil {return nil ,_dcae ;};if _dcae =_feggd .SetByte (_agcc ,_edbdg );_dcae !=nil {return nil ,_dcae ;};};return _feggd ,nil ;};if _agdag ._cfbe ==nil {_agdag ._cfbe =NewGenericRegion (_agdag ._gggb );};_agdag ._cfbe .setParameters (true ,_agdag ._gggb .StreamPosition (),_bbfd ,_beb ,_ggb );_bdba ,_becd :=_agdag ._cfbe .GetRegionBitmap ();if _becd !=nil {return nil ,_becd ;};return _bdba ,nil ;};func (_fefd *template0 )setIndex (_ceg *_gc .DecoderStats ){_ceg .SetIndex (0x100)};func (_efbc *TextRegion )readRegionFlags ()error {var (_cedd int ;_gbdd uint64 ;_faead error ;);_cedd ,_faead =_efbc ._fbbf .ReadBit ();if _faead !=nil {return _faead ;};_efbc .SbrTemplate =int8 (_cedd );_gbdd ,_faead =_efbc ._fbbf .ReadBits (5);if _faead !=nil {return _faead ;};_efbc .SbdsOffset =int8 (_gbdd );if _efbc .SbdsOffset > 0x0f{_efbc .SbdsOffset -=0x20;};_cedd ,_faead =_efbc ._fbbf .ReadBit ();if _faead !=nil {return _faead ;};_efbc .DefaultPixel =int8 (_cedd );_gbdd ,_faead =_efbc ._fbbf .ReadBits (2);if _faead !=nil {return _faead ;};_efbc .CombinationOperator =_ga .CombinationOperator (int (_gbdd )&0x3);_cedd ,_faead =_efbc ._fbbf .ReadBit ();if _faead !=nil {return _faead ;};_efbc .IsTransposed =int8 (_cedd );_gbdd ,_faead =_efbc ._fbbf .ReadBits (2);if _faead !=nil {return _faead ;};_efbc .ReferenceCorner =int16 (_gbdd )&0x3;_gbdd ,_faead =_efbc ._fbbf .ReadBits (2);if _faead !=nil {return _faead ;};_efbc .LogSBStrips =int16 (_gbdd )&0x3;_efbc .SbStrips =1<<uint (_efbc .LogSBStrips );_cedd ,_faead =_efbc ._fbbf .ReadBit ();if _faead !=nil {return _faead ;};if _cedd ==1{_efbc .UseRefinement =true ;};_cedd ,_faead =_efbc ._fbbf .ReadBit ();if _faead !=nil {return _faead ;};if _cedd ==1{_efbc .IsHuffmanEncoded =true ;};return nil ;};func (_aacd *GenericRegion )decodeTemplate0a (_daec ,_gba ,_eccg int ,_fgeg ,_fdee int )(_bddd error ){const _cbfa ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_bad ,_gad int ;_efca ,_ffce int ;_gced byte ;_eeg int ;);if _daec >=1{_gced ,_bddd =_aacd .Bitmap .GetByte (_fdee );if _bddd !=nil {return _fa .Wrap (_bddd ,_cbfa ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_efca =int (_gced );};if _daec >=2{_gced ,_bddd =_aacd .Bitmap .GetByte (_fdee -_aacd .Bitmap .RowStride );if _bddd !=nil {return _fa .Wrap (_bddd ,_cbfa ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ffce =int (_gced )<<6;};_bad =(_efca &0xf0)|(_ffce &0x3800);for _gggg :=0;_gggg < _eccg ;_gggg =_eeg {var (_eabcg byte ;_efb int ;);_eeg =_gggg +8;if _ecg :=_gba -_gggg ;_ecg > 8{_efb =8;}else {_efb =_ecg ;};if _daec > 0{_efca <<=8;if _eeg < _gba {_gced ,_bddd =_aacd .Bitmap .GetByte (_fdee +1);if _bddd !=nil {return _fa .Wrap (_bddd ,_cbfa ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_efca |=int (_gced );};};if _daec > 1{_aaca :=_fdee -_aacd .Bitmap .RowStride +1;_ffce <<=8;if _eeg < _gba {_gced ,_bddd =_aacd .Bitmap .GetByte (_aaca );if _bddd !=nil {return _fa .Wrap (_bddd ,_cbfa ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ffce |=int (_gced )<<6;}else {_ffce |=0;};};for _cfd :=0;_cfd < _efb ;_cfd ++{_dcb :=uint (7-_cfd );if _aacd ._fdc {_gad =_aacd .overrideAtTemplate0a (_bad ,_gggg +_cfd ,_daec ,int (_eabcg ),_cfd ,int (_dcb ));_aacd ._ccbe .SetIndex (int32 (_gad ));}else {_aacd ._ccbe .SetIndex (int32 (_bad ));};var _bgb int ;_bgb ,_bddd =_aacd ._aaa .DecodeBit (_aacd ._ccbe );if _bddd !=nil {return _fa .Wrap (_bddd ,_cbfa ,"");};_eabcg |=byte (_bgb )<<uint (_dcb );_bad =((_bad &0x7bf7)<<1)|_bgb |((_efca >>_dcb )&0x10)|((_ffce >>_dcb )&0x800);};if _cgg :=_aacd .Bitmap .SetByte (_fgeg ,_eabcg );_cgg !=nil {return _fa .Wrap (_cgg ,_cbfa ,"");};_fgeg ++;_fdee ++;};return nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_egad *RegionSegment )Encode (w _ec .BinaryWriter )(_abfde int ,_eggea error ){const _ggcac ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_dgfc :=make ([]byte ,4);_e .BigEndian .PutUint32 (_dgfc ,_egad .BitmapWidth );_abfde ,_eggea =w .Write (_dgfc );if _eggea !=nil {return 0,_fa .Wrap (_eggea ,_ggcac ,"\u0057\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_dgfc ,_egad .BitmapHeight );var _gfae int ;_gfae ,_eggea =w .Write (_dgfc );if _eggea !=nil {return 0,_fa .Wrap (_eggea ,_ggcac ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_abfde +=_gfae ;_e .BigEndian .PutUint32 (_dgfc ,_egad .XLocation );_gfae ,_eggea =w .Write (_dgfc );if _eggea !=nil {return 0,_fa .Wrap (_eggea ,_ggcac ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_abfde +=_gfae ;_e .BigEndian .PutUint32 (_dgfc ,_egad .YLocation );_gfae ,_eggea =w .Write (_dgfc );if _eggea !=nil {return 0,_fa .Wrap (_eggea ,_ggcac ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_abfde +=_gfae ;if _eggea =w .WriteByte (byte (_egad .CombinaionOperator )&0x07);_eggea !=nil {return 0,_fa .Wrap (_eggea ,_ggcac ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_abfde ++;return _abfde ,nil ;};func (_geab *SymbolDictionary )readRegionFlags ()error {var (_gbaf uint64 ;_dabb int ;);_ ,_edaf :=_geab ._gggb .ReadBits (3);if _edaf !=nil {return _edaf ;};_dabb ,_edaf =_geab ._gggb .ReadBit ();if _edaf !=nil {return _edaf ;};_geab .SdrTemplate =int8 (_dabb );_gbaf ,_edaf =_geab ._gggb .ReadBits (2);if _edaf !=nil {return _edaf ;};_geab .SdTemplate =int8 (_gbaf &0xf);_dabb ,_edaf =_geab ._gggb .ReadBit ();if _edaf !=nil {return _edaf ;};if _dabb ==1{_geab ._deee =true ;};_dabb ,_edaf =_geab ._gggb .ReadBit ();if _edaf !=nil {return _edaf ;};if _dabb ==1{_geab ._aeab =true ;};_dabb ,_edaf =_geab ._gggb .ReadBit ();if _edaf !=nil {return _edaf ;};if _dabb ==1{_geab .SdHuffAggInstanceSelection =true ;};_dabb ,_edaf =_geab ._gggb .ReadBit ();if _edaf !=nil {return _edaf ;};_geab .SdHuffBMSizeSelection =int8 (_dabb );_gbaf ,_edaf =_geab ._gggb .ReadBits (2);if _edaf !=nil {return _edaf ;};_geab .SdHuffDecodeWidthSelection =int8 (_gbaf &0xf);_gbaf ,_edaf =_geab ._gggb .ReadBits (2);if _edaf !=nil {return _edaf ;};_geab .SdHuffDecodeHeightSelection =int8 (_gbaf &0xf);_dabb ,_edaf =_geab ._gggb .ReadBit ();if _edaf !=nil {return _edaf ;};if _dabb ==1{_geab .UseRefinementAggregation =true ;};_dabb ,_edaf =_geab ._gggb .ReadBit ();if _edaf !=nil {return _edaf ;};if _dabb ==1{_geab .IsHuffmanEncoded =true ;};return nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _ec .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_cbdg *PatternDictionary )checkInput ()error {if _cbdg .HdpHeight < 1||_cbdg .HdpWidth < 1{return _ab .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");};if _cbdg .IsMMREncoded {if _cbdg .HDTemplate !=0{_aa .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");};};return nil ;};func (_abb *PageInformationSegment )encodeStripingInformation (_bdb _ec .BinaryWriter )(_cbae int ,_ddca error ){const _gdce ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";if !_abb .IsStripe {if _cbae ,_ddca =_bdb .Write ([]byte {0x00,0x00});_ddca !=nil {return 0,_fa .Wrap (_ddca ,_gdce ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _cbae ,nil ;};_ggcd :=make ([]byte ,2);_e .BigEndian .PutUint16 (_ggcd ,_abb .MaxStripeSize |1<<15);if _cbae ,_ddca =_bdb .Write (_ggcd );_ddca !=nil {return 0,_fa .Wrapf (_ddca ,_gdce ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_abb .MaxStripeSize );};return _cbae ,nil ;};func (_dcca *TextRegion )checkInput ()error {const _ffdf ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_dcca .UseRefinement {if _dcca .SbrTemplate !=0{_aa .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_dcca .SbrTemplate =0;};};if _dcca .SbHuffFS ==2||_dcca .SbHuffRDWidth ==2||_dcca .SbHuffRDHeight ==2||_dcca .SbHuffRDX ==2||_dcca .SbHuffRDY ==2{return _fa .Error (_ffdf ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");};if !_dcca .UseRefinement {if _dcca .SbHuffRSize !=0{_aa .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_dcca .SbHuffRSize =0;};if _dcca .SbHuffRDY !=0{_aa .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_dcca .SbHuffRDY =0;};if _dcca .SbHuffRDX !=0{_aa .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_dcca .SbHuffRDX =0;};if _dcca .SbHuffRDWidth !=0{_aa .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");_dcca .SbHuffRDWidth =0;};if _dcca .SbHuffRDHeight !=0{_aa .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_dcca .SbHuffRDHeight =0;};};return nil ;};var _ templater =&template1 {};type Regioner interface{GetRegionBitmap ()(*_ga .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_adbg *SymbolDictionary )parseHeader ()(_fffde error ){_aa .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _fffde !=nil {_aa .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_fffde );}else {_aa .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _fffde =_adbg .readRegionFlags ();_fffde !=nil {return _fffde ;};if _fffde =_adbg .setAtPixels ();_fffde !=nil {return _fffde ;};if _fffde =_adbg .setRefinementAtPixels ();_fffde !=nil {return _fffde ;};if _fffde =_adbg .readNumberOfExportedSymbols ();_fffde !=nil {return _fffde ;};if _fffde =_adbg .readNumberOfNewSymbols ();_fffde !=nil {return _fffde ;};if _fffde =_adbg .setInSyms ();_fffde !=nil {return _fffde ;};if _adbg ._aeab {_afff :=_adbg .Header .RTSegments ;for _eeag :=len (_afff )-1;_eeag >=0;_eeag --{if _afff [_eeag ].Type ==0{_cede ,_agec :=_afff [_eeag ].SegmentData .(*SymbolDictionary );if !_agec {_fffde =_g .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_afff [_eeag ]);return _fffde ;};if _cede ._aeab {_adbg .setRetainedCodingContexts (_cede );};break ;};};};if _fffde =_adbg .checkInput ();_fffde !=nil {return _fffde ;};return nil ;};func NewRegionSegment (r _ec .StreamReader )*RegionSegment {return &RegionSegment {_facd :r }};func (_geaeb *TextRegion )decodeRdh ()(int64 ,error ){const _ebbb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _geaeb .IsHuffmanEncoded {if _geaeb .SbHuffRDHeight ==3{if _geaeb ._egbfc ==nil {var (_gfgd int ;_fadbe error ;);if _geaeb .SbHuffFS ==3{_gfgd ++;};if _geaeb .SbHuffDS ==3{_gfgd ++;};if _geaeb .SbHuffDT ==3{_gfgd ++;};if _geaeb .SbHuffRDWidth ==3{_gfgd ++;};_geaeb ._egbfc ,_fadbe =_geaeb .getUserTable (_gfgd );if _fadbe !=nil {return 0,_fa .Wrap (_fadbe ,_ebbb ,"");};};return _geaeb ._egbfc .Decode (_geaeb ._fbbf );};_bede ,_fgfa :=_gf .GetStandardTable (14+int (_geaeb .SbHuffRDHeight ));if _fgfa !=nil {return 0,_fa .Wrap (_fgfa ,_ebbb ,"");};return _bede .Decode (_geaeb ._fbbf );};_abfc ,_fdbcb :=_geaeb ._cafe .DecodeInt (_geaeb ._ageg );if _fdbcb !=nil {return 0,_fa .Wrap (_fdbcb ,_ebbb ,"");};return int64 (_abfc ),nil ;};func (_cegba *SymbolDictionary )setAtPixels ()error {if _cegba .IsHuffmanEncoded {return nil ;};_ggba :=1;if _cegba .SdTemplate ==0{_ggba =4;};if _eagb :=_cegba .readAtPixels (_ggba );_eagb !=nil {return _eagb ;};return nil ;};func (_gdcf *Header )writeSegmentPageAssociation (_gbbcc _ec .BinaryWriter )(_afg int ,_dfgdg error ){const _dedg ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";if _gdcf .pageSize ()!=4{if _dfgdg =_gbbcc .WriteByte (byte (_gdcf .PageAssociation ));_dfgdg !=nil {return 0,_fa .Wrap (_dfgdg ,_dedg ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_gfcc :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gfcc ,uint32 (_gdcf .PageAssociation ));if _afg ,_dfgdg =_gbbcc .Write (_gfcc );_dfgdg !=nil {return 0,_fa .Wrap (_dfgdg ,_dedg ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _afg ,nil ;};var (_fdae Segmenter ;_cfdce =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _fdae },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _fdae },TProfiles :func ()Segmenter {return _fdae },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _fdae },TBitmap :func ()Segmenter {return _fdae }};);func (_gecgc *SymbolDictionary )getSymbol (_daed int )(*_ga .Bitmap ,error ){const _cdbb ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_cage ,_cacdg :=_gecgc ._fdbaf .GetBitmap (_gecgc ._fbega [_daed ]);if _cacdg !=nil {return nil ,_fa .Wrap (_cacdg ,_cdbb ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _cage ,nil ;};func (_fbba *PageInformationSegment )readMaxStripeSize ()error {_badd ,_eceg :=_fbba ._fgbf .ReadBits (15);if _eceg !=nil {return _eceg ;};_fbba .MaxStripeSize =uint16 (_badd &_d .MaxUint16 );return nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_fefb *SymbolDictionary )encodeSymbols (_faeac _ec .BinaryWriter )(_cdedc int ,_aeg error ){const _abee ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_gefag :=_bd .New ();_gefag .Init ();_agc ,_aeg :=_fefb ._fdbaf .SelectByIndexes (_fefb ._fbega );if _aeg !=nil {return 0,_fa .Wrap (_aeg ,_abee ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_gege :=map[*_ga .Bitmap ]int {};for _aegb ,_ddea :=range _agc .Values {_gege [_ddea ]=_aegb ;};_agc .SortByHeight ();var _dbga ,_eaac int ;_fegg ,_aeg :=_agc .GroupByHeight ();if _aeg !=nil {return 0,_fa .Wrap (_aeg ,_abee ,"");};for _ ,_abfg :=range _fegg .Values {_bfde :=_abfg .Values [0].Height ;_ageb :=_bfde -_dbga ;if _aeg =_gefag .EncodeInteger (_bd .IADH ,_ageb );_aeg !=nil {return 0,_fa .Wrapf (_aeg ,_abee ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_ageb );};_dbga =_bfde ;_fffc ,_fdaf :=_abfg .GroupByWidth ();if _fdaf !=nil {return 0,_fa .Wrapf (_fdaf ,_abee ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_bfde );};var _fbad int ;for _ ,_cacdc :=range _fffc .Values {for _ ,_aeaf :=range _cacdc .Values {_cegg :=_aeaf .Width ;_cffc :=_cegg -_fbad ;if _fdaf =_gefag .EncodeInteger (_bd .IADW ,_cffc );_fdaf !=nil {return 0,_fa .Wrapf (_fdaf ,_abee ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_cffc );};_fbad +=_cffc ;if _fdaf =_gefag .EncodeBitmap (_aeaf ,false );_fdaf !=nil {return 0,_fa .Wrapf (_fdaf ,_abee ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_bfde ,_cegg );};_adfe :=_gege [_aeaf ];_fefb ._eabge [_adfe ]=_eaac ;_eaac ++;};};if _fdaf =_gefag .EncodeOOB (_bd .IADW );_fdaf !=nil {return 0,_fa .Wrap (_fdaf ,_abee ,"\u0049\u0041\u0044\u0057");};};if _aeg =_gefag .EncodeInteger (_bd .IAEX ,0);_aeg !=nil {return 0,_fa .Wrap (_aeg ,_abee ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};if _aeg =_gefag .EncodeInteger (_bd .IAEX ,len (_fefb ._fbega ));_aeg !=nil {return 0,_fa .Wrap (_aeg ,_abee ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_gefag .Final ();_bgaa ,_aeg :=_gefag .WriteTo (_faeac );if _aeg !=nil {return 0,_fa .Wrap (_aeg ,_abee ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};return int (_bgaa ),nil ;};func (_cebf *HalftoneRegion )computeSegmentDataStructure ()error {_cebf .DataOffset =_cebf ._deggd .StreamPosition ();_cebf .DataHeaderLength =_cebf .DataOffset -_cebf .DataHeaderOffset ;_cebf .DataLength =int64 (_cebf ._deggd .Length ())-_cebf .DataHeaderLength ;return nil ;};func (_abd *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _abd .RegionInfo };const BorderSize =6;func (_egdb *PageInformationSegment )CombinationOperator ()_ga .CombinationOperator {return _egdb ._faebd ;};func (_daee *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _ggbb ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _daee .SbHuffRSize ==0{_eaae ,_adc :=_gf .GetStandardTable (1);if _adc !=nil {return 0,_fa .Wrap (_adc ,_ggbb ,"");};return _eaae .Decode (_daee ._fbbf );};if _daee ._bddg ==nil {var (_cafga int ;_fgeec error ;);if _daee .SbHuffFS ==3{_cafga ++;};if _daee .SbHuffDS ==3{_cafga ++;};if _daee .SbHuffDT ==3{_cafga ++;};if _daee .SbHuffRDWidth ==3{_cafga ++;};if _daee .SbHuffRDHeight ==3{_cafga ++;};if _daee .SbHuffRDX ==3{_cafga ++;};if _daee .SbHuffRDY ==3{_cafga ++;};_daee ._bddg ,_fgeec =_daee .getUserTable (_cafga );if _fgeec !=nil {return 0,_fa .Wrap (_fgeec ,_ggbb ,"");};};_bdede ,_aeea :=_daee ._bddg .Decode (_daee ._fbbf );if _aeea !=nil {return 0,_fa .Wrap (_aeea ,_ggbb ,"");};return _bdede ,nil ;};func (_ddbf *TextRegion )readAmountOfSymbolInstances ()error {_fagb ,_gcgg :=_ddbf ._fbbf .ReadBits (32);if _gcgg !=nil {return _gcgg ;};_ddbf .NumberOfSymbolInstances =uint32 (_fagb &_d .MaxUint32 );_aabb :=_ddbf .RegionInfo .BitmapWidth *_ddbf .RegionInfo .BitmapHeight ;if _aabb < _ddbf .NumberOfSymbolInstances {_aa .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_aabb ,_ddbf .NumberOfSymbolInstances );_ddbf .NumberOfSymbolInstances =_aabb ;};return nil ;};func (_ggec *PageInformationSegment )encodeFlags (_aga _ec .BinaryWriter )(_bgac error ){const _gaeg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bgac =_aga .SkipBits (1);_bgac !=nil {return _fa .Wrap (_bgac ,_gaeg ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _cgcd int ;if _ggec .CombinationOperatorOverrideAllowed (){_cgcd =1;};if _bgac =_aga .WriteBit (_cgcd );_bgac !=nil {return _fa .Wrap (_bgac ,_gaeg ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_cgcd =0;if _ggec ._efbab {_cgcd =1;};if _bgac =_aga .WriteBit (_cgcd );_bgac !=nil {return _fa .Wrap (_bgac ,_gaeg ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _bgac =_aga .WriteBit ((int (_ggec ._faebd )>>1)&0x01);_bgac !=nil {return _fa .Wrap (_bgac ,_gaeg ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _bgac =_aga .WriteBit (int (_ggec ._faebd )&0x01);_bgac !=nil {return _fa .Wrap (_bgac ,_gaeg ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_cgcd =int (_ggec ._cfeag );if _bgac =_aga .WriteBit (_cgcd );_bgac !=nil {return _fa .Wrap (_bgac ,_gaeg ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_cgcd =0;if _ggec ._bbda {_cgcd =1;};if _bgac =_aga .WriteBit (_cgcd );_bgac !=nil {return _fa .Wrap (_bgac ,_gaeg ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_cgcd =0;if _ggec .IsLossless {_cgcd =1;};if _bgac =_aga .WriteBit (_cgcd );_bgac !=nil {return _fa .Wrap (_bgac ,_gaeg ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_dfdg *TextRegion )computeSymbolCodeLength ()error {if _dfdg .IsHuffmanEncoded {return _dfdg .symbolIDCodeLengths ();};_dfdg ._gadg =int8 (_d .Ceil (_d .Log (float64 (_dfdg .NumberOfSymbols ))/_d .Log (2)));return nil ;};func (_gdd *HalftoneRegion )parseHeader ()error {if _eada :=_gdd .RegionSegment .parseHeader ();_eada !=nil {return _eada ;};_aagg ,_egd :=_gdd ._deggd .ReadBit ();if _egd !=nil {return _egd ;};_gdd .HDefaultPixel =int8 (_aagg );_fgg ,_egd :=_gdd ._deggd .ReadBits (3);if _egd !=nil {return _egd ;};_gdd .CombinationOperator =_ga .CombinationOperator (_fgg &0xf);_aagg ,_egd =_gdd ._deggd .ReadBit ();if _egd !=nil {return _egd ;};if _aagg ==1{_gdd .HSkipEnabled =true ;};_fgg ,_egd =_gdd ._deggd .ReadBits (2);if _egd !=nil {return _egd ;};_gdd .HTemplate =byte (_fgg &0xf);_aagg ,_egd =_gdd ._deggd .ReadBit ();if _egd !=nil {return _egd ;};if _aagg ==1{_gdd .IsMMREncoded =true ;};_fgg ,_egd =_gdd ._deggd .ReadBits (32);if _egd !=nil {return _egd ;};_gdd .HGridWidth =uint32 (_fgg &_d .MaxUint32 );_fgg ,_egd =_gdd ._deggd .ReadBits (32);if _egd !=nil {return _egd ;};_gdd .HGridHeight =uint32 (_fgg &_d .MaxUint32 );_fgg ,_egd =_gdd ._deggd .ReadBits (32);if _egd !=nil {return _egd ;};_gdd .HGridX =int32 (_fgg &_d .MaxInt32 );_fgg ,_egd =_gdd ._deggd .ReadBits (32);if _egd !=nil {return _egd ;};_gdd .HGridY =int32 (_fgg &_d .MaxInt32 );_fgg ,_egd =_gdd ._deggd .ReadBits (16);if _egd !=nil {return _egd ;};_gdd .HRegionX =uint16 (_fgg &_d .MaxUint16 );_fgg ,_egd =_gdd ._deggd .ReadBits (16);if _egd !=nil {return _egd ;};_gdd .HRegionY =uint16 (_fgg &_d .MaxUint16 );if _egd =_gdd .computeSegmentDataStructure ();_egd !=nil {return _egd ;};return _gdd .checkInput ();};func (_ddee *Header )subInputReader ()(_ec .StreamReader ,error ){return _ec .NewSubstreamReader (_ddee .Reader ,_ddee .SegmentDataStartOffset ,_ddee .SegmentDataLength );};func (_cafa *GenericRefinementRegion )readAtPixels ()error {_cafa .GrAtX =make ([]int8 ,2);_cafa .GrAtY =make ([]int8 ,2);_dedb ,_ffc :=_cafa ._deb .ReadByte ();if _ffc !=nil {return _ffc ;};_cafa .GrAtX [0]=int8 (_dedb );_dedb ,_ffc =_cafa ._deb .ReadByte ();if _ffc !=nil {return _ffc ;};_cafa .GrAtY [0]=int8 (_dedb );_dedb ,_ffc =_cafa ._deb .ReadByte ();if _ffc !=nil {return _ffc ;};_cafa .GrAtX [1]=int8 (_dedb );_dedb ,_ffc =_cafa ._deb .ReadByte ();if _ffc !=nil {return _ffc ;};_cafa .GrAtY [1]=int8 (_dedb );return nil ;};func (_bfd *GenericRegion )computeSegmentDataStructure ()error {_bfd .DataOffset =_bfd ._fgc .StreamPosition ();_bfd .DataHeaderLength =_bfd .DataOffset -_bfd .DataHeaderOffset ;_bfd .DataLength =int64 (_bfd ._fgc .Length ())-_bfd .DataHeaderLength ;return nil ;};func (_bbec *GenericRegion )overrideAtTemplate0a (_cfdd ,_bffe ,_ggfc ,_eacg ,_babdb ,_dbfa int )int {if _bbec .GBAtOverride [0]{_cfdd &=0xFFEF;if _bbec .GBAtY [0]==0&&_bbec .GBAtX [0]>=-int8 (_babdb ){_cfdd |=(_eacg >>uint (int8 (_dbfa )-_bbec .GBAtX [0]&0x1))<<4;}else {_cfdd |=int (_bbec .getPixel (_bffe +int (_bbec .GBAtX [0]),_ggfc +int (_bbec .GBAtY [0])))<<4;};};if _bbec .GBAtOverride [1]{_cfdd &=0xFBFF;if _bbec .GBAtY [1]==0&&_bbec .GBAtX [1]>=-int8 (_babdb ){_cfdd |=(_eacg >>uint (int8 (_dbfa )-_bbec .GBAtX [1]&0x1))<<10;}else {_cfdd |=int (_bbec .getPixel (_bffe +int (_bbec .GBAtX [1]),_ggfc +int (_bbec .GBAtY [1])))<<10;};};if _bbec .GBAtOverride [2]{_cfdd &=0xF7FF;if _bbec .GBAtY [2]==0&&_bbec .GBAtX [2]>=-int8 (_babdb ){_cfdd |=(_eacg >>uint (int8 (_dbfa )-_bbec .GBAtX [2]&0x1))<<11;}else {_cfdd |=int (_bbec .getPixel (_bffe +int (_bbec .GBAtX [2]),_ggfc +int (_bbec .GBAtY [2])))<<11;};};if _bbec .GBAtOverride [3]{_cfdd &=0x7FFF;if _bbec .GBAtY [3]==0&&_bbec .GBAtX [3]>=-int8 (_babdb ){_cfdd |=(_eacg >>uint (int8 (_dbfa )-_bbec .GBAtX [3]&0x1))<<15;}else {_cfdd |=int (_bbec .getPixel (_bffe +int (_bbec .GBAtX [3]),_ggfc +int (_bbec .GBAtY [3])))<<15;};};return _cfdd ;};func (_egga *PageInformationSegment )readResolution ()error {_ggfcf ,_edeegf :=_egga ._fgbf .ReadBits (32);if _edeegf !=nil {return _edeegf ;};_egga .ResolutionX =int (_ggfcf &_d .MaxInt32 );_ggfcf ,_edeegf =_egga ._fgbf .ReadBits (32);if _edeegf !=nil {return _edeegf ;};_egga .ResolutionY =int (_ggfcf &_d .MaxInt32 );return nil ;};func (_aeca *TextRegion )getSymbols ()error {if _aeca .Header .RTSegments !=nil {return _aeca .initSymbols ();};return nil ;};func (_bbab *HalftoneRegion )computeY (_aded ,_ffgd int )int {return _bbab .shiftAndFill (int (_bbab .HGridY )+_aded *int (_bbab .HRegionX )-_ffgd *int (_bbab .HRegionY ));};func (_aabg *Header )Encode (w _ec .BinaryWriter )(_bbdd int ,_cecf error ){const _eaba ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _agbcf _ec .BinaryWriter ;_aa .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _cecf !=nil {_aa .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_cecf );}else {_aa .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_aabg );_aa .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _aabg .SegmentData !=nil {_eegd ,_gegf :=_aabg .SegmentData .(SegmentEncoder );if !_gegf {return 0,_fa .Errorf (_eaba ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_aabg .SegmentData );};_agbcf =_ec .BufferedMSB ();_bbdd ,_cecf =_eegd .Encode (_agbcf );if _cecf !=nil {return 0,_fa .Wrap (_cecf ,_eaba ,"");};_aabg .SegmentDataLength =uint64 (_bbdd );};if _aabg .pageSize ()==4{_aabg .PageAssociationFieldSize =true ;};var _gee int ;_gee ,_cecf =_aabg .writeSegmentNumber (w );if _cecf !=nil {return 0,_fa .Wrap (_cecf ,_eaba ,"");};_bbdd +=_gee ;if _cecf =_aabg .writeFlags (w );_cecf !=nil {return _bbdd ,_fa .Wrap (_cecf ,_eaba ,"");};_bbdd ++;_gee ,_cecf =_aabg .writeReferredToCount (w );if _cecf !=nil {return 0,_fa .Wrap (_cecf ,_eaba ,"");};_bbdd +=_gee ;_gee ,_cecf =_aabg .writeReferredToSegments (w );if _cecf !=nil {return 0,_fa .Wrap (_cecf ,_eaba ,"");};_bbdd +=_gee ;_gee ,_cecf =_aabg .writeSegmentPageAssociation (w );if _cecf !=nil {return 0,_fa .Wrap (_cecf ,_eaba ,"");};_bbdd +=_gee ;_gee ,_cecf =_aabg .writeSegmentDataLength (w );if _cecf !=nil {return 0,_fa .Wrap (_cecf ,_eaba ,"");};_bbdd +=_gee ;_aabg .HeaderLength =int64 (_bbdd )-int64 (_aabg .SegmentDataLength );if _agbcf !=nil {if _ ,_cecf =w .Write (_agbcf .Data ());_cecf !=nil {return _bbdd ,_fa .Wrap (_cecf ,_eaba ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _bbdd ,nil ;};type RegionSegment struct{_facd _ec .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _ga .CombinationOperator ;};func (_eded *PageInformationSegment )readIsStriped ()error {_aea ,_cdfd :=_eded ._fgbf .ReadBit ();if _cdfd !=nil {return _cdfd ;};if _aea ==1{_eded .IsStripe =true ;};return nil ;};func (_ebbcb *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_adbc int ;_ebcc int32 ;_eefa error ;_fffd =int32 (_ebbcb ._edec +_ebbcb .NumberOfNewSymbols );_cggcc =make ([]int ,_fffd ););for _bfac :=int32 (0);_bfac < _fffd ;_bfac +=_ebcc {if _ebbcb .IsHuffmanEncoded {_fcbd ,_gfcf :=_gf .GetStandardTable (1);if _gfcf !=nil {return nil ,_gfcf ;};_cbba ,_gfcf :=_fcbd .Decode (_ebbcb ._gggb );if _gfcf !=nil {return nil ,_gfcf ;};_ebcc =int32 (_cbba );}else {_ebcc ,_eefa =_ebbcb ._gdef .DecodeInt (_ebbcb ._cdde );if _eefa !=nil {return nil ,_eefa ;};};if _ebcc !=0{for _gfdb :=_bfac ;_gfdb < _bfac +_ebcc ;_gfdb ++{_cggcc [_gfdb ]=_adbc ;};};if _adbc ==0{_adbc =1;}else {_adbc =0;};};return _cggcc ,nil ;};func (_feaeg *SymbolDictionary )setCodingStatistics ()error {if _feaeg ._eggb ==nil {_feaeg ._eggb =_gc .NewStats (512,1);};if _feaeg ._bffa ==nil {_feaeg ._bffa =_gc .NewStats (512,1);};if _feaeg ._fcg ==nil {_feaeg ._fcg =_gc .NewStats (512,1);};if _feaeg ._fbdc ==nil {_feaeg ._fbdc =_gc .NewStats (512,1);};if _feaeg ._cdde ==nil {_feaeg ._cdde =_gc .NewStats (512,1);};if _feaeg .UseRefinementAggregation &&_feaeg ._dgfcg ==nil {_feaeg ._dgfcg =_gc .NewStats (1<<uint (_feaeg ._bbcb ),1);_feaeg ._gdaa =_gc .NewStats (512,1);_feaeg ._bfa =_gc .NewStats (512,1);};if _feaeg ._bcee ==nil {_feaeg ._bcee =_gc .NewStats (65536,1);};if _feaeg ._gdef ==nil {var _fadd error ;_feaeg ._gdef ,_fadd =_gc .New (_feaeg ._gggb );if _fadd !=nil {return _fadd ;};};return nil ;};func (_eeeg *TextRegion )Init (header *Header ,r _ec .StreamReader )error {_eeeg .Header =header ;_eeeg ._fbbf =r ;_eeeg .RegionInfo =NewRegionSegment (_eeeg ._fbbf );return _eeeg .parseHeader ();};func (_dbfg *TableSegment )HtLow ()int32 {return _dbfg ._aedb };func (_dda *GenericRegion )copyLineAbove (_aacg int )error {_bde :=_aacg *_dda .Bitmap .RowStride ;_aed :=_bde -_dda .Bitmap .RowStride ;for _efdd :=0;_efdd < _dda .Bitmap .RowStride ;_efdd ++{_cda ,_dfgd :=_dda .Bitmap .GetByte (_aed );if _dfgd !=nil {return _dfgd ;};_aed ++;if _dfgd =_dda .Bitmap .SetByte (_bde ,_cda );_dfgd !=nil {return _dfgd ;};_bde ++;};return nil ;};type templater interface{form (_dbb ,_faea ,_babd ,_abcb ,_aaeg int16 )int16 ;setIndex (_efa *_gc .DecoderStats );};func (_dcbd *Header )readSegmentDataLength (_cfdc _ec .StreamReader )(_agba error ){_dcbd .SegmentDataLength ,_agba =_cfdc .ReadBits (32);if _agba !=nil {return _agba ;};_dcbd .SegmentDataLength &=_d .MaxInt32 ;return nil ;};func (_efcc *TableSegment )StreamReader ()_ec .StreamReader {return _efcc ._fbee };func (_acgfa *RegionSegment )String ()string {_gefa :=&_b .Builder {};_gefa .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_gefa .WriteString (_g .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_acgfa .BitmapWidth ,_acgfa .BitmapHeight ));_gefa .WriteString (_g .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_acgfa .XLocation ,_acgfa .YLocation ));_gefa .WriteString (_g .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_acgfa .CombinaionOperator ));return _gefa .String ();};func (_cbecd *SymbolDictionary )readRefinementAtPixels (_gabd int )error {_cbecd .SdrATX =make ([]int8 ,_gabd );_cbecd .SdrATY =make ([]int8 ,_gabd );var (_bgbb byte ;_egbf error ;);for _dbgb :=0;_dbgb < _gabd ;_dbgb ++{_bgbb ,_egbf =_cbecd ._gggb .ReadByte ();if _egbf !=nil {return _egbf ;};_cbecd .SdrATX [_dbgb ]=int8 (_bgbb );_bgbb ,_egbf =_cbecd ._gggb .ReadByte ();if _egbf !=nil {return _egbf ;};_cbecd .SdrATY [_dbgb ]=int8 (_bgbb );};return nil ;};func _cdba (_dbf _ec .StreamReader ,_ffea *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_deb :_dbf ,RegionInfo :NewRegionSegment (_dbf ),_cc :_ffea ,_fac :&template0 {},_aba :&template1 {}};};type PatternDictionary struct{_ggfb _ec .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_ga .Bitmap ;GrayMax uint32 ;};func (_facaa *TextRegion )decodeDT ()(_bbedg int64 ,_gbbdc error ){if _facaa .IsHuffmanEncoded {if _facaa .SbHuffDT ==3{_bbedg ,_gbbdc =_facaa ._dagg .Decode (_facaa ._fbbf );if _gbbdc !=nil {return 0,_gbbdc ;};}else {var _bbdc _gf .Tabler ;_bbdc ,_gbbdc =_gf .GetStandardTable (11+int (_facaa .SbHuffDT ));if _gbbdc !=nil {return 0,_gbbdc ;};_bbedg ,_gbbdc =_bbdc .Decode (_facaa ._fbbf );if _gbbdc !=nil {return 0,_gbbdc ;};};}else {var _cbad int32 ;_cbad ,_gbbdc =_facaa ._cafe .DecodeInt (_facaa ._aafe );if _gbbdc !=nil {return ;};_bbedg =int64 (_cbad );};_bbedg *=int64 (_facaa .SbStrips );return _bbedg ,nil ;};func (_ace *GenericRegion )overrideAtTemplate3 (_dcf ,_babb ,_ecd ,_aec ,_gbbb int )int {_dcf &=0x3EF;if _ace .GBAtY [0]==0&&_ace .GBAtX [0]>=-int8 (_gbbb ){_dcf |=(_aec >>uint (7-(int8 (_gbbb )+_ace .GBAtX [0]))&0x1)<<4;}else {_dcf |=int (_ace .getPixel (_babb +int (_ace .GBAtX [0]),_ecd +int (_ace .GBAtY [0])))<<4;};return _dcf ;};func (_cacd *GenericRegion )setOverrideFlag (_gagg int ){_cacd .GBAtOverride [_gagg ]=true ;_cacd ._fdc =true ;};func (_faee *GenericRegion )decodeTemplate2 (_afdg ,_eac ,_gdfg int ,_efdc ,_cec int )(_eba error ){const _dbbg ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_bgge ,_bdg int ;_gfga ,_ffgf int ;_fcc byte ;_fdg ,_ddc int ;);if _afdg >=1{_fcc ,_eba =_faee .Bitmap .GetByte (_cec );if _eba !=nil {return _fa .Wrap (_eba ,_dbbg ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_gfga =int (_fcc );};if _afdg >=2{_fcc ,_eba =_faee .Bitmap .GetByte (_cec -_faee .Bitmap .RowStride );if _eba !=nil {return _fa .Wrap (_eba ,_dbbg ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_ffgf =int (_fcc )<<4;};_bgge =(_gfga >>3&0x7c)|(_ffgf >>3&0x380);for _fcf :=0;_fcf < _gdfg ;_fcf =_fdg {var (_dbe byte ;_cfba int ;);_fdg =_fcf +8;if _ccbg :=_eac -_fcf ;_ccbg > 8{_cfba =8;}else {_cfba =_ccbg ;};if _afdg > 0{_gfga <<=8;if _fdg < _eac {_fcc ,_eba =_faee .Bitmap .GetByte (_cec +1);if _eba !=nil {return _fa .Wrap (_eba ,_dbbg ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_gfga |=int (_fcc );};};if _afdg > 1{_ffgf <<=8;if _fdg < _eac {_fcc ,_eba =_faee .Bitmap .GetByte (_cec -_faee .Bitmap .RowStride +1);if _eba !=nil {return _fa .Wrap (_eba ,_dbbg ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_ffgf |=int (_fcc )<<4;};};for _gbg :=0;_gbg < _cfba ;_gbg ++{_gge :=uint (10-_gbg );if _faee ._fdc {_bdg =_faee .overrideAtTemplate2 (_bgge ,_fcf +_gbg ,_afdg ,int (_dbe ),_gbg );_faee ._ccbe .SetIndex (int32 (_bdg ));}else {_faee ._ccbe .SetIndex (int32 (_bgge ));};_ddc ,_eba =_faee ._aaa .DecodeBit (_faee ._ccbe );if _eba !=nil {return _fa .Wrap (_eba ,_dbbg ,"");};_dbe |=byte (_ddc <<uint (7-_gbg ));_bgge =((_bgge &0x1bd)<<1)|_ddc |((_gfga >>_gge )&0x4)|((_ffgf >>_gge )&0x80);};if _bbg :=_faee .Bitmap .SetByte (_efdc ,_dbe );_bbg !=nil {return _fa .Wrap (_bbg ,_dbbg ,"");};_efdc ++;_cec ++;};return nil ;};func (_eabg *GenericRefinementRegion )setParameters (_fgb *_gc .DecoderStats ,_bag *_gc .Decoder ,_fefa int8 ,_ggf ,_cce uint32 ,_ffg *_ga .Bitmap ,_baa ,_dccg int32 ,_dec bool ,_cfea []int8 ,_fde []int8 ){_aa .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");if _fgb !=nil {_eabg ._gg =_fgb ;};if _bag !=nil {_eabg ._gcg =_bag ;};_eabg .TemplateID =_fefa ;_eabg .RegionInfo .BitmapWidth =_ggf ;_eabg .RegionInfo .BitmapHeight =_cce ;_eabg .ReferenceBitmap =_ffg ;_eabg .ReferenceDX =_baa ;_eabg .ReferenceDY =_dccg ;_eabg .IsTPGROn =_dec ;_eabg .GrAtX =_cfea ;_eabg .GrAtY =_fde ;_eabg .RegionBitmap =nil ;_aa .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_eabg );};func (_fcdb *TextRegion )decodeStripT ()(_babf int64 ,_fgcf error ){if _fcdb .IsHuffmanEncoded {if _fcdb .SbHuffDT ==3{if _fcdb ._dagg ==nil {var _dbage int ;if _fcdb .SbHuffFS ==3{_dbage ++;};if _fcdb .SbHuffDS ==3{_dbage ++;};_fcdb ._dagg ,_fgcf =_fcdb .getUserTable (_dbage );if _fgcf !=nil {return 0,_fgcf ;};};_babf ,_fgcf =_fcdb ._dagg .Decode (_fcdb ._fbbf );if _fgcf !=nil {return 0,_fgcf ;};}else {var _eebfa _gf .Tabler ;_eebfa ,_fgcf =_gf .GetStandardTable (11+int (_fcdb .SbHuffDT ));if _fgcf !=nil {return 0,_fgcf ;};_babf ,_fgcf =_eebfa .Decode (_fcdb ._fbbf );if _fgcf !=nil {return 0,_fgcf ;};};}else {var _adec int32 ;_adec ,_fgcf =_fcdb ._cafe .DecodeInt (_fcdb ._aafe );if _fgcf !=nil {return 0,_fgcf ;};_babf =int64 (_adec );};_babf *=int64 (-_fcdb .SbStrips );return _babf ,nil ;};func (_ggdf *PatternDictionary )readGrayMax ()error {_aacbg ,_eggg :=_ggdf ._ggfb .ReadBits (32);if _eggg !=nil {return _eggg ;};_ggdf .GrayMax =uint32 (_aacbg &_d .MaxUint32 );return nil ;};func (_ebd *SymbolDictionary )decodeAggregate (_caac ,_fdcf uint32 )error {var (_cffg int64 ;_agde error ;);if _ebd .IsHuffmanEncoded {_cffg ,_agde =_ebd .huffDecodeRefAggNInst ();if _agde !=nil {return _agde ;};}else {_bae ,_aedf :=_ebd ._gdef .DecodeInt (_ebd ._fbdc );if _aedf !=nil {return _aedf ;};_cffg =int64 (_bae );};if _cffg > 1{return _ebd .decodeThroughTextRegion (_caac ,_fdcf ,uint32 (_cffg ));}else if _cffg ==1{return _ebd .decodeRefinedSymbol (_caac ,_fdcf );};return nil ;};type SegmentEncoder interface{Encode (_bbac _ec .BinaryWriter )(_adeb int ,_geae error );};func (_efce *TextRegion )GetRegionInfo ()*RegionSegment {return _efce .RegionInfo };var _ SegmentEncoder =&RegionSegment {};func (_bbbf *TextRegion )String ()string {_fbcf :=&_b .Builder {};_fbcf .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_fbcf .WriteString (_bbbf .RegionInfo .String ()+"\u000a");_fbcf .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_bbbf .SbrTemplate ));_fbcf .WriteString (_g .Sprintf ("\u0009-\u0020S\u0062\u0064\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_bbbf .SbdsOffset ));_fbcf .WriteString (_g .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_bbbf .DefaultPixel ));_fbcf .WriteString (_g .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_bbbf .CombinationOperator ));_fbcf .WriteString (_g .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_bbbf .IsTransposed ));_fbcf .WriteString (_g .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bbbf .ReferenceCorner ));_fbcf .WriteString (_g .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_bbbf .UseRefinement ));_fbcf .WriteString (_g .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_bbbf .IsHuffmanEncoded ));if _bbbf .IsHuffmanEncoded {_fbcf .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bbbf .SbHuffRSize ));_fbcf .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_bbbf .SbHuffRDY ));_fbcf .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_bbbf .SbHuffRDX ));_fbcf .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_bbbf .SbHuffRDHeight ));_fbcf .WriteString (_g .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_bbbf .SbHuffRDWidth ));_fbcf .WriteString (_g .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_bbbf .SbHuffDT ));_fbcf .WriteString (_g .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_bbbf .SbHuffDS ));_fbcf .WriteString (_g .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_bbbf .SbHuffFS ));};_fbcf .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bbbf .SbrATX ));_fbcf .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_bbbf .SbrATY ));_fbcf .WriteString (_g .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bbbf .NumberOfSymbolInstances ));_fbcf .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bbbf .SbrATX ));return _fbcf .String ();};func (_baf *template1 )form (_cafg ,_abfd ,_eaad ,_fgdf ,_gec int16 )int16 {return ((_cafg &0x02)<<8)|(_abfd <<6)|((_eaad &0x03)<<4)|(_fgdf <<1)|_gec ;};func (_agg *HalftoneRegion )GetPatterns ()([]*_ga .Bitmap ,error ){var (_ged []*_ga .Bitmap ;_aff error ;);for _ ,_cde :=range _agg ._ffae .RTSegments {var _ffceb Segmenter ;_ffceb ,_aff =_cde .GetSegmentData ();if _aff !=nil {_aa .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_aff );return nil ,_aff ;};_gbbc ,_gceb :=_ffceb .(*PatternDictionary );if !_gceb {_aff =_g .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_ffceb );return nil ,_aff ;};var _eggc []*_ga .Bitmap ;_eggc ,_aff =_gbbc .GetDictionary ();if _aff !=nil {_aa .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_aff );return nil ,_aff ;};_ged =append (_ged ,_eggc ...);};return _ged ,nil ;};func (_bbgc *PatternDictionary )readPatternWidthAndHeight ()error {_eedeb ,_beef :=_bbgc ._ggfb .ReadByte ();if _beef !=nil {return _beef ;};_bbgc .HdpWidth =_eedeb ;_eedeb ,_beef =_bbgc ._ggfb .ReadByte ();if _beef !=nil {return _beef ;};_bbgc .HdpHeight =_eedeb ;return nil ;};func (_bged *SymbolDictionary )Init (h *Header ,r _ec .StreamReader )error {_bged .Header =h ;_bged ._gggb =r ;return _bged .parseHeader ();};func _agdea (_acbf _ec .StreamReader ,_dgfd *Header )*TextRegion {_eaea :=&TextRegion {_fbbf :_acbf ,Header :_dgfd ,RegionInfo :NewRegionSegment (_acbf )};return _eaea ;};type TextRegion struct{_fbbf _ec .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbdsOffset int8 ;DefaultPixel int8 ;CombinationOperator _ga .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_afee int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_ga .Bitmap ;Symbols []*_ga .Bitmap ;_cafe *_gc .Decoder ;_cfebc *GenericRefinementRegion ;_aafe *_gc .DecoderStats ;_dbed *_gc .DecoderStats ;_dfde *_gc .DecoderStats ;_abgb *_gc .DecoderStats ;_afaf *_gc .DecoderStats ;_egaf *_gc .DecoderStats ;_ageg *_gc .DecoderStats ;_cecga *_gc .DecoderStats ;_edae *_gc .DecoderStats ;_gecf *_gc .DecoderStats ;_cacaa *_gc .DecoderStats ;_gadg int8 ;_bbcgg *_gf .FixedSizeTable ;Header *Header ;_daba _gf .Tabler ;_bcfd _gf .Tabler ;_dagg _gf .Tabler ;_begb _gf .Tabler ;_egbfc _gf .Tabler ;_eeagb _gf .Tabler ;_dedgd _gf .Tabler ;_bddg _gf .Tabler ;_ggae ,_feff map[int ]int ;_dfce []int ;_deggg *_ga .Points ;_bcfdc *_ga .Bitmaps ;_acfg *_ce .IntSlice ;_gca ,_eecc int ;_ddag *_ga .Boxes ;};func (_dfb *GenericRegion )decodeSLTP ()(int ,error ){switch _dfb .GBTemplate {case 0:_dfb ._ccbe .SetIndex (0x9B25);case 1:_dfb ._ccbe .SetIndex (0x795);case 2:_dfb ._ccbe .SetIndex (0xE5);case 3:_dfb ._ccbe .SetIndex (0x195);};return _dfb ._aaa .DecodeBit (_dfb ._ccbe );};func (_caad *PageInformationSegment )readCombinationOperator ()error {_adeec ,_caca :=_caad ._fgbf .ReadBits (2);if _caca !=nil {return _caca ;};_caad ._faebd =_ga .CombinationOperator (int (_adeec ));return nil ;};func (_cdgc *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_cdgc .SdHuffAggInstanceSelection {_abdb ,_ffag :=_gf .GetStandardTable (1);if _ffag !=nil {return 0,_ffag ;};return _abdb .Decode (_cdgc ._gggb );};if _cdgc ._affg ==nil {var (_agfe int ;_fddg error ;);if _cdgc .SdHuffDecodeHeightSelection ==3{_agfe ++;};if _cdgc .SdHuffDecodeWidthSelection ==3{_agfe ++;};if _cdgc .SdHuffBMSizeSelection ==3{_agfe ++;};_cdgc ._affg ,_fddg =_cdgc .getUserTable (_agfe );if _fddg !=nil {return 0,_fddg ;};};return _cdgc ._affg .Decode (_cdgc ._gggb );};func (_eae *GenericRefinementRegion )Init (header *Header ,r _ec .StreamReader )error {_eae ._cc =header ;_eae ._deb =r ;_eae .RegionInfo =NewRegionSegment (r );return _eae .parseHeader ();};func (_beff *SymbolDictionary )readAtPixels (_bgba int )error {_beff .SdATX =make ([]int8 ,_bgba );_beff .SdATY =make ([]int8 ,_bgba );var (_adfb byte ;_dgfa error ;);for _bdcfd :=0;_bdcfd < _bgba ;_bdcfd ++{_adfb ,_dgfa =_beff ._gggb .ReadByte ();if _dgfa !=nil {return _dgfa ;};_beff .SdATX [_bdcfd ]=int8 (_adfb );_adfb ,_dgfa =_beff ._gggb .ReadByte ();if _dgfa !=nil {return _dgfa ;};_beff .SdATY [_bdcfd ]=int8 (_adfb );};return nil ;};func (_egcd *SymbolDictionary )decodeHeightClassBitmap (_feae *_ga .Bitmap ,_fdd int64 ,_adbab int ,_dadf []int )error {for _gdde :=_fdd ;_gdde < int64 (_egcd ._cdbd );_gdde ++{var _deba int ;for _acfa :=_fdd ;_acfa <=_gdde -1;_acfa ++{_deba +=_dadf [_acfa ];};_agfd :=_c .Rect (_deba ,0,_deba +_dadf [_gdde ],_adbab );_bec ,_adfee :=_ga .Extract (_agfd ,_feae );if _adfee !=nil {return _adfee ;};_egcd ._edg [_gdde ]=_bec ;_egcd ._add =append (_egcd ._add ,_bec );};return nil ;};type template1 struct{};type TableSegment struct{_fbee _ec .StreamReader ;_cbedc int32 ;_aada int32 ;_bceb int32 ;_aedb int32 ;_facb int32 ;};func (_cdg *GenericRefinementRegion )decodeTypicalPredictedLine (_adae ,_dcc ,_dgf ,_fg ,_cg ,_ca int )error {_eab :=_adae -int (_cdg .ReferenceDY );_ffe :=_cdg .ReferenceBitmap .GetByteIndex (0,_eab );_dfg :=_cdg .RegionBitmap .GetByteIndex (0,_adae );var _af error ;switch _cdg .TemplateID {case 0:_af =_cdg .decodeTypicalPredictedLineTemplate0 (_adae ,_dcc ,_dgf ,_fg ,_cg ,_ca ,_dfg ,_eab ,_ffe );case 1:_af =_cdg .decodeTypicalPredictedLineTemplate1 (_adae ,_dcc ,_dgf ,_fg ,_cg ,_ca ,_dfg ,_eab ,_ffe );};return _af ;};func (_gfee *PageInformationSegment )DefaultPixelValue ()uint8 {return _gfee ._cfeag };func (_gcd *GenericRefinementRegion )decodeTemplate (_dcg ,_adb ,_fcbe ,_eef ,_dgc ,_cac ,_bga ,_gbf ,_cba ,_aab int ,_fgd templater )(_gbfd error ){var (_fae ,_bbcg ,_cbe ,_ddd ,_bed int16 ;_cf ,_bca ,_dfa ,_efe int ;_ba byte ;);if _cba >=1&&(_cba -1)< _gcd .ReferenceBitmap .Height {_ba ,_gbfd =_gcd .ReferenceBitmap .GetByte (_aab -_eef );if _gbfd !=nil {return ;};_cf =int (_ba );};if _cba >=0&&(_cba )< _gcd .ReferenceBitmap .Height {_ba ,_gbfd =_gcd .ReferenceBitmap .GetByte (_aab );if _gbfd !=nil {return ;};_bca =int (_ba );};if _cba >=-1&&(_cba +1)< _gcd .ReferenceBitmap .Height {_ba ,_gbfd =_gcd .ReferenceBitmap .GetByte (_aab +_eef );if _gbfd !=nil {return ;};_dfa =int (_ba );};_aab ++;if _dcg >=1{_ba ,_gbfd =_gcd .RegionBitmap .GetByte (_gbf -_fcbe );if _gbfd !=nil {return ;};_efe =int (_ba );};_gbf ++;_aad :=_gcd .ReferenceDX %8;_egc :=6+_aad ;_gdf :=_aab %_eef ;if _egc >=0{if _egc < 8{_fae =int16 (_cf >>uint (_egc ))&0x07;};if _egc < 8{_bbcg =int16 (_bca >>uint (_egc ))&0x07;};if _egc < 8{_cbe =int16 (_dfa >>uint (_egc ))&0x07;};if _egc ==6&&_gdf > 1{if _cba >=1&&(_cba -1)< _gcd .ReferenceBitmap .Height {_ba ,_gbfd =_gcd .ReferenceBitmap .GetByte (_aab -_eef -2);if _gbfd !=nil {return _gbfd ;};_fae |=int16 (_ba <<2)&0x04;};if _cba >=0&&_cba < _gcd .ReferenceBitmap .Height {_ba ,_gbfd =_gcd .ReferenceBitmap .GetByte (_aab -2);if _gbfd !=nil {return _gbfd ;};_bbcg |=int16 (_ba <<2)&0x04;};if _cba >=-1&&_cba +1< _gcd .ReferenceBitmap .Height {_ba ,_gbfd =_gcd .ReferenceBitmap .GetByte (_aab +_eef -2);if _gbfd !=nil {return _gbfd ;};_cbe |=int16 (_ba <<2)&0x04;};};if _egc ==0{_cf =0;_bca =0;_dfa =0;if _gdf < _eef -1{if _cba >=1&&_cba -1< _gcd .ReferenceBitmap .Height {_ba ,_gbfd =_gcd .ReferenceBitmap .GetByte (_aab -_eef );if _gbfd !=nil {return _gbfd ;};_cf =int (_ba );};if _cba >=0&&_cba < _gcd .ReferenceBitmap .Height {_ba ,_gbfd =_gcd .ReferenceBitmap .GetByte (_aab );if _gbfd !=nil {return _gbfd ;};_bca =int (_ba );};if _cba >=-1&&_cba +1< _gcd .ReferenceBitmap .Height {_ba ,_gbfd =_gcd .ReferenceBitmap .GetByte (_aab +_eef );if _gbfd !=nil {return _gbfd ;};_dfa =int (_ba );};};_aab ++;};}else {_fae =int16 (_cf <<1)&0x07;_bbcg =int16 (_bca <<1)&0x07;_cbe =int16 (_dfa <<1)&0x07;_cf =0;_bca =0;_dfa =0;if _gdf < _eef -1{if _cba >=1&&_cba -1< _gcd .ReferenceBitmap .Height {_ba ,_gbfd =_gcd .ReferenceBitmap .GetByte (_aab -_eef );if _gbfd !=nil {return _gbfd ;};_cf =int (_ba );};if _cba >=0&&_cba < _gcd .ReferenceBitmap .Height {_ba ,_gbfd =_gcd .ReferenceBitmap .GetByte (_aab );if _gbfd !=nil {return _gbfd ;};_bca =int (_ba );};if _cba >=-1&&_cba +1< _gcd .ReferenceBitmap .Height {_ba ,_gbfd =_gcd .ReferenceBitmap .GetByte (_aab +_eef );if _gbfd !=nil {return _gbfd ;};_dfa =int (_ba );};_aab ++;};_fae |=int16 ((_cf >>7)&0x07);_bbcg |=int16 ((_bca >>7)&0x07);_cbe |=int16 ((_dfa >>7)&0x07);};_ddd =int16 (_efe >>6);_bed =0;_cfe :=(2-_aad )%8;_cf <<=uint (_cfe );_bca <<=uint (_cfe );_dfa <<=uint (_cfe );_efe <<=2;var _agbf int ;for _ccaa :=0;_ccaa < _adb ;_ccaa ++{_gce :=_ccaa &0x07;_acb :=_fgd .form (_fae ,_bbcg ,_cbe ,_ddd ,_bed );if _gcd ._bgd {_ba ,_gbfd =_gcd .RegionBitmap .GetByte (_gcd .RegionBitmap .GetByteIndex (_ccaa ,_dcg ));if _gbfd !=nil {return _gbfd ;};_gcd ._gg .SetIndex (int32 (_gcd .overrideAtTemplate0 (int (_acb ),_ccaa ,_dcg ,int (_ba ),_gce )));}else {_gcd ._gg .SetIndex (int32 (_acb ));};_agbf ,_gbfd =_gcd ._gcg .DecodeBit (_gcd ._gg );if _gbfd !=nil {return _gbfd ;};if _gbfd =_gcd .RegionBitmap .SetPixel (_ccaa ,_dcg ,byte (_agbf ));_gbfd !=nil {return _gbfd ;};_fae =((_fae <<1)|0x01&int16 (_cf >>7))&0x07;_bbcg =((_bbcg <<1)|0x01&int16 (_bca >>7))&0x07;_cbe =((_cbe <<1)|0x01&int16 (_dfa >>7))&0x07;_ddd =((_ddd <<1)|0x01&int16 (_efe >>7))&0x07;_bed =int16 (_agbf );if (_ccaa -int (_gcd .ReferenceDX ))%8==5{_cf =0;_bca =0;_dfa =0;if ((_ccaa -int (_gcd .ReferenceDX ))/8)+1< _gcd .ReferenceBitmap .RowStride {if _cba >=1&&(_cba -1)< _gcd .ReferenceBitmap .Height {_ba ,_gbfd =_gcd .ReferenceBitmap .GetByte (_aab -_eef );if _gbfd !=nil {return _gbfd ;};_cf =int (_ba );};if _cba >=0&&_cba < _gcd .ReferenceBitmap .Height {_ba ,_gbfd =_gcd .ReferenceBitmap .GetByte (_aab );if _gbfd !=nil {return _gbfd ;};_bca =int (_ba );};if _cba >=-1&&(_cba +1)< _gcd .ReferenceBitmap .Height {_ba ,_gbfd =_gcd .ReferenceBitmap .GetByte (_aab +_eef );if _gbfd !=nil {return _gbfd ;};_dfa =int (_ba );};};_aab ++;}else {_cf <<=1;_bca <<=1;_dfa <<=1;};if _gce ==5&&_dcg >=1{if ((_ccaa >>3)+1)>=_gcd .RegionBitmap .RowStride {_efe =0;}else {_ba ,_gbfd =_gcd .RegionBitmap .GetByte (_gbf -_fcbe );if _gbfd !=nil {return _gbfd ;};_efe =int (_ba );};_gbf ++;}else {_efe <<=1;};};return nil ;};func (_gea *GenericRegion )updateOverrideFlags ()error {const _daa ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _gea .GBAtX ==nil ||_gea .GBAtY ==nil {return nil ;};if len (_gea .GBAtX )!=len (_gea .GBAtY ){return _fa .Errorf (_daa ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_gea .GBAtX ),len (_gea .GBAtY ));};_gea .GBAtOverride =make ([]bool ,len (_gea .GBAtX ));switch _gea .GBTemplate {case 0:if !_gea .UseExtTemplates {if _gea .GBAtX [0]!=3||_gea .GBAtY [0]!=-1{_gea .setOverrideFlag (0);};if _gea .GBAtX [1]!=-3||_gea .GBAtY [1]!=-1{_gea .setOverrideFlag (1);};if _gea .GBAtX [2]!=2||_gea .GBAtY [2]!=-2{_gea .setOverrideFlag (2);};if _gea .GBAtX [3]!=-2||_gea .GBAtY [3]!=-2{_gea .setOverrideFlag (3);};}else {if _gea .GBAtX [0]!=-2||_gea .GBAtY [0]!=0{_gea .setOverrideFlag (0);};if _gea .GBAtX [1]!=0||_gea .GBAtY [1]!=-2{_gea .setOverrideFlag (1);};if _gea .GBAtX [2]!=-2||_gea .GBAtY [2]!=-1{_gea .setOverrideFlag (2);};if _gea .GBAtX [3]!=-1||_gea .GBAtY [3]!=-2{_gea .setOverrideFlag (3);};if _gea .GBAtX [4]!=1||_gea .GBAtY [4]!=-2{_gea .setOverrideFlag (4);};if _gea .GBAtX [5]!=2||_gea .GBAtY [5]!=-1{_gea .setOverrideFlag (5);};if _gea .GBAtX [6]!=-3||_gea .GBAtY [6]!=0{_gea .setOverrideFlag (6);};if _gea .GBAtX [7]!=-4||_gea .GBAtY [7]!=0{_gea .setOverrideFlag (7);};if _gea .GBAtX [8]!=2||_gea .GBAtY [8]!=-2{_gea .setOverrideFlag (8);};if _gea .GBAtX [9]!=3||_gea .GBAtY [9]!=-1{_gea .setOverrideFlag (9);};if _gea .GBAtX [10]!=-2||_gea .GBAtY [10]!=-2{_gea .setOverrideFlag (10);};if _gea .GBAtX [11]!=-3||_gea .GBAtY [11]!=-1{_gea .setOverrideFlag (11);};};case 1:if _gea .GBAtX [0]!=3||_gea .GBAtY [0]!=-1{_gea .setOverrideFlag (0);};case 2:if _gea .GBAtX [0]!=2||_gea .GBAtY [0]!=-1{_gea .setOverrideFlag (0);};case 3:if _gea .GBAtX [0]!=2||_gea .GBAtY [0]!=-1{_gea .setOverrideFlag (0);};};return nil ;};var _ SegmentEncoder =&GenericRegion {};func (_fccb *PatternDictionary )setGbAtPixels (){if _fccb .HDTemplate ==0{_fccb .GBAtX =make ([]int8 ,4);_fccb .GBAtY =make ([]int8 ,4);_fccb .GBAtX [0]=-int8 (_fccb .HdpWidth );_fccb .GBAtY [0]=0;_fccb .GBAtX [1]=-3;_fccb .GBAtY [1]=-1;_fccb .GBAtX [2]=2;_fccb .GBAtY [2]=-2;_fccb .GBAtX [3]=-2;_fccb .GBAtY [3]=-2;}else {_fccb .GBAtX =[]int8 {-int8 (_fccb .HdpWidth )};_fccb .GBAtY =[]int8 {0};};};func (_afgc *PageInformationSegment )readIsLossless ()error {_cfddg ,_eggcb :=_afgc ._fgbf .ReadBit ();if _eggcb !=nil {return _eggcb ;};if _cfddg ==1{_afgc .IsLossless =true ;};return nil ;};func (_ccf *PageInformationSegment )readDefaultPixelValue ()error {_bcfgb ,_ceff :=_ccf ._fgbf .ReadBit ();if _ceff !=nil {return _ceff ;};_ccf ._cfeag =uint8 (_bcfgb &0xf);return nil ;};func (_aeac *TextRegion )GetRegionBitmap ()(*_ga .Bitmap ,error ){if _aeac .RegionBitmap !=nil {return _aeac .RegionBitmap ,nil ;};if !_aeac .IsHuffmanEncoded {if _agae :=_aeac .setCodingStatistics ();_agae !=nil {return nil ,_agae ;};};if _cfbea :=_aeac .createRegionBitmap ();_cfbea !=nil {return nil ,_cfbea ;};if _afaea :=_aeac .decodeSymbolInstances ();_afaea !=nil {return nil ,_afaea ;};return _aeac .RegionBitmap ,nil ;};func (_debb *TextRegion )symbolIDCodeLengths ()error {var (_befed []*_gf .Code ;_gfdda uint64 ;_fedf _gf .Tabler ;_cbfg error ;);for _bbadb :=0;_bbadb < 35;_bbadb ++{_gfdda ,_cbfg =_debb ._fbbf .ReadBits (4);if _cbfg !=nil {return _cbfg ;};_cagc :=int (_gfdda &0xf);if _cagc > 0{_befed =append (_befed ,_gf .NewCode (int32 (_cagc ),0,int32 (_bbadb ),false ));};};_fedf ,_cbfg =_gf .NewFixedSizeTable (_befed );if _cbfg !=nil {return _cbfg ;};var (_gddf int64 ;_baga uint32 ;_bcca []*_gf .Code ;_adff int64 ;);for _baga < _debb .NumberOfSymbols {_adff ,_cbfg =_fedf .Decode (_debb ._fbbf );if _cbfg !=nil {return _cbfg ;};if _adff < 32{if _adff > 0{_bcca =append (_bcca ,_gf .NewCode (int32 (_adff ),0,int32 (_baga ),false ));};_gddf =_adff ;_baga ++;}else {var _gagd ,_beec int64 ;switch _adff {case 32:_gfdda ,_cbfg =_debb ._fbbf .ReadBits (2);if _cbfg !=nil {return _cbfg ;};_gagd =3+int64 (_gfdda );if _baga > 0{_beec =_gddf ;};case 33:_gfdda ,_cbfg =_debb ._fbbf .ReadBits (3);if _cbfg !=nil {return _cbfg ;};_gagd =3+int64 (_gfdda );case 34:_gfdda ,_cbfg =_debb ._fbbf .ReadBits (7);if _cbfg !=nil {return _cbfg ;};_gagd =11+int64 (_gfdda );};for _caacd :=0;_caacd < int (_gagd );_caacd ++{if _beec > 0{_bcca =append (_bcca ,_gf .NewCode (int32 (_beec ),0,int32 (_baga ),false ));};_baga ++;};};};_debb ._fbbf .Align ();_debb ._bbcgg ,_cbfg =_gf .NewFixedSizeTable (_bcca );return _cbfg ;};func (_gfed *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_abe ,_bge :=_gfed ._fgbf .ReadBit ();if _bge !=nil {return _bge ;};if _abe ==1{_gfed ._efbab =true ;};return nil ;};func (_cfee *SymbolDictionary )setRetainedCodingContexts (_eebaa *SymbolDictionary ){_cfee ._gdef =_eebaa ._gdef ;_cfee .IsHuffmanEncoded =_eebaa .IsHuffmanEncoded ;_cfee .UseRefinementAggregation =_eebaa .UseRefinementAggregation ;_cfee .SdTemplate =_eebaa .SdTemplate ;_cfee .SdrTemplate =_eebaa .SdrTemplate ;_cfee .SdATX =_eebaa .SdATX ;_cfee .SdATY =_eebaa .SdATY ;_cfee .SdrATX =_eebaa .SdrATX ;_cfee .SdrATY =_eebaa .SdrATY ;_cfee ._bcee =_eebaa ._bcee ;};func (_cade *TextRegion )blit (_bded *_ga .Bitmap ,_bcdb int64 )error {if _cade .IsTransposed ==0&&(_cade .ReferenceCorner ==2||_cade .ReferenceCorner ==3){_cade ._afee +=int64 (_bded .Width -1);}else if _cade .IsTransposed ==1&&(_cade .ReferenceCorner ==0||_cade .ReferenceCorner ==2){_cade ._afee +=int64 (_bded .Height -1);};_adfd :=_cade ._afee ;if _cade .IsTransposed ==1{_adfd ,_bcdb =_bcdb ,_adfd ;};switch _cade .ReferenceCorner {case 0:_bcdb -=int64 (_bded .Height -1);case 2:_bcdb -=int64 (_bded .Height -1);_adfd -=int64 (_bded .Width -1);case 3:_adfd -=int64 (_bded .Width -1);};_fgfg :=_ga .Blit (_bded ,_cade .RegionBitmap ,int (_adfd ),int (_bcdb ),_cade .CombinationOperator );if _fgfg !=nil {return _fgfg ;};if _cade .IsTransposed ==0&&(_cade .ReferenceCorner ==0||_cade .ReferenceCorner ==1){_cade ._afee +=int64 (_bded .Width -1);};if _cade .IsTransposed ==1&&(_cade .ReferenceCorner ==1||_cade .ReferenceCorner ==3){_cade ._afee +=int64 (_bded .Height -1);};return nil ;};func (_abaf *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _abaf .IsHuffmanEncoded {return _abaf .decodeHeightClassDeltaHeightWithHuffman ();};_aee ,_faef :=_abaf ._gdef .DecodeInt (_abaf ._bffa );if _faef !=nil {return 0,_faef ;};return int64 (_aee ),nil ;};func (_ebae *PageInformationSegment )Size ()int {return 19};func (_fcff *TextRegion )parseHeader ()error {var _gfab error ;_aa .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _gfab !=nil {_aa .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_gfab );}else {_aa .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _gfab =_fcff .RegionInfo .parseHeader ();_gfab !=nil {return _gfab ;};if _gfab =_fcff .readRegionFlags ();_gfab !=nil {return _gfab ;};if _fcff .IsHuffmanEncoded {if _gfab =_fcff .readHuffmanFlags ();_gfab !=nil {return _gfab ;};};if _gfab =_fcff .readUseRefinement ();_gfab !=nil {return _gfab ;};if _gfab =_fcff .readAmountOfSymbolInstances ();_gfab !=nil {return _gfab ;};if _gfab =_fcff .getSymbols ();_gfab !=nil {return _gfab ;};if _gfab =_fcff .computeSymbolCodeLength ();_gfab !=nil {return _gfab ;};if _gfab =_fcff .checkInput ();_gfab !=nil {return _gfab ;};_aa .Log .Trace ("\u0025\u0073",_fcff .String ());return nil ;};func (_effg *Header )GetSegmentData ()(Segmenter ,error ){var _dced Segmenter ;if _effg .SegmentData !=nil {_dced =_effg .SegmentData ;};if _dced ==nil {_cff ,_gfb :=_cfdce [_effg .Type ];if !_gfb {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_effg .Type ,_effg .Type );};_dced =_cff ();_aa .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_effg .SegmentNumber ,_effg .SegmentDataStartOffset );_fggd ,_dbgg :=_effg .subInputReader ();if _dbgg !=nil {return nil ,_dbgg ;};if _faecb :=_dced .Init (_effg ,_fggd );_faecb !=nil {_aa .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_faecb ,_dced );return nil ,_faecb ;};_effg .SegmentData =_dced ;};return _dced ,nil ;};func (_dcga *Header )readDataStartOffset (_dccga _ec .StreamReader ,_dcad OrganizationType ){if _dcad ==OSequential {_dcga .SegmentDataStartOffset =uint64 (_dccga .StreamPosition ());};};func (_dfge *TextRegion )encodeFlags (_dbgf _ec .BinaryWriter )(_abff int ,_cdcb error ){const _ggggc ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _cdcb =_dbgf .WriteBit (int (_dfge .SbrTemplate ));_cdcb !=nil {return _abff ,_fa .Wrap (_cdcb ,_ggggc ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_cdcb =_dbgf .WriteBits (uint64 (_dfge .SbdsOffset ),5);_cdcb !=nil {return _abff ,_fa .Wrap (_cdcb ,_ggggc ,"\u0073\u0062\u0064\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _cdcb =_dbgf .WriteBit (int (_dfge .DefaultPixel ));_cdcb !=nil {return _abff ,_fa .Wrap (_cdcb ,_ggggc ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_cdcb =_dbgf .WriteBits (uint64 (_dfge .CombinationOperator ),2);_cdcb !=nil {return _abff ,_fa .Wrap (_cdcb ,_ggggc ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _cdcb =_dbgf .WriteBit (int (_dfge .IsTransposed ));_cdcb !=nil {return _abff ,_fa .Wrap (_cdcb ,_ggggc ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_cdcb =_dbgf .WriteBits (uint64 (_dfge .ReferenceCorner ),2);_cdcb !=nil {return _abff ,_fa .Wrap (_cdcb ,_ggggc ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_cdcb =_dbgf .WriteBits (uint64 (_dfge .LogSBStrips ),2);_cdcb !=nil {return _abff ,_fa .Wrap (_cdcb ,_ggggc ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _abea int ;if _dfge .UseRefinement {_abea =1;};if _cdcb =_dbgf .WriteBit (_abea );_cdcb !=nil {return _abff ,_fa .Wrap (_cdcb ,_ggggc ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_abea =0;if _dfge .IsHuffmanEncoded {_abea =1;};if _cdcb =_dbgf .WriteBit (_abea );_cdcb !=nil {return _abff ,_fa .Wrap (_cdcb ,_ggggc ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_abff =2;return _abff ,nil ;};func (_cadf *TableSegment )parseHeader ()error {var (_gaea int ;_gdcfa uint64 ;_gfbb error ;);_gaea ,_gfbb =_cadf ._fbee .ReadBit ();if _gfbb !=nil {return _gfbb ;};if _gaea ==1{return _g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_gaea );};if _gdcfa ,_gfbb =_cadf ._fbee .ReadBits (3);_gfbb !=nil {return _gfbb ;};_cadf ._bceb =(int32 (_gdcfa )+1)&0xf;if _gdcfa ,_gfbb =_cadf ._fbee .ReadBits (3);_gfbb !=nil {return _gfbb ;};_cadf ._aada =(int32 (_gdcfa )+1)&0xf;if _gdcfa ,_gfbb =_cadf ._fbee .ReadBits (32);_gfbb !=nil {return _gfbb ;};_cadf ._aedb =int32 (_gdcfa &_d .MaxInt32 );if _gdcfa ,_gfbb =_cadf ._fbee .ReadBits (32);_gfbb !=nil {return _gfbb ;};_cadf ._facb =int32 (_gdcfa &_d .MaxInt32 );return nil ;};func (_ebg *Header )writeReferredToSegments (_eabe _ec .BinaryWriter )(_ceeca int ,_bgag error ){const _caeb ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_faeb uint16 ;_cdga uint32 ;);_eceef :=_ebg .referenceSize ();_cbfd :=1;_gcbf :=make ([]byte ,_eceef );for _ ,_cgce :=range _ebg .RTSNumbers {switch _eceef {case 4:_cdga =uint32 (_cgce );_e .BigEndian .PutUint32 (_gcbf ,_cdga );_cbfd ,_bgag =_eabe .Write (_gcbf );if _bgag !=nil {return 0,_fa .Wrap (_bgag ,_caeb ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_faeb =uint16 (_cgce );_e .BigEndian .PutUint16 (_gcbf ,_faeb );_cbfd ,_bgag =_eabe .Write (_gcbf );if _bgag !=nil {return 0,_fa .Wrap (_bgag ,_caeb ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _bgag =_eabe .WriteByte (byte (_cgce ));_bgag !=nil {return 0,_fa .Wrap (_bgag ,_caeb ,"\u0075\u0069\u006et\u0038");};};_ceeca +=_cbfd ;};return _ceeca ,nil ;};func (_fdfc *SymbolDictionary )setRefinementAtPixels ()error {if !_fdfc .UseRefinementAggregation ||_fdfc .SdrTemplate !=0{return nil ;};if _aagc :=_fdfc .readRefinementAtPixels (2);_aagc !=nil {return _aagc ;};return nil ;};func (_gegc *TableSegment )HtOOB ()int32 {return _gegc ._cbedc };func (_cbge *TextRegion )decodeRdx ()(int64 ,error ){const _accea ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _cbge .IsHuffmanEncoded {if _cbge .SbHuffRDX ==3{if _cbge ._eeagb ==nil {var (_ebbd int ;_adeda error ;);if _cbge .SbHuffFS ==3{_ebbd ++;};if _cbge .SbHuffDS ==3{_ebbd ++;};if _cbge .SbHuffDT ==3{_ebbd ++;};if _cbge .SbHuffRDWidth ==3{_ebbd ++;};if _cbge .SbHuffRDHeight ==3{_ebbd ++;};_cbge ._eeagb ,_adeda =_cbge .getUserTable (_ebbd );if _adeda !=nil {return 0,_fa .Wrap (_adeda ,_accea ,"");};};return _cbge ._eeagb .Decode (_cbge ._fbbf );};_bdf ,_gbbbd :=_gf .GetStandardTable (14+int (_cbge .SbHuffRDX ));if _gbbbd !=nil {return 0,_fa .Wrap (_gbbbd ,_accea ,"");};return _bdf .Decode (_cbge ._fbbf );};_gcae ,_aacaa :=_cbge ._cafe .DecodeInt (_cbge ._edae );if _aacaa !=nil {return 0,_fa .Wrap (_aacaa ,_accea ,"");};return int64 (_gcae ),nil ;};func (_ffda *SymbolDictionary )InitEncode (symbols *_ga .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _bcae ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";_ffda .SdATX =[]int8 {3,-3,2,-2};_ffda .SdATY =[]int8 {-1,-1,-2,-2};_ffda ._fdbaf =symbols ;_ffda ._fbega =make ([]int ,len (symbolList ));copy (_ffda ._fbega ,symbolList );if len (_ffda ._fbega )!=_ffda ._fdbaf .Size (){return _fa .Error (_bcae ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");};_ffda .NumberOfNewSymbols =uint32 (symbols .Size ());_ffda .NumberOfExportedSymbols =uint32 (symbols .Size ());_ffda ._eabge =symbolMap ;_ffda ._eeba =unborderSymbols ;return nil ;};type EncodeInitializer interface{InitEncode ();};func (_bffb *SymbolDictionary )getUserTable (_bgedf int )(_gf .Tabler ,error ){var _gabb int ;for _ ,_defg :=range _bffb .Header .RTSegments {if _defg .Type ==53{if _gabb ==_bgedf {_ggab ,_egec :=_defg .GetSegmentData ();if _egec !=nil {return nil ,_egec ;};_egcc :=_ggab .(_gf .BasicTabler );return _gf .NewEncodedTable (_egcc );};_gabb ++;};};return nil ,nil ;};func (_dffb *Header )readSegmentNumber (_dgfb _ec .StreamReader )error {const _ebc ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_egge :=make ([]byte ,4);_ ,_fdba :=_dgfb .Read (_egge );if _fdba !=nil {return _fa .Wrap (_fdba ,_ebc ,"");};_dffb .SegmentNumber =_e .BigEndian .Uint32 (_egge );return nil ;};func (_gfff *TextRegion )decodeRdw ()(int64 ,error ){const _faaf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _gfff .IsHuffmanEncoded {if _gfff .SbHuffRDWidth ==3{if _gfff ._begb ==nil {var (_degge int ;_afab error ;);if _gfff .SbHuffFS ==3{_degge ++;};if _gfff .SbHuffDS ==3{_degge ++;};if _gfff .SbHuffDT ==3{_degge ++;};_gfff ._begb ,_afab =_gfff .getUserTable (_degge );if _afab !=nil {return 0,_fa .Wrap (_afab ,_faaf ,"");};};return _gfff ._begb .Decode (_gfff ._fbbf );};_cffe ,_eeca :=_gf .GetStandardTable (14+int (_gfff .SbHuffRDWidth ));if _eeca !=nil {return 0,_fa .Wrap (_eeca ,_faaf ,"");};return _cffe .Decode (_gfff ._fbbf );};_ceac ,_bafd :=_gfff ._cafe .DecodeInt (_gfff ._egaf );if _bafd !=nil {return 0,_fa .Wrap (_bafd ,_faaf ,"");};return int64 (_ceac ),nil ;};func (_gdgg *PatternDictionary )GetDictionary ()([]*_ga .Bitmap ,error ){if _gdgg .Patterns !=nil {return _gdgg .Patterns ,nil ;};if !_gdgg .IsMMREncoded {_gdgg .setGbAtPixels ();};_ccbf :=NewGenericRegion (_gdgg ._ggfb );_ccbf .setParametersMMR (_gdgg .IsMMREncoded ,_gdgg .DataOffset ,_gdgg .DataLength ,uint32 (_gdgg .HdpHeight ),(_gdgg .GrayMax +1)*uint32 (_gdgg .HdpWidth ),_gdgg .HDTemplate ,false ,false ,_gdgg .GBAtX ,_gdgg .GBAtY );_fffg ,_ggca :=_ccbf .GetRegionBitmap ();if _ggca !=nil {return nil ,_ggca ;};if _ggca =_gdgg .extractPatterns (_fffg );_ggca !=nil {return nil ,_ggca ;};return _gdgg .Patterns ,nil ;};func (_bcbf *TableSegment )HtHigh ()int32 {return _bcbf ._facb };func (_acgag *TextRegion )decodeID ()(int64 ,error ){if _acgag .IsHuffmanEncoded {if _acgag ._bbcgg ==nil {_ccbac ,_fag :=_acgag ._fbbf .ReadBits (byte (_acgag ._gadg ));return int64 (_ccbac ),_fag ;};return _acgag ._bbcgg .Decode (_acgag ._fbbf );};return _acgag ._cafe .DecodeIAID (uint64 (_acgag ._gadg ),_acgag ._cecga );};func (_fed *GenericRegion )overrideAtTemplate2 (_ddbc ,_eeee ,_fdgf ,_fdbc ,_fgee int )int {_ddbc &=0x3FB;if _fed .GBAtY [0]==0&&_fed .GBAtX [0]>=-int8 (_fgee ){_ddbc |=(_fdbc >>uint (7-(int8 (_fgee )+_fed .GBAtX [0]))&0x1)<<2;}else {_ddbc |=int (_fed .getPixel (_eeee +int (_fed .GBAtX [0]),_fdgf +int (_fed .GBAtY [0])))<<2;};return _ddbc ;};func (_gfac *HalftoneRegion )Init (hd *Header ,r _ec .StreamReader )error {_gfac ._deggd =r ;_gfac ._ffae =hd ;_gfac .RegionSegment =NewRegionSegment (r );return _gfac .parseHeader ();};func (_dgg *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_ebf ,_fdgc :=_dgg ._fgbf .ReadBit ();if _fdgc !=nil {return _fdgc ;};if _ebf ==1{_dgg ._bcec =true ;};return nil ;};func (_bgg *EndOfStripe )LineNumber ()int {return _bgg ._de };func (_ggaf *SymbolDictionary )String ()string {_eaagb :=&_b .Builder {};_eaagb .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_eaagb .WriteString (_g .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_ggaf .SdrTemplate ));_eaagb .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_ggaf .SdTemplate ));_eaagb .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_ggaf ._deee ));_eaagb .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_ggaf ._aeab ));_eaagb .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ggaf .SdHuffAggInstanceSelection ));_eaagb .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_ggaf .SdHuffBMSizeSelection ));_eaagb .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ggaf .SdHuffDecodeWidthSelection ));_eaagb .WriteString (_g .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ggaf .SdHuffDecodeHeightSelection ));_eaagb .WriteString (_g .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ggaf .UseRefinementAggregation ));_eaagb .WriteString (_g .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_ggaf .IsHuffmanEncoded ));_eaagb .WriteString (_g .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ggaf .SdATX ));_eaagb .WriteString (_g .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ggaf .SdATY ));_eaagb .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ggaf .SdrATX ));_eaagb .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ggaf .SdrATY ));_eaagb .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ggaf .NumberOfExportedSymbols ));_eaagb .WriteString (_g .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_ggaf .NumberOfNewSymbols ));_eaagb .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ggaf ._edec ));_eaagb .WriteString (_g .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_ggaf ._cdbd ));return _eaagb .String ();};func (_ebcb *SymbolDictionary )checkInput ()error {if _ebcb .SdHuffDecodeHeightSelection ==2{_aa .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069g\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_ebcb .SdHuffDecodeHeightSelection );};if _ebcb .SdHuffDecodeWidthSelection ==2{_aa .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_ebcb .SdHuffDecodeWidthSelection );};if _ebcb .IsHuffmanEncoded {if _ebcb .SdTemplate !=0{_aa .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_ebcb .SdTemplate );};if !_ebcb .UseRefinementAggregation {if !_ebcb .UseRefinementAggregation {if _ebcb ._deee {_aa .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");_ebcb ._deee =false ;};if _ebcb ._aeab {_aa .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");_ebcb ._aeab =false ;};};};}else {if _ebcb .SdHuffBMSizeSelection !=0{_aa .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_ebcb .SdHuffBMSizeSelection =0;};if _ebcb .SdHuffDecodeWidthSelection !=0{_aa .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");_ebcb .SdHuffDecodeWidthSelection =0;};if _ebcb .SdHuffDecodeHeightSelection !=0{_aa .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_ebcb .SdHuffDecodeHeightSelection =0;};};if !_ebcb .UseRefinementAggregation {if _ebcb .SdrTemplate !=0{_aa .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ebcb .SdrTemplate );_ebcb .SdrTemplate =0;};};if !_ebcb .IsHuffmanEncoded ||!_ebcb .UseRefinementAggregation {if _ebcb .SdHuffAggInstanceSelection {_aa .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ebcb .SdHuffAggInstanceSelection );};};return nil ;};func (_eefd *GenericRegion )decodeTemplate1 (_eega ,_bdeg ,_ebe int ,_deg ,_gegd int )(_agfg error ){const _gag ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_agbff ,_bcf int ;_eaf ,_ceec int ;_gcecf byte ;_gfgg ,_gfdd int ;);if _eega >=1{_gcecf ,_agfg =_eefd .Bitmap .GetByte (_gegd );if _agfg !=nil {return _fa .Wrap (_agfg ,_gag ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_eaf =int (_gcecf );};if _eega >=2{_gcecf ,_agfg =_eefd .Bitmap .GetByte (_gegd -_eefd .Bitmap .RowStride );if _agfg !=nil {return _fa .Wrap (_agfg ,_gag ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ceec =int (_gcecf )<<5;};_agbff =((_eaf >>1)&0x1f8)|((_ceec >>1)&0x1e00);for _bef :=0;_bef < _ebe ;_bef =_gfgg {var (_befd byte ;_bbad int ;);_gfgg =_bef +8;if _gdfa :=_bdeg -_bef ;_gdfa > 8{_bbad =8;}else {_bbad =_gdfa ;};if _eega > 0{_eaf <<=8;if _gfgg < _bdeg {_gcecf ,_agfg =_eefd .Bitmap .GetByte (_gegd +1);if _agfg !=nil {return _fa .Wrap (_agfg ,_gag ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_eaf |=int (_gcecf );};};if _eega > 1{_ceec <<=8;if _gfgg < _bdeg {_gcecf ,_agfg =_eefd .Bitmap .GetByte (_gegd -_eefd .Bitmap .RowStride +1);if _agfg !=nil {return _fa .Wrap (_agfg ,_gag ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ceec |=int (_gcecf )<<5;};};for _agbfg :=0;_agbfg < _bbad ;_agbfg ++{if _eefd ._fdc {_bcf =_eefd .overrideAtTemplate1 (_agbff ,_bef +_agbfg ,_eega ,int (_befd ),_agbfg );_eefd ._ccbe .SetIndex (int32 (_bcf ));}else {_eefd ._ccbe .SetIndex (int32 (_agbff ));};_gfdd ,_agfg =_eefd ._aaa .DecodeBit (_eefd ._ccbe );if _agfg !=nil {return _fa .Wrap (_agfg ,_gag ,"");};_befd |=byte (_gfdd )<<uint (7-_agbfg );_adeee :=uint (8-_agbfg );_agbff =((_agbff &0xefb)<<1)|_gfdd |((_eaf >>_adeee )&0x8)|((_ceec >>_adeee )&0x200);};if _ccc :=_eefd .Bitmap .SetByte (_deg ,_befd );_ccc !=nil {return _fa .Wrap (_ccc ,_gag ,"");};_deg ++;_gegd ++;};return nil ;};func (_cea *GenericRefinementRegion )getGrReference ()(*_ga .Bitmap ,error ){segments :=_cea ._cc .RTSegments ;if len (segments )==0{return nil ,_ab .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_ee ,_gbb :=segments [0].GetSegmentData ();if _gbb !=nil {return nil ,_gbb ;};_abg ,_bdd :=_ee .(Regioner );if !_bdd {return nil ,_g .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_ee );};return _abg .GetRegionBitmap ();};func (_edbc *PatternDictionary )parseHeader ()error {_aa .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");defer func (){_aa .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ ,_gef :=_edbc ._ggfb .ReadBits (5);if _gef !=nil {return _gef ;};if _gef =_edbc .readTemplate ();_gef !=nil {return _gef ;};if _gef =_edbc .readIsMMREncoded ();_gef !=nil {return _gef ;};if _gef =_edbc .readPatternWidthAndHeight ();_gef !=nil {return _gef ;};if _gef =_edbc .readGrayMax ();_gef !=nil {return _gef ;};if _gef =_edbc .computeSegmentDataStructure ();_gef !=nil {return _gef ;};return _edbc .checkInput ();};func (_bace *TextRegion )createRegionBitmap ()error {_bace .RegionBitmap =_ga .New (int (_bace .RegionInfo .BitmapWidth ),int (_bace .RegionInfo .BitmapHeight ));if _bace .DefaultPixel !=0{_bace .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_bbgg *PageInformationSegment )parseHeader ()(_egde error ){_aa .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");defer func (){var _cecfg ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";if _egde !=nil {_cecfg +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_egde .Error ();}else {_cecfg +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_aa .Log .Trace (_cecfg );}();if _egde =_bbgg .readWidthAndHeight ();_egde !=nil {return _egde ;};if _egde =_bbgg .readResolution ();_egde !=nil {return _egde ;};_ ,_egde =_bbgg ._fgbf .ReadBit ();if _egde !=nil {return _egde ;};if _egde =_bbgg .readCombinationOperatorOverrideAllowed ();_egde !=nil {return _egde ;};if _egde =_bbgg .readRequiresAuxiliaryBuffer ();_egde !=nil {return _egde ;};if _egde =_bbgg .readCombinationOperator ();_egde !=nil {return _egde ;};if _egde =_bbgg .readDefaultPixelValue ();_egde !=nil {return _egde ;};if _egde =_bbgg .readContainsRefinement ();_egde !=nil {return _egde ;};if _egde =_bbgg .readIsLossless ();_egde !=nil {return _egde ;};if _egde =_bbgg .readIsStriped ();_egde !=nil {return _egde ;};if _egde =_bbgg .readMaxStripeSize ();_egde !=nil {return _egde ;};if _egde =_bbgg .checkInput ();_egde !=nil {return _egde ;};_aa .Log .Trace ("\u0025\u0073",_bbgg );return nil ;};var _ _gf .BasicTabler =&TableSegment {};func (_abf *GenericRefinementRegion )decodeSLTP ()(int ,error ){_abf .Template .setIndex (_abf ._gg );return _abf ._gcg .DecodeBit (_abf ._gg );};func (_decd *Header )readHeaderFlags ()error {const _dfee ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_bcd ,_fbe :=_decd .Reader .ReadBit ();if _fbe !=nil {return _fa .Wrap (_fbe ,_dfee ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _bcd !=0{_decd .RetainFlag =true ;};_bcd ,_fbe =_decd .Reader .ReadBit ();if _fbe !=nil {return _fa .Wrap (_fbe ,_dfee ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _bcd !=0{_decd .PageAssociationFieldSize =true ;};_gecg ,_fbe :=_decd .Reader .ReadBits (6);if _fbe !=nil {return _fa .Wrap (_fbe ,_dfee ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_decd .Type =Type (int (_gecg ));return nil ;};func (_bfg *GenericRefinementRegion )updateOverride ()error {if _bfg .GrAtX ==nil ||_bfg .GrAtY ==nil {return _ab .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_bfg .GrAtX )!=len (_bfg .GrAtY ){return _ab .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_bfg ._bea =make ([]bool ,len (_bfg .GrAtX ));switch _bfg .TemplateID {case 0:if _bfg .GrAtX [0]!=-1&&_bfg .GrAtY [0]!=-1{_bfg ._bea [0]=true ;_bfg ._bgd =true ;};if _bfg .GrAtX [1]!=-1&&_bfg .GrAtY [1]!=-1{_bfg ._bea [1]=true ;_bfg ._bgd =true ;};case 1:_bfg ._bgd =false ;};return nil ;};func (_ea *EndOfStripe )Init (h *Header ,r _ec .StreamReader )error {_ea ._dd =r ;return _ea .parseHeader (h ,r );};func (_deggb *SymbolDictionary )decodeNewSymbols (_efbb ,_babg uint32 ,_fecf *_ga .Bitmap ,_eabee ,_ddgb int32 )error {if _deggb ._aaggd ==nil {_deggb ._aaggd =_cdba (_deggb ._gggb ,nil );if _deggb ._gdef ==nil {var _eafa error ;_deggb ._gdef ,_eafa =_gc .New (_deggb ._gggb );if _eafa !=nil {return _eafa ;};};if _deggb ._bcee ==nil {_deggb ._bcee =_gc .NewStats (65536,1);};};_deggb ._aaggd .setParameters (_deggb ._bcee ,_deggb ._gdef ,_deggb .SdrTemplate ,_efbb ,_babg ,_fecf ,_eabee ,_ddgb ,false ,_deggb .SdrATX ,_deggb .SdrATY );return _deggb .addSymbol (_deggb ._aaggd );};func (_gcda *HalftoneRegion )shiftAndFill (_eacd int )int {_eacd >>=8;if _eacd < 0{_efcg :=int (_d .Log (float64 (_dbg (_eacd )))/_d .Log (2));_ffaa :=31-_efcg ;for _cad :=1;_cad < _ffaa ;_cad ++{_eacd |=1<<uint (31-_cad );};};return _eacd ;};func (_bdda *SymbolDictionary )addSymbol (_eag Regioner )error {_dffbf ,_baff :=_eag .GetRegionBitmap ();if _baff !=nil {return _baff ;};_bdda ._edg [_bdda ._cdbd ]=_dffbf ;_bdda ._add =append (_bdda ._add ,_dffbf );_aa .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_dffbf );return nil ;};func (_faca *PatternDictionary )extractPatterns (_dfbac *_ga .Bitmap )error {var _acd int ;_fedg :=make ([]*_ga .Bitmap ,_faca .GrayMax +1);for _acd <=int (_faca .GrayMax ){_gcff :=int (_faca .HdpWidth )*_acd ;_afa :=_c .Rect (_gcff ,0,_gcff +int (_faca .HdpWidth ),int (_faca .HdpHeight ));_cgde ,_acbdd :=_ga .Extract (_afa ,_dfbac );if _acbdd !=nil {return _acbdd ;};_fedg [_acd ]=_cgde ;_acd ++;};_faca .Patterns =_fedg ;return nil ;};func NewGenericRegion (r _ec .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_fgc :r };};func (_gbc *TableSegment )Init (h *Header ,r _ec .StreamReader )error {_gbc ._fbee =r ;return _gbc .parseHeader ();};func (_ggg *GenericRegion )String ()string {_ddg :=&_b .Builder {};_ddg .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_ddg .WriteString (_ggg .RegionSegment .String ()+"\u000a");_ddg .WriteString (_g .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_ggg .UseExtTemplates ));_ddg .WriteString (_g .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ggg .IsTPGDon ));_ddg .WriteString (_g .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_ggg .GBTemplate ));_ddg .WriteString (_g .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_ggg .IsMMREncoded ));_ddg .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ggg .GBAtX ));_ddg .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ggg .GBAtY ));_ddg .WriteString (_g .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_ggg .GBAtOverride ));return _ddg .String ();};func (_dgge *TableSegment )HtRS ()int32 {return _dgge ._bceb };func (_agbfc *SymbolDictionary )decodeDirectlyThroughGenericRegion (_cfff ,_bdca uint32 )error {if _agbfc ._cfbe ==nil {_agbfc ._cfbe =NewGenericRegion (_agbfc ._gggb );};_agbfc ._cfbe .setParametersWithAt (false ,byte (_agbfc .SdTemplate ),false ,false ,_agbfc .SdATX ,_agbfc .SdATY ,_cfff ,_bdca ,_agbfc ._bcee ,_agbfc ._gdef );return _agbfc .addSymbol (_agbfc ._cfbe );};type template0 struct{};func (_gaeb *SymbolDictionary )decodeRefinedSymbol (_ebeg ,_facg uint32 )error {var (_fegda int ;_ddfa ,_acce int32 ;);if _gaeb .IsHuffmanEncoded {_agbca ,_agda :=_gaeb ._gggb .ReadBits (byte (_gaeb ._bbcb ));if _agda !=nil {return _agda ;};_fegda =int (_agbca );_aege ,_agda :=_gf .GetStandardTable (15);if _agda !=nil {return _agda ;};_cfbgd ,_agda :=_aege .Decode (_gaeb ._gggb );if _agda !=nil {return _agda ;};_ddfa =int32 (_cfbgd );_cfbgd ,_agda =_aege .Decode (_gaeb ._gggb );if _agda !=nil {return _agda ;};_acce =int32 (_cfbgd );_aege ,_agda =_gf .GetStandardTable (1);if _agda !=nil {return _agda ;};if _ ,_agda =_aege .Decode (_gaeb ._gggb );_agda !=nil {return _agda ;};_gaeb ._gggb .Align ();}else {_bceea ,_begf :=_gaeb ._gdef .DecodeIAID (uint64 (_gaeb ._bbcb ),_gaeb ._dgfcg );if _begf !=nil {return _begf ;};_fegda =int (_bceea );_ddfa ,_begf =_gaeb ._gdef .DecodeInt (_gaeb ._gdaa );if _begf !=nil {return _begf ;};_acce ,_begf =_gaeb ._gdef .DecodeInt (_gaeb ._bfa );if _begf !=nil {return _begf ;};};if _fede :=_gaeb .setSymbolsArray ();_fede !=nil {return _fede ;};_ebdg :=_gaeb ._add [_fegda ];if _agca :=_gaeb .decodeNewSymbols (_ebeg ,_facg ,_ebdg ,_ddfa ,_acce );_agca !=nil {return _agca ;};if _gaeb .IsHuffmanEncoded {_gaeb ._gggb .Align ();};return nil ;};func (_aaee *TextRegion )readHuffmanFlags ()error {var (_acbc int ;_agded uint64 ;_bgeae error ;);_ ,_bgeae =_aaee ._fbbf .ReadBit ();if _bgeae !=nil {return _bgeae ;};_acbc ,_bgeae =_aaee ._fbbf .ReadBit ();if _bgeae !=nil {return _bgeae ;};_aaee .SbHuffRSize =int8 (_acbc );_agded ,_bgeae =_aaee ._fbbf .ReadBits (2);if _bgeae !=nil {return _bgeae ;};_aaee .SbHuffRDY =int8 (_agded )&0xf;_agded ,_bgeae =_aaee ._fbbf .ReadBits (2);if _bgeae !=nil {return _bgeae ;};_aaee .SbHuffRDX =int8 (_agded )&0xf;_agded ,_bgeae =_aaee ._fbbf .ReadBits (2);if _bgeae !=nil {return _bgeae ;};_aaee .SbHuffRDHeight =int8 (_agded )&0xf;_agded ,_bgeae =_aaee ._fbbf .ReadBits (2);if _bgeae !=nil {return _bgeae ;};_aaee .SbHuffRDWidth =int8 (_agded )&0xf;_agded ,_bgeae =_aaee ._fbbf .ReadBits (2);if _bgeae !=nil {return _bgeae ;};_aaee .SbHuffDT =int8 (_agded )&0xf;_agded ,_bgeae =_aaee ._fbbf .ReadBits (2);if _bgeae !=nil {return _bgeae ;};_aaee .SbHuffDS =int8 (_agded )&0xf;_agded ,_bgeae =_aaee ._fbbf .ReadBits (2);if _bgeae !=nil {return _bgeae ;};_aaee .SbHuffFS =int8 (_agded )&0xf;return nil ;};func (_fcbb *TextRegion )setParameters (_dffge *_gc .Decoder ,_abeb ,_cggg bool ,_eccca ,_ecfa uint32 ,_fcffg uint32 ,_ggbbf int8 ,_cbcb uint32 ,_dfda int8 ,_bgfd _ga .CombinationOperator ,_cffff int8 ,_fgff int16 ,_ggade ,_bbdad ,_adg ,_dcded ,_fcde ,_cedb ,_ggbd ,_bdbae ,_bdbd ,_dafa int8 ,_ebccb ,_gdfd []int8 ,_ccdf []*_ga .Bitmap ,_egfa int8 ){_fcbb ._cafe =_dffge ;_fcbb .IsHuffmanEncoded =_abeb ;_fcbb .UseRefinement =_cggg ;_fcbb .RegionInfo .BitmapWidth =_eccca ;_fcbb .RegionInfo .BitmapHeight =_ecfa ;_fcbb .NumberOfSymbolInstances =_fcffg ;_fcbb .SbStrips =_ggbbf ;_fcbb .NumberOfSymbols =_cbcb ;_fcbb .DefaultPixel =_dfda ;_fcbb .CombinationOperator =_bgfd ;_fcbb .IsTransposed =_cffff ;_fcbb .ReferenceCorner =_fgff ;_fcbb .SbdsOffset =_ggade ;_fcbb .SbHuffFS =_bbdad ;_fcbb .SbHuffDS =_adg ;_fcbb .SbHuffDT =_dcded ;_fcbb .SbHuffRDWidth =_fcde ;_fcbb .SbHuffRDHeight =_cedb ;_fcbb .SbHuffRDX =_ggbd ;_fcbb .SbHuffRDY =_bdbae ;_fcbb .SbrTemplate =_dafa ;_fcbb .SbrATX =_ebccb ;_fcbb .SbrATY =_gdfd ;_fcbb .Symbols =_ccdf ;_fcbb ._gadg =_egfa ;};func (_acgd *TextRegion )decodeIb (_bcgf ,_babbg int64 )(*_ga .Bitmap ,error ){const _ffbg ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_dddac error ;_bgcc *_ga .Bitmap ;);if _bcgf ==0{if int (_babbg )> len (_acgd .Symbols )-1{return nil ,_fa .Error (_ffbg ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");};return _acgd .Symbols [int (_babbg )],nil ;};var _fcef ,_aecb ,_edfc ,_bbddfc int64 ;_fcef ,_dddac =_acgd .decodeRdw ();if _dddac !=nil {return nil ,_fa .Wrap (_dddac ,_ffbg ,"");};_aecb ,_dddac =_acgd .decodeRdh ();if _dddac !=nil {return nil ,_fa .Wrap (_dddac ,_ffbg ,"");};_edfc ,_dddac =_acgd .decodeRdx ();if _dddac !=nil {return nil ,_fa .Wrap (_dddac ,_ffbg ,"");};_bbddfc ,_dddac =_acgd .decodeRdy ();if _dddac !=nil {return nil ,_fa .Wrap (_dddac ,_ffbg ,"");};if _acgd .IsHuffmanEncoded {if _ ,_dddac =_acgd .decodeSymInRefSize ();_dddac !=nil {return nil ,_fa .Wrap (_dddac ,_ffbg ,"");};_acgd ._fbbf .Align ();};_gaebd :=_acgd .Symbols [_babbg ];_edbb :=uint32 (_gaebd .Width );_gagbb :=uint32 (_gaebd .Height );_dadb :=int32 (uint32 (_fcef )>>1)+int32 (_edfc );_addc :=int32 (uint32 (_aecb )>>1)+int32 (_bbddfc );if _acgd ._cfebc ==nil {_acgd ._cfebc =_cdba (_acgd ._fbbf ,nil );};_acgd ._cfebc .setParameters (_acgd ._cacaa ,_acgd ._cafe ,_acgd .SbrTemplate ,_edbb +uint32 (_fcef ),_gagbb +uint32 (_aecb ),_gaebd ,_dadb ,_addc ,false ,_acgd .SbrATX ,_acgd .SbrATY );_bgcc ,_dddac =_acgd ._cfebc .GetRegionBitmap ();if _dddac !=nil {return nil ,_fa .Wrap (_dddac ,_ffbg ,"\u0067\u0072\u0066");};if _acgd .IsHuffmanEncoded {_acgd ._fbbf .Align ();};return _bgcc ,nil ;};func (_ead *GenericRegion )GetRegionBitmap ()(_agd *_ga .Bitmap ,_acbd error ){if _ead .Bitmap !=nil {return _ead .Bitmap ,nil ;};if _ead .IsMMREncoded {if _ead ._bbb ==nil {_ead ._bbb ,_acbd =_bg .New (_ead ._fgc ,int (_ead .RegionSegment .BitmapWidth ),int (_ead .RegionSegment .BitmapHeight ),_ead .DataOffset ,_ead .DataLength );if _acbd !=nil {return nil ,_acbd ;};};_ead .Bitmap ,_acbd =_ead ._bbb .UncompressMMR ();return _ead .Bitmap ,_acbd ;};if _acbd =_ead .updateOverrideFlags ();_acbd !=nil {return nil ,_acbd ;};var _fdb int ;if _ead ._aaa ==nil {_ead ._aaa ,_acbd =_gc .New (_ead ._fgc );if _acbd !=nil {return nil ,_acbd ;};};if _ead ._ccbe ==nil {_ead ._ccbe =_gc .NewStats (65536,1);};_ead .Bitmap =_ga .New (int (_ead .RegionSegment .BitmapWidth ),int (_ead .RegionSegment .BitmapHeight ));_gga :=int (uint32 (_ead .Bitmap .Width +7)&(^uint32 (7)));for _fff :=0;_fff < _ead .Bitmap .Height ;_fff ++{if _ead .IsTPGDon {var _afb int ;_afb ,_acbd =_ead .decodeSLTP ();if _acbd !=nil {return nil ,_acbd ;};_fdb ^=_afb ;};if _fdb ==1{if _fff > 0{if _acbd =_ead .copyLineAbove (_fff );_acbd !=nil {return nil ,_acbd ;};};}else {if _acbd =_ead .decodeLine (_fff ,_ead .Bitmap .Width ,_gga );_acbd !=nil {return nil ,_acbd ;};};};return _ead .Bitmap ,nil ;};func (_ege *SymbolDictionary )Encode (w _ec .BinaryWriter )(_fdfd int ,_dcbf error ){const _bbdb ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _ege ==nil {return 0,_fa .Error (_bbdb ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _fdfd ,_dcbf =_ege .encodeFlags (w );_dcbf !=nil {return _fdfd ,_fa .Wrap (_dcbf ,_bbdb ,"");};_adagb ,_dcbf :=_ege .encodeATFlags (w );if _dcbf !=nil {return _fdfd ,_fa .Wrap (_dcbf ,_bbdb ,"");};_fdfd +=_adagb ;if _adagb ,_dcbf =_ege .encodeRefinementATFlags (w );_dcbf !=nil {return _fdfd ,_fa .Wrap (_dcbf ,_bbdb ,"");};_fdfd +=_adagb ;if _adagb ,_dcbf =_ege .encodeNumSyms (w );_dcbf !=nil {return _fdfd ,_fa .Wrap (_dcbf ,_bbdb ,"");};_fdfd +=_adagb ;if _adagb ,_dcbf =_ege .encodeSymbols (w );_dcbf !=nil {return _fdfd ,_fa .Wrap (_dcbf ,_bbdb ,"");};_fdfd +=_adagb ;return _fdfd ,nil ;};func (_fgege *GenericRegion )setParametersWithAt (_gbab bool ,_fdff byte ,_dgac ,_gdg bool ,_cggf ,_ggdd []int8 ,_eeeb ,_dcbe uint32 ,_ggfg *_gc .DecoderStats ,_feg *_gc .Decoder ){_fgege .IsMMREncoded =_gbab ;_fgege .GBTemplate =_fdff ;_fgege .IsTPGDon =_dgac ;_fgege .GBAtX =_cggf ;_fgege .GBAtY =_ggdd ;_fgege .RegionSegment .BitmapHeight =_dcbe ;_fgege .RegionSegment .BitmapWidth =_eeeb ;_fgege ._bbb =nil ;_fgege .Bitmap =nil ;if _ggfg !=nil {_fgege ._ccbe =_ggfg ;};if _feg !=nil {_fgege ._aaa =_feg ;};_aa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_fgege );};func (_ecb *HalftoneRegion )GetRegionBitmap ()(*_ga .Bitmap ,error ){if _ecb .HalftoneRegionBitmap !=nil {return _ecb .HalftoneRegionBitmap ,nil ;};var _aacf error ;_ecb .HalftoneRegionBitmap =_ga .New (int (_ecb .RegionSegment .BitmapWidth ),int (_ecb .RegionSegment .BitmapHeight ));if _ecb .Patterns ==nil ||len (_ecb .Patterns )==0{_ecb .Patterns ,_aacf =_ecb .GetPatterns ();if _aacf !=nil {return nil ,_aacf ;};};if _ecb .HDefaultPixel ==1{_ecb .HalftoneRegionBitmap .SetDefaultPixel ();};_fdfb :=_d .Ceil (_d .Log (float64 (len (_ecb .Patterns )))/_d .Log (2));_caea :=int (_fdfb );var _eead [][]int ;_eead ,_aacf =_ecb .grayScaleDecoding (_caea );if _aacf !=nil {return nil ,_aacf ;};if _aacf =_ecb .renderPattern (_eead );_aacf !=nil {return nil ,_aacf ;};return _ecb .HalftoneRegionBitmap ,nil ;};type GenericRefinementRegion struct{_fac templater ;_aba templater ;_deb _ec .StreamReader ;_cc *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_ga .Bitmap ;ReferenceBitmap *_ga .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_gcg *_gc .Decoder ;_gg *_gc .DecoderStats ;_bgd bool ;_bea []bool ;};func (_dagd *TextRegion )decodeDfs ()(int64 ,error ){if _dagd .IsHuffmanEncoded {if _dagd .SbHuffFS ==3{if _dagd ._daba ==nil {var _ecbb error ;_dagd ._daba ,_ecbb =_dagd .getUserTable (0);if _ecbb !=nil {return 0,_ecbb ;};};return _dagd ._daba .Decode (_dagd ._fbbf );};_agdf ,_fgde :=_gf .GetStandardTable (6+int (_dagd .SbHuffFS ));if _fgde !=nil {return 0,_fgde ;};return _agdf .Decode (_dagd ._fbbf );};_cfaf ,_gagb :=_dagd ._cafe .DecodeInt (_dagd ._dbed );if _gagb !=nil {return 0,_gagb ;};return int64 (_cfaf ),nil ;};func (_eeb *GenericRegion )setParameters (_eedd bool ,_gfcb ,_aaef int64 ,_bgf ,_efgg uint32 ){_eeb .IsMMREncoded =_eedd ;_eeb .DataOffset =_gfcb ;_eeb .DataLength =_aaef ;_eeb .RegionSegment .BitmapHeight =_bgf ;_eeb .RegionSegment .BitmapWidth =_efgg ;_eeb ._bbb =nil ;_eeb .Bitmap =nil ;};func (_acgf *RegionSegment )Size ()int {return 17};func (_gbdg *GenericRegion )Init (h *Header ,r _ec .StreamReader )error {_gbdg .RegionSegment =NewRegionSegment (r );_gbdg ._fgc =r ;return _gbdg .parseHeader ();};func (_gbed *TextRegion )setCodingStatistics ()error {if _gbed ._aafe ==nil {_gbed ._aafe =_gc .NewStats (512,1);};if _gbed ._dbed ==nil {_gbed ._dbed =_gc .NewStats (512,1);};if _gbed ._dfde ==nil {_gbed ._dfde =_gc .NewStats (512,1);};if _gbed ._abgb ==nil {_gbed ._abgb =_gc .NewStats (512,1);};if _gbed ._afaf ==nil {_gbed ._afaf =_gc .NewStats (512,1);};if _gbed ._egaf ==nil {_gbed ._egaf =_gc .NewStats (512,1);};if _gbed ._ageg ==nil {_gbed ._ageg =_gc .NewStats (512,1);};if _gbed ._cecga ==nil {_gbed ._cecga =_gc .NewStats (1<<uint (_gbed ._gadg ),1);};if _gbed ._edae ==nil {_gbed ._edae =_gc .NewStats (512,1);};if _gbed ._gecf ==nil {_gbed ._gecf =_gc .NewStats (512,1);};if _gbed ._cafe ==nil {var _edce error ;_gbed ._cafe ,_edce =_gc .New (_gbed ._fbbf );if _edce !=nil {return _edce ;};};return nil ;};func (_cgbf Type )String ()string {switch _cgbf {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_cagea *TextRegion )setContexts (_fcfa *_gc .DecoderStats ,_cccc *_gc .DecoderStats ,_cgab *_gc .DecoderStats ,_cdfg *_gc .DecoderStats ,_eedf *_gc .DecoderStats ,_ggcg *_gc .DecoderStats ,_ccee *_gc .DecoderStats ,_gedf *_gc .DecoderStats ,_baaf *_gc .DecoderStats ,_gdec *_gc .DecoderStats ){_cagea ._aafe =_cccc ;_cagea ._dbed =_cgab ;_cagea ._dfde =_cdfg ;_cagea ._abgb =_eedf ;_cagea ._egaf =_ccee ;_cagea ._ageg =_gedf ;_cagea ._cecga =_ggcg ;_cagea ._edae =_baaf ;_cagea ._gecf =_gdec ;_cagea ._cacaa =_fcfa ;};func (_bcad *PageInformationSegment )readContainsRefinement ()error {_geaaa ,_dacg :=_bcad ._fgbf .ReadBit ();if _dacg !=nil {return _dacg ;};if _geaaa ==1{_bcad ._bbda =true ;};return nil ;};func (_ffbc *Header )writeFlags (_fccg _ec .BinaryWriter )(_aggf error ){const _fggc ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_gbbba :=byte (_ffbc .Type );if _aggf =_fccg .WriteByte (_gbbba );_aggf !=nil {return _fa .Wrap (_aggf ,_fggc ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_ffbc .RetainFlag &&!_ffbc .PageAssociationFieldSize {return nil ;};if _aggf =_fccg .SkipBits (-8);_aggf !=nil {return _fa .Wrap (_aggf ,_fggc ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _cbec int ;if _ffbc .RetainFlag {_cbec =1;};if _aggf =_fccg .WriteBit (_cbec );_aggf !=nil {return _fa .Wrap (_aggf ,_fggc ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_cbec =0;if _ffbc .PageAssociationFieldSize {_cbec =1;};if _aggf =_fccg .WriteBit (_cbec );_aggf !=nil {return _fa .Wrap (_aggf ,_fggc ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_fccg .FinishByte ();return nil ;};type GenericRegion struct{_fgc _ec .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_fdc bool ;Bitmap *_ga .Bitmap ;_aaa *_gc .Decoder ;_ccbe *_gc .DecoderStats ;_bbb *_bg .Decoder ;};func _dbg (_cag int )int {if _cag ==0{return 0;};_cag |=_cag >>1;_cag |=_cag >>2;_cag |=_cag >>4;_cag |=_cag >>8;_cag |=_cag >>16;return (_cag +1)>>1;};func (_ccbdg *TextRegion )decodeRdy ()(int64 ,error ){const _cbag ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _ccbdg .IsHuffmanEncoded {if _ccbdg .SbHuffRDY ==3{if _ccbdg ._dedgd ==nil {var (_dcgd int ;_edgd error ;);if _ccbdg .SbHuffFS ==3{_dcgd ++;};if _ccbdg .SbHuffDS ==3{_dcgd ++;};if _ccbdg .SbHuffDT ==3{_dcgd ++;};if _ccbdg .SbHuffRDWidth ==3{_dcgd ++;};if _ccbdg .SbHuffRDHeight ==3{_dcgd ++;};if _ccbdg .SbHuffRDX ==3{_dcgd ++;};_ccbdg ._dedgd ,_edgd =_ccbdg .getUserTable (_dcgd );if _edgd !=nil {return 0,_fa .Wrap (_edgd ,_cbag ,"");};};return _ccbdg ._dedgd .Decode (_ccbdg ._fbbf );};_gcca ,_dfbe :=_gf .GetStandardTable (14+int (_ccbdg .SbHuffRDY ));if _dfbe !=nil {return 0,_dfbe ;};return _gcca .Decode (_ccbdg ._fbbf );};_dcadf ,_cdfc :=_ccbdg ._cafe .DecodeInt (_ccbdg ._gecf );if _cdfc !=nil {return 0,_fa .Wrap (_cdfc ,_cbag ,"");};return int64 (_dcadf ),nil ;};func (_fefe *TextRegion )decodeIds ()(int64 ,error ){const _ccaf ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _fefe .IsHuffmanEncoded {if _fefe .SbHuffDS ==3{if _fefe ._bcfd ==nil {_agcaa :=0;if _fefe .SbHuffFS ==3{_agcaa ++;};var _ceeeg error ;_fefe ._bcfd ,_ceeeg =_fefe .getUserTable (_agcaa );if _ceeeg !=nil {return 0,_fa .Wrap (_ceeeg ,_ccaf ,"");};};return _fefe ._bcfd .Decode (_fefe ._fbbf );};_accb ,_fdda :=_gf .GetStandardTable (8+int (_fefe .SbHuffDS ));if _fdda !=nil {return 0,_fa .Wrap (_fdda ,_ccaf ,"");};return _accb .Decode (_fefe ._fbbf );};_bfea ,_cbga :=_fefe ._cafe .DecodeInt (_fefe ._dfde );if _cbga !=nil {return 0,_fa .Wrap (_cbga ,_ccaf ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_bfea ),nil ;};func (_fdbb *SymbolDictionary )setExportedSymbols (_egf []int ){for _dbfb :=uint32 (0);_dbfb < _fdbb ._edec +_fdbb .NumberOfNewSymbols ;_dbfb ++{if _egf [_dbfb ]==1{var _eeab *_ga .Bitmap ;if _dbfb < _fdbb ._edec {_eeab =_fdbb ._dbbbg [_dbfb ];}else {_eeab =_fdbb ._edg [_dbfb -_fdbb ._edec ];};_aa .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_eeab );_fdbb ._cbcf =append (_fdbb ._cbcf ,_eeab );};};};func (_edbd *Header )readSegmentPageAssociation (_befb Documenter ,_afe _ec .StreamReader ,_abag uint64 ,_cdf ...int )(_ega error ){const _aggb ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";if !_edbd .PageAssociationFieldSize {_ffb ,_acfd :=_afe .ReadBits (8);if _acfd !=nil {return _fa .Wrap (_acfd ,_aggb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_edbd .PageAssociation =int (_ffb &0xFF);}else {_fgf ,_cdacd :=_afe .ReadBits (32);if _cdacd !=nil {return _fa .Wrap (_cdacd ,_aggb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_edbd .PageAssociation =int (_fgf &_d .MaxInt32 );};if _abag ==0{return nil ;};if _edbd .PageAssociation !=0{_bgc ,_ddbg :=_befb .GetPage (_edbd .PageAssociation );if _ddbg !=nil {return _fa .Wrap (_ddbg ,_aggb ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _egae int ;for _fbb :=uint64 (0);_fbb < _abag ;_fbb ++{_egae =_cdf [_fbb ];_edbd .RTSegments [_fbb ],_ddbg =_bgc .GetSegment (_egae );if _ddbg !=nil {var _gded error ;_edbd .RTSegments [_fbb ],_gded =_befb .GetGlobalSegment (_egae );if _gded !=nil {return _fa .Wrapf (_ddbg ,_aggb ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_edbd .PageAssociation );};};};return nil ;};for _cgdf :=uint64 (0);_cgdf < _abag ;_cgdf ++{_edbd .RTSegments [_cgdf ],_ega =_befb .GetGlobalSegment (_cdf [_cgdf ]);if _ega !=nil {return _fa .Wrapf (_ega ,_aggb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_cdf [_cgdf ]);};};return nil ;};func (_gfeaa *TextRegion )decodeSymbolInstances ()error {_acec ,_cddb :=_gfeaa .decodeStripT ();if _cddb !=nil {return _cddb ;};var (_gbbdf int64 ;_agfc uint32 ;);for _agfc < _gfeaa .NumberOfSymbolInstances {_eaeg ,_gdagb :=_gfeaa .decodeDT ();if _gdagb !=nil {return _gdagb ;};_acec +=_eaeg ;var _cbbg int64 ;_eca :=true ;_gfeaa ._afee =0;for {if _eca {_cbbg ,_gdagb =_gfeaa .decodeDfs ();if _gdagb !=nil {return _gdagb ;};_gbbdf +=_cbbg ;_gfeaa ._afee =_gbbdf ;_eca =false ;}else {_gbce ,_bacf :=_gfeaa .decodeIds ();if _bacf !=nil {return _bacf ;};if _gbce ==_d .MaxInt32 ||_agfc >=_gfeaa .NumberOfSymbolInstances {break ;};_gfeaa ._afee +=_gbce +int64 (_gfeaa .SbdsOffset );};_gbec ,_cfa :=_gfeaa .decodeCurrentT ();if _cfa !=nil {return _cfa ;};_ccge :=_acec +_gbec ;_afeb ,_cfa :=_gfeaa .decodeID ();if _cfa !=nil {return _cfa ;};_fbeee ,_cfa :=_gfeaa .decodeRI ();if _cfa !=nil {return _cfa ;};_cggcd ,_cfa :=_gfeaa .decodeIb (_fbeee ,_afeb );if _cfa !=nil {return _cfa ;};if _cfa =_gfeaa .blit (_cggcd ,_ccge );_cfa !=nil {return _cfa ;};_agfc ++;};};return nil ;};func (_egbd *SymbolDictionary )GetDictionary ()([]*_ga .Bitmap ,error ){_aa .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){_aa .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");_aa .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_egbd ._cbcf ,_egbd ._edg );}();if _egbd ._cbcf ==nil {var _dgcc error ;if _egbd .UseRefinementAggregation {_egbd ._bbcb =_egbd .getSbSymCodeLen ();};if !_egbd .IsHuffmanEncoded {if _dgcc =_egbd .setCodingStatistics ();_dgcc !=nil {return nil ,_dgcc ;};};_egbd ._edg =make ([]*_ga .Bitmap ,_egbd .NumberOfNewSymbols );var _abac []int ;if _egbd .IsHuffmanEncoded &&!_egbd .UseRefinementAggregation {_abac =make ([]int ,_egbd .NumberOfNewSymbols );};if _dgcc =_egbd .setSymbolsArray ();_dgcc !=nil {return nil ,_dgcc ;};var _cfdg ,_aged int64 ;_egbd ._cdbd =0;for _egbd ._cdbd < _egbd .NumberOfNewSymbols {_aged ,_dgcc =_egbd .decodeHeightClassDeltaHeight ();if _dgcc !=nil {return nil ,_dgcc ;};_cfdg +=_aged ;var _ccbae ,_dbgd uint32 ;_ceebe :=int64 (_egbd ._cdbd );for {var _dege int64 ;_dege ,_dgcc =_egbd .decodeDifferenceWidth ();if _dgcc !=nil {return nil ,_dgcc ;};if _dege ==int64 (_d .MaxInt64 )||_egbd ._cdbd >=_egbd .NumberOfNewSymbols {break ;};_ccbae +=uint32 (_dege );_dbgd +=_ccbae ;if !_egbd .IsHuffmanEncoded ||_egbd .UseRefinementAggregation {if !_egbd .UseRefinementAggregation {_dgcc =_egbd .decodeDirectlyThroughGenericRegion (_ccbae ,uint32 (_cfdg ));if _dgcc !=nil {return nil ,_dgcc ;};}else {_dgcc =_egbd .decodeAggregate (_ccbae ,uint32 (_cfdg ));if _dgcc !=nil {return nil ,_dgcc ;};};}else if _egbd .IsHuffmanEncoded &&!_egbd .UseRefinementAggregation {_abac [_egbd ._cdbd ]=int (_ccbae );};_egbd ._cdbd ++;};if _egbd .IsHuffmanEncoded &&!_egbd .UseRefinementAggregation {var _bbddf int64 ;if _egbd .SdHuffBMSizeSelection ==0{var _cgfb _gf .Tabler ;_cgfb ,_dgcc =_gf .GetStandardTable (1);if _dgcc !=nil {return nil ,_dgcc ;};_bbddf ,_dgcc =_cgfb .Decode (_egbd ._gggb );if _dgcc !=nil {return nil ,_dgcc ;};}else {_bbddf ,_dgcc =_egbd .huffDecodeBmSize ();if _dgcc !=nil {return nil ,_dgcc ;};};_egbd ._gggb .Align ();var _cega *_ga .Bitmap ;_cega ,_dgcc =_egbd .decodeHeightClassCollectiveBitmap (_bbddf ,uint32 (_cfdg ),_dbgd );if _dgcc !=nil {return nil ,_dgcc ;};_dgcc =_egbd .decodeHeightClassBitmap (_cega ,_ceebe ,int (_cfdg ),_abac );if _dgcc !=nil {return nil ,_dgcc ;};};};_cecfd ,_dgcc :=_egbd .getToExportFlags ();if _dgcc !=nil {return nil ,_dgcc ;};_egbd .setExportedSymbols (_cecfd );};return _egbd ._cbcf ,nil ;};func (_daac *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _daac ._ddf ==nil {var (_fbcb int ;_dcgb error ;);if _daac .SdHuffDecodeHeightSelection ==3{_fbcb ++;};if _daac .SdHuffDecodeWidthSelection ==3{_fbcb ++;};_daac ._ddf ,_dcgb =_daac .getUserTable (_fbcb );if _dcgb !=nil {return 0,_dcgb ;};};return _daac ._ddf .Decode (_daac ._gggb );};func (_eggd *HalftoneRegion )computeGrayScalePlanes (_badc []*_ga .Bitmap ,_geaa int )([][]int ,error ){_fbf :=make ([][]int ,_eggd .HGridHeight );for _bdef :=0;_bdef < len (_fbf );_bdef ++{_fbf [_bdef ]=make ([]int ,_eggd .HGridWidth );};for _dfba :=0;_dfba < int (_eggd .HGridHeight );_dfba ++{for _fegd :=0;_fegd < int (_eggd .HGridWidth );_fegd +=8{var _cbaa int ;if _cfc :=int (_eggd .HGridWidth )-_fegd ;_cfc > 8{_cbaa =8;}else {_cbaa =_cfc ;};_dafe :=_badc [0].GetByteIndex (_fegd ,_dfba );for _fbd :=0;_fbd < _cbaa ;_fbd ++{_dcbc :=_fbd +_fegd ;_fbf [_dfba ][_dcbc ]=0;for _deca :=0;_deca < _geaa ;_deca ++{_dcd ,_fadf :=_badc [_deca ].GetByte (_dafe );if _fadf !=nil {return nil ,_fadf ;};_ebeb :=_dcd >>uint (7-_dcbc &7);_ecgc :=_ebeb &1;_gff :=1<<uint (_deca );_cgfg :=int (_ecgc )*_gff ;_fbf [_dfba ][_dcbc ]+=_cgfg ;};};};};return _fbf ,nil ;};func (_eec *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_ade ,_bfb ,_afd ,_ae ,_ef ,_gbe ,_ffd ,_egg ,_gaff int )error {var (_fc ,_eaag ,_ffa ,_gd ,_ecf ,_gab int ;_fab byte ;_caf error ;);if _ade > 0{_fab ,_caf =_eec .RegionBitmap .GetByte (_ffd -_afd );if _caf !=nil {return _caf ;};_ffa =int (_fab );};if _egg > 0&&_egg <=_eec .ReferenceBitmap .Height {_fab ,_caf =_eec .ReferenceBitmap .GetByte (_gaff -_ae +_gbe );if _caf !=nil {return _caf ;};_gd =int (_fab )<<4;};if _egg >=0&&_egg < _eec .ReferenceBitmap .Height {_fab ,_caf =_eec .ReferenceBitmap .GetByte (_gaff +_gbe );if _caf !=nil {return _caf ;};_ecf =int (_fab )<<1;};if _egg > -2&&_egg < _eec .ReferenceBitmap .Height -1{_fab ,_caf =_eec .ReferenceBitmap .GetByte (_gaff +_ae +_gbe );if _caf !=nil {return _caf ;};_gab =int (_fab );};_fc =((_ffa >>5)&0x6)|((_gab >>2)&0x30)|(_ecf &0x180)|(_gd &0xc00);var _cdgb int ;for _ece :=0;_ece < _ef ;_ece =_cdgb {var _fcb int ;_cdgb =_ece +8;var _cee int ;if _cee =_bfb -_ece ;_cee > 8{_cee =8;};_ac :=_cdgb < _bfb ;_fef :=_cdgb < _eec .ReferenceBitmap .Width ;_ag :=_gbe +1;if _ade > 0{_fab =0;if _ac {_fab ,_caf =_eec .RegionBitmap .GetByte (_ffd -_afd +1);if _caf !=nil {return _caf ;};};_ffa =(_ffa <<8)|int (_fab );};if _egg > 0&&_egg <=_eec .ReferenceBitmap .Height {var _afdc int ;if _fef {_fab ,_caf =_eec .ReferenceBitmap .GetByte (_gaff -_ae +_ag );if _caf !=nil {return _caf ;};_afdc =int (_fab )<<4;};_gd =(_gd <<8)|_afdc ;};if _egg >=0&&_egg < _eec .ReferenceBitmap .Height {var _ecc int ;if _fef {_fab ,_caf =_eec .ReferenceBitmap .GetByte (_gaff +_ag );if _caf !=nil {return _caf ;};_ecc =int (_fab )<<1;};_ecf =(_ecf <<8)|_ecc ;};if _egg > -2&&_egg < (_eec .ReferenceBitmap .Height -1){_fab =0;if _fef {_fab ,_caf =_eec .ReferenceBitmap .GetByte (_gaff +_ae +_ag );if _caf !=nil {return _caf ;};};_gab =(_gab <<8)|int (_fab );};for _adag :=0;_adag < _cee ;_adag ++{var _bff int ;_ed :=false ;_daf :=(_fc >>4)&0x1ff;if _daf ==0x1ff{_ed =true ;_bff =1;}else if _daf ==0x00{_ed =true ;};if !_ed {if _eec ._bgd {_eaag =_eec .overrideAtTemplate0 (_fc ,_ece +_adag ,_ade ,_fcb ,_adag );_eec ._gg .SetIndex (int32 (_eaag ));}else {_eec ._gg .SetIndex (int32 (_fc ));};_bff ,_caf =_eec ._gcg .DecodeBit (_eec ._gg );if _caf !=nil {return _caf ;};};_db :=uint (7-_adag );_fcb |=int (_bff <<_db );_fc =((_fc &0xdb6)<<1)|_bff |(_ffa >>_db +5)&0x002|((_gab >>_db +2)&0x010)|((_ecf >>_db )&0x080)|((_gd >>_db )&0x400);};_caf =_eec .RegionBitmap .SetByte (_ffd ,byte (_fcb ));if _caf !=nil {return _caf ;};_ffd ++;_gaff ++;};return nil ;};func (_dfag *GenericRegion )decodeTemplate0b (_cge ,_bbca ,_eb int ,_acc ,_aacb int )(_fee error ){const _ede ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_eecb ,_bcg int ;_fad ,_dedc int ;_dfc byte ;_dbbb int ;);if _cge >=1{_dfc ,_fee =_dfag .Bitmap .GetByte (_aacb );if _fee !=nil {return _fa .Wrap (_fee ,_ede ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fad =int (_dfc );};if _cge >=2{_dfc ,_fee =_dfag .Bitmap .GetByte (_aacb -_dfag .Bitmap .RowStride );if _fee !=nil {return _fa .Wrap (_fee ,_ede ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_dedc =int (_dfc )<<6;};_eecb =(_fad &0xf0)|(_dedc &0x3800);for _bce :=0;_bce < _eb ;_bce =_dbbb {var (_dff byte ;_ccba int ;);_dbbb =_bce +8;if _bfge :=_bbca -_bce ;_bfge > 8{_ccba =8;}else {_ccba =_bfge ;};if _cge > 0{_fad <<=8;if _dbbb < _bbca {_dfc ,_fee =_dfag .Bitmap .GetByte (_aacb +1);if _fee !=nil {return _fa .Wrap (_fee ,_ede ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_fad |=int (_dfc );};};if _cge > 1{_dedc <<=8;if _dbbb < _bbca {_dfc ,_fee =_dfag .Bitmap .GetByte (_aacb -_dfag .Bitmap .RowStride +1);if _fee !=nil {return _fa .Wrap (_fee ,_ede ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_dedc |=int (_dfc )<<6;};};for _ebb :=0;_ebb < _ccba ;_ebb ++{_agbc :=uint (7-_ebb );if _dfag ._fdc {_bcg =_dfag .overrideAtTemplate0b (_eecb ,_bce +_ebb ,_cge ,int (_dff ),_ebb ,int (_agbc ));_dfag ._ccbe .SetIndex (int32 (_bcg ));}else {_dfag ._ccbe .SetIndex (int32 (_eecb ));};var _gfg int ;_gfg ,_fee =_dfag ._aaa .DecodeBit (_dfag ._ccbe );if _fee !=nil {return _fa .Wrap (_fee ,_ede ,"");};_dff |=byte (_gfg <<uint (_agbc ));_eecb =((_eecb &0x7bf7)<<1)|_gfg |((_fad >>_agbc )&0x10)|((_dedc >>_agbc )&0x800);};if _gcec :=_dfag .Bitmap .SetByte (_acc ,_dff );_gcec !=nil {return _fa .Wrap (_gcec ,_ede ,"");};_acc ++;_aacb ++;};return nil ;};func (_bgde *PatternDictionary )computeSegmentDataStructure ()error {_bgde .DataOffset =_bgde ._ggfb .StreamPosition ();_bgde .DataHeaderLength =_bgde .DataOffset -_bgde .DataHeaderOffset ;_bgde .DataLength =int64 (_bgde ._ggfb .Length ())-_bgde .DataHeaderLength ;return nil ;};func (_caae *GenericRefinementRegion )parseHeader ()(_dae error ){_aa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");_ddb :=_fd .Now ();defer func (){if _dae ==nil {_aa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_fd .Since (_ddb ).Nanoseconds ());}else {_aa .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_dae );};}();if _dae =_caae .RegionInfo .parseHeader ();_dae !=nil {return _dae ;};_ ,_dae =_caae ._deb .ReadBits (6);if _dae !=nil {return _dae ;};_caae .IsTPGROn ,_dae =_caae ._deb .ReadBool ();if _dae !=nil {return _dae ;};var _abge int ;_abge ,_dae =_caae ._deb .ReadBit ();if _dae !=nil {return _dae ;};_caae .TemplateID =int8 (_abge );switch _caae .TemplateID {case 0:_caae .Template =_caae ._fac ;if _dae =_caae .readAtPixels ();_dae !=nil {return ;};case 1:_caae .Template =_caae ._aba ;};return nil ;};func (_dffg *SymbolDictionary )encodeNumSyms (_afae _ec .BinaryWriter )(_cgcc int ,_gbfeg error ){const _dafg ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_gfgbc :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gfgbc ,_dffg .NumberOfExportedSymbols );if _cgcc ,_gbfeg =_afae .Write (_gfgbc );_gbfeg !=nil {return _cgcc ,_fa .Wrap (_gbfeg ,_dafg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_e .BigEndian .PutUint32 (_gfgbc ,_dffg .NumberOfNewSymbols );_aacgg ,_gbfeg :=_afae .Write (_gfgbc );if _gbfeg !=nil {return _cgcc ,_fa .Wrap (_gbfeg ,_dafg ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _cgcc +_aacgg ,nil ;};func (_geed *PatternDictionary )Init (h *Header ,r _ec .StreamReader )error {_geed ._ggfb =r ;return _geed .parseHeader ();};func (_gadc *SymbolDictionary )encodeATFlags (_dbcf _ec .BinaryWriter )(_feac int ,_gdab error ){const _fcgg ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _gadc .IsHuffmanEncoded ||_gadc .SdTemplate !=0{return 0,nil ;};_fcgga :=4;if _gadc .SdTemplate !=0{_fcgga =1;};for _caeac :=0;_caeac < _fcgga ;_caeac ++{if _gdab =_dbcf .WriteByte (byte (_gadc .SdATX [_caeac ]));_gdab !=nil {return _feac ,_fa .Wrapf (_gdab ,_fcgg ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_caeac );};_feac ++;if _gdab =_dbcf .WriteByte (byte (_gadc .SdATY [_caeac ]));_gdab !=nil {return _feac ,_fa .Wrapf (_gdab ,_fcgg ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_caeac );};_feac ++;};return _feac ,nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_cacae *SymbolDictionary )readNumberOfNewSymbols ()error {_edd ,_acgfc :=_cacae ._gggb .ReadBits (32);if _acgfc !=nil {return _acgfc ;};_cacae .NumberOfNewSymbols =uint32 (_edd &_d .MaxUint32 );return nil ;};func (_dgdg *SymbolDictionary )setSymbolsArray ()error {if _dgdg ._dbbbg ==nil {if _acgc :=_dgdg .retrieveImportSymbols ();_acgc !=nil {return _acgc ;};};if _dgdg ._add ==nil {_dgdg ._add =append (_dgdg ._add ,_dgdg ._dbbbg ...);};return nil ;};func (_dcde *PageInformationSegment )Encode (w _ec .BinaryWriter )(_bcea int ,_cfda error ){const _eebf ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";_gceg :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gceg ,uint32 (_dcde .PageBMWidth ));_bcea ,_cfda =w .Write (_gceg );if _cfda !=nil {return _bcea ,_fa .Wrap (_cfda ,_eebf ,"\u0077\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_gceg ,uint32 (_dcde .PageBMHeight ));var _ceebc int ;_ceebc ,_cfda =w .Write (_gceg );if _cfda !=nil {return _ceebc +_bcea ,_fa .Wrap (_cfda ,_eebf ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_bcea +=_ceebc ;_e .BigEndian .PutUint32 (_gceg ,uint32 (_dcde .ResolutionX ));_ceebc ,_cfda =w .Write (_gceg );if _cfda !=nil {return _ceebc +_bcea ,_fa .Wrap (_cfda ,_eebf ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_bcea +=_ceebc ;_e .BigEndian .PutUint32 (_gceg ,uint32 (_dcde .ResolutionY ));if _ceebc ,_cfda =w .Write (_gceg );_cfda !=nil {return _ceebc +_bcea ,_fa .Wrap (_cfda ,_eebf ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_bcea +=_ceebc ;if _cfda =_dcde .encodeFlags (w );_cfda !=nil {return _bcea ,_fa .Wrap (_cfda ,_eebf ,"");};_bcea ++;if _ceebc ,_cfda =_dcde .encodeStripingInformation (w );_cfda !=nil {return _bcea ,_fa .Wrap (_cfda ,_eebf ,"");};_bcea +=_ceebc ;return _bcea ,nil ;};func (_fdf *GenericRefinementRegion )decodeOptimized (_df ,_dea ,_faa ,_dfd ,_fb ,_gaf ,_bc int )error {var (_fe error ;_ad int ;_ff int ;);_fec :=_df -int (_fdf .ReferenceDY );if _bgga :=int (-_fdf .ReferenceDX );_bgga > 0{_ad =_bgga ;};_ada :=_fdf .ReferenceBitmap .GetByteIndex (_ad ,_fec );if _fdf .ReferenceDX > 0{_ff =int (_fdf .ReferenceDX );};_aae :=_fdf .RegionBitmap .GetByteIndex (_ff ,_df );switch _fdf .TemplateID {case 0:_fe =_fdf .decodeTemplate (_df ,_dea ,_faa ,_dfd ,_fb ,_gaf ,_bc ,_aae ,_fec ,_ada ,_fdf ._fac );case 1:_fe =_fdf .decodeTemplate (_df ,_dea ,_faa ,_dfd ,_fb ,_gaf ,_bc ,_aae ,_fec ,_ada ,_fdf ._aba );};return _fe ;};func (_dfec *TableSegment )HtPS ()int32 {return _dfec ._aada };func (_efgd *GenericRegion )setParametersMMR (_age bool ,_cbed ,_dfgc int64 ,_gcc ,_gdeg uint32 ,_bda byte ,_dde ,_dgcbb bool ,_gac ,_ccbeb []int8 ){_efgd .DataOffset =_cbed ;_efgd .DataLength =_dfgc ;_efgd .RegionSegment =&RegionSegment {};_efgd .RegionSegment .BitmapHeight =_gcc ;_efgd .RegionSegment .BitmapWidth =_gdeg ;_efgd .GBTemplate =_bda ;_efgd .IsMMREncoded =_age ;_efgd .IsTPGDon =_dde ;_efgd .GBAtX =_gac ;_efgd .GBAtY =_ccbeb ;};type HalftoneRegion struct{_deggd _ec .StreamReader ;_ffae *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _ga .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_ga .Bitmap ;Patterns []*_ga .Bitmap ;};func (_feaea *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_fdad :=range _feaea .Header .RTSegments {if _fdad .Type ==0{_egbdd ,_ddef :=_fdad .GetSegmentData ();if _ddef !=nil {return _ddef ;};_gadcc ,_cagee :=_egbdd .(*SymbolDictionary );if !_cagee {return _g .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_egbdd );};_ffbe ,_ddef :=_gadcc .GetDictionary ();if _ddef !=nil {return _g .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_fdad .SegmentNumber ,_ddef .Error ());};_feaea ._dbbbg =append (_feaea ._dbbbg ,_ffbe ...);_feaea ._edec +=_gadcc .NumberOfExportedSymbols ;};};return nil ;};func (_bcc *PageInformationSegment )checkInput ()error {if _bcc .PageBMHeight ==_d .MaxInt32 {if !_bcc .IsStripe {_aa .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");};};return nil ;};func (_bdcg *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_ga .Points ,symbols *_ga .Bitmaps ,classIDs *_ce .IntSlice ,boxes *_ga .Boxes ,width ,height ,symbits int ){_bdcg .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};_bdcg ._ggae =globalSymbolsMap ;_bdcg ._feff =localSymbolsMap ;_bdcg ._dfce =comps ;_bdcg ._deggg =inLL ;_bdcg ._bcfdc =symbols ;_bdcg ._acfg =classIDs ;_bdcg ._ddag =boxes ;_bdcg ._eecc =symbits ;};type SymbolDictionary struct{_gggb _ec .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_deee bool ;_aeab bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_edec uint32 ;_dbbbg []*_ga .Bitmap ;_cdbd uint32 ;_edg []*_ga .Bitmap ;_gbdb _gf .Tabler ;_fedge _gf .Tabler ;_ddf _gf .Tabler ;_affg _gf .Tabler ;_cbcf []*_ga .Bitmap ;_add []*_ga .Bitmap ;_gdef *_gc .Decoder ;_affgc *TextRegion ;_cfbe *GenericRegion ;_aaggd *GenericRefinementRegion ;_bcee *_gc .DecoderStats ;_bffa *_gc .DecoderStats ;_fcg *_gc .DecoderStats ;_fbdc *_gc .DecoderStats ;_cdde *_gc .DecoderStats ;_gdaa *_gc .DecoderStats ;_bfa *_gc .DecoderStats ;_eggb *_gc .DecoderStats ;_dgfcg *_gc .DecoderStats ;_bbcb int8 ;_fdbaf *_ga .Bitmaps ;_fbega []int ;_eabge map[int ]int ;_eeba bool ;};func (_afbg *GenericRegion )decodeLine (_beg ,_cbg ,_aag int )error {const _gbee ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_gfd :=_afbg .Bitmap .GetByteIndex (0,_beg );_faec :=_gfd -_afbg .Bitmap .RowStride ;switch _afbg .GBTemplate {case 0:if !_afbg .UseExtTemplates {return _afbg .decodeTemplate0a (_beg ,_cbg ,_aag ,_gfd ,_faec );};return _afbg .decodeTemplate0b (_beg ,_cbg ,_aag ,_gfd ,_faec );case 1:return _afbg .decodeTemplate1 (_beg ,_cbg ,_aag ,_gfd ,_faec );case 2:return _afbg .decodeTemplate2 (_beg ,_cbg ,_aag ,_gfd ,_faec );case 3:return _afbg .decodeTemplate3 (_beg ,_cbg ,_aag ,_gfd ,_faec );};return _fa .Errorf (_gbee ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_afbg .GBTemplate );};func (_gafa *GenericRegion )overrideAtTemplate0b (_fadc ,_ffee ,_gebg ,_fcd ,_edee ,_dede int )int {if _gafa .GBAtOverride [0]{_fadc &=0xFFFD;if _gafa .GBAtY [0]==0&&_gafa .GBAtX [0]>=-int8 (_edee ){_fadc |=(_fcd >>uint (int8 (_dede )-_gafa .GBAtX [0]&0x1))<<1;}else {_fadc |=int (_gafa .getPixel (_ffee +int (_gafa .GBAtX [0]),_gebg +int (_gafa .GBAtY [0])))<<1;};};if _gafa .GBAtOverride [1]{_fadc &=0xDFFF;if _gafa .GBAtY [1]==0&&_gafa .GBAtX [1]>=-int8 (_edee ){_fadc |=(_fcd >>uint (int8 (_dede )-_gafa .GBAtX [1]&0x1))<<13;}else {_fadc |=int (_gafa .getPixel (_ffee +int (_gafa .GBAtX [1]),_gebg +int (_gafa .GBAtY [1])))<<13;};};if _gafa .GBAtOverride [2]{_fadc &=0xFDFF;if _gafa .GBAtY [2]==0&&_gafa .GBAtX [2]>=-int8 (_edee ){_fadc |=(_fcd >>uint (int8 (_dede )-_gafa .GBAtX [2]&0x1))<<9;}else {_fadc |=int (_gafa .getPixel (_ffee +int (_gafa .GBAtX [2]),_gebg +int (_gafa .GBAtY [2])))<<9;};};if _gafa .GBAtOverride [3]{_fadc &=0xBFFF;if _gafa .GBAtY [3]==0&&_gafa .GBAtX [3]>=-int8 (_edee ){_fadc |=(_fcd >>uint (int8 (_dede )-_gafa .GBAtX [3]&0x1))<<14;}else {_fadc |=int (_gafa .getPixel (_ffee +int (_gafa .GBAtX [3]),_gebg +int (_gafa .GBAtY [3])))<<14;};};if _gafa .GBAtOverride [4]{_fadc &=0xEFFF;if _gafa .GBAtY [4]==0&&_gafa .GBAtX [4]>=-int8 (_edee ){_fadc |=(_fcd >>uint (int8 (_dede )-_gafa .GBAtX [4]&0x1))<<12;}else {_fadc |=int (_gafa .getPixel (_ffee +int (_gafa .GBAtX [4]),_gebg +int (_gafa .GBAtY [4])))<<12;};};if _gafa .GBAtOverride [5]{_fadc &=0xFFDF;if _gafa .GBAtY [5]==0&&_gafa .GBAtX [5]>=-int8 (_edee ){_fadc |=(_fcd >>uint (int8 (_dede )-_gafa .GBAtX [5]&0x1))<<5;}else {_fadc |=int (_gafa .getPixel (_ffee +int (_gafa .GBAtX [5]),_gebg +int (_gafa .GBAtY [5])))<<5;};};if _gafa .GBAtOverride [6]{_fadc &=0xFFFB;if _gafa .GBAtY [6]==0&&_gafa .GBAtX [6]>=-int8 (_edee ){_fadc |=(_fcd >>uint (int8 (_dede )-_gafa .GBAtX [6]&0x1))<<2;}else {_fadc |=int (_gafa .getPixel (_ffee +int (_gafa .GBAtX [6]),_gebg +int (_gafa .GBAtY [6])))<<2;};};if _gafa .GBAtOverride [7]{_fadc &=0xFFF7;if _gafa .GBAtY [7]==0&&_gafa .GBAtX [7]>=-int8 (_edee ){_fadc |=(_fcd >>uint (int8 (_dede )-_gafa .GBAtX [7]&0x1))<<3;}else {_fadc |=int (_gafa .getPixel (_ffee +int (_gafa .GBAtX [7]),_gebg +int (_gafa .GBAtY [7])))<<3;};};if _gafa .GBAtOverride [8]{_fadc &=0xF7FF;if _gafa .GBAtY [8]==0&&_gafa .GBAtX [8]>=-int8 (_edee ){_fadc |=(_fcd >>uint (int8 (_dede )-_gafa .GBAtX [8]&0x1))<<11;}else {_fadc |=int (_gafa .getPixel (_ffee +int (_gafa .GBAtX [8]),_gebg +int (_gafa .GBAtY [8])))<<11;};};if _gafa .GBAtOverride [9]{_fadc &=0xFFEF;if _gafa .GBAtY [9]==0&&_gafa .GBAtX [9]>=-int8 (_edee ){_fadc |=(_fcd >>uint (int8 (_dede )-_gafa .GBAtX [9]&0x1))<<4;}else {_fadc |=int (_gafa .getPixel (_ffee +int (_gafa .GBAtX [9]),_gebg +int (_gafa .GBAtY [9])))<<4;};};if _gafa .GBAtOverride [10]{_fadc &=0x7FFF;if _gafa .GBAtY [10]==0&&_gafa .GBAtX [10]>=-int8 (_edee ){_fadc |=(_fcd >>uint (int8 (_dede )-_gafa .GBAtX [10]&0x1))<<15;}else {_fadc |=int (_gafa .getPixel (_ffee +int (_gafa .GBAtX [10]),_gebg +int (_gafa .GBAtY [10])))<<15;};};if _gafa .GBAtOverride [11]{_fadc &=0xFDFF;if _gafa .GBAtY [11]==0&&_gafa .GBAtX [11]>=-int8 (_edee ){_fadc |=(_fcd >>uint (int8 (_dede )-_gafa .GBAtX [11]&0x1))<<10;}else {_fadc |=int (_gafa .getPixel (_ffee +int (_gafa .GBAtX [11]),_gebg +int (_gafa .GBAtY [11])))<<10;};};return _fadc ;};func (_egab *TextRegion )readUseRefinement ()error {if !_egab .UseRefinement ||_egab .SbrTemplate !=0{return nil ;};var (_defge byte ;_dfcc error ;);_egab .SbrATX =make ([]int8 ,2);_egab .SbrATY =make ([]int8 ,2);_defge ,_dfcc =_egab ._fbbf .ReadByte ();if _dfcc !=nil {return _dfcc ;};_egab .SbrATX [0]=int8 (_defge );_defge ,_dfcc =_egab ._fbbf .ReadByte ();if _dfcc !=nil {return _dfcc ;};_egab .SbrATY [0]=int8 (_defge );_defge ,_dfcc =_egab ._fbbf .ReadByte ();if _dfcc !=nil {return _dfcc ;};_egab .SbrATX [1]=int8 (_defge );_defge ,_dfcc =_egab ._fbbf .ReadByte ();if _dfcc !=nil {return _dfcc ;};_egab .SbrATY [1]=int8 (_defge );return nil ;};func (_ddda *PatternDictionary )readTemplate ()error {_acee ,_gfgb :=_ddda ._ggfb .ReadBits (2);if _gfgb !=nil {return _gfgb ;};_ddda .HDTemplate =byte (_acee );return nil ;};func (_gafgd *HalftoneRegion )combineGrayscalePlanes (_bbcab []*_ga .Bitmap ,_fcda int )error {_cgd :=0;for _eccc :=0;_eccc < _bbcab [_fcda ].Height ;_eccc ++{for _cfbg :=0;_cfbg < _bbcab [_fcda ].Width ;_cfbg +=8{_egca ,_acg :=_bbcab [_fcda +1].GetByte (_cgd );if _acg !=nil {return _acg ;};_cbeda ,_acg :=_bbcab [_fcda ].GetByte (_cgd );if _acg !=nil {return _acg ;};_acg =_bbcab [_fcda ].SetByte (_cgd ,_ga .CombineBytes (_cbeda ,_egca ,_ga .CmbOpXor ));if _acg !=nil {return _acg ;};_cgd ++;};};return nil ;};