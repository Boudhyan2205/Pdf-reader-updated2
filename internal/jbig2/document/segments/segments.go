//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_eg "encoding/binary";_ee "errors";_f "fmt";_df "github.com/unidoc/unipdf/v3/common";_gg "github.com/unidoc/unipdf/v3/internal/bitwise";_ea "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_fe "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_db "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ba "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_bb "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_gb "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_dd "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_fee "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_eb "golang.org/x/xerrors";_c "image";_b "io";_e "math";_d "strings";_bc "time";);var _ SegmentEncoder =&GenericRegion {};func _cgc (_gbgbc int )int {if _gbgbc ==0{return 0;
};_gbgbc |=_gbgbc >>1;_gbgbc |=_gbgbc >>2;_gbgbc |=_gbgbc >>4;_gbgbc |=_gbgbc >>8;_gbgbc |=_gbgbc >>16;return (_gbgbc +1)>>1;};func (_gfabb *GenericRegion )computeSegmentDataStructure ()error {_gfabb .DataOffset =_gfabb ._adad .StreamPosition ();_gfabb .DataHeaderLength =_gfabb .DataOffset -_gfabb .DataHeaderOffset ;
_gfabb .DataLength =int64 (_gfabb ._adad .Length ())-_gfabb .DataHeaderLength ;return nil ;};func (_fbfac *SymbolDictionary )decodeAggregate (_gafg ,_dgbe uint32 )error {var (_fcad int64 ;_adeb error ;);if _fbfac .IsHuffmanEncoded {_fcad ,_adeb =_fbfac .huffDecodeRefAggNInst ();
if _adeb !=nil {return _adeb ;};}else {_dafc ,_ggec :=_fbfac ._gadg .DecodeInt (_fbfac ._ccfc );if _ggec !=nil {return _ggec ;};_fcad =int64 (_dafc );};if _fcad > 1{return _fbfac .decodeThroughTextRegion (_gafg ,_dgbe ,uint32 (_fcad ));}else if _fcad ==1{return _fbfac .decodeRefinedSymbol (_gafg ,_dgbe );
};return nil ;};func (_dgdd *TextRegion )decodeRdw ()(int64 ,error ){const _gbbb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _dgdd .IsHuffmanEncoded {if _dgdd .SbHuffRDWidth ==3{if _dgdd ._agfdf ==nil {var (_effd int ;_bdeda error ;);if _dgdd .SbHuffFS ==3{_effd ++;
};if _dgdd .SbHuffDS ==3{_effd ++;};if _dgdd .SbHuffDT ==3{_effd ++;};_dgdd ._agfdf ,_bdeda =_dgdd .getUserTable (_effd );if _bdeda !=nil {return 0,_dd .Wrap (_bdeda ,_gbbb ,"");};};return _dgdd ._agfdf .Decode (_dgdd ._bfaa );};_cgcf ,_ecb :=_ba .GetStandardTable (14+int (_dgdd .SbHuffRDWidth ));
if _ecb !=nil {return 0,_dd .Wrap (_ecb ,_gbbb ,"");};return _cgcf .Decode (_dgdd ._bfaa );};_dbgf ,_gbgd :=_dgdd ._cfca .DecodeInt (_dgdd ._eegca );if _gbgd !=nil {return 0,_dd .Wrap (_gbgd ,_gbbb ,"");};return int64 (_dbgf ),nil ;};func (_cfdb *HalftoneRegion )computeY (_dgbg ,_edee int )int {return _cfdb .shiftAndFill (int (_cfdb .HGridY )+_dgbg *int (_cfdb .HRegionX )-_edee *int (_cfdb .HRegionY ));
};func (_edge *PatternDictionary )readGrayMax ()error {_babf ,_afc :=_edge ._agedc .ReadBits (32);if _afc !=nil {return _afc ;};_edge .GrayMax =uint32 (_babf &_e .MaxUint32 );return nil ;};func (_dgd *GenericRegion )decodeTemplate2 (_cba ,_gbd ,_aegd int ,_dedce ,_afe int )(_cdd error ){const _bdd ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_cfbc ,_fddc int ;_ecf ,_face int ;_eggd byte ;_fad ,_ggdf int ;);if _cba >=1{_eggd ,_cdd =_dgd .Bitmap .GetByte (_afe );if _cdd !=nil {return _dd .Wrap (_cdd ,_bdd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_ecf =int (_eggd );};if _cba >=2{_eggd ,_cdd =_dgd .Bitmap .GetByte (_afe -_dgd .Bitmap .RowStride );if _cdd !=nil {return _dd .Wrap (_cdd ,_bdd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_face =int (_eggd )<<4;
};_cfbc =(_ecf >>3&0x7c)|(_face >>3&0x380);for _fbec :=0;_fbec < _aegd ;_fbec =_fad {var (_aab byte ;_fdfaf int ;);_fad =_fbec +8;if _agaa :=_gbd -_fbec ;_agaa > 8{_fdfaf =8;}else {_fdfaf =_agaa ;};if _cba > 0{_ecf <<=8;if _fad < _gbd {_eggd ,_cdd =_dgd .Bitmap .GetByte (_afe +1);
if _cdd !=nil {return _dd .Wrap (_cdd ,_bdd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_ecf |=int (_eggd );};};if _cba > 1{_face <<=8;if _fad < _gbd {_eggd ,_cdd =_dgd .Bitmap .GetByte (_afe -_dgd .Bitmap .RowStride +1);
if _cdd !=nil {return _dd .Wrap (_cdd ,_bdd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_face |=int (_eggd )<<4;};};for _efgg :=0;_efgg < _fdfaf ;_efgg ++{_fdg :=uint (10-_efgg );if _dgd ._eac {_fddc =_dgd .overrideAtTemplate2 (_cfbc ,_fbec +_efgg ,_cba ,int (_aab ),_efgg );
_dgd ._dee .SetIndex (int32 (_fddc ));}else {_dgd ._dee .SetIndex (int32 (_cfbc ));};_ggdf ,_cdd =_dgd ._bbf .DecodeBit (_dgd ._dee );if _cdd !=nil {return _dd .Wrap (_cdd ,_bdd ,"");};_aab |=byte (_ggdf <<uint (7-_efgg ));_cfbc =((_cfbc &0x1bd)<<1)|_ggdf |((_ecf >>_fdg )&0x4)|((_face >>_fdg )&0x80);
};if _eeab :=_dgd .Bitmap .SetByte (_dedce ,_aab );_eeab !=nil {return _dd .Wrap (_eeab ,_bdd ,"");};_dedce ++;_afe ++;};return nil ;};func (_dgac *Header )readNumberOfReferredToSegments (_dfdf _gg .StreamReader )(uint64 ,error ){const _bggb ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_dbec ,_gcec :=_dfdf .ReadBits (3);if _gcec !=nil {return 0,_dd .Wrap (_gcec ,_bggb ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_dbec &=0xf;var _egfb []byte ;if _dbec <=4{_egfb =make ([]byte ,5);for _degg :=0;_degg <=4;_degg ++{_efggb ,_fbbc :=_dfdf .ReadBit ();
if _fbbc !=nil {return 0,_dd .Wrap (_fbbc ,_bggb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_egfb [_degg ]=byte (_efggb );};}else {_dbec ,_gcec =_dfdf .ReadBits (29);if _gcec !=nil {return 0,_gcec ;};_dbec &=_e .MaxInt32 ;
_aeddb :=(_dbec +8)>>3;_aeddb <<=3;_egfb =make ([]byte ,_aeddb );var _dbdca uint64 ;for _dbdca =0;_dbdca < _aeddb ;_dbdca ++{_gde ,_bddb :=_dfdf .ReadBit ();if _bddb !=nil {return 0,_dd .Wrap (_bddb ,_bggb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_egfb [_dbdca ]=byte (_gde );};};return _dbec ,nil ;};func (_cbb *GenericRefinementRegion )setParameters (_ffg *_db .DecoderStats ,_dbcc *_db .Decoder ,_gff int8 ,_ddg ,_fcd uint32 ,_fbd *_fe .Bitmap ,_eba ,_aee int32 ,_fcb bool ,_bebf []int8 ,_fbe []int8 ){_df .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _ffg !=nil {_cbb ._fc =_ffg ;};if _dbcc !=nil {_cbb ._cd =_dbcc ;};_cbb .TemplateID =_gff ;_cbb .RegionInfo .BitmapWidth =_ddg ;_cbb .RegionInfo .BitmapHeight =_fcd ;_cbb .ReferenceBitmap =_fbd ;_cbb .ReferenceDX =_eba ;_cbb .ReferenceDY =_aee ;_cbb .IsTPGROn =_fcb ;
_cbb .GrAtX =_bebf ;_cbb .GrAtY =_fbe ;_cbb .RegionBitmap =nil ;_df .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_cbb );
};func (_dbde *PageInformationSegment )readMaxStripeSize ()error {_feg ,_dgde :=_dbde ._cffe .ReadBits (15);if _dgde !=nil {return _dgde ;};_dbde .MaxStripeSize =uint16 (_feg &_e .MaxUint16 );return nil ;};func (_bbbg *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _bbbg ._bgfa ==nil {var (_gcdb int ;
_ggdg error ;);if _bbbg .SdHuffDecodeHeightSelection ==3{_gcdb ++;};if _bbbg .SdHuffDecodeWidthSelection ==3{_gcdb ++;};_bbbg ._bgfa ,_ggdg =_bbbg .getUserTable (_gcdb );if _ggdg !=nil {return 0,_ggdg ;};};return _bbbg ._bgfa .Decode (_bbbg ._dccdg );};
var _ SegmentEncoder =&RegionSegment {};func (_bgbc *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_aegg int ;_bcga int32 ;_dccb error ;_bbad =int32 (_bgbc ._eda +_bgbc .NumberOfNewSymbols );_edfa =make ([]int ,_bbad ););for _cecg :=int32 (0);
_cecg < _bbad ;_cecg +=_bcga {if _bgbc .IsHuffmanEncoded {_bbdgb ,_afef :=_ba .GetStandardTable (1);if _afef !=nil {return nil ,_afef ;};_agea ,_afef :=_bbdgb .Decode (_bgbc ._dccdg );if _afef !=nil {return nil ,_afef ;};_bcga =int32 (_agea );}else {_bcga ,_dccb =_bgbc ._gadg .DecodeInt (_bgbc ._ccgb );
if _dccb !=nil {return nil ,_dccb ;};};if _bcga !=0{for _bgbe :=_cecg ;_bgbe < _cecg +_bcga ;_bgbe ++{_edfa [_bgbe ]=_aegg ;};};if _aegg ==0{_aegg =1;}else {_aegg =0;};};return _edfa ,nil ;};func (_bggc *SymbolDictionary )setInSyms ()error {if _bggc .Header .RTSegments !=nil {return _bggc .retrieveImportSymbols ();
};_bggc ._ebef =make ([]*_fe .Bitmap ,0);return nil ;};func (_gf *EndOfStripe )Init (h *Header ,r _gg .StreamReader )error {_gf ._eea =r ;return _gf .parseHeader (h ,r );};func (_cage *TextRegion )getSymbols ()error {if _cage .Header .RTSegments !=nil {return _cage .initSymbols ();
};return nil ;};func (_dbdb *TextRegion )parseHeader ()error {var _bgea error ;_df .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _bgea !=nil {_df .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_bgea );
}else {_df .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _bgea =_dbdb .RegionInfo .parseHeader ();
_bgea !=nil {return _bgea ;};if _bgea =_dbdb .readRegionFlags ();_bgea !=nil {return _bgea ;};if _dbdb .IsHuffmanEncoded {if _bgea =_dbdb .readHuffmanFlags ();_bgea !=nil {return _bgea ;};};if _bgea =_dbdb .readUseRefinement ();_bgea !=nil {return _bgea ;
};if _bgea =_dbdb .readAmountOfSymbolInstances ();_bgea !=nil {return _bgea ;};if _bgea =_dbdb .getSymbols ();_bgea !=nil {return _bgea ;};if _bgea =_dbdb .computeSymbolCodeLength ();_bgea !=nil {return _bgea ;};if _bgea =_dbdb .checkInput ();_bgea !=nil {return _bgea ;
};_df .Log .Trace ("\u0025\u0073",_dbdb .String ());return nil ;};func (_bbcf *TextRegion )encodeFlags (_edcdf _gg .BinaryWriter )(_babcf int ,_efge error ){const _ffed ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _efge =_edcdf .WriteBit (int (_bbcf .SbrTemplate ));
_efge !=nil {return _babcf ,_dd .Wrap (_efge ,_ffed ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_efge =_edcdf .WriteBits (uint64 (_bbcf .SbDsOffset ),5);_efge !=nil {return _babcf ,_dd .Wrap (_efge ,_ffed ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _efge =_edcdf .WriteBit (int (_bbcf .DefaultPixel ));_efge !=nil {return _babcf ,_dd .Wrap (_efge ,_ffed ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_efge =_edcdf .WriteBits (uint64 (_bbcf .CombinationOperator ),2);
_efge !=nil {return _babcf ,_dd .Wrap (_efge ,_ffed ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _efge =_edcdf .WriteBit (int (_bbcf .IsTransposed ));_efge !=nil {return _babcf ,_dd .Wrap (_efge ,_ffed ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_efge =_edcdf .WriteBits (uint64 (_bbcf .ReferenceCorner ),2);_efge !=nil {return _babcf ,_dd .Wrap (_efge ,_ffed ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_efge =_edcdf .WriteBits (uint64 (_bbcf .LogSBStrips ),2);
_efge !=nil {return _babcf ,_dd .Wrap (_efge ,_ffed ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _agfc int ;if _bbcf .UseRefinement {_agfc =1;};if _efge =_edcdf .WriteBit (_agfc );_efge !=nil {return _babcf ,_dd .Wrap (_efge ,_ffed ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_agfc =0;if _bbcf .IsHuffmanEncoded {_agfc =1;};if _efge =_edcdf .WriteBit (_agfc );_efge !=nil {return _babcf ,_dd .Wrap (_efge ,_ffed ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_babcf =2;return _babcf ,nil ;};func (_fadb *PatternDictionary )parseHeader ()error {_df .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_df .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_cdec :=_fadb ._agedc .ReadBits (5);if _cdec !=nil {return _cdec ;};if _cdec =_fadb .readTemplate ();_cdec !=nil {return _cdec ;};if _cdec =_fadb .readIsMMREncoded ();_cdec !=nil {return _cdec ;};if _cdec =_fadb .readPatternWidthAndHeight ();_cdec !=nil {return _cdec ;
};if _cdec =_fadb .readGrayMax ();_cdec !=nil {return _cdec ;};if _cdec =_fadb .computeSegmentDataStructure ();_cdec !=nil {return _cdec ;};return _fadb .checkInput ();};func (_eafe *GenericRegion )copyLineAbove (_af int )error {_fdd :=_af *_eafe .Bitmap .RowStride ;
_dcb :=_fdd -_eafe .Bitmap .RowStride ;for _dbdg :=0;_dbdg < _eafe .Bitmap .RowStride ;_dbdg ++{_bgb ,_egc :=_eafe .Bitmap .GetByte (_dcb );if _egc !=nil {return _egc ;};_dcb ++;if _egc =_eafe .Bitmap .SetByte (_fdd ,_bgb );_egc !=nil {return _egc ;};_fdd ++;
};return nil ;};func (_bfa *PatternDictionary )Init (h *Header ,r _gg .StreamReader )error {_bfa ._agedc =r ;return _bfa .parseHeader ();};func (_aagf *TextRegion )setParameters (_eeca *_db .Decoder ,_gaca ,_egac bool ,_cegg ,_gfgf uint32 ,_aefd uint32 ,_fabbg int8 ,_cfgf uint32 ,_bbcc int8 ,_efcd _fe .CombinationOperator ,_dgeg int8 ,_cfge int16 ,_dggg ,_egbb ,_feedg ,_ecgfe ,_bagb ,_facb ,_dcfae ,_dagc ,_fdfdb ,_eacc int8 ,_faae ,_cggf []int8 ,_acab []*_fe .Bitmap ,_cada int8 ){_aagf ._cfca =_eeca ;
_aagf .IsHuffmanEncoded =_gaca ;_aagf .UseRefinement =_egac ;_aagf .RegionInfo .BitmapWidth =_cegg ;_aagf .RegionInfo .BitmapHeight =_gfgf ;_aagf .NumberOfSymbolInstances =_aefd ;_aagf .SbStrips =_fabbg ;_aagf .NumberOfSymbols =_cfgf ;_aagf .DefaultPixel =_bbcc ;
_aagf .CombinationOperator =_efcd ;_aagf .IsTransposed =_dgeg ;_aagf .ReferenceCorner =_cfge ;_aagf .SbDsOffset =_dggg ;_aagf .SbHuffFS =_egbb ;_aagf .SbHuffDS =_feedg ;_aagf .SbHuffDT =_ecgfe ;_aagf .SbHuffRDWidth =_bagb ;_aagf .SbHuffRDHeight =_facb ;
_aagf .SbHuffRSize =_fdfdb ;_aagf .SbHuffRDX =_dcfae ;_aagf .SbHuffRDY =_dagc ;_aagf .SbrTemplate =_eacc ;_aagf .SbrATX =_faae ;_aagf .SbrATY =_cggf ;_aagf .Symbols =_acab ;_aagf ._ecaba =_cada ;};func (_dbfe *SymbolDictionary )setRetainedCodingContexts (_ggaca *SymbolDictionary ){_dbfe ._gadg =_ggaca ._gadg ;
_dbfe .IsHuffmanEncoded =_ggaca .IsHuffmanEncoded ;_dbfe .UseRefinementAggregation =_ggaca .UseRefinementAggregation ;_dbfe .SdTemplate =_ggaca .SdTemplate ;_dbfe .SdrTemplate =_ggaca .SdrTemplate ;_dbfe .SdATX =_ggaca .SdATX ;_dbfe .SdATY =_ggaca .SdATY ;
_dbfe .SdrATX =_ggaca .SdrATX ;_dbfe .SdrATY =_ggaca .SdrATY ;_dbfe ._bgefe =_ggaca ._bgefe ;};func (_bccc *HalftoneRegion )GetPatterns ()([]*_fe .Bitmap ,error ){var (_ceabf []*_fe .Bitmap ;_cef error ;);for _ ,_fdc :=range _bccc ._dadf .RTSegments {var _fefdc Segmenter ;
_fefdc ,_cef =_fdc .GetSegmentData ();if _cef !=nil {_df .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_cef );return nil ,_cef ;};_ebcb ,_bgfe :=_fefdc .(*PatternDictionary );
if !_bgfe {_cef =_f .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_fefdc );
return nil ,_cef ;};var _aegc []*_fe .Bitmap ;_aegc ,_cef =_ebcb .GetDictionary ();if _cef !=nil {_df .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cef );
return nil ,_cef ;};_ceabf =append (_ceabf ,_aegc ...);};return _ceabf ,nil ;};func (_bbb *GenericRegion )decodeSLTP ()(int ,error ){switch _bbb .GBTemplate {case 0:_bbb ._dee .SetIndex (0x9B25);case 1:_bbb ._dee .SetIndex (0x795);case 2:_bbb ._dee .SetIndex (0xE5);
case 3:_bbb ._dee .SetIndex (0x195);};return _bbb ._bbf .DecodeBit (_bbb ._dee );};func (_fege *SymbolDictionary )addSymbol (_ccgf Regioner )error {_gbdff ,_ebbf :=_ccgf .GetRegionBitmap ();if _ebbf !=nil {return _ebbf ;};_fege ._fafd [_fege ._edcg ]=_gbdff ;
_fege ._bccb =append (_fege ._bccb ,_gbdff );_df .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_gbdff );return nil ;};func (_cceg *GenericRegion )String ()string {_agf :=&_d .Builder {};
_agf .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_agf .WriteString (_cceg .RegionSegment .String ()+"\u000a");_agf .WriteString (_f .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_cceg .UseExtTemplates ));
_agf .WriteString (_f .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cceg .IsTPGDon ));_agf .WriteString (_f .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_cceg .GBTemplate ));
_agf .WriteString (_f .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_cceg .IsMMREncoded ));_agf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_cceg .GBAtX ));
_agf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_cceg .GBAtY ));_agf .WriteString (_f .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_cceg .GBAtOverride ));
return _agf .String ();};func (_aeb *Header )writeSegmentNumber (_cbec _gg .BinaryWriter )(_fcca int ,_eca error ){_ggea :=make ([]byte ,4);_eg .BigEndian .PutUint32 (_ggea ,_aeb .SegmentNumber );if _fcca ,_eca =_cbec .Write (_ggea );_eca !=nil {return 0,_dd .Wrap (_eca ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _fcca ,nil ;};func (_bfed *SymbolDictionary )String ()string {_gbfb :=&_d .Builder {};_gbfb .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_gbfb .WriteString (_f .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_bfed .SdrTemplate ));
_gbfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_bfed .SdTemplate ));_gbfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_bfed ._cacc ));
_gbfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_bfed ._fgbd ));_gbfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_bfed .SdHuffAggInstanceSelection ));
_gbfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_bfed .SdHuffBMSizeSelection ));_gbfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_bfed .SdHuffDecodeWidthSelection ));
_gbfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_bfed .SdHuffDecodeHeightSelection ));_gbfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_bfed .UseRefinementAggregation ));
_gbfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_bfed .IsHuffmanEncoded ));_gbfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_bfed .SdATX ));
_gbfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_bfed .SdATY ));_gbfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_bfed .SdrATX ));_gbfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_bfed .SdrATY ));
_gbfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_bfed .NumberOfExportedSymbols ));_gbfb .WriteString (_f .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_bfed .NumberOfNewSymbols ));
_gbfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_bfed ._eda ));_gbfb .WriteString (_f .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_bfed ._edcg ));
return _gbfb .String ();};func (_bbbc *PatternDictionary )setGbAtPixels (){if _bbbc .HDTemplate ==0{_bbbc .GBAtX =make ([]int8 ,4);_bbbc .GBAtY =make ([]int8 ,4);_bbbc .GBAtX [0]=-int8 (_bbbc .HdpWidth );_bbbc .GBAtY [0]=0;_bbbc .GBAtX [1]=-3;_bbbc .GBAtY [1]=-1;
_bbbc .GBAtX [2]=2;_bbbc .GBAtY [2]=-2;_bbbc .GBAtX [3]=-2;_bbbc .GBAtY [3]=-2;}else {_bbbc .GBAtX =[]int8 {-int8 (_bbbc .HdpWidth )};_bbbc .GBAtY =[]int8 {0};};};func (_aaa *GenericRefinementRegion )getPixel (_bab *_fe .Bitmap ,_bgdc ,_aaag int )int {if _bgdc < 0||_bgdc >=_bab .Width {return 0;
};if _aaag < 0||_aaag >=_bab .Height {return 0;};if _bab .GetPixel (_bgdc ,_aaag ){return 1;};return 0;};func (_ddac *GenericRegion )setParametersWithAt (_bfgb bool ,_cdaa byte ,_bdff ,_aafc bool ,_gbaa ,_dcfa []int8 ,_cbeg ,_dfc uint32 ,_fedf *_db .DecoderStats ,_beaba *_db .Decoder ){_ddac .IsMMREncoded =_bfgb ;
_ddac .GBTemplate =_cdaa ;_ddac .IsTPGDon =_bdff ;_ddac .GBAtX =_gbaa ;_ddac .GBAtY =_dcfa ;_ddac .RegionSegment .BitmapHeight =_dfc ;_ddac .RegionSegment .BitmapWidth =_cbeg ;_ddac ._ccb =nil ;_ddac .Bitmap =nil ;if _fedf !=nil {_ddac ._dee =_fedf ;};
if _beaba !=nil {_ddac ._bbf =_beaba ;};_df .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_ddac );
};func (_acb *GenericRegion )InitEncode (bm *_fe .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _cdg ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _dd .Error (_cdg ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _dd .Error (_cdg ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_acb .Bitmap =bm ;_acb .GBTemplate =byte (template );switch _acb .GBTemplate {case 0:_acb .GBAtX =[]int8 {3,-3,2,-2};_acb .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_acb .GBAtX =[]int8 {3};_acb .GBAtY =[]int8 {-1};case 2,3:_acb .GBAtX =[]int8 {2};_acb .GBAtY =[]int8 {-1};
default:return _dd .Errorf (_cdg ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_acb .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_acb .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_gc *EndOfStripe )parseHeader (_be *Header ,_bf _gg .StreamReader )error {_bfg ,_cc :=_gc ._eea .ReadBits (32);
if _cc !=nil {return _cc ;};_gc ._dbf =int (_bfg &_e .MaxInt32 );return nil ;};func (_ebb *GenericRefinementRegion )decodeSLTP ()(int ,error ){_ebb .Template .setIndex (_ebb ._fc );return _ebb ._cd .DecodeBit (_ebb ._fc );};func (_bfbb *GenericRegion )overrideAtTemplate2 (_ceab ,_caff ,_eefb ,_bde ,_bbba int )int {_ceab &=0x3FB;
if _bfbb .GBAtY [0]==0&&_bfbb .GBAtX [0]>=-int8 (_bbba ){_ceab |=(_bde >>uint (7-(int8 (_bbba )+_bfbb .GBAtX [0]))&0x1)<<2;}else {_ceab |=int (_bfbb .getPixel (_caff +int (_bfbb .GBAtX [0]),_eefb +int (_bfbb .GBAtY [0])))<<2;};return _ceab ;};func (_dedcc *GenericRegion )Encode (w _gg .BinaryWriter )(_ccfg int ,_bcbf error ){const _beg ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _dedcc .Bitmap ==nil {return 0,_dd .Error (_beg ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_efg ,_bcbf :=_dedcc .RegionSegment .Encode (w );if _bcbf !=nil {return 0,_dd .Wrap (_bcbf ,_beg ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_ccfg +=_efg ;if _bcbf =w .SkipBits (4);_bcbf !=nil {return _ccfg ,_dd .Wrap (_bcbf ,_beg ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _bbe int ;if _dedcc .IsTPGDon {_bbe =1;};if _bcbf =w .WriteBit (_bbe );
_bcbf !=nil {return _ccfg ,_dd .Wrap (_bcbf ,_beg ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_bbe =0;if _bcbf =w .WriteBit (int (_dedcc .GBTemplate >>1)&0x01);_bcbf !=nil {return _ccfg ,_dd .Wrap (_bcbf ,_beg ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _bcbf =w .WriteBit (int (_dedcc .GBTemplate )&0x01);_bcbf !=nil {return _ccfg ,_dd .Wrap (_bcbf ,_beg ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _dedcc .UseMMR {_bbe =1;};if _bcbf =w .WriteBit (_bbe );
_bcbf !=nil {return _ccfg ,_dd .Wrap (_bcbf ,_beg ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_ccfg ++;if _efg ,_bcbf =_dedcc .writeGBAtPixels (w );_bcbf !=nil {return _ccfg ,_dd .Wrap (_bcbf ,_beg ,"");};_ccfg +=_efg ;_dccd :=_gb .New ();
if _bcbf =_dccd .EncodeBitmap (_dedcc .Bitmap ,_dedcc .IsTPGDon );_bcbf !=nil {return _ccfg ,_dd .Wrap (_bcbf ,_beg ,"");};_dccd .Final ();var _dfda int64 ;if _dfda ,_bcbf =_dccd .WriteTo (w );_bcbf !=nil {return _ccfg ,_dd .Wrap (_bcbf ,_beg ,"");};_ccfg +=int (_dfda );
return _ccfg ,nil ;};type SegmentEncoder interface{Encode (_fabg _gg .BinaryWriter )(_edce int ,_eebd error );};func (_dbed *Header )pageSize ()uint {if _dbed .PageAssociation <=255{return 1;};return 4;};type OrganizationType uint8 ;type EndOfStripe struct{_eea _gg .StreamReader ;
_dbf int ;};func (_gbdaf *TextRegion )blit (_cecc *_fe .Bitmap ,_dgdbg int64 )error {if _gbdaf .IsTransposed ==0&&(_gbdaf .ReferenceCorner ==2||_gbdaf .ReferenceCorner ==3){_gbdaf ._fcgc +=int64 (_cecc .Width -1);}else if _gbdaf .IsTransposed ==1&&(_gbdaf .ReferenceCorner ==0||_gbdaf .ReferenceCorner ==2){_gbdaf ._fcgc +=int64 (_cecc .Height -1);
};_bcaf :=_gbdaf ._fcgc ;if _gbdaf .IsTransposed ==1{_bcaf ,_dgdbg =_dgdbg ,_bcaf ;};switch _gbdaf .ReferenceCorner {case 0:_dgdbg -=int64 (_cecc .Height -1);case 2:_dgdbg -=int64 (_cecc .Height -1);_bcaf -=int64 (_cecc .Width -1);case 3:_bcaf -=int64 (_cecc .Width -1);
};_cffa :=_fe .Blit (_cecc ,_gbdaf .RegionBitmap ,int (_bcaf ),int (_dgdbg ),_gbdaf .CombinationOperator );if _cffa !=nil {return _cffa ;};if _gbdaf .IsTransposed ==0&&(_gbdaf .ReferenceCorner ==0||_gbdaf .ReferenceCorner ==1){_gbdaf ._fcgc +=int64 (_cecc .Width -1);
};if _gbdaf .IsTransposed ==1&&(_gbdaf .ReferenceCorner ==1||_gbdaf .ReferenceCorner ==3){_gbdaf ._fcgc +=int64 (_cecc .Height -1);};return nil ;};func (_ccce *GenericRegion )getPixel (_abdf ,_aae int )int8 {if _abdf < 0||_abdf >=_ccce .Bitmap .Width {return 0;
};if _aae < 0||_aae >=_ccce .Bitmap .Height {return 0;};if _ccce .Bitmap .GetPixel (_abdf ,_aae ){return 1;};return 0;};type SymbolDictionary struct{_dccdg _gg .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_cacc bool ;_fgbd bool ;SdHuffAggInstanceSelection bool ;
SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;
Header *Header ;_eda uint32 ;_ebef []*_fe .Bitmap ;_edcg uint32 ;_fafd []*_fe .Bitmap ;_egb _ba .Tabler ;_geae _ba .Tabler ;_bgfa _ba .Tabler ;_gebb _ba .Tabler ;_adeg []*_fe .Bitmap ;_bccb []*_fe .Bitmap ;_gadg *_db .Decoder ;_babc *TextRegion ;_efbd *GenericRegion ;
_aefga *GenericRefinementRegion ;_bgefe *_db .DecoderStats ;_cdeb *_db .DecoderStats ;_gfgce *_db .DecoderStats ;_ccfc *_db .DecoderStats ;_ccgb *_db .DecoderStats ;_ffgf *_db .DecoderStats ;_afeg *_db .DecoderStats ;_gbgg *_db .DecoderStats ;_adbg *_db .DecoderStats ;
_aaagc int8 ;_bfgfa *_fe .Bitmaps ;_daef []int ;_cbaf map[int ]int ;_cgcg bool ;};func (_abde *HalftoneRegion )renderPattern (_ffec [][]int )(_afd error ){var _gae ,_bec int ;for _adb :=0;_adb < int (_abde .HGridHeight );_adb ++{for _gefc :=0;_gefc < int (_abde .HGridWidth );
_gefc ++{_gae =_abde .computeX (_adb ,_gefc );_bec =_abde .computeY (_adb ,_gefc );_cdgg :=_abde .Patterns [_ffec [_adb ][_gefc ]];if _afd =_fe .Blit (_cdgg ,_abde .HalftoneRegionBitmap ,_gae +int (_abde .HGridX ),_bec +int (_abde .HGridY ),_abde .CombinationOperator );
_afd !=nil {return _afd ;};};};return nil ;};func (_gcdfe *TextRegion )getUserTable (_gdbd int )(_ba .Tabler ,error ){const _bbca ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _agfa int ;for _ ,_gagce :=range _gcdfe .Header .RTSegments {if _gagce .Type ==53{if _agfa ==_gdbd {_cbda ,_ddbb :=_gagce .GetSegmentData ();
if _ddbb !=nil {return nil ,_ddbb ;};_ebacc ,_afbb :=_cbda .(*TableSegment );if !_afbb {_df .Log .Debug (_f .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_gagce .SegmentNumber ));
return nil ,_dd .Error (_bbca ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _ba .NewEncodedTable (_ebacc );};_agfa ++;};};return nil ,nil ;};func (_aadc *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_fe .Points ,symbols *_fe .Bitmaps ,classIDs *_ea .IntSlice ,boxes *_fe .Boxes ,width ,height ,symBits int ){_aadc .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_aadc ._cbcd =globalSymbolsMap ;_aadc ._cedf =localSymbolsMap ;_aadc ._eabgg =comps ;_aadc ._cacdb =inLL ;_aadc ._bbce =symbols ;_aadc ._edfc =classIDs ;_aadc ._egdc =boxes ;_aadc ._ebaa =symBits ;};func (_degb *PageInformationSegment )readIsLossless ()error {_bcgb ,_dfgb :=_degb ._cffe .ReadBit ();
if _dfgb !=nil {return _dfgb ;};if _bcgb ==1{_degb .IsLossless =true ;};return nil ;};func (_fcg *TableSegment )HtOOB ()int32 {return _fcg ._gbag };type Segmenter interface{Init (_adbc *Header ,_gfaeg _gg .StreamReader )error ;};func (_dgae *GenericRegion )setParametersMMR (_abad bool ,_feb ,_fdee int64 ,_deaa ,_gcd uint32 ,_ffbd byte ,_cegd ,_fef bool ,_gfb ,_agfd []int8 ){_dgae .DataOffset =_feb ;
_dgae .DataLength =_fdee ;_dgae .RegionSegment =&RegionSegment {};_dgae .RegionSegment .BitmapHeight =_deaa ;_dgae .RegionSegment .BitmapWidth =_gcd ;_dgae .GBTemplate =_ffbd ;_dgae .IsMMREncoded =_abad ;_dgae .IsTPGDon =_cegd ;_dgae .GBAtX =_gfb ;_dgae .GBAtY =_agfd ;
};func (_fecb *TextRegion )decodeIb (_bdce ,_cccg int64 )(*_fe .Bitmap ,error ){const _fafff ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_gbfac error ;_deag *_fe .Bitmap ;);if _bdce ==0{if int (_cccg )> len (_fecb .Symbols )-1{return nil ,_dd .Error (_fafff ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _fecb .Symbols [int (_cccg )],nil ;};var _ccbe ,_gedb ,_cfdba ,_fbeb int64 ;_ccbe ,_gbfac =_fecb .decodeRdw ();if _gbfac !=nil {return nil ,_dd .Wrap (_gbfac ,_fafff ,"");};_gedb ,_gbfac =_fecb .decodeRdh ();if _gbfac !=nil {return nil ,_dd .Wrap (_gbfac ,_fafff ,"");
};_cfdba ,_gbfac =_fecb .decodeRdx ();if _gbfac !=nil {return nil ,_dd .Wrap (_gbfac ,_fafff ,"");};_fbeb ,_gbfac =_fecb .decodeRdy ();if _gbfac !=nil {return nil ,_dd .Wrap (_gbfac ,_fafff ,"");};if _fecb .IsHuffmanEncoded {if _ ,_gbfac =_fecb .decodeSymInRefSize ();
_gbfac !=nil {return nil ,_dd .Wrap (_gbfac ,_fafff ,"");};_fecb ._bfaa .Align ();};_agbg :=_fecb .Symbols [_cccg ];_begf :=uint32 (_agbg .Width );_acad :=uint32 (_agbg .Height );_ffge :=int32 (uint32 (_ccbe )>>1)+int32 (_cfdba );_fdab :=int32 (uint32 (_gedb )>>1)+int32 (_fbeb );
if _fecb ._dbce ==nil {_fecb ._dbce =_gdcb (_fecb ._bfaa ,nil );};_fecb ._dbce .setParameters (_fecb ._eecg ,_fecb ._cfca ,_fecb .SbrTemplate ,_begf +uint32 (_ccbe ),_acad +uint32 (_gedb ),_agbg ,_ffge ,_fdab ,false ,_fecb .SbrATX ,_fecb .SbrATY );_deag ,_gbfac =_fecb ._dbce .GetRegionBitmap ();
if _gbfac !=nil {return nil ,_dd .Wrap (_gbfac ,_fafff ,"\u0067\u0072\u0066");};if _fecb .IsHuffmanEncoded {_fecb ._bfaa .Align ();};return _deag ,nil ;};func (_ebdf *TableSegment )parseHeader ()error {var (_abgd int ;_gefb uint64 ;_bebc error ;);_abgd ,_bebc =_ebdf ._eaedd .ReadBit ();
if _bebc !=nil {return _bebc ;};if _abgd ==1{return _f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_abgd );
};if _gefb ,_bebc =_ebdf ._eaedd .ReadBits (3);_bebc !=nil {return _bebc ;};_ebdf ._gdde =(int32 (_gefb )+1)&0xf;if _gefb ,_bebc =_ebdf ._eaedd .ReadBits (3);_bebc !=nil {return _bebc ;};_ebdf ._cbaa =(int32 (_gefb )+1)&0xf;if _gefb ,_bebc =_ebdf ._eaedd .ReadBits (32);
_bebc !=nil {return _bebc ;};_ebdf ._cabf =int32 (_gefb &_e .MaxInt32 );if _gefb ,_bebc =_ebdf ._eaedd .ReadBits (32);_bebc !=nil {return _bebc ;};_ebdf ._bedb =int32 (_gefb &_e .MaxInt32 );return nil ;};func (_ddba *GenericRegion )overrideAtTemplate0a (_cfcd ,_gbca ,_dbfc ,_ffe ,_ffef ,_ffgb int )int {if _ddba .GBAtOverride [0]{_cfcd &=0xFFEF;
if _ddba .GBAtY [0]==0&&_ddba .GBAtX [0]>=-int8 (_ffef ){_cfcd |=(_ffe >>uint (int8 (_ffgb )-_ddba .GBAtX [0]&0x1))<<4;}else {_cfcd |=int (_ddba .getPixel (_gbca +int (_ddba .GBAtX [0]),_dbfc +int (_ddba .GBAtY [0])))<<4;};};if _ddba .GBAtOverride [1]{_cfcd &=0xFBFF;
if _ddba .GBAtY [1]==0&&_ddba .GBAtX [1]>=-int8 (_ffef ){_cfcd |=(_ffe >>uint (int8 (_ffgb )-_ddba .GBAtX [1]&0x1))<<10;}else {_cfcd |=int (_ddba .getPixel (_gbca +int (_ddba .GBAtX [1]),_dbfc +int (_ddba .GBAtY [1])))<<10;};};if _ddba .GBAtOverride [2]{_cfcd &=0xF7FF;
if _ddba .GBAtY [2]==0&&_ddba .GBAtX [2]>=-int8 (_ffef ){_cfcd |=(_ffe >>uint (int8 (_ffgb )-_ddba .GBAtX [2]&0x1))<<11;}else {_cfcd |=int (_ddba .getPixel (_gbca +int (_ddba .GBAtX [2]),_dbfc +int (_ddba .GBAtY [2])))<<11;};};if _ddba .GBAtOverride [3]{_cfcd &=0x7FFF;
if _ddba .GBAtY [3]==0&&_ddba .GBAtX [3]>=-int8 (_ffef ){_cfcd |=(_ffe >>uint (int8 (_ffgb )-_ddba .GBAtX [3]&0x1))<<15;}else {_cfcd |=int (_ddba .getPixel (_gbca +int (_ddba .GBAtX [3]),_dbfc +int (_ddba .GBAtY [3])))<<15;};};return _cfcd ;};func (_dfdag *SymbolDictionary )encodeFlags (_ccdcb _gg .BinaryWriter )(_edcd int ,_egcc error ){const _gcdf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _egcc =_ccdcb .SkipBits (3);_egcc !=nil {return 0,_dd .Wrap (_egcc ,_gcdf ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _dffg int ;if _dfdag .SdrTemplate > 0{_dffg =1;};if _egcc =_ccdcb .WriteBit (_dffg );_egcc !=nil {return _edcd ,_dd .Wrap (_egcc ,_gcdf ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_dffg =0;if _dfdag .SdTemplate > 1{_dffg =1;};if _egcc =_ccdcb .WriteBit (_dffg );_egcc !=nil {return _edcd ,_dd .Wrap (_egcc ,_gcdf ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dffg =0;if _dfdag .SdTemplate ==1||_dfdag .SdTemplate ==3{_dffg =1;
};if _egcc =_ccdcb .WriteBit (_dffg );_egcc !=nil {return _edcd ,_dd .Wrap (_egcc ,_gcdf ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dffg =0;if _dfdag ._cacc {_dffg =1;};if _egcc =_ccdcb .WriteBit (_dffg );_egcc !=nil {return _edcd ,_dd .Wrap (_egcc ,_gcdf ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_dffg =0;if _dfdag ._fgbd {_dffg =1;};if _egcc =_ccdcb .WriteBit (_dffg );_egcc !=nil {return _edcd ,_dd .Wrap (_egcc ,_gcdf ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_dffg =0;if _dfdag .SdHuffAggInstanceSelection {_dffg =1;
};if _egcc =_ccdcb .WriteBit (_dffg );_egcc !=nil {return _edcd ,_dd .Wrap (_egcc ,_gcdf ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_dffg =int (_dfdag .SdHuffBMSizeSelection );if _egcc =_ccdcb .WriteBit (_dffg );
_egcc !=nil {return _edcd ,_dd .Wrap (_egcc ,_gcdf ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_dffg =0;if _dfdag .SdHuffDecodeWidthSelection > 1{_dffg =1;};if _egcc =_ccdcb .WriteBit (_dffg );_egcc !=nil {return _edcd ,_dd .Wrap (_egcc ,_gcdf ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_dffg =0;switch _dfdag .SdHuffDecodeWidthSelection {case 1,3:_dffg =1;};if _egcc =_ccdcb .WriteBit (_dffg );_egcc !=nil {return _edcd ,_dd .Wrap (_egcc ,_gcdf ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_dffg =0;if _dfdag .SdHuffDecodeHeightSelection > 1{_dffg =1;
};if _egcc =_ccdcb .WriteBit (_dffg );_egcc !=nil {return _edcd ,_dd .Wrap (_egcc ,_gcdf ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_dffg =0;switch _dfdag .SdHuffDecodeHeightSelection {case 1,3:_dffg =1;};if _egcc =_ccdcb .WriteBit (_dffg );
_egcc !=nil {return _edcd ,_dd .Wrap (_egcc ,_gcdf ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_dffg =0;if _dfdag .UseRefinementAggregation {_dffg =1;};if _egcc =_ccdcb .WriteBit (_dffg );_egcc !=nil {return _edcd ,_dd .Wrap (_egcc ,_gcdf ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_dffg =0;if _dfdag .IsHuffmanEncoded {_dffg =1;};if _egcc =_ccdcb .WriteBit (_dffg );_egcc !=nil {return _edcd ,_dd .Wrap (_egcc ,_gcdf ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_fgbe *SymbolDictionary )readRefinementAtPixels (_gbcd int )error {_fgbe .SdrATX =make ([]int8 ,_gbcd );
_fgbe .SdrATY =make ([]int8 ,_gbcd );var (_fbbcf byte ;_bgff error ;);for _bgeca :=0;_bgeca < _gbcd ;_bgeca ++{_fbbcf ,_bgff =_fgbe ._dccdg .ReadByte ();if _bgff !=nil {return _bgff ;};_fgbe .SdrATX [_bgeca ]=int8 (_fbbcf );_fbbcf ,_bgff =_fgbe ._dccdg .ReadByte ();
if _bgff !=nil {return _bgff ;};_fgbe .SdrATY [_bgeca ]=int8 (_fbbcf );};return nil ;};func (_fdfab *PatternDictionary )readPatternWidthAndHeight ()error {_fffg ,_faff :=_fdfab ._agedc .ReadByte ();if _faff !=nil {return _faff ;};_fdfab .HdpWidth =_fffg ;
_fffg ,_faff =_fdfab ._agedc .ReadByte ();if _faff !=nil {return _faff ;};_fdfab .HdpHeight =_fffg ;return nil ;};func (_bbfc *PageInformationSegment )String ()string {_feebf :=&_d .Builder {};_feebf .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_feebf .WriteString (_f .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_bbfc .PageBMHeight ));_feebf .WriteString (_f .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_bbfc .PageBMWidth ));
_feebf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_bbfc .ResolutionX ));_feebf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_bbfc .ResolutionY ));
_feebf .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_bbfc ._dgcbb ));_feebf .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_bbfc ._dfde ));
_feebf .WriteString (_f .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_bbfc .IsLossless ));_feebf .WriteString (_f .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bbfc ._bfgf ));
_feebf .WriteString (_f .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_bbfc ._cbced ));_feebf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_bbfc .IsStripe ));
_feebf .WriteString (_f .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_bbfc .MaxStripeSize ));return _feebf .String ();};func (_aecf *GenericRegion )overrideAtTemplate3 (_bda ,_ecff ,_cbg ,_agd ,_bed int )int {_bda &=0x3EF;
if _aecf .GBAtY [0]==0&&_aecf .GBAtX [0]>=-int8 (_bed ){_bda |=(_agd >>uint (7-(int8 (_bed )+_aecf .GBAtX [0]))&0x1)<<4;}else {_bda |=int (_aecf .getPixel (_ecff +int (_aecf .GBAtX [0]),_cbg +int (_aecf .GBAtY [0])))<<4;};return _bda ;};func (_bdaa *RegionSegment )readCombinationOperator ()error {_ggbd ,_cggc :=_bdaa ._eefac .ReadBits (3);
if _cggc !=nil {return _cggc ;};_bdaa .CombinaionOperator =_fe .CombinationOperator (_ggbd &0xF);return nil ;};type GenericRegion struct{_adad _gg .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;
UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_eac bool ;Bitmap *_fe .Bitmap ;_bbf *_db .Decoder ;_dee *_db .DecoderStats ;_ccb *_bb .Decoder ;};func (_dcbg *HalftoneRegion )computeSegmentDataStructure ()error {_dcbg .DataOffset =_dcbg ._aefg .StreamPosition ();
_dcbg .DataHeaderLength =_dcbg .DataOffset -_dcbg .DataHeaderOffset ;_dcbg .DataLength =int64 (_dcbg ._aefg .Length ())-_dcbg .DataHeaderLength ;return nil ;};func (_beee *SymbolDictionary )checkInput ()error {if _beee .SdHuffDecodeHeightSelection ==2{_df .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_beee .SdHuffDecodeHeightSelection );
};if _beee .SdHuffDecodeWidthSelection ==2{_df .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_beee .SdHuffDecodeWidthSelection );
};if _beee .IsHuffmanEncoded {if _beee .SdTemplate !=0{_df .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_beee .SdTemplate );
};if !_beee .UseRefinementAggregation {if !_beee .UseRefinementAggregation {if _beee ._cacc {_df .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_beee ._cacc =false ;};if _beee ._fgbd {_df .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_beee ._fgbd =false ;};};};}else {if _beee .SdHuffBMSizeSelection !=0{_df .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_beee .SdHuffBMSizeSelection =0;};if _beee .SdHuffDecodeWidthSelection !=0{_df .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_beee .SdHuffDecodeWidthSelection =0;};if _beee .SdHuffDecodeHeightSelection !=0{_df .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_beee .SdHuffDecodeHeightSelection =0;};};if !_beee .UseRefinementAggregation {if _beee .SdrTemplate !=0{_df .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_beee .SdrTemplate );
_beee .SdrTemplate =0;};};if !_beee .IsHuffmanEncoded ||!_beee .UseRefinementAggregation {if _beee .SdHuffAggInstanceSelection {_df .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_beee .SdHuffAggInstanceSelection );
};};return nil ;};func (_dce *PatternDictionary )extractPatterns (_eceb *_fe .Bitmap )error {var _bcfe int ;_cbggg :=make ([]*_fe .Bitmap ,_dce .GrayMax +1);for _bcfe <=int (_dce .GrayMax ){_dabc :=int (_dce .HdpWidth )*_bcfe ;_dfgc :=_c .Rect (_dabc ,0,_dabc +int (_dce .HdpWidth ),int (_dce .HdpHeight ));
_effe ,_fgde :=_fe .Extract (_dfgc ,_eceb );if _fgde !=nil {return _fgde ;};_cbggg [_bcfe ]=_effe ;_bcfe ++;};_dce .Patterns =_cbggg ;return nil ;};func (_baae *PageInformationSegment )readCombinationOperator ()error {_ddef ,_dfcb :=_baae ._cffe .ReadBits (2);
if _dfcb !=nil {return _dfcb ;};_baae ._dgcbb =_fe .CombinationOperator (int (_ddef ));return nil ;};func (_aba *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_dcc ,_eaf ,_fdf ,_bcb ,_ggf ,_cfe ,_cff ,_aec ,_eggb int )error {var (_ebg ,_ccf ,_ccg ,_fb ,_daa ,_ade int ;
_ed byte ;_bg error ;);if _dcc > 0{_ed ,_bg =_aba .RegionBitmap .GetByte (_cff -_fdf );if _bg !=nil {return _bg ;};_ccg =int (_ed );};if _aec > 0&&_aec <=_aba .ReferenceBitmap .Height {_ed ,_bg =_aba .ReferenceBitmap .GetByte (_eggb -_bcb +_cfe );if _bg !=nil {return _bg ;
};_fb =int (_ed )<<4;};if _aec >=0&&_aec < _aba .ReferenceBitmap .Height {_ed ,_bg =_aba .ReferenceBitmap .GetByte (_eggb +_cfe );if _bg !=nil {return _bg ;};_daa =int (_ed )<<1;};if _aec > -2&&_aec < _aba .ReferenceBitmap .Height -1{_ed ,_bg =_aba .ReferenceBitmap .GetByte (_eggb +_bcb +_cfe );
if _bg !=nil {return _bg ;};_ade =int (_ed );};_ebg =((_ccg >>5)&0x6)|((_ade >>2)&0x30)|(_daa &0x180)|(_fb &0xc00);var _gcc int ;for _fcf :=0;_fcf < _ggf ;_fcf =_gcc {var _fbf int ;_gcc =_fcf +8;var _ag int ;if _ag =_eaf -_fcf ;_ag > 8{_ag =8;};_bfb :=_gcc < _eaf ;
_gbg :=_gcc < _aba .ReferenceBitmap .Width ;_gfg :=_cfe +1;if _dcc > 0{_ed =0;if _bfb {_ed ,_bg =_aba .RegionBitmap .GetByte (_cff -_fdf +1);if _bg !=nil {return _bg ;};};_ccg =(_ccg <<8)|int (_ed );};if _aec > 0&&_aec <=_aba .ReferenceBitmap .Height {var _fbfd int ;
if _gbg {_ed ,_bg =_aba .ReferenceBitmap .GetByte (_eggb -_bcb +_gfg );if _bg !=nil {return _bg ;};_fbfd =int (_ed )<<4;};_fb =(_fb <<8)|_fbfd ;};if _aec >=0&&_aec < _aba .ReferenceBitmap .Height {var _bac int ;if _gbg {_ed ,_bg =_aba .ReferenceBitmap .GetByte (_eggb +_gfg );
if _bg !=nil {return _bg ;};_bac =int (_ed )<<1;};_daa =(_daa <<8)|_bac ;};if _aec > -2&&_aec < (_aba .ReferenceBitmap .Height -1){_ed =0;if _gbg {_ed ,_bg =_aba .ReferenceBitmap .GetByte (_eggb +_bcb +_gfg );if _bg !=nil {return _bg ;};};_ade =(_ade <<8)|int (_ed );
};for _cfeg :=0;_cfeg < _ag ;_cfeg ++{var _bge int ;_eef :=false ;_ga :=(_ebg >>4)&0x1ff;if _ga ==0x1ff{_eef =true ;_bge =1;}else if _ga ==0x00{_eef =true ;};if !_eef {if _aba ._gbc {_ccf =_aba .overrideAtTemplate0 (_ebg ,_fcf +_cfeg ,_dcc ,_fbf ,_cfeg );
_aba ._fc .SetIndex (int32 (_ccf ));}else {_aba ._fc .SetIndex (int32 (_ebg ));};_bge ,_bg =_aba ._cd .DecodeBit (_aba ._fc );if _bg !=nil {return _bg ;};};_gcf :=uint (7-_cfeg );_fbf |=_bge <<_gcf ;_ebg =((_ebg &0xdb6)<<1)|_bge |(_ccg >>_gcf +5)&0x002|((_ade >>_gcf +2)&0x010)|((_daa >>_gcf )&0x080)|((_fb >>_gcf )&0x400);
};_bg =_aba .RegionBitmap .SetByte (_cff ,byte (_fbf ));if _bg !=nil {return _bg ;};_cff ++;_eggb ++;};return nil ;};func (_egf *Header )GetSegmentData ()(Segmenter ,error ){var _aabg Segmenter ;if _egf .SegmentData !=nil {_aabg =_egf .SegmentData ;};if _aabg ==nil {_ebee ,_eae :=_abbff [_egf .Type ];
if !_eae {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_egf .Type ,_egf .Type );};_aabg =_ebee ();
_df .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_egf .SegmentNumber ,_egf .SegmentDataStartOffset );
_afb ,_bafd :=_egf .subInputReader ();if _bafd !=nil {return nil ,_bafd ;};if _eaed :=_aabg .Init (_egf ,_afb );_eaed !=nil {_df .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_eaed ,_aabg );
return nil ,_eaed ;};_egf .SegmentData =_aabg ;};return _aabg ,nil ;};func (_eag *GenericRefinementRegion )getGrReference ()(*_fe .Bitmap ,error ){segments :=_eag ._ac .RTSegments ;if len (segments )==0{return nil ,_ee .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_bcf ,_fa :=segments [0].GetSegmentData ();if _fa !=nil {return nil ,_fa ;};_dag ,_dagf :=_bcf .(Regioner );if !_dagf {return nil ,_f .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_bcf );
};return _dag .GetRegionBitmap ();};func (_ccbf *Header )String ()string {_bdc :=&_d .Builder {};_bdc .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_bdc .WriteString (_f .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_ccbf .SegmentNumber ));
_bdc .WriteString (_f .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_ccbf .Type ));_bdc .WriteString (_f .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_ccbf .RetainFlag ));
_bdc .WriteString (_f .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ccbf .PageAssociation ));_bdc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_ccbf .PageAssociationFieldSize ));
_bdc .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_acge :=range _ccbf .RTSNumbers {_bdc .WriteString (_f .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_acge ));};_bdc .WriteString (_f .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_ccbf .HeaderLength ));
_bdc .WriteString (_f .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_ccbf .SegmentDataLength ));_bdc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_ccbf .SegmentDataStartOffset ));
return _bdc .String ();};func (_febe *TextRegion )decodeDT ()(_gafb int64 ,_ccdb error ){if _febe .IsHuffmanEncoded {if _febe .SbHuffDT ==3{_gafb ,_ccdb =_febe ._afcd .Decode (_febe ._bfaa );if _ccdb !=nil {return 0,_ccdb ;};}else {var _dedfe _ba .Tabler ;
_dedfe ,_ccdb =_ba .GetStandardTable (11+int (_febe .SbHuffDT ));if _ccdb !=nil {return 0,_ccdb ;};_gafb ,_ccdb =_dedfe .Decode (_febe ._bfaa );if _ccdb !=nil {return 0,_ccdb ;};};}else {var _eccde int32 ;_eccde ,_ccdb =_febe ._cfca .DecodeInt (_febe ._dbcf );
if _ccdb !=nil {return ;};_gafb =int64 (_eccde );};_gafb *=int64 (_febe .SbStrips );return _gafb ,nil ;};type template1 struct{};func (_gag *PageInformationSegment )readIsStriped ()error {_gaff ,_acfb :=_gag ._cffe .ReadBit ();if _acfb !=nil {return _acfb ;
};if _gaff ==1{_gag .IsStripe =true ;};return nil ;};func (_dffgf *TextRegion )createRegionBitmap ()error {_dffgf .RegionBitmap =_fe .New (int (_dffgf .RegionInfo .BitmapWidth ),int (_dffgf .RegionInfo .BitmapHeight ));if _dffgf .DefaultPixel !=0{_dffgf .RegionBitmap .SetDefaultPixel ();
};return nil ;};func (_bfca *SymbolDictionary )decodeHeightClassCollectiveBitmap (_bbbab int64 ,_fedg ,_fdff uint32 )(*_fe .Bitmap ,error ){if _bbbab ==0{_egdb :=_fe .New (int (_fdff ),int (_fedg ));var (_dcgc byte ;_gead error ;);for _cgcge :=0;_cgcge < len (_egdb .Data );
_cgcge ++{_dcgc ,_gead =_bfca ._dccdg .ReadByte ();if _gead !=nil {return nil ,_gead ;};if _gead =_egdb .SetByte (_cgcge ,_dcgc );_gead !=nil {return nil ,_gead ;};};return _egdb ,nil ;};if _bfca ._efbd ==nil {_bfca ._efbd =NewGenericRegion (_bfca ._dccdg );
};_bfca ._efbd .setParameters (true ,_bfca ._dccdg .StreamPosition (),_bbbab ,_fedg ,_fdff );_beacf ,_aadf :=_bfca ._efbd .GetRegionBitmap ();if _aadf !=nil {return nil ,_aadf ;};return _beacf ,nil ;};func (_ggbgb *HalftoneRegion )combineGrayscalePlanes (_edc []*_fe .Bitmap ,_eggda int )error {_aafce :=0;
for _ced :=0;_ced < _edc [_eggda ].Height ;_ced ++{for _geb :=0;_geb < _edc [_eggda ].Width ;_geb +=8{_dbccd ,_gad :=_edc [_eggda +1].GetByte (_aafce );if _gad !=nil {return _gad ;};_dcgf ,_gad :=_edc [_eggda ].GetByte (_aafce );if _gad !=nil {return _gad ;
};_gad =_edc [_eggda ].SetByte (_aafce ,_fe .CombineBytes (_dcgf ,_dbccd ,_fe .CmbOpXor ));if _gad !=nil {return _gad ;};_aafce ++;};};return nil ;};func (_bbcg *Header )parse (_babd Documenter ,_gac _gg .StreamReader ,_deac int64 ,_dgaa OrganizationType )(_gefg error ){const _bfbba ="\u0070\u0061\u0072s\u0065";
_df .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _gefg !=nil {_df .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gefg );
}else {_df .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_gefg =_gac .Seek (_deac ,_b .SeekStart );
if _gefg !=nil {return _dd .Wrap (_gefg ,_bfbba ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _gefg =_bbcg .readSegmentNumber (_gac );_gefg !=nil {return _dd .Wrap (_gefg ,_bfbba ,"");};if _gefg =_bbcg .readHeaderFlags ();_gefg !=nil {return _dd .Wrap (_gefg ,_bfbba ,"");
};var _bccg uint64 ;_bccg ,_gefg =_bbcg .readNumberOfReferredToSegments (_gac );if _gefg !=nil {return _dd .Wrap (_gefg ,_bfbba ,"");};_bbcg .RTSNumbers ,_gefg =_bbcg .readReferredToSegmentNumbers (_gac ,int (_bccg ));if _gefg !=nil {return _dd .Wrap (_gefg ,_bfbba ,"");
};_gefg =_bbcg .readSegmentPageAssociation (_babd ,_gac ,_bccg ,_bbcg .RTSNumbers ...);if _gefg !=nil {return _dd .Wrap (_gefg ,_bfbba ,"");};if _bbcg .Type !=TEndOfFile {if _gefg =_bbcg .readSegmentDataLength (_gac );_gefg !=nil {return _dd .Wrap (_gefg ,_bfbba ,"");
};};_bbcg .readDataStartOffset (_gac ,_dgaa );_bbcg .readHeaderLength (_gac ,_deac );_df .Log .Trace ("\u0025\u0073",_bbcg );return nil ;};func (_bacfd *TextRegion )readUseRefinement ()error {if !_bacfd .UseRefinement ||_bacfd .SbrTemplate !=0{return nil ;
};var (_ecfbe byte ;_bdb error ;);_bacfd .SbrATX =make ([]int8 ,2);_bacfd .SbrATY =make ([]int8 ,2);_ecfbe ,_bdb =_bacfd ._bfaa .ReadByte ();if _bdb !=nil {return _bdb ;};_bacfd .SbrATX [0]=int8 (_ecfbe );_ecfbe ,_bdb =_bacfd ._bfaa .ReadByte ();if _bdb !=nil {return _bdb ;
};_bacfd .SbrATY [0]=int8 (_ecfbe );_ecfbe ,_bdb =_bacfd ._bfaa .ReadByte ();if _bdb !=nil {return _bdb ;};_bacfd .SbrATX [1]=int8 (_ecfbe );_ecfbe ,_bdb =_bacfd ._bfaa .ReadByte ();if _bdb !=nil {return _bdb ;};_bacfd .SbrATY [1]=int8 (_ecfbe );return nil ;
};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;
TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;
TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_acc *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _acc .RegionSegment };func (_ggda *PageInformationSegment )encodeFlags (_cfbe _gg .BinaryWriter )(_aca error ){const _aag ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _aca =_cfbe .SkipBits (1);_aca !=nil {return _dd .Wrap (_aca ,_aag ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _faad int ;if _ggda .CombinationOperatorOverrideAllowed (){_faad =1;};if _aca =_cfbe .WriteBit (_faad );
_aca !=nil {return _dd .Wrap (_aca ,_aag ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_faad =0;if _ggda ._bfgf {_faad =1;
};if _aca =_cfbe .WriteBit (_faad );_aca !=nil {return _dd .Wrap (_aca ,_aag ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _aca =_cfbe .WriteBit ((int (_ggda ._dgcbb )>>1)&0x01);
_aca !=nil {return _dd .Wrap (_aca ,_aag ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _aca =_cfbe .WriteBit (int (_ggda ._dgcbb )&0x01);
_aca !=nil {return _dd .Wrap (_aca ,_aag ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_faad =int (_ggda .DefaultPixelValue );
if _aca =_cfbe .WriteBit (_faad );_aca !=nil {return _dd .Wrap (_aca ,_aag ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_faad =0;if _ggda ._cbced {_faad =1;
};if _aca =_cfbe .WriteBit (_faad );_aca !=nil {return _dd .Wrap (_aca ,_aag ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_faad =0;if _ggda .IsLossless {_faad =1;};if _aca =_cfbe .WriteBit (_faad );
_aca !=nil {return _dd .Wrap (_aca ,_aag ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};type EncodeInitializer interface{InitEncode ();};func (_cfcg *SymbolDictionary )encodeRefinementATFlags (_ddce _gg .BinaryWriter )(_edca int ,_ecgd error ){const _edac ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_cfcg .UseRefinementAggregation ||_cfcg .SdrTemplate !=0{return 0,nil ;};for _cedd :=0;_cedd < 2;_cedd ++{if _ecgd =_ddce .WriteByte (byte (_cfcg .SdrATX [_cedd ]));_ecgd !=nil {return _edca ,_dd .Wrapf (_ecgd ,_edac ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_cedd );
};_edca ++;if _ecgd =_ddce .WriteByte (byte (_cfcg .SdrATY [_cedd ]));_ecgd !=nil {return _edca ,_dd .Wrapf (_ecgd ,_edac ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_cedd );};_edca ++;};return _edca ,nil ;};func (_cbf *GenericRefinementRegion )String ()string {_dfb :=&_d .Builder {};
_dfb .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_dfb .WriteString (_cbf .RegionInfo .String ()+"\u000a");_dfb .WriteString (_f .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cbf .IsTPGROn ));
_dfb .WriteString (_f .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_cbf .TemplateID ));_dfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_cbf .GrAtX ));
_dfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_cbf .GrAtY ));_dfb .WriteString (_f .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_cbf .ReferenceDX ));
_dfb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_cbf .ReferenceDY ));return _dfb .String ();};func (_fgg *HalftoneRegion )GetRegionBitmap ()(*_fe .Bitmap ,error ){if _fgg .HalftoneRegionBitmap !=nil {return _fgg .HalftoneRegionBitmap ,nil ;
};var _fefd error ;_fgg .HalftoneRegionBitmap =_fe .New (int (_fgg .RegionSegment .BitmapWidth ),int (_fgg .RegionSegment .BitmapHeight ));if _fgg .Patterns ==nil ||len (_fgg .Patterns )==0{_fgg .Patterns ,_fefd =_fgg .GetPatterns ();if _fefd !=nil {return nil ,_fefd ;
};};if _fgg .HDefaultPixel ==1{_fgg .HalftoneRegionBitmap .SetDefaultPixel ();};_gbdf :=_e .Ceil (_e .Log (float64 (len (_fgg .Patterns )))/_e .Log (2));_ddee :=int (_gbdf );var _dfg [][]int ;_dfg ,_fefd =_fgg .grayScaleDecoding (_ddee );if _fefd !=nil {return nil ,_fefd ;
};if _fefd =_fgg .renderPattern (_dfg );_fefd !=nil {return nil ,_fefd ;};return _fgg .HalftoneRegionBitmap ,nil ;};func (_cgdg *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _cgdg .IsHuffmanEncoded {return _cgdg .decodeHeightClassDeltaHeightWithHuffman ();
};_cgfa ,_bddef :=_cgdg ._gadg .DecodeInt (_cgdg ._cdeb );if _bddef !=nil {return 0,_bddef ;};return int64 (_cgfa ),nil ;};func (_fccc *SymbolDictionary )setAtPixels ()error {if _fccc .IsHuffmanEncoded {return nil ;};_eddg :=1;if _fccc .SdTemplate ==0{_eddg =4;
};if _cdgb :=_fccc .readAtPixels (_eddg );_cdgb !=nil {return _cdgb ;};return nil ;};func (_fab *GenericRefinementRegion )decodeTypicalPredictedLine (_ca ,_cdc ,_dedc ,_beb ,_dcg ,_eeb int )error {_eage :=_ca -int (_fab .ReferenceDY );_dga :=_fab .ReferenceBitmap .GetByteIndex (0,_eage );
_ge :=_fab .RegionBitmap .GetByteIndex (0,_ca );var _gec error ;switch _fab .TemplateID {case 0:_gec =_fab .decodeTypicalPredictedLineTemplate0 (_ca ,_cdc ,_dedc ,_beb ,_dcg ,_eeb ,_ge ,_eage ,_dga );case 1:_gec =_fab .decodeTypicalPredictedLineTemplate1 (_ca ,_cdc ,_dedc ,_beb ,_dcg ,_eeb ,_ge ,_eage ,_dga );
};return _gec ;};func (_bgge *GenericRegion )parseHeader ()(_fdfa error ){_df .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _fdfa !=nil {_df .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_fdfa );
}else {_df .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_feef int ;_ffd uint64 ;);if _fdfa =_bgge .RegionSegment .parseHeader ();_fdfa !=nil {return _fdfa ;};if _ ,_fdfa =_bgge ._adad .ReadBits (3);_fdfa !=nil {return _fdfa ;};_feef ,_fdfa =_bgge ._adad .ReadBit ();if _fdfa !=nil {return _fdfa ;};
if _feef ==1{_bgge .UseExtTemplates =true ;};_feef ,_fdfa =_bgge ._adad .ReadBit ();if _fdfa !=nil {return _fdfa ;};if _feef ==1{_bgge .IsTPGDon =true ;};_ffd ,_fdfa =_bgge ._adad .ReadBits (2);if _fdfa !=nil {return _fdfa ;};_bgge .GBTemplate =byte (_ffd &0xf);
_feef ,_fdfa =_bgge ._adad .ReadBit ();if _fdfa !=nil {return _fdfa ;};if _feef ==1{_bgge .IsMMREncoded =true ;};if !_bgge .IsMMREncoded {_bcc :=1;if _bgge .GBTemplate ==0{_bcc =4;if _bgge .UseExtTemplates {_bcc =12;};};if _fdfa =_bgge .readGBAtPixels (_bcc );
_fdfa !=nil {return _fdfa ;};};if _fdfa =_bgge .computeSegmentDataStructure ();_fdfa !=nil {return _fdfa ;};_df .Log .Trace ("\u0025\u0073",_bgge );return nil ;};func (_cgf *RegionSegment )Encode (w _gg .BinaryWriter )(_cgb int ,_fbef error ){const _fcedg ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_bggg :=make ([]byte ,4);_eg .BigEndian .PutUint32 (_bggg ,_cgf .BitmapWidth );_cgb ,_fbef =w .Write (_bggg );if _fbef !=nil {return 0,_dd .Wrap (_fbef ,_fcedg ,"\u0057\u0069\u0064t\u0068");};_eg .BigEndian .PutUint32 (_bggg ,_cgf .BitmapHeight );var _dfdd int ;
_dfdd ,_fbef =w .Write (_bggg );if _fbef !=nil {return 0,_dd .Wrap (_fbef ,_fcedg ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_cgb +=_dfdd ;_eg .BigEndian .PutUint32 (_bggg ,_cgf .XLocation );_dfdd ,_fbef =w .Write (_bggg );if _fbef !=nil {return 0,_dd .Wrap (_fbef ,_fcedg ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_cgb +=_dfdd ;_eg .BigEndian .PutUint32 (_bggg ,_cgf .YLocation );_dfdd ,_fbef =w .Write (_bggg );if _fbef !=nil {return 0,_dd .Wrap (_fbef ,_fcedg ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_cgb +=_dfdd ;if _fbef =w .WriteByte (byte (_cgf .CombinaionOperator )&0x07);
_fbef !=nil {return 0,_dd .Wrap (_fbef ,_fcedg ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_cgb ++;return _cgb ,nil ;};func (_abbf *HalftoneRegion )checkInput ()error {if _abbf .IsMMREncoded {if _abbf .HTemplate !=0{_df .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_abbf .HTemplate );
};if _abbf .HSkipEnabled {_df .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_abbf .HSkipEnabled );
};};return nil ;};func (_dgadg *TextRegion )decodeRdx ()(int64 ,error ){const _afac ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _dgadg .IsHuffmanEncoded {if _dgadg .SbHuffRDX ==3{if _dgadg ._gagg ==nil {var (_aeda int ;_bgcfb error ;);if _dgadg .SbHuffFS ==3{_aeda ++;
};if _dgadg .SbHuffDS ==3{_aeda ++;};if _dgadg .SbHuffDT ==3{_aeda ++;};if _dgadg .SbHuffRDWidth ==3{_aeda ++;};if _dgadg .SbHuffRDHeight ==3{_aeda ++;};_dgadg ._gagg ,_bgcfb =_dgadg .getUserTable (_aeda );if _bgcfb !=nil {return 0,_dd .Wrap (_bgcfb ,_afac ,"");
};};return _dgadg ._gagg .Decode (_dgadg ._bfaa );};_bcdad ,_dbbf :=_ba .GetStandardTable (14+int (_dgadg .SbHuffRDX ));if _dbbf !=nil {return 0,_dd .Wrap (_dbbf ,_afac ,"");};return _bcdad .Decode (_dgadg ._bfaa );};_aggc ,_bdga :=_dgadg ._cfca .DecodeInt (_dgadg ._eddd );
if _bdga !=nil {return 0,_dd .Wrap (_bdga ,_afac ,"");};return int64 (_aggc ),nil ;};func (_dbaa *SymbolDictionary )readRegionFlags ()error {var (_befd uint64 ;_aacf int ;);_ ,_gacfd :=_dbaa ._dccdg .ReadBits (3);if _gacfd !=nil {return _gacfd ;};_aacf ,_gacfd =_dbaa ._dccdg .ReadBit ();
if _gacfd !=nil {return _gacfd ;};_dbaa .SdrTemplate =int8 (_aacf );_befd ,_gacfd =_dbaa ._dccdg .ReadBits (2);if _gacfd !=nil {return _gacfd ;};_dbaa .SdTemplate =int8 (_befd &0xf);_aacf ,_gacfd =_dbaa ._dccdg .ReadBit ();if _gacfd !=nil {return _gacfd ;
};if _aacf ==1{_dbaa ._cacc =true ;};_aacf ,_gacfd =_dbaa ._dccdg .ReadBit ();if _gacfd !=nil {return _gacfd ;};if _aacf ==1{_dbaa ._fgbd =true ;};_aacf ,_gacfd =_dbaa ._dccdg .ReadBit ();if _gacfd !=nil {return _gacfd ;};if _aacf ==1{_dbaa .SdHuffAggInstanceSelection =true ;
};_aacf ,_gacfd =_dbaa ._dccdg .ReadBit ();if _gacfd !=nil {return _gacfd ;};_dbaa .SdHuffBMSizeSelection =int8 (_aacf );_befd ,_gacfd =_dbaa ._dccdg .ReadBits (2);if _gacfd !=nil {return _gacfd ;};_dbaa .SdHuffDecodeWidthSelection =int8 (_befd &0xf);_befd ,_gacfd =_dbaa ._dccdg .ReadBits (2);
if _gacfd !=nil {return _gacfd ;};_dbaa .SdHuffDecodeHeightSelection =int8 (_befd &0xf);_aacf ,_gacfd =_dbaa ._dccdg .ReadBit ();if _gacfd !=nil {return _gacfd ;};if _aacf ==1{_dbaa .UseRefinementAggregation =true ;};_aacf ,_gacfd =_dbaa ._dccdg .ReadBit ();
if _gacfd !=nil {return _gacfd ;};if _aacf ==1{_dbaa .IsHuffmanEncoded =true ;};return nil ;};func (_fced *PatternDictionary )readIsMMREncoded ()error {_egfc ,_eegd :=_fced ._agedc .ReadBit ();if _eegd !=nil {return _eegd ;};if _egfc !=0{_fced .IsMMREncoded =true ;
};return nil ;};func (_dbdc *GenericRegion )overrideAtTemplate0b (_fcc ,_cfd ,_edd ,_adadc ,_bebg ,_fdfd int )int {if _dbdc .GBAtOverride [0]{_fcc &=0xFFFD;if _dbdc .GBAtY [0]==0&&_dbdc .GBAtX [0]>=-int8 (_bebg ){_fcc |=(_adadc >>uint (int8 (_fdfd )-_dbdc .GBAtX [0]&0x1))<<1;
}else {_fcc |=int (_dbdc .getPixel (_cfd +int (_dbdc .GBAtX [0]),_edd +int (_dbdc .GBAtY [0])))<<1;};};if _dbdc .GBAtOverride [1]{_fcc &=0xDFFF;if _dbdc .GBAtY [1]==0&&_dbdc .GBAtX [1]>=-int8 (_bebg ){_fcc |=(_adadc >>uint (int8 (_fdfd )-_dbdc .GBAtX [1]&0x1))<<13;
}else {_fcc |=int (_dbdc .getPixel (_cfd +int (_dbdc .GBAtX [1]),_edd +int (_dbdc .GBAtY [1])))<<13;};};if _dbdc .GBAtOverride [2]{_fcc &=0xFDFF;if _dbdc .GBAtY [2]==0&&_dbdc .GBAtX [2]>=-int8 (_bebg ){_fcc |=(_adadc >>uint (int8 (_fdfd )-_dbdc .GBAtX [2]&0x1))<<9;
}else {_fcc |=int (_dbdc .getPixel (_cfd +int (_dbdc .GBAtX [2]),_edd +int (_dbdc .GBAtY [2])))<<9;};};if _dbdc .GBAtOverride [3]{_fcc &=0xBFFF;if _dbdc .GBAtY [3]==0&&_dbdc .GBAtX [3]>=-int8 (_bebg ){_fcc |=(_adadc >>uint (int8 (_fdfd )-_dbdc .GBAtX [3]&0x1))<<14;
}else {_fcc |=int (_dbdc .getPixel (_cfd +int (_dbdc .GBAtX [3]),_edd +int (_dbdc .GBAtY [3])))<<14;};};if _dbdc .GBAtOverride [4]{_fcc &=0xEFFF;if _dbdc .GBAtY [4]==0&&_dbdc .GBAtX [4]>=-int8 (_bebg ){_fcc |=(_adadc >>uint (int8 (_fdfd )-_dbdc .GBAtX [4]&0x1))<<12;
}else {_fcc |=int (_dbdc .getPixel (_cfd +int (_dbdc .GBAtX [4]),_edd +int (_dbdc .GBAtY [4])))<<12;};};if _dbdc .GBAtOverride [5]{_fcc &=0xFFDF;if _dbdc .GBAtY [5]==0&&_dbdc .GBAtX [5]>=-int8 (_bebg ){_fcc |=(_adadc >>uint (int8 (_fdfd )-_dbdc .GBAtX [5]&0x1))<<5;
}else {_fcc |=int (_dbdc .getPixel (_cfd +int (_dbdc .GBAtX [5]),_edd +int (_dbdc .GBAtY [5])))<<5;};};if _dbdc .GBAtOverride [6]{_fcc &=0xFFFB;if _dbdc .GBAtY [6]==0&&_dbdc .GBAtX [6]>=-int8 (_bebg ){_fcc |=(_adadc >>uint (int8 (_fdfd )-_dbdc .GBAtX [6]&0x1))<<2;
}else {_fcc |=int (_dbdc .getPixel (_cfd +int (_dbdc .GBAtX [6]),_edd +int (_dbdc .GBAtY [6])))<<2;};};if _dbdc .GBAtOverride [7]{_fcc &=0xFFF7;if _dbdc .GBAtY [7]==0&&_dbdc .GBAtX [7]>=-int8 (_bebg ){_fcc |=(_adadc >>uint (int8 (_fdfd )-_dbdc .GBAtX [7]&0x1))<<3;
}else {_fcc |=int (_dbdc .getPixel (_cfd +int (_dbdc .GBAtX [7]),_edd +int (_dbdc .GBAtY [7])))<<3;};};if _dbdc .GBAtOverride [8]{_fcc &=0xF7FF;if _dbdc .GBAtY [8]==0&&_dbdc .GBAtX [8]>=-int8 (_bebg ){_fcc |=(_adadc >>uint (int8 (_fdfd )-_dbdc .GBAtX [8]&0x1))<<11;
}else {_fcc |=int (_dbdc .getPixel (_cfd +int (_dbdc .GBAtX [8]),_edd +int (_dbdc .GBAtY [8])))<<11;};};if _dbdc .GBAtOverride [9]{_fcc &=0xFFEF;if _dbdc .GBAtY [9]==0&&_dbdc .GBAtX [9]>=-int8 (_bebg ){_fcc |=(_adadc >>uint (int8 (_fdfd )-_dbdc .GBAtX [9]&0x1))<<4;
}else {_fcc |=int (_dbdc .getPixel (_cfd +int (_dbdc .GBAtX [9]),_edd +int (_dbdc .GBAtY [9])))<<4;};};if _dbdc .GBAtOverride [10]{_fcc &=0x7FFF;if _dbdc .GBAtY [10]==0&&_dbdc .GBAtX [10]>=-int8 (_bebg ){_fcc |=(_adadc >>uint (int8 (_fdfd )-_dbdc .GBAtX [10]&0x1))<<15;
}else {_fcc |=int (_dbdc .getPixel (_cfd +int (_dbdc .GBAtX [10]),_edd +int (_dbdc .GBAtY [10])))<<15;};};if _dbdc .GBAtOverride [11]{_fcc &=0xFDFF;if _dbdc .GBAtY [11]==0&&_dbdc .GBAtX [11]>=-int8 (_bebg ){_fcc |=(_adadc >>uint (int8 (_fdfd )-_dbdc .GBAtX [11]&0x1))<<10;
}else {_fcc |=int (_dbdc .getPixel (_cfd +int (_dbdc .GBAtX [11]),_edd +int (_dbdc .GBAtY [11])))<<10;};};return _fcc ;};func (_fga *GenericRefinementRegion )overrideAtTemplate0 (_gef ,_dbb ,_fabf ,_dcf ,_dfe int )int {if _fga ._eab [0]{_gef &=0xfff7;if _fga .GrAtY [0]==0&&int (_fga .GrAtX [0])>=-_dfe {_gef |=(_dcf >>uint (7-(_dfe +int (_fga .GrAtX [0])))&0x1)<<3;
}else {_gef |=_fga .getPixel (_fga .RegionBitmap ,_dbb +int (_fga .GrAtX [0]),_fabf +int (_fga .GrAtY [0]))<<3;};};if _fga ._eab [1]{_gef &=0xefff;if _fga .GrAtY [1]==0&&int (_fga .GrAtX [1])>=-_dfe {_gef |=(_dcf >>uint (7-(_dfe +int (_fga .GrAtX [1])))&0x1)<<12;
}else {_gef |=_fga .getPixel (_fga .ReferenceBitmap ,_dbb +int (_fga .GrAtX [1]),_fabf +int (_fga .GrAtY [1]));};};return _gef ;};func (_baf *GenericRegion )decodeTemplate1 (_cege ,_cbc ,_fcbg int ,_babb ,_cbce int )(_cfff error ){const _bfe ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_cdcb ,_badd int ;_bfgd ,_egd int ;_dff byte ;_daad ,_gee int ;);if _cege >=1{_dff ,_cfff =_baf .Bitmap .GetByte (_cbce );if _cfff !=nil {return _dd .Wrap (_cfff ,_bfe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bfgd =int (_dff );};if _cege >=2{_dff ,_cfff =_baf .Bitmap .GetByte (_cbce -_baf .Bitmap .RowStride );
if _cfff !=nil {return _dd .Wrap (_cfff ,_bfe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_egd =int (_dff )<<5;};_cdcb =((_bfgd >>1)&0x1f8)|((_egd >>1)&0x1e00);for _gdb :=0;_gdb < _fcbg ;_gdb =_daad {var (_cebc byte ;_beab int ;);_daad =_gdb +8;
if _abaf :=_cbc -_gdb ;_abaf > 8{_beab =8;}else {_beab =_abaf ;};if _cege > 0{_bfgd <<=8;if _daad < _cbc {_dff ,_cfff =_baf .Bitmap .GetByte (_cbce +1);if _cfff !=nil {return _dd .Wrap (_cfff ,_bfe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};
_bfgd |=int (_dff );};};if _cege > 1{_egd <<=8;if _daad < _cbc {_dff ,_cfff =_baf .Bitmap .GetByte (_cbce -_baf .Bitmap .RowStride +1);if _cfff !=nil {return _dd .Wrap (_cfff ,_bfe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_egd |=int (_dff )<<5;
};};for _def :=0;_def < _beab ;_def ++{if _baf ._eac {_badd =_baf .overrideAtTemplate1 (_cdcb ,_gdb +_def ,_cege ,int (_cebc ),_def );_baf ._dee .SetIndex (int32 (_badd ));}else {_baf ._dee .SetIndex (int32 (_cdcb ));};_gee ,_cfff =_baf ._bbf .DecodeBit (_baf ._dee );
if _cfff !=nil {return _dd .Wrap (_cfff ,_bfe ,"");};_cebc |=byte (_gee )<<uint (7-_def );_gccd :=uint (8-_def );_cdcb =((_cdcb &0xefb)<<1)|_gee |((_bfgd >>_gccd )&0x8)|((_egd >>_gccd )&0x200);};if _fbdg :=_baf .Bitmap .SetByte (_babb ,_cebc );_fbdg !=nil {return _dd .Wrap (_fbdg ,_bfe ,"");
};_babb ++;_cbce ++;};return nil ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_ccge *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _ccge ._dfde };func (_egdbd *SymbolDictionary )getSbSymCodeLen ()int8 {_fegc :=int8 (_e .Ceil (_e .Log (float64 (_egdbd ._eda +_egdbd .NumberOfNewSymbols ))/_e .Log (2)));
if _egdbd .IsHuffmanEncoded &&_fegc < 1{return 1;};return _fegc ;};var _ templater =&template0 {};func (_abbfa *PatternDictionary )checkInput ()error {if _abbfa .HdpHeight < 1||_abbfa .HdpWidth < 1{return _ee .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _abbfa .IsMMREncoded {if _abbfa .HDTemplate !=0{_df .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_fcfc *PatternDictionary )GetDictionary ()([]*_fe .Bitmap ,error ){if _fcfc .Patterns !=nil {return _fcfc .Patterns ,nil ;};if !_fcfc .IsMMREncoded {_fcfc .setGbAtPixels ();};_bcgc :=NewGenericRegion (_fcfc ._agedc );_bcgc .setParametersMMR (_fcfc .IsMMREncoded ,_fcfc .DataOffset ,_fcfc .DataLength ,uint32 (_fcfc .HdpHeight ),(_fcfc .GrayMax +1)*uint32 (_fcfc .HdpWidth ),_fcfc .HDTemplate ,false ,false ,_fcfc .GBAtX ,_fcfc .GBAtY );
_caca ,_abdd :=_bcgc .GetRegionBitmap ();if _abdd !=nil {return nil ,_abdd ;};if _abdd =_fcfc .extractPatterns (_caca );_abdd !=nil {return nil ,_abdd ;};return _fcfc .Patterns ,nil ;};func (_adbd *TextRegion )Init (header *Header ,r _gg .StreamReader )error {_adbd .Header =header ;
_adbd ._bfaa =r ;_adbd .RegionInfo =NewRegionSegment (_adbd ._bfaa );return _adbd .parseHeader ();};func (_aaca *SymbolDictionary )setCodingStatistics ()error {if _aaca ._gbgg ==nil {_aaca ._gbgg =_db .NewStats (512,1);};if _aaca ._cdeb ==nil {_aaca ._cdeb =_db .NewStats (512,1);
};if _aaca ._gfgce ==nil {_aaca ._gfgce =_db .NewStats (512,1);};if _aaca ._ccfc ==nil {_aaca ._ccfc =_db .NewStats (512,1);};if _aaca ._ccgb ==nil {_aaca ._ccgb =_db .NewStats (512,1);};if _aaca .UseRefinementAggregation &&_aaca ._adbg ==nil {_aaca ._adbg =_db .NewStats (1<<uint (_aaca ._aaagc ),1);
_aaca ._ffgf =_db .NewStats (512,1);_aaca ._afeg =_db .NewStats (512,1);};if _aaca ._bgefe ==nil {_aaca ._bgefe =_db .NewStats (65536,1);};if _aaca ._gadg ==nil {var _fbac error ;_aaca ._gadg ,_fbac =_db .New (_aaca ._dccdg );if _fbac !=nil {return _fbac ;
};};return nil ;};func (_ebfa *SymbolDictionary )encodeATFlags (_gga _gg .BinaryWriter )(_cddg int ,_fbfa error ){const _faec ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _ebfa .IsHuffmanEncoded ||_ebfa .SdTemplate !=0{return 0,nil ;
};_gcab :=4;if _ebfa .SdTemplate !=0{_gcab =1;};for _bfeg :=0;_bfeg < _gcab ;_bfeg ++{if _fbfa =_gga .WriteByte (byte (_ebfa .SdATX [_bfeg ]));_fbfa !=nil {return _cddg ,_dd .Wrapf (_fbfa ,_faec ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_bfeg );};
_cddg ++;if _fbfa =_gga .WriteByte (byte (_ebfa .SdATY [_bfeg ]));_fbfa !=nil {return _cddg ,_dd .Wrapf (_fbfa ,_faec ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_bfeg );};_cddg ++;};return _cddg ,nil ;};func (_beac *PageInformationSegment )readWidthAndHeight ()error {_eeef ,_aecc :=_beac ._cffe .ReadBits (32);
if _aecc !=nil {return _aecc ;};_beac .PageBMWidth =int (_eeef &_e .MaxInt32 );_eeef ,_aecc =_beac ._cffe .ReadBits (32);if _aecc !=nil {return _aecc ;};_beac .PageBMHeight =int (_eeef &_e .MaxInt32 );return nil ;};func (_gded *SymbolDictionary )getUserTable (_gbac int )(_ba .Tabler ,error ){var _fffc int ;
for _ ,_dbea :=range _gded .Header .RTSegments {if _dbea .Type ==53{if _fffc ==_gbac {_fddcb ,_fecd :=_dbea .GetSegmentData ();if _fecd !=nil {return nil ,_fecd ;};_ecgb :=_fddcb .(_ba .BasicTabler );return _ba .NewEncodedTable (_ecgb );};_fffc ++;};};
return nil ,nil ;};func (_dggc *TextRegion )readAmountOfSymbolInstances ()error {_gfaee ,_ecabab :=_dggc ._bfaa .ReadBits (32);if _ecabab !=nil {return _ecabab ;};_dggc .NumberOfSymbolInstances =uint32 (_gfaee &_e .MaxUint32 );_fbcb :=_dggc .RegionInfo .BitmapWidth *_dggc .RegionInfo .BitmapHeight ;
if _fbcb < _dggc .NumberOfSymbolInstances {_df .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_fbcb ,_dggc .NumberOfSymbolInstances );
_dggc .NumberOfSymbolInstances =_fbcb ;};return nil ;};func (_bgbg *SymbolDictionary )getSymbol (_dbga int )(*_fe .Bitmap ,error ){const _fadd ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_bee ,_gdbf :=_bgbg ._bfgfa .GetBitmap (_bgbg ._daef [_dbga ]);
if _gdbf !=nil {return nil ,_dd .Wrap (_gdbf ,_fadd ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _bee ,nil ;};func (_dfaf *TextRegion )checkInput ()error {const _gdab ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_dfaf .UseRefinement {if _dfaf .SbrTemplate !=0{_df .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_dfaf .SbrTemplate =0;};};if _dfaf .SbHuffFS ==2||_dfaf .SbHuffRDWidth ==2||_dfaf .SbHuffRDHeight ==2||_dfaf .SbHuffRDX ==2||_dfaf .SbHuffRDY ==2{return _dd .Error (_gdab ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_dfaf .UseRefinement {if _dfaf .SbHuffRSize !=0{_df .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_dfaf .SbHuffRSize =0;};if _dfaf .SbHuffRDY !=0{_df .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_dfaf .SbHuffRDY =0;};if _dfaf .SbHuffRDX !=0{_df .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_dfaf .SbHuffRDX =0;};if _dfaf .SbHuffRDWidth !=0{_df .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_dfaf .SbHuffRDWidth =0;};if _dfaf .SbHuffRDHeight !=0{_df .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_dfaf .SbHuffRDHeight =0;};};return nil ;
};func NewGenericRegion (r _gg .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_adad :r };};type template0 struct{};var _ _ba .BasicTabler =&TableSegment {};func (_afde *TextRegion )decodeRdh ()(int64 ,error ){const _fcfgg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _afde .IsHuffmanEncoded {if _afde .SbHuffRDHeight ==3{if _afde ._bdad ==nil {var (_beaca int ;_acd error ;);if _afde .SbHuffFS ==3{_beaca ++;};if _afde .SbHuffDS ==3{_beaca ++;};if _afde .SbHuffDT ==3{_beaca ++;};if _afde .SbHuffRDWidth ==3{_beaca ++;
};_afde ._bdad ,_acd =_afde .getUserTable (_beaca );if _acd !=nil {return 0,_dd .Wrap (_acd ,_fcfgg ,"");};};return _afde ._bdad .Decode (_afde ._bfaa );};_fafad ,_agab :=_ba .GetStandardTable (14+int (_afde .SbHuffRDHeight ));if _agab !=nil {return 0,_dd .Wrap (_agab ,_fcfgg ,"");
};return _fafad .Decode (_afde ._bfaa );};_ddde ,_edbc :=_afde ._cfca .DecodeInt (_afde ._afec );if _edbc !=nil {return 0,_dd .Wrap (_edbc ,_fcfgg ,"");};return int64 (_ddde ),nil ;};func (_edde *Header )referenceSize ()uint {switch {case _edde .SegmentNumber <=255:return 1;
case _edde .SegmentNumber <=65535:return 2;default:return 4;};};func (_abeg *PageInformationSegment )readResolution ()error {_acfd ,_gafc :=_abeg ._cffe .ReadBits (32);if _gafc !=nil {return _gafc ;};_abeg .ResolutionX =int (_acfd &_e .MaxInt32 );_acfd ,_gafc =_abeg ._cffe .ReadBits (32);
if _gafc !=nil {return _gafc ;};_abeg .ResolutionY =int (_acfd &_e .MaxInt32 );return nil ;};func (_faba *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_ec ,_ggfd ,_bad ,_age ,_cab ,_gaf ,_fed ,_dba ,_gfab int )(_ebd error ){var (_dbc ,_gdg int ;
_gccg ,_feea int ;_ddf ,_gce int ;_bfd byte ;);if _ec > 0{_bfd ,_ebd =_faba .RegionBitmap .GetByte (_fed -_bad );if _ebd !=nil {return ;};_gccg =int (_bfd );};if _dba > 0&&_dba <=_faba .ReferenceBitmap .Height {_bfd ,_ebd =_faba .ReferenceBitmap .GetByte (_gfab -_age +_gaf );
if _ebd !=nil {return ;};_feea =int (_bfd )<<2;};if _dba >=0&&_dba < _faba .ReferenceBitmap .Height {_bfd ,_ebd =_faba .ReferenceBitmap .GetByte (_gfab +_gaf );if _ebd !=nil {return ;};_ddf =int (_bfd );};if _dba > -2&&_dba < _faba .ReferenceBitmap .Height -1{_bfd ,_ebd =_faba .ReferenceBitmap .GetByte (_gfab +_age +_gaf );
if _ebd !=nil {return ;};_gce =int (_bfd );};_dbc =((_gccg >>5)&0x6)|((_gce >>2)&0x30)|(_ddf &0xc0)|(_feea &0x200);_gdg =((_gce >>2)&0x70)|(_ddf &0xc0)|(_feea &0x700);var _fcfe int ;for _edg :=0;_edg < _cab ;_edg =_fcfe {var (_efe int ;_dea int ;);_fcfe =_edg +8;
if _efe =_ggfd -_edg ;_efe > 8{_efe =8;};_dage :=_fcfe < _ggfd ;_ggbg :=_fcfe < _faba .ReferenceBitmap .Width ;_ce :=_gaf +1;if _ec > 0{_bfd =0;if _dage {_bfd ,_ebd =_faba .RegionBitmap .GetByte (_fed -_bad +1);if _ebd !=nil {return ;};};_gccg =(_gccg <<8)|int (_bfd );
};if _dba > 0&&_dba <=_faba .ReferenceBitmap .Height {var _ff int ;if _ggbg {_bfd ,_ebd =_faba .ReferenceBitmap .GetByte (_gfab -_age +_ce );if _ebd !=nil {return ;};_ff =int (_bfd )<<2;};_feea =(_feea <<8)|_ff ;};if _dba >=0&&_dba < _faba .ReferenceBitmap .Height {_bfd =0;
if _ggbg {_bfd ,_ebd =_faba .ReferenceBitmap .GetByte (_gfab +_ce );if _ebd !=nil {return ;};};_ddf =(_ddf <<8)|int (_bfd );};if _dba > -2&&_dba < (_faba .ReferenceBitmap .Height -1){_bfd =0;if _ggbg {_bfd ,_ebd =_faba .ReferenceBitmap .GetByte (_gfab +_age +_ce );
if _ebd !=nil {return ;};};_gce =(_gce <<8)|int (_bfd );};for _aeca :=0;_aeca < _efe ;_aeca ++{var _dbcd int ;_bgd :=(_gdg >>4)&0x1ff;switch _bgd {case 0x1ff:_dbcd =1;case 0x00:_dbcd =0;default:_faba ._fc .SetIndex (int32 (_dbc ));_dbcd ,_ebd =_faba ._cd .DecodeBit (_faba ._fc );
if _ebd !=nil {return ;};};_gdf :=uint (7-_aeca );_dea |=_dbcd <<_gdf ;_dbc =((_dbc &0x0d6)<<1)|_dbcd |(_gccg >>_gdf +5)&0x002|((_gce >>_gdf +2)&0x010)|((_ddf >>_gdf )&0x040)|((_feea >>_gdf )&0x200);_gdg =((_gdg &0xdb)<<1)|((_gce >>_gdf +2)&0x010)|((_ddf >>_gdf )&0x080)|((_feea >>_gdf )&0x400);
};_ebd =_faba .RegionBitmap .SetByte (_fed ,byte (_dea ));if _ebd !=nil {return ;};_fed ++;_gfab ++;};return nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_efa *GenericRegion )updateOverrideFlags ()error {const _fcbf ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _efa .GBAtX ==nil ||_efa .GBAtY ==nil {return nil ;};if len (_efa .GBAtX )!=len (_efa .GBAtY ){return _dd .Errorf (_fcbf ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_efa .GBAtX ),len (_efa .GBAtY ));
};_efa .GBAtOverride =make ([]bool ,len (_efa .GBAtX ));switch _efa .GBTemplate {case 0:if !_efa .UseExtTemplates {if _efa .GBAtX [0]!=3||_efa .GBAtY [0]!=-1{_efa .setOverrideFlag (0);};if _efa .GBAtX [1]!=-3||_efa .GBAtY [1]!=-1{_efa .setOverrideFlag (1);
};if _efa .GBAtX [2]!=2||_efa .GBAtY [2]!=-2{_efa .setOverrideFlag (2);};if _efa .GBAtX [3]!=-2||_efa .GBAtY [3]!=-2{_efa .setOverrideFlag (3);};}else {if _efa .GBAtX [0]!=-2||_efa .GBAtY [0]!=0{_efa .setOverrideFlag (0);};if _efa .GBAtX [1]!=0||_efa .GBAtY [1]!=-2{_efa .setOverrideFlag (1);
};if _efa .GBAtX [2]!=-2||_efa .GBAtY [2]!=-1{_efa .setOverrideFlag (2);};if _efa .GBAtX [3]!=-1||_efa .GBAtY [3]!=-2{_efa .setOverrideFlag (3);};if _efa .GBAtX [4]!=1||_efa .GBAtY [4]!=-2{_efa .setOverrideFlag (4);};if _efa .GBAtX [5]!=2||_efa .GBAtY [5]!=-1{_efa .setOverrideFlag (5);
};if _efa .GBAtX [6]!=-3||_efa .GBAtY [6]!=0{_efa .setOverrideFlag (6);};if _efa .GBAtX [7]!=-4||_efa .GBAtY [7]!=0{_efa .setOverrideFlag (7);};if _efa .GBAtX [8]!=2||_efa .GBAtY [8]!=-2{_efa .setOverrideFlag (8);};if _efa .GBAtX [9]!=3||_efa .GBAtY [9]!=-1{_efa .setOverrideFlag (9);
};if _efa .GBAtX [10]!=-2||_efa .GBAtY [10]!=-2{_efa .setOverrideFlag (10);};if _efa .GBAtX [11]!=-3||_efa .GBAtY [11]!=-1{_efa .setOverrideFlag (11);};};case 1:if _efa .GBAtX [0]!=3||_efa .GBAtY [0]!=-1{_efa .setOverrideFlag (0);};case 2:if _efa .GBAtX [0]!=2||_efa .GBAtY [0]!=-1{_efa .setOverrideFlag (0);
};case 3:if _efa .GBAtX [0]!=2||_efa .GBAtY [0]!=-1{_efa .setOverrideFlag (0);};};return nil ;};func (_cede *SymbolDictionary )readAtPixels (_cbge int )error {_cede .SdATX =make ([]int8 ,_cbge );_cede .SdATY =make ([]int8 ,_cbge );var (_ecab byte ;_faadg error ;
);for _afad :=0;_afad < _cbge ;_afad ++{_ecab ,_faadg =_cede ._dccdg .ReadByte ();if _faadg !=nil {return _faadg ;};_cede .SdATX [_afad ]=int8 (_ecab );_ecab ,_faadg =_cede ._dccdg .ReadByte ();if _faadg !=nil {return _faadg ;};_cede .SdATY [_afad ]=int8 (_ecab );
};return nil ;};type HalftoneRegion struct{_aefg _gg .StreamReader ;_dadf *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _fe .CombinationOperator ;
HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_fe .Bitmap ;Patterns []*_fe .Bitmap ;};type templater interface{form (_dgb ,_gea ,_bdfa ,_bba ,_cce int16 )int16 ;
setIndex (_ecd *_db .DecoderStats );};func (_aaga *RegionSegment )String ()string {_bgdd :=&_d .Builder {};_bgdd .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_bgdd .WriteString (_f .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_aaga .BitmapWidth ,_aaga .BitmapHeight ));
_bgdd .WriteString (_f .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_aaga .XLocation ,_aaga .YLocation ));_bgdd .WriteString (_f .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_aaga .CombinaionOperator ));
return _bgdd .String ();};func (_fca *HalftoneRegion )parseHeader ()error {if _gdgc :=_fca .RegionSegment .parseHeader ();_gdgc !=nil {return _gdgc ;};_gbgb ,_edeg :=_fca ._aefg .ReadBit ();if _edeg !=nil {return _edeg ;};_fca .HDefaultPixel =int8 (_gbgb );
_fgae ,_edeg :=_fca ._aefg .ReadBits (3);if _edeg !=nil {return _edeg ;};_fca .CombinationOperator =_fe .CombinationOperator (_fgae &0xf);_gbgb ,_edeg =_fca ._aefg .ReadBit ();if _edeg !=nil {return _edeg ;};if _gbgb ==1{_fca .HSkipEnabled =true ;};_fgae ,_edeg =_fca ._aefg .ReadBits (2);
if _edeg !=nil {return _edeg ;};_fca .HTemplate =byte (_fgae &0xf);_gbgb ,_edeg =_fca ._aefg .ReadBit ();if _edeg !=nil {return _edeg ;};if _gbgb ==1{_fca .IsMMREncoded =true ;};_fgae ,_edeg =_fca ._aefg .ReadBits (32);if _edeg !=nil {return _edeg ;};_fca .HGridWidth =uint32 (_fgae &_e .MaxUint32 );
_fgae ,_edeg =_fca ._aefg .ReadBits (32);if _edeg !=nil {return _edeg ;};_fca .HGridHeight =uint32 (_fgae &_e .MaxUint32 );_fgae ,_edeg =_fca ._aefg .ReadBits (32);if _edeg !=nil {return _edeg ;};_fca .HGridX =int32 (_fgae &_e .MaxInt32 );_fgae ,_edeg =_fca ._aefg .ReadBits (32);
if _edeg !=nil {return _edeg ;};_fca .HGridY =int32 (_fgae &_e .MaxInt32 );_fgae ,_edeg =_fca ._aefg .ReadBits (16);if _edeg !=nil {return _edeg ;};_fca .HRegionX =uint16 (_fgae &_e .MaxUint16 );_fgae ,_edeg =_fca ._aefg .ReadBits (16);if _edeg !=nil {return _edeg ;
};_fca .HRegionY =uint16 (_fgae &_e .MaxUint16 );if _edeg =_fca .computeSegmentDataStructure ();_edeg !=nil {return _edeg ;};return _fca .checkInput ();};func (_adef *Header )writeReferredToSegments (_gca _gg .BinaryWriter )(_cca int ,_efgd error ){const _bggd ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_gggd uint16 ;_fbfc uint32 ;);_bgc :=_adef .referenceSize ();_abcg :=1;_bdcf :=make ([]byte ,_bgc );for _ ,_fgceb :=range _adef .RTSNumbers {switch _bgc {case 4:_fbfc =uint32 (_fgceb );_eg .BigEndian .PutUint32 (_bdcf ,_fbfc );_abcg ,_efgd =_gca .Write (_bdcf );
if _efgd !=nil {return 0,_dd .Wrap (_efgd ,_bggd ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_gggd =uint16 (_fgceb );_eg .BigEndian .PutUint16 (_bdcf ,_gggd );_abcg ,_efgd =_gca .Write (_bdcf );if _efgd !=nil {return 0,_dd .Wrap (_efgd ,_bggd ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _efgd =_gca .WriteByte (byte (_fgceb ));_efgd !=nil {return 0,_dd .Wrap (_efgd ,_bggd ,"\u0075\u0069\u006et\u0038");};};_cca +=_abcg ;};return _cca ,nil ;};func (_eefa *PageInformationSegment )parseHeader ()(_dddc error ){_df .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _feed ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _dddc !=nil {_feed +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_dddc .Error ();}else {_feed +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_df .Log .Trace (_feed );}();if _dddc =_eefa .readWidthAndHeight ();
_dddc !=nil {return _dddc ;};if _dddc =_eefa .readResolution ();_dddc !=nil {return _dddc ;};_ ,_dddc =_eefa ._cffe .ReadBit ();if _dddc !=nil {return _dddc ;};if _dddc =_eefa .readCombinationOperatorOverrideAllowed ();_dddc !=nil {return _dddc ;};if _dddc =_eefa .readRequiresAuxiliaryBuffer ();
_dddc !=nil {return _dddc ;};if _dddc =_eefa .readCombinationOperator ();_dddc !=nil {return _dddc ;};if _dddc =_eefa .readDefaultPixelValue ();_dddc !=nil {return _dddc ;};if _dddc =_eefa .readContainsRefinement ();_dddc !=nil {return _dddc ;};if _dddc =_eefa .readIsLossless ();
_dddc !=nil {return _dddc ;};if _dddc =_eefa .readIsStriped ();_dddc !=nil {return _dddc ;};if _dddc =_eefa .readMaxStripeSize ();_dddc !=nil {return _dddc ;};if _dddc =_eefa .checkInput ();_dddc !=nil {return _dddc ;};_df .Log .Trace ("\u0025\u0073",_eefa );
return nil ;};func (_fecf *template0 )form (_dagd ,_bcbc ,_gcg ,_fda ,_ddb int16 )int16 {return (_dagd <<10)|(_bcbc <<7)|(_gcg <<4)|(_fda <<1)|_ddb ;};func (_adgb *GenericRegion )setOverrideFlag (_acbg int ){_adgb .GBAtOverride [_acbg ]=true ;_adgb ._eac =true ;
};func (_eddga *SymbolDictionary )setSymbolsArray ()error {if _eddga ._ebef ==nil {if _bffd :=_eddga .retrieveImportSymbols ();_bffd !=nil {return _bffd ;};};if _eddga ._bccb ==nil {_eddga ._bccb =append (_eddga ._bccb ,_eddga ._ebef ...);};return nil ;
};func (_gbfa *TableSegment )HtHigh ()int32 {return _gbfa ._bedb };func (_dbgd *SymbolDictionary )setRefinementAtPixels ()error {if !_dbgd .UseRefinementAggregation ||_dbgd .SdrTemplate !=0{return nil ;};if _adcg :=_dbgd .readRefinementAtPixels (2);_adcg !=nil {return _adcg ;
};return nil ;};func (_ccbc *TextRegion )decodeStripT ()(_edb int64 ,_ebfd error ){if _ccbc .IsHuffmanEncoded {if _ccbc .SbHuffDT ==3{if _ccbc ._afcd ==nil {var _dfgcg int ;if _ccbc .SbHuffFS ==3{_dfgcg ++;};if _ccbc .SbHuffDS ==3{_dfgcg ++;};_ccbc ._afcd ,_ebfd =_ccbc .getUserTable (_dfgcg );
if _ebfd !=nil {return 0,_ebfd ;};};_edb ,_ebfd =_ccbc ._afcd .Decode (_ccbc ._bfaa );if _ebfd !=nil {return 0,_ebfd ;};}else {var _cfeb _ba .Tabler ;_cfeb ,_ebfd =_ba .GetStandardTable (11+int (_ccbc .SbHuffDT ));if _ebfd !=nil {return 0,_ebfd ;};_edb ,_ebfd =_cfeb .Decode (_ccbc ._bfaa );
if _ebfd !=nil {return 0,_ebfd ;};};}else {var _abfd int32 ;_abfd ,_ebfd =_ccbc ._cfca .DecodeInt (_ccbc ._dbcf );if _ebfd !=nil {return 0,_ebfd ;};_edb =int64 (_abfd );};_edb *=int64 (-_ccbc .SbStrips );return _edb ,nil ;};func (_dbe *template0 )setIndex (_cebf *_db .DecoderStats ){_cebf .SetIndex (0x100)};
func NewRegionSegment (r _gg .StreamReader )*RegionSegment {return &RegionSegment {_eefac :r }};func (_ffgaa *SymbolDictionary )readNumberOfExportedSymbols ()error {_ffcb ,_cedc :=_ffgaa ._dccdg .ReadBits (32);if _cedc !=nil {return _cedc ;};_ffgaa .NumberOfExportedSymbols =uint32 (_ffcb &_e .MaxUint32 );
return nil ;};var (_faab Segmenter ;_abbff =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _faab },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _faab },TProfiles :func ()Segmenter {return _faab },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _faab },TBitmap :func ()Segmenter {return _faab }};
);func (_aecag *GenericRegion )decodeLine (_aeea ,_cfb ,_ecdd int )error {const _acgg ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_aga :=_aecag .Bitmap .GetByteIndex (0,_aeea );_afa :=_aga -_aecag .Bitmap .RowStride ;switch _aecag .GBTemplate {case 0:if !_aecag .UseExtTemplates {return _aecag .decodeTemplate0a (_aeea ,_cfb ,_ecdd ,_aga ,_afa );
};return _aecag .decodeTemplate0b (_aeea ,_cfb ,_ecdd ,_aga ,_afa );case 1:return _aecag .decodeTemplate1 (_aeea ,_cfb ,_ecdd ,_aga ,_afa );case 2:return _aecag .decodeTemplate2 (_aeea ,_cfb ,_ecdd ,_aga ,_afa );case 3:return _aecag .decodeTemplate3 (_aeea ,_cfb ,_ecdd ,_aga ,_afa );
};return _dd .Errorf (_acgg ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_aecag .GBTemplate );};type RegionSegment struct{_eefac _gg .StreamReader ;
BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _fe .CombinationOperator ;};func (_fggd Type )String ()string {switch _fggd {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_fdcf *TextRegion )readHuffmanFlags ()error {var (_aagg int ;_fcab uint64 ;_fgca error ;
);_ ,_fgca =_fdcf ._bfaa .ReadBit ();if _fgca !=nil {return _fgca ;};_aagg ,_fgca =_fdcf ._bfaa .ReadBit ();if _fgca !=nil {return _fgca ;};_fdcf .SbHuffRSize =int8 (_aagg );_fcab ,_fgca =_fdcf ._bfaa .ReadBits (2);if _fgca !=nil {return _fgca ;};_fdcf .SbHuffRDY =int8 (_fcab )&0xf;
_fcab ,_fgca =_fdcf ._bfaa .ReadBits (2);if _fgca !=nil {return _fgca ;};_fdcf .SbHuffRDX =int8 (_fcab )&0xf;_fcab ,_fgca =_fdcf ._bfaa .ReadBits (2);if _fgca !=nil {return _fgca ;};_fdcf .SbHuffRDHeight =int8 (_fcab )&0xf;_fcab ,_fgca =_fdcf ._bfaa .ReadBits (2);
if _fgca !=nil {return _fgca ;};_fdcf .SbHuffRDWidth =int8 (_fcab )&0xf;_fcab ,_fgca =_fdcf ._bfaa .ReadBits (2);if _fgca !=nil {return _fgca ;};_fdcf .SbHuffDT =int8 (_fcab )&0xf;_fcab ,_fgca =_fdcf ._bfaa .ReadBits (2);if _fgca !=nil {return _fgca ;};
_fdcf .SbHuffDS =int8 (_fcab )&0xf;_fcab ,_fgca =_fdcf ._bfaa .ReadBits (2);if _fgca !=nil {return _fgca ;};_fdcf .SbHuffFS =int8 (_fcab )&0xf;return nil ;};type Type int ;type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;
PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _gg .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};type Regioner interface{GetRegionBitmap ()(*_fe .Bitmap ,error );
GetRegionInfo ()*RegionSegment ;};func (_ebe *GenericRefinementRegion )decodeTemplate (_eeaa ,_ggd ,_gdc ,_faa ,_ffb ,_cg ,_dgad ,_bbd ,_caf ,_cbe int ,_dac templater )(_ada error ){var (_dbd ,_fbg ,_ccgg ,_ebbd ,_dgcb int16 ;_aa ,_ageg ,_bgg ,_cffd int ;
_deg byte ;);if _caf >=1&&(_caf -1)< _ebe .ReferenceBitmap .Height {_deg ,_ada =_ebe .ReferenceBitmap .GetByte (_cbe -_faa );if _ada !=nil {return ;};_aa =int (_deg );};if _caf >=0&&(_caf )< _ebe .ReferenceBitmap .Height {_deg ,_ada =_ebe .ReferenceBitmap .GetByte (_cbe );
if _ada !=nil {return ;};_ageg =int (_deg );};if _caf >=-1&&(_caf +1)< _ebe .ReferenceBitmap .Height {_deg ,_ada =_ebe .ReferenceBitmap .GetByte (_cbe +_faa );if _ada !=nil {return ;};_bgg =int (_deg );};_cbe ++;if _eeaa >=1{_deg ,_ada =_ebe .RegionBitmap .GetByte (_bbd -_gdc );
if _ada !=nil {return ;};_cffd =int (_deg );};_bbd ++;_aef :=_ebe .ReferenceDX %8;_dab :=6+_aef ;_gfe :=_cbe %_faa ;if _dab >=0{if _dab < 8{_dbd =int16 (_aa >>uint (_dab ))&0x07;};if _dab < 8{_fbg =int16 (_ageg >>uint (_dab ))&0x07;};if _dab < 8{_ccgg =int16 (_bgg >>uint (_dab ))&0x07;
};if _dab ==6&&_gfe > 1{if _caf >=1&&(_caf -1)< _ebe .ReferenceBitmap .Height {_deg ,_ada =_ebe .ReferenceBitmap .GetByte (_cbe -_faa -2);if _ada !=nil {return _ada ;};_dbd |=int16 (_deg <<2)&0x04;};if _caf >=0&&_caf < _ebe .ReferenceBitmap .Height {_deg ,_ada =_ebe .ReferenceBitmap .GetByte (_cbe -2);
if _ada !=nil {return _ada ;};_fbg |=int16 (_deg <<2)&0x04;};if _caf >=-1&&_caf +1< _ebe .ReferenceBitmap .Height {_deg ,_ada =_ebe .ReferenceBitmap .GetByte (_cbe +_faa -2);if _ada !=nil {return _ada ;};_ccgg |=int16 (_deg <<2)&0x04;};};if _dab ==0{_aa =0;
_ageg =0;_bgg =0;if _gfe < _faa -1{if _caf >=1&&_caf -1< _ebe .ReferenceBitmap .Height {_deg ,_ada =_ebe .ReferenceBitmap .GetByte (_cbe -_faa );if _ada !=nil {return _ada ;};_aa =int (_deg );};if _caf >=0&&_caf < _ebe .ReferenceBitmap .Height {_deg ,_ada =_ebe .ReferenceBitmap .GetByte (_cbe );
if _ada !=nil {return _ada ;};_ageg =int (_deg );};if _caf >=-1&&_caf +1< _ebe .ReferenceBitmap .Height {_deg ,_ada =_ebe .ReferenceBitmap .GetByte (_cbe +_faa );if _ada !=nil {return _ada ;};_bgg =int (_deg );};};_cbe ++;};}else {_dbd =int16 (_aa <<1)&0x07;
_fbg =int16 (_ageg <<1)&0x07;_ccgg =int16 (_bgg <<1)&0x07;_aa =0;_ageg =0;_bgg =0;if _gfe < _faa -1{if _caf >=1&&_caf -1< _ebe .ReferenceBitmap .Height {_deg ,_ada =_ebe .ReferenceBitmap .GetByte (_cbe -_faa );if _ada !=nil {return _ada ;};_aa =int (_deg );
};if _caf >=0&&_caf < _ebe .ReferenceBitmap .Height {_deg ,_ada =_ebe .ReferenceBitmap .GetByte (_cbe );if _ada !=nil {return _ada ;};_ageg =int (_deg );};if _caf >=-1&&_caf +1< _ebe .ReferenceBitmap .Height {_deg ,_ada =_ebe .ReferenceBitmap .GetByte (_cbe +_faa );
if _ada !=nil {return _ada ;};_bgg =int (_deg );};_cbe ++;};_dbd |=int16 ((_aa >>7)&0x07);_fbg |=int16 ((_ageg >>7)&0x07);_ccgg |=int16 ((_bgg >>7)&0x07);};_ebbd =int16 (_cffd >>6);_dgcb =0;_dcd :=(2-_aef )%8;_aa <<=uint (_dcd );_ageg <<=uint (_dcd );_bgg <<=uint (_dcd );
_cffd <<=2;var _ceb int ;for _acf :=0;_acf < _ggd ;_acf ++{_bca :=_acf &0x07;_bbg :=_dac .form (_dbd ,_fbg ,_ccgg ,_ebbd ,_dgcb );if _ebe ._gbc {_deg ,_ada =_ebe .RegionBitmap .GetByte (_ebe .RegionBitmap .GetByteIndex (_acf ,_eeaa ));if _ada !=nil {return _ada ;
};_ebe ._fc .SetIndex (int32 (_ebe .overrideAtTemplate0 (int (_bbg ),_acf ,_eeaa ,int (_deg ),_bca )));}else {_ebe ._fc .SetIndex (int32 (_bbg ));};_ceb ,_ada =_ebe ._cd .DecodeBit (_ebe ._fc );if _ada !=nil {return _ada ;};if _ada =_ebe .RegionBitmap .SetPixel (_acf ,_eeaa ,byte (_ceb ));
_ada !=nil {return _ada ;};_dbd =((_dbd <<1)|0x01&int16 (_aa >>7))&0x07;_fbg =((_fbg <<1)|0x01&int16 (_ageg >>7))&0x07;_ccgg =((_ccgg <<1)|0x01&int16 (_bgg >>7))&0x07;_ebbd =((_ebbd <<1)|0x01&int16 (_cffd >>7))&0x07;_dgcb =int16 (_ceb );if (_acf -int (_ebe .ReferenceDX ))%8==5{_aa =0;
_ageg =0;_bgg =0;if ((_acf -int (_ebe .ReferenceDX ))/8)+1< _ebe .ReferenceBitmap .RowStride {if _caf >=1&&(_caf -1)< _ebe .ReferenceBitmap .Height {_deg ,_ada =_ebe .ReferenceBitmap .GetByte (_cbe -_faa );if _ada !=nil {return _ada ;};_aa =int (_deg );
};if _caf >=0&&_caf < _ebe .ReferenceBitmap .Height {_deg ,_ada =_ebe .ReferenceBitmap .GetByte (_cbe );if _ada !=nil {return _ada ;};_ageg =int (_deg );};if _caf >=-1&&(_caf +1)< _ebe .ReferenceBitmap .Height {_deg ,_ada =_ebe .ReferenceBitmap .GetByte (_cbe +_faa );
if _ada !=nil {return _ada ;};_bgg =int (_deg );};};_cbe ++;}else {_aa <<=1;_ageg <<=1;_bgg <<=1;};if _bca ==5&&_eeaa >=1{if ((_acf >>3)+1)>=_ebe .RegionBitmap .RowStride {_cffd =0;}else {_deg ,_ada =_ebe .RegionBitmap .GetByte (_bbd -_gdc );if _ada !=nil {return _ada ;
};_cffd =int (_deg );};_bbd ++;}else {_cffd <<=1;};};return nil ;};func (_eaab *SymbolDictionary )decodeDirectlyThroughGenericRegion (_faeg ,_bdfef uint32 )error {if _eaab ._efbd ==nil {_eaab ._efbd =NewGenericRegion (_eaab ._dccdg );};_eaab ._efbd .setParametersWithAt (false ,byte (_eaab .SdTemplate ),false ,false ,_eaab .SdATX ,_eaab .SdATY ,_faeg ,_bdfef ,_eaab ._bgefe ,_eaab ._gadg );
return _eaab .addSymbol (_eaab ._efbd );};func (_ggae *TableSegment )HtRS ()int32 {return _ggae ._gdde };func (_aacc *RegionSegment )parseHeader ()error {const _dagdf ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_df .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_df .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_cgd ,_dccf :=_aacc ._eefac .ReadBits (32);
if _dccf !=nil {return _dd .Wrap (_dccf ,_dagdf ,"\u0077\u0069\u0064t\u0068");};_aacc .BitmapWidth =uint32 (_cgd &_e .MaxUint32 );_cgd ,_dccf =_aacc ._eefac .ReadBits (32);if _dccf !=nil {return _dd .Wrap (_dccf ,_dagdf ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_aacc .BitmapHeight =uint32 (_cgd &_e .MaxUint32 );_cgd ,_dccf =_aacc ._eefac .ReadBits (32);if _dccf !=nil {return _dd .Wrap (_dccf ,_dagdf ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_aacc .XLocation =uint32 (_cgd &_e .MaxUint32 );
_cgd ,_dccf =_aacc ._eefac .ReadBits (32);if _dccf !=nil {return _dd .Wrap (_dccf ,_dagdf ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_aacc .YLocation =uint32 (_cgd &_e .MaxUint32 );if _ ,_dccf =_aacc ._eefac .ReadBits (5);_dccf !=nil {return _dd .Wrap (_dccf ,_dagdf ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _dccf =_aacc .readCombinationOperator ();_dccf !=nil {return _dd .Wrap (_dccf ,_dagdf ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_gcebb *TextRegion )decodeRI ()(int64 ,error ){if !_gcebb .UseRefinement {return 0,nil ;
};if _gcebb .IsHuffmanEncoded {_aeddg ,_cdfa :=_gcebb ._bfaa .ReadBit ();return int64 (_aeddg ),_cdfa ;};_adf ,_aeff :=_gcebb ._cfca .DecodeInt (_gcebb ._eeff );return int64 (_adf ),_aeff ;};func (_gceb *HalftoneRegion )computeX (_edcb ,_bef int )int {return _gceb .shiftAndFill (int (_gceb .HGridX )+_edcb *int (_gceb .HRegionY )+_bef *int (_gceb .HRegionX ));
};func NewHeader (d Documenter ,r _gg .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_cbea :=&Header {Reader :r };if _cafc :=_cbea .parse (d ,r ,offset ,organizationType );_cafc !=nil {return nil ,_dd .Wrap (_cafc ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");
};return _cbea ,nil ;};func (_cefd *SymbolDictionary )Init (h *Header ,r _gg .StreamReader )error {_cefd .Header =h ;_cefd ._dccdg =r ;return _cefd .parseHeader ();};func _gdcb (_gdd _gg .StreamReader ,_aeg *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_gfa :_gdd ,RegionInfo :NewRegionSegment (_gdd ),_ac :_aeg ,_a :&template0 {},_gbe :&template1 {}};
};func (_gcebd *TextRegion )String ()string {_agda :=&_d .Builder {};_agda .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_agda .WriteString (_gcebd .RegionInfo .String ()+"\u000a");_agda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_gcebd .SbrTemplate ));
_agda .WriteString (_f .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_gcebd .SbDsOffset ));_agda .WriteString (_f .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_gcebd .DefaultPixel ));
_agda .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_gcebd .CombinationOperator ));_agda .WriteString (_f .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_gcebd .IsTransposed ));
_agda .WriteString (_f .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gcebd .ReferenceCorner ));_agda .WriteString (_f .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_gcebd .UseRefinement ));
_agda .WriteString (_f .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_gcebd .IsHuffmanEncoded ));if _gcebd .IsHuffmanEncoded {_agda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_gcebd .SbHuffRSize ));
_agda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_gcebd .SbHuffRDY ));_agda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_gcebd .SbHuffRDX ));
_agda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_gcebd .SbHuffRDHeight ));_agda .WriteString (_f .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_gcebd .SbHuffRDWidth ));
_agda .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_gcebd .SbHuffDT ));_agda .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_gcebd .SbHuffDS ));
_agda .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_gcebd .SbHuffFS ));};_agda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gcebd .SbrATX ));
_agda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_gcebd .SbrATY ));_agda .WriteString (_f .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_gcebd .NumberOfSymbolInstances ));
_agda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gcebd .SbrATX ));return _agda .String ();};func (_feba *TextRegion )decodeDfs ()(int64 ,error ){if _feba .IsHuffmanEncoded {if _feba .SbHuffFS ==3{if _feba ._acbe ==nil {var _dfcf error ;
_feba ._acbe ,_dfcf =_feba .getUserTable (0);if _dfcf !=nil {return 0,_dfcf ;};};return _feba ._acbe .Decode (_feba ._bfaa );};_ggdde ,_egbab :=_ba .GetStandardTable (6+int (_feba .SbHuffFS ));if _egbab !=nil {return 0,_egbab ;};return _ggdde .Decode (_feba ._bfaa );
};_ggfed ,_gfafe :=_feba ._cfca .DecodeInt (_feba ._abdb );if _gfafe !=nil {return 0,_gfafe ;};return int64 (_ggfed ),nil ;};func (_dabd *HalftoneRegion )grayScaleDecoding (_eaa int )([][]int ,error ){var (_cacb []int8 ;_gbeb []int8 ;);if !_dabd .IsMMREncoded {_cacb =make ([]int8 ,4);
_gbeb =make ([]int8 ,4);if _dabd .HTemplate <=1{_cacb [0]=3;}else if _dabd .HTemplate >=2{_cacb [0]=2;};_gbeb [0]=-1;_cacb [1]=-3;_gbeb [1]=-1;_cacb [2]=2;_gbeb [2]=-2;_cacb [3]=-2;_gbeb [3]=-2;};_fbb :=make ([]*_fe .Bitmap ,_eaa );_dffb :=NewGenericRegion (_dabd ._aefg );
_dffb .setParametersMMR (_dabd .IsMMREncoded ,_dabd .DataOffset ,_dabd .DataLength ,_dabd .HGridHeight ,_dabd .HGridWidth ,_dabd .HTemplate ,false ,_dabd .HSkipEnabled ,_cacb ,_gbeb );_adae :=_eaa -1;var _deb error ;_fbb [_adae ],_deb =_dffb .GetRegionBitmap ();
if _deb !=nil {return nil ,_deb ;};for _adae > 0{_adae --;_dffb .Bitmap =nil ;_fbb [_adae ],_deb =_dffb .GetRegionBitmap ();if _deb !=nil {return nil ,_deb ;};if _deb =_dabd .combineGrayscalePlanes (_fbb ,_adae );_deb !=nil {return nil ,_deb ;};};return _dabd .computeGrayScalePlanes (_fbb ,_eaa );
};func (_bcad *SymbolDictionary )decodeHeightClassBitmap (_fcea *_fe .Bitmap ,_ggab int64 ,_feedc int ,_begd []int )error {for _cgfb :=_ggab ;_cgfb < int64 (_bcad ._edcg );_cgfb ++{var _gagc int ;for _fbfag :=_ggab ;_fbfag <=_cgfb -1;_fbfag ++{_gagc +=_begd [_fbfag ];
};_dgfg :=_c .Rect (_gagc ,0,_gagc +_begd [_cgfb ],_feedc );_aaaeb ,_abff :=_fe .Extract (_dgfg ,_fcea );if _abff !=nil {return _abff ;};_bcad ._fafd [_cgfb ]=_aaaeb ;_bcad ._bccb =append (_bcad ._bccb ,_aaaeb );};return nil ;};func (_ffcg *TableSegment )HtPS ()int32 {return _ffcg ._cbaa };
func (_abf *template1 )form (_fac ,_efb ,_gcb ,_dcfe ,_gge int16 )int16 {return ((_fac &0x02)<<8)|(_efb <<6)|((_gcb &0x03)<<4)|(_dcfe <<1)|_gge ;};type PatternDictionary struct{_agedc _gg .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;
DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_fe .Bitmap ;GrayMax uint32 ;};func (_fbecd *TextRegion )setCodingStatistics ()error {if _fbecd ._dbcf ==nil {_fbecd ._dbcf =_db .NewStats (512,1);
};if _fbecd ._abdb ==nil {_fbecd ._abdb =_db .NewStats (512,1);};if _fbecd ._gfefc ==nil {_fbecd ._gfefc =_db .NewStats (512,1);};if _fbecd ._feeaf ==nil {_fbecd ._feeaf =_db .NewStats (512,1);};if _fbecd ._eeff ==nil {_fbecd ._eeff =_db .NewStats (512,1);
};if _fbecd ._eegca ==nil {_fbecd ._eegca =_db .NewStats (512,1);};if _fbecd ._afec ==nil {_fbecd ._afec =_db .NewStats (512,1);};if _fbecd ._dcdf ==nil {_fbecd ._dcdf =_db .NewStats (1<<uint (_fbecd ._ecaba ),1);};if _fbecd ._eddd ==nil {_fbecd ._eddd =_db .NewStats (512,1);
};if _fbecd ._bgbd ==nil {_fbecd ._bgbd =_db .NewStats (512,1);};if _fbecd ._cfca ==nil {var _acfdc error ;_fbecd ._cfca ,_acfdc =_db .New (_fbecd ._bfaa );if _acfdc !=nil {return _acfdc ;};};return nil ;};func (_bbec *RegionSegment )Size ()int {return 17};
func (_agg *GenericRegion )GetRegionInfo ()*RegionSegment {return _agg .RegionSegment };func (_fdced *TextRegion )decodeRdy ()(int64 ,error ){const _gbfacc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _fdced .IsHuffmanEncoded {if _fdced .SbHuffRDY ==3{if _fdced ._aedb ==nil {var (_abbd int ;
_fecbb error ;);if _fdced .SbHuffFS ==3{_abbd ++;};if _fdced .SbHuffDS ==3{_abbd ++;};if _fdced .SbHuffDT ==3{_abbd ++;};if _fdced .SbHuffRDWidth ==3{_abbd ++;};if _fdced .SbHuffRDHeight ==3{_abbd ++;};if _fdced .SbHuffRDX ==3{_abbd ++;};_fdced ._aedb ,_fecbb =_fdced .getUserTable (_abbd );
if _fecbb !=nil {return 0,_dd .Wrap (_fecbb ,_gbfacc ,"");};};return _fdced ._aedb .Decode (_fdced ._bfaa );};_dadb ,_gdbfg :=_ba .GetStandardTable (14+int (_fdced .SbHuffRDY ));if _gdbfg !=nil {return 0,_gdbfg ;};return _dadb .Decode (_fdced ._bfaa );
};_agfdb ,_ecgf :=_fdced ._cfca .DecodeInt (_fdced ._bgbd );if _ecgf !=nil {return 0,_dd .Wrap (_ecgf ,_gbfacc ,"");};return int64 (_agfdb ),nil ;};func (_gdgb *TextRegion )decodeSymbolInstances ()error {_ebfe ,_fbgd :=_gdgb .decodeStripT ();if _fbgd !=nil {return _fbgd ;
};var (_bccd int64 ;_bfaf uint32 ;);for _bfaf < _gdgb .NumberOfSymbolInstances {_fea ,_ebdg :=_gdgb .decodeDT ();if _ebdg !=nil {return _ebdg ;};_ebfe +=_fea ;var _gebba int64 ;_bdadb :=true ;_gdgb ._fcgc =0;for {if _bdadb {_gebba ,_ebdg =_gdgb .decodeDfs ();
if _ebdg !=nil {return _ebdg ;};_bccd +=_gebba ;_gdgb ._fcgc =_bccd ;_bdadb =false ;}else {_cdeg ,_cffda :=_gdgb .decodeIds ();if _eb .Is (_cffda ,_fee .ErrOOB ){break ;};if _cffda !=nil {return _cffda ;};if _bfaf >=_gdgb .NumberOfSymbolInstances {break ;
};_gdgb ._fcgc +=_cdeg +int64 (_gdgb .SbDsOffset );};_deef ,_edbg :=_gdgb .decodeCurrentT ();if _edbg !=nil {return _edbg ;};_fgf :=_ebfe +_deef ;_dgcfa ,_edbg :=_gdgb .decodeID ();if _edbg !=nil {return _edbg ;};_bdfc ,_edbg :=_gdgb .decodeRI ();if _edbg !=nil {return _edbg ;
};_ecef ,_edbg :=_gdgb .decodeIb (_bdfc ,_dgcfa );if _edbg !=nil {return _edbg ;};if _edbg =_gdgb .blit (_ecef ,_fgf );_edbg !=nil {return _edbg ;};_bfaf ++;};};return nil ;};func (_ffcd *TextRegion )encodeSymbols (_ddcec _gg .BinaryWriter )(_bcab int ,_fffa error ){const _ecag ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_cfed :=make ([]byte ,4);_eg .BigEndian .PutUint32 (_cfed ,_ffcd .NumberOfSymbols );if _bcab ,_fffa =_ddcec .Write (_cfed );_fffa !=nil {return _bcab ,_dd .Wrap (_fffa ,_ecag ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_egdg ,_fffa :=_fe .NewClassedPoints (_ffcd ._cacdb ,_ffcd ._eabgg );if _fffa !=nil {return 0,_dd .Wrap (_fffa ,_ecag ,"");};var _gece ,_gadaa int ;_bfgbf :=_gb .New ();_bfgbf .Init ();if _fffa =_bfgbf .EncodeInteger (_gb .IADT ,0);_fffa !=nil {return _bcab ,_dd .Wrap (_fffa ,_ecag ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_bdcc ,_fffa :=_egdg .GroupByY ();if _fffa !=nil {return 0,_dd .Wrap (_fffa ,_ecag ,"");};for _ ,_befg :=range _bdcc {_cbd :=int (_befg .YAtIndex (0));_gbbeb :=_cbd -_gece ;if _fffa =_bfgbf .EncodeInteger (_gb .IADT ,_gbbeb );_fffa !=nil {return _bcab ,_dd .Wrap (_fffa ,_ecag ,"");
};var _fadde int ;for _bbgc ,_efcba :=range _befg .IntSlice {switch _bbgc {case 0:_bddce :=int (_befg .XAtIndex (_bbgc ))-_gadaa ;if _fffa =_bfgbf .EncodeInteger (_gb .IAFS ,_bddce );_fffa !=nil {return _bcab ,_dd .Wrap (_fffa ,_ecag ,"");};_gadaa +=_bddce ;
_fadde =_gadaa ;default:_dacb :=int (_befg .XAtIndex (_bbgc ))-_fadde ;if _fffa =_bfgbf .EncodeInteger (_gb .IADS ,_dacb );_fffa !=nil {return _bcab ,_dd .Wrap (_fffa ,_ecag ,"");};_fadde +=_dacb ;};_fgcfd ,_ffa :=_ffcd ._edfc .Get (_efcba );if _ffa !=nil {return _bcab ,_dd .Wrap (_ffa ,_ecag ,"");
};_abdg ,_cegf :=_ffcd ._cbcd [_fgcfd ];if !_cegf {_abdg ,_cegf =_ffcd ._cedf [_fgcfd ];if !_cegf {return _bcab ,_dd .Errorf (_ecag ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_fgcfd );
};};if _ffa =_bfgbf .EncodeIAID (_ffcd ._ebaa ,_abdg );_ffa !=nil {return _bcab ,_dd .Wrap (_ffa ,_ecag ,"");};};if _fffa =_bfgbf .EncodeOOB (_gb .IADS );_fffa !=nil {return _bcab ,_dd .Wrap (_fffa ,_ecag ,"");};};_bfgbf .Final ();_bbfd ,_fffa :=_bfgbf .WriteTo (_ddcec );
if _fffa !=nil {return _bcab ,_dd .Wrap (_fffa ,_ecag ,"");};_bcab +=int (_bbfd );return _bcab ,nil ;};func (_gedg *GenericRegion )readGBAtPixels (_cbfa int )error {const _efab ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_gedg .GBAtX =make ([]int8 ,_cbfa );_gedg .GBAtY =make ([]int8 ,_cbfa );for _bcfd :=0;_bcfd < _cbfa ;_bcfd ++{_fgd ,_caffd :=_gedg ._adad .ReadByte ();if _caffd !=nil {return _dd .Wrapf (_caffd ,_efab ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_bcfd );
};_gedg .GBAtX [_bcfd ]=int8 (_fgd );_fgd ,_caffd =_gedg ._adad .ReadByte ();if _caffd !=nil {return _dd .Wrapf (_caffd ,_efab ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_bcfd );};_gedg .GBAtY [_bcfd ]=int8 (_fgd );};return nil ;
};func (_gcgf *TextRegion )decodeID ()(int64 ,error ){if _gcgf .IsHuffmanEncoded {if _gcgf ._gadad ==nil {_gfba ,_dgec :=_gcgf ._bfaa .ReadBits (byte (_gcgf ._ecaba ));return int64 (_gfba ),_dgec ;};return _gcgf ._gadad .Decode (_gcgf ._bfaa );};return _gcgf ._cfca .DecodeIAID (uint64 (_gcgf ._ecaba ),_gcgf ._dcdf );
};func (_bfcg *Header )writeFlags (_dgdb _gg .BinaryWriter )(_bgec error ){const _gccdg ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_daab :=byte (_bfcg .Type );if _bgec =_dgdb .WriteByte (_daab );
_bgec !=nil {return _dd .Wrap (_bgec ,_gccdg ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_bfcg .RetainFlag &&!_bfcg .PageAssociationFieldSize {return nil ;
};if _bgec =_dgdb .SkipBits (-8);_bgec !=nil {return _dd .Wrap (_bgec ,_gccdg ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _fedd int ;
if _bfcg .RetainFlag {_fedd =1;};if _bgec =_dgdb .WriteBit (_fedd );_bgec !=nil {return _dd .Wrap (_bgec ,_gccdg ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_fedd =0;if _bfcg .PageAssociationFieldSize {_fedd =1;
};if _bgec =_dgdb .WriteBit (_fedd );_bgec !=nil {return _dd .Wrap (_bgec ,_gccdg ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_dgdb .FinishByte ();return nil ;};func (_cdbee *SymbolDictionary )InitEncode (symbols *_fe .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _bbee ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_cdbee .SdATX =[]int8 {3,-3,2,-2};_cdbee .SdATY =[]int8 {-1,-1,-2,-2};_cdbee ._bfgfa =symbols ;_cdbee ._daef =make ([]int ,len (symbolList ));copy (_cdbee ._daef ,symbolList );if len (_cdbee ._daef )!=_cdbee ._bfgfa .Size (){return _dd .Error (_bbee ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_cdbee .NumberOfNewSymbols =uint32 (symbols .Size ());_cdbee .NumberOfExportedSymbols =uint32 (symbols .Size ());_cdbee ._cbaf =symbolMap ;_cdbee ._cgcg =unborderSymbols ;return nil ;};func (_bae *TextRegion )GetRegionInfo ()*RegionSegment {return _bae .RegionInfo };
type PageInformationSegment struct{_cffe _gg .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_dfde bool ;_dgcbb _fe .CombinationOperator ;_bfgf bool ;DefaultPixelValue uint8 ;_cbced bool ;IsLossless bool ;IsStripe bool ;
MaxStripeSize uint16 ;};func (_gfae *GenericRegion )decodeTemplate3 (_cac ,_gfcb ,_cace int ,_cffdb ,_eeabf int )(_feeb error ){const _cfg ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_bfc ,_gab int ;_dda int ;
_gbef byte ;_eec ,_fde int ;);if _cac >=1{_gbef ,_feeb =_gfae .Bitmap .GetByte (_eeabf );if _feeb !=nil {return _dd .Wrap (_feeb ,_cfg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dda =int (_gbef );};_bfc =(_dda >>1)&0x70;for _cfc :=0;_cfc < _cace ;
_cfc =_eec {var (_bebe byte ;_ede int ;);_eec =_cfc +8;if _bbdg :=_gfcb -_cfc ;_bbdg > 8{_ede =8;}else {_ede =_bbdg ;};if _cac >=1{_dda <<=8;if _eec < _gfcb {_gbef ,_feeb =_gfae .Bitmap .GetByte (_eeabf +1);if _feeb !=nil {return _dd .Wrap (_feeb ,_cfg ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_dda |=int (_gbef );};};for _ged :=0;_ged < _ede ;_ged ++{if _gfae ._eac {_gab =_gfae .overrideAtTemplate3 (_bfc ,_cfc +_ged ,_cac ,int (_bebe ),_ged );_gfae ._dee .SetIndex (int32 (_gab ));}else {_gfae ._dee .SetIndex (int32 (_bfc ));};_fde ,_feeb =_gfae ._bbf .DecodeBit (_gfae ._dee );
if _feeb !=nil {return _dd .Wrap (_feeb ,_cfg ,"");};_bebe |=byte (_fde )<<byte (7-_ged );_bfc =((_bfc &0x1f7)<<1)|_fde |((_dda >>uint (8-_ged ))&0x010);};if _ace :=_gfae .Bitmap .SetByte (_cffdb ,_bebe );_ace !=nil {return _dd .Wrap (_ace ,_cfg ,"");};
_cffdb ++;_eeabf ++;};return nil ;};func (_gacd *SymbolDictionary )parseHeader ()(_acae error ){_df .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _acae !=nil {_df .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_acae );
}else {_df .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _acae =_gacd .readRegionFlags ();_acae !=nil {return _acae ;};if _acae =_gacd .setAtPixels ();_acae !=nil {return _acae ;};if _acae =_gacd .setRefinementAtPixels ();_acae !=nil {return _acae ;};if _acae =_gacd .readNumberOfExportedSymbols ();_acae !=nil {return _acae ;
};if _acae =_gacd .readNumberOfNewSymbols ();_acae !=nil {return _acae ;};if _acae =_gacd .setInSyms ();_acae !=nil {return _acae ;};if _gacd ._fgbd {_dgg :=_gacd .Header .RTSegments ;for _dgdf :=len (_dgg )-1;_dgdf >=0;_dgdf --{if _dgg [_dgdf ].Type ==0{_fdec ,_ebde :=_dgg [_dgdf ].SegmentData .(*SymbolDictionary );
if !_ebde {_acae =_f .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_dgg [_dgdf ]);
return _acae ;};if _fdec ._fgbd {_gacd .setRetainedCodingContexts (_fdec );};break ;};};};if _acae =_gacd .checkInput ();_acae !=nil {return _acae ;};return nil ;};func (_gbcdf *SymbolDictionary )setExportedSymbols (_degba []int ){for _bgca :=uint32 (0);
_bgca < _gbcdf ._eda +_gbcdf .NumberOfNewSymbols ;_bgca ++{if _degba [_bgca ]==1{var _gbdd *_fe .Bitmap ;if _bgca < _gbcdf ._eda {_gbdd =_gbcdf ._ebef [_bgca ];}else {_gbdd =_gbcdf ._fafd [_bgca -_gbcdf ._eda ];};_df .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_gbdd );
_gbcdf ._adeg =append (_gbcdf ._adeg ,_gbdd );};};};func (_bbga *GenericRegion )writeGBAtPixels (_aecd _gg .BinaryWriter )(_gdfc int ,_gcef error ){const _efgb ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _bbga .UseMMR {return 0,nil ;
};_bag :=1;if _bbga .GBTemplate ==0{_bag =4;}else if _bbga .UseExtTemplates {_bag =12;};if len (_bbga .GBAtX )!=_bag {return 0,_dd .Errorf (_efgb ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_bbga .GBAtY )!=_bag {return 0,_dd .Errorf (_efgb ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _egca :=0;_egca < _bag ;_egca ++{if _gcef =_aecd .WriteByte (byte (_bbga .GBAtX [_egca ]));_gcef !=nil {return _gdfc ,_dd .Wrap (_gcef ,_efgb ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_gdfc ++;if _gcef =_aecd .WriteByte (byte (_bbga .GBAtY [_egca ]));
_gcef !=nil {return _gdfc ,_dd .Wrap (_gcef ,_efgb ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_gdfc ++;};return _gdfc ,nil ;};func (_ddbg *TextRegion )decodeCurrentT ()(int64 ,error ){if _ddbg .SbStrips !=1{if _ddbg .IsHuffmanEncoded {_caac ,_cceb :=_ddbg ._bfaa .ReadBits (byte (_ddbg .LogSBStrips ));
return int64 (_caac ),_cceb ;};_gadadb ,_efggf :=_ddbg ._cfca .DecodeInt (_ddbg ._feeaf );if _efggf !=nil {return 0,_efggf ;};return int64 (_gadadb ),nil ;};return 0,nil ;};func (_cf *GenericRefinementRegion )Init (header *Header ,r _gg .StreamReader )error {_cf ._ac =header ;
_cf ._gfa =r ;_cf .RegionInfo =NewRegionSegment (r );return _cf .parseHeader ();};func (_gddf *SymbolDictionary )decodeRefinedSymbol (_dagab ,_fbfdb uint32 )error {var (_cdce int ;_fgaed ,_bfee int32 ;);if _gddf .IsHuffmanEncoded {_fddf ,_dcba :=_gddf ._dccdg .ReadBits (byte (_gddf ._aaagc ));
if _dcba !=nil {return _dcba ;};_cdce =int (_fddf );_bfege ,_dcba :=_ba .GetStandardTable (15);if _dcba !=nil {return _dcba ;};_fdfe ,_dcba :=_bfege .Decode (_gddf ._dccdg );if _dcba !=nil {return _dcba ;};_fgaed =int32 (_fdfe );_fdfe ,_dcba =_bfege .Decode (_gddf ._dccdg );
if _dcba !=nil {return _dcba ;};_bfee =int32 (_fdfe );_bfege ,_dcba =_ba .GetStandardTable (1);if _dcba !=nil {return _dcba ;};if _ ,_dcba =_bfege .Decode (_gddf ._dccdg );_dcba !=nil {return _dcba ;};_gddf ._dccdg .Align ();}else {_ffba ,_ceeb :=_gddf ._gadg .DecodeIAID (uint64 (_gddf ._aaagc ),_gddf ._adbg );
if _ceeb !=nil {return _ceeb ;};_cdce =int (_ffba );_fgaed ,_ceeb =_gddf ._gadg .DecodeInt (_gddf ._ffgf );if _ceeb !=nil {return _ceeb ;};_bfee ,_ceeb =_gddf ._gadg .DecodeInt (_gddf ._afeg );if _ceeb !=nil {return _ceeb ;};};if _caba :=_gddf .setSymbolsArray ();
_caba !=nil {return _caba ;};_efcb :=_gddf ._bccb [_cdce ];if _dfge :=_gddf .decodeNewSymbols (_dagab ,_fbfdb ,_efcb ,_fgaed ,_bfee );_dfge !=nil {return _dfge ;};if _gddf .IsHuffmanEncoded {_gddf ._dccdg .Align ();};return nil ;};func (_edgaa *PatternDictionary )computeSegmentDataStructure ()error {_edgaa .DataOffset =_edgaa ._agedc .StreamPosition ();
_edgaa .DataHeaderLength =_edgaa .DataOffset -_edgaa .DataHeaderOffset ;_edgaa .DataLength =int64 (_edgaa ._agedc .Length ())-_edgaa .DataHeaderLength ;return nil ;};func (_beef *TextRegion )computeSymbolCodeLength ()error {if _beef .IsHuffmanEncoded {return _beef .symbolIDCodeLengths ();
};_beef ._ecaba =int8 (_e .Ceil (_e .Log (float64 (_beef .NumberOfSymbols ))/_e .Log (2)));return nil ;};func (_addf *Header )readSegmentPageAssociation (_dedd Documenter ,_efeb _gg .StreamReader ,_ffcf uint64 ,_aggb ...int )(_dgaca error ){const _eaad ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_addf .PageAssociationFieldSize {_cbege ,_eacg :=_efeb .ReadBits (8);if _eacg !=nil {return _dd .Wrap (_eacg ,_eaad ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_addf .PageAssociation =int (_cbege &0xFF);}else {_dafg ,_bcdg :=_efeb .ReadBits (32);
if _bcdg !=nil {return _dd .Wrap (_bcdg ,_eaad ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_addf .PageAssociation =int (_dafg &_e .MaxInt32 );};if _ffcf ==0{return nil ;};if _addf .PageAssociation !=0{_aea ,_egaf :=_dedd .GetPage (_addf .PageAssociation );
if _egaf !=nil {return _dd .Wrap (_egaf ,_eaad ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _ccfe int ;for _agcf :=uint64 (0);_agcf < _ffcf ;_agcf ++{_ccfe =_aggb [_agcf ];
_addf .RTSegments [_agcf ],_egaf =_aea .GetSegment (_ccfe );if _egaf !=nil {var _bcbfd error ;_addf .RTSegments [_agcf ],_bcbfd =_dedd .GetGlobalSegment (_ccfe );if _bcbfd !=nil {return _dd .Wrapf (_egaf ,_eaad ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_addf .PageAssociation );
};};};return nil ;};for _cebe :=uint64 (0);_cebe < _ffcf ;_cebe ++{_addf .RTSegments [_cebe ],_dgaca =_dedd .GetGlobalSegment (_aggb [_cebe ]);if _dgaca !=nil {return _dd .Wrapf (_dgaca ,_eaad ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_aggb [_cebe ]);
};};return nil ;};var _ templater =&template1 {};func _efeec (_eecb _gg .StreamReader ,_bcadc *Header )*TextRegion {_egfd :=&TextRegion {_bfaa :_eecb ,Header :_bcadc ,RegionInfo :NewRegionSegment (_eecb )};return _egfd ;};func (_fdfg *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_cgee :=range _fdfg .Header .RTSegments {if _cgee .Type ==0{_aagd ,_geed :=_cgee .GetSegmentData ();
if _geed !=nil {return _geed ;};_gecc ,_cggcf :=_aagd .(*SymbolDictionary );if !_cggcf {return _f .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_aagd );
};_bfge ,_geed :=_gecc .GetDictionary ();if _geed !=nil {return _f .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_cgee .SegmentNumber ,_geed .Error ());
};_fdfg ._ebef =append (_fdfg ._ebef ,_bfge ...);_fdfg ._eda +=_gecc .NumberOfExportedSymbols ;};};return nil ;};func (_cb *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _cb .RegionInfo };func (_bfbbd *TableSegment )StreamReader ()_gg .StreamReader {return _bfbbd ._eaedd };
func (_eggcf *TableSegment )Init (h *Header ,r _gg .StreamReader )error {_eggcf ._eaedd =r ;return _eggcf .parseHeader ();};func (_ded *GenericRefinementRegion )decodeOptimized (_acg ,_daf ,_fgb ,_ad ,_ega ,_dc ,_ggb int )error {var (_bcfg error ;_egg int ;
_bd int ;);_dgc :=_acg -int (_ded .ReferenceDY );if _gbea :=int (-_ded .ReferenceDX );_gbea > 0{_egg =_gbea ;};_ef :=_ded .ReferenceBitmap .GetByteIndex (_egg ,_dgc );if _ded .ReferenceDX > 0{_bd =int (_ded .ReferenceDX );};_bcd :=_ded .RegionBitmap .GetByteIndex (_bd ,_acg );
switch _ded .TemplateID {case 0:_bcfg =_ded .decodeTemplate (_acg ,_daf ,_fgb ,_ad ,_ega ,_dc ,_ggb ,_bcd ,_dgc ,_ef ,_ded ._a );case 1:_bcfg =_ded .decodeTemplate (_acg ,_daf ,_fgb ,_ad ,_ega ,_dc ,_ggb ,_bcd ,_dgc ,_ef ,_ded ._gbe );};return _bcfg ;};
func (_bdcbb *SymbolDictionary )GetDictionary ()([]*_fe .Bitmap ,error ){_df .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_df .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_df .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_bdcbb ._adeg ,_bdcbb ._fafd );
}();if _bdcbb ._adeg ==nil {var _bdg error ;if _bdcbb .UseRefinementAggregation {_bdcbb ._aaagc =_bdcbb .getSbSymCodeLen ();};if !_bdcbb .IsHuffmanEncoded {if _bdg =_bdcbb .setCodingStatistics ();_bdg !=nil {return nil ,_bdg ;};};_bdcbb ._fafd =make ([]*_fe .Bitmap ,_bdcbb .NumberOfNewSymbols );
var _ebaf []int ;if _bdcbb .IsHuffmanEncoded &&!_bdcbb .UseRefinementAggregation {_ebaf =make ([]int ,_bdcbb .NumberOfNewSymbols );};if _bdg =_bdcbb .setSymbolsArray ();_bdg !=nil {return nil ,_bdg ;};var _cccc ,_beea int64 ;_bdcbb ._edcg =0;for _bdcbb ._edcg < _bdcbb .NumberOfNewSymbols {_beea ,_bdg =_bdcbb .decodeHeightClassDeltaHeight ();
if _bdg !=nil {return nil ,_bdg ;};_cccc +=_beea ;var _eded ,_egba uint32 ;_dedf :=int64 (_bdcbb ._edcg );for {var _ggff int64 ;_ggff ,_bdg =_bdcbb .decodeDifferenceWidth ();if _eb .Is (_bdg ,_fee .ErrOOB ){break ;};if _bdg !=nil {return nil ,_bdg ;};if _bdcbb ._edcg >=_bdcbb .NumberOfNewSymbols {break ;
};_eded +=uint32 (_ggff );_egba +=_eded ;if !_bdcbb .IsHuffmanEncoded ||_bdcbb .UseRefinementAggregation {if !_bdcbb .UseRefinementAggregation {_bdg =_bdcbb .decodeDirectlyThroughGenericRegion (_eded ,uint32 (_cccc ));if _bdg !=nil {return nil ,_bdg ;};
}else {_bdg =_bdcbb .decodeAggregate (_eded ,uint32 (_cccc ));if _bdg !=nil {return nil ,_bdg ;};};}else if _bdcbb .IsHuffmanEncoded &&!_bdcbb .UseRefinementAggregation {_ebaf [_bdcbb ._edcg ]=int (_eded );};_bdcbb ._edcg ++;};if _bdcbb .IsHuffmanEncoded &&!_bdcbb .UseRefinementAggregation {var _dfgg int64 ;
if _bdcbb .SdHuffBMSizeSelection ==0{var _cdbf _ba .Tabler ;_cdbf ,_bdg =_ba .GetStandardTable (1);if _bdg !=nil {return nil ,_bdg ;};_dfgg ,_bdg =_cdbf .Decode (_bdcbb ._dccdg );if _bdg !=nil {return nil ,_bdg ;};}else {_dfgg ,_bdg =_bdcbb .huffDecodeBmSize ();
if _bdg !=nil {return nil ,_bdg ;};};_bdcbb ._dccdg .Align ();var _bcfge *_fe .Bitmap ;_bcfge ,_bdg =_bdcbb .decodeHeightClassCollectiveBitmap (_dfgg ,uint32 (_cccc ),_egba );if _bdg !=nil {return nil ,_bdg ;};_bdg =_bdcbb .decodeHeightClassBitmap (_bcfge ,_dedf ,int (_cccc ),_ebaf );
if _bdg !=nil {return nil ,_bdg ;};};};_gggc ,_bdg :=_bdcbb .getToExportFlags ();if _bdg !=nil {return nil ,_bdg ;};_bdcbb .setExportedSymbols (_gggc );};return _bdcbb ._adeg ,nil ;};func (_gbda *HalftoneRegion )shiftAndFill (_dbfg int )int {_dbfg >>=8;
if _dbfg < 0{_adga :=int (_e .Log (float64 (_cgc (_dbfg )))/_e .Log (2));_eabd :=31-_adga ;for _ecg :=1;_ecg < _eabd ;_ecg ++{_dbfg |=1<<uint (31-_ecg );};};return _dbfg ;};func (_fceg *SymbolDictionary )decodeNewSymbols (_dcbfb ,_cabg uint32 ,_abcf *_fe .Bitmap ,_cfegc ,_dge int32 )error {if _fceg ._aefga ==nil {_fceg ._aefga =_gdcb (_fceg ._dccdg ,nil );
if _fceg ._gadg ==nil {var _ege error ;_fceg ._gadg ,_ege =_db .New (_fceg ._dccdg );if _ege !=nil {return _ege ;};};if _fceg ._bgefe ==nil {_fceg ._bgefe =_db .NewStats (65536,1);};};_fceg ._aefga .setParameters (_fceg ._bgefe ,_fceg ._gadg ,_fceg .SdrTemplate ,_dcbfb ,_cabg ,_abcf ,_cfegc ,_dge ,false ,_fceg .SdrATX ,_fceg .SdrATY );
return _fceg .addSymbol (_fceg ._aefga );};type GenericRefinementRegion struct{_a templater ;_gbe templater ;_gfa _gg .StreamReader ;_ac *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;
RegionBitmap *_fe .Bitmap ;ReferenceBitmap *_fe .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_cd *_db .Decoder ;_fc *_db .DecoderStats ;_gbc bool ;_eab []bool ;};func (_eebc *TextRegion )GetRegionBitmap ()(*_fe .Bitmap ,error ){if _eebc .RegionBitmap !=nil {return _eebc .RegionBitmap ,nil ;
};if !_eebc .IsHuffmanEncoded {if _cedb :=_eebc .setCodingStatistics ();_cedb !=nil {return nil ,_cedb ;};};if _gega :=_eebc .createRegionBitmap ();_gega !=nil {return nil ,_gega ;};if _bgcf :=_eebc .decodeSymbolInstances ();_bgcf !=nil {return nil ,_bgcf ;
};return _eebc .RegionBitmap ,nil ;};func (_ebc *GenericRegion )Size ()int {return _ebc .RegionSegment .Size ()+1+2*len (_ebc .GBAtX )};func (_faaa *PageInformationSegment )readContainsRefinement ()error {_ffga ,_dgcf :=_faaa ._cffe .ReadBit ();if _dgcf !=nil {return _dgcf ;
};if _ffga ==1{_faaa ._cbced =true ;};return nil ;};func (_bdf *GenericRefinementRegion )updateOverride ()error {if _bdf .GrAtX ==nil ||_bdf .GrAtY ==nil {return _ee .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_bdf .GrAtX )!=len (_bdf .GrAtY ){return _ee .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_bdf ._eab =make ([]bool ,len (_bdf .GrAtX ));switch _bdf .TemplateID {case 0:if _bdf .GrAtX [0]!=-1&&_bdf .GrAtY [0]!=-1{_bdf ._eab [0]=true ;
_bdf ._gbc =true ;};if _bdf .GrAtX [1]!=-1&&_bdf .GrAtY [1]!=-1{_bdf ._eab [1]=true ;_bdf ._gbc =true ;};case 1:_bdf ._gbc =false ;};return nil ;};func (_bcda *PageInformationSegment )encodeStripingInformation (_aadb _gg .BinaryWriter )(_adcf int ,_dgf error ){const _dbbc ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_bcda .IsStripe {if _adcf ,_dgf =_aadb .Write ([]byte {0x00,0x00});_dgf !=nil {return 0,_dd .Wrap (_dgf ,_dbbc ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _adcf ,nil ;};_ebae :=make ([]byte ,2);_eg .BigEndian .PutUint16 (_ebae ,_bcda .MaxStripeSize |1<<15);
if _adcf ,_dgf =_aadb .Write (_ebae );_dgf !=nil {return 0,_dd .Wrapf (_dgf ,_dbbc ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_bcda .MaxStripeSize );};return _adcf ,nil ;};func (_gaa *Header )readHeaderFlags ()error {const _gebf ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_eaedf ,_dae :=_gaa .Reader .ReadBit ();if _dae !=nil {return _dd .Wrap (_dae ,_gebf ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _eaedf !=0{_gaa .RetainFlag =true ;};_eaedf ,_dae =_gaa .Reader .ReadBit ();if _dae !=nil {return _dd .Wrap (_dae ,_gebf ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _eaedf !=0{_gaa .PageAssociationFieldSize =true ;};_abe ,_dae :=_gaa .Reader .ReadBits (6);if _dae !=nil {return _dd .Wrap (_dae ,_gebf ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_gaa .Type =Type (int (_abe ));return nil ;
};func (_bbc *GenericRegion )Init (h *Header ,r _gg .StreamReader )error {_bbc .RegionSegment =NewRegionSegment (r );_bbc ._adad =r ;return _bbc .parseHeader ();};func (_deec *Header )subInputReader ()(_gg .StreamReader ,error ){return _gg .NewSubstreamReader (_deec .Reader ,_deec .SegmentDataStartOffset ,_deec .SegmentDataLength );
};func (_acfg *PageInformationSegment )Init (h *Header ,r _gg .StreamReader )(_geg error ){_acfg ._cffe =r ;if _geg =_acfg .parseHeader ();_geg !=nil {return _dd .Wrap (_geg ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_bbbbc *SymbolDictionary )encodeNumSyms (_bfad _gg .BinaryWriter )(_bdfe int ,_eed error ){const _ccdc ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_gfaf :=make ([]byte ,4);_eg .BigEndian .PutUint32 (_gfaf ,_bbbbc .NumberOfExportedSymbols );
if _bdfe ,_eed =_bfad .Write (_gfaf );_eed !=nil {return _bdfe ,_dd .Wrap (_eed ,_ccdc ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_eg .BigEndian .PutUint32 (_gfaf ,_bbbbc .NumberOfNewSymbols );_dabf ,_eed :=_bfad .Write (_gfaf );
if _eed !=nil {return _bdfe ,_dd .Wrap (_eed ,_ccdc ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _bdfe +_dabf ,nil ;};func (_fffgb *TextRegion )symbolIDCodeLengths ()error {var (_adefb []*_ba .Code ;_dbccb uint64 ;_cgbg _ba .Tabler ;
_fadbb error ;);for _cbcg :=0;_cbcg < 35;_cbcg ++{_dbccb ,_fadbb =_fffgb ._bfaa .ReadBits (4);if _fadbb !=nil {return _fadbb ;};_feee :=int (_dbccb &0xf);if _feee > 0{_adefb =append (_adefb ,_ba .NewCode (int32 (_feee ),0,int32 (_cbcg ),false ));};};_cgbg ,_fadbb =_ba .NewFixedSizeTable (_adefb );
if _fadbb !=nil {return _fadbb ;};var (_bbccf int64 ;_befb uint32 ;_gecf []*_ba .Code ;_bfcae int64 ;);for _befb < _fffgb .NumberOfSymbols {_bfcae ,_fadbb =_cgbg .Decode (_fffgb ._bfaa );if _fadbb !=nil {return _fadbb ;};if _bfcae < 32{if _bfcae > 0{_gecf =append (_gecf ,_ba .NewCode (int32 (_bfcae ),0,int32 (_befb ),false ));
};_bbccf =_bfcae ;_befb ++;}else {var _gfgff ,_degf int64 ;switch _bfcae {case 32:_dbccb ,_fadbb =_fffgb ._bfaa .ReadBits (2);if _fadbb !=nil {return _fadbb ;};_gfgff =3+int64 (_dbccb );if _befb > 0{_degf =_bbccf ;};case 33:_dbccb ,_fadbb =_fffgb ._bfaa .ReadBits (3);
if _fadbb !=nil {return _fadbb ;};_gfgff =3+int64 (_dbccb );case 34:_dbccb ,_fadbb =_fffgb ._bfaa .ReadBits (7);if _fadbb !=nil {return _fadbb ;};_gfgff =11+int64 (_dbccb );};for _ecbd :=0;_ecbd < int (_gfgff );_ecbd ++{if _degf > 0{_gecf =append (_gecf ,_ba .NewCode (int32 (_degf ),0,int32 (_befb ),false ));
};_befb ++;};};};_fffgb ._bfaa .Align ();_fffgb ._gadad ,_fadbb =_ba .NewFixedSizeTable (_gecf );return _fadbb ;};func (_cacd *SymbolDictionary )decodeThroughTextRegion (_cadg ,_deaf ,_gafe uint32 )error {if _cacd ._babc ==nil {_cacd ._babc =_efeec (_cacd ._dccdg ,nil );
_cacd ._babc .setContexts (_cacd ._bgefe ,_db .NewStats (512,1),_db .NewStats (512,1),_db .NewStats (512,1),_db .NewStats (512,1),_cacd ._adbg ,_db .NewStats (512,1),_db .NewStats (512,1),_db .NewStats (512,1),_db .NewStats (512,1));};if _edcf :=_cacd .setSymbolsArray ();
_edcf !=nil {return _edcf ;};_cacd ._babc .setParameters (_cacd ._gadg ,_cacd .IsHuffmanEncoded ,true ,_cadg ,_deaf ,_gafe ,1,_cacd ._eda +_cacd ._edcg ,0,0,0,1,0,0,0,0,0,0,0,0,0,_cacd .SdrTemplate ,_cacd .SdrATX ,_cacd .SdrATY ,_cacd ._bccb ,_cacd ._aaagc );
return _cacd .addSymbol (_cacd ._babc );};func (_ffda *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _faga ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _ffda .SbHuffRSize ==0{_bbab ,_dbfd :=_ba .GetStandardTable (1);
if _dbfd !=nil {return 0,_dd .Wrap (_dbfd ,_faga ,"");};return _bbab .Decode (_ffda ._bfaa );};if _ffda ._aefe ==nil {var (_dbbe int ;_gegb error ;);if _ffda .SbHuffFS ==3{_dbbe ++;};if _ffda .SbHuffDS ==3{_dbbe ++;};if _ffda .SbHuffDT ==3{_dbbe ++;};if _ffda .SbHuffRDWidth ==3{_dbbe ++;
};if _ffda .SbHuffRDHeight ==3{_dbbe ++;};if _ffda .SbHuffRDX ==3{_dbbe ++;};if _ffda .SbHuffRDY ==3{_dbbe ++;};_ffda ._aefe ,_gegb =_ffda .getUserTable (_dbbe );if _gegb !=nil {return 0,_dd .Wrap (_gegb ,_faga ,"");};};_bedbd ,_cefb :=_ffda ._aefe .Decode (_ffda ._bfaa );
if _cefb !=nil {return 0,_dd .Wrap (_cefb ,_faga ,"");};return _bedbd ,nil ;};func (_bdcb *PatternDictionary )readTemplate ()error {_cegea ,_afg :=_bdcb ._agedc .ReadBits (2);if _afg !=nil {return _afg ;};_bdcb .HDTemplate =byte (_cegea );return nil ;};
func (_ffbdf *TextRegion )readRegionFlags ()error {var (_edcag int ;_fgad uint64 ;_fcgcg error ;);_edcag ,_fcgcg =_ffbdf ._bfaa .ReadBit ();if _fcgcg !=nil {return _fcgcg ;};_ffbdf .SbrTemplate =int8 (_edcag );_fgad ,_fcgcg =_ffbdf ._bfaa .ReadBits (5);
if _fcgcg !=nil {return _fcgcg ;};_ffbdf .SbDsOffset =int8 (_fgad );if _ffbdf .SbDsOffset > 0x0f{_ffbdf .SbDsOffset -=0x20;};_edcag ,_fcgcg =_ffbdf ._bfaa .ReadBit ();if _fcgcg !=nil {return _fcgcg ;};_ffbdf .DefaultPixel =int8 (_edcag );_fgad ,_fcgcg =_ffbdf ._bfaa .ReadBits (2);
if _fcgcg !=nil {return _fcgcg ;};_ffbdf .CombinationOperator =_fe .CombinationOperator (int (_fgad )&0x3);_edcag ,_fcgcg =_ffbdf ._bfaa .ReadBit ();if _fcgcg !=nil {return _fcgcg ;};_ffbdf .IsTransposed =int8 (_edcag );_fgad ,_fcgcg =_ffbdf ._bfaa .ReadBits (2);
if _fcgcg !=nil {return _fcgcg ;};_ffbdf .ReferenceCorner =int16 (_fgad )&0x3;_fgad ,_fcgcg =_ffbdf ._bfaa .ReadBits (2);if _fcgcg !=nil {return _fcgcg ;};_ffbdf .LogSBStrips =int16 (_fgad )&0x3;_ffbdf .SbStrips =1<<uint (_ffbdf .LogSBStrips );_edcag ,_fcgcg =_ffbdf ._bfaa .ReadBit ();
if _fcgcg !=nil {return _fcgcg ;};if _edcag ==1{_ffbdf .UseRefinement =true ;};_edcag ,_fcgcg =_ffbdf ._bfaa .ReadBit ();if _fcgcg !=nil {return _fcgcg ;};if _edcag ==1{_ffbdf .IsHuffmanEncoded =true ;};return nil ;};func (_abc *GenericRegion )decodeTemplate0a (_geag ,_aed ,_fgc int ,_aaf ,_abag int )(_bbbb error ){const _cdf ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_cee ,_acba int ;_dfa ,_bgef int ;_bada byte ;_fba int ;);if _geag >=1{_bada ,_bbbb =_abc .Bitmap .GetByte (_abag );if _bbbb !=nil {return _dd .Wrap (_bbbb ,_cdf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dfa =int (_bada );};if _geag >=2{_bada ,_bbbb =_abc .Bitmap .GetByte (_abag -_abc .Bitmap .RowStride );
if _bbbb !=nil {return _dd .Wrap (_bbbb ,_cdf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bgef =int (_bada )<<6;};_cee =(_dfa &0xf0)|(_bgef &0x3800);for _ceg :=0;_ceg < _fgc ;_ceg =_fba {var (_ffc byte ;_degc int ;);_fba =_ceg +8;if _ecddd :=_aed -_ceg ;
_ecddd > 8{_degc =8;}else {_degc =_ecddd ;};if _geag > 0{_dfa <<=8;if _fba < _aed {_bada ,_bbbb =_abc .Bitmap .GetByte (_abag +1);if _bbbb !=nil {return _dd .Wrap (_bbbb ,_cdf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_dfa |=int (_bada );};
};if _geag > 1{_gfef :=_abag -_abc .Bitmap .RowStride +1;_bgef <<=8;if _fba < _aed {_bada ,_bbbb =_abc .Bitmap .GetByte (_gfef );if _bbbb !=nil {return _dd .Wrap (_bbbb ,_cdf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bgef |=int (_bada )<<6;
}else {_bgef |=0;};};for _ead :=0;_ead < _degc ;_ead ++{_aeeg :=uint (7-_ead );if _abc ._eac {_acba =_abc .overrideAtTemplate0a (_cee ,_ceg +_ead ,_geag ,int (_ffc ),_ead ,int (_aeeg ));_abc ._dee .SetIndex (int32 (_acba ));}else {_abc ._dee .SetIndex (int32 (_cee ));
};var _bgdb int ;_bgdb ,_bbbb =_abc ._bbf .DecodeBit (_abc ._dee );if _bbbb !=nil {return _dd .Wrap (_bbbb ,_cdf ,"");};_ffc |=byte (_bgdb )<<_aeeg ;_cee =((_cee &0x7bf7)<<1)|_bgdb |((_dfa >>_aeeg )&0x10)|((_bgef >>_aeeg )&0x800);};if _fbad :=_abc .Bitmap .SetByte (_aaf ,_ffc );
_fbad !=nil {return _dd .Wrap (_fbad ,_cdf ,"");};_aaf ++;_abag ++;};return nil ;};type TableSegment struct{_eaedd _gg .StreamReader ;_gbag int32 ;_cbaa int32 ;_gdde int32 ;_cabf int32 ;_bedb int32 ;};func (_adbb *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_adbb .SdHuffAggInstanceSelection {_gaee ,_cdbeee :=_ba .GetStandardTable (1);
if _cdbeee !=nil {return 0,_cdbeee ;};return _gaee .Decode (_adbb ._dccdg );};if _adbb ._gebb ==nil {var (_fbee int ;_efcf error ;);if _adbb .SdHuffDecodeHeightSelection ==3{_fbee ++;};if _adbb .SdHuffDecodeWidthSelection ==3{_fbee ++;};if _adbb .SdHuffBMSizeSelection ==3{_fbee ++;
};_adbb ._gebb ,_efcf =_adbb .getUserTable (_fbee );if _efcf !=nil {return 0,_efcf ;};};return _adbb ._gebb .Decode (_adbb ._dccdg );};func (_dfd *GenericRefinementRegion )GetRegionBitmap ()(*_fe .Bitmap ,error ){var _fg error ;_df .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _fg !=nil {_df .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_fg );
}else {_df .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _dfd .RegionBitmap !=nil {return _dfd .RegionBitmap ,nil ;};_fec :=0;if _dfd .ReferenceBitmap ==nil {_dfd .ReferenceBitmap ,_fg =_dfd .getGrReference ();if _fg !=nil {return nil ,_fg ;};};if _dfd ._cd ==nil {_dfd ._cd ,_fg =_db .New (_dfd ._gfa );
if _fg !=nil {return nil ,_fg ;};};if _dfd ._fc ==nil {_dfd ._fc =_db .NewStats (8192,1);};_dfd .RegionBitmap =_fe .New (int (_dfd .RegionInfo .BitmapWidth ),int (_dfd .RegionInfo .BitmapHeight ));if _dfd .TemplateID ==0{if _fg =_dfd .updateOverride ();
_fg !=nil {return nil ,_fg ;};};_dg :=(_dfd .RegionBitmap .Width +7)&-8;var _gd int ;if _dfd .IsTPGROn {_gd =int (-_dfd .ReferenceDY )*_dfd .ReferenceBitmap .RowStride ;};_da :=_gd +1;for _ab :=0;_ab < _dfd .RegionBitmap .Height ;_ab ++{if _dfd .IsTPGROn {_ae ,_bea :=_dfd .decodeSLTP ();
if _bea !=nil {return nil ,_bea ;};_fec ^=_ae ;};if _fec ==0{_fg =_dfd .decodeOptimized (_ab ,_dfd .RegionBitmap .Width ,_dfd .RegionBitmap .RowStride ,_dfd .ReferenceBitmap .RowStride ,_dg ,_gd ,_da );if _fg !=nil {return nil ,_fg ;};}else {_fg =_dfd .decodeTypicalPredictedLine (_ab ,_dfd .RegionBitmap .Width ,_dfd .RegionBitmap .RowStride ,_dfd .ReferenceBitmap .RowStride ,_dg ,_gd );
if _fg !=nil {return nil ,_fg ;};};};return _dfd .RegionBitmap ,nil ;};func (_bfdd *Header )writeSegmentPageAssociation (_ebgf _gg .BinaryWriter )(_adde int ,_dafgf error ){const _bded ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _bfdd .pageSize ()!=4{if _dafgf =_ebgf .WriteByte (byte (_bfdd .PageAssociation ));_dafgf !=nil {return 0,_dd .Wrap (_dafgf ,_bded ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_eddea :=make ([]byte ,4);
_eg .BigEndian .PutUint32 (_eddea ,uint32 (_bfdd .PageAssociation ));if _adde ,_dafgf =_ebgf .Write (_eddea );_dafgf !=nil {return 0,_dd .Wrap (_dafgf ,_bded ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};
return _adde ,nil ;};func (_cefg *PageInformationSegment )checkInput ()error {if _cefg .PageBMHeight ==_e .MaxInt32 {if !_cefg .IsStripe {_df .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_fcff *Header )Encode (w _gg .BinaryWriter )(_baa int ,_gfff error ){const _bcg ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _cfegd _gg .BinaryWriter ;_df .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _gfff !=nil {_df .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_gfff );}else {_df .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_fcff );
_df .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _fcff .SegmentData !=nil {_gcgd ,_fcdc :=_fcff .SegmentData .(SegmentEncoder );
if !_fcdc {return 0,_dd .Errorf (_bcg ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_fcff .SegmentData );
};_cfegd =_gg .BufferedMSB ();_baa ,_gfff =_gcgd .Encode (_cfegd );if _gfff !=nil {return 0,_dd .Wrap (_gfff ,_bcg ,"");};_fcff .SegmentDataLength =uint64 (_baa );};if _fcff .pageSize ()==4{_fcff .PageAssociationFieldSize =true ;};var _eebf int ;_eebf ,_gfff =_fcff .writeSegmentNumber (w );
if _gfff !=nil {return 0,_dd .Wrap (_gfff ,_bcg ,"");};_baa +=_eebf ;if _gfff =_fcff .writeFlags (w );_gfff !=nil {return _baa ,_dd .Wrap (_gfff ,_bcg ,"");};_baa ++;_eebf ,_gfff =_fcff .writeReferredToCount (w );if _gfff !=nil {return 0,_dd .Wrap (_gfff ,_bcg ,"");
};_baa +=_eebf ;_eebf ,_gfff =_fcff .writeReferredToSegments (w );if _gfff !=nil {return 0,_dd .Wrap (_gfff ,_bcg ,"");};_baa +=_eebf ;_eebf ,_gfff =_fcff .writeSegmentPageAssociation (w );if _gfff !=nil {return 0,_dd .Wrap (_gfff ,_bcg ,"");};_baa +=_eebf ;
_eebf ,_gfff =_fcff .writeSegmentDataLength (w );if _gfff !=nil {return 0,_dd .Wrap (_gfff ,_bcg ,"");};_baa +=_eebf ;_fcff .HeaderLength =int64 (_baa )-int64 (_fcff .SegmentDataLength );if _cfegd !=nil {if _ ,_gfff =w .Write (_cfegd .Data ());_gfff !=nil {return _baa ,_dd .Wrap (_gfff ,_bcg ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _baa ,nil ;};func (_gddb *GenericRegion )overrideAtTemplate1 (_abb ,_dddd ,_ddda ,_ebbg ,_ecdb int )int {_abb &=0x1FF7;if _gddb .GBAtY [0]==0&&_gddb .GBAtX [0]>=-int8 (_ecdb ){_abb |=(_ebbg >>uint (7-(int8 (_ecdb )+_gddb .GBAtX [0]))&0x1)<<3;
}else {_abb |=int (_gddb .getPixel (_dddd +int (_gddb .GBAtX [0]),_ddda +int (_gddb .GBAtY [0])))<<3;};return _abb ;};func (_bedc *Header )readHeaderLength (_geda _gg .StreamReader ,_bcccc int64 ){_bedc .HeaderLength =_geda .StreamPosition ()-_bcccc ;};
func (_gbb *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_eegc ,_fge :=_gbb ._cffe .ReadBit ();if _fge !=nil {return _fge ;};if _eegc ==1{_gbb ._bfgf =true ;};return nil ;};func (_fgcfg *TextRegion )decodeIds ()(int64 ,error ){const _aafcf ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";
if _fgcfg .IsHuffmanEncoded {if _fgcfg .SbHuffDS ==3{if _fgcfg ._gdad ==nil {_bcadf :=0;if _fgcfg .SbHuffFS ==3{_bcadf ++;};var _badc error ;_fgcfg ._gdad ,_badc =_fgcfg .getUserTable (_bcadf );if _badc !=nil {return 0,_dd .Wrap (_badc ,_aafcf ,"");};};
return _fgcfg ._gdad .Decode (_fgcfg ._bfaa );};_defe ,_gedbb :=_ba .GetStandardTable (8+int (_fgcfg .SbHuffDS ));if _gedbb !=nil {return 0,_dd .Wrap (_gedbb ,_aafcf ,"");};return _defe .Decode (_fgcfg ._bfaa );};_eace ,_cbfd :=_fgcfg ._cfca .DecodeInt (_fgcfg ._gfefc );
if _cbfd !=nil {return 0,_dd .Wrap (_cbfd ,_aafcf ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_eace ),nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_fe .Bitmap ,error );};func (_ebda *Header )writeReferredToCount (_eee _gg .BinaryWriter )(_fgcf int ,_bfcc error ){const _aaec ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_ebda .RTSNumbers =make ([]int ,len (_ebda .RTSegments ));for _cddf ,_fecg :=range _ebda .RTSegments {_ebda .RTSNumbers [_cddf ]=int (_fecg .SegmentNumber );};if len (_ebda .RTSNumbers )<=4{var _gfgcb byte ;if len (_ebda .RetainBits )>=1{_gfgcb =_ebda .RetainBits [0];
};_gfgcb |=byte (len (_ebda .RTSNumbers ))<<5;if _bfcc =_eee .WriteByte (_gfgcb );_bfcc !=nil {return 0,_dd .Wrap (_bfcc ,_aaec ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_cgad :=uint32 (len (_ebda .RTSNumbers ));
_fedfa :=make ([]byte ,4+_ea .Ceil (len (_ebda .RTSNumbers )+1,8));_cgad |=0x7<<29;_eg .BigEndian .PutUint32 (_fedfa ,_cgad );copy (_fedfa [1:],_ebda .RetainBits );_fgcf ,_bfcc =_eee .Write (_fedfa );if _bfcc !=nil {return 0,_dd .Wrap (_bfcc ,_aaec ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _fgcf ,nil ;};func (_gceg *GenericRegion )decodeTemplate0b (_aged ,_aefb ,_fagc int ,_aggg ,_adg int )(_cea error ){const _fgbg ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_gba ,_dcbf int ;_ggdd ,_cde int ;
_aafd byte ;_dbda int ;);if _aged >=1{_aafd ,_cea =_gceg .Bitmap .GetByte (_adg );if _cea !=nil {return _dd .Wrap (_cea ,_fgbg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ggdd =int (_aafd );};if _aged >=2{_aafd ,_cea =_gceg .Bitmap .GetByte (_adg -_gceg .Bitmap .RowStride );
if _cea !=nil {return _dd .Wrap (_cea ,_fgbg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cde =int (_aafd )<<6;};_gba =(_ggdd &0xf0)|(_cde &0x3800);for _cgg :=0;_cgg < _fagc ;_cgg =_dbda {var (_bgf byte ;_eabf int ;);_dbda =_cgg +8;if _ffgd :=_aefb -_cgg ;
_ffgd > 8{_eabf =8;}else {_eabf =_ffgd ;};if _aged > 0{_ggdd <<=8;if _dbda < _aefb {_aafd ,_cea =_gceg .Bitmap .GetByte (_adg +1);if _cea !=nil {return _dd .Wrap (_cea ,_fgbg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ggdd |=int (_aafd );};
};if _aged > 1{_cde <<=8;if _dbda < _aefb {_aafd ,_cea =_gceg .Bitmap .GetByte (_adg -_gceg .Bitmap .RowStride +1);if _cea !=nil {return _dd .Wrap (_cea ,_fgbg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cde |=int (_aafd )<<6;};};for _ebf :=0;
_ebf < _eabf ;_ebf ++{_ddd :=uint (7-_ebf );if _gceg ._eac {_dcbf =_gceg .overrideAtTemplate0b (_gba ,_cgg +_ebf ,_aged ,int (_bgf ),_ebf ,int (_ddd ));_gceg ._dee .SetIndex (int32 (_dcbf ));}else {_gceg ._dee .SetIndex (int32 (_gba ));};var _ffbc int ;
_ffbc ,_cea =_gceg ._bbf .DecodeBit (_gceg ._dee );if _cea !=nil {return _dd .Wrap (_cea ,_fgbg ,"");};_bgf |=byte (_ffbc <<_ddd );_gba =((_gba &0x7bf7)<<1)|_ffbc |((_ggdd >>_ddd )&0x10)|((_cde >>_ddd )&0x800);};if _aad :=_gceg .Bitmap .SetByte (_aggg ,_bgf );
_aad !=nil {return _dd .Wrap (_aad ,_fgbg ,"");};_aggg ++;_adg ++;};return nil ;};func (_abea *TableSegment )HtLow ()int32 {return _abea ._cabf };func (_debd *Header )writeSegmentDataLength (_dadfc _gg .BinaryWriter )(_egda int ,_ccd error ){_eabg :=make ([]byte ,4);
_eg .BigEndian .PutUint32 (_eabg ,uint32 (_debd .SegmentDataLength ));if _egda ,_ccd =_dadfc .Write (_eabg );_ccd !=nil {return 0,_dd .Wrap (_ccd ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _egda ,nil ;};func (_adadd *SymbolDictionary )encodeSymbols (_egfbg _gg .BinaryWriter )(_ggfe int ,_aebb error ){const _daga ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_fdce :=_gb .New ();_fdce .Init ();_gffd ,_aebb :=_adadd ._bfgfa .SelectByIndexes (_adadd ._daef );
if _aebb !=nil {return 0,_dd .Wrap (_aebb ,_daga ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_fcfg :=map[*_fe .Bitmap ]int {};for _aff ,_fegb :=range _gffd .Values {_fcfg [_fegb ]=_aff ;};_gffd .SortByHeight ();var _cfee ,_abdeb int ;_cafg ,_aebb :=_gffd .GroupByHeight ();
if _aebb !=nil {return 0,_dd .Wrap (_aebb ,_daga ,"");};for _ ,_gfge :=range _cafg .Values {_gbff :=_gfge .Values [0].Height ;_eegdd :=_gbff -_cfee ;if _aebb =_fdce .EncodeInteger (_gb .IADH ,_eegdd );_aebb !=nil {return 0,_dd .Wrapf (_aebb ,_daga ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_eegdd );
};_cfee =_gbff ;_becc ,_gfgd :=_gfge .GroupByWidth ();if _gfgd !=nil {return 0,_dd .Wrapf (_gfgd ,_daga ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_gbff );};var _fafa int ;for _ ,_bedg :=range _becc .Values {for _ ,_fefdce :=range _bedg .Values {_cddfc :=_fefdce .Width ;
_fcee :=_cddfc -_fafa ;if _gfgd =_fdce .EncodeInteger (_gb .IADW ,_fcee );_gfgd !=nil {return 0,_dd .Wrapf (_gfgd ,_daga ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_fcee );};_fafa +=_fcee ;if _gfgd =_fdce .EncodeBitmap (_fefdce ,false );
_gfgd !=nil {return 0,_dd .Wrapf (_gfgd ,_daga ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_gbff ,_cddfc );};_bcbff :=_fcfg [_fefdce ];_adadd ._cbaf [_bcbff ]=_abdeb ;_abdeb ++;};};if _gfgd =_fdce .EncodeOOB (_gb .IADW );
_gfgd !=nil {return 0,_dd .Wrap (_gfgd ,_daga ,"\u0049\u0041\u0044\u0057");};};if _aebb =_fdce .EncodeInteger (_gb .IAEX ,0);_aebb !=nil {return 0,_dd .Wrap (_aebb ,_daga ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _aebb =_fdce .EncodeInteger (_gb .IAEX ,len (_adadd ._daef ));_aebb !=nil {return 0,_dd .Wrap (_aebb ,_daga ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_fdce .Final ();_eacf ,_aebb :=_fdce .WriteTo (_egfbg );
if _aebb !=nil {return 0,_dd .Wrap (_aebb ,_daga ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_eacf ),nil ;};func (_aeegb *PageInformationSegment )CombinationOperator ()_fe .CombinationOperator {return _aeegb ._dgcbb ;};func (_egbf *SymbolDictionary )Encode (w _gg .BinaryWriter )(_agb int ,_deacb error ){const _bcfb ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _egbf ==nil {return 0,_dd .Error (_bcfb ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _agb ,_deacb =_egbf .encodeFlags (w );_deacb !=nil {return _agb ,_dd .Wrap (_deacb ,_bcfb ,"");
};_agcb ,_deacb :=_egbf .encodeATFlags (w );if _deacb !=nil {return _agb ,_dd .Wrap (_deacb ,_bcfb ,"");};_agb +=_agcb ;if _agcb ,_deacb =_egbf .encodeRefinementATFlags (w );_deacb !=nil {return _agb ,_dd .Wrap (_deacb ,_bcfb ,"");};_agb +=_agcb ;if _agcb ,_deacb =_egbf .encodeNumSyms (w );
_deacb !=nil {return _agb ,_dd .Wrap (_deacb ,_bcfb ,"");};_agb +=_agcb ;if _agcb ,_deacb =_egbf .encodeSymbols (w );_deacb !=nil {return _agb ,_dd .Wrap (_deacb ,_bcfb ,"");};_agb +=_agcb ;return _agb ,nil ;};func (_gabb *Header )readSegmentNumber (_aaae _gg .StreamReader )error {const _agdd ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_dead :=make ([]byte ,4);_ ,_bacf :=_aaae .Read (_dead );if _bacf !=nil {return _dd .Wrap (_bacf ,_agdd ,"");};_gabb .SegmentNumber =_eg .BigEndian .Uint32 (_dead );return nil ;};func (_eefaa *TextRegion )initSymbols ()error {const _abfg ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_fgab :=range _eefaa .Header .RTSegments {if _fgab ==nil {return _dd .Error (_abfg ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _fgab .Type ==0{_aecg ,_eegcf :=_fgab .GetSegmentData ();if _eegcf !=nil {return _dd .Wrap (_eegcf ,_abfg ,"");};_affd ,_facf :=_aecg .(*SymbolDictionary );if !_facf {return _dd .Error (_abfg ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_affd ._adbg =_eefaa ._dcdf ;_feae ,_eegcf :=_affd .GetDictionary ();if _eegcf !=nil {return _dd .Wrap (_eegcf ,_abfg ,"");};_eefaa .Symbols =append (_eefaa .Symbols ,_feae ...);};};_eefaa .NumberOfSymbols =uint32 (len (_eefaa .Symbols ));return nil ;
};func (_fdb *Header )readReferredToSegmentNumbers (_eaff _gg .StreamReader ,_gfgc int )([]int ,error ){const _ffdb ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_cdbe :=make ([]int ,_gfgc );if _gfgc > 0{_fdb .RTSegments =make ([]*Header ,_gfgc );var (_geeb uint64 ;_acca error ;);for _cge :=0;_cge < _gfgc ;_cge ++{_geeb ,_acca =_eaff .ReadBits (byte (_fdb .referenceSize ())<<3);if _acca !=nil {return nil ,_dd .Wrapf (_acca ,_ffdb ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_cge );
};_cdbe [_cge ]=int (_geeb &_e .MaxInt32 );};};return _cdbe ,nil ;};func (_bdec *TextRegion )Encode (w _gg .BinaryWriter )(_eacgc int ,_gced error ){const _daae ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _eacgc ,_gced =_bdec .RegionInfo .Encode (w );_gced !=nil {return _eacgc ,_dd .Wrap (_gced ,_daae ,"");};var _fegcd int ;if _fegcd ,_gced =_bdec .encodeFlags (w );_gced !=nil {return _eacgc ,_dd .Wrap (_gced ,_daae ,"");};_eacgc +=_fegcd ;if _fegcd ,_gced =_bdec .encodeSymbols (w );
_gced !=nil {return _eacgc ,_dd .Wrap (_gced ,_daae ,"");};_eacgc +=_fegcd ;return _eacgc ,nil ;};func (_gefd *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _gefd .SdHuffDecodeHeightSelection {case 0:_bdffc ,_ddab :=_ba .GetStandardTable (4);
if _ddab !=nil {return 0,_ddab ;};return _bdffc .Decode (_gefd ._dccdg );case 1:_fdefd ,_efdf :=_ba .GetStandardTable (5);if _efdf !=nil {return 0,_efdf ;};return _fdefd .Decode (_gefd ._dccdg );case 3:if _gefd ._egb ==nil {_caa ,_fabb :=_ba .GetStandardTable (0);
if _fabb !=nil {return 0,_fabb ;};_gefd ._egb =_caa ;};return _gefd ._egb .Decode (_gefd ._dccdg );};return 0,nil ;};func (_aggf *TextRegion )setContexts (_bcbb *_db .DecoderStats ,_eccg *_db .DecoderStats ,_ffaa *_db .DecoderStats ,_eabc *_db .DecoderStats ,_cebfa *_db .DecoderStats ,_fbgg *_db .DecoderStats ,_afbe *_db .DecoderStats ,_aadce *_db .DecoderStats ,_bfaad *_db .DecoderStats ,_fagg *_db .DecoderStats ){_aggf ._dbcf =_eccg ;
_aggf ._abdb =_ffaa ;_aggf ._gfefc =_eabc ;_aggf ._feeaf =_cebfa ;_aggf ._eegca =_afbe ;_aggf ._afec =_aadce ;_aggf ._dcdf =_fbgg ;_aggf ._eddd =_bfaad ;_aggf ._bgbd =_fagg ;_aggf ._eecg =_bcbb ;};func (_abg *HalftoneRegion )computeGrayScalePlanes (_aac []*_fe .Bitmap ,_cbef int )([][]int ,error ){_eggc :=make ([][]int ,_abg .HGridHeight );
for _bga :=0;_bga < len (_eggc );_bga ++{_eggc [_bga ]=make ([]int ,_abg .HGridWidth );};for _fggg :=0;_fggg < int (_abg .HGridHeight );_fggg ++{for _edf :=0;_edf < int (_abg .HGridWidth );_edf +=8{var _gbf int ;if _bdffa :=int (_abg .HGridWidth )-_edf ;
_bdffa > 8{_gbf =8;}else {_gbf =_bdffa ;};_agc :=_aac [0].GetByteIndex (_edf ,_fggg );for _eeg :=0;_eeg < _gbf ;_eeg ++{_aefa :=_eeg +_edf ;_eggc [_fggg ][_aefa ]=0;for _edcc :=0;_edcc < _cbef ;_edcc ++{_ggg ,_deeb :=_aac [_edcc ].GetByte (_agc );if _deeb !=nil {return nil ,_deeb ;
};_cbegf :=_ggg >>uint (7-_aefa &7);_cad :=_cbegf &1;_aedd :=1<<uint (_edcc );_dege :=int (_cad )*_aedd ;_eggc [_fggg ][_aefa ]+=_dege ;};};};};return _eggc ,nil ;};func (_de *EndOfStripe )LineNumber ()int {return _de ._dbf };func (_ddc *PageInformationSegment )Encode (w _gg .BinaryWriter )(_dbbb int ,_bbgf error ){const _cegeg ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_dbg :=make ([]byte ,4);_eg .BigEndian .PutUint32 (_dbg ,uint32 (_ddc .PageBMWidth ));_dbbb ,_bbgf =w .Write (_dbg );if _bbgf !=nil {return _dbbb ,_dd .Wrap (_bbgf ,_cegeg ,"\u0077\u0069\u0064t\u0068");};_eg .BigEndian .PutUint32 (_dbg ,uint32 (_ddc .PageBMHeight ));
var _dgba int ;_dgba ,_bbgf =w .Write (_dbg );if _bbgf !=nil {return _dgba +_dbbb ,_dd .Wrap (_bbgf ,_cegeg ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_dbbb +=_dgba ;_eg .BigEndian .PutUint32 (_dbg ,uint32 (_ddc .ResolutionX ));_dgba ,_bbgf =w .Write (_dbg );
if _bbgf !=nil {return _dgba +_dbbb ,_dd .Wrap (_bbgf ,_cegeg ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_dbbb +=_dgba ;_eg .BigEndian .PutUint32 (_dbg ,uint32 (_ddc .ResolutionY ));if _dgba ,_bbgf =w .Write (_dbg );_bbgf !=nil {return _dgba +_dbbb ,_dd .Wrap (_bbgf ,_cegeg ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_dbbb +=_dgba ;if _bbgf =_ddc .encodeFlags (w );_bbgf !=nil {return _dbbb ,_dd .Wrap (_bbgf ,_cegeg ,"");};_dbbb ++;if _dgba ,_bbgf =_ddc .encodeStripingInformation (w );_bbgf !=nil {return _dbbb ,_dd .Wrap (_bbgf ,_cegeg ,"");};_dbbb +=_dgba ;return _dbbb ,nil ;
};func (_ebac *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_gacf ,_fce :=_ebac ._cffe .ReadBit ();if _fce !=nil {return _fce ;};if _gacf ==1{_ebac ._dfde =true ;};return nil ;};func (_abd *template1 )setIndex (_efee *_db .DecoderStats ){_efee .SetIndex (0x080)};
func (_adc *PageInformationSegment )Size ()int {return 19};func (_gbbe *PageInformationSegment )readDefaultPixelValue ()error {_fff ,_eagg :=_gbbe ._cffe .ReadBit ();if _eagg !=nil {return _eagg ;};_gbbe .DefaultPixelValue =uint8 (_fff &0xf);return nil ;
};type TextRegion struct{_bfaa _gg .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _fe .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;
IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_fcgc int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;
RegionBitmap *_fe .Bitmap ;Symbols []*_fe .Bitmap ;_cfca *_db .Decoder ;_dbce *GenericRefinementRegion ;_dbcf *_db .DecoderStats ;_abdb *_db .DecoderStats ;_gfefc *_db .DecoderStats ;_feeaf *_db .DecoderStats ;_eeff *_db .DecoderStats ;_eegca *_db .DecoderStats ;
_afec *_db .DecoderStats ;_dcdf *_db .DecoderStats ;_eddd *_db .DecoderStats ;_bgbd *_db .DecoderStats ;_eecg *_db .DecoderStats ;_ecaba int8 ;_gadad *_ba .FixedSizeTable ;Header *Header ;_acbe _ba .Tabler ;_gdad _ba .Tabler ;_afcd _ba .Tabler ;_agfdf _ba .Tabler ;
_bdad _ba .Tabler ;_gagg _ba .Tabler ;_aedb _ba .Tabler ;_aefe _ba .Tabler ;_cbcd ,_cedf map[int ]int ;_eabgg []int ;_cacdb *_fe .Points ;_bbce *_fe .Bitmaps ;_edfc *_ea .IntSlice ;_bgega ,_ebaa int ;_egdc *_fe .Boxes ;};func (_feeff *HalftoneRegion )Init (hd *Header ,r _gg .StreamReader )error {_feeff ._aefg =r ;
_feeff ._dadf =hd ;_feeff .RegionSegment =NewRegionSegment (r );return _feeff .parseHeader ();};func (_fbc *GenericRegion )setParameters (_dagfe bool ,_edga ,_bff int64 ,_dcga ,_fgce uint32 ){_fbc .IsMMREncoded =_dagfe ;_fbc .DataOffset =_edga ;_fbc .DataLength =_bff ;
_fbc .RegionSegment .BitmapHeight =_dcga ;_fbc .RegionSegment .BitmapWidth =_fgce ;_fbc ._ccb =nil ;_fbc .Bitmap =nil ;};func (_dega *SymbolDictionary )readNumberOfNewSymbols ()error {_ecfb ,_egef :=_dega ._dccdg .ReadBits (32);if _egef !=nil {return _egef ;
};_dega .NumberOfNewSymbols =uint32 (_ecfb &_e .MaxUint32 );return nil ;};func (_gbfd *Header )readDataStartOffset (_fgdf _gg .StreamReader ,_accf OrganizationType ){if _accf ==OSequential {_gbfd .SegmentDataStartOffset =uint64 (_fgdf .StreamPosition ());
};};func (_bdde *Header )readSegmentDataLength (_cgea _gg .StreamReader )(_eggg error ){_bdde .SegmentDataLength ,_eggg =_cgea .ReadBits (32);if _eggg !=nil {return _eggg ;};_bdde .SegmentDataLength &=_e .MaxInt32 ;return nil ;};func (_ccc *GenericRefinementRegion )parseHeader ()(_fag error ){_df .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_faf :=_bc .Now ();defer func (){if _fag ==nil {_df .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_bc .Since (_faf ).Nanoseconds ());
}else {_df .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_fag );
};}();if _fag =_ccc .RegionInfo .parseHeader ();_fag !=nil {return _fag ;};_ ,_fag =_ccc ._gfa .ReadBits (6);if _fag !=nil {return _fag ;};_ccc .IsTPGROn ,_fag =_ccc ._gfa .ReadBool ();if _fag !=nil {return _fag ;};var _dad int ;_dad ,_fag =_ccc ._gfa .ReadBit ();
if _fag !=nil {return _fag ;};_ccc .TemplateID =int8 (_dad );switch _ccc .TemplateID {case 0:_ccc .Template =_ccc ._a ;if _fag =_ccc .readAtPixels ();_fag !=nil {return ;};case 1:_ccc .Template =_ccc ._gbe ;};return nil ;};func (_cag *GenericRefinementRegion )readAtPixels ()error {_cag .GrAtX =make ([]int8 ,2);
_cag .GrAtY =make ([]int8 ,2);_dde ,_bfbf :=_cag ._gfa .ReadByte ();if _bfbf !=nil {return _bfbf ;};_cag .GrAtX [0]=int8 (_dde );_dde ,_bfbf =_cag ._gfa .ReadByte ();if _bfbf !=nil {return _bfbf ;};_cag .GrAtY [0]=int8 (_dde );_dde ,_bfbf =_cag ._gfa .ReadByte ();
if _bfbf !=nil {return _bfbf ;};_cag .GrAtX [1]=int8 (_dde );_dde ,_bfbf =_cag ._gfa .ReadByte ();if _bfbf !=nil {return _bfbf ;};_cag .GrAtY [1]=int8 (_dde );return nil ;};func (_dbef *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _dbef .IsHuffmanEncoded {switch _dbef .SdHuffDecodeWidthSelection {case 0:_bfbfg ,_ebdaf :=_ba .GetStandardTable (2);
if _ebdaf !=nil {return 0,_ebdaf ;};return _bfbfg .Decode (_dbef ._dccdg );case 1:_ggfeb ,_gada :=_ba .GetStandardTable (3);if _gada !=nil {return 0,_gada ;};return _ggfeb .Decode (_dbef ._dccdg );case 3:if _dbef ._geae ==nil {var _eccd int ;if _dbef .SdHuffDecodeHeightSelection ==3{_eccd ++;
};_dcdb ,_gbaf :=_dbef .getUserTable (_eccd );if _gbaf !=nil {return 0,_gbaf ;};_dbef ._geae =_dcdb ;};return _dbef ._geae .Decode (_dbef ._dccdg );};}else {_aegdg ,_bbff :=_dbef ._gadg .DecodeInt (_dbef ._gfgce );if _bbff !=nil {return 0,_bbff ;};return int64 (_aegdg ),nil ;
};return 0,nil ;};func (_cec *GenericRegion )GetRegionBitmap ()(_cga *_fe .Bitmap ,_cdb error ){if _cec .Bitmap !=nil {return _cec .Bitmap ,nil ;};if _cec .IsMMREncoded {if _cec ._ccb ==nil {_cec ._ccb ,_cdb =_bb .New (_cec ._adad ,int (_cec .RegionSegment .BitmapWidth ),int (_cec .RegionSegment .BitmapHeight ),_cec .DataOffset ,_cec .DataLength );
if _cdb !=nil {return nil ,_cdb ;};};_cec .Bitmap ,_cdb =_cec ._ccb .UncompressMMR ();return _cec .Bitmap ,_cdb ;};if _cdb =_cec .updateOverrideFlags ();_cdb !=nil {return nil ,_cdb ;};var _babe int ;if _cec ._bbf ==nil {_cec ._bbf ,_cdb =_db .New (_cec ._adad );
if _cdb !=nil {return nil ,_cdb ;};};if _cec ._dee ==nil {_cec ._dee =_db .NewStats (65536,1);};_cec .Bitmap =_fe .New (int (_cec .RegionSegment .BitmapWidth ),int (_cec .RegionSegment .BitmapHeight ));_eff :=int (uint32 (_cec .Bitmap .Width +7)&(^uint32 (7)));
for _cda :=0;_cda < _cec .Bitmap .Height ;_cda ++{if _cec .IsTPGDon {var _bfdg int ;_bfdg ,_cdb =_cec .decodeSLTP ();if _cdb !=nil {return nil ,_cdb ;};_babe ^=_bfdg ;};if _babe ==1{if _cda > 0{if _cdb =_cec .copyLineAbove (_cda );_cdb !=nil {return nil ,_cdb ;
};};}else {if _cdb =_cec .decodeLine (_cda ,_cec .Bitmap .Width ,_eff );_cdb !=nil {return nil ,_cdb ;};};};return _cec .Bitmap ,nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_add *Header )CleanSegmentData (){if _add .SegmentData !=nil {_add .SegmentData =nil ;
};};