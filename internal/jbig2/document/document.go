//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_a "encoding/binary";_b "fmt";_bc "github.com/unidoc/unipdf/v3/common";_gf "github.com/unidoc/unipdf/v3/internal/bitwise";_cg "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_f "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_fe "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_ag "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_fb "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_g "io";_ce "math";_d "runtime/debug";);func (_gcf *Document )encodeEOFHeader (_dfg _gf .BinaryWriter )(_bg int ,_eea error ){_dfd :=&_fe .Header {SegmentNumber :_gcf .nextSegmentNumber (),Type :_fe .TEndOfFile };
if _bg ,_eea =_dfd .Encode (_dfg );_eea !=nil {return 0,_fb .Wrap (_eea ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _bg ,nil ;};func (_ggdf *Document )completeClassifiedPages ()(_dfe error ){const _ae ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";
if _ggdf .Classer ==nil {return nil ;};_ggdf ._ga =make ([]int ,_ggdf .Classer .UndilatedTemplates .Size ());for _cgd :=0;_cgd < _ggdf .Classer .ClassIDs .Size ();_cgd ++{_fbf ,_fff :=_ggdf .Classer .ClassIDs .Get (_cgd );if _fff !=nil {return _fb .Wrapf (_fff ,_ae ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_cgd );
};_ggdf ._ga [_fbf ]++;};var _gd []int ;for _dgg :=0;_dgg < _ggdf .Classer .UndilatedTemplates .Size ();_dgg ++{if _ggdf .NumberOfPages ==1||_ggdf ._ga [_dgg ]> 1{_gd =append (_gd ,_dgg );};};var (_cfd *Page ;_afc bool ;);for _aa ,_ddf :=range *_ggdf .Classer .ComponentPageNumbers {if _cfd ,_afc =_ggdf .Pages [_ddf ];
!_afc {return _fb .Errorf (_ae ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_aa );};if _cfd .EncodingMethod ==GenericEM {_bc .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_aa );
continue ;};_ggdf ._dg [_ddf ]=append (_ggdf ._dg [_ddf ],_aa );_bb ,_bd :=_ggdf .Classer .ClassIDs .Get (_aa );if _bd !=nil {return _fb .Wrapf (_bd ,_ae ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_aa );
};if _ggdf ._ga [_bb ]==1&&_ggdf .NumberOfPages !=1{_gbb :=append (_ggdf ._ff [_ddf ],_bb );_ggdf ._ff [_ddf ]=_gbb ;};};if _dfe =_ggdf .Classer .ComputeLLCorners ();_dfe !=nil {return _fb .Wrap (_dfe ,_ae ,"");};if _ ,_dfe =_ggdf .addSymbolDictionary (0,_ggdf .Classer .UndilatedTemplates ,_gd ,_ggdf ._ca ,false );
_dfe !=nil {return _fb .Wrap (_dfe ,_ae ,"");};return nil ;};func (_fdf *Globals )GetSegment (segmentNumber int )(*_fe .Header ,error ){const _adc ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";if _fdf ==nil {return nil ,_fb .Error (_adc ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_fdf .Segments )==0{return nil ,_fb .Error (_adc ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};var _cga *_fe .Header ;for _ ,_cga =range _fdf .Segments {if _cga .SegmentNumber ==uint32 (segmentNumber ){break ;
};};if _cga ==nil {return nil ,_fb .Error (_adc ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _cga ,nil ;};func (_eb *Document )encodeSegment (_fg *_fe .Header ,_cgg *int )error {const _faa ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
_fg .SegmentNumber =_eb .nextSegmentNumber ();_fag ,_fac :=_fg .Encode (_eb ._e );if _fac !=nil {return _fb .Wrapf (_fac ,_faa ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_fg .SegmentNumber );};*_cgg +=_fag ;return nil ;
};func (_ba *Document )determineRandomDataOffsets (_fc []*_fe .Header ,_abgb uint64 ){if _ba .OrganizationType !=_fe .ORandom {return ;};for _ ,_cagg :=range _fc {_cagg .SegmentDataStartOffset =_abgb ;_abgb +=_cagg .SegmentDataLength ;};};func (_gfa *Document )completeSymbols ()(_bfg error ){const _cec ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
if _gfa .Classer ==nil {return nil ;};if _gfa .Classer .UndilatedTemplates ==nil {return _fb .Error (_cec ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_beg :=len (_gfa .Pages )==1;_bfb :=make ([]int ,_gfa .Classer .UndilatedTemplates .Size ());var _gae int ;for _gfb :=0;_gfb < _gfa .Classer .ClassIDs .Size ();_gfb ++{_gae ,_bfg =_gfa .Classer .ClassIDs .Get (_gfb );if _bfg !=nil {return _fb .Wrap (_bfg ,_cec ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_bfb [_gae ]++;};var _ggb []int ;for _abg :=0;_abg < _gfa .Classer .UndilatedTemplates .Size ();_abg ++{if _bfb [_abg ]==0{return _fb .Error (_cec ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _bfb [_abg ]> 1||_beg {_ggb =append (_ggb ,_abg );};};_gfa ._gg =len (_ggb );var _abb ,_ac int ;for _fedf :=0;_fedf < _gfa .Classer .ComponentPageNumbers .Size ();_fedf ++{_abb ,_bfg =_gfa .Classer .ComponentPageNumbers .Get (_fedf );if _bfg !=nil {return _fb .Wrapf (_bfg ,_cec ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_fedf );
};_ac ,_bfg =_gfa .Classer .ClassIDs .Get (_fedf );if _bfg !=nil {return _fb .Wrapf (_bfg ,_cec ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_abb );
};if _bfb [_ac ]==1&&!_beg {_gfa ._ff [_abb ]=append (_gfa ._ff [_abb ],_ac );};};if _bfg =_gfa .Classer .ComputeLLCorners ();_bfg !=nil {return _fb .Wrap (_bfg ,_cec ,"");};return nil ;};func (_ceeg *Page )nextSegmentNumber ()uint32 {return _ceeg .Document .nextSegmentNumber ()};
func (_dcce *Document )GetNumberOfPages ()(uint32 ,error ){if _dcce .NumberOfPagesUnknown ||_dcce .NumberOfPages ==0{if len (_dcce .Pages )==0{if _cdd :=_dcce .mapData ();_cdd !=nil {return 0,_fb .Wrap (_cdd ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");
};};return uint32 (len (_dcce .Pages )),nil ;};return _dcce .NumberOfPages ,nil ;};func (_cb *Document )GetPage (pageNumber int )(_fe .Pager ,error ){const _cag ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_bc .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_d .Stack ());
return nil ,_fb .Errorf (_cag ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_cb .Pages ){_bc .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_d .Stack ());return nil ,_fb .Error (_cag ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_aae ,_fbe :=_cb .Pages [pageNumber ];if !_fbe {_bc .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_d .Stack ());return nil ,_fb .Errorf (_cag ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _aae ,nil ;};func (_febe *Page )GetHeight ()(int ,error ){return _febe .getHeight ()};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_e :_gf .BufferedMSB (),Pages :map[int ]*Page {},_ff :map[int ][]int {},_ca :map[int ]int {},_dg :map[int ][]int {}};
};func (_ffe *Globals )GetSymbolDictionary ()(*_fe .Header ,error ){const _gag ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";if _ffe ==nil {return nil ,_fb .Error (_gag ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_ffe .Segments )==0{return nil ,_fb .Error (_gag ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};for _ ,_adf :=range _ffe .Segments {if _adf .Type ==_fe .TSymbolDictionary {return _adf ,nil ;
};};return nil ,_fb .Error (_gag ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};func (_ddg *Page )GetSegment (number int )(*_fe .Header ,error ){const _cbb ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
for _ ,_cge :=range _ddg .Segments {if _cge .SegmentNumber ==uint32 (number ){return _cge ,nil ;};};_gfag :=make ([]uint32 ,len (_ddg .Segments ));for _dce ,_gbd :=range _ddg .Segments {_gfag [_dce ]=_gbd .SegmentNumber ;};return nil ,_fb .Errorf (_cbb ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_ddg .PageNumber ,_gfag );
};func (_acf *Page )Encode (w _gf .BinaryWriter )(_eeg int ,_cdbb error ){const _cfe ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _dgc int ;for _ ,_faab :=range _acf .Segments {if _dgc ,_cdbb =_faab .Encode (w );_cdbb !=nil {return _eeg ,_fb .Wrap (_cdbb ,_cfe ,"");
};_eeg +=_dgc ;};return _eeg ,nil ;};func (_ecc *Page )getWidth ()(int ,error ){const _abdf ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _ecc .FinalWidth !=0{return _ecc .FinalWidth ,nil ;};_aaaf :=_ecc .getPageInformationSegment ();if _aaaf ==nil {return 0,_fb .Error (_abdf ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_ccbg ,_cab :=_aaaf .GetSegmentData ();if _cab !=nil {return 0,_fb .Wrap (_cab ,_abdf ,"");};_cdf ,_dgb :=_ccbg .(*_fe .PageInformationSegment );if !_dgb {return 0,_fb .Errorf (_abdf ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_ccbg );
};_ecc .FinalWidth =_cdf .PageBMWidth ;return _ecc .FinalWidth ,nil ;};func (_ccda *Page )GetResolutionY ()(int ,error ){return _ccda .getResolutionY ()};func (_eeac *Document )encodeFileHeader (_ggg _gf .BinaryWriter )(_bga int ,_bae error ){const _abd ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_bga ,_bae =_ggg .Write (_cf );if _bae !=nil {return _bga ,_fb .Wrap (_bae ,_abd ,"\u0069\u0064");};if _bae =_ggg .WriteByte (0x01);_bae !=nil {return _bga ,_fb .Wrap (_bae ,_abd ,"\u0066\u006c\u0061g\u0073");};_bga ++;_dcf :=make ([]byte ,4);_a .BigEndian .PutUint32 (_dcf ,_eeac .NumberOfPages );
_dgge ,_bae :=_ggg .Write (_dcf );if _bae !=nil {return _dgge ,_fb .Wrap (_bae ,_abd ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_bga +=_dgge ;return _bga ,nil ;};type Globals struct{Segments []*_fe .Header ;};func (_cac *Document )produceClassifiedPage (_dff *Page ,_gef *_fe .Header )(_ddc error ){const _ea ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";
var _ed map[int ]int ;_gc :=_cac ._gg ;_cdg :=[]*_fe .Header {_gef };if len (_cac ._ff [_dff .PageNumber ])> 0{_ed =map[int ]int {};_ee ,_ega :=_cac .addSymbolDictionary (_dff .PageNumber ,_cac .Classer .UndilatedTemplates ,_cac ._ff [_dff .PageNumber ],_ed ,false );
if _ega !=nil {return _fb .Wrap (_ega ,_ea ,"");};_cdg =append (_cdg ,_ee );_gc +=len (_cac ._ff [_dff .PageNumber ]);};_fd :=_cac ._dg [_dff .PageNumber ];_bc .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_dff .PageNumber ,_fd );
_dff .addTextRegionSegment (_cdg ,_cac ._ca ,_ed ,_cac ._dg [_dff .PageNumber ],_cac .Classer .PtaLL ,_cac .Classer .UndilatedTemplates ,_cac .Classer .ClassIDs ,nil ,_ad (_gc ),len (_cac ._dg [_dff .PageNumber ]));return nil ;};func (_de *Document )isFileHeaderPresent ()(bool ,error ){_de .InputStream .Mark ();
for _ ,_efg :=range _cf {_dda ,_afea :=_de .InputStream .ReadByte ();if _afea !=nil {return false ,_afea ;};if _efg !=_dda {_de .InputStream .Reset ();return false ,nil ;};};_de .InputStream .Reset ();return true ,nil ;};func DecodeDocument (input _gf .StreamReader ,globals *Globals )(*Document ,error ){return _gee (input ,globals );
};func (_fbc *Document )addSymbolDictionary (_fbfb int ,_ab *_f .Bitmaps ,_edg []int ,_efe map[int ]int ,_ccc bool )(*_fe .Header ,error ){const _egb ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_adb :=&_fe .SymbolDictionary {};if _ddb :=_adb .InitEncode (_ab ,_edg ,_efe ,_ccc );_ddb !=nil {return nil ,_ddb ;};_ggf :=&_fe .Header {Type :_fe .TSymbolDictionary ,PageAssociation :_fbfb ,SegmentData :_adb };if _fbfb ==0{if _fbc .GlobalSegments ==nil {_fbc .GlobalSegments =&Globals {};
};_fbc .GlobalSegments .AddSegment (_ggf );return _ggf ,nil ;};_fed ,_fbdcf :=_fbc .Pages [_fbfb ];if !_fbdcf {return nil ,_fb .Errorf (_egb ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_fbfb );};var (_fffb int ;
_afe *_fe .Header ;);for _fffb ,_afe =range _fed .Segments {if _afe .Type ==_fe .TPageInformation {break ;};};_fffb ++;_fed .Segments =append (_fed .Segments ,nil );copy (_fed .Segments [_fffb +1:],_fed .Segments [_fffb :]);_fed .Segments [_fffb ]=_ggf ;
return _ggf ,nil ;};var _cf =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_ece *Page )AddGenericRegion (bm *_f .Bitmap ,xloc ,yloc ,template int ,tp _fe .Type ,duplicateLineRemoval bool )error {const _cad ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";
_dfa :=&_fe .GenericRegion {};if _edga :=_dfa .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_edga !=nil {return _fb .Wrap (_edga ,_cad ,"");};_gggb :=&_fe .Header {Type :_fe .TImmediateGenericRegion ,PageAssociation :_ece .PageNumber ,SegmentData :_dfa };
_ece .Segments =append (_ece .Segments ,_gggb );return nil ;};func (_gge *Page )collectPageStripes ()(_fcfg []_fe .Segmenter ,_ggee error ){const _aba ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";var _bgb _fe .Segmenter ;
for _ ,_bdfe :=range _gge .Segments {switch _bdfe .Type {case 6,7,22,23,38,39,42,43:_bgb ,_ggee =_bdfe .GetSegmentData ();if _ggee !=nil {return nil ,_fb .Wrap (_ggee ,_aba ,"");};_fcfg =append (_fcfg ,_bgb );case 50:_bgb ,_ggee =_bdfe .GetSegmentData ();
if _ggee !=nil {return nil ,_ggee ;};_fca ,_ggfg :=_bgb .(*_fe .EndOfStripe );if !_ggfg {return nil ,_fb .Errorf (_aba ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_bgb );
};_fcfg =append (_fcfg ,_fca );_gge .FinalHeight =_fca .LineNumber ();};};return _fcfg ,nil ;};func (_bgc *Page )getResolutionX ()(int ,error ){const _dfgd ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _bgc .ResolutionX !=0{return _bgc .ResolutionX ,nil ;
};_bebaa :=_bgc .getPageInformationSegment ();if _bebaa ==nil {return 0,_fb .Error (_dfgd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_eaed ,_gcga :=_bebaa .GetSegmentData ();if _gcga !=nil {return 0,_fb .Wrap (_gcga ,_dfgd ,"");
};_cabc ,_ecfa :=_eaed .(*_fe .PageInformationSegment );if !_ecfa {return 0,_fb .Errorf (_dfgd ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_eaed );
};_bgc .ResolutionX =_cabc .ResolutionX ;return _bgc .ResolutionX ,nil ;};func (_agaf *Document )parseFileHeader ()error {const _fcd ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_bgf :=_agaf .InputStream .Seek (8,_g .SeekStart );
if _bgf !=nil {return _fb .Wrap (_bgf ,_fcd ,"\u0069\u0064");};_ ,_bgf =_agaf .InputStream .ReadBits (5);if _bgf !=nil {return _fb .Wrap (_bgf ,_fcd ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_cgge ,_bgf :=_agaf .InputStream .ReadBit ();
if _bgf !=nil {return _fb .Wrap (_bgf ,_fcd ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _cgge ==1{_agaf .GBUseExtTemplate =true ;};_cgge ,_bgf =_agaf .InputStream .ReadBit ();if _bgf !=nil {return _fb .Wrap (_bgf ,_fcd ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");
};if _cgge !=1{_agaf .NumberOfPagesUnknown =false ;};_cgge ,_bgf =_agaf .InputStream .ReadBit ();if _bgf !=nil {return _fb .Wrap (_bgf ,_fcd ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_agaf .OrganizationType =_fe .OrganizationType (_cgge );
if !_agaf .NumberOfPagesUnknown {_agaf .NumberOfPages ,_bgf =_agaf .InputStream .ReadUint32 ();if _bgf !=nil {return _fb .Wrap (_bgf ,_fcd ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_agaf ._af =13;};return nil ;
};type Page struct{Segments []*_fe .Header ;PageNumber int ;Bitmap *_f .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;
};func _adcg (_beag *Document ,_eae int )*Page {return &Page {Document :_beag ,PageNumber :_eae ,Segments :[]*_fe .Header {}};};func (_fcfb *Page )getHeight ()(int ,error ){const _fdeg ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _fcfb .FinalHeight !=0{return _fcfb .FinalHeight ,nil ;
};_afb :=_fcfb .getPageInformationSegment ();if _afb ==nil {return 0,_fb .Error (_fdeg ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_cdae ,_cfef :=_afb .GetSegmentData ();if _cfef !=nil {return 0,_fb .Wrap (_cfef ,_fdeg ,"");
};_fdc ,_dbc :=_cdae .(*_fe .PageInformationSegment );if !_dbc {return 0,_fb .Errorf (_fdeg ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_cdae );
};if _fdc .PageBMHeight ==_ce .MaxInt32 {_ ,_cfef =_fcfb .GetBitmap ();if _cfef !=nil {return 0,_fb .Wrap (_cfef ,_fdeg ,"");};}else {_fcfb .FinalHeight =_fdc .PageBMHeight ;};return _fcfb .FinalHeight ,nil ;};func (_bgd *Document )nextPageNumber ()uint32 {_bgd .NumberOfPages ++;
return _bgd .NumberOfPages };func (_bfbc *Page )String ()string {return _b .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_bfbc .PageNumber );};func (_cce *Page )getCombinationOperator (_agcd *_fe .PageInformationSegment ,_bbfc _f .CombinationOperator )_f .CombinationOperator {if _agcd .CombinationOperatorOverrideAllowed (){return _bbfc ;
};return _agcd .CombinationOperator ();};func (_bbf *Document )nextSegmentNumber ()uint32 {_gcg :=_bbf .CurrentSegmentNumber ;_bbf .CurrentSegmentNumber ++;return _gcg ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;
GBUseExtTemplate bool ;InputStream _gf .StreamReader ;GlobalSegments *Globals ;OrganizationType _fe .OrganizationType ;Classer *_ag .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_f .Bitmaps ;BaseIndexes []int ;
Refinement bool ;RefineLevel int ;_af uint8 ;_e *_gf .BufferedWriter ;EncodeGlobals bool ;_gg int ;_ff map[int ][]int ;_dg map[int ][]int ;_ga []int ;_ca map[int ]int ;};func (_aaf *Page )GetResolutionX ()(int ,error ){return _aaf .getResolutionX ()};func (_agg *Page )AddEndOfPageSegment (){_fdg :=&_fe .Header {Type :_fe .TEndOfPage ,PageAssociation :_agg .PageNumber };
_agg .Segments =append (_agg .Segments ,_fdg );};func (_aag *Page )clearSegmentData (){for _bdb :=range _aag .Segments {_aag .Segments [_bdb ].CleanSegmentData ();};};func (_bff *Document )produceClassifiedPages ()(_cd error ){const _dgd ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";
if _bff .Classer ==nil {return nil ;};var (_cfg *Page ;_fbd bool ;_fa *_fe .Header ;);for _cc :=1;_cc <=int (_bff .NumberOfPages );_cc ++{if _cfg ,_fbd =_bff .Pages [_cc ];!_fbd {return _fb .Errorf (_dgd ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cc );
};if _cfg .EncodingMethod ==GenericEM {continue ;};if _fa ==nil {if _fa ,_cd =_bff .GlobalSegments .GetSymbolDictionary ();_cd !=nil {return _fb .Wrap (_cd ,_dgd ,"");};};if _cd =_bff .produceClassifiedPage (_cfg ,_fa );_cd !=nil {return _fb .Wrapf (_cd ,_dgd ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_cc );
};};return nil ;};func (_gcc *Page )lastSegmentNumber ()(_dfab uint32 ,_gdb error ){const _acc ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_gcc .Segments )==0{return _dfab ,_fb .Errorf (_acc ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_gcc .PageNumber );
};return _gcc .Segments [len (_gcc .Segments )-1].SegmentNumber ,nil ;};func (_ebfb *Page )countRegions ()int {var _fdgf int ;for _ ,_dde :=range _ebfb .Segments {switch _dde .Type {case 6,7,22,23,38,39,42,43:_fdgf ++;};};return _fdgf ;};func (_ged *Page )GetBitmap ()(_acfd *_f .Bitmap ,_ddfg error ){_bc .Log .Trace (_b .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_ged .PageNumber ));
defer func (){if _ddfg !=nil {_bc .Log .Trace (_b .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ged .PageNumber ,_ddfg ));
}else {_bc .Log .Trace (_b .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_ged .PageNumber ));};}();if _ged .Bitmap !=nil {return _ged .Bitmap ,nil ;
};_ddfg =_ged .composePageBitmap ();if _ddfg !=nil {return nil ,_ddfg ;};return _ged .Bitmap ,nil ;};func _ad (_dc int )int {_be :=0;_fbdc :=(_dc &(_dc -1))==0;_dc >>=1;for ;_dc !=0;_dc >>=1{_be ++;};if _fbdc {return _be ;};return _be +1;};func (_ebg *Document )mapData ()error {const _feb ="\u006da\u0070\u0044\u0061\u0074\u0061";
var (_ebf []*_fe .Header ;_ec int64 ;_fba _fe .Type ;);_bbg ,_bac :=_ebg .isFileHeaderPresent ();if _bac !=nil {return _fb .Wrap (_bac ,_feb ,"");};if _bbg {if _bac =_ebg .parseFileHeader ();_bac !=nil {return _fb .Wrap (_bac ,_feb ,"");};_ec +=int64 (_ebg ._af );
_ebg .FullHeaders =true ;};var (_fbg *Page ;_ccb bool ;);for _fba !=51&&!_ccb {_aga ,_da :=_fe .NewHeader (_ebg ,_ebg .InputStream ,_ec ,_ebg .OrganizationType );if _da !=nil {return _fb .Wrap (_da ,_feb ,"");};_bc .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_aga .SegmentNumber ,_aga .Type );
_fba =_aga .Type ;if _fba !=_fe .TEndOfFile {if _aga .PageAssociation !=0{_fbg =_ebg .Pages [_aga .PageAssociation ];if _fbg ==nil {_fbg =_adcg (_ebg ,_aga .PageAssociation );_ebg .Pages [_aga .PageAssociation ]=_fbg ;if _ebg .NumberOfPagesUnknown {_ebg .NumberOfPages ++;
};};_fbg .Segments =append (_fbg .Segments ,_aga );}else {_ebg .GlobalSegments .AddSegment (_aga );};};_ebf =append (_ebf ,_aga );_ec =_ebg .InputStream .StreamPosition ();if _ebg .OrganizationType ==_fe .OSequential {_ec +=int64 (_aga .SegmentDataLength );
};_ccb ,_da =_ebg .reachedEOF (_ec );if _da !=nil {_bc .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_da );
return _fb .Wrap (_da ,_feb ,"");};};_ebg .determineRandomDataOffsets (_ebf ,uint64 (_ec ));return nil ;};func (_cggee *Page )getResolutionY ()(int ,error ){const _ggc ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _cggee .ResolutionY !=0{return _cggee .ResolutionY ,nil ;
};_ggga :=_cggee .getPageInformationSegment ();if _ggga ==nil {return 0,_fb .Error (_ggc ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_beagc ,_feg :=_ggga .GetSegmentData ();if _feg !=nil {return 0,_fb .Wrap (_feg ,_ggc ,"");
};_egc ,_gff :=_beagc .(*_fe .PageInformationSegment );if !_gff {return 0,_fb .Errorf (_ggc ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_beagc );
};_cggee .ResolutionY =_egc .ResolutionY ;return _cggee .ResolutionY ,nil ;};func (_gea *Page )GetWidth ()(int ,error ){return _gea .getWidth ()};type EncodingMethod int ;const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func _gee (_ebb _gf .StreamReader ,_bea *Globals )(*Document ,error ){_eff :=&Document {Pages :make (map[int ]*Page ),InputStream :_ebb ,OrganizationType :_fe .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_bea ,_af :9};
if _eff .GlobalSegments ==nil {_eff .GlobalSegments =&Globals {};};if _faad :=_eff .mapData ();_faad !=nil {return nil ,_faad ;};return _eff ,nil ;};func (_gaf *Document )reachedEOF (_aeg int64 )(bool ,error ){const _edac ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";
_ ,_efc :=_gaf .InputStream .Seek (_aeg ,_g .SeekStart );if _efc !=nil {_bc .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_efc );
return false ,_fb .Wrap (_efc ,_edac ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_efc =_gaf .InputStream .ReadBits (32);if _efc ==_g .EOF {return true ,nil ;
}else if _efc !=nil {return false ,_fb .Wrap (_efc ,_edac ,"");};return false ,nil ;};func (_ge *Document )AddGenericPage (bm *_f .Bitmap ,duplicateLineRemoval bool )(_ggd error ){const _dd ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_ge .FullHeaders &&_ge .NumberOfPages !=0{return _fb .Error (_dd ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_df :=&Page {Segments :[]*_fe .Header {},Bitmap :bm ,Document :_ge ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_f .Chocolate };_df .PageNumber =int (_ge .nextPageNumber ());_ge .Pages [_df .PageNumber ]=_df ;
bm .InverseData ();_df .AddPageInformationSegment ();if _ggd =_df .AddGenericRegion (bm ,0,0,0,_fe .TImmediateGenericRegion ,duplicateLineRemoval );_ggd !=nil {return _fb .Wrap (_ggd ,_dd ,"");};if _ge .FullHeaders {_df .AddEndOfPageSegment ();};return nil ;
};func (_acd *Page )AddPageInformationSegment (){_ecf :=&_fe .PageInformationSegment {PageBMWidth :_acd .FinalWidth ,PageBMHeight :_acd .FinalHeight ,ResolutionX :_acd .ResolutionX ,ResolutionY :_acd .ResolutionY ,IsLossless :_acd .IsLossless };if _acd .BlackIsOne {_ecf .DefaultPixelValue =uint8 (0x1);
};_db :=&_fe .Header {PageAssociation :_acd .PageNumber ,SegmentDataLength :uint64 (_ecf .Size ()),SegmentData :_ecf ,Type :_fe .TPageInformation };_acd .Segments =append (_acd .Segments ,_db );};func (_fecg *Document )Encode ()(_dcd []byte ,_dcc error ){const _cda ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _bcg ,_ccg int ;if _fecg .FullHeaders {if _bcg ,_dcc =_fecg .encodeFileHeader (_fecg ._e );_dcc !=nil {return nil ,_fb .Wrap (_dcc ,_cda ,"");};};var (_fbb bool ;_beb *_fe .Header ;_ddba *Page ;);if _dcc =_fecg .completeClassifiedPages ();_dcc !=nil {return nil ,_fb .Wrap (_dcc ,_cda ,"");
};if _dcc =_fecg .produceClassifiedPages ();_dcc !=nil {return nil ,_fb .Wrap (_dcc ,_cda ,"");};if _fecg .GlobalSegments !=nil {for _ ,_beb =range _fecg .GlobalSegments .Segments {if _dcc =_fecg .encodeSegment (_beb ,&_bcg );_dcc !=nil {return nil ,_fb .Wrap (_dcc ,_cda ,"");
};};};for _ddd :=1;_ddd <=int (_fecg .NumberOfPages );_ddd ++{if _ddba ,_fbb =_fecg .Pages [_ddd ];!_fbb {return nil ,_fb .Errorf (_cda ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ddd );};for _ ,_beb =range _ddba .Segments {if _dcc =_fecg .encodeSegment (_beb ,&_bcg );
_dcc !=nil {return nil ,_fb .Wrap (_dcc ,_cda ,"");};};};if _fecg .FullHeaders {if _ccg ,_dcc =_fecg .encodeEOFHeader (_fecg ._e );_dcc !=nil {return nil ,_fb .Wrap (_dcc ,_cda ,"");};_bcg +=_ccg ;};_dcd =_fecg ._e .Data ();if len (_dcd )!=_bcg {_bc .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_bcg ,len (_dcd ));
};return _dcd ,nil ;};func (_fec *Document )AddClassifiedPage (bm *_f .Bitmap ,method _ag .Method )(_gb error ){const _bf ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_fec .FullHeaders &&_fec .NumberOfPages !=0{return _fb .Error (_bf ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _fec .Classer ==nil {if _fec .Classer ,_gb =_ag .Init (_ag .DefaultSettings ());_gb !=nil {return _fb .Wrap (_gb ,_bf ,"");};};_fee :=int (_fec .nextPageNumber ());_eg :=&Page {Segments :[]*_fe .Header {},Bitmap :bm ,Document :_fec ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_fee };
_fec .Pages [_fee ]=_eg ;switch method {case _ag .RankHaus :_eg .EncodingMethod =RankHausEM ;case _ag .Correlation :_eg .EncodingMethod =CorrelationEM ;};_eg .AddPageInformationSegment ();if _gb =_fec .Classer .AddPage (bm ,_fee ,method );_gb !=nil {return _fb .Wrap (_gb ,_bf ,"");
};if _fec .FullHeaders {_eg .AddEndOfPageSegment ();};return nil ;};func (_gde *Page )createNormalPage (_fce *_fe .PageInformationSegment )error {const _fae ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";_gde .Bitmap =_f .New (_fce .PageBMWidth ,_fce .PageBMHeight );
if _fce .DefaultPixelValue !=0{_gde .Bitmap .SetDefaultPixel ();};for _ ,_abf :=range _gde .Segments {switch _abf .Type {case 6,7,22,23,38,39,42,43:_bc .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_abf .SegmentNumber );
_dab ,_gfbb :=_abf .GetSegmentData ();if _gfbb !=nil {return _gfbb ;};_bfd ,_aef :=_dab .(_fe .Regioner );if !_aef {_bc .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_dab );
return _fb .Errorf (_fae ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_dab );
};_ggdc ,_gfbb :=_bfd .GetRegionBitmap ();if _gfbb !=nil {return _fb .Wrap (_gfbb ,_fae ,"");};if _gde .fitsPage (_fce ,_ggdc ){_gde .Bitmap =_ggdc ;}else {_dfec :=_bfd .GetRegionInfo ();_beba :=_gde .getCombinationOperator (_fce ,_dfec .CombinaionOperator );
_gfbb =_f .Blit (_ggdc ,_gde .Bitmap ,int (_dfec .XLocation ),int (_dfec .YLocation ),_beba );if _gfbb !=nil {return _fb .Wrap (_gfbb ,_fae ,"");};};};};return nil ;};func (_dccc *Page )getPageInformationSegment ()*_fe .Header {for _ ,_bbe :=range _dccc .Segments {if _bbe .Type ==_fe .TPageInformation {return _bbe ;
};};_bc .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_dccc );
return nil ;};func (_cdc *Page )composePageBitmap ()error {const _afdg ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _cdc .PageNumber ==0{return nil ;};_dbdg :=_cdc .getPageInformationSegment ();
if _dbdg ==nil {return _fb .Error (_afdg ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_agc ,_aaa :=_dbdg .GetSegmentData ();
if _aaa !=nil {return _aaa ;};_abe ,_egbb :=_agc .(*_fe .PageInformationSegment );if !_egbb {return _fb .Error (_afdg ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _aaa =_cdc .createPage (_abe );_aaa !=nil {return _fb .Wrap (_aaa ,_afdg ,"");};_cdc .clearSegmentData ();return nil ;};func (_acdd *Page )createPage (_cbc *_fe .PageInformationSegment )error {var _egg error ;if !_cbc .IsStripe ||_cbc .PageBMHeight !=-1{_egg =_acdd .createNormalPage (_cbc );
}else {_egg =_acdd .createStripedPage (_cbc );};return _egg ;};func (_bdd *Page )addTextRegionSegment (_dbd []*_fe .Header ,_ffb ,_ccd map[int ]int ,_eec []int ,_ffd *_f .Points ,_acdb *_f .Bitmaps ,_cdb *_cg .IntSlice ,_dca *_f .Boxes ,_dfc ,_bfe int ){_gfbd :=&_fe .TextRegion {NumberOfSymbols :uint32 (_bfe )};
_gfbd .InitEncode (_ffb ,_ccd ,_eec ,_ffd ,_acdb ,_cdb ,_dca ,_bdd .FinalWidth ,_bdd .FinalHeight ,_dfc );_bec :=&_fe .Header {RTSegments :_dbd ,SegmentData :_gfbd ,PageAssociation :_bdd .PageNumber ,Type :_fe .TImmediateTextRegion };_dge :=_fe .TPageInformation ;
if _ccd !=nil {_dge =_fe .TSymbolDictionary ;};var _afd int ;for ;_afd < len (_bdd .Segments );_afd ++{if _bdd .Segments [_afd ].Type ==_dge {_afd ++;break ;};};_bdd .Segments =append (_bdd .Segments ,nil );copy (_bdd .Segments [_afd +1:],_bdd .Segments [_afd :]);
_bdd .Segments [_afd ]=_bec ;};func (_aac *Document )GetGlobalSegment (i int )(*_fe .Header ,error ){_cgf ,_abc :=_aac .GlobalSegments .GetSegment (i );if _abc !=nil {return nil ,_fb .Wrap (_abc ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");
};return _cgf ,nil ;};func (_bdc *Globals )GetSegmentByIndex (index int )(*_fe .Header ,error ){const _abga ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _bdc ==nil {return nil ,_fb .Error (_abga ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_bdc .Segments )==0{return nil ,_fb .Error (_abga ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_bdc .Segments )-1{return nil ,_fb .Error (_abga ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");
};return _bdc .Segments [index ],nil ;};func (_becf *Page )createStripedPage (_bag *_fe .PageInformationSegment )error {const _bdf ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";_cee ,_efd :=_becf .collectPageStripes ();
if _efd !=nil {return _fb .Wrap (_efd ,_bdf ,"");};var _fcf int ;for _ ,_faec :=range _cee {if _edae ,_ddcg :=_faec .(*_fe .EndOfStripe );_ddcg {_fcf =_edae .LineNumber ()+1;}else {_cddf :=_faec .(_fe .Regioner );_ddde :=_cddf .GetRegionInfo ();_fgc :=_becf .getCombinationOperator (_bag ,_ddde .CombinaionOperator );
_cff ,_bbfe :=_cddf .GetRegionBitmap ();if _bbfe !=nil {return _fb .Wrap (_bbfe ,_bdf ,"");};_bbfe =_f .Blit (_cff ,_becf .Bitmap ,int (_ddde .XLocation ),_fcf ,_fgc );if _bbfe !=nil {return _fb .Wrap (_bbfe ,_bdf ,"");};};};return nil ;};func (_egbg *Globals )AddSegment (segment *_fe .Header ){_egbg .Segments =append (_egbg .Segments ,segment );
};func (_acg *Page )fitsPage (_dbb *_fe .PageInformationSegment ,_cdgf *_f .Bitmap )bool {return _acg .countRegions ()==1&&_dbb .DefaultPixelValue ==0&&_dbb .PageBMWidth ==_cdgf .Width &&_dbb .PageBMHeight ==_cdgf .Height ;};