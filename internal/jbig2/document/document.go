//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_f "encoding/binary";_eg "fmt";_ae "github.com/unidoc/unipdf/v3/common";_egd "github.com/unidoc/unipdf/v3/internal/bitwise";_eb "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_d "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_dc "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_ed "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_df "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ba "io";_e "math";_b "runtime/debug";);var _fg =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};
func (_faee *Page )getWidth ()(int ,error ){const _gfeb ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _faee .FinalWidth !=0{return _faee .FinalWidth ,nil ;};_ecfc :=_faee .getPageInformationSegment ();if _ecfc ==nil {return 0,_df .Error (_gfeb ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_gbe ,_agee :=_ecfc .GetSegmentData ();if _agee !=nil {return 0,_df .Wrap (_agee ,_gfeb ,"");};_aebc ,_efaf :=_gbe .(*_dc .PageInformationSegment );if !_efaf {return 0,_df .Errorf (_gfeb ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_gbe );
};_faee .FinalWidth =_aebc .PageBMWidth ;return _faee .FinalWidth ,nil ;};func (_eab *Page )collectPageStripes ()(_ffae []_dc .Segmenter ,_gec error ){const _eed ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";
var _ddg _dc .Segmenter ;for _ ,_bea :=range _eab .Segments {switch _bea .Type {case 6,7,22,23,38,39,42,43:_ddg ,_gec =_bea .GetSegmentData ();if _gec !=nil {return nil ,_df .Wrap (_gec ,_eed ,"");};_ffae =append (_ffae ,_ddg );case 50:_ddg ,_gec =_bea .GetSegmentData ();
if _gec !=nil {return nil ,_gec ;};_ccc ,_bfa :=_ddg .(*_dc .EndOfStripe );if !_bfa {return nil ,_df .Errorf (_eed ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_ddg );
};_ffae =append (_ffae ,_ccc );_eab .FinalHeight =_ccc .LineNumber ();};};return _ffae ,nil ;};func (_cgcba *Page )Encode (w _egd .BinaryWriter )(_agce int ,_agb error ){const _aff ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _fcc int ;
for _ ,_aeb :=range _cgcba .Segments {if _fcc ,_agb =_aeb .Encode (w );_agb !=nil {return _agce ,_df .Wrap (_agb ,_aff ,"");};_agce +=_fcc ;};return _agce ,nil ;};func (_cgcc *Page )GetResolutionX ()(int ,error ){return _cgcc .getResolutionX ()};func (_cb *Document )completeClassifiedPages ()(_ea error ){const _adf ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";
if _cb .Classer ==nil {return nil ;};_cb ._gf =make ([]int ,_cb .Classer .UndilatedTemplates .Size ());for _db :=0;_db < _cb .Classer .ClassIDs .Size ();_db ++{_caf ,_bc :=_cb .Classer .ClassIDs .Get (_db );if _bc !=nil {return _df .Wrapf (_bc ,_adf ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_db );
};_cb ._gf [_caf ]++;};var _fd []int ;for _cd :=0;_cd < _cb .Classer .UndilatedTemplates .Size ();_cd ++{if _cb .NumberOfPages ==1||_cb ._gf [_cd ]> 1{_fd =append (_fd ,_cd );};};var (_ge *Page ;_cdc bool ;);for _ga ,_gg :=range *_cb .Classer .ComponentPageNumbers {if _ge ,_cdc =_cb .Pages [_gg ];
!_cdc {return _df .Errorf (_adf ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ga );};if _ge .EncodingMethod ==GenericEM {_ae .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_ga );
continue ;};_cb ._c [_gg ]=append (_cb ._c [_gg ],_ga );_cafg ,_gae :=_cb .Classer .ClassIDs .Get (_ga );if _gae !=nil {return _df .Wrapf (_gae ,_adf ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_ga );
};if _cb ._gf [_cafg ]==1&&_cb .NumberOfPages !=1{_ab :=append (_cb ._dge [_gg ],_cafg );_cb ._dge [_gg ]=_ab ;};};if _ea =_cb .Classer .ComputeLLCorners ();_ea !=nil {return _df .Wrap (_ea ,_adf ,"");};if _ ,_ea =_cb .addSymbolDictionary (0,_cb .Classer .UndilatedTemplates ,_fd ,_cb ._ad ,false );
_ea !=nil {return _df .Wrap (_ea ,_adf ,"");};return nil ;};func (_dgfa *Document )completeSymbols ()(_agc error ){const _ffa ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _dgfa .Classer ==nil {return nil ;};if _dgfa .Classer .UndilatedTemplates ==nil {return _df .Error (_ffa ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_adg :=len (_dgfa .Pages )==1;_af :=make ([]int ,_dgfa .Classer .UndilatedTemplates .Size ());var _ac int ;for _caa :=0;_caa < _dgfa .Classer .ClassIDs .Size ();_caa ++{_ac ,_agc =_dgfa .Classer .ClassIDs .Get (_caa );if _agc !=nil {return _df .Wrap (_agc ,_ffa ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_af [_ac ]++;};var _ebd []int ;for _afc :=0;_afc < _dgfa .Classer .UndilatedTemplates .Size ();_afc ++{if _af [_afc ]==0{return _df .Error (_ffa ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _af [_afc ]> 1||_adg {_ebd =append (_ebd ,_afc );};};_dgfa ._g =len (_ebd );var _bee ,_geg int ;for _cab :=0;_cab < _dgfa .Classer .ComponentPageNumbers .Size ();_cab ++{_bee ,_agc =_dgfa .Classer .ComponentPageNumbers .Get (_cab );if _agc !=nil {return _df .Wrapf (_agc ,_ffa ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_cab );
};_geg ,_agc =_dgfa .Classer .ClassIDs .Get (_cab );if _agc !=nil {return _df .Wrapf (_agc ,_ffa ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_bee );
};if _af [_geg ]==1&&!_adg {_dgfa ._dge [_bee ]=append (_dgfa ._dge [_bee ],_geg );};};if _agc =_dgfa .Classer .ComputeLLCorners ();_agc !=nil {return _df .Wrap (_agc ,_ffa ,"");};return nil ;};func (_dfbg *Page )AddPageInformationSegment (){_fad :=&_dc .PageInformationSegment {PageBMWidth :_dfbg .FinalWidth ,PageBMHeight :_dfbg .FinalHeight ,ResolutionX :_dfbg .ResolutionX ,ResolutionY :_dfbg .ResolutionY ,IsLossless :_dfbg .IsLossless };
if _dfbg .BlackIsOne {_fad .DefaultPixelValue =uint8 (0x1);};_gfa :=&_dc .Header {PageAssociation :_dfbg .PageNumber ,SegmentDataLength :uint64 (_fad .Size ()),SegmentData :_fad ,Type :_dc .TPageInformation };_dfbg .Segments =append (_dfbg .Segments ,_gfa );
};func (_abfc *Page )getCombinationOperator (_geff *_dc .PageInformationSegment ,_ecb _d .CombinationOperator )_d .CombinationOperator {if _geff .CombinationOperatorOverrideAllowed (){return _ecb ;};return _geff .CombinationOperator ();};func DecodeDocument (input *_egd .Reader ,globals *Globals )(*Document ,error ){return _eag (input ,globals );
};func (_fgge *Globals )GetSymbolDictionary ()(*_dc .Header ,error ){const _dgg ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";if _fgge ==nil {return nil ,_df .Error (_dgg ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_fgge .Segments )==0{return nil ,_df .Error (_dgg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};for _ ,_dda :=range _fgge .Segments {if _dda .Type ==_dc .TSymbolDictionary {return _dda ,nil ;
};};return nil ,_df .Error (_dgg ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};func (_cgcb *Page )AddGenericRegion (bm *_d .Bitmap ,xloc ,yloc ,template int ,tp _dc .Type ,duplicateLineRemoval bool )error {const _eebc ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";
_fcd :=&_dc .GenericRegion {};if _agf :=_fcd .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_agf !=nil {return _df .Wrap (_agf ,_eebc ,"");};_gdbd :=&_dc .Header {Type :_dc .TImmediateGenericRegion ,PageAssociation :_cgcb .PageNumber ,SegmentData :_fcd };
_cgcb .Segments =append (_cgcb .Segments ,_gdbd );return nil ;};func (_dd *Document )GetNumberOfPages ()(uint32 ,error ){if _dd .NumberOfPagesUnknown ||_dd .NumberOfPages ==0{if len (_dd .Pages )==0{if _ggeb :=_dd .mapData ();_ggeb !=nil {return 0,_df .Wrap (_ggeb ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");
};};return uint32 (len (_dd .Pages )),nil ;};return _dd .NumberOfPages ,nil ;};func (_ada *Globals )GetSegment (segmentNumber int )(*_dc .Header ,error ){const _dcgb ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";
if _ada ==nil {return nil ,_df .Error (_dcgb ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_ada .Segments )==0{return nil ,_df .Error (_dcgb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};var _dgfc *_dc .Header ;for _ ,_dgfc =range _ada .Segments {if _dgfc .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _dgfc ==nil {return nil ,_df .Error (_dcgb ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _dgfc ,nil ;};func (_acb *Document )Encode ()(_fff []byte ,_aca error ){const _baf ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _geaa ,_ffab int ;if _acb .FullHeaders {if _geaa ,_aca =_acb .encodeFileHeader (_acb ._de );
_aca !=nil {return nil ,_df .Wrap (_aca ,_baf ,"");};};var (_eca bool ;_dcg *_dc .Header ;_agd *Page ;);if _aca =_acb .completeClassifiedPages ();_aca !=nil {return nil ,_df .Wrap (_aca ,_baf ,"");};if _aca =_acb .produceClassifiedPages ();_aca !=nil {return nil ,_df .Wrap (_aca ,_baf ,"");
};if _acb .GlobalSegments !=nil {for _ ,_dcg =range _acb .GlobalSegments .Segments {if _aca =_acb .encodeSegment (_dcg ,&_geaa );_aca !=nil {return nil ,_df .Wrap (_aca ,_baf ,"");};};};for _da :=1;_da <=int (_acb .NumberOfPages );_da ++{if _agd ,_eca =_acb .Pages [_da ];
!_eca {return nil ,_df .Errorf (_baf ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_da );};for _ ,_dcg =range _agd .Segments {if _aca =_acb .encodeSegment (_dcg ,&_geaa );_aca !=nil {return nil ,_df .Wrap (_aca ,_baf ,"");
};};};if _acb .FullHeaders {if _ffab ,_aca =_acb .encodeEOFHeader (_acb ._de );_aca !=nil {return nil ,_df .Wrap (_aca ,_baf ,"");};_geaa +=_ffab ;};_fff =_acb ._de .Data ();if len (_fff )!=_geaa {_ae .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_geaa ,len (_fff ));
};return _fff ,nil ;};func (_ef *Document )encodeEOFHeader (_eec _egd .BinaryWriter )(_edd int ,_bda error ){_edf :=&_dc .Header {SegmentNumber :_ef .nextSegmentNumber (),Type :_dc .TEndOfFile };if _edd ,_bda =_edf .Encode (_eec );_bda !=nil {return 0,_df .Wrap (_bda ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");
};return _edd ,nil ;};func (_gcf *Document )nextSegmentNumber ()uint32 {_ggb :=_gcf .CurrentSegmentNumber ;_gcf .CurrentSegmentNumber ++;return _ggb ;};func (_gedg *Page )GetResolutionY ()(int ,error ){return _gedg .getResolutionY ()};func (_efab *Page )fitsPage (_gab *_dc .PageInformationSegment ,_bgg *_d .Bitmap )bool {return _efab .countRegions ()==1&&_gab .DefaultPixelValue ==0&&_gab .PageBMWidth ==_bgg .Width &&_gab .PageBMHeight ==_bgg .Height ;
};func (_fac *Page )composePageBitmap ()error {const _fdb ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _fac .PageNumber ==0{return nil ;};_edcc :=_fac .getPageInformationSegment ();if _edcc ==nil {return _df .Error (_fdb ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_aedc ,_abf :=_edcc .GetSegmentData ();if _abf !=nil {return _abf ;};_eacb ,_gff :=_aedc .(*_dc .PageInformationSegment );if !_gff {return _df .Error (_fdb ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _abf =_fac .createPage (_eacb );_abf !=nil {return _df .Wrap (_abf ,_fdb ,"");};_fac .clearSegmentData ();return nil ;};func (_fbf *Page )GetWidth ()(int ,error ){return _fbf .getWidth ()};func (_ee *Document )AddClassifiedPage (bm *_d .Bitmap ,method _ed .Method )(_ce error ){const _ag ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_ee .FullHeaders &&_ee .NumberOfPages !=0{return _df .Error (_ag ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _ee .Classer ==nil {if _ee .Classer ,_ce =_ed .Init (_ed .DefaultSettings ());_ce !=nil {return _df .Wrap (_ce ,_ag ,"");};};_cg :=int (_ee .nextPageNumber ());_aed :=&Page {Segments :[]*_dc .Header {},Bitmap :bm ,Document :_ee ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_cg };
_ee .Pages [_cg ]=_aed ;switch method {case _ed .RankHaus :_aed .EncodingMethod =RankHausEM ;case _ed .Correlation :_aed .EncodingMethod =CorrelationEM ;};_aed .AddPageInformationSegment ();if _ce =_ee .Classer .AddPage (bm ,_cg ,method );_ce !=nil {return _df .Wrap (_ce ,_ag ,"");
};if _ee .FullHeaders {_aed .AddEndOfPageSegment ();};return nil ;};func (_dccd *Page )AddEndOfPageSegment (){_ede :=&_dc .Header {Type :_dc .TEndOfPage ,PageAssociation :_dccd .PageNumber };_dccd .Segments =append (_dccd .Segments ,_ede );};func (_dgf *Document )AddGenericPage (bm *_d .Bitmap ,duplicateLineRemoval bool )(_gc error ){const _ca ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_dgf .FullHeaders &&_dgf .NumberOfPages !=0{return _df .Error (_ca ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_ff :=&Page {Segments :[]*_dc .Header {},Bitmap :bm ,Document :_dgf ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_d .Chocolate };_ff .PageNumber =int (_dgf .nextPageNumber ());_dgf .Pages [_ff .PageNumber ]=_ff ;
bm .InverseData ();_ff .AddPageInformationSegment ();if _gc =_ff .AddGenericRegion (bm ,0,0,0,_dc .TImmediateGenericRegion ,duplicateLineRemoval );_gc !=nil {return _df .Wrap (_gc ,_ca ,"");};if _dgf .FullHeaders {_ff .AddEndOfPageSegment ();};return nil ;
};func (_cbe *Page )GetBitmap ()(_ddd *_d .Bitmap ,_dce error ){_ae .Log .Trace (_eg .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_cbe .PageNumber ));
defer func (){if _dce !=nil {_ae .Log .Trace (_eg .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_cbe .PageNumber ,_dce ));
}else {_ae .Log .Trace (_eg .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_cbe .PageNumber ));};}();if _cbe .Bitmap !=nil {return _cbe .Bitmap ,nil ;
};_dce =_cbe .composePageBitmap ();if _dce !=nil {return nil ,_dce ;};return _cbe .Bitmap ,nil ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream *_egd .Reader ;GlobalSegments *Globals ;
OrganizationType _dc .OrganizationType ;Classer *_ed .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_d .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_dg uint8 ;_de *_egd .BufferedWriter ;EncodeGlobals bool ;
_g int ;_dge map[int ][]int ;_c map[int ][]int ;_gf []int ;_ad map[int ]int ;};func (_fgac *Page )createNormalPage (_gga *_dc .PageInformationSegment )error {const _bafg ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";
_fgac .Bitmap =_d .New (_gga .PageBMWidth ,_gga .PageBMHeight );if _gga .DefaultPixelValue !=0{_fgac .Bitmap .SetDefaultPixel ();};for _ ,_cdb :=range _fgac .Segments {switch _cdb .Type {case 6,7,22,23,38,39,42,43:_ae .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_cdb .SegmentNumber );
_gedge ,_afg :=_cdb .GetSegmentData ();if _afg !=nil {return _afg ;};_fgcb ,_abc :=_gedge .(_dc .Regioner );if !_abc {_ae .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_gedge );
return _df .Errorf (_bafg ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_gedge );
};_bedf ,_afg :=_fgcb .GetRegionBitmap ();if _afg !=nil {return _df .Wrap (_afg ,_bafg ,"");};if _fgac .fitsPage (_gga ,_bedf ){_fgac .Bitmap =_bedf ;}else {_fabc :=_fgcb .GetRegionInfo ();_daa :=_fgac .getCombinationOperator (_gga ,_fabc .CombinaionOperator );
_afg =_d .Blit (_bedf ,_fgac .Bitmap ,int (_fabc .XLocation ),int (_fabc .YLocation ),_daa );if _afg !=nil {return _df .Wrap (_afg ,_bafg ,"");};};};};return nil ;};func (_gffg *Page )getResolutionX ()(int ,error ){const _dceb ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";
if _gffg .ResolutionX !=0{return _gffg .ResolutionX ,nil ;};_caeb :=_gffg .getPageInformationSegment ();if _caeb ==nil {return 0,_df .Error (_dceb ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_ffd ,_gbaa :=_caeb .GetSegmentData ();
if _gbaa !=nil {return 0,_df .Wrap (_gbaa ,_dceb ,"");};_fffe ,_ecc :=_ffd .(*_dc .PageInformationSegment );if !_ecc {return 0,_df .Errorf (_dceb ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_ffd );
};_gffg .ResolutionX =_fffe .ResolutionX ;return _gffg .ResolutionX ,nil ;};func _eag (_ebb *_egd .Reader ,_bdb *Globals )(*Document ,error ){_ebc :=&Document {Pages :make (map[int ]*Page ),InputStream :_ebb ,OrganizationType :_dc .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_bdb ,_dg :9};
if _ebc .GlobalSegments ==nil {_ebc .GlobalSegments =&Globals {};};if _dbdf :=_ebc .mapData ();_dbdf !=nil {return nil ,_dbdf ;};return _ebc ,nil ;};func (_bec *Document )mapData ()error {const _gd ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_gdb []*_dc .Header ;
_aba int64 ;_aad _dc .Type ;);_bgae ,_eeb :=_bec .isFileHeaderPresent ();if _eeb !=nil {return _df .Wrap (_eeb ,_gd ,"");};if _bgae {if _eeb =_bec .parseFileHeader ();_eeb !=nil {return _df .Wrap (_eeb ,_gd ,"");};_aba +=int64 (_bec ._dg );_bec .FullHeaders =true ;
};var (_fag *Page ;_dbf bool ;);for _aad !=51&&!_dbf {_egc ,_cba :=_dc .NewHeader (_bec ,_bec .InputStream ,_aba ,_bec .OrganizationType );if _cba !=nil {return _df .Wrap (_cba ,_gd ,"");};_ae .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_egc .SegmentNumber ,_egc .Type );
_aad =_egc .Type ;if _aad !=_dc .TEndOfFile {if _egc .PageAssociation !=0{_fag =_bec .Pages [_egc .PageAssociation ];if _fag ==nil {_fag =_ceg (_bec ,_egc .PageAssociation );_bec .Pages [_egc .PageAssociation ]=_fag ;if _bec .NumberOfPagesUnknown {_bec .NumberOfPages ++;
};};_fag .Segments =append (_fag .Segments ,_egc );}else {_bec .GlobalSegments .AddSegment (_egc );};};_gdb =append (_gdb ,_egc );_aba =_bec .InputStream .AbsolutePosition ();if _bec .OrganizationType ==_dc .OSequential {_aba +=int64 (_egc .SegmentDataLength );
};_dbf ,_cba =_bec .reachedEOF (_aba );if _cba !=nil {_ae .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_cba );
return _df .Wrap (_cba ,_gd ,"");};};_bec .determineRandomDataOffsets (_gdb ,uint64 (_aba ));return nil ;};func (_baeg *Page )getPageInformationSegment ()*_dc .Header {for _ ,_aef :=range _baeg .Segments {if _aef .Type ==_dc .TPageInformation {return _aef ;
};};_ae .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_baeg );
return nil ;};func (_bfg *Page )clearSegmentData (){for _fbb :=range _bfg .Segments {_bfg .Segments [_fbb ].CleanSegmentData ();};};func (_fga *Page )GetHeight ()(int ,error ){return _fga .getHeight ()};func (_gbf *Document )isFileHeaderPresent ()(bool ,error ){_gbf .InputStream .Mark ();
for _ ,_cf :=range _fg {_dcc ,_fbec :=_gbf .InputStream .ReadByte ();if _fbec !=nil {return false ,_fbec ;};if _cf !=_dcc {_gbf .InputStream .Reset ();return false ,nil ;};};_gbf .InputStream .Reset ();return true ,nil ;};func (_bg *Document )produceClassifiedPages ()(_gfc error ){const _edc ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";
if _bg .Classer ==nil {return nil ;};var (_fa *Page ;_ec bool ;_fe *_dc .Header ;);for _fb :=1;_fb <=int (_bg .NumberOfPages );_fb ++{if _fa ,_ec =_bg .Pages [_fb ];!_ec {return _df .Errorf (_edc ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_fb );
};if _fa .EncodingMethod ==GenericEM {continue ;};if _fe ==nil {if _fe ,_gfc =_bg .GlobalSegments .GetSymbolDictionary ();_gfc !=nil {return _df .Wrap (_gfc ,_edc ,"");};};if _gfc =_bg .produceClassifiedPage (_fa ,_fe );_gfc !=nil {return _df .Wrapf (_gfc ,_edc ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_fb );
};};return nil ;};func (_eaa *Document )GetGlobalSegment (i int )(*_dc .Header ,error ){_eaf ,_fge :=_eaa .GlobalSegments .GetSegment (i );if _fge !=nil {return nil ,_df .Wrap (_fge ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");
};return _eaf ,nil ;};func (_cge *Document )parseFileHeader ()error {const _bcc ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_bgb :=_cge .InputStream .Seek (8,_ba .SeekStart );if _bgb !=nil {return _df .Wrap (_bgb ,_bcc ,"\u0069\u0064");
};_ ,_bgb =_cge .InputStream .ReadBits (5);if _bgb !=nil {return _df .Wrap (_bgb ,_bcc ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_bgcc ,_bgb :=_cge .InputStream .ReadBit ();if _bgb !=nil {return _df .Wrap (_bgb ,_bcc ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");
};if _bgcc ==1{_cge .GBUseExtTemplate =true ;};_bgcc ,_bgb =_cge .InputStream .ReadBit ();if _bgb !=nil {return _df .Wrap (_bgb ,_bcc ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _bgcc !=1{_cge .NumberOfPagesUnknown =false ;
};_bgcc ,_bgb =_cge .InputStream .ReadBit ();if _bgb !=nil {return _df .Wrap (_bgb ,_bcc ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_cge .OrganizationType =_dc .OrganizationType (_bgcc );if !_cge .NumberOfPagesUnknown {_cge .NumberOfPages ,_bgb =_cge .InputStream .ReadUint32 ();
if _bgb !=nil {return _df .Wrap (_bgb ,_bcc ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_cge ._dg =13;};return nil ;};func (_feg *Page )getHeight ()(int ,error ){const _bab ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";
if _feg .FinalHeight !=0{return _feg .FinalHeight ,nil ;};_gca :=_feg .getPageInformationSegment ();if _gca ==nil {return 0,_df .Error (_bab ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_ffcb ,_ggg :=_gca .GetSegmentData ();
if _ggg !=nil {return 0,_df .Wrap (_ggg ,_bab ,"");};_bgaed ,_abad :=_ffcb .(*_dc .PageInformationSegment );if !_abad {return 0,_df .Errorf (_bab ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_ffcb );
};if _bgaed .PageBMHeight ==_e .MaxInt32 {_ ,_ggg =_feg .GetBitmap ();if _ggg !=nil {return 0,_df .Wrap (_ggg ,_bab ,"");};}else {_feg .FinalHeight =_bgaed .PageBMHeight ;};return _feg .FinalHeight ,nil ;};func (_cea *Page )String ()string {return _eg .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_cea .PageNumber );
};func (_cbc *Document )produceClassifiedPage (_ead *Page ,_fc *_dc .Header )(_gb error ){const _bae ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";var _fcg map[int ]int ;_dec :=_cbc ._g ;_eee :=[]*_dc .Header {_fc };
if len (_cbc ._dge [_ead .PageNumber ])> 0{_fcg =map[int ]int {};_cdd ,_eea :=_cbc .addSymbolDictionary (_ead .PageNumber ,_cbc .Classer .UndilatedTemplates ,_cbc ._dge [_ead .PageNumber ],_fcg ,false );if _eea !=nil {return _df .Wrap (_eea ,_bae ,"");
};_eee =append (_eee ,_cdd );_dec +=len (_cbc ._dge [_ead .PageNumber ]);};_fgc :=_cbc ._c [_ead .PageNumber ];_ae .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_ead .PageNumber ,_fgc );_ead .addTextRegionSegment (_eee ,_cbc ._ad ,_fcg ,_cbc ._c [_ead .PageNumber ],_cbc .Classer .PtaLL ,_cbc .Classer .UndilatedTemplates ,_cbc .Classer .ClassIDs ,nil ,_cc (_dec ),len (_cbc ._c [_ead .PageNumber ]));
return nil ;};func (_bddb *Page )createPage (_acba *_dc .PageInformationSegment )error {var _efa error ;if !_acba .IsStripe ||_acba .PageBMHeight !=-1{_efa =_bddb .createNormalPage (_acba );}else {_efa =_bddb .createStripedPage (_acba );};return _efa ;
};func (_ccf *Document )GetPage (pageNumber int )(_dc .Pager ,error ){const _dbba ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_ae .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_b .Stack ());
return nil ,_df .Errorf (_dbba ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_ccf .Pages ){_ae .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_b .Stack ());return nil ,_df .Error (_dbba ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_gfe ,_abe :=_ccf .Pages [pageNumber ];if !_abe {_ae .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_b .Stack ());return nil ,_df .Errorf (_dbba ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _gfe ,nil ;};type EncodingMethod int ;func (_bfag *Page )lastSegmentNumber ()(_abb uint32 ,_bdf error ){const _adad ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_bfag .Segments )==0{return _abb ,_df .Errorf (_adad ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_bfag .PageNumber );
};return _bfag .Segments [len (_bfag .Segments )-1].SegmentNumber ,nil ;};func _cc (_be int )int {_dfb :=0;_cbd :=(_be &(_be -1))==0;_be >>=1;for ;_be !=0;_be >>=1{_dfb ++;};if _cbd {return _dfb ;};return _dfb +1;};func (_dcb *Globals )GetSegmentByIndex (index int )(*_dc .Header ,error ){const _bbg ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";
if _dcb ==nil {return nil ,_df .Error (_bbg ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_dcb .Segments )==0{return nil ,_df .Error (_bbg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};if index > len (_dcb .Segments )-1{return nil ,_df .Error (_bbg ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _dcb .Segments [index ],nil ;};func (_eae *Document )nextPageNumber ()uint32 {_eae .NumberOfPages ++;
return _eae .NumberOfPages };func (_cef *Document )encodeSegment (_gge *_dc .Header ,_adc *int )error {const _bgc ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_gge .SegmentNumber =_cef .nextSegmentNumber ();_cdf ,_fgf :=_gge .Encode (_cef ._de );
if _fgf !=nil {return _df .Wrapf (_fgf ,_bgc ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_gge .SegmentNumber );};*_adc +=_cdf ;return nil ;};func (_bde *Page )countRegions ()int {var _fabb int ;for _ ,_ege :=range _bde .Segments {switch _ege .Type {case 6,7,22,23,38,39,42,43:_fabb ++;
};};return _fabb ;};func (_gbbd *Page )getResolutionY ()(int ,error ){const _ccg ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _gbbd .ResolutionY !=0{return _gbbd .ResolutionY ,nil ;};_baee :=_gbbd .getPageInformationSegment ();
if _baee ==nil {return 0,_df .Error (_ccg ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_dcga ,_dcac :=_baee .GetSegmentData ();if _dcac !=nil {return 0,_df .Wrap (_dcac ,_ccg ,"");};_gfd ,_egff :=_dcga .(*_dc .PageInformationSegment );
if !_egff {return 0,_df .Errorf (_ccg ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_dcga );
};_gbbd .ResolutionY =_gfd .ResolutionY ;return _gbbd .ResolutionY ,nil ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_de :_egd .BufferedMSB (),Pages :map[int ]*Page {},_dge :map[int ][]int {},_ad :map[int ]int {},_c :map[int ][]int {}};
};func (_daaf *Page )nextSegmentNumber ()uint32 {return _daaf .Document .nextSegmentNumber ()};type Globals struct{Segments []*_dc .Header ;};func (_caca *Document )encodeFileHeader (_acf _egd .BinaryWriter )(_egf int ,_gbb error ){const _bf ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_egf ,_gbb =_acf .Write (_fg );if _gbb !=nil {return _egf ,_df .Wrap (_gbb ,_bf ,"\u0069\u0064");};if _gbb =_acf .WriteByte (0x01);_gbb !=nil {return _egf ,_df .Wrap (_gbb ,_bf ,"\u0066\u006c\u0061g\u0073");};_egf ++;_faf :=make ([]byte ,4);_f .BigEndian .PutUint32 (_faf ,_caca .NumberOfPages );
_bdd ,_gbb :=_acf .Write (_faf );if _gbb !=nil {return _bdd ,_df .Wrap (_gbb ,_bf ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_egf +=_bdd ;return _egf ,nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_gbg *Page )addTextRegionSegment (_acde []*_dc .Header ,_dde ,_eafa map[int ]int ,_geab []int ,_gbfg *_d .Points ,_cbf *_d .Bitmaps ,_bfd *_eb .IntSlice ,_ecf *_d .Boxes ,_fgce ,_adce int ){_gdbf :=&_dc .TextRegion {NumberOfSymbols :uint32 (_adce )};
_gdbf .InitEncode (_dde ,_eafa ,_geab ,_gbfg ,_cbf ,_bfd ,_ecf ,_gbg .FinalWidth ,_gbg .FinalHeight ,_fgce );_eda :=&_dc .Header {RTSegments :_acde ,SegmentData :_gdbf ,PageAssociation :_gbg .PageNumber ,Type :_dc .TImmediateTextRegion };_fae :=_dc .TPageInformation ;
if _eafa !=nil {_fae =_dc .TSymbolDictionary ;};var _fagf int ;for ;_fagf < len (_gbg .Segments );_fagf ++{if _gbg .Segments [_fagf ].Type ==_fae {_fagf ++;break ;};};_gbg .Segments =append (_gbg .Segments ,nil );copy (_gbg .Segments [_fagf +1:],_gbg .Segments [_fagf :]);
_gbg .Segments [_fagf ]=_eda ;};func (_cgc *Globals )AddSegment (segment *_dc .Header ){_cgc .Segments =append (_cgc .Segments ,segment )};type Page struct{Segments []*_dc .Header ;PageNumber int ;Bitmap *_d .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;
ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;};func (_cae *Document )determineRandomDataOffsets (_dbd []*_dc .Header ,_bga uint64 ){if _cae .OrganizationType !=_dc .ORandom {return ;
};for _ ,_fca :=range _dbd {_fca .SegmentDataStartOffset =_bga ;_bga +=_fca .SegmentDataLength ;};};func _ceg (_cga *Document ,_cegg int )*Page {return &Page {Document :_cga ,PageNumber :_cegg ,Segments :[]*_dc .Header {}};};func (_dca *Page )GetSegment (number int )(*_dc .Header ,error ){const _bed ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
for _ ,_eac :=range _dca .Segments {if _eac .SegmentNumber ==uint32 (number ){return _eac ,nil ;};};_bfc :=make ([]uint32 ,len (_dca .Segments ));for _cgce ,_beg :=range _dca .Segments {_bfc [_cgce ]=_beg .SegmentNumber ;};return nil ,_df .Errorf (_bed ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_dca .PageNumber ,_bfc );
};func (_gbgf *Page )createStripedPage (_gde *_dc .PageInformationSegment )error {const _bef ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";_gef ,_cdfe :=_gbgf .collectPageStripes ();if _cdfe !=nil {return _df .Wrap (_cdfe ,_bef ,"");
};var _eaab int ;for _ ,_dgd :=range _gef {if _agga ,_egfd :=_dgd .(*_dc .EndOfStripe );_egfd {_eaab =_agga .LineNumber ()+1;}else {_age :=_dgd .(_dc .Regioner );_aaf :=_age .GetRegionInfo ();_ffc :=_gbgf .getCombinationOperator (_gde ,_aaf .CombinaionOperator );
_cgg ,_fbc :=_age .GetRegionBitmap ();if _fbc !=nil {return _df .Wrap (_fbc ,_bef ,"");};_fbc =_d .Blit (_cgg ,_gbgf .Bitmap ,int (_aaf .XLocation ),_eaab ,_ffc );if _fbc !=nil {return _df .Wrap (_fbc ,_bef ,"");};};};return nil ;};func (_deb *Document )addSymbolDictionary (_bb int ,_egb *_d .Bitmaps ,_fbe []int ,_abg map[int ]int ,_dgeg bool )(*_dc .Header ,error ){const _ged ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_gea :=&_dc .SymbolDictionary {};if _aa :=_gea .InitEncode (_egb ,_fbe ,_abg ,_dgeg );_aa !=nil {return nil ,_aa ;};_cac :=&_dc .Header {Type :_dc .TSymbolDictionary ,PageAssociation :_bb ,SegmentData :_gea };if _bb ==0{if _deb .GlobalSegments ==nil {_deb .GlobalSegments =&Globals {};
};_deb .GlobalSegments .AddSegment (_cac );return _cac ,nil ;};_add ,_gaeb :=_deb .Pages [_bb ];if !_gaeb {return nil ,_df .Errorf (_ged ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_bb );};var (_bd int ;
_fab *_dc .Header ;);for _bd ,_fab =range _add .Segments {if _fab .Type ==_dc .TPageInformation {break ;};};_bd ++;_add .Segments =append (_add .Segments ,nil );copy (_add .Segments [_bd +1:],_add .Segments [_bd :]);_add .Segments [_bd ]=_cac ;return _cac ,nil ;
};func (_gaa *Document )reachedEOF (_ace int64 )(bool ,error ){const _efg ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_fgg :=_gaa .InputStream .Seek (_ace ,_ba .SeekStart );if _fgg !=nil {_ae .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fgg );
return false ,_df .Wrap (_fgg ,_efg ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_fgg =_gaa .InputStream .ReadBits (32);if _fgg ==_ba .EOF {return true ,nil ;
}else if _fgg !=nil {return false ,_df .Wrap (_fgg ,_efg ,"");};return false ,nil ;};