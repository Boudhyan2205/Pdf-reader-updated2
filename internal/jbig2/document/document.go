//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_b "encoding/binary";_ee "fmt";_eed "github.com/unidoc/unipdf/v3/common";_cf "github.com/unidoc/unipdf/v3/internal/bitwise";_g "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_cd "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_eb "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_be "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_bf "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ed "io";_c "math";_f "runtime/debug";);func _cba (_ffc int )int {_aed :=0;_cga :=(_ffc &(_ffc -1))==0;_ffc >>=1;for ;_ffc !=0;_ffc >>=1{_aed ++;};if _cga {return _aed ;};return _aed +1;};var _fg =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_deab *Page )countRegions ()int {var _decc int ;for _ ,_dff :=range _deab .Segments {switch _dff .Type {case 6,7,22,23,38,39,42,43:_decc ++;};};return _decc ;};func (_ecd *Globals )GetSegment (segmentNumber int )(*_eb .Header ,error ){const _cefd ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";if _ecd ==nil {return nil ,_bf .Error (_cefd ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_ecd .Segments )==0{return nil ,_bf .Error (_cefd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};var _edbd *_eb .Header ;for _ ,_edbd =range _ecd .Segments {if _edbd .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _edbd ==nil {return nil ,_bf .Error (_cefd ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _edbd ,nil ;};func (_gcbd *Page )fitsPage (_bee *_eb .PageInformationSegment ,_dgcgf *_cd .Bitmap )bool {return _gcbd .countRegions ()==1&&_bee .DefaultPixelValue ()==0&&_bee .PageBMWidth ==_dgcgf .Width &&_bee .PageBMHeight ==_dgcgf .Height ;};func (_ecbf *Document )GetGlobalSegment (i int )(*_eb .Header ,error ){_egb ,_dg :=_ecbf .GlobalSegments .GetSegment (i );if _dg !=nil {return nil ,_bf .Wrap (_dg ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");};return _egb ,nil ;};func (_cae *Page )GetBitmap ()(_baf *_cd .Bitmap ,_afed error ){_eed .Log .Trace (_ee .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_cae .PageNumber ));defer func (){if _afed !=nil {_eed .Log .Trace (_ee .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_cae .PageNumber ,_afed ));}else {_eed .Log .Trace (_ee .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_cae .PageNumber ));};}();if _cae .Bitmap !=nil {return _cae .Bitmap ,nil ;};_afed =_cae .composePageBitmap ();if _afed !=nil {return nil ,_afed ;};return _cae .Bitmap ,nil ;};func (_bba *Page )createStripedPage (_gdbee *_eb .PageInformationSegment )error {const _ffa ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";_eadf ,_dea :=_bba .collectPageStripes ();if _dea !=nil {return _bf .Wrap (_dea ,_ffa ,"");};var _dgb int ;for _ ,_ebbb :=range _eadf {if _gdca ,_badg :=_ebbb .(*_eb .EndOfStripe );_badg {_dgb =_gdca .LineNumber ()+1;}else {_feab :=_ebbb .(_eb .Regioner );_fdb :=_feab .GetRegionInfo ();_cfcb :=_bba .getCombinationOperator (_gdbee ,_fdb .CombinaionOperator );_babf ,_gda :=_feab .GetRegionBitmap ();if _gda !=nil {return _bf .Wrap (_gda ,_ffa ,"");};_gda =_cd .Blit (_babf ,_bba .Bitmap ,int (_fdb .XLocation ),_dgb ,_cfcb );if _gda !=nil {return _bf .Wrap (_gda ,_ffa ,"");};};};return nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_ggb *Document )GetNumberOfPages ()(uint32 ,error ){if _ggb .NumberOfPagesUnknown ||_ggb .NumberOfPages ==0{if len (_ggb .Pages )==0{if _fga :=_ggb .mapData ();_fga !=nil {return 0,_bf .Wrap (_fga ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_ggb .Pages )),nil ;};return _ggb .NumberOfPages ,nil ;};func (_bae *Document )produceClassifiedPage (_gdb *Page ,_gcc *_eb .Header )(_fd error ){const _cb ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";var _ccc map[int ]int ;_aeag :=_bae ._d ;_acba :=[]*_eb .Header {_gcc };if len (_bae ._cg [_gdb .PageNumber ])> 0{_ccc =map[int ]int {};_ga ,_dc :=_bae .addSymbolDictionary (_gdb .PageNumber ,_bae .Classer .UndilatedTemplates ,_bae ._cg [_gdb .PageNumber ],_ccc ,false );if _dc !=nil {return _bf .Wrap (_dc ,_cb ,"");};_acba =append (_acba ,_ga );_aeag +=len (_bae ._cg [_gdb .PageNumber ]);};_ecbe :=_bae ._a [_gdb .PageNumber ];_eed .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_gdb .PageNumber ,_ecbe );_gdb .addTextRegionSegment (_acba ,_bae ._ff ,_ccc ,_bae ._a [_gdb .PageNumber ],_bae .Classer .PtaLL ,_bae .Classer .UndilatedTemplates ,_bae .Classer .ClassIDs ,nil ,_cba (_aeag ),len (_bae ._a [_gdb .PageNumber ]));return nil ;};type Page struct{Segments []*_eb .Header ;PageNumber int ;Bitmap *_cd .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;};func (_ace *Globals )GetSymbolDictionary ()(*_eb .Header ,error ){const _afe ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";if _ace ==nil {return nil ,_bf .Error (_afe ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_ace .Segments )==0{return nil ,_bf .Error (_afe ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};for _ ,_gbe :=range _ace .Segments {if _gbe .Type ==_eb .TSymbolDictionary {return _gbe ,nil ;};};return nil ,_bf .Error (_afe ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};func (_eea *Page )Encode (w _cf .BinaryWriter )(_bdg int ,_febg error ){const _egd ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _feg int ;for _ ,_dbbd :=range _eea .Segments {if _feg ,_febg =_dbbd .Encode (w );_febg !=nil {return _bdg ,_bf .Wrap (_febg ,_egd ,"");};_bdg +=_feg ;};return _bdg ,nil ;};func (_bbb *Page )AddEndOfPageSegment (){_egbg :=&_eb .Header {Type :_eb .TEndOfPage ,PageAssociation :_bbb .PageNumber };_bbb .Segments =append (_bbb .Segments ,_egbg );};func (_dd *Document )completeSymbols ()(_ffb error ){const _bed ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _dd .Classer ==nil {return nil ;};if _dd .Classer .UndilatedTemplates ==nil {return _bf .Error (_bed ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");};_fca :=len (_dd .Pages )==1;_bfb :=make ([]int ,_dd .Classer .UndilatedTemplates .Size ());var _ccb int ;for _fa :=0;_fa < _dd .Classer .ClassIDs .Size ();_fa ++{_ccb ,_ffb =_dd .Classer .ClassIDs .Get (_fa );if _ffb !=nil {return _bf .Wrap (_ffb ,_bed ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");};_bfb [_ccb ]++;};var _bge []int ;for _ab :=0;_ab < _dd .Classer .UndilatedTemplates .Size ();_ab ++{if _bfb [_ab ]==0{return _bf .Error (_bed ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");};if _bfb [_ab ]> 1||_fca {_bge =append (_bge ,_ab );};};_dd ._d =len (_bge );var _bbda ,_ece int ;for _faa :=0;_faa < _dd .Classer .ComponentPageNumbers .Size ();_faa ++{_bbda ,_ffb =_dd .Classer .ComponentPageNumbers .Get (_faa );if _ffb !=nil {return _bf .Wrapf (_ffb ,_bed ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_faa );};_ece ,_ffb =_dd .Classer .ClassIDs .Get (_faa );if _ffb !=nil {return _bf .Wrapf (_ffb ,_bed ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_bbda );};if _bfb [_ece ]==1&&!_fca {_dd ._cg [_bbda ]=append (_dd ._cg [_bbda ],_ece );};};if _ffb =_dd .Classer .ComputeLLCorners ();_ffb !=nil {return _bf .Wrap (_ffb ,_bed ,"");};return nil ;};func (_baa *Page )GetSegment (number int )(*_eb .Header ,error ){const _gdce ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_cdb :=range _baa .Segments {if _cdb .SegmentNumber ==uint32 (number ){return _cdb ,nil ;};};_aac :=make ([]uint32 ,len (_baa .Segments ));for _dgcg ,_baeg :=range _baa .Segments {_aac [_dgcg ]=_baeg .SegmentNumber ;};return nil ,_bf .Errorf (_gdce ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_baa .PageNumber ,_aac );};func (_eeg *Document )reachedEOF (_fbd int64 )(bool ,error ){const _cff ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_gac :=_eeg .InputStream .Seek (_fbd ,_ed .SeekStart );if _gac !=nil {_eed .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gac );return false ,_bf .Wrap (_gac ,_cff ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_gac =_eeg .InputStream .ReadBits (32);if _gac ==_ed .EOF {return true ,nil ;}else if _gac !=nil {return false ,_bf .Wrap (_gac ,_cff ,"");};return false ,nil ;};func (_bb *Document )AddGenericPage (bm *_cd .Bitmap ,duplicateLineRemoval bool )(_ce error ){const _ae ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";if !_bb .FullHeaders &&_bb .NumberOfPages !=0{return _bf .Error (_ae ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};_ba :=&Page {Segments :[]*_eb .Header {},Bitmap :bm ,Document :_bb ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true };_ba .PageNumber =int (_bb .nextPageNumber ());_bb .Pages [_ba .PageNumber ]=_ba ;_ba .AddPageInformationSegment ();if _ce =_ba .AddGenericRegion (bm ,0,0,0,_eb .TImmediateGenericRegion ,duplicateLineRemoval );_ce !=nil {return _bf .Wrap (_ce ,_ae ,"");};if _bb .FullHeaders {_ba .AddEndOfPageSegment ();};return nil ;};func (_dgc *Document )nextPageNumber ()uint32 {_dgc .NumberOfPages ++;return _dgc .NumberOfPages };func (_fgdg *Page )GetHeight ()(int ,error ){return _fgdg .getHeight ()};func (_edcf *Page )getHeight ()(int ,error ){const _aga ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _edcf .FinalHeight !=0{return _edcf .FinalHeight ,nil ;};_gcce :=_edcf .getPageInformationSegment ();if _gcce ==nil {return 0,_bf .Error (_aga ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_fbaf ,_dcc :=_gcce .GetSegmentData ();if _dcc !=nil {return 0,_bf .Wrap (_dcc ,_aga ,"");};_dcga ,_fda :=_fbaf .(*_eb .PageInformationSegment );if !_fda {return 0,_bf .Errorf (_aga ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_fbaf );};if _dcga .PageBMHeight ==_c .MaxInt32 {_ ,_dcc =_edcf .GetBitmap ();if _dcc !=nil {return 0,_bf .Wrap (_dcc ,_aga ,"");};}else {_edcf .FinalHeight =_dcga .PageBMHeight ;};return _edcf .FinalHeight ,nil ;};func (_aad *Page )addTextRegionSegment (_ffd []*_eb .Header ,_deb ,_beg map[int ]int ,_eaa []int ,_bdcg *_cd .Points ,_edde *_cd .Bitmaps ,_gdef *_g .IntSlice ,_dfc *_cd .Boxes ,_fag ,_fgc int ){_accg :=&_eb .TextRegion {NumberOfSymbols :uint32 (_fgc )};_accg .InitEncode (_deb ,_beg ,_eaa ,_bdcg ,_edde ,_gdef ,_dfc ,_aad .FinalWidth ,_aad .FinalHeight ,_fag );_gef :=&_eb .Header {RTSegments :_ffd ,SegmentData :_accg ,PageAssociation :_aad .PageNumber ,Type :_eb .TImmediateTextRegion };_eab :=_eb .TPageInformation ;if _beg !=nil {_eab =_eb .TSymbolDictionary ;};var _cbb int ;for ;_cbb < len (_aad .Segments );_cbb ++{if _aad .Segments [_cbb ].Type ==_eab {_cbb ++;break ;};};_aad .Segments =append (_aad .Segments ,nil );copy (_aad .Segments [_cbb +1:],_aad .Segments [_cbb :]);_aad .Segments [_cbb ]=_gef ;};func (_ccbg *Document )Encode ()(_fcc []byte ,_edd error ){const _cfc ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _bfba ,_dcg int ;if _ccbg .FullHeaders {if _bfba ,_edd =_ccbg .encodeFileHeader (_ccbg ._bg );_edd !=nil {return nil ,_bf .Wrap (_edd ,_cfc ,"");};};var (_gde bool ;_fff *_eb .Header ;_bdb *Page ;);if _edd =_ccbg .completeClassifiedPages ();_edd !=nil {return nil ,_bf .Wrap (_edd ,_cfc ,"");};if _edd =_ccbg .produceClassifiedPages ();_edd !=nil {return nil ,_bf .Wrap (_edd ,_cfc ,"");};if _ccbg .GlobalSegments !=nil {for _ ,_fff =range _ccbg .GlobalSegments .Segments {if _edd =_ccbg .encodeSegment (_fff ,&_bfba );_edd !=nil {return nil ,_bf .Wrap (_edd ,_cfc ,"");};};};for _ffee :=1;_ffee <=int (_ccbg .NumberOfPages );_ffee ++{if _bdb ,_gde =_ccbg .Pages [_ffee ];!_gde {return nil ,_bf .Errorf (_cfc ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ffee );};for _ ,_fff =range _bdb .Segments {if _edd =_ccbg .encodeSegment (_fff ,&_bfba );_edd !=nil {return nil ,_bf .Wrap (_edd ,_cfc ,"");};};};if _ccbg .FullHeaders {if _dcg ,_edd =_ccbg .encodeEOFHeader (_ccbg ._bg );_edd !=nil {return nil ,_bf .Wrap (_edd ,_cfc ,"");};_bfba +=_dcg ;};_fcc =_ccbg ._bg .Data ();if len (_fcc )!=_bfba {_eed .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_bfba ,len (_fcc ));};return _fcc ,nil ;};func (_gae *Document )encodeFileHeader (_df _cf .BinaryWriter )(_ddc int ,_bcb error ){const _fbg ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ddc ,_bcb =_df .Write (_fg );if _bcb !=nil {return _ddc ,_bf .Wrap (_bcb ,_fbg ,"\u0069\u0064");};if _bcb =_df .WriteByte (0x01);_bcb !=nil {return _ddc ,_bf .Wrap (_bcb ,_fbg ,"\u0066\u006c\u0061g\u0073");};_ddc ++;_dbc :=make ([]byte ,4);_b .BigEndian .PutUint32 (_dbc ,_gae .NumberOfPages );_fab ,_bcb :=_df .Write (_dbc );if _bcb !=nil {return _fab ,_bf .Wrap (_bcb ,_fbg ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_ddc +=_fab ;return _ddc ,nil ;};func _cea (_caa *Document ,_ead int )*Page {return &Page {Document :_caa ,PageNumber :_ead ,Segments :[]*_eb .Header {}};};func (_aebc *Page )getWidth ()(int ,error ){const _cfda ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _aebc .FinalWidth !=0{return _aebc .FinalWidth ,nil ;};_bafd :=_aebc .getPageInformationSegment ();if _bafd ==nil {return 0,_bf .Error (_cfda ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_fddd ,_cbc :=_bafd .GetSegmentData ();if _cbc !=nil {return 0,_bf .Wrap (_cbc ,_cfda ,"");};_gaf ,_dfb :=_fddd .(*_eb .PageInformationSegment );if !_dfb {return 0,_bf .Errorf (_cfda ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_fddd );};_aebc .FinalWidth =_gaf .PageBMWidth ;return _aebc .FinalWidth ,nil ;};func (_bbc *Document )produceClassifiedPages ()(_gga error ){const _ecb ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _bbc .Classer ==nil {return nil ;};var (_bgc *Page ;_ef bool ;_acb *_eb .Header ;);for _cc :=1;_cc <=int (_bbc .NumberOfPages );_cc ++{if _bgc ,_ef =_bbc .Pages [_cc ];!_ef {return _bf .Errorf (_ecb ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cc );};if _bgc .EncodingMethod ==GenericEM {continue ;};if _acb ==nil {if _acb ,_gga =_bbc .GlobalSegments .GetSymbolDictionary ();_gga !=nil {return _bf .Wrap (_gga ,_ecb ,"");};};if _gga =_bbc .produceClassifiedPage (_bgc ,_acb );_gga !=nil {return _bf .Wrapf (_gga ,_ecb ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_cc );};};return nil ;};type EncodingMethod int ;func (_gaa *Page )getCombinationOperator (_eca *_eb .PageInformationSegment ,_agd _cd .CombinationOperator )_cd .CombinationOperator {if _eca .CombinationOperatorOverrideAllowed (){return _agd ;};return _eca .CombinationOperator ();};func (_aaf *Page )GetResolutionX ()(int ,error ){return _aaf .getResolutionX ()};func (_afb *Globals )AddSegment (segment *_eb .Header ){_afb .Segments =append (_afb .Segments ,segment )};func (_ccd *Page )GetWidth ()(int ,error ){return _ccd .getWidth ()};func (_fdf *Document )GetPage (pageNumber int )(_eb .Pager ,error ){const _edb ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_eed .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_f .Stack ());return nil ,_bf .Errorf (_edb ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );};if pageNumber > len (_fdf .Pages ){_eed .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_f .Stack ());return nil ,_bf .Error (_edb ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};_bef ,_bfe :=_fdf .Pages [pageNumber ];if !_bfe {_eed .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_f .Stack ());return nil ,_bf .Errorf (_edb ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _bef ,nil ;};func (_aee *Document )addSymbolDictionary (_fgdf int ,_cfb *_cd .Bitmaps ,_ecc []int ,_eg map[int ]int ,_gcd bool )(*_eb .Header ,error ){const _gcb ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";_ffe :=&_eb .SymbolDictionary {};if _bd :=_ffe .InitEncode (_cfb ,_ecc ,_eg ,_gcd );_bd !=nil {return nil ,_bd ;};_db :=&_eb .Header {Type :_eb .TSymbolDictionary ,PageAssociation :_fgdf ,SegmentData :_ffe };if _fgdf ==0{if _aee .GlobalSegments ==nil {_aee .GlobalSegments =&Globals {};};_aee .GlobalSegments .AddSegment (_db );return _db ,nil ;};_ge ,_bfg :=_aee .Pages [_fgdf ];if !_bfg {return nil ,_bf .Errorf (_gcb ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_fgdf );};var (_acc int ;_fc *_eb .Header ;);for _acc ,_fc =range _ge .Segments {if _fc .Type ==_eb .TPageInformation {break ;};};_acc ++;_ge .Segments =append (_ge .Segments ,nil );copy (_ge .Segments [_acc +1:],_ge .Segments [_acc :]);_ge .Segments [_acc ]=_db ;return _db ,nil ;};func (_ccca *Globals )GetSegmentByIndex (index int )(*_eb .Header ,error ){const _efd ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _ccca ==nil {return nil ,_bf .Error (_efd ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_ccca .Segments )==0{return nil ,_bf .Error (_efd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_ccca .Segments )-1{return nil ,_bf .Error (_efd ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _ccca .Segments [index ],nil ;};func _bbf (_dbb _cf .StreamReader ,_feac *Globals )(*Document ,error ){_bdc :=&Document {Pages :make (map[int ]*Page ),InputStream :_dbb ,OrganizationType :_eb .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_feac ,_ec :9};if _bdc .GlobalSegments ==nil {_bdc .GlobalSegments =&Globals {};};if _afd :=_bdc .mapData ();_afd !=nil {return nil ,_afd ;};return _bdc ,nil ;};func (_gdba *Page )AddGenericRegion (bm *_cd .Bitmap ,xloc ,yloc ,template int ,tp _eb .Type ,duplicateLineRemoval bool )error {const _ecef ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";_ag :=&_eb .GenericRegion {};if _gcbg :=_ag .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_gcbg !=nil {return _bf .Wrap (_gcbg ,_ecef ,"");};_fcg :=&_eb .Header {Type :_eb .TImmediateGenericRegion ,PageAssociation :_gdba .PageNumber ,SegmentData :_ag };_gdba .Segments =append (_gdba .Segments ,_fcg );return nil ;};func (_ac *Document )AddClassifiedPage (bm *_cd .Bitmap ,method _be .Method )(_bab error ){const _cgd ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";if !_ac .FullHeaders &&_ac .NumberOfPages !=0{return _bf .Error (_cgd ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};if _ac .Classer ==nil {if _ac .Classer ,_bab =_be .Init (_be .DefaultSettings ());_bab !=nil {return _bf .Wrap (_bab ,_cgd ,"");};};_da :=int (_ac .nextPageNumber ());_af :=&Page {Segments :[]*_eb .Header {},Bitmap :bm ,Document :_ac ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_da };_ac .Pages [_da ]=_af ;switch method {case _be .RankHaus :_af .EncodingMethod =RankHausEM ;case _be .Correlation :_af .EncodingMethod =CorrelationEM ;};_af .AddPageInformationSegment ();if _bab =_ac .Classer .AddPage (bm ,_da ,method );_bab !=nil {return _bf .Wrap (_bab ,_cgd ,"");};if _ac .FullHeaders {_af .AddEndOfPageSegment ();};return nil ;};func (_gd *Document )completeClassifiedPages ()(_bbd error ){const _aea ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";if _gd .Classer ==nil {return nil ;};_gd ._bc =make ([]int ,_gd .Classer .UndilatedTemplates .Size ());for _fgd :=0;_fgd < _gd .Classer .ClassIDs .Size ();_fgd ++{_fe ,_dac :=_gd .Classer .ClassIDs .Get (_fgd );if _dac !=nil {return _bf .Wrapf (_dac ,_aea ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_fgd );};_gd ._bc [_fe ]++;};var _fed []int ;for _fee :=0;_fee < _gd .Classer .UndilatedTemplates .Size ();_fee ++{if _gd .NumberOfPages ==1||_gd ._bc [_fee ]> 1{_fed =append (_fed ,_fee );};};var (_edc *Page ;_aeb bool ;);for _dab ,_ea :=range *_gd .Classer .ComponentPageNumbers {if _edc ,_aeb =_gd .Pages [_ea ];!_aeb {return _bf .Errorf (_aea ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_dab );};if _edc .EncodingMethod ==GenericEM {_eed .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_dab );continue ;};_gd ._a [_ea ]=append (_gd ._a [_ea ],_dab );_gc ,_bea :=_gd .Classer .ClassIDs .Get (_dab );if _bea !=nil {return _bf .Wrapf (_bea ,_aea ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_dab );};if _gd ._bc [_gc ]==1&&_gd .NumberOfPages !=1{_gdc :=append (_gd ._cg [_ea ],_gc );_gd ._cg [_ea ]=_gdc ;};};if _bbd =_gd .Classer .ComputeLLCorners ();_bbd !=nil {return _bf .Wrap (_bbd ,_aea ,"");};if _ ,_bbd =_gd .addSymbolDictionary (0,_gd .Classer .UndilatedTemplates ,_fed ,_gd ._ff ,false );_bbd !=nil {return _bf .Wrap (_bbd ,_aea ,"");};return nil ;};func (_eaf *Document )nextSegmentNumber ()uint32 {_eba :=_eaf .CurrentSegmentNumber ;_eaf .CurrentSegmentNumber ++;return _eba ;};func (_dfff *Page )getPageInformationSegment ()*_eb .Header {for _ ,_gec :=range _dfff .Segments {if _gec .Type ==_eb .TPageInformation {return _gec ;};};_eed .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_dfff );return nil ;};func (_bgd *Page )GetResolutionY ()(int ,error ){return _bgd .getResolutionY ()};func (_dcgb *Document )determineRandomDataOffsets (_dba []*_eb .Header ,_fdg uint64 ){if _dcgb .OrganizationType !=_eb .ORandom {return ;};for _ ,_ca :=range _dba {_ca .SegmentDataStartOffset =_fdg ;_fdg +=_ca .SegmentDataLength ;};};func (_fea *Document )parseFileHeader ()error {const _dcgf ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_cde :=_fea .InputStream .Seek (8,_ed .SeekStart );if _cde !=nil {return _bf .Wrap (_cde ,_dcgf ,"\u0069\u0064");};_ ,_cde =_fea .InputStream .ReadBits (5);if _cde !=nil {return _bf .Wrap (_cde ,_dcgf ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_fcag ,_cde :=_fea .InputStream .ReadBit ();if _cde !=nil {return _bf .Wrap (_cde ,_dcgf ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _fcag ==1{_fea .GBUseExtTemplate =true ;};_fcag ,_cde =_fea .InputStream .ReadBit ();if _cde !=nil {return _bf .Wrap (_cde ,_dcgf ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _fcag !=1{_fea .NumberOfPagesUnknown =false ;};_fcag ,_cde =_fea .InputStream .ReadBit ();if _cde !=nil {return _bf .Wrap (_cde ,_dcgf ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_fea .OrganizationType =_eb .OrganizationType (_fcag );if !_fea .NumberOfPagesUnknown {_fea .NumberOfPages ,_cde =_fea .InputStream .ReadUint32 ();if _cde !=nil {return _bf .Wrap (_cde ,_dcgf ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_fea ._ec =13;};return nil ;};func (_dbccg *Page )createPage (_ega *_eb .PageInformationSegment )error {var _eedc error ;if !_ega .IsStripe ||_ega .PageBMHeight !=-1{_eedc =_dbccg .createNormalPage (_ega );}else {_eedc =_dbccg .createStripedPage (_ega );};return _eedc ;};func (_beca *Page )lastSegmentNumber ()(_bdbe uint32 ,_bdce error ){const _aef ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_beca .Segments )==0{return _bdbe ,_bf .Errorf (_aef ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_beca .PageNumber );};return _beca .Segments [len (_beca .Segments )-1].SegmentNumber ,nil ;};func (_bbdb *Page )collectPageStripes ()(_fbdf []_eb .Segmenter ,_ebc error ){const _ecbff ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";var _cfd _eb .Segmenter ;for _ ,_gee :=range _bbdb .Segments {switch _gee .Type {case 6,7,22,23,38,39,42,43:_cfd ,_ebc =_gee .GetSegmentData ();if _ebc !=nil {return nil ,_bf .Wrap (_ebc ,_ecbff ,"");};_fbdf =append (_fbdf ,_cfd );case 50:_cfd ,_ebc =_gee .GetSegmentData ();if _ebc !=nil {return nil ,_ebc ;};_becg ,_fcgb :=_cfd .(*_eb .EndOfStripe );if !_fcgb {return nil ,_bf .Errorf (_ecbff ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_cfd );};_fbdf =append (_fbdf ,_becg );_bbdb .FinalHeight =_becg .LineNumber ();};};return _fbdf ,nil ;};type Globals struct{Segments []*_eb .Header ;};func (_gdee *Page )clearSegmentData (){for _eeaf :=range _gdee .Segments {_gdee .Segments [_eeaf ].CleanSegmentData ();};};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_bg :_cf .BufferedMSB (),Pages :map[int ]*Page {},_cg :map[int ][]int {},_ff :map[int ]int {},_a :map[int ][]int {}};};func (_faac *Page )String ()string {return _ee .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_faac .PageNumber );};func (_def *Page )createNormalPage (_acea *_eb .PageInformationSegment )error {const _cca ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";_def .Bitmap =_cd .New (_acea .PageBMWidth ,_acea .PageBMHeight );if _acea .DefaultPixelValue ()!=0{_def .Bitmap .SetDefaultPixel ();};for _ ,_agf :=range _def .Segments {switch _agf .Type {case 6,7,22,23,38,39,42,43:_eed .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_agf .SegmentNumber );_egbe ,_gcf :=_agf .GetSegmentData ();if _gcf !=nil {return _gcf ;};_bcd ,_aead :=_egbe .(_eb .Regioner );if !_aead {_eed .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_egbe );return _bf .Errorf (_cca ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_egbe );};_dcf ,_gcf :=_bcd .GetRegionBitmap ();if _gcf !=nil {return _bf .Wrap (_gcf ,_cca ,"");};if _def .fitsPage (_acea ,_dcf ){_def .Bitmap =_dcf ;}else {_aagg :=_bcd .GetRegionInfo ();_acbad :=_def .getCombinationOperator (_acea ,_aagg .CombinaionOperator );_gcf =_cd .Blit (_dcf ,_def .Bitmap ,int (_aagg .XLocation ),int (_aagg .YLocation ),_acbad );if _gcf !=nil {return _bf .Wrap (_gcf ,_cca ,"");};};};};return nil ;};func (_gccg *Document )encodeSegment (_cge *_eb .Header ,_bbcd *int )error {const _gdbb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_cge .SegmentNumber =_gccg .nextSegmentNumber ();_fb ,_fcb :=_cge .Encode (_gccg ._bg );if _fcb !=nil {return _bf .Wrapf (_fcb ,_gdbb ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_cge .SegmentNumber );};*_bbcd +=_fb ;return nil ;};func (_bcf *Document )encodeEOFHeader (_aeea _cf .BinaryWriter )(_ad int ,_bec error ){_fbe :=&_eb .Header {SegmentNumber :_bcf .nextSegmentNumber (),Type :_eb .TEndOfFile };if _ad ,_bec =_fbe .Encode (_aeea );_bec !=nil {return 0,_bf .Wrap (_bec ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _ad ,nil ;};func (_gdbe *Document )mapData ()error {const _aag ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_gca []*_eb .Header ;_fac int64 ;_cfg _eb .Type ;);_deg ,_gdg :=_gdbe .isFileHeaderPresent ();if _gdg !=nil {return _bf .Wrap (_gdg ,_aag ,"");};if _deg {if _gdg =_gdbe .parseFileHeader ();_gdg !=nil {return _bf .Wrap (_gdg ,_aag ,"");};_fac +=int64 (_gdbe ._ec );_gdbe .FullHeaders =true ;};var (_bcc *Page ;_dbg bool ;);for _cfg !=51&&!_dbg {_abb ,_feb :=_eb .NewHeader (_gdbe ,_gdbe .InputStream ,_fac ,_gdbe .OrganizationType );if _feb !=nil {return _bf .Wrap (_feb ,_aag ,"");};_eed .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_abb .SegmentNumber ,_abb .Type );_cfg =_abb .Type ;if _cfg !=_eb .TEndOfFile {if _abb .PageAssociation !=0{_bcc =_gdbe .Pages [_abb .PageAssociation ];if _bcc ==nil {_bcc =_cea (_gdbe ,_abb .PageAssociation );_gdbe .Pages [_abb .PageAssociation ]=_bcc ;if _gdbe .NumberOfPagesUnknown {_gdbe .NumberOfPages ++;};};_bcc .Segments =append (_bcc .Segments ,_abb );}else {_gdbe .GlobalSegments .AddSegment (_abb );};};_gca =append (_gca ,_abb );_fac =_gdbe .InputStream .StreamPosition ();if _gdbe .OrganizationType ==_eb .OSequential {_fac +=int64 (_abb .SegmentDataLength );};_dbg ,_feb =_gdbe .reachedEOF (_fac );if _feb !=nil {_eed .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_feb );return _bf .Wrap (_feb ,_aag ,"");};};_gdbe .determineRandomDataOffsets (_gca ,uint64 (_fac ));return nil ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream _cf .StreamReader ;GlobalSegments *Globals ;OrganizationType _eb .OrganizationType ;Classer *_be .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_cd .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_ec uint8 ;_bg *_cf .BufferedWriter ;EncodeGlobals bool ;_d int ;_cg map[int ][]int ;_a map[int ][]int ;_bc []int ;_ff map[int ]int ;};func (_fdfa *Page )composePageBitmap ()error {const _cdec ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _fdfa .PageNumber ==0{return nil ;};_ddf :=_fdfa .getPageInformationSegment ();if _ddf ==nil {return _bf .Error (_cdec ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_fedc ,_dfa :=_ddf .GetSegmentData ();if _dfa !=nil {return _dfa ;};_fdd ,_dec :=_fedc .(*_eb .PageInformationSegment );if !_dec {return _bf .Error (_cdec ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};if _dfa =_fdfa .createPage (_fdd );_dfa !=nil {return _bf .Wrap (_dfa ,_cdec ,"");};_fdfa .clearSegmentData ();return nil ;};func (_dbcc *Page )AddPageInformationSegment (){_acbc :=&_eb .PageInformationSegment {PageBMWidth :_dbcc .FinalWidth ,PageBMHeight :_dbcc .FinalHeight ,ResolutionX :_dbcc .ResolutionX ,ResolutionY :_dbcc .ResolutionY ,IsLossless :_dbcc .IsLossless };_ffce :=&_eb .Header {PageAssociation :_dbcc .PageNumber ,SegmentDataLength :uint64 (_acbc .Size ()),SegmentData :_acbc ,Type :_eb .TPageInformation };_dbcc .Segments =append (_dbcc .Segments ,_ffce );};func (_fbce *Page )getResolutionX ()(int ,error ){const _gafb ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _fbce .ResolutionX !=0{return _fbce .ResolutionX ,nil ;};_dcb :=_fbce .getPageInformationSegment ();if _dcb ==nil {return 0,_bf .Error (_gafb ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_aeade ,_cbg :=_dcb .GetSegmentData ();if _cbg !=nil {return 0,_bf .Wrap (_cbg ,_gafb ,"");};_defe ,_bde :=_aeade .(*_eb .PageInformationSegment );if !_bde {return 0,_bf .Errorf (_gafb ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_aeade );};_fbce .ResolutionX =_defe .ResolutionX ;return _fbce .ResolutionX ,nil ;};func (_fcf *Page )nextSegmentNumber ()uint32 {return _fcf .Document .nextSegmentNumber ()};func (_afa *Page )getResolutionY ()(int ,error ){const _egbgc ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _afa .ResolutionY !=0{return _afa .ResolutionY ,nil ;};_geb :=_afa .getPageInformationSegment ();if _geb ==nil {return 0,_bf .Error (_egbgc ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_eff ,_bfbf :=_geb .GetSegmentData ();if _bfbf !=nil {return 0,_bf .Wrap (_bfbf ,_egbgc ,"");};_bag ,_agc :=_eff .(*_eb .PageInformationSegment );if !_agc {return 0,_bf .Errorf (_egbgc ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_eff );};_afa .ResolutionY =_bag .ResolutionY ;return _afa .ResolutionY ,nil ;};func DecodeDocument (input _cf .StreamReader ,globals *Globals )(*Document ,error ){return _bbf (input ,globals );};func (_aa *Document )isFileHeaderPresent ()(bool ,error ){_aa .InputStream .Mark ();for _ ,_cef :=range _fg {_ebb ,_bad :=_aa .InputStream .ReadByte ();if _bad !=nil {return false ,_bad ;};if _cef !=_ebb {_aa .InputStream .Reset ();return false ,nil ;};};_aa .InputStream .Reset ();return true ,nil ;};