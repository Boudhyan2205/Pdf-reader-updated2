//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_b "github.com/unidoc/unipdf/v3/common";_ff "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_bb "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_g "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_f "image";_c "math";);const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);const (MaxDiffWidth =2;MaxDiffHeight =2;);func DefaultSettings ()Settings {_cbg :=&Settings {};_cbg .SetDefault ();return *_cbg };func (_aebg Settings )Validate ()error {const _aaaa ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _aebg .Thresh < 0.4||_aebg .Thresh > 0.98{return _g .Error (_aaaa ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");};if _aebg .WeightFactor < 0.0||_aebg .WeightFactor > 1.0{return _g .Error (_aaaa ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _aebg .RankHaus < 0.5||_aebg .RankHaus > 1.0{return _g .Error (_aaaa ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _aebg .SizeHaus < 1||_aebg .SizeHaus > 10{return _g .Error (_aaaa ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");};switch _aebg .Components {case _bb .ComponentConn ,_bb .ComponentCharacters ,_bb .ComponentWords :default:return _g .Error (_aaaa ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");};return nil ;};func (_gefd *Classer )classifyRankHaus (_bga *_bb .Boxes ,_cgb *_bb .Bitmaps ,_baf int )error {const _ec ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _bga ==nil {return _g .Error (_ec ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _cgb ==nil {return _g .Error (_ec ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_fced :=len (_cgb .Values );if _fced ==0{return _g .Error (_ec ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_efa :=_cgb .CountPixels ();_gbed :=_gefd .Settings .SizeHaus ;_bbd :=_bb .SelCreateBrick (_gbed ,_gbed ,_gbed /2,_gbed /2,_bb .SelHit );_de :=&_bb .Bitmaps {Values :make ([]*_bb .Bitmap ,_fced )};_cad :=&_bb .Bitmaps {Values :make ([]*_bb .Bitmap ,_fced )};var (_dba ,_aaf ,_cff *_bb .Bitmap ;_agd error ;);for _egf :=0;_egf < _fced ;_egf ++{_dba ,_agd =_cgb .GetBitmap (_egf );if _agd !=nil {return _g .Wrap (_agd ,_ec ,"");};_aaf ,_agd =_dba .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _agd !=nil {return _g .Wrap (_agd ,_ec ,"");};_cff ,_agd =_bb .Dilate (nil ,_aaf ,_bbd );if _agd !=nil {return _g .Wrap (_agd ,_ec ,"");};_de .Values [_fced ]=_aaf ;_cad .Values [_fced ]=_cff ;};_eaf ,_agd :=_bb .Centroids (_de .Values );if _agd !=nil {return _g .Wrap (_agd ,_ec ,"");};if _agd =_eaf .Add (_gefd .CentroidPoints );_agd !=nil {_b .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _gefd .Settings .RankHaus ==1.0{_agd =_gefd .classifyRankHouseOne (_bga ,_cgb ,_de ,_cad ,_eaf ,_baf );}else {_agd =_gefd .classifyRankHouseNonOne (_bga ,_cgb ,_de ,_cad ,_eaf ,_efa ,_baf );};if _agd !=nil {return _g .Wrap (_agd ,_ec ,"");};return nil ;};func (_d *Classer )AddPage (inputPage *_bb .Bitmap ,pageNumber int ,method Method )(_bbb error ){const _gba ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_d .Widths [pageNumber ]=inputPage .Width ;_d .Heights [pageNumber ]=inputPage .Height ;if _bbb =_d .verifyMethod (method );_bbb !=nil {return _g .Wrap (_bbb ,_gba ,"");};_ee ,_a ,_bbb :=inputPage .GetComponents (_d .Settings .Components ,_d .Settings .MaxCompWidth ,_d .Settings .MaxCompHeight );if _bbb !=nil {return _g .Wrap (_bbb ,_gba ,"");};_b .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ee );if _bbb =_d .addPageComponents (inputPage ,_a ,_ee ,pageNumber ,method );_bbb !=nil {return _g .Wrap (_bbb ,_gba ,"");};return nil ;};const (RankHaus Method =iota ;Correlation ;);func (_efg *Classer )classifyRankHouseOne (_gff *_bb .Boxes ,_gad ,_bed ,_dbac *_bb .Bitmaps ,_dgg *_bb .Points ,_bccc int )(_dff error ){const _fe ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_cfea ,_dcb ,_efca ,_bbaa float32 ;_fge int ;_fgg ,_dbd ,_dagf ,_ebd ,_dafe *_bb .Bitmap ;_bgac ,_fea bool ;);for _bgc :=0;_bgc < len (_gad .Values );_bgc ++{_dbd =_bed .Values [_bgc ];_dagf =_dbac .Values [_bgc ];_cfea ,_dcb ,_dff =_dgg .GetGeometry (_bgc );if _dff !=nil {return _g .Wrapf (_dff ,_fe ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_edd :=len (_efg .UndilatedTemplates .Values );_bgac =false ;_fbe :=_deb (_efg ,_dbd );for _fge =_fbe .Next ();_fge > -1;{_ebd ,_dff =_efg .UndilatedTemplates .GetBitmap (_fge );if _dff !=nil {return _g .Wrap (_dff ,_fe ,"\u0062\u006d\u0033");};_dafe ,_dff =_efg .DilatedTemplates .GetBitmap (_fge );if _dff !=nil {return _g .Wrap (_dff ,_fe ,"\u0062\u006d\u0034");};_efca ,_bbaa ,_dff =_efg .CentroidPointsTemplates .GetGeometry (_fge );if _dff !=nil {return _g .Wrap (_dff ,_fe ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_fea ,_dff =_bb .HausTest (_dbd ,_dagf ,_ebd ,_dafe ,_cfea -_efca ,_dcb -_bbaa ,MaxDiffWidth ,MaxDiffHeight );if _dff !=nil {return _g .Wrap (_dff ,_fe ,"");};if _fea {_bgac =true ;if _dff =_efg .ClassIDs .Add (_fge );_dff !=nil {return _g .Wrap (_dff ,_fe ,"");};if _dff =_efg .ComponentPageNumbers .Add (_bccc );_dff !=nil {return _g .Wrap (_dff ,_fe ,"");};if _efg .Settings .KeepClassInstances {_gcf ,_ggg :=_efg .ClassInstances .GetBitmaps (_fge );if _ggg !=nil {return _g .Wrap (_ggg ,_fe ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_fgg ,_ggg =_gad .GetBitmap (_bgc );if _ggg !=nil {return _g .Wrap (_ggg ,_fe ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_gcf .AddBitmap (_fgg );_bgag ,_ggg :=_gff .Get (_bgc );if _ggg !=nil {return _g .Wrap (_ggg ,_fe ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_gcf .AddBox (_bgag );};break ;};};if !_bgac {if _dff =_efg .ClassIDs .Add (_edd );_dff !=nil {return _g .Wrap (_dff ,_fe ,"");};if _dff =_efg .ComponentPageNumbers .Add (_bccc );_dff !=nil {return _g .Wrap (_dff ,_fe ,"");};_fbb :=&_bb .Bitmaps {};_fgg ,_dff =_gad .GetBitmap (_bgc );if _dff !=nil {return _g .Wrap (_dff ,_fe ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fbb .Values =append (_fbb .Values ,_fgg );_ecg ,_fggb :=_fgg .Width ,_fgg .Height ;_efg .TemplatesSize .Add (uint64 (_fggb )*uint64 (_ecg ),_edd );_baa ,_cgg :=_gff .Get (_bgc );if _cgg !=nil {return _g .Wrap (_cgg ,_fe ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fbb .AddBox (_baa );_efg .ClassInstances .AddBitmaps (_fbb );_efg .CentroidPointsTemplates .AddPoint (_cfea ,_dcb );_efg .UndilatedTemplates .AddBitmap (_dbd );_efg .DilatedTemplates .AddBitmap (_dagf );};};return nil ;};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_ff .IntSlice ;TemplateAreas *_ff .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_bb .BitmapsArray ;UndilatedTemplates *_bb .Bitmaps ;DilatedTemplates *_bb .Bitmaps ;TemplatesSize _ff .IntsMap ;FgTemplates *_ff .NumSlice ;CentroidPoints *_bb .Points ;CentroidPointsTemplates *_bb .Points ;ClassIDs *_ff .IntSlice ;ComponentPageNumbers *_ff .IntSlice ;PtaUL *_bb .Points ;PtaLL *_bb .Points ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_fff *Classer )addPageComponents (_aba *_bb .Bitmap ,_fg *_bb .Boxes ,_gg *_bb .Bitmaps ,_bc int ,_dg Method )error {const _fb ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";if _aba ==nil {return _g .Error (_fb ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _fg ==nil ||_gg ==nil ||len (*_fg )==0{_b .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_aba );return nil ;};var _fc error ;switch _dg {case RankHaus :_fc =_fff .classifyRankHaus (_fg ,_gg ,_bc );case Correlation :_fc =_fff .classifyCorrelation (_fg ,_gg ,_bc );default:_b .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_dg );return _g .Error (_fb ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _fc !=nil {return _g .Wrap (_fc ,_fb ,"");};if _fc =_fff .getULCorners (_aba ,_fg );_fc !=nil {return _g .Wrap (_fc ,_fb ,"");};_cbb :=len (*_fg );_fff .BaseIndex +=_cbb ;if _fc =_fff .ComponentsNumber .Add (_cbb );_fc !=nil {return _g .Wrap (_fc ,_fb ,"");};return nil ;};func Init (settings Settings )(*Classer ,error ){const _ffe ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_gc :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_ff .IntsMap {},TemplateAreas :&_ff .IntSlice {},ComponentPageNumbers :&_ff .IntSlice {},ClassIDs :&_ff .IntSlice {},ComponentsNumber :&_ff .IntSlice {},CentroidPoints :&_bb .Points {},CentroidPointsTemplates :&_bb .Points {},UndilatedTemplates :&_bb .Bitmaps {},DilatedTemplates :&_bb .Bitmaps {},ClassInstances :&_bb .BitmapsArray {},FgTemplates :&_ff .NumSlice {}};if _gb :=_gc .Settings .Validate ();_gb !=nil {return nil ,_g .Wrap (_gb ,_ffe ,"");};return _gc ,nil ;};func (_fcd *Classer )verifyMethod (_fcg Method )error {if _fcg !=RankHaus &&_fcg !=Correlation {return _g .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");};return nil ;};func (_ggf *Settings )SetDefault (){if _ggf .MaxCompWidth ==0{switch _ggf .Components {case _bb .ComponentConn :_ggf .MaxCompWidth =MaxConnCompWidth ;case _bb .ComponentCharacters :_ggf .MaxCompWidth =MaxCharCompWidth ;case _bb .ComponentWords :_ggf .MaxCompWidth =MaxWordCompWidth ;};};if _ggf .MaxCompHeight ==0{_ggf .MaxCompHeight =MaxCompHeight ;};if _ggf .Thresh ==0.0{_ggf .Thresh =0.9;};if _ggf .WeightFactor ==0.0{_ggf .WeightFactor =0.75;};if _ggf .RankHaus ==0.0{_ggf .RankHaus =0.97;};if _ggf .SizeHaus ==0{_ggf .SizeHaus =2;};};var _bag bool ;const JbAddedPixels =6;func _deb (_fae *Classer ,_abg *_bb .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_abg .Width ,Height :_abg .Height ,Classer :_fae };};func (_ded *similarTemplatesFinder )Next ()int {var (_bcf ,_gcae ,_bbae ,_bfd int ;_beea bool ;_dbee *_bb .Bitmap ;_dafa error ;);for {if _ded .Index >=25{return -1;};_gcae =_ded .Width +TwoByTwoWalk [2*_ded .Index ];_bcf =_ded .Height +TwoByTwoWalk [2*_ded .Index +1];if _bcf < 1||_gcae < 1{_ded .Index ++;continue ;};if len (_ded .CurrentNumbers )==0{_ded .CurrentNumbers ,_beea =_ded .Classer .TemplatesSize .GetSlice (uint64 (_gcae )*uint64 (_bcf ));if !_beea {_ded .Index ++;continue ;};_ded .N =0;};_bbae =len (_ded .CurrentNumbers );for ;_ded .N < _bbae ;_ded .N ++{_bfd =_ded .CurrentNumbers [_ded .N ];_dbee ,_dafa =_ded .Classer .DilatedTemplates .GetBitmap (_bfd );if _dafa !=nil {_b .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");return 0;};if _dbee .Width -2*JbAddedPixels ==_gcae &&_dbee .Height -2*JbAddedPixels ==_bcf {return _bfd ;};};_ded .Index ++;_ded .CurrentNumbers =nil ;};};func _eac (_ad *_bb .Bitmap ,_eb ,_gfb ,_fcf ,_da int ,_ba *_bb .Bitmap )(_cfe _f .Point ,_bg error ){const _dag ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";if _ad ==nil {return _cfe ,_g .Error (_dag ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _ba ==nil {return _cfe ,_g .Error (_dag ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");};_dc ,_fa :=_ba .Width ,_ba .Height ;_cd ,_cec :=_eb -_fcf -JbAddedPixels ,_gfb -_da -JbAddedPixels ;_b .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_eb ,_gfb ,_dc ,_fa ,_cd ,_cec );_fcfb ,_bg :=_bb .Rect (_cd ,_cec ,_dc ,_fa );if _bg !=nil {return _cfe ,_g .Wrap (_bg ,_dag ,"");};_bcc ,_ ,_bg :=_ad .ClipRectangle (_fcfb );if _bg !=nil {_b .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_fcfb );return _cfe ,_g .Wrap (_bg ,_dag ,"");};_bd :=_bb .New (_bcc .Width ,_bcc .Height );_fab :=_c .MaxInt32 ;var _bgd ,_cg ,_bbg ,_fcb ,_geb int ;for _bgd =-1;_bgd <=1;_bgd ++{for _cg =-1;_cg <=1;_cg ++{if _ ,_bg =_bb .Copy (_bd ,_bcc );_bg !=nil {return _cfe ,_g .Wrap (_bg ,_dag ,"");};if _bg =_bd .RasterOperation (_cg ,_bgd ,_dc ,_fa ,_bb .PixSrcXorDst ,_ba ,0,0);_bg !=nil {return _cfe ,_g .Wrap (_bg ,_dag ,"");};_bbg =_bd .CountPixels ();if _bbg < _fab {_fcb =_cg ;_geb =_bgd ;_fab =_bbg ;};};};_cfe .X =_fcb ;_cfe .Y =_geb ;return _cfe ,nil ;};func (_cc *Classer )ComputeLLCorners ()(_ea error ){const _cb ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _cc .PtaUL ==nil {return _g .Error (_cb ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_fd :=len (*_cc .PtaUL );_cc .PtaLL =&_bb .Points {};var (_ab ,_df float32 ;_gca ,_ef int ;_gbf *_bb .Bitmap ;);for _cf :=0;_cf < _fd ;_cf ++{_ab ,_df ,_ea =_cc .PtaUL .GetGeometry (_cf );if _ea !=nil {_b .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ea );return _g .Wrap (_ea ,_cb ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_gca ,_ea =_cc .ClassIDs .Get (_cf );if _ea !=nil {_b .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_ea );return _g .Wrap (_ea ,_cb ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_gbf ,_ea =_cc .UndilatedTemplates .GetBitmap (_gca );if _ea !=nil {_b .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ea );return _g .Wrap (_ea ,_cb ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_ef =_gbf .Height ;_cc .PtaLL .AddPoint (_ab ,_df +float32 (_ef ));};return nil ;};func (_ce *Classer )getULCorners (_fdb *_bb .Bitmap ,_bf *_bb .Boxes )error {const _db ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _fdb ==nil {return _g .Error (_db ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _bf ==nil {return _g .Error (_db ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _ce .PtaUL ==nil {_ce .PtaUL =&_bb .Points {};};_aa :=len (*_bf );var (_bfg ,_gf ,_aac ,_ffg int ;_bcg ,_ffa ,_ag ,_dfb float32 ;_ge error ;_ae *_f .Rectangle ;_abad *_bb .Bitmap ;_fcc _f .Point ;);for _aee :=0;_aee < _aa ;_aee ++{_bfg =_ce .BaseIndex +_aee ;if _bcg ,_ffa ,_ge =_ce .CentroidPoints .GetGeometry (_bfg );_ge !=nil {return _g .Wrap (_ge ,_db ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _gf ,_ge =_ce .ClassIDs .Get (_bfg );_ge !=nil {return _g .Wrap (_ge ,_db ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _ag ,_dfb ,_ge =_ce .CentroidPointsTemplates .GetGeometry (_gf );_ge !=nil {return _g .Wrap (_ge ,_db ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_cba :=_ag -_bcg ;_gbfe :=_dfb -_ffa ;if _cba >=0{_aac =int (_cba +0.5);}else {_aac =int (_cba -0.5);};if _gbfe >=0{_ffg =int (_gbfe +0.5);}else {_ffg =int (_gbfe -0.5);};if _ae ,_ge =_bf .Get (_aee );_ge !=nil {return _g .Wrap (_ge ,_db ,"");};_gce ,_ggb :=_ae .Min .X ,_ae .Min .Y ;_abad ,_ge =_ce .UndilatedTemplates .GetBitmap (_gf );if _ge !=nil {return _g .Wrap (_ge ,_db ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");};_fcc ,_ge =_eac (_fdb ,_gce ,_ggb ,_aac ,_ffg ,_abad );if _ge !=nil {return _g .Wrap (_ge ,_db ,"");};_ce .PtaUL .AddPoint (float32 (_gce -_aac +_fcc .X ),float32 (_ggb -_ffg +_fcc .Y ));};return nil ;};type Method int ;type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func (_gfbe *Classer )classifyCorrelation (_dfc *_bb .Boxes ,_beg *_bb .Bitmaps ,_gd int )error {const _fag ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _dfc ==nil {return _g .Error (_fag ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");};if _beg ==nil {return _g .Error (_fag ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_cdd :=len (_beg .Values );if _cdd ==0{_b .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");return nil ;};var (_daf ,_af *_bb .Bitmap ;_ced error ;);_ffc :=&_bb .Bitmaps {Values :make ([]*_bb .Bitmap ,_cdd )};for _cedg ,_bab :=range _beg .Values {_af ,_ced =_bab .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _ced !=nil {return _g .Wrap (_ced ,_fag ,"");};_ffc .Values [_cedg ]=_af ;};_cbae :=_gfbe .FgTemplates ;_dafc :=_bb .MakePixelSumTab8 ();_gda :=_bb .MakePixelCentroidTab8 ();_bcca :=make ([]int ,_cdd );_bccb :=make ([][]int ,_cdd );_bac :=_bb .Points (make ([]_bb .Point ,_cdd ));_fdf :=&_bac ;var (_gfg ,_eg int ;_bacg ,_dbe ,_bba int ;_ga ,_bec int ;_efc byte ;);for _eaa ,_ade :=range _ffc .Values {_bccb [_eaa ]=make ([]int ,_ade .Height );_gfg =0;_eg =0;_dbe =(_ade .Height -1)*_ade .RowStride ;_bacg =0;for _bec =_ade .Height -1;_bec >=0;_bec ,_dbe =_bec -1,_dbe -_ade .RowStride {_bccb [_eaa ][_bec ]=_bacg ;_bba =0;for _ga =0;_ga < _ade .RowStride ;_ga ++{_efc =_ade .Data [_dbe +_ga ];_bba +=_dafc [_efc ];_gfg +=_gda [_efc ]+_ga *8*_dafc [_efc ];};_bacg +=_bba ;_eg +=_bba *_bec ;};_bcca [_eaa ]=_bacg ;if _bacg > 0{(*_fdf )[_eaa ]=_bb .Point {X :float32 (_gfg )/float32 (_bacg ),Y :float32 (_eg )/float32 (_bacg )};}else {(*_fdf )[_eaa ]=_bb .Point {X :float32 (_ade .Width )/float32 (2),Y :float32 (_ade .Height )/float32 (2)};};};if _ced =_gfbe .CentroidPoints .Add (_fdf );_ced !=nil {return _g .Wrap (_ced ,_fag ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_bee ,_bbc ,_gbe int ;_aab float64 ;_dafd ,_bcgd ,_aef ,_fccg float32 ;_bccbg ,_gga _bb .Point ;_ged bool ;_cfef *similarTemplatesFinder ;_abd int ;_bfb *_bb .Bitmap ;_aaa *_f .Rectangle ;_gcb *_bb .Bitmaps ;);for _abd ,_af =range _ffc .Values {_bbc =_bcca [_abd ];if _dafd ,_bcgd ,_ced =_fdf .GetGeometry (_abd );_ced !=nil {return _g .Wrap (_ced ,_fag ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_ged =false ;_dbb :=len (_gfbe .UndilatedTemplates .Values );_cfef =_deb (_gfbe ,_af );for _gcba :=_cfef .Next ();_gcba > -1;{if _bfb ,_ced =_gfbe .UndilatedTemplates .GetBitmap (_gcba );_ced !=nil {return _g .Wrap (_ced ,_fag ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _gbe ,_ced =_cbae .GetInt (_gcba );_ced !=nil {_b .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ced );};if _aef ,_fccg ,_ced =_gfbe .CentroidPointsTemplates .GetGeometry (_gcba );_ced !=nil {return _g .Wrap (_ced ,_fag ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");};if _gfbe .Settings .WeightFactor > 0.0{if _bee ,_ced =_gfbe .TemplateAreas .Get (_gcba );_ced !=nil {_b .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_ced );};_aab =_gfbe .Settings .Thresh +(1.0-_gfbe .Settings .Thresh )*_gfbe .Settings .WeightFactor *float64 (_gbe )/float64 (_bee );}else {_aab =_gfbe .Settings .Thresh ;};_fcgd ,_cdf :=_bb .CorrelationScoreThresholded (_af ,_bfb ,_bbc ,_gbe ,_bccbg .X -_gga .X ,_bccbg .Y -_gga .Y ,MaxDiffWidth ,MaxDiffHeight ,_dafc ,_bccb [_abd ],float32 (_aab ));if _cdf !=nil {return _g .Wrap (_cdf ,_fag ,"");};if _bag {var (_gef ,_ed float64 ;_ffea ,_ca int ;);_gef ,_cdf =_bb .CorrelationScore (_af ,_bfb ,_bbc ,_gbe ,_dafd -_aef ,_bcgd -_fccg ,MaxDiffWidth ,MaxDiffHeight ,_dafc );if _cdf !=nil {return _g .Wrap (_cdf ,_fag ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_ed ,_cdf =_bb .CorrelationScoreSimple (_af ,_bfb ,_bbc ,_gbe ,_dafd -_aef ,_bcgd -_fccg ,MaxDiffWidth ,MaxDiffHeight ,_dafc );if _cdf !=nil {return _g .Wrap (_cdf ,_fag ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_ffea =int (_c .Sqrt (_gef *float64 (_bbc )*float64 (_gbe )));_ca =int (_c .Sqrt (_ed *float64 (_bbc )*float64 (_gbe )));if (_gef >=_aab )!=(_ed >=_aab ){return _g .Errorf (_fag ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_ffea ,_gef ,_gef >=float64 (_aab ),_ca ,_ed ,_ed >=float64 (_aab ),_gef -_ed );};if _gef >=_aab !=_fcgd {return _g .Errorf (_fag ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_gef ,_gef *float64 (_bbc )*float64 (_gbe ),_ffea ,_aab ,float32 (_aab )*float32 (_bbc )*float32 (_gbe ),_fcgd );};};if _fcgd {_ged =true ;if _cdf =_gfbe .ClassIDs .Add (_gcba );_cdf !=nil {return _g .Wrap (_cdf ,_fag ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _cdf =_gfbe .ComponentPageNumbers .Add (_gd );_cdf !=nil {return _g .Wrap (_cdf ,_fag ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _gfbe .Settings .KeepClassInstances {if _daf ,_cdf =_beg .GetBitmap (_abd );_cdf !=nil {return _g .Wrap (_cdf ,_fag ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _gcb ,_cdf =_gfbe .ClassInstances .GetBitmaps (_gcba );_cdf !=nil {return _g .Wrap (_cdf ,_fag ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_gcb .AddBitmap (_daf );if _aaa ,_cdf =_dfc .Get (_abd );_cdf !=nil {return _g .Wrap (_cdf ,_fag ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");};_gcb .AddBox (_aaa );};break ;};};if !_ged {if _ced =_gfbe .ClassIDs .Add (_dbb );_ced !=nil {return _g .Wrap (_ced ,_fag ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _ced =_gfbe .ComponentPageNumbers .Add (_gd );_ced !=nil {return _g .Wrap (_ced ,_fag ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gcb =&_bb .Bitmaps {};if _daf ,_ced =_beg .GetBitmap (_abd );_ced !=nil {return _g .Wrap (_ced ,_fag ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gcb .AddBitmap (_daf );_fce ,_ac :=_daf .Width ,_daf .Height ;_bea :=uint64 (_ac )*uint64 (_fce );_gfbe .TemplatesSize .Add (_bea ,_dbb );if _aaa ,_ced =_dfc .Get (_abd );_ced !=nil {return _g .Wrap (_ced ,_fag ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gcb .AddBox (_aaa );_gfbe .ClassInstances .AddBitmaps (_gcb );_gfbe .CentroidPointsTemplates .AddPoint (_dafd ,_bcgd );_gfbe .FgTemplates .AddInt (_bbc );_gfbe .UndilatedTemplates .AddBitmap (_daf );_bee =(_af .Width -2*JbAddedPixels )*(_af .Height -2*JbAddedPixels );if _ced =_gfbe .TemplateAreas .Add (_bee );_ced !=nil {return _g .Wrap (_ced ,_fag ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_gfbe .NumberOfClasses =len (_gfbe .UndilatedTemplates .Values );return nil ;};func (_ebb *Classer )classifyRankHouseNonOne (_cca *_bb .Boxes ,_fgc ,_gdf ,_feb *_bb .Bitmaps ,_afb *_bb .Points ,_gea *_ff .NumSlice ,_aeb int )(_bbgd error ){const _abe ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_bef ,_bbgdb ,_fec ,_edc float32 ;_dgd ,_gfba ,_gae int ;_ace ,_gdd ,_dfbe ,_aca ,_dbbb *_bb .Bitmap ;_ccg ,_fdg bool ;);_egd :=_bb .MakePixelSumTab8 ();for _aed :=0;_aed < len (_fgc .Values );_aed ++{if _gdd ,_bbgd =_gdf .GetBitmap (_aed );_bbgd !=nil {return _g .Wrap (_bbgd ,_abe ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _dgd ,_bbgd =_gea .GetInt (_aed );_bbgd !=nil {_b .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_aed ,_bbgd );};if _dfbe ,_bbgd =_feb .GetBitmap (_aed );_bbgd !=nil {return _g .Wrap (_bbgd ,_abe ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _bef ,_bbgdb ,_bbgd =_afb .GetGeometry (_aed );_bbgd !=nil {return _g .Wrapf (_bbgd ,_abe ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");};_adb :=len (_ebb .UndilatedTemplates .Values );_ccg =false ;_dcf :=_deb (_ebb ,_gdd );for _gae =_dcf .Next ();_gae > -1;{if _aca ,_bbgd =_ebb .UndilatedTemplates .GetBitmap (_gae );_bbgd !=nil {return _g .Wrap (_bbgd ,_abe ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _gfba ,_bbgd =_ebb .FgTemplates .GetInt (_gae );_bbgd !=nil {_b .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_gae ,_bbgd );};if _dbbb ,_bbgd =_ebb .DilatedTemplates .GetBitmap (_gae );_bbgd !=nil {return _g .Wrap (_bbgd ,_abe ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _fec ,_edc ,_bbgd =_ebb .CentroidPointsTemplates .GetGeometry (_gae );_bbgd !=nil {return _g .Wrap (_bbgd ,_abe ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_fdg ,_bbgd =_bb .RankHausTest (_gdd ,_dfbe ,_aca ,_dbbb ,_bef -_fec ,_bbgdb -_edc ,MaxDiffWidth ,MaxDiffHeight ,_dgd ,_gfba ,float32 (_ebb .Settings .RankHaus ),_egd );if _bbgd !=nil {return _g .Wrap (_bbgd ,_abe ,"");};if _fdg {_ccg =true ;if _bbgd =_ebb .ClassIDs .Add (_gae );_bbgd !=nil {return _g .Wrap (_bbgd ,_abe ,"");};if _bbgd =_ebb .ComponentPageNumbers .Add (_aeb );_bbgd !=nil {return _g .Wrap (_bbgd ,_abe ,"");};if _ebb .Settings .KeepClassInstances {_gbb ,_bcgb :=_ebb .ClassInstances .GetBitmaps (_gae );if _bcgb !=nil {return _g .Wrap (_bcgb ,_abe ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");};if _ace ,_bcgb =_fgc .GetBitmap (_aed );_bcgb !=nil {return _g .Wrap (_bcgb ,_abe ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_gbb .Values =append (_gbb .Values ,_ace );_ccf ,_bcgb :=_cca .Get (_aed );if _bcgb !=nil {return _g .Wrap (_bcgb ,_abe ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};_gbb .Boxes =append (_gbb .Boxes ,_ccf );};break ;};};if !_ccg {if _bbgd =_ebb .ClassIDs .Add (_adb );_bbgd !=nil {return _g .Wrap (_bbgd ,_abe ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bbgd =_ebb .ComponentPageNumbers .Add (_aeb );_bbgd !=nil {return _g .Wrap (_bbgd ,_abe ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ecb :=&_bb .Bitmaps {};_ace =_fgc .Values [_aed ];_ecb .AddBitmap (_ace );_dfd ,_gffb :=_ace .Width ,_ace .Height ;_ebb .TemplatesSize .Add (uint64 (_dfd )*uint64 (_gffb ),_adb );_adbd ,_dbf :=_cca .Get (_aed );if _dbf !=nil {return _g .Wrap (_dbf ,_abe ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ecb .AddBox (_adbd );_ebb .ClassInstances .AddBitmaps (_ecb );_ebb .CentroidPointsTemplates .AddPoint (_bef ,_bbgdb );_ebb .UndilatedTemplates .AddBitmap (_gdd );_ebb .DilatedTemplates .AddBitmap (_dfbe );_ebb .FgTemplates .AddInt (_dgd );};};_ebb .NumberOfClasses =len (_ebb .UndilatedTemplates .Values );return nil ;};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _bb .Component ;Method Method ;};