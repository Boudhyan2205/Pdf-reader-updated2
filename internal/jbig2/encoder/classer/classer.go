//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_cg "github.com/unidoc/unipdf/v3/common";_e "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_dg "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_b "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_d "image";_f "math";
);func (_ca *Classer )ComputeLLCorners ()(_dfd error ){const _da ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _ca .PtaUL ==nil {return _b .Error (_da ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");
};_eff :=len (*_ca .PtaUL );_ca .PtaLL =&_dg .Points {};var (_a ,_cea float32 ;_caf ,_bc int ;_ed *_dg .Bitmap ;);for _cc :=0;_cc < _eff ;_cc ++{_a ,_cea ,_dfd =_ca .PtaUL .GetGeometry (_cc );if _dfd !=nil {_cg .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_dfd );
return _b .Wrap (_dfd ,_da ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_caf ,_dfd =_ca .ClassIDs .Get (_cc );if _dfd !=nil {_cg .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_dfd );
return _b .Wrap (_dfd ,_da ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_ed ,_dfd =_ca .UndilatedTemplates .GetBitmap (_caf );if _dfd !=nil {_cg .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_dfd );
return _b .Wrap (_dfd ,_da ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_bc =_ed .Height ;_ca .PtaLL .AddPoint (_a ,_cea +float32 (_bc ));};return nil ;};func (_dad *Classer )addPageComponents (_dc *_dg .Bitmap ,_aa *_dg .Boxes ,_bd *_dg .Bitmaps ,_be int ,_fc Method )error {const _ebb ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _dc ==nil {return _b .Error (_ebb ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _aa ==nil ||_bd ==nil ||len (*_aa )==0{_cg .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_dc );
return nil ;};var _db error ;switch _fc {case RankHaus :_db =_dad .classifyRankHaus (_aa ,_bd ,_be );case Correlation :_db =_dad .classifyCorrelation (_aa ,_bd ,_be );default:_cg .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_fc );
return _b .Error (_ebb ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _db !=nil {return _b .Wrap (_db ,_ebb ,"");};if _db =_dad .getULCorners (_dc ,_aa );_db !=nil {return _b .Wrap (_db ,_ebb ,"");
};_effe :=len (*_aa );_dad .BaseIndex +=_effe ;if _db =_dad .ComponentsNumber .Add (_effe );_db !=nil {return _b .Wrap (_db ,_ebb ,"");};return nil ;};func (_dbfa *Classer )classifyCorrelation (_aac *_dg .Boxes ,_ge *_dg .Bitmaps ,_fgec int )error {const _bec ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _aac ==nil {return _b .Error (_bec ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _ge ==nil {return _b .Error (_bec ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_befg :=len (_ge .Values );if _befg ==0{_cg .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_ag ,_af *_dg .Bitmap ;_fb error ;);_ccc :=&_dg .Bitmaps {Values :make ([]*_dg .Bitmap ,_befg )};for _adc ,_aaca :=range _ge .Values {_af ,_fb =_aaca .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _fb !=nil {return _b .Wrap (_fb ,_bec ,"");
};_ccc .Values [_adc ]=_af ;};_fd :=_dbfa .FgTemplates ;_acd :=_dg .MakePixelSumTab8 ();_bad :=_dg .MakePixelCentroidTab8 ();_aag :=make ([]int ,_befg );_bda :=make ([][]int ,_befg );_dgf :=_dg .Points (make ([]_dg .Point ,_befg ));_bdab :=&_dgf ;var (_gea ,_cba int ;
_dab ,_cfg ,_ecc int ;_ebd ,_befa int ;_ade byte ;);for _efg ,_acc :=range _ccc .Values {_bda [_efg ]=make ([]int ,_acc .Height );_gea =0;_cba =0;_cfg =(_acc .Height -1)*_acc .RowStride ;_dab =0;for _befa =_acc .Height -1;_befa >=0;_befa ,_cfg =_befa -1,_cfg -_acc .RowStride {_bda [_efg ][_befa ]=_dab ;
_ecc =0;for _ebd =0;_ebd < _acc .RowStride ;_ebd ++{_ade =_acc .Data [_cfg +_ebd ];_ecc +=_acd [_ade ];_gea +=_bad [_ade ]+_ebd *8*_acd [_ade ];};_dab +=_ecc ;_cba +=_ecc *_befa ;};_aag [_efg ]=_dab ;if _dab > 0{(*_bdab )[_efg ]=_dg .Point {X :float32 (_gea )/float32 (_dab ),Y :float32 (_cba )/float32 (_dab )};
}else {(*_bdab )[_efg ]=_dg .Point {X :float32 (_acc .Width )/float32 (2),Y :float32 (_acc .Height )/float32 (2)};};};if _fb =_dbfa .CentroidPoints .Add (_bdab );_fb !=nil {return _b .Wrap (_fb ,_bec ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");
};var (_fag ,_bce ,_cbg int ;_aga float64 ;_eba ,_baf ,_gc ,_gf float32 ;_aca ,_egg _dg .Point ;_deb bool ;_ecb *similarTemplatesFinder ;_adcc int ;_gd *_dg .Bitmap ;_fce *_d .Rectangle ;_gbd *_dg .Bitmaps ;);for _adcc ,_af =range _ccc .Values {_bce =_aag [_adcc ];
if _eba ,_baf ,_fb =_bdab .GetGeometry (_adcc );_fb !=nil {return _b .Wrap (_fb ,_bec ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_deb =false ;_cbaa :=len (_dbfa .UndilatedTemplates .Values );_ecb =_gfa (_dbfa ,_af );for _fbb :=_ecb .Next ();_fbb > -1;
{if _gd ,_fb =_dbfa .UndilatedTemplates .GetBitmap (_fbb );_fb !=nil {return _b .Wrap (_fb ,_bec ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _cbg ,_fb =_fd .GetInt (_fbb );
_fb !=nil {_cg .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fb );};if _gc ,_gf ,_fb =_dbfa .CentroidPointsTemplates .GetGeometry (_fbb );
_fb !=nil {return _b .Wrap (_fb ,_bec ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _dbfa .Settings .WeightFactor > 0.0{if _fag ,_fb =_dbfa .TemplateAreas .Get (_fbb );_fb !=nil {_cg .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_fb );
};_aga =_dbfa .Settings .Thresh +(1.0-_dbfa .Settings .Thresh )*_dbfa .Settings .WeightFactor *float64 (_cbg )/float64 (_fag );}else {_aga =_dbfa .Settings .Thresh ;};_gec ,_caa :=_dg .CorrelationScoreThresholded (_af ,_gd ,_bce ,_cbg ,_aca .X -_egg .X ,_aca .Y -_egg .Y ,MaxDiffWidth ,MaxDiffHeight ,_acd ,_bda [_adcc ],float32 (_aga ));
if _caa !=nil {return _b .Wrap (_caa ,_bec ,"");};if _defa {var (_cda ,_gda float64 ;_aee ,_aab int ;);_cda ,_caa =_dg .CorrelationScore (_af ,_gd ,_bce ,_cbg ,_eba -_gc ,_baf -_gf ,MaxDiffWidth ,MaxDiffHeight ,_acd );if _caa !=nil {return _b .Wrap (_caa ,_bec ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_gda ,_caa =_dg .CorrelationScoreSimple (_af ,_gd ,_bce ,_cbg ,_eba -_gc ,_baf -_gf ,MaxDiffWidth ,MaxDiffHeight ,_acd );if _caa !=nil {return _b .Wrap (_caa ,_bec ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_aee =int (_f .Sqrt (_cda *float64 (_bce )*float64 (_cbg )));_aab =int (_f .Sqrt (_gda *float64 (_bce )*float64 (_cbg )));if (_cda >=_aga )!=(_gda >=_aga ){return _b .Errorf (_bec ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_aee ,_cda ,_cda >=_aga ,_aab ,_gda ,_gda >=_aga ,_cda -_gda );
};if _cda >=_aga !=_gec {return _b .Errorf (_bec ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_cda ,_cda *float64 (_bce )*float64 (_cbg ),_aee ,_aga ,float32 (_aga )*float32 (_bce )*float32 (_cbg ),_gec );
};};if _gec {_deb =true ;if _caa =_dbfa .ClassIDs .Add (_fbb );_caa !=nil {return _b .Wrap (_caa ,_bec ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _caa =_dbfa .ComponentPageNumbers .Add (_fgec );_caa !=nil {return _b .Wrap (_caa ,_bec ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _dbfa .Settings .KeepClassInstances {if _ag ,_caa =_ge .GetBitmap (_adcc );_caa !=nil {return _b .Wrap (_caa ,_bec ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _gbd ,_caa =_dbfa .ClassInstances .GetBitmaps (_fbb );
_caa !=nil {return _b .Wrap (_caa ,_bec ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_gbd .AddBitmap (_ag );if _fce ,_caa =_aac .Get (_adcc );_caa !=nil {return _b .Wrap (_caa ,_bec ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_gbd .AddBox (_fce );};break ;};};if !_deb {if _fb =_dbfa .ClassIDs .Add (_cbaa );_fb !=nil {return _b .Wrap (_fb ,_bec ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _fb =_dbfa .ComponentPageNumbers .Add (_fgec );_fb !=nil {return _b .Wrap (_fb ,_bec ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_gbd =&_dg .Bitmaps {};if _ag ,_fb =_ge .GetBitmap (_adcc );_fb !=nil {return _b .Wrap (_fb ,_bec ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gbd .AddBitmap (_ag );_ace ,_fgf :=_ag .Width ,_ag .Height ;_bcb :=uint64 (_fgf )*uint64 (_ace );_dbfa .TemplatesSize .Add (_bcb ,_cbaa );
if _fce ,_fb =_aac .Get (_adcc );_fb !=nil {return _b .Wrap (_fb ,_bec ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gbd .AddBox (_fce );_dbfa .ClassInstances .AddBitmaps (_gbd );_dbfa .CentroidPointsTemplates .AddPoint (_eba ,_baf );_dbfa .FgTemplates .AddInt (_bce );
_dbfa .UndilatedTemplates .AddBitmap (_ag );_fag =(_af .Width -2*JbAddedPixels )*(_af .Height -2*JbAddedPixels );if _fb =_dbfa .TemplateAreas .Add (_fag );_fb !=nil {return _b .Wrap (_fb ,_bec ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_dbfa .NumberOfClasses =len (_dbfa .UndilatedTemplates .Values );
return nil ;};func (_fgeg *Classer )classifyRankHouseOne (_adg *_dg .Boxes ,_cag ,_beb ,_aba *_dg .Bitmaps ,_bf *_dg .Points ,_fbd int )(_eccd error ){const _fgd ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_eea ,_bfg ,_afb ,_bg float32 ;_bca int ;_cfgd ,_dadb ,_cbaf ,_gde ,_cce *_dg .Bitmap ;_badg ,_fccc bool ;);for _fba :=0;_fba < len (_cag .Values );_fba ++{_dadb =_beb .Values [_fba ];_cbaf =_aba .Values [_fba ];_eea ,_bfg ,_eccd =_bf .GetGeometry (_fba );
if _eccd !=nil {return _b .Wrapf (_eccd ,_fgd ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_cceb :=len (_fgeg .UndilatedTemplates .Values );_badg =false ;_agb :=_gfa (_fgeg ,_dadb );for _bca =_agb .Next ();_bca > -1;
{_gde ,_eccd =_fgeg .UndilatedTemplates .GetBitmap (_bca );if _eccd !=nil {return _b .Wrap (_eccd ,_fgd ,"\u0062\u006d\u0033");};_cce ,_eccd =_fgeg .DilatedTemplates .GetBitmap (_bca );if _eccd !=nil {return _b .Wrap (_eccd ,_fgd ,"\u0062\u006d\u0034");
};_afb ,_bg ,_eccd =_fgeg .CentroidPointsTemplates .GetGeometry (_bca );if _eccd !=nil {return _b .Wrap (_eccd ,_fgd ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_fccc ,_eccd =_dg .HausTest (_dadb ,_cbaf ,_gde ,_cce ,_eea -_afb ,_bfg -_bg ,MaxDiffWidth ,MaxDiffHeight );
if _eccd !=nil {return _b .Wrap (_eccd ,_fgd ,"");};if _fccc {_badg =true ;if _eccd =_fgeg .ClassIDs .Add (_bca );_eccd !=nil {return _b .Wrap (_eccd ,_fgd ,"");};if _eccd =_fgeg .ComponentPageNumbers .Add (_fbd );_eccd !=nil {return _b .Wrap (_eccd ,_fgd ,"");
};if _fgeg .Settings .KeepClassInstances {_gdg ,_gfg :=_fgeg .ClassInstances .GetBitmaps (_bca );if _gfg !=nil {return _b .Wrap (_gfg ,_fgd ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_cfgd ,_gfg =_cag .GetBitmap (_fba );if _gfg !=nil {return _b .Wrap (_gfg ,_fgd ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_gdg .AddBitmap (_cfgd );_cee ,_gfg :=_adg .Get (_fba );if _gfg !=nil {return _b .Wrap (_gfg ,_fgd ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_gdg .AddBox (_cee );};break ;};};if !_badg {if _eccd =_fgeg .ClassIDs .Add (_cceb );_eccd !=nil {return _b .Wrap (_eccd ,_fgd ,"");
};if _eccd =_fgeg .ComponentPageNumbers .Add (_fbd );_eccd !=nil {return _b .Wrap (_eccd ,_fgd ,"");};_ga :=&_dg .Bitmaps {};_cfgd ,_eccd =_cag .GetBitmap (_fba );if _eccd !=nil {return _b .Wrap (_eccd ,_fgd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ga .Values =append (_ga .Values ,_cfgd );
_gbea ,_adb :=_cfgd .Width ,_cfgd .Height ;_fgeg .TemplatesSize .Add (uint64 (_adb )*uint64 (_gbea ),_cceb );_fcd ,_fbc :=_adg .Get (_fba );if _fbc !=nil {return _b .Wrap (_fbc ,_fgd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ga .AddBox (_fcd );_fgeg .ClassInstances .AddBitmaps (_ga );
_fgeg .CentroidPointsTemplates .AddPoint (_eea ,_bfg );_fgeg .UndilatedTemplates .AddBitmap (_dadb );_fgeg .DilatedTemplates .AddBitmap (_cbaf );};};return nil ;};func (_cdca Settings )Validate ()error {const _ged ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";
if _cdca .Thresh < 0.4||_cdca .Thresh > 0.98{return _b .Error (_ged ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _cdca .WeightFactor < 0.0||_cdca .WeightFactor > 1.0{return _b .Error (_ged ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _cdca .RankHaus < 0.5||_cdca .RankHaus > 1.0{return _b .Error (_ged ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _cdca .SizeHaus < 1||_cdca .SizeHaus > 10{return _b .Error (_ged ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _cdca .Components {case _dg .ComponentConn ,_dg .ComponentCharacters ,_dg .ComponentWords :default:return _b .Error (_ged ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func _gb (_cdc *_dg .Bitmap ,_ba ,_fge ,_cef ,_bef int ,_ad *_dg .Bitmap )(_aeg _d .Point ,_bee error ){const _gbe ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _cdc ==nil {return _aeg ,_b .Error (_gbe ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _ad ==nil {return _aeg ,_b .Error (_gbe ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_ec ,_ac :=_ad .Width ,_ad .Height ;_cdcf ,_fcg :=_ba -_cef -JbAddedPixels ,_fge -_bef -JbAddedPixels ;_cg .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_ba ,_fge ,_ec ,_ac ,_cdcf ,_fcg );
_gg ,_bee :=_dg .Rect (_cdcf ,_fcg ,_ec ,_ac );if _bee !=nil {return _aeg ,_b .Wrap (_bee ,_gbe ,"");};_dgc ,_ ,_bee :=_cdc .ClipRectangle (_gg );if _bee !=nil {_cg .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_gg );
return _aeg ,_b .Wrap (_bee ,_gbe ,"");};_fe :=_dg .New (_dgc .Width ,_dgc .Height );_fcc :=_f .MaxInt32 ;var _bcc ,_fee ,_cb ,_ea ,_ggg int ;for _bcc =-1;_bcc <=1;_bcc ++{for _fee =-1;_fee <=1;_fee ++{if _ ,_bee =_dg .Copy (_fe ,_dgc );_bee !=nil {return _aeg ,_b .Wrap (_bee ,_gbe ,"");
};if _bee =_fe .RasterOperation (_fee ,_bcc ,_ec ,_ac ,_dg .PixSrcXorDst ,_ad ,0,0);_bee !=nil {return _aeg ,_b .Wrap (_bee ,_gbe ,"");};_cb =_fe .CountPixels ();if _cb < _fcc {_ea =_fee ;_ggg =_bcc ;_fcc =_cb ;};};};_aeg .X =_ea ;_aeg .Y =_ggg ;return _aeg ,nil ;
};type Method int ;func (_add *similarTemplatesFinder )Next ()int {var (_adf ,_ege ,_feb ,_gfgb int ;_ede bool ;_accd *_dg .Bitmap ;_cae error ;);for {if _add .Index >=25{return -1;};_ege =_add .Width +TwoByTwoWalk [2*_add .Index ];_adf =_add .Height +TwoByTwoWalk [2*_add .Index +1];
if _adf < 1||_ege < 1{_add .Index ++;continue ;};if len (_add .CurrentNumbers )==0{_add .CurrentNumbers ,_ede =_add .Classer .TemplatesSize .GetSlice (uint64 (_ege )*uint64 (_adf ));if !_ede {_add .Index ++;continue ;};_add .N =0;};_feb =len (_add .CurrentNumbers );
for ;_add .N < _feb ;_add .N ++{_gfgb =_add .CurrentNumbers [_add .N ];_accd ,_cae =_add .Classer .DilatedTemplates .GetBitmap (_gfgb );if _cae !=nil {_cg .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _accd .Width -2*JbAddedPixels ==_ege &&_accd .Height -2*JbAddedPixels ==_adf {return _gfgb ;};};_add .Index ++;_add .CurrentNumbers =nil ;};};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;
N int ;};func (_gegf *Settings )SetDefault (){if _gegf .MaxCompWidth ==0{switch _gegf .Components {case _dg .ComponentConn :_gegf .MaxCompWidth =MaxConnCompWidth ;case _dg .ComponentCharacters :_gegf .MaxCompWidth =MaxCharCompWidth ;case _dg .ComponentWords :_gegf .MaxCompWidth =MaxWordCompWidth ;
};};if _gegf .MaxCompHeight ==0{_gegf .MaxCompHeight =MaxCompHeight ;};if _gegf .Thresh ==0.0{_gegf .Thresh =0.9;};if _gegf .WeightFactor ==0.0{_gegf .WeightFactor =0.75;};if _gegf .RankHaus ==0.0{_gegf .RankHaus =0.97;};if _gegf .SizeHaus ==0{_gegf .SizeHaus =2;
};};func (_aae *Classer )classifyRankHaus (_eed *_dg .Boxes ,_ceaae *_dg .Bitmaps ,_aede int )error {const _ff ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _eed ==nil {return _b .Error (_ff ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if _ceaae ==nil {return _b .Error (_ff ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_cbgg :=len (_ceaae .Values );if _cbgg ==0{return _b .Error (_ff ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");
};_aaa :=_ceaae .CountPixels ();_gecf :=_aae .Settings .SizeHaus ;_ab :=_dg .SelCreateBrick (_gecf ,_gecf ,_gecf /2,_gecf /2,_dg .SelHit );_aea :=&_dg .Bitmaps {Values :make ([]*_dg .Bitmap ,_cbgg )};_gbc :=&_dg .Bitmaps {Values :make ([]*_dg .Bitmap ,_cbgg )};
var (_eca ,_cec ,_gbb *_dg .Bitmap ;_cgc error ;);for _fcb :=0;_fcb < _cbgg ;_fcb ++{_eca ,_cgc =_ceaae .GetBitmap (_fcb );if _cgc !=nil {return _b .Wrap (_cgc ,_ff ,"");};_cec ,_cgc =_eca .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _cgc !=nil {return _b .Wrap (_cgc ,_ff ,"");};_gbb ,_cgc =_dg .Dilate (nil ,_cec ,_ab );if _cgc !=nil {return _b .Wrap (_cgc ,_ff ,"");};_aea .Values [_cbgg ]=_cec ;_gbc .Values [_cbgg ]=_gbb ;};_ceaab ,_cgc :=_dg .Centroids (_aea .Values );if _cgc !=nil {return _b .Wrap (_cgc ,_ff ,"");
};if _cgc =_ceaab .Add (_aae .CentroidPoints );_cgc !=nil {_cg .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _aae .Settings .RankHaus ==1.0{_cgc =_aae .classifyRankHouseOne (_eed ,_ceaae ,_aea ,_gbc ,_ceaab ,_aede );
}else {_cgc =_aae .classifyRankHouseNonOne (_eed ,_ceaae ,_aea ,_gbc ,_ceaab ,_aaa ,_aede );};if _cgc !=nil {return _b .Wrap (_cgc ,_ff ,"");};return nil ;};func (_ae *Classer )getULCorners (_aaf *_dg .Bitmap ,_eg *_dg .Boxes )error {const _dbf ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _aaf ==nil {return _b .Error (_dbf ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _eg ==nil {return _b .Error (_dbf ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _ae .PtaUL ==nil {_ae .PtaUL =&_dg .Points {};
};_def :=len (*_eg );var (_bcd ,_dcc ,_fa ,_aed int ;_bed ,_ded ,_efa ,_ceaa float32 ;_dfb error ;_cf *_d .Rectangle ;_fgc *_dg .Bitmap ;_dbg _d .Point ;);for _dac :=0;_dac < _def ;_dac ++{_bcd =_ae .BaseIndex +_dac ;if _bed ,_ded ,_dfb =_ae .CentroidPoints .GetGeometry (_bcd );
_dfb !=nil {return _b .Wrap (_dfb ,_dbf ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _dcc ,_dfb =_ae .ClassIDs .Get (_bcd );_dfb !=nil {return _b .Wrap (_dfb ,_dbf ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");
};if _efa ,_ceaa ,_dfb =_ae .CentroidPointsTemplates .GetGeometry (_dcc );_dfb !=nil {return _b .Wrap (_dfb ,_dbf ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_efb :=_efa -_bed ;
_cfc :=_ceaa -_ded ;if _efb >=0{_fa =int (_efb +0.5);}else {_fa =int (_efb -0.5);};if _cfc >=0{_aed =int (_cfc +0.5);}else {_aed =int (_cfc -0.5);};if _cf ,_dfb =_eg .Get (_dac );_dfb !=nil {return _b .Wrap (_dfb ,_dbf ,"");};_dfa ,_g :=_cf .Min .X ,_cf .Min .Y ;
_fgc ,_dfb =_ae .UndilatedTemplates .GetBitmap (_dcc );if _dfb !=nil {return _b .Wrap (_dfb ,_dbf ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_dbg ,_dfb =_gb (_aaf ,_dfa ,_g ,_fa ,_aed ,_fgc );if _dfb !=nil {return _b .Wrap (_dfb ,_dbf ,"");};_ae .PtaUL .AddPoint (float32 (_dfa -_fa +_dbg .X ),float32 (_g -_aed +_dbg .Y ));};return nil ;};func DefaultSettings ()Settings {_abab :=&Settings {};
_abab .SetDefault ();return *_abab };func (_dd *Classer )verifyMethod (_dcg Method )error {if _dcg !=RankHaus &&_dcg !=Correlation {return _b .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _dg .Component ;Method Method ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;
MaxWordCompWidth =1000;MaxCompHeight =120;);const JbAddedPixels =6;type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_e .IntSlice ;TemplateAreas *_e .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_dg .BitmapsArray ;
UndilatedTemplates *_dg .Bitmaps ;DilatedTemplates *_dg .Bitmaps ;TemplatesSize _e .IntsMap ;FgTemplates *_e .NumSlice ;CentroidPoints *_dg .Points ;CentroidPointsTemplates *_dg .Points ;ClassIDs *_e .IntSlice ;ComponentPageNumbers *_e .IntSlice ;PtaUL *_dg .Points ;
PtaLL *_dg .Points ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func Init (settings Settings )(*Classer ,error ){const _de ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";
_eb :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_e .IntsMap {},TemplateAreas :&_e .IntSlice {},ComponentPageNumbers :&_e .IntSlice {},ClassIDs :&_e .IntSlice {},ComponentsNumber :&_e .IntSlice {},CentroidPoints :&_dg .Points {},CentroidPointsTemplates :&_dg .Points {},UndilatedTemplates :&_dg .Bitmaps {},DilatedTemplates :&_dg .Bitmaps {},ClassInstances :&_dg .BitmapsArray {},FgTemplates :&_e .NumSlice {}};
if _ce :=_eb .Settings .Validate ();_ce !=nil {return nil ,_b .Wrap (_ce ,_de ,"");};return _eb ,nil ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);const (RankHaus Method =iota ;Correlation ;);func _gfa (_fde *Classer ,_fab *_dg .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_fab .Width ,Height :_fab .Height ,Classer :_fde };
};func (_bab *Classer )classifyRankHouseNonOne (_gae *_dg .Boxes ,_efgb ,_dbb ,_bcac *_dg .Bitmaps ,_edd *_dg .Points ,_faa *_e .NumSlice ,_gcg int )(_cfb error ){const _bfb ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_bcdg ,_daa ,_ddg ,_ecd float32 ;_fgdd ,_eeab ,_edg int ;_bff ,_bfd ,_bb ,_bba ,_acb *_dg .Bitmap ;_ecf ,_cfe bool ;);_dbc :=_dg .MakePixelSumTab8 ();for _afa :=0;_afa < len (_efgb .Values );_afa ++{if _bfd ,_cfb =_dbb .GetBitmap (_afa );_cfb !=nil {return _b .Wrap (_cfb ,_bfb ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _fgdd ,_cfb =_faa .GetInt (_afa );_cfb !=nil {_cg .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_afa ,_cfb );
};if _bb ,_cfb =_bcac .GetBitmap (_afa );_cfb !=nil {return _b .Wrap (_cfb ,_bfb ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _bcdg ,_daa ,_cfb =_edd .GetGeometry (_afa );_cfb !=nil {return _b .Wrapf (_cfb ,_bfb ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_fdc :=len (_bab .UndilatedTemplates .Values );_ecf =false ;_ebf :=_gfa (_bab ,_bfd );for _edg =_ebf .Next ();_edg > -1;{if _bba ,_cfb =_bab .UndilatedTemplates .GetBitmap (_edg );_cfb !=nil {return _b .Wrap (_cfb ,_bfb ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _eeab ,_cfb =_bab .FgTemplates .GetInt (_edg );_cfb !=nil {_cg .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_edg ,_cfb );
};if _acb ,_cfb =_bab .DilatedTemplates .GetBitmap (_edg );_cfb !=nil {return _b .Wrap (_cfb ,_bfb ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _ddg ,_ecd ,_cfb =_bab .CentroidPointsTemplates .GetGeometry (_edg );
_cfb !=nil {return _b .Wrap (_cfb ,_bfb ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_cfe ,_cfb =_dg .RankHausTest (_bfd ,_bb ,_bba ,_acb ,_bcdg -_ddg ,_daa -_ecd ,MaxDiffWidth ,MaxDiffHeight ,_fgdd ,_eeab ,float32 (_bab .Settings .RankHaus ),_dbc );
if _cfb !=nil {return _b .Wrap (_cfb ,_bfb ,"");};if _cfe {_ecf =true ;if _cfb =_bab .ClassIDs .Add (_edg );_cfb !=nil {return _b .Wrap (_cfb ,_bfb ,"");};if _cfb =_bab .ComponentPageNumbers .Add (_gcg );_cfb !=nil {return _b .Wrap (_cfb ,_bfb ,"");};if _bab .Settings .KeepClassInstances {_gfgf ,_deg :=_bab .ClassInstances .GetBitmaps (_edg );
if _deg !=nil {return _b .Wrap (_deg ,_bfb ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");};if _bff ,_deg =_efgb .GetBitmap (_afa );_deg !=nil {return _b .Wrap (_deg ,_bfb ,"\u0070i\u0078\u0061\u005b\u0069\u005d");
};_gfgf .Values =append (_gfgf .Values ,_bff );_cdf ,_deg :=_gae .Get (_afa );if _deg !=nil {return _b .Wrap (_deg ,_bfb ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};_gfgf .Boxes =append (_gfgf .Boxes ,_cdf );};break ;};};if !_ecf {if _cfb =_bab .ClassIDs .Add (_fdc );
_cfb !=nil {return _b .Wrap (_cfb ,_bfb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _cfb =_bab .ComponentPageNumbers .Add (_gcg );_cfb !=nil {return _b .Wrap (_cfb ,_bfb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dae :=&_dg .Bitmaps {};_bff =_efgb .Values [_afa ];
_dae .AddBitmap (_bff );_agd ,_geg :=_bff .Width ,_bff .Height ;_bab .TemplatesSize .Add (uint64 (_agd )*uint64 (_geg ),_fdc );_gcb ,_dfdb :=_gae .Get (_afa );if _dfdb !=nil {return _b .Wrap (_dfdb ,_bfb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dae .AddBox (_gcb );
_bab .ClassInstances .AddBitmaps (_dae );_bab .CentroidPointsTemplates .AddPoint (_bcdg ,_daa );_bab .UndilatedTemplates .AddBitmap (_bfd );_bab .DilatedTemplates .AddBitmap (_bb );_bab .FgTemplates .AddInt (_fgdd );};};_bab .NumberOfClasses =len (_bab .UndilatedTemplates .Values );
return nil ;};func (_cd *Classer )AddPage (inputPage *_dg .Bitmap ,pageNumber int ,method Method )(_ee error ){const _ef ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_cd .Widths [pageNumber ]=inputPage .Width ;_cd .Heights [pageNumber ]=inputPage .Height ;
if _ee =_cd .verifyMethod (method );_ee !=nil {return _b .Wrap (_ee ,_ef ,"");};_df ,_fg ,_ee :=inputPage .GetComponents (_cd .Settings .Components ,_cd .Settings .MaxCompWidth ,_cd .Settings .MaxCompHeight );if _ee !=nil {return _b .Wrap (_ee ,_ef ,"");
};_cg .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_df );if _ee =_cd .addPageComponents (inputPage ,_fg ,_df ,pageNumber ,method );_ee !=nil {return _b .Wrap (_ee ,_ef ,"");};return nil ;};var _defa bool ;
