//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_b "github.com/unidoc/unipdf/v3/common";_f "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_d "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_g "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_c "image";_cf "math";);
func (_fcfc Settings )Validate ()error {const _cef ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _fcfc .Thresh < 0.4||_fcfc .Thresh > 0.98{return _g .Error (_cef ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _fcfc .WeightFactor < 0.0||_fcfc .WeightFactor > 1.0{return _g .Error (_cef ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _fcfc .RankHaus < 0.5||_fcfc .RankHaus > 1.0{return _g .Error (_cef ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _fcfc .SizeHaus < 1||_fcfc .SizeHaus > 10{return _g .Error (_cef ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _fcfc .Components {case _d .ComponentConn ,_d .ComponentCharacters ,_d .ComponentWords :default:return _g .Error (_cef ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func (_gac *Classer )getULCorners (_eef *_d .Bitmap ,_fdaa *_d .Boxes )error {const _fe ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _eef ==nil {return _g .Error (_fe ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _fdaa ==nil {return _g .Error (_fe ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _gac .PtaUL ==nil {_gac .PtaUL =&_d .Points {};};_bf :=len (*_fdaa );var (_be ,_ddc ,_ff ,_fce int ;_ef ,_agc ,_eb ,_bbc float32 ;_ec error ;_gd *_c .Rectangle ;
_ece *_d .Bitmap ;_fa _c .Point ;);for _da :=0;_da < _bf ;_da ++{_be =_gac .BaseIndex +_da ;if _ef ,_agc ,_ec =_gac .CentroidPoints .GetGeometry (_be );_ec !=nil {return _g .Wrap (_ec ,_fe ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _ddc ,_ec =_gac .ClassIDs .Get (_be );_ec !=nil {return _g .Wrap (_ec ,_fe ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _eb ,_bbc ,_ec =_gac .CentroidPointsTemplates .GetGeometry (_ddc );_ec !=nil {return _g .Wrap (_ec ,_fe ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_ge :=_eb -_ef ;_gb :=_bbc -_agc ;if _ge >=0{_ff =int (_ge +0.5);}else {_ff =int (_ge -0.5);};if _gb >=0{_fce =int (_gb +0.5);}else {_fce =int (_gb -0.5);};if _gd ,_ec =_fdaa .Get (_da );_ec !=nil {return _g .Wrap (_ec ,_fe ,"");};_afdc ,_ffa :=_gd .Min .X ,_gd .Min .Y ;
_ece ,_ec =_gac .UndilatedTemplates .GetBitmap (_ddc );if _ec !=nil {return _g .Wrap (_ec ,_fe ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_fa ,_ec =_cd (_eef ,_afdc ,_ffa ,_ff ,_fce ,_ece );if _ec !=nil {return _g .Wrap (_ec ,_fe ,"");};_gac .PtaUL .AddPoint (float32 (_afdc -_ff +_fa .X ),float32 (_ffa -_fce +_fa .Y ));};return nil ;};func (_gcd *Classer )verifyMethod (_bad Method )error {if _bad !=RankHaus &&_bad !=Correlation {return _g .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_ee *Classer )addPageComponents (_gc *_d .Bitmap ,_afd *_d .Boxes ,_ddd *_d .Bitmaps ,_fb int ,_fda Method )error {const _eeg ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _gc ==nil {return _g .Error (_eeg ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _afd ==nil ||_ddd ==nil ||len (*_afd )==0{_b .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_gc );
return nil ;};var _dc error ;switch _fda {case RankHaus :_dc =_ee .classifyRankHaus (_afd ,_ddd ,_fb );case Correlation :_dc =_ee .classifyCorrelation (_afd ,_ddd ,_fb );default:_b .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_fda );
return _g .Error (_eeg ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _dc !=nil {return _g .Wrap (_dc ,_eeg ,"");};if _dc =_ee .getULCorners (_gc ,_afd );_dc !=nil {return _g .Wrap (_dc ,_eeg ,"");
};_gca :=len (*_afd );_ee .BaseIndex +=_gca ;if _dc =_ee .ComponentsNumber .Add (_gca );_dc !=nil {return _g .Wrap (_dc ,_eeg ,"");};return nil ;};func Init (settings Settings )(*Classer ,error ){const _bb ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";
_ae :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_f .IntsMap {},TemplateAreas :&_f .IntSlice {},ComponentPageNumbers :&_f .IntSlice {},ClassIDs :&_f .IntSlice {},ComponentsNumber :&_f .IntSlice {},CentroidPoints :&_d .Points {},CentroidPointsTemplates :&_d .Points {},UndilatedTemplates :&_d .Bitmaps {},DilatedTemplates :&_d .Bitmaps {},ClassInstances :&_d .BitmapsArray {},FgTemplates :&_f .NumSlice {}};
if _e :=_ae .Settings .Validate ();_e !=nil {return nil ,_g .Wrap (_e ,_bb ,"");};return _ae ,nil ;};const JbAddedPixels =6;func (_adf *Classer )ComputeLLCorners ()(_ga error ){const _gad ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _adf .PtaUL ==nil {return _g .Error (_gad ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_ag :=len (*_adf .PtaUL );_adf .PtaLL =&_d .Points {};var (_cc ,_ba float32 ;_dde ,_ab int ;
_fd *_d .Bitmap ;);for _gag :=0;_gag < _ag ;_gag ++{_cc ,_ba ,_ga =_adf .PtaUL .GetGeometry (_gag );if _ga !=nil {_b .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ga );
return _g .Wrap (_ga ,_gad ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_dde ,_ga =_adf .ClassIDs .Get (_gag );if _ga !=nil {_b .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_ga );
return _g .Wrap (_ga ,_gad ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_fd ,_ga =_adf .UndilatedTemplates .GetBitmap (_dde );if _ga !=nil {_b .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ga );
return _g .Wrap (_ga ,_gad ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_ab =_fd .Height ;_adf .PtaLL .AddPoint (_cc ,_ba +float32 (_ab ));};return nil ;};func (_dbg *Classer )classifyCorrelation (_agd *_d .Boxes ,_dac *_d .Bitmaps ,_ed int )error {const _cfb ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _agd ==nil {return _g .Error (_cfb ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _dac ==nil {return _g .Error (_cfb ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_cg :=len (_dac .Values );if _cg ==0{_b .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_dgc ,_dgf *_d .Bitmap ;_bfb error ;);_edd :=&_d .Bitmaps {Values :make ([]*_d .Bitmap ,_cg )};for _fab ,_ecf :=range _dac .Values {_dgf ,_bfb =_ecf .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _bfb !=nil {return _g .Wrap (_bfb ,_cfb ,"");
};_edd .Values [_fab ]=_dgf ;};_gfa :=_dbg .FgTemplates ;_efb :=_d .MakePixelSumTab8 ();_cfd :=_d .MakePixelCentroidTab8 ();_dba :=make ([]int ,_cg );_bfbb :=make ([][]int ,_cg );_adg :=_d .Points (make ([]_d .Point ,_cg ));_aed :=&_adg ;var (_gdb ,_bfc int ;
_fbdf ,_cdf ,_gbe int ;_dec ,_bff int ;_eg byte ;);for _cfe ,_cac :=range _edd .Values {_bfbb [_cfe ]=make ([]int ,_cac .Height );_gdb =0;_bfc =0;_cdf =(_cac .Height -1)*_cac .RowStride ;_fbdf =0;for _bff =_cac .Height -1;_bff >=0;_bff ,_cdf =_bff -1,_cdf -_cac .RowStride {_bfbb [_cfe ][_bff ]=_fbdf ;
_gbe =0;for _dec =0;_dec < _cac .RowStride ;_dec ++{_eg =_cac .Data [_cdf +_dec ];_gbe +=_efb [_eg ];_gdb +=_cfd [_eg ]+_dec *8*_efb [_eg ];};_fbdf +=_gbe ;_bfc +=_gbe *_bff ;};_dba [_cfe ]=_fbdf ;if _fbdf > 0{(*_aed )[_cfe ]=_d .Point {X :float32 (_gdb )/float32 (_fbdf ),Y :float32 (_bfc )/float32 (_fbdf )};
}else {(*_aed )[_cfe ]=_d .Point {X :float32 (_cac .Width )/float32 (2),Y :float32 (_cac .Height )/float32 (2)};};};if _bfb =_dbg .CentroidPoints .Add (_aed );_bfb !=nil {return _g .Wrap (_bfb ,_cfb ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");
};var (_afc ,_bffe ,_eefb int ;_cfbd float64 ;_gbc ,_eefg ,_dbe ,_aa float32 ;_abf ,_agf _d .Point ;_ac bool ;_cad *similarTemplatesFinder ;_eaf int ;_aac *_d .Bitmap ;_adb *_c .Rectangle ;_efe *_d .Bitmaps ;);for _eaf ,_dgf =range _edd .Values {_bffe =_dba [_eaf ];
if _gbc ,_eefg ,_bfb =_aed .GetGeometry (_eaf );_bfb !=nil {return _g .Wrap (_bfb ,_cfb ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_ac =false ;_cb :=len (_dbg .UndilatedTemplates .Values );_cad =_ffad (_dbg ,_dgf );for _bfca :=_cad .Next ();_bfca > -1;
{if _aac ,_bfb =_dbg .UndilatedTemplates .GetBitmap (_bfca );_bfb !=nil {return _g .Wrap (_bfb ,_cfb ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _eefb ,_bfb =_gfa .GetInt (_bfca );
_bfb !=nil {_b .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bfb );};if _dbe ,_aa ,_bfb =_dbg .CentroidPointsTemplates .GetGeometry (_bfca );
_bfb !=nil {return _g .Wrap (_bfb ,_cfb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _dbg .Settings .WeightFactor > 0.0{if _afc ,_bfb =_dbg .TemplateAreas .Get (_bfca );_bfb !=nil {_b .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_bfb );
};_cfbd =_dbg .Settings .Thresh +(1.0-_dbg .Settings .Thresh )*_dbg .Settings .WeightFactor *float64 (_eefb )/float64 (_afc );}else {_cfbd =_dbg .Settings .Thresh ;};_cfdd ,_dace :=_d .CorrelationScoreThresholded (_dgf ,_aac ,_bffe ,_eefb ,_abf .X -_agf .X ,_abf .Y -_agf .Y ,MaxDiffWidth ,MaxDiffHeight ,_efb ,_bfbb [_eaf ],float32 (_cfbd ));
if _dace !=nil {return _g .Wrap (_dace ,_cfb ,"");};if _gf {var (_cge ,_cda float64 ;_bfba ,_bfe int ;);_cge ,_dace =_d .CorrelationScore (_dgf ,_aac ,_bffe ,_eefb ,_gbc -_dbe ,_eefg -_aa ,MaxDiffWidth ,MaxDiffHeight ,_efb );if _dace !=nil {return _g .Wrap (_dace ,_cfb ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_cda ,_dace =_d .CorrelationScoreSimple (_dgf ,_aac ,_bffe ,_eefb ,_gbc -_dbe ,_eefg -_aa ,MaxDiffWidth ,MaxDiffHeight ,_efb );if _dace !=nil {return _g .Wrap (_dace ,_cfb ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_bfba =int (_cf .Sqrt (_cge *float64 (_bffe )*float64 (_eefb )));_bfe =int (_cf .Sqrt (_cda *float64 (_bffe )*float64 (_eefb )));if (_cge >=_cfbd )!=(_cda >=_cfbd ){return _g .Errorf (_cfb ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_bfba ,_cge ,_cge >=_cfbd ,_bfe ,_cda ,_cda >=_cfbd ,_cge -_cda );
};if _cge >=_cfbd !=_cfdd {return _g .Errorf (_cfb ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_cge ,_cge *float64 (_bffe )*float64 (_eefb ),_bfba ,_cfbd ,float32 (_cfbd )*float32 (_bffe )*float32 (_eefb ),_cfdd );
};};if _cfdd {_ac =true ;if _dace =_dbg .ClassIDs .Add (_bfca );_dace !=nil {return _g .Wrap (_dace ,_cfb ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _dace =_dbg .ComponentPageNumbers .Add (_ed );_dace !=nil {return _g .Wrap (_dace ,_cfb ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _dbg .Settings .KeepClassInstances {if _dgc ,_dace =_dac .GetBitmap (_eaf );_dace !=nil {return _g .Wrap (_dace ,_cfb ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _efe ,_dace =_dbg .ClassInstances .GetBitmaps (_bfca );
_dace !=nil {return _g .Wrap (_dace ,_cfb ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_efe .AddBitmap (_dgc );if _adb ,_dace =_agd .Get (_eaf );_dace !=nil {return _g .Wrap (_dace ,_cfb ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_efe .AddBox (_adb );};break ;};};if !_ac {if _bfb =_dbg .ClassIDs .Add (_cb );_bfb !=nil {return _g .Wrap (_bfb ,_cfb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bfb =_dbg .ComponentPageNumbers .Add (_ed );_bfb !=nil {return _g .Wrap (_bfb ,_cfb ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_efe =&_d .Bitmaps {};if _dgc ,_bfb =_dac .GetBitmap (_eaf );_bfb !=nil {return _g .Wrap (_bfb ,_cfb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_efe .AddBitmap (_dgc );_fdc ,_afda :=_dgc .Width ,_dgc .Height ;_dcc :=uint64 (_afda )*uint64 (_fdc );_dbg .TemplatesSize .Add (_dcc ,_cb );
if _adb ,_bfb =_agd .Get (_eaf );_bfb !=nil {return _g .Wrap (_bfb ,_cfb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_efe .AddBox (_adb );_dbg .ClassInstances .AddBitmaps (_efe );_dbg .CentroidPointsTemplates .AddPoint (_gbc ,_eefg );_dbg .FgTemplates .AddInt (_bffe );
_dbg .UndilatedTemplates .AddBitmap (_dgc );_afc =(_dgf .Width -2*JbAddedPixels )*(_dgf .Height -2*JbAddedPixels );if _bfb =_dbg .TemplateAreas .Add (_afc );_bfb !=nil {return _g .Wrap (_bfb ,_cfb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_dbg .NumberOfClasses =len (_dbg .UndilatedTemplates .Values );
return nil ;};func (_edf *similarTemplatesFinder )Next ()int {var (_bee ,_aag ,_efcg ,_eeff int ;_bfega bool ;_aage *_d .Bitmap ;_fca error ;);for {if _edf .Index >=25{return -1;};_aag =_edf .Width +TwoByTwoWalk [2*_edf .Index ];_bee =_edf .Height +TwoByTwoWalk [2*_edf .Index +1];
if _bee < 1||_aag < 1{_edf .Index ++;continue ;};if len (_edf .CurrentNumbers )==0{_edf .CurrentNumbers ,_bfega =_edf .Classer .TemplatesSize .GetSlice (uint64 (_aag )*uint64 (_bee ));if !_bfega {_edf .Index ++;continue ;};_edf .N =0;};_efcg =len (_edf .CurrentNumbers );
for ;_edf .N < _efcg ;_edf .N ++{_eeff =_edf .CurrentNumbers [_edf .N ];_aage ,_fca =_edf .Classer .DilatedTemplates .GetBitmap (_eeff );if _fca !=nil {_b .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _aage .Width -2*JbAddedPixels ==_aag &&_aage .Height -2*JbAddedPixels ==_bee {return _eeff ;};};_edf .Index ++;_edf .CurrentNumbers =nil ;};};const (MaxDiffWidth =2;MaxDiffHeight =2;);const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;
MaxCompHeight =120;);type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_f .IntSlice ;TemplateAreas *_f .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_d .BitmapsArray ;UndilatedTemplates *_d .Bitmaps ;
DilatedTemplates *_d .Bitmaps ;TemplatesSize _f .IntsMap ;FgTemplates *_f .NumSlice ;CentroidPoints *_d .Points ;CentroidPointsTemplates *_d .Points ;ClassIDs *_f .IntSlice ;ComponentPageNumbers *_f .IntSlice ;PtaUL *_d .Points ;PtaLL *_d .Points ;};func _cd (_bd *_d .Bitmap ,_dag ,_dddg ,_dga ,_abe int ,_aea *_d .Bitmap )(_fbd _c .Point ,_dda error ){const _cfa ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _bd ==nil {return _fbd ,_g .Error (_cfa ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _aea ==nil {return _fbd ,_g .Error (_cfa ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_gea ,_df :=_aea .Width ,_aea .Height ;_ffc ,_ce :=_dag -_dga -JbAddedPixels ,_dddg -_abe -JbAddedPixels ;_b .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_dag ,_dddg ,_gea ,_df ,_ffc ,_ce );
_ca ,_dda :=_d .Rect (_ffc ,_ce ,_gea ,_df );if _dda !=nil {return _fbd ,_g .Wrap (_dda ,_cfa ,"");};_bea ,_ ,_dda :=_bd .ClipRectangle (_ca );if _dda !=nil {_b .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_ca );
return _fbd ,_g .Wrap (_dda ,_cfa ,"");};_adfg :=_d .New (_bea .Width ,_bea .Height );_ddeb :=_cf .MaxInt32 ;var _db ,_ecc ,_efc ,_de ,_gba int ;for _db =-1;_db <=1;_db ++{for _ecc =-1;_ecc <=1;_ecc ++{if _ ,_dda =_d .Copy (_adfg ,_bea );_dda !=nil {return _fbd ,_g .Wrap (_dda ,_cfa ,"");
};if _dda =_adfg .RasterOperation (_ecc ,_db ,_gea ,_df ,_d .PixSrcXorDst ,_aea ,0,0);_dda !=nil {return _fbd ,_g .Wrap (_dda ,_cfa ,"");};_efc =_adfg .CountPixels ();if _efc < _ddeb {_de =_ecc ;_gba =_db ;_ddeb =_efc ;};};};_fbd .X =_de ;_fbd .Y =_gba ;
return _fbd ,nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func (_gdbb *Classer )classifyRankHouseNonOne (_bffd *_d .Boxes ,_ffe ,_eag ,_fdb *_d .Bitmaps ,_egf *_d .Points ,_bffde *_f .NumSlice ,_baa int )(_adfd error ){const _cgcc ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_eda ,_daf ,_dee ,_gdcd float32 ;_ccf ,_cdd ,_eae int ;_ceg ,_fcfa ,_efg ,_gdcb ,_fdbf *_d .Bitmap ;_bbf ,_bfd bool ;);_cfee :=_d .MakePixelSumTab8 ();for _bfeg :=0;_bfeg < len (_ffe .Values );_bfeg ++{if _fcfa ,_adfd =_eag .GetBitmap (_bfeg );_adfd !=nil {return _g .Wrap (_adfd ,_cgcc ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _ccf ,_adfd =_bffde .GetInt (_bfeg );_adfd !=nil {_b .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bfeg ,_adfd );
};if _efg ,_adfd =_fdb .GetBitmap (_bfeg );_adfd !=nil {return _g .Wrap (_adfd ,_cgcc ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _eda ,_daf ,_adfd =_egf .GetGeometry (_bfeg );_adfd !=nil {return _g .Wrapf (_adfd ,_cgcc ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_fgg :=len (_gdbb .UndilatedTemplates .Values );_bbf =false ;_bc :=_ffad (_gdbb ,_fcfa );for _eae =_bc .Next ();_eae > -1;{if _gdcb ,_adfd =_gdbb .UndilatedTemplates .GetBitmap (_eae );_adfd !=nil {return _g .Wrap (_adfd ,_cgcc ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _cdd ,_adfd =_gdbb .FgTemplates .GetInt (_eae );_adfd !=nil {_b .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_eae ,_adfd );
};if _fdbf ,_adfd =_gdbb .DilatedTemplates .GetBitmap (_eae );_adfd !=nil {return _g .Wrap (_adfd ,_cgcc ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _dee ,_gdcd ,_adfd =_gdbb .CentroidPointsTemplates .GetGeometry (_eae );
_adfd !=nil {return _g .Wrap (_adfd ,_cgcc ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_bfd ,_adfd =_d .RankHausTest (_fcfa ,_efg ,_gdcb ,_fdbf ,_eda -_dee ,_daf -_gdcd ,MaxDiffWidth ,MaxDiffHeight ,_ccf ,_cdd ,float32 (_gdbb .Settings .RankHaus ),_cfee );
if _adfd !=nil {return _g .Wrap (_adfd ,_cgcc ,"");};if _bfd {_bbf =true ;if _adfd =_gdbb .ClassIDs .Add (_eae );_adfd !=nil {return _g .Wrap (_adfd ,_cgcc ,"");};if _adfd =_gdbb .ComponentPageNumbers .Add (_baa );_adfd !=nil {return _g .Wrap (_adfd ,_cgcc ,"");
};if _gdbb .Settings .KeepClassInstances {_fea ,_gabd :=_gdbb .ClassInstances .GetBitmaps (_eae );if _gabd !=nil {return _g .Wrap (_gabd ,_cgcc ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _ceg ,_gabd =_ffe .GetBitmap (_bfeg );_gabd !=nil {return _g .Wrap (_gabd ,_cgcc ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_fea .Values =append (_fea .Values ,_ceg );_gcaf ,_gabd :=_bffd .Get (_bfeg );if _gabd !=nil {return _g .Wrap (_gabd ,_cgcc ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_fea .Boxes =append (_fea .Boxes ,_gcaf );};break ;};};if !_bbf {if _adfd =_gdbb .ClassIDs .Add (_fgg );_adfd !=nil {return _g .Wrap (_adfd ,_cgcc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _adfd =_gdbb .ComponentPageNumbers .Add (_baa );_adfd !=nil {return _g .Wrap (_adfd ,_cgcc ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_egc :=&_d .Bitmaps {};_ceg =_ffe .Values [_bfeg ];_egc .AddBitmap (_ceg );_eccc ,_fee :=_ceg .Width ,_ceg .Height ;_gdbb .TemplatesSize .Add (uint64 (_eccc )*uint64 (_fee ),_fgg );_bbe ,_eaed :=_bffd .Get (_bfeg );if _eaed !=nil {return _g .Wrap (_eaed ,_cgcc ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_egc .AddBox (_bbe );_gdbb .ClassInstances .AddBitmaps (_egc );_gdbb .CentroidPointsTemplates .AddPoint (_eda ,_daf );_gdbb .UndilatedTemplates .AddBitmap (_fcfa );_gdbb .DilatedTemplates .AddBitmap (_efg );_gdbb .FgTemplates .AddInt (_ccf );};};_gdbb .NumberOfClasses =len (_gdbb .UndilatedTemplates .Values );
return nil ;};func (_dfa *Classer )classifyRankHaus (_ccc *_d .Boxes ,_dce *_d .Bitmaps ,_agff int )error {const _bg ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _ccc ==nil {return _g .Error (_bg ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if _dce ==nil {return _g .Error (_bg ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_dbb :=len (_dce .Values );if _dbb ==0{return _g .Error (_bg ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");
};_caa :=_dce .CountPixels ();_cde :=_dfa .Settings .SizeHaus ;_afce :=_d .SelCreateBrick (_cde ,_cde ,_cde /2,_cde /2,_d .SelHit );_abfb :=&_d .Bitmaps {Values :make ([]*_d .Bitmap ,_dbb )};_fdae :=&_d .Bitmaps {Values :make ([]*_d .Bitmap ,_dbb )};var (_ecee ,_gbf ,_fdd *_d .Bitmap ;
_fcf error ;);for _dbbc :=0;_dbbc < _dbb ;_dbbc ++{_ecee ,_fcf =_dce .GetBitmap (_dbbc );if _fcf !=nil {return _g .Wrap (_fcf ,_bg ,"");};_gbf ,_fcf =_ecee .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _fcf !=nil {return _g .Wrap (_fcf ,_bg ,"");
};_fdd ,_fcf =_d .Dilate (nil ,_gbf ,_afce );if _fcf !=nil {return _g .Wrap (_fcf ,_bg ,"");};_abfb .Values [_dbb ]=_gbf ;_fdae .Values [_dbb ]=_fdd ;};_gaf ,_fcf :=_d .Centroids (_abfb .Values );if _fcf !=nil {return _g .Wrap (_fcf ,_bg ,"");};if _fcf =_gaf .Add (_dfa .CentroidPoints );
_fcf !=nil {_b .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _dfa .Settings .RankHaus ==1.0{_fcf =_dfa .classifyRankHouseOne (_ccc ,_dce ,_abfb ,_fdae ,_gaf ,_agff );}else {_fcf =_dfa .classifyRankHouseNonOne (_ccc ,_dce ,_abfb ,_fdae ,_gaf ,_caa ,_agff );
};if _fcf !=nil {return _g .Wrap (_fcf ,_bg ,"");};return nil ;};func _ffad (_aeag *Classer ,_bae *_d .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_bae .Width ,Height :_bae .Height ,Classer :_aeag };};func DefaultSettings ()Settings {_gaga :=&Settings {};
_gaga .SetDefault ();return *_gaga };const (RankHaus Method =iota ;Correlation ;);func (_cbf *Classer )classifyRankHouseOne (_abc *_d .Boxes ,_ccg ,_deg ,_dbd *_d .Bitmaps ,_dfb *_d .Points ,_aca int )(_ffab error ){const _fba ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_beab ,_edc ,_gdc ,_gade float32 ;_fg int ;_cdee ,_cag ,_gbff ,_ebb ,_gab *_d .Bitmap ;_gbg ,_fga bool ;);for _fag :=0;_fag < len (_ccg .Values );_fag ++{_cag =_deg .Values [_fag ];_gbff =_dbd .Values [_fag ];_beab ,_edc ,_ffab =_dfb .GetGeometry (_fag );
if _ffab !=nil {return _g .Wrapf (_ffab ,_fba ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_abfa :=len (_cbf .UndilatedTemplates .Values );_gbg =false ;_cgc :=_ffad (_cbf ,_cag );for _fg =_cgc .Next ();_fg > -1;
{_ebb ,_ffab =_cbf .UndilatedTemplates .GetBitmap (_fg );if _ffab !=nil {return _g .Wrap (_ffab ,_fba ,"\u0062\u006d\u0033");};_gab ,_ffab =_cbf .DilatedTemplates .GetBitmap (_fg );if _ffab !=nil {return _g .Wrap (_ffab ,_fba ,"\u0062\u006d\u0034");};_gdc ,_gade ,_ffab =_cbf .CentroidPointsTemplates .GetGeometry (_fg );
if _ffab !=nil {return _g .Wrap (_ffab ,_fba ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_fga ,_ffab =_d .HausTest (_cag ,_gbff ,_ebb ,_gab ,_beab -_gdc ,_edc -_gade ,MaxDiffWidth ,MaxDiffHeight );
if _ffab !=nil {return _g .Wrap (_ffab ,_fba ,"");};if _fga {_gbg =true ;if _ffab =_cbf .ClassIDs .Add (_fg );_ffab !=nil {return _g .Wrap (_ffab ,_fba ,"");};if _ffab =_cbf .ComponentPageNumbers .Add (_aca );_ffab !=nil {return _g .Wrap (_ffab ,_fba ,"");
};if _cbf .Settings .KeepClassInstances {_dfg ,_gda :=_cbf .ClassInstances .GetBitmaps (_fg );if _gda !=nil {return _g .Wrap (_gda ,_fba ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_cdee ,_gda =_ccg .GetBitmap (_fag );if _gda !=nil {return _g .Wrap (_gda ,_fba ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_dfg .AddBitmap (_cdee );_ccb ,_gda :=_abc .Get (_fag );if _gda !=nil {return _g .Wrap (_gda ,_fba ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_dfg .AddBox (_ccb );};break ;};};if !_gbg {if _ffab =_cbf .ClassIDs .Add (_abfa );_ffab !=nil {return _g .Wrap (_ffab ,_fba ,"");
};if _ffab =_cbf .ComponentPageNumbers .Add (_aca );_ffab !=nil {return _g .Wrap (_ffab ,_fba ,"");};_gfaf :=&_d .Bitmaps {};_cdee ,_ffab =_ccg .GetBitmap (_fag );if _ffab !=nil {return _g .Wrap (_ffab ,_fba ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gfaf .Values =append (_gfaf .Values ,_cdee );
_def ,_dbaf :=_cdee .Width ,_cdee .Height ;_cbf .TemplatesSize .Add (uint64 (_dbaf )*uint64 (_def ),_abfa );_bac ,_gee :=_abc .Get (_fag );if _gee !=nil {return _g .Wrap (_gee ,_fba ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gfaf .AddBox (_bac );_cbf .ClassInstances .AddBitmaps (_gfaf );
_cbf .CentroidPointsTemplates .AddPoint (_beab ,_edc );_cbf .UndilatedTemplates .AddBitmap (_cag );_cbf .DilatedTemplates .AddBitmap (_gbff );};};return nil ;};func (_ecfa *Settings )SetDefault (){if _ecfa .MaxCompWidth ==0{switch _ecfa .Components {case _d .ComponentConn :_ecfa .MaxCompWidth =MaxConnCompWidth ;
case _d .ComponentCharacters :_ecfa .MaxCompWidth =MaxCharCompWidth ;case _d .ComponentWords :_ecfa .MaxCompWidth =MaxWordCompWidth ;};};if _ecfa .MaxCompHeight ==0{_ecfa .MaxCompHeight =MaxCompHeight ;};if _ecfa .Thresh ==0.0{_ecfa .Thresh =0.9;};if _ecfa .WeightFactor ==0.0{_ecfa .WeightFactor =0.75;
};if _ecfa .RankHaus ==0.0{_ecfa .RankHaus =0.97;};if _ecfa .SizeHaus ==0{_ecfa .SizeHaus =2;};};var _gf bool ;func (_ad *Classer )AddPage (inputPage *_d .Bitmap ,pageNumber int ,method Method )(_fc error ){const _dg ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";
_ad .Widths [pageNumber ]=inputPage .Width ;_ad .Heights [pageNumber ]=inputPage .Height ;if _fc =_ad .verifyMethod (method );_fc !=nil {return _g .Wrap (_fc ,_dg ,"");};_dd ,_af ,_fc :=inputPage .GetComponents (_ad .Settings .Components ,_ad .Settings .MaxCompWidth ,_ad .Settings .MaxCompHeight );
if _fc !=nil {return _g .Wrap (_fc ,_dg ,"");};_b .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_dd );if _fc =_ad .addPageComponents (inputPage ,_af ,_dd ,pageNumber ,method );_fc !=nil {return _g .Wrap (_fc ,_dg ,"");
};return nil ;};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _d .Component ;Method Method ;};type Method int ;