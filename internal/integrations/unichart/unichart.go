//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package unichart ;import (_b "bytes";_c "fmt";_dg "github.com/unidoc/unichart/render";_df "github.com/unidoc/unipdf/v3/common";_ca "github.com/unidoc/unipdf/v3/contentstream";_ba "github.com/unidoc/unipdf/v3/contentstream/draw";_bb "github.com/unidoc/unipdf/v3/core";
_eb "github.com/unidoc/unipdf/v3/model";_e "image/color";_cd "io";_d "math";);func (_dc *Renderer )ResetStyle (){_dc .SetFillColor (_e .Black );_dc .SetStrokeColor (_e .Transparent );_dc .SetStrokeWidth (0);_dc .SetFont (_eb .DefaultFont ());_dc .SetFontColor (_e .Black );
_dc .SetFontSize (12);_dc .SetTextRotation (0);};func (_ce *Renderer )GetDPI ()float64 {return _ce ._ad };func (_baf *Renderer )MoveTo (x ,y int ){_baf ._da .Add_m (float64 (x ),float64 (y ))};func (_cdg *Renderer )SetStrokeColor (color _e .Color ){_cdg ._bc =color ;
_db ,_dee ,_fde ,_ :=_cgc (color );_cdg ._da .Add_RG (_db ,_dee ,_fde );};func (_efa *Renderer )wrapText (_feb string )[]string {var (_ada []string ;_baa []rune ;);for _ ,_aa :=range _feb {if _aa =='\n'{_ada =append (_ada ,string (_baa ));_baa =[]rune {};
continue ;};_baa =append (_baa ,_aa );};if len (_baa )> 0{_ada =append (_ada ,string (_baa ));};return _ada ;};func (_edf *Renderer )QuadCurveTo (cx ,cy ,x ,y int ){_edf ._da .Add_v (float64 (x ),float64 (y ),float64 (cx ),float64 (cy ));};func _bcg (_cgb string ,_fgb int ,_dd func (_bb .PdfObjectName )bool )_bb .PdfObjectName {_egf :=_bb .PdfObjectName (_c .Sprintf ("\u0025\u0073\u0025\u0064",_cgb ,_fgb ));
for _gdb :=_fgb ;_dd (_egf );{_gdb ++;_egf =_bb .PdfObjectName (_c .Sprintf ("\u0025\u0073\u0025\u0064",_cgb ,_gdb ));};return _egf ;};func (_ff *Renderer )Fill (){_ff ._da .Add_f ()};func (_bbb *Renderer )MeasureText (text string )_dg .Box {_ecb :=_bbb ._adb ;
_eec ,_caf :=_bbb ._ac .GetFontDescriptor ();if _caf !=nil {_df .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0066\u006fn\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
}else {_fg ,_dcc :=_eec .GetCapHeight ();if _dcc !=nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0067\u0065\u0074\u0020f\u006f\u006e\u0074\u0020\u0063\u0061\u0070\u0020\u0068\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_dcc );
}else {_ecb =_fg /1000.0*_bbb ._adb ;};};var (_ebb =0.0;_eea =_bbb .wrapText (text ););for _ ,_ebc :=range _eea {if _ebg :=_bbb .getTextWidth (_ebc );_ebg > _ebb {_ebb =_ebg ;};};_cde :=_dg .NewBox (0,0,int (_ebb ),int (_ecb ));if _faga :=_bbb ._gb ;_faga !=0{_cde =_cde .Corners ().Rotate (_faga ).Box ();
};return _cde ;};func (_fb *Renderer )SetFillColor (color _e .Color ){_fb ._ga =color ;_gfc ,_ge ,_ded ,_ :=_cgc (color );_fb ._da .Add_rg (_gfc ,_ge ,_ded );};func (_ae *Renderer )SetClassName (name string ){};type Renderer struct{_a int ;_ec int ;_ad float64 ;
_da *_ca .ContentCreator ;_bg *_eb .PdfPageResources ;_ga _e .Color ;_bc _e .Color ;_gf float64 ;_ac *_eb .PdfFont ;_adb float64 ;_bcc _e .Color ;_gb float64 ;_f map[*_eb .PdfFont ]_bb .PdfObjectName ;};func (_cb *Renderer )Close (){_cb ._da .Add_h ()};
func (_gfg *Renderer )Save (w _cd .Writer )error {if w ==nil {return nil ;};_ ,_aba :=_cd .Copy (w ,_b .NewBuffer (_gfg ._da .Bytes ()));return _aba ;};func (_adbc *Renderer )FillStroke (){_adbc ._da .Add_B ()};func (_bgg *Renderer )ClearTextRotation (){_bgg ._gb =0};
func (_dec *Renderer )Circle (radius float64 ,x ,y int ){_bae :=radius ;if _cebd :=_dec ._gf ;_cebd !=0{_bae -=_cebd /2;};_gbg :=_bae *0.551784;_cf :=_ba .CubicBezierPath {Curves :[]_ba .CubicBezierCurve {_ba .NewCubicBezierCurve (-_bae ,0,-_bae ,_gbg ,-_gbg ,_bae ,0,_bae ),_ba .NewCubicBezierCurve (0,_bae ,_gbg ,_bae ,_bae ,_gbg ,_bae ,0),_ba .NewCubicBezierCurve (_bae ,0,_bae ,-_gbg ,_gbg ,-_bae ,0,-_bae ),_ba .NewCubicBezierCurve (0,-_bae ,-_gbg ,-_bae ,-_bae ,-_gbg ,-_bae ,0)}};
if _daa :=_dec ._gf ;_daa !=0{_cf =_cf .Offset (_daa /2,_daa /2);};_cf =_cf .Offset (float64 (x ),float64 (y ));_ba .DrawBezierPathWithCreator (_cf ,_dec ._da );};func _agg (_egc float64 )float64 {return _egc *_d .Pi /180.0};func (_fc *Renderer )SetStrokeDashArray (dashArray []float64 ){_gfd :=make ([]int64 ,len (dashArray ));
for _dedc ,_fcd :=range dashArray {_gfd [_dedc ]=int64 (_fcd );};_fc ._da .Add_d (_gfd ,0);};func (_fdd *Renderer )Text (text string ,x ,y int ){_fdd ._da .Add_q ();_fdd .SetFont (_fdd ._ac );_bfg ,_acec ,_fdg ,_ :=_cgc (_fdd ._bcc );_fdd ._da .Add_rg (_bfg ,_acec ,_fdg );
_fdd ._da .Translate (float64 (x ),float64 (y )).Scale (1,-1);if _dcd :=_fdd ._gb ;_dcd !=0{_fdd ._da .RotateDeg (_dcd );};_fdd ._da .Add_BT ().Add_TL (_fdd ._adb );var (_gee =_fdd ._ac .Encoder ();_acc =_fdd .wrapText (text );_ab =len (_acc ););for _cbd ,_fag :=range _acc {_fdd ._da .Add_TJ (_bb .MakeStringFromBytes (_gee .Encode (_fag )));
if _cbd !=_ab -1{_fdd ._da .Add_Tstar ();};};_fdd ._da .Add_ET ();_fdd ._da .Add_Q ();};func (_de *Renderer )SetDPI (dpi float64 ){_de ._ad =dpi };func (_gg *Renderer )ArcTo (cx ,cy int ,rx ,ry ,startAngle ,deltaAngle float64 ){startAngle =_ade (2.0*_d .Pi -startAngle );
deltaAngle =_ade (-deltaAngle );_ee ,_bag :=deltaAngle ,1;if _d .Abs (deltaAngle )> 90.0{_bag =int (_d .Ceil (_d .Abs (deltaAngle )/90.0));_ee =deltaAngle /float64 (_bag );};var (_cae =_agg (_ee /2);_bad =_d .Abs (4.0/3.0*(1.0-_d .Cos (_cae ))/_d .Sin (_cae ));
_dbb =float64 (cx );_ceg =float64 (cy ););for _gab :=0;_gab < _bag ;_gab ++{_fa :=_agg (startAngle +float64 (_gab )*_ee );_ead :=_agg (startAngle +float64 (_gab +1)*_ee );_fcb :=_d .Cos (_fa );_be :=_d .Cos (_ead );_bca :=_d .Sin (_fa );_ef :=_d .Sin (_ead );
var _cg []float64 ;if _ee > 0{_cg =[]float64 {_dbb +rx *_fcb ,_ceg -ry *_bca ,_dbb +rx *(_fcb -_bad *_bca ),_ceg -ry *(_bca +_bad *_fcb ),_dbb +rx *(_be +_bad *_ef ),_ceg -ry *(_ef -_bad *_be ),_dbb +rx *_be ,_ceg -ry *_ef };}else {_cg =[]float64 {_dbb +rx *_fcb ,_ceg -ry *_bca ,_dbb +rx *(_fcb +_bad *_bca ),_ceg -ry *(_bca -_bad *_fcb ),_dbb +rx *(_be -_bad *_ef ),_ceg -ry *(_ef +_bad *_be ),_dbb +rx *_be ,_ceg -ry *_ef };
};if _gab ==0{_gg ._da .Add_l (_cg [0],_cg [1]);};_gg ._da .Add_c (_cg [2],_cg [3],_cg [4],_cg [5],_cg [6],_cg [7]);};};func (_eg *Renderer )SetTextRotation (radians float64 ){_eg ._gb =_ade (-radians )};func (_gaa *Renderer )SetFontSize (size float64 ){_gaa ._adb =size };
func _ade (_geeb float64 )float64 {return _geeb *180/_d .Pi };func (_fe *Renderer )SetStrokeWidth (width float64 ){_fe ._gf =width ;_fe ._da .Add_w (width )};func (_bab *Renderer )LineTo (x ,y int ){_bab ._da .Add_l (float64 (x ),float64 (y ))};func _cgc (_fbf _e .Color )(float64 ,float64 ,float64 ,float64 ){_bfgg ,_fbe ,_fca ,_bcf :=_deec (_fbf );
return float64 (_bfgg )/255,float64 (_fbe )/255,float64 (_fca )/255,float64 (_bcf )/255;};func (_dga *Renderer )Stroke (){_dga ._da .Add_S ()};func (_gc *Renderer )SetFontColor (color _e .Color ){_gc ._bcc =color };func (_bf *Renderer )SetFont (font _dg .Font ){_cgd ,_fcdb :=font .(*_eb .PdfFont );
if !_fcdb {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065");return ;};_cdb ,_fcdb :=_bf ._f [_cgd ];if !_fcdb {_cdb =_bcg ("\u0046\u006f\u006e\u0074",1,_bf ._bg .HasFontByName );
if _ace :=_bf ._bg .SetFontByName (_cdb ,_cgd .ToPdfObject ());_ace !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0064d\u0020\u0066\u006f\u006e\u0074\u0020\u0025\u0076\u0020\u0074\u006f\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073",_cgd );
};_bf ._f [_cgd ]=_cdb ;};_bf ._da .Add_Tf (_cdb ,_bf ._adb );_bf ._ac =_cgd ;};func _deec (_gfga _e .Color )(uint8 ,uint8 ,uint8 ,uint8 ){_dcdg ,_fad ,_bee ,_cbc :=_gfga .RGBA ();return uint8 (_dcdg >>8),uint8 (_fad >>8),uint8 (_bee >>8),uint8 (_cbc >>8);
};func NewRenderer (cc *_ca .ContentCreator ,res *_eb .PdfPageResources )func (int ,int )(_dg .Renderer ,error ){return func (_ed ,_fd int )(_dg .Renderer ,error ){_ea :=&Renderer {_a :_ed ,_ec :_fd ,_ad :72,_da :cc ,_bg :res ,_f :map[*_eb .PdfFont ]_bb .PdfObjectName {}};
_ea .ResetStyle ();return _ea ,nil ;};};func (_af *Renderer )getTextWidth (_caee string )float64 {var _cdbg float64 ;for _ ,_dgaa :=range _caee {_cfg ,_bfd :=_af ._ac .GetRuneMetrics (_dgaa );if !_bfd {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074e\u0064 \u0072u\u006e\u0065\u0020\u0025\u0076\u0020\u0069\u006e\u0020\u0066\u006f\u006e\u0074",_dgaa );
};_cdbg +=_cfg .Wx ;};return _af ._adb *_cdbg /1000.0;};