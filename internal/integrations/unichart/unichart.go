//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package unichart ;import (_ab "bytes";_c "fmt";_cb "github.com/unidoc/unichart/render";_gd "github.com/unidoc/unipdf/v3/common";_abc "github.com/unidoc/unipdf/v3/contentstream";_gg "github.com/unidoc/unipdf/v3/contentstream/draw";_e "github.com/unidoc/unipdf/v3/core";
_abd "github.com/unidoc/unipdf/v3/model";_f "image/color";_d "io";_g "math";);func (_beb *Renderer )Stroke (){_beb ._b .Add_S ()};func (_ded *Renderer )ClearTextRotation (){_ded ._fe =0};func _dea (_afdf _f .Color )(float64 ,float64 ,float64 ,float64 ){_gbf ,_dbg ,_gfb ,_cbfb :=_aa (_afdf );
return float64 (_gbf )/255,float64 (_dbg )/255,float64 (_gfb )/255,float64 (_cbfb )/255;};func (_be *Renderer )SetStrokeColor (color _f .Color ){_be ._ec =color ;_afd ,_ea ,_ee ,_ :=_dea (color );_be ._b .Add_RG (_afd ,_ea ,_ee );};func (_efc *Renderer )SetFont (font _cb .Font ){_fga ,_bdg :=font .(*_abd .PdfFont );
if !_bdg {_gd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065");return ;};_eee ,_bdg :=_efc ._ad [_fga ];if !_bdg {_eee =_bda ("\u0046\u006f\u006e\u0074",1,_efc ._aee .HasFontByName );
if _bbgb :=_efc ._aee .SetFontByName (_eee ,_fga .ToPdfObject ());_bbgb !=nil {_gd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0064d\u0020\u0066\u006f\u006e\u0074\u0020\u0025\u0076\u0020\u0074\u006f\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073",_fga );
};_efc ._ad [_fga ]=_eee ;};_efc ._b .Add_Tf (_eee ,_efc ._eca );_efc ._ef =_fga ;};func NewRenderer (cc *_abc .ContentCreator ,res *_abd .PdfPageResources )func (int ,int )(_cb .Renderer ,error ){return func (_db ,_bb int )(_cb .Renderer ,error ){_dd :=&Renderer {_abe :_db ,_af :_bb ,_ae :72,_b :cc ,_aee :res ,_ad :map[*_abd .PdfFont ]_e .PdfObjectName {}};
_dd .ResetStyle ();return _dd ,nil ;};};func (_ag *Renderer )SetClassName (name string ){};func (_ggc *Renderer )SetFontSize (size float64 ){_ggc ._eca =size };func (_eae *Renderer )getTextWidth (_cbed string )float64 {var _dbf float64 ;for _ ,_fb :=range _cbed {_dab ,_adag :=_eae ._ef .GetRuneMetrics (_fb );
if !_adag {_gd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074e\u0064 \u0072u\u006e\u0065\u0020\u0025\u0076\u0020\u0069\u006e\u0020\u0066\u006f\u006e\u0074",_fb );};_dbf +=_dab .Wx ;};return _eae ._eca *_dbf /1000.0;
};func (_gfc *Renderer )LineTo (x ,y int ){_gfc ._b .Add_l (float64 (x ),float64 (y ))};type Renderer struct{_abe int ;_af int ;_ae float64 ;_b *_abc .ContentCreator ;_aee *_abd .PdfPageResources ;_bc _f .Color ;_ec _f .Color ;_cg float64 ;_ef *_abd .PdfFont ;
_eca float64 ;_cbe _f .Color ;_fe float64 ;_ad map[*_abd .PdfFont ]_e .PdfObjectName ;};func (_eb *Renderer )GetDPI ()float64 {return _eb ._ae };func (_afc *Renderer )SetStrokeWidth (width float64 ){_afc ._cg =width ;_afc ._b .Add_w (width )};func _dbb (_ecdb float64 )float64 {return _ecdb *_g .Pi /180.0};
func (_fdg *Renderer )SetFillColor (color _f .Color ){_fdg ._bc =color ;_dba ,_df ,_fa ,_ :=_dea (color );_fdg ._b .Add_rg (_dba ,_df ,_fa );};func (_fdc *Renderer )SetDPI (dpi float64 ){_fdc ._ae =dpi };func (_bd *Renderer )SetStrokeDashArray (dashArray []float64 ){_gf :=make ([]int64 ,len (dashArray ));
for _da ,_cba :=range dashArray {_gf [_da ]=int64 (_cba );};_bd ._b .Add_d (_gf ,0);};func (_fgf *Renderer )SetFontColor (color _f .Color ){_fgf ._cbe =color };func (_bea *Renderer )ArcTo (cx ,cy int ,rx ,ry ,startAngle ,deltaAngle float64 ){startAngle =_dac (2.0*_g .Pi -startAngle );
deltaAngle =_dac (-deltaAngle );_ac ,_ce :=deltaAngle ,1;if _g .Abs (deltaAngle )> 90.0{_ce =int (_g .Ceil (_g .Abs (deltaAngle )/90.0));_ac =deltaAngle /float64 (_ce );};var (_adf =_dbb (_ac /2);_cd =_g .Abs (4.0/3.0*(1.0-_g .Cos (_adf ))/_g .Sin (_adf ));
_cgc =float64 (cx );_gga =float64 (cy ););for _fg :=0;_fg < _ce ;_fg ++{_aeg :=_dbb (startAngle +float64 (_fg )*_ac );_ed :=_dbb (startAngle +float64 (_fg +1)*_ac );_bbg :=_g .Cos (_aeg );_afdc :=_g .Cos (_ed );_agb :=_g .Sin (_aeg );_ggd :=_g .Sin (_ed );
var _dfa []float64 ;if _ac > 0{_dfa =[]float64 {_cgc +rx *_bbg ,_gga -ry *_agb ,_cgc +rx *(_bbg -_cd *_agb ),_gga -ry *(_agb +_cd *_bbg ),_cgc +rx *(_afdc +_cd *_ggd ),_gga -ry *(_ggd -_cd *_afdc ),_cgc +rx *_afdc ,_gga -ry *_ggd };}else {_dfa =[]float64 {_cgc +rx *_bbg ,_gga -ry *_agb ,_cgc +rx *(_bbg +_cd *_agb ),_gga -ry *(_agb -_cd *_bbg ),_cgc +rx *(_afdc -_cd *_ggd ),_gga -ry *(_ggd +_cd *_afdc ),_cgc +rx *_afdc ,_gga -ry *_ggd };
};if _fg ==0{_bea ._b .Add_l (_dfa [0],_dfa [1]);};_bea ._b .Add_c (_dfa [2],_dfa [3],_dfa [4],_dfa [5],_dfa [6],_dfa [7]);};};func _dac (_gef float64 )float64 {return _gef *180/_g .Pi };func (_bab *Renderer )SetTextRotation (radians float64 ){_bab ._fe =_dac (-radians )};
func (_gbb *Renderer )Fill (){_gbb ._b .Add_f ()};func (_fd *Renderer )ResetStyle (){_fd .SetFillColor (_f .Black );_fd .SetStrokeColor (_f .Transparent );_fd .SetStrokeWidth (0);_fd .SetFont (_abd .DefaultFont ());_fd .SetFontColor (_f .Black );_fd .SetFontSize (12);
_fd .SetTextRotation (0);};func _aa (_gaa _f .Color )(uint8 ,uint8 ,uint8 ,uint8 ){_aec ,_acef ,_ge ,_aff :=_gaa .RGBA ();return uint8 (_aec >>8),uint8 (_acef >>8),uint8 (_ge >>8),uint8 (_aff >>8);};func (_fc *Renderer )Save (w _d .Writer )error {if w ==nil {return nil ;
};_ ,_eff :=_d .Copy (w ,_ab .NewBuffer (_fc ._b .Bytes ()));return _eff ;};func (_de *Renderer )MeasureText (text string )_cb .Box {_fea :=_de ._eca ;_cded ,_bae :=_de ._ef .GetFontDescriptor ();if _bae !=nil {_gd .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0066\u006fn\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
}else {_ddd ,_aba :=_cded .GetCapHeight ();if _aba !=nil {_gd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0067\u0065\u0074\u0020f\u006f\u006e\u0074\u0020\u0063\u0061\u0070\u0020\u0068\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_aba );
}else {_fea =_ddd /1000.0*_de ._eca ;};};var (_ada =0.0;_gde =_de .wrapText (text ););for _ ,_efcf :=range _gde {if _cbf :=_de .getTextWidth (_efcf );_cbf > _ada {_ada =_cbf ;};};_eaa :=_cb .NewBox (0,0,int (_ada ),int (_fea ));if _ecd :=_de ._fe ;_ecd !=0{_eaa =_eaa .Corners ().Rotate (_ecd ).Box ();
};return _eaa ;};func (_efb *Renderer )Close (){_efb ._b .Add_h ()};func _bda (_bbce string ,_ff int ,_bcb func (_e .PdfObjectName )bool )_e .PdfObjectName {_bafd :=_e .PdfObjectName (_c .Sprintf ("\u0025\u0073\u0025\u0064",_bbce ,_ff ));for _fab :=_ff ;
_bcb (_bafd );{_fab ++;_bafd =_e .PdfObjectName (_c .Sprintf ("\u0025\u0073\u0025\u0064",_bbce ,_fab ));};return _bafd ;};func (_ga *Renderer )MoveTo (x ,y int ){_ga ._b .Add_m (float64 (x ),float64 (y ))};func (_aeed *Renderer )wrapText (_cca string )[]string {var (_fdcf []string ;
_bdgg []rune ;);for _ ,_dg :=range _cca {if _dg =='\n'{_fdcf =append (_fdcf ,string (_bdgg ));_bdgg =[]rune {};continue ;};_bdgg =append (_bdgg ,_dg );};if len (_bdgg )> 0{_fdcf =append (_fdcf ,string (_bdgg ));};return _fdcf ;};func (_baf *Renderer )FillStroke (){_baf ._b .Add_B ()};
func (_ba *Renderer )QuadCurveTo (cx ,cy ,x ,y int ){_ba ._b .Add_v (float64 (x ),float64 (y ),float64 (cx ),float64 (cy ));};func (_cc *Renderer )Circle (radius float64 ,x ,y int ){_gbc :=radius ;if _bbe :=_cc ._cg ;_bbe !=0{_gbc -=_bbe /2;};_dff :=_gbc *0.551784;
_bbgd :=_gg .CubicBezierPath {Curves :[]_gg .CubicBezierCurve {_gg .NewCubicBezierCurve (-_gbc ,0,-_gbc ,_dff ,-_dff ,_gbc ,0,_gbc ),_gg .NewCubicBezierCurve (0,_gbc ,_dff ,_gbc ,_gbc ,_dff ,_gbc ,0),_gg .NewCubicBezierCurve (_gbc ,0,_gbc ,-_dff ,_dff ,-_gbc ,0,-_gbc ),_gg .NewCubicBezierCurve (0,-_gbc ,-_dff ,-_gbc ,-_gbc ,-_dff ,-_gbc ,0)}};
if _ggg :=_cc ._cg ;_ggg !=0{_bbgd =_bbgd .Offset (_ggg /2,_ggg /2);};_bbgd =_bbgd .Offset (float64 (x ),float64 (y ));_gg .DrawBezierPathWithCreator (_bbgd ,_cc ._b );};func (_abdb *Renderer )Text (text string ,x ,y int ){_abdb ._b .Add_q ();_abdb .SetFont (_abdb ._ef );
_gc ,_bba ,_gcg ,_ :=_dea (_abdb ._cbe );_abdb ._b .Add_rg (_gc ,_bba ,_gcg );_abdb ._b .Translate (float64 (x ),float64 (y )).Scale (1,-1);if _eag :=_abdb ._fe ;_eag !=0{_abdb ._b .RotateDeg (_eag );};_abdb ._b .Add_BT ().Add_TL (_abdb ._eca );var (_acd =_abdb ._ef .Encoder ();
_abf =_abdb .wrapText (text );_ca =len (_abf ););for _bce ,_bg :=range _abf {_abdb ._b .Add_TJ (_e .MakeStringFromBytes (_acd .Encode (_bg )));if _bce !=_ca -1{_abdb ._b .Add_Tstar ();};};_abdb ._b .Add_ET ();_abdb ._b .Add_Q ();};