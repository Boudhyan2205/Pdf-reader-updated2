//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_bc "bytes";_f "compress/gzip";_e "crypto";_cf "crypto/aes";_fe "crypto/cipher";_cag "crypto/hmac";_ad "crypto/rand";_eff "crypto/rsa";_bb "crypto/sha256";_cg "crypto/sha512";_bbe "crypto/x509";_fg "encoding/base64";_dd "encoding/hex";
_ee "encoding/json";_db "encoding/pem";_ce "errors";_df "fmt";_dbb "github.com/unidoc/unipdf/v3/common";_eg "io";_dc "io/ioutil";_de "net";_cd "net/http";_d "os";_ef "path/filepath";_b "sort";_a "strings";_ca "sync";_g "time";);func _bce (_ccf string ,_ba string )([]byte ,error ){var (_ag int ;
_ac string ;);for _ ,_ac =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _ag =_a .Index (_ba ,_ac );_ag !=-1{break ;};};if _ag ==-1{return nil ,_df .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");
};_acb :=_ba [:_ag ];_aea :=_ag +len (_ac );_dg :=_ba [_aea :];if _acb ==""||_dg ==""{return nil ,_df .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_fga ,_bf :=_fg .StdEncoding .DecodeString (_acb );if _bf !=nil {return nil ,_df .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_gag ,_bf :=_fg .StdEncoding .DecodeString (_dg );
if _bf !=nil {return nil ,_df .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_gac ,_ :=_db .Decode ([]byte (_ccf ));if _gac ==nil {return nil ,_df .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_cb ,_bf :=_bbe .ParsePKIXPublicKey (_gac .Bytes );if _bf !=nil {return nil ,_bf ;};_ab :=_cb .(*_eff .PublicKey );if _ab ==nil {return nil ,_df .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_bd :=_cg .New ();_bd .Write (_fga );_gfd :=_bd .Sum (nil );_bf =_eff .VerifyPKCS1v15 (_ab ,_e .SHA512 ,_gfd ,_gag );if _bf !=nil {return nil ,_bf ;};return _fga ,nil ;};func (_faf *LicenseKey )ToString ()string {if _faf ._gea {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};_age :=_df .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_faf .LicenseId );_age +=_df .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_faf .CustomerId );
_age +=_df .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_faf .CustomerName );_age +=_df .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_faf .Tier );_age +=_df .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_dbb .UtcTimeFormat (_faf .CreatedAt ));
if _faf .ExpiresAt ==nil {_age +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";}else {_age +=_df .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_dbb .UtcTimeFormat (*_faf .ExpiresAt ));
};_age +=_df .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_faf .CreatorName ,_faf .CreatorEmail );return _age ;};func GetLicenseKey ()*LicenseKey {if _dfd ==nil {return nil ;};_fdag :=*_dfd ;
return &_fdag ;};type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};func (_cdb *meteredClient )checkinUsage (_ced meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_ced .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_ced .PackageVersion =_dbb .Version ;var _gfa meteredUsageCheckinResp ;_cbb :=_cdb ._cbc +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_gee ,_caa :=_ee .Marshal (_ced );if _caa !=nil {return _gfa ,_caa ;
};_dge ,_caa :=_dgc (_gee );if _caa !=nil {return _gfa ,_caa ;};_cbd ,_caa :=_cd .NewRequest ("\u0050\u004f\u0053\u0054",_cbb ,_dge );if _caa !=nil {return _gfa ,_caa ;};_cbd .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_cbd .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_cbd .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_cbd .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_cdb ._bca );_cgfd ,_caa :=_cdb ._ccd .Do (_cbd );if _caa !=nil {return _gfa ,_caa ;};defer _cgfd .Body .Close ();if _cgfd .StatusCode !=200{_cef ,_gbc :=_bdb (_cgfd );if _gbc !=nil {return _gfa ,_gbc ;
};_gbc =_ee .Unmarshal (_cef ,&_gfa );if _gbc !=nil {return _gfa ,_gbc ;};return _gfa ,_df .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_cgfd .StatusCode );
};_aa :=_cgfd .Header .Get ("\u0058\u002d\u0055\u0043\u002d\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065");_cceb :=_agef (_ced .MacAddress ,string (_gee ));if _cceb !=_aa {_dbb .Log .Error ("I\u006e\u0076\u0061l\u0069\u0064\u0020\u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u002c\u0020\u0073\u0065t\u0020\u0074\u0068e\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0073\u0065\u0072\u0076e\u0072\u0020\u0074\u006f \u0068\u0074\u0074\u0070s\u003a\u002f\u002f\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069o\u002f\u0061\u0070\u0069");
return _gfa ,_ce .New ("\u0066\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0065\u0072\u0076\u0065\u0072 \u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065");
};_cfb ,_caa :=_bdb (_cgfd );if _caa !=nil {return _gfa ,_caa ;};_caa =_ee .Unmarshal (_cfb ,&_gfa );if _caa !=nil {return _gfa ,_caa ;};return _gfa ,nil ;};func (_bcd *LicenseKey )Validate ()error {if _bcd ._gea {return nil ;};if len (_bcd .LicenseId )< 10{return _df .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");
};if len (_bcd .CustomerId )< 10{return _df .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_bcd .CustomerName )< 1{return _df .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");
};if _effg .After (_bcd .CreatedAt ){return _df .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bcd .ExpiresAt ==nil {_bag :=_bcd .CreatedAt .AddDate (1,0,0);if _ec .After (_bag ){_bag =_ec ;};_bcd .ExpiresAt =&_bag ;};if _bcd .CreatedAt .After (*_bcd .ExpiresAt ){return _df .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _bcd .isExpired (){_gdc :="\u0054\u0068\u0065\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064\u002e\u000a"+"\u0059o\u0075\u0020\u006d\u0061y\u0020n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0075\u0070d\u0061\u0074\u0065\u0020\u0074\u0068\u0065\u0020l\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006e\u0065\u0077\u0065s\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0066\u006f\u0072\u0020\u0079o\u0075\u0072\u0020\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074i\u006fn\u002e\u000a"+"\u0054o\u0020\u0066\u0069\u006ed y\u006f\u0075\u0072\u0020n\u0065\u0077\u0065\u0073\u0074\u0020\u006c\u0069\u0063\u0065n\u0073\u0065\u0020\u006b\u0065\u0079\u002c\u0020\u0067\u006f\u0020\u0074\u006f\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063l\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064oc\u002e\u0069\u006f \u0061\u006e\u0064\u0020\u0067o\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006d\u0065\u006e\u0075\u002e";
return _df .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0025\u0073",_gdc );};if len (_bcd .CreatorName )< 1{return _df .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");
};if len (_bcd .CreatorEmail )< 1{return _df .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");};if _bcd .CreatedAt .After (_ea ){if !_bcd .UniPDF {return _df .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};var _dfd =MakeUnlicensedKey ();type stateLoader interface{loadState (_gdb string )(reportState ,error );updateState (_gab ,_deg ,_daa string ,_cgg int ,_cbcd bool ,_aaf int ,_be int ,_eee _g .Time ,_bcef map[string ]int )error ;};func (_bdf *LicenseKey )isExpired ()bool {return _bdf .getExpiryDateToCompare ().After (*_bdf .ExpiresAt )};
func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_dbb .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_dbb .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _df .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _dfd !=nil &&(_dfd ._gea ||_dfd .Tier !=LicenseTierUnlicensed ){_dbb .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _ce .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_bdc :=_gda ();_bdc ._bca =apiKey ;_fab ,_cab :=_bdc .getStatus ();if _cab !=nil {return _cab ;};if !_fab .Valid {return _ce .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_ecf :=&LicenseKey {_gea :true ,_dda :apiKey ,_cgf :true };_dfd =_ecf ;return nil ;};func (_cae *LicenseKey )TypeToString ()string {if _cae ._gea {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};if _cae .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";};if _cae .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";
};if _cae .Tier ==LicenseTierIndividual ||_cae .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};func _gda ()*meteredClient {_fdg :=meteredClient {_cbc :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_ccd :&_cd .Client {Timeout :30*_g .Second }};
if _da :=_d .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_a .HasPrefix (_da ,"\u0068\u0074\u0074\u0070"){_fdg ._cbc =_da ;};return &_fdg ;};func _cga ()([]string ,[]string ,error ){_aab ,_bab :=_de .Interfaces ();
if _bab !=nil {return nil ,nil ,_bab ;};var _gace []string ;var _caf []string ;for _ ,_fed :=range _aab {if _fed .Flags &_de .FlagUp ==0||_bc .Equal (_fed .HardwareAddr ,nil ){continue ;};_begd ,_abdf :=_fed .Addrs ();if _abdf !=nil {return nil ,nil ,_abdf ;
};_bcg :=0;for _ ,_agf :=range _begd {var _fda _de .IP ;switch _agd :=_agf .(type ){case *_de .IPNet :_fda =_agd .IP ;case *_de .IPAddr :_fda =_agd .IP ;};if _fda .IsLoopback (){continue ;};if _fda .To4 ()==nil {continue ;};_caf =append (_caf ,_fda .String ());
_bcg ++;};_dgge :=_fed .HardwareAddr .String ();if _dgge !=""&&_bcg > 0{_gace =append (_gace ,_dgge );};};return _gace ,_caf ,nil ;};func _geed ()(_de .IP ,error ){_bcbf ,_cdf :=_de .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");
if _cdf !=nil {return nil ,_cdf ;};defer _bcbf .Close ();_eccb :=_bcbf .LocalAddr ().(*_de .UDPAddr );return _eccb .IP ,nil ;};const _eec ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
func (_aad defaultStateHolder )updateState (_ade ,_beb ,_abc string ,_bac int ,_cec bool ,_fdb int ,_acd int ,_cfd _g .Time ,_agec map[string ]int )error {_bea ,_abe :=_egdf ();if _abe !=nil {return _abe ;};if len (_ade )< 20{return _ce .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");
};_ggb :=[]byte (_ade );_eef :=_cg .Sum512_256 (_ggb [:20]);_dcb :=_dd .EncodeToString (_eef [:]);_gagg :=_ef .Join (_bea ,_dcb );var _beag reportState ;_beag .Docs =int64 (_bac );_beag .NumErrors =int64 (_acd );_beag .LimitDocs =_cec ;_beag .RemainingDocs =int64 (_fdb );
_beag .LastWritten =_g .Now ().UTC ();_beag .LastReported =_cfd ;_beag .Instance =_beb ;_beag .Next =_abc ;_beag .Usage =_agec ;_aba ,_abe :=_ee .Marshal (_beag );if _abe !=nil {return _abe ;};const _bcf ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";
_aba ,_abe =_cadg ([]byte (_bcf ),_aba );if _abe !=nil {return _abe ;};_abe =_dc .WriteFile (_gagg ,_aba ,0600);if _abe !=nil {return _abe ;};return nil ;};func _abg (_gg string )(LicenseKey ,error ){var _gge LicenseKey ;_bceb ,_fdd :=_egb (_fd ,_ge ,_gg );
if _fdd !=nil {return _gge ,_fdd ;};_cde ,_fdd :=_bce (_eec ,_bceb );if _fdd !=nil {return _gge ,_fdd ;};_fdd =_ee .Unmarshal (_cde ,&_gge );if _fdd !=nil {return _gge ,_fdd ;};_gge .CreatedAt =_g .Unix (_gge .CreatedAtInt ,0);if _gge .ExpiresAtInt > 0{_cfa :=_g .Unix (_gge .ExpiresAtInt ,0);
_gge .ExpiresAt =&_cfa ;};return _gge ,nil ;};var _ea =_g .Date (2019,6,6,0,0,0,0,_g .UTC );const (_fd ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_ge ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);type meteredStatusForm struct{};type defaultStateHolder struct{};
func (_af defaultStateHolder )loadState (_ccef string )(reportState ,error ){_cbe ,_gaf :=_egdf ();if _gaf !=nil {return reportState {},_gaf ;};_gaf =_d .MkdirAll (_cbe ,0777);if _gaf !=nil {return reportState {},_gaf ;};if len (_ccef )< 20{return reportState {},_ce .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");
};_aeb :=[]byte (_ccef );_efb :=_cg .Sum512_256 (_aeb [:20]);_baca :=_dd .EncodeToString (_efb [:]);_faac :=_ef .Join (_cbe ,_baca );_aga ,_gaf :=_dc .ReadFile (_faac );if _gaf !=nil {if _d .IsNotExist (_gaf ){return reportState {},nil ;};_dbb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gaf );
return reportState {},_ce .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _adb ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_aga ,_gaf =_cdae ([]byte (_adb ),_aga );if _gaf !=nil {return reportState {},_gaf ;
};var _fec reportState ;_gaf =_ee .Unmarshal (_aga ,&_fec );if _gaf !=nil {_dbb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_gaf );return reportState {},_ce .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};return _fec ,nil ;};func SetLicenseKey (content string ,customerName string )error {_gef ,_gcg :=_abg (content );if _gcg !=nil {_dbb .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_gcg );
return _gcg ;};if !_a .EqualFold (_gef .CustomerName ,customerName ){_dbb .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",_gef .CustomerName ,customerName );
return _df .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",_gef .CustomerName ,customerName );
};_gcg =_gef .Validate ();if _gcg !=nil {_dbb .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_gcg );
return _gcg ;};_dfd =&_gef ;return nil ;};func Track (docKey string ,useKey string )error {return _bdfb (docKey ,useKey ,!_dfd ._cgf )};type meteredClient struct{_cbc string ;_bca string ;_ccd *_cd .Client ;};func SetMeteredKeyPersistentCache (val bool ){_dfd ._cgf =val };
func (_bdg *LicenseKey )IsLicensed ()bool {return _bdg .Tier !=LicenseTierUnlicensed ||_bdg ._gea };var _ddf stateLoader =defaultStateHolder {};var _eac =&_ca .Mutex {};var _deea map[string ]int ;func MakeUnlicensedKey ()*LicenseKey {_fbg :=LicenseKey {};
_fbg .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";_fbg .Tier =LicenseTierUnlicensed ;_fbg .CreatedAt =_g .Now ().UTC ();_fbg .CreatedAtInt =_fbg .CreatedAt .Unix ();return &_fbg ;};const _gcb ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";
const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";
);type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _g .Time `json:"lr"`;LastWritten _g .Time `json:"lw"`;
Usage map[string ]int `json:"u"`;};func _cc (_ege string ,_ga []byte )(string ,error ){_ae ,_ :=_db .Decode ([]byte (_ege ));if _ae ==nil {return "",_df .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");};_bbd ,_gf :=_bbe .ParsePKCS1PrivateKey (_ae .Bytes );
if _gf !=nil {return "",_gf ;};_fb :=_cg .New ();_fb .Write (_ga );_ccb :=_fb .Sum (nil );_cgb ,_gf :=_eff .SignPKCS1v15 (_ad .Reader ,_bbd ,_e .SHA512 ,_ccb );if _gf !=nil {return "",_gf ;};_effe :=_fg .StdEncoding .EncodeToString (_ga );_effe +="\u000a\u002b\u000a";
_effe +=_fg .StdEncoding .EncodeToString (_cgb );return _effe ,nil ;};var _beg map[string ]struct{};func _dgc (_eaf []byte )(_eg .Reader ,error ){_acg :=new (_bc .Buffer );_adbaf :=_f .NewWriter (_acg );_adbaf .Write (_eaf );_aaa :=_adbaf .Close ();if _aaa !=nil {return nil ,_aaa ;
};return _acg ,nil ;};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};const _cbg ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";type meteredUsageCheckinForm struct{Instance string `json:"inst"`;
Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;
Usage map[string ]int `json:"u"`;IsPersistentCache bool `json:"is_persistent_cache"`;Timestamp int64 `json:"timestamp"`;};func _cdae (_edg ,_baa []byte )([]byte ,error ){_geeb :=make ([]byte ,_fg .URLEncoding .DecodedLen (len (_baa )));_bfg ,_faaa :=_fg .URLEncoding .Decode (_geeb ,_baa );
if _faaa !=nil {return nil ,_faaa ;};_geeb =_geeb [:_bfg ];_ded ,_faaa :=_cf .NewCipher (_edg );if _faaa !=nil {return nil ,_faaa ;};if len (_geeb )< _cf .BlockSize {return nil ,_ce .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");
};_bee :=_geeb [:_cf .BlockSize ];_geeb =_geeb [_cf .BlockSize :];_cbbb :=_fe .NewCFBDecrypter (_ded ,_bee );_cbbb .XORKeyStream (_geeb ,_geeb );return _geeb ,nil ;};func _egdf ()(string ,error ){_cgbf :=_a .TrimSpace (_d .Getenv (_cdd ));if _cgbf ==""{_dbb .Log .Debug ("\u0024\u0025\u0073\u0020e\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061\u0072\u0069\u0061\u0062l\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020\u0057\u0069\u006c\u006c\u0020\u0075\u0073\u0065\u0020\u0068\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u0074\u006f\u0020s\u0074\u006f\u0072\u0065\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020in\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u002e",_cdd );
_gdg :=_fafg ();if len (_gdg )==0{return "",_df .Errorf ("r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0024\u0025\u0073\u0020\u0065\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061r\u0069a\u0062\u006c\u0065\u0020o\u0072\u0020h\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_cdd );
};_cgbf =_ef .Join (_gdg ,"\u002eu\u006e\u0069\u0064\u006f\u0063");};_cafe :=_d .MkdirAll (_cgbf ,0777);if _cafe !=nil {return "",_cafe ;};return _cgbf ,nil ;};var _ec =_g .Date (2020,1,1,0,0,0,0,_g .UTC );func _egb (_ada string ,_ed string ,_dee string )(string ,error ){_egd :=_a .Index (_dee ,_ada );
if _egd ==-1{return "",_df .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_fa :=_a .Index (_dee ,_ed );if _fa ==-1{return "",_df .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_abd :=_egd +len (_ada )+1;return _dee [_abd :_fa -1],nil ;};func (_ccc *LicenseKey )getExpiryDateToCompare ()_g .Time {if _ccc .Trial {return _g .Now ().UTC ();};return _dbb .ReleasedAt ;};var _effg =_g .Date (2010,1,1,0,0,0,0,_g .UTC );func _bdb (_dagb *_cd .Response )([]byte ,error ){var _baf []byte ;
_bbb ,_gbe :=_cac (_dagb );if _gbe !=nil {return _baf ,_gbe ;};return _dc .ReadAll (_bbb );};func TrackUse (useKey string ){if _dfd ==nil {return ;};if !_dfd ._gea ||len (_dfd ._dda )==0{return ;};if len (useKey )==0{return ;};_eac .Lock ();defer _eac .Unlock ();
if _deea ==nil {_deea =map[string ]int {};};_deea [useKey ]++;};func _agef (_gba ,_eba string )string {_fc :=[]byte (_gba );_ggf :=_cag .New (_bb .New ,_fc );_ggf .Write ([]byte (_eba ));return _fg .StdEncoding .EncodeToString (_ggf .Sum (nil ));};func init (){_ace :=_d .Getenv (_gcb );
_edd :=_d .Getenv (_cbg );if len (_ace )==0||len (_edd )==0{return ;};_gdd ,_gae :=_dc .ReadFile (_ace );if _gae !=nil {_dbb .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_gae );
return ;};_gae =SetLicenseKey (string (_gdd ),_edd );if _gae !=nil {_dbb .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_gae );
return ;};};func (_bae *meteredClient )getStatus ()(meteredStatusResp ,error ){var _faa meteredStatusResp ;_efa :=_bae ._cbc +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";var _eab meteredStatusForm ;_gb ,_cda :=_ee .Marshal (_eab );
if _cda !=nil {return _faa ,_cda ;};_cfag ,_cda :=_dgc (_gb );if _cda !=nil {return _faa ,_cda ;};_eb ,_cda :=_cd .NewRequest ("\u0050\u004f\u0053\u0054",_efa ,_cfag );if _cda !=nil {return _faa ,_cda ;};_eb .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_eb .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_eb .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_eb .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_bae ._bca );_fbc ,_cda :=_bae ._ccd .Do (_eb );if _cda !=nil {return _faa ,_cda ;};defer _fbc .Body .Close ();if _fbc .StatusCode !=200{return _faa ,_df .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_fbc .StatusCode );
};_cce ,_cda :=_bdb (_fbc );if _cda !=nil {return _faa ,_cda ;};_cda =_ee .Unmarshal (_cce ,&_faa );if _cda !=nil {return _faa ,_cda ;};return _faa ,nil ;};func _fafg ()string {_egbf :=_d .Getenv ("\u0048\u004f\u004d\u0045");if len (_egbf )==0{_egbf ,_ =_d .UserHomeDir ();
};return _egbf ;};func _bdfb (_afd string ,_baeg string ,_bbc bool )error {if _dfd ==nil {return _ce .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");};if !_dfd ._gea ||len (_dfd ._dda )==0{return nil ;};if len (_afd )==0&&!_bbc {return _ce .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};_eac .Lock ();defer _eac .Unlock ();if _beg ==nil {_beg =map[string ]struct{}{};};if _deea ==nil {_deea =map[string ]int {};};_ff :=0;if len (_afd )> 0{_ ,_cea :=_beg [_afd ];if !_cea {_beg [_afd ]=struct{}{};_ff ++;};};if _ff ==0&&!_bbc {return nil ;
};_deea [_baeg ]++;_gc :=_g .Now ();_bg ,_ecc :=_ddf .loadState (_dfd ._dda );if _ecc !=nil {_dbb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ecc );return _ecc ;};if _bg .Usage ==nil {_bg .Usage =map[string ]int {};};for _dgg ,_bde :=range _deea {if _dgg !=""{_bg .Usage [_dgg ]+=_bde ;
};};_deea =nil ;const _acf =24*_g .Hour ;const _eace =3*24*_g .Hour ;if len (_bg .Instance )==0||_gc .Sub (_bg .LastReported )> _acf ||(_bg .LimitDocs &&_bg .RemainingDocs <=_bg .Docs +int64 (_ff ))||_bbc {_dfb ,_ebga :=_d .Hostname ();if _ebga !=nil {return _ebga ;
};_ddc :=_bg .Docs ;_gga ,_bgf ,_ebga :=_cga ();if _ebga !=nil {_dbb .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u006c\u006fc\u0061\u006c\u0020\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u003a\u0020\u0025\u0073",_ebga .Error ());
_gga =append (_gga ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");_bgf =append (_bgf ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");
}else {_b .Strings (_bgf );_b .Strings (_gga );_caaf ,_dag :=_geed ();if _dag !=nil {return _dag ;};_bbg :=false ;for _ ,_adba :=range _bgf {if _adba ==_caaf .String (){_bbg =true ;};};if !_bbg {_bgf =append (_bgf ,_caaf .String ());};};_afa :=_gda ();
_afa ._bca =_dfd ._dda ;_ddc +=int64 (_ff );_dgef :=meteredUsageCheckinForm {Instance :_bg .Instance ,Next :_bg .Next ,UsageNumber :int (_ddc ),NumFailed :_bg .NumErrors ,Hostname :_dfb ,LocalIP :_a .Join (_bgf ,"\u002c\u0020"),MacAddress :_a .Join (_gga ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_dbb .Version ,Usage :_bg .Usage ,IsPersistentCache :_dfd ._cgf ,Timestamp :_gc .Unix ()};
if len (_gga )==0{_dgef .MacAddress ="\u006e\u006f\u006e\u0065";};_dgf :=int64 (0);_ggg :=_bg .NumErrors ;_gdaf :=_gc ;_fde :=0;_dfe :=_bg .LimitDocs ;_gaa ,_ebga :=_afa .checkinUsage (_dgef );if _ebga !=nil {if _gc .Sub (_bg .LastReported )> _eace {if !_gaa .Success {return _ce .New (_gaa .Message );
};return _ce .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");};_dgf =_ddc ;_ggg ++;
_gdaf =_bg .LastReported ;}else {_dfe =_gaa .LimitDocs ;_fde =_gaa .RemainingDocs ;_ggg =0;};if len (_gaa .Instance )==0{_gaa .Instance =_dgef .Instance ;};if len (_gaa .Next )==0{_gaa .Next =_dgef .Next ;};_ebga =_ddf .updateState (_afa ._bca ,_gaa .Instance ,_gaa .Next ,int (_dgf ),_dfe ,_fde ,int (_ggg ),_gdaf ,nil );
if _ebga !=nil {return _ebga ;};if !_gaa .Success {return _df .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_gaa .Message );};}else {_ecc =_ddf .updateState (_dfd ._dda ,_bg .Instance ,_bg .Next ,int (_bg .Docs )+_ff ,_bg .LimitDocs ,int (_bg .RemainingDocs ),int (_bg .NumErrors ),_bg .LastReported ,_bg .Usage );
if _ecc !=nil {return _ecc ;};};return nil ;};func _cadg (_abb ,_aff []byte )([]byte ,error ){_aabg ,_dged :=_cf .NewCipher (_abb );if _dged !=nil {return nil ,_dged ;};_caae :=make ([]byte ,_cf .BlockSize +len (_aff ));_cefe :=_caae [:_cf .BlockSize ];
if _ ,_ccdb :=_eg .ReadFull (_ad .Reader ,_cefe );_ccdb !=nil {return nil ,_ccdb ;};_ecg :=_fe .NewCFBEncrypter (_aabg ,_cefe );_ecg .XORKeyStream (_caae [_cf .BlockSize :],_aff );_cge :=make ([]byte ,_fg .URLEncoding .EncodedLen (len (_caae )));_fg .URLEncoding .Encode (_cge ,_caae );
return _cge ,nil ;};type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};type LicenseKey struct{LicenseId string `json:"license_id"`;
CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _g .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_g .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;
CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_gea bool ;_dda string ;_cgf bool ;};func _cac (_gabe *_cd .Response )(_eg .ReadCloser ,error ){var _aed error ;
var _bafe _eg .ReadCloser ;switch _a .ToLower (_gabe .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_bafe ,_aed =_f .NewReader (_gabe .Body );if _aed !=nil {return _bafe ,_aed ;
};defer _bafe .Close ();default:_bafe =_gabe .Body ;};return _bafe ,nil ;};const _cdd ="\u0055N\u0049D\u004f\u0043\u005f\u004c\u0049C\u0045\u004eS\u0045\u005f\u0044\u0049\u0052";func GetMeteredState ()(MeteredStatus ,error ){if _dfd ==nil {return MeteredStatus {},_ce .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};if !_dfd ._gea ||len (_dfd ._dda )==0{return MeteredStatus {},_ce .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_edb ,_ebg :=_ddf .loadState (_dfd ._dda );if _ebg !=nil {_dbb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebg );
return MeteredStatus {},_ebg ;};if _edb .Docs > 0{_cad :=_bdfb ("","",true );if _cad !=nil {return MeteredStatus {},_cad ;};};_eac .Lock ();defer _eac .Unlock ();_dff :=_gda ();_dff ._bca =_dfd ._dda ;_dbbf ,_ebg :=_dff .getStatus ();if _ebg !=nil {return MeteredStatus {},_ebg ;
};if !_dbbf .Valid {return MeteredStatus {},_ce .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_dcg :=MeteredStatus {OK :true ,Credits :_dbbf .OrgCredits ,Used :_dbbf .OrgUsed };return _dcg ,nil ;};