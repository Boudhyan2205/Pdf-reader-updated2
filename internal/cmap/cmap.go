//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package cmap ;import (_d "bufio";_c "bytes";_gd "encoding/hex";_ee "errors";_a "fmt";_aa "github.com/unidoc/unipdf/v3/common";_dd "github.com/unidoc/unipdf/v3/core";_bf "github.com/unidoc/unipdf/v3/internal/cmap/bcmaps";_gf "io";_dc "sort";_b "strconv";_f "strings";_g "unicode/utf16";);func NewCIDSystemInfo (obj _dd .PdfObject )(_gfa CIDSystemInfo ,_dcg error ){_gda ,_bfe :=_dd .GetDict (obj );if !_bfe {return CIDSystemInfo {},_dd .ErrTypeError ;};_af ,_bfe :=_dd .GetStringVal (_gda .Get ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079"));if !_bfe {return CIDSystemInfo {},_dd .ErrTypeError ;};_ff ,_bfe :=_dd .GetStringVal (_gda .Get ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067"));if !_bfe {return CIDSystemInfo {},_dd .ErrTypeError ;};_gg ,_bfe :=_dd .GetIntVal (_gda .Get ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074"));if !_bfe {return CIDSystemInfo {},_dd .ErrTypeError ;};return CIDSystemInfo {Registry :_af ,Ordering :_ff ,Supplement :_gg },nil ;};type CharCode uint32 ;func (_aaea *cMapParser )parseName ()(cmapName ,error ){_dab :="";_dec :=false ;for {_ebad ,_bfbb :=_aaea ._dcc .Peek (1);if _bfbb ==_gf .EOF {break ;};if _bfbb !=nil {return cmapName {_dab },_bfbb ;};if !_dec {if _ebad [0]=='/'{_dec =true ;_aaea ._dcc .ReadByte ();}else {_aa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u004e\u0061\u006d\u0065\u0020\u0073\u0074a\u0072t\u0069n\u0067 \u0077\u0069\u0074\u0068\u0020\u0025\u0073\u0020\u0028\u0025\u0020\u0078\u0029",_ebad ,_ebad );return cmapName {_dab },_a .Errorf ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u006ea\u006d\u0065:\u0020\u0028\u0025\u0063\u0029",_ebad [0]);};}else {if _dd .IsWhiteSpace (_ebad [0]){break ;}else if (_ebad [0]=='/')||(_ebad [0]=='[')||(_ebad [0]=='(')||(_ebad [0]==']')||(_ebad [0]=='<')||(_ebad [0]=='>'){break ;}else if _ebad [0]=='#'{_bfba ,_dce :=_aaea ._dcc .Peek (3);if _dce !=nil {return cmapName {_dab },_dce ;};_aaea ._dcc .Discard (3);_bgcf ,_dce :=_gd .DecodeString (string (_bfba [1:3]));if _dce !=nil {return cmapName {_dab },_dce ;};_dab +=string (_bgcf );}else {_gdf ,_ :=_aaea ._dcc .ReadByte ();_dab +=string (_gdf );};};};return cmapName {_dab },nil ;};func (cmap *CMap )parseBfchar ()error {for {_bed ,_eee :=cmap .parseObject ();if _eee !=nil {if _eee ==_gf .EOF {break ;};return _eee ;};var _cea CharCode ;switch _agb :=_bed .(type ){case cmapOperand :if _agb .Operand ==_eeec {return nil ;};return _ee .New ("\u0075n\u0065x\u0070\u0065\u0063\u0074\u0065d\u0020\u006fp\u0065\u0072\u0061\u006e\u0064");case cmapHexString :_cea =_gdeg (_agb );default:return _ee .New ("\u0075n\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0074\u0079\u0070\u0065");};_bed ,_eee =cmap .parseObject ();if _eee !=nil {if _eee ==_gf .EOF {break ;};return _eee ;};var _ccc []rune ;switch _beda :=_bed .(type ){case cmapOperand :if _beda .Operand ==_eeec {return nil ;};_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020o\u0070\u0065\u0072\u0061\u006e\u0064\u002e\u0020\u0025\u0023\u0076",_beda );return ErrBadCMap ;case cmapHexString :_ccc =_aac (_beda );case cmapName :_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u006e\u0061\u006de\u002e \u0025\u0023\u0076",_beda );_ccc =[]rune {MissingCodeRune };default:_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0074\u0079\u0070e\u002e \u0025\u0023\u0076",_bed );return ErrBadCMap ;};cmap ._fb [_cea ]=string (_ccc );};return nil ;};func IsPredefinedCMap (name string )bool {return _bf .AssetExists (name )};func (cmap *CMap )parseSystemInfo ()error {_ccfe :=false ;_fed :=false ;_bbb :="";_fbe :=false ;_bae :=CIDSystemInfo {};for _gge :=0;_gge < 50&&!_fbe ;_gge ++{_cgac ,_cdca :=cmap .parseObject ();if _cdca !=nil {return _cdca ;};switch _ggga :=_cgac .(type ){case cmapDict :_gec :=_ggga .Dict ;_fcbe ,_bab :=_gec ["\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079"];if !_bab {_aa .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");return ErrBadCMap ;};_cggd ,_bab :=_fcbe .(cmapString );if !_bab {_aa .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");return ErrBadCMap ;};_bae .Registry =_cggd .String ;_fcbe ,_bab =_gec ["\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067"];if !_bab {_aa .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");return ErrBadCMap ;};_cggd ,_bab =_fcbe .(cmapString );if !_bab {_aa .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");return ErrBadCMap ;};_bae .Ordering =_cggd .String ;_ffg ,_bab :=_gec ["\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074"];if !_bab {_aa .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");return ErrBadCMap ;};_bbe ,_bab :=_ffg .(cmapInt );if !_bab {_aa .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");return ErrBadCMap ;};_bae .Supplement =int (_bbe ._gffd );_fbe =true ;case cmapOperand :switch _ggga .Operand {case "\u0062\u0065\u0067i\u006e":_ccfe =true ;case "\u0065\u006e\u0064":_fbe =true ;case "\u0064\u0065\u0066":_fed =false ;};case cmapName :if _ccfe {_bbb =_ggga .Name ;_fed =true ;};case cmapString :if _fed {switch _bbb {case "\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079":_bae .Registry =_ggga .String ;case "\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067":_bae .Ordering =_ggga .String ;};};case cmapInt :if _fed {switch _bbb {case "\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074":_bae .Supplement =int (_ggga ._gffd );};};};};if !_fbe {_aa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0050\u0061\u0072\u0073\u0065\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006e\u0066\u006f\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u006c\u0079");return ErrBadCMap ;};cmap ._ebe =_bae ;return nil ;};type CIDSystemInfo struct{Registry string ;Ordering string ;Supplement int ;};func LoadPredefinedCMap (name string )(*CMap ,error ){cmap ,_ed :=_dfg (name );if _ed !=nil {return nil ,_ed ;};if cmap ._cg ==""{cmap .computeInverseMappings ();return cmap ,nil ;};_ggg ,_ed :=_dfg (cmap ._cg );if _ed !=nil {return nil ,_ed ;};for _gb ,_bfbf :=range _ggg ._db {if _ ,_edd :=cmap ._db [_gb ];!_edd {cmap ._db [_gb ]=_bfbf ;};};for _ ,_cge :=range _ggg ._ad {cmap ._ad =append (cmap ._ad ,_cge );};cmap .computeInverseMappings ();return cmap ,nil ;};type charRange struct{_aab CharCode ;_de CharCode ;};func _abd (_gdae []byte )*cMapParser {_agcf :=cMapParser {};_dfca :=_c .NewBuffer (_gdae );_agcf ._dcc =_d .NewReader (_dfca );return &_agcf ;};func _dfg (_dgc string )(*CMap ,error ){_fg ,_ba :=_bf .Asset (_dgc );if _ba !=nil {return nil ,_ba ;};return LoadCmapFromDataCID (_fg );};func (cmap *CMap )CharcodeToCID (code CharCode )(CharCode ,bool ){_bfbg ,_ade :=cmap ._db [code ];return _bfbg ,_ade ;};func (cmap *CMap )parseCodespaceRange ()error {for {_feeb ,_gdc :=cmap .parseObject ();if _gdc !=nil {if _gdc ==_gf .EOF {break ;};return _gdc ;};_dbaa ,_afb :=_feeb .(cmapHexString );if !_afb {if _ddf ,_dfe :=_feeb .(cmapOperand );_dfe {if _ddf .Operand ==_ffdg {return nil ;};return _ee .New ("\u0075n\u0065x\u0070\u0065\u0063\u0074\u0065d\u0020\u006fp\u0065\u0072\u0061\u006e\u0064");};};_feeb ,_gdc =cmap .parseObject ();if _gdc !=nil {if _gdc ==_gf .EOF {break ;};return _gdc ;};_ffa ,_afb :=_feeb .(cmapHexString );if !_afb {return _ee .New ("\u006e\u006f\u006e-\u0068\u0065\u0078\u0020\u0068\u0069\u0067\u0068");};if len (_dbaa ._ecge )!=len (_ffa ._ecge ){return _ee .New ("\u0075\u006e\u0065\u0071\u0075\u0061\u006c\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0062\u0079\u0074\u0065\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065");};_fbga :=_gdeg (_dbaa );_bgaa :=_gdeg (_ffa );if _bgaa < _fbga {_aa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0042\u0061d\u0020\u0063\u006fd\u0065\u0073\u0070\u0061\u0063\u0065\u002e\u0020\u006cow\u003d\u0030\u0078%\u0030\u0032x\u0020\u0068\u0069\u0067\u0068\u003d0\u0078\u00250\u0032\u0078",_fbga ,_bgaa );return ErrBadCMap ;};_dae :=_ffa ._geac ;_cceg :=Codespace {NumBytes :_dae ,Low :_fbga ,High :_bgaa };cmap ._ad =append (cmap ._ad ,_cceg );_aa .Log .Trace ("\u0043\u006f\u0064e\u0073\u0070\u0061\u0063e\u0020\u006c\u006f\u0077\u003a\u0020\u0030x\u0025\u0058\u002c\u0020\u0068\u0069\u0067\u0068\u003a\u0020\u0030\u0078\u0025\u0058",_fbga ,_bgaa );};if len (cmap ._ad )==0{_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0073\u0020\u0069\u006e\u0020\u0063ma\u0070\u002e");return ErrBadCMap ;};return nil ;};func (cmap *CMap )StringToCID (s string )(CharCode ,bool ){_beac ,_ef :=cmap ._cgg [s ];return _beac ,_ef ;};const (_gff =100;_ffeg ="\u000a\u002f\u0043\u0049\u0044\u0049\u006e\u0069\u0074\u0020\u002f\u0050\u0072\u006fc\u0053\u0065\u0074\u0020\u0066\u0069\u006e\u0064\u0072es\u006fu\u0072c\u0065 \u0062\u0065\u0067\u0069\u006e\u000a\u0031\u0032\u0020\u0064\u0069\u0063\u0074\u0020\u0062\u0065\u0067\u0069n\u000a\u0062\u0065\u0067\u0069\u006e\u0063\u006d\u0061\u0070\n\u002f\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065m\u0049\u006e\u0066\u006f\u0020\u003c\u003c\u0020\u002f\u0052\u0065\u0067\u0069\u0073t\u0072\u0079\u0020\u0028\u0041\u0064\u006f\u0062\u0065\u0029\u0020\u002f\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067\u0020\u0028\u0055\u0043\u0053)\u0020\u002f\u0053\u0075\u0070p\u006c\u0065\u006d\u0065\u006et\u0020\u0030\u0020\u003e\u003e\u0020\u0064\u0065\u0066\u000a\u002f\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065\u0020\u002f\u0041\u0064\u006f\u0062\u0065-\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0055\u0043\u0053\u0020\u0064\u0065\u0066\u000a\u002fC\u004d\u0061\u0070\u0054\u0079\u0070\u0065\u0020\u0032\u0020\u0064\u0065\u0066\u000a\u0031\u0020\u0062\u0065\u0067\u0069\u006e\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063e\u0072\u0061n\u0067\u0065\n\u003c\u0030\u0030\u0030\u0030\u003e\u0020<\u0046\u0046\u0046\u0046\u003e\u000a\u0065\u006e\u0064\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065r\u0061\u006e\u0067\u0065\u000a";_bce ="\u0065\u006e\u0064\u0063\u006d\u0061\u0070\u000a\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065\u0020\u0063ur\u0072e\u006e\u0074\u0064\u0069\u0063\u0074\u0020\u002f\u0043\u004d\u0061\u0070 \u0064\u0065\u0066\u0069\u006e\u0065\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0020\u0070\u006fp\u000a\u0065\u006e\u0064\u000a\u0065\u006e\u0064\u000a";);func (cmap *CMap )matchCode (_da []byte )(_gcf CharCode ,_ged int ,_efa bool ){for _afdc :=0;_afdc < _df ;_afdc ++{if _afdc < len (_da ){_gcf =_gcf <<8|CharCode (_da [_afdc ]);_ged ++;};_efa =cmap .inCodespace (_gcf ,_afdc +1);if _efa {return _gcf ,_ged ,true ;};};_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0063o\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0020m\u0061t\u0063\u0068\u0065\u0073\u0020\u0062\u0079\u0074\u0065\u0073\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d=\u0025\u0023\u0071\u0020\u0063\u006d\u0061\u0070\u003d\u0025\u0073",_da ,string (_da ),cmap );return 0,0,false ;};func (cmap *CMap )parseType ()error {_dbda :=0;_dad :=false ;for _cde :=0;_cde < 3&&!_dad ;_cde ++{_ggd ,_cga :=cmap .parseObject ();if _cga !=nil {return _cga ;};switch _faf :=_ggd .(type ){case cmapOperand :switch _faf .Operand {case "\u0064\u0065\u0066":_dad =true ;default:_aa .Log .Error ("\u0070\u0061r\u0073\u0065\u0054\u0079\u0070\u0065\u003a\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u006f=%\u0023\u0076",_ggd );return ErrBadCMap ;};case cmapInt :_dbda =int (_faf ._gffd );};};cmap ._cd =_dbda ;return nil ;};func _gdeg (_bfg cmapHexString )CharCode {_bcdg :=CharCode (0);for _ ,_ece :=range _bfg ._ecge {_bcdg <<=8;_bcdg |=CharCode (_ece );};return _bcdg ;};func (cmap *CMap )parse ()error {var _gcg cmapObject ;for {_cdf ,_bgf :=cmap .parseObject ();if _bgf !=nil {if _bgf ==_gf .EOF {break ;};_aa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u004d\u0061\u0070\u003a\u0020\u0025\u0076",_bgf );return _bgf ;};switch _dbd :=_cdf .(type ){case cmapOperand :_dgf :=_dbd ;switch _dgf .Operand {case _daec :_efdb :=cmap .parseCodespaceRange ();if _efdb !=nil {return _efdb ;};case _gebg :_gcd :=cmap .parseCIDRange ();if _gcd !=nil {return _gcd ;};case _aag :_age :=cmap .parseBfchar ();if _age !=nil {return _age ;};case _eegb :_bb :=cmap .parseBfrange ();if _bb !=nil {return _bb ;};case _aba :if _gcg ==nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u0073\u0065\u0063m\u0061\u0070\u0020\u0077\u0069\u0074\u0068\u0020\u006e\u006f \u0061\u0072\u0067");return ErrBadCMap ;};_eeg ,_ace :=_gcg .(cmapName );if !_ace {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0075\u0073\u0065\u0063\u006d\u0061\u0070\u0020\u0061\u0072\u0067\u0020\u006eo\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u0020\u0025\u0023\u0076",_gcg );return ErrBadCMap ;};cmap ._cg =_eeg .Name ;case _bdg :_agd :=cmap .parseSystemInfo ();if _agd !=nil {return _agd ;};};case cmapName :_ebc :=_dbd ;switch _ebc .Name {case _bdg :_cgga :=cmap .parseSystemInfo ();if _cgga !=nil {return _cgga ;};case _afgg :_dff :=cmap .parseName ();if _dff !=nil {return _dff ;};case _fad :_geb :=cmap .parseType ();if _geb !=nil {return _geb ;};case _fea :_aed :=cmap .parseVersion ();if _aed !=nil {return _aed ;};};};_gcg =_cdf ;};return nil ;};func (_gaga *cMapParser )skipSpaces ()(int ,error ){_ebg :=0;for {_bgc ,_fdg :=_gaga ._dcc .Peek (1);if _fdg !=nil {return 0,_fdg ;};if _dd .IsWhiteSpace (_bgc [0]){_gaga ._dcc .ReadByte ();_ebg ++;}else {break ;};};return _ebg ,nil ;};type fbRange struct{_ag CharCode ;_ec CharCode ;_aae string ;};func (cmap *CMap )parseVersion ()error {_ccd :="";_gac :=false ;for _dfgg :=0;_dfgg < 3&&!_gac ;_dfgg ++{_efgg ,_cgb :=cmap .parseObject ();if _cgb !=nil {return _cgb ;};switch _gea :=_efgg .(type ){case cmapOperand :switch _gea .Operand {case "\u0064\u0065\u0066":_gac =true ;default:_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0070\u0061\u0072\u0073\u0065\u0056e\u0072\u0073\u0069\u006f\u006e\u003a \u0073\u0074\u0061\u0074\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020o\u003d\u0025\u0023\u0076",_efgg );return ErrBadCMap ;};case cmapInt :_ccd =_a .Sprintf ("\u0025\u0064",_gea ._gffd );case cmapFloat :_ccd =_a .Sprintf ("\u0025\u0066",_gea ._bfc );case cmapString :_ccd =_gea .String ;default:_aa .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020p\u0061\u0072\u0073\u0065Ver\u0073io\u006e\u003a\u0020\u0042\u0061\u0064\u0020ty\u0070\u0065\u002e\u0020\u006f\u003d\u0025#\u0076",_efgg );};};cmap ._ca =_ccd ;return nil ;};type cmapInt struct{_gffd int64 };func (_adg *cMapParser )parseComment ()(string ,error ){var _fcbea _c .Buffer ;_ ,_aaf :=_adg .skipSpaces ();if _aaf !=nil {return _fcbea .String (),_aaf ;};_daa :=true ;for {_cfgc ,_afa :=_adg ._dcc .Peek (1);if _afa !=nil {_aa .Log .Debug ("p\u0061r\u0073\u0065\u0043\u006f\u006d\u006d\u0065\u006et\u003a\u0020\u0065\u0072r=\u0025\u0076",_afa );return _fcbea .String (),_afa ;};if _daa &&_cfgc [0]!='%'{return _fcbea .String (),ErrBadCMapComment ;};_daa =false ;if (_cfgc [0]!='\r')&&(_cfgc [0]!='\n'){_bgg ,_ :=_adg ._dcc .ReadByte ();_fcbea .WriteByte (_bgg );}else {break ;};};return _fcbea .String (),nil ;};func _ggda (_geccc ,_ede int )int {if _geccc < _ede {return _geccc ;};return _ede ;};func (cmap *CMap )BytesToCharcodes (data []byte )([]CharCode ,bool ){var _fce []CharCode ;if cmap ._be ==8{for _ ,_cf :=range data {_fce =append (_fce ,CharCode (_cf ));};return _fce ,true ;};for _dgd :=0;_dgd < len (data );{_ga ,_eede ,_gag :=cmap .matchCode (data [_dgd :]);if !_gag {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0063\u006f\u0064\u0065\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0061\u0074\u0020\u0069\u003d\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",_dgd ,data ,string (data ));return _fce ,false ;};_fce =append (_fce ,_ga );_dgd +=_eede ;};return _fce ,true ;};type cmapArray struct{Array []cmapObject ;};func (cmap *CMap )CharcodeToUnicode (code CharCode )(string ,bool ){if _gfd ,_fe :=cmap ._fb [code ];_fe {return _gfd ,true ;};return MissingCodeString ,false ;};func (_fga *cMapParser )parseHexString ()(cmapHexString ,error ){_fga ._dcc .ReadByte ();_dacg :=[]byte ("\u0030\u0031\u0032\u003345\u0036\u0037\u0038\u0039\u0061\u0062\u0063\u0064\u0065\u0066\u0041\u0042\u0043\u0044E\u0046");_ebca :=_c .Buffer {};for {_fga .skipSpaces ();_afbg ,_caea :=_fga ._dcc .Peek (1);if _caea !=nil {return cmapHexString {},_caea ;};if _afbg [0]=='>'{_fga ._dcc .ReadByte ();break ;};_accad ,_ :=_fga ._dcc .ReadByte ();if _c .IndexByte (_dacg ,_accad )>=0{_ebca .WriteByte (_accad );};};if _ebca .Len ()%2==1{_aa .Log .Debug ("\u0070\u0061rs\u0065\u0048\u0065x\u0053\u0074\u0072\u0069ng:\u0020ap\u0070\u0065\u006e\u0064\u0069\u006e\u0067 '\u0030\u0027\u0020\u0074\u006f\u0020\u0025#\u0071",_ebca .String ());_ebca .WriteByte ('0');};_bcd :=_ebca .Len ()/2;_efb ,_ :=_gd .DecodeString (_ebca .String ());return cmapHexString {_geac :_bcd ,_ecge :_efb },nil ;};func (cmap *CMap )toBfData ()string {if len (cmap ._fb )==0{return "";};_edb :=make ([]CharCode ,0,len (cmap ._fb ));for _ae :=range cmap ._fb {_edb =append (_edb ,_ae );};_dc .Slice (_edb ,func (_ffb ,_dbe int )bool {return _edb [_ffb ]< _edb [_dbe ]});var _cbgf []charRange ;_cfe :=charRange {_edb [0],_edb [0]};_ffea :=cmap ._fb [_edb [0]];for _ ,_afgd :=range _edb [1:]{_eca :=cmap ._fb [_afgd ];if _afgd ==_cfe ._de +1&&_fcc (_eca )==_fcc (_ffea )+1{_cfe ._de =_afgd ;}else {_cbgf =append (_cbgf ,_cfe );_cfe ._aab ,_cfe ._de =_afgd ,_afgd ;};_ffea =_eca ;};_cbgf =append (_cbgf ,_cfe );var _dac []CharCode ;var _adbb []fbRange ;for _ ,_agca :=range _cbgf {if _agca ._aab ==_agca ._de {_dac =append (_dac ,_agca ._aab );}else {_adbb =append (_adbb ,fbRange {_ag :_agca ._aab ,_ec :_agca ._de ,_aae :cmap ._fb [_agca ._aab ]});};};_aa .Log .Trace ("\u0063\u0068ar\u0052\u0061\u006eg\u0065\u0073\u003d\u0025d f\u0062Ch\u0061\u0072\u0073\u003d\u0025\u0064\u0020fb\u0052\u0061\u006e\u0067\u0065\u0073\u003d%\u0064",len (_cbgf ),len (_dac ),len (_adbb ));var _cbgg []string ;if len (_dac )> 0{_eg :=(len (_dac )+_gff -1)/_gff ;for _dbf :=0;_dbf < _eg ;_dbf ++{_afcf :=_ggda (len (_dac )-_dbf *_gff ,_gff );_cbgg =append (_cbgg ,_a .Sprintf ("\u0025\u0064\u0020\u0062\u0065\u0067\u0069\u006e\u0062f\u0063\u0068\u0061\u0072",_afcf ));for _dfc :=0;_dfc < _afcf ;_dfc ++{_dca :=_dac [_dbf *_gff +_dfc ];_cfg :=cmap ._fb [_dca ];_cbgg =append (_cbgg ,_a .Sprintf ("\u003c%\u0030\u0034\u0078\u003e\u0020\u0025s",_dca ,_fa (_cfg )));};_cbgg =append (_cbgg ,"\u0065n\u0064\u0062\u0066\u0063\u0068\u0061r");};};if len (_adbb )> 0{_fbg :=(len (_adbb )+_gff -1)/_gff ;for _dbee :=0;_dbee < _fbg ;_dbee ++{_cdc :=_ggda (len (_adbb )-_dbee *_gff ,_gff );_cbgg =append (_cbgg ,_a .Sprintf ("\u0025d\u0020b\u0065\u0067\u0069\u006e\u0062\u0066\u0072\u0061\u006e\u0067\u0065",_cdc ));for _aee :=0;_aee < _cdc ;_aee ++{_adbbe :=_adbb [_dbee *_gff +_aee ];_cbgg =append (_cbgg ,_a .Sprintf ("\u003c%\u00304\u0078\u003e\u003c\u0025\u0030\u0034\u0078\u003e\u0020\u0025\u0073",_adbbe ._ag ,_adbbe ._ec ,_fa (_adbbe ._aae )));};_cbgg =append (_cbgg ,"\u0065\u006e\u0064\u0062\u0066\u0072\u0061\u006e\u0067\u0065");};};return _f .Join (_cbgg ,"\u000a");};func (cmap *CMap )Stream ()(*_dd .PdfObjectStream ,error ){if cmap ._cdd !=nil {return cmap ._cdd ,nil ;};_def ,_bff :=_dd .MakeStream (cmap .Bytes (),_dd .NewFlateEncoder ());if _bff !=nil {return nil ,_bff ;};cmap ._cdd =_def ;return cmap ._cdd ,nil ;};func (_dbff *cMapParser )parseOperand ()(cmapOperand ,error ){_afbe :=cmapOperand {};_baa :=_c .Buffer {};for {_eddb ,_gdfb :=_dbff ._dcc .Peek (1);if _gdfb !=nil {if _gdfb ==_gf .EOF {break ;};return _afbe ,_gdfb ;};if _dd .IsDelimiter (_eddb [0]){break ;};if _dd .IsWhiteSpace (_eddb [0]){break ;};_cad ,_ :=_dbff ._dcc .ReadByte ();_baa .WriteByte (_cad );};if _baa .Len ()==0{return _afbe ,_a .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u006f\u0070\u0065\u0072\u0061\u006e\u0064\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029");};_afbe .Operand =_baa .String ();return _afbe ,nil ;};func (_bbd *cMapParser )parseString ()(cmapString ,error ){_bbd ._dcc .ReadByte ();_bgfb :=_c .Buffer {};_ccde :=1;for {_fcg ,_aef :=_bbd ._dcc .Peek (1);if _aef !=nil {return cmapString {_bgfb .String ()},_aef ;};if _fcg [0]=='\\'{_bbd ._dcc .ReadByte ();_acca ,_caa :=_bbd ._dcc .ReadByte ();if _caa !=nil {return cmapString {_bgfb .String ()},_caa ;};if _dd .IsOctalDigit (_acca ){_dcgd ,_edc :=_bbd ._dcc .Peek (2);if _edc !=nil {return cmapString {_bgfb .String ()},_edc ;};var _gffc []byte ;_gffc =append (_gffc ,_acca );for _ ,_cab :=range _dcgd {if _dd .IsOctalDigit (_cab ){_gffc =append (_gffc ,_cab );}else {break ;};};_bbd ._dcc .Discard (len (_gffc )-1);_aa .Log .Trace ("\u004e\u0075\u006d\u0065ri\u0063\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0022\u0025\u0073\u0022",_gffc );_geaa ,_edc :=_b .ParseUint (string (_gffc ),8,32);if _edc !=nil {return cmapString {_bgfb .String ()},_edc ;};_bgfb .WriteByte (byte (_geaa ));continue ;};switch _acca {case 'n':_bgfb .WriteByte ('\n');case 'r':_bgfb .WriteByte ('\r');case 't':_bgfb .WriteByte ('\t');case 'b':_bgfb .WriteByte ('\b');case 'f':_bgfb .WriteByte ('\f');case '(':_bgfb .WriteByte ('(');case ')':_bgfb .WriteByte (')');case '\\':_bgfb .WriteByte ('\\');};continue ;}else if _fcg [0]=='('{_ccde ++;}else if _fcg [0]==')'{_ccde --;if _ccde ==0{_bbd ._dcc .ReadByte ();break ;};};_cfed ,_ :=_bbd ._dcc .ReadByte ();_bgfb .WriteByte (_cfed );};return cmapString {_bgfb .String ()},nil ;};func (cmap *CMap )parseName ()error {_ccf :="";_gfc :=false ;for _efgd :=0;_efgd < 20&&!_gfc ;_efgd ++{_dddc ,_dbb :=cmap .parseObject ();if _dbb !=nil {return _dbb ;};switch _dcge :=_dddc .(type ){case cmapOperand :switch _dcge .Operand {case "\u0064\u0065\u0066":_gfc =true ;default:_aa .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u004e\u0061\u006d\u0065\u003a\u0020\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020o\u003d\u0025\u0023\u0076\u0020n\u0061\u006de\u003d\u0025\u0023\u0071",_dddc ,_ccf );if _ccf !=""{_ccf =_a .Sprintf ("\u0025\u0073\u0020%\u0073",_ccf ,_dcge .Operand );};_aa .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u004e\u0061\u006d\u0065\u003a \u0052\u0065\u0063\u006f\u0076\u0065\u0072e\u0064\u002e\u0020\u006e\u0061\u006d\u0065\u003d\u0025\u0023\u0071",_ccf );};case cmapName :_ccf =_dcge .Name ;};};if !_gfc {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0070\u0061\u0072\u0073\u0065N\u0061m\u0065:\u0020\u004e\u006f\u0020\u0064\u0065\u0066 ");return ErrBadCMap ;};cmap ._cc =_ccf ;return nil ;};type cmapObject interface{};func (cmap *CMap )Bytes ()[]byte {_aa .Log .Trace ("\u0063\u006d\u0061\u0070.B\u0079\u0074\u0065\u0073\u003a\u0020\u0063\u006d\u0061\u0070\u003d\u0025\u0073",cmap .String ());if len (cmap ._ea )> 0{return cmap ._ea ;};cmap ._ea =[]byte (_f .Join ([]string {_ffeg ,cmap .toBfData (),_bce },"\u000a"));return cmap ._ea ;};const (_df =4;MissingCodeRune ='\ufffd';MissingCodeString =string (MissingCodeRune ););func NewToUnicodeCMap (codeToRune map[CharCode ]rune )*CMap {_ddd :=make (map[CharCode ]string ,len (codeToRune ));for _dfa ,_dg :=range codeToRune {_ddd [_dfa ]=string (_dg );};cmap :=&CMap {_cc :"\u0041d\u006fb\u0065\u002d\u0049\u0064\u0065n\u0074\u0069t\u0079\u002d\u0055\u0043\u0053",_cd :2,_be :16,_ebe :CIDSystemInfo {Registry :"\u0041\u0064\u006fb\u0065",Ordering :"\u0055\u0043\u0053",Supplement :0},_ad :[]Codespace {{Low :0,High :0xffff}},_fb :_ddd ,_cgg :make (map[string ]CharCode ,len (codeToRune )),_db :make (map[CharCode ]CharCode ,len (codeToRune )),_bfb :make (map[CharCode ]CharCode ,len (codeToRune ))};cmap .computeInverseMappings ();return cmap ;};func _dbg (_babe cmapHexString )rune {_daae :=_aac (_babe );if _efbf :=len (_daae );_efbf ==0{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0068\u0065\u0078\u0054o\u0052\u0075\u006e\u0065\u002e\u0020\u0045\u0078p\u0065c\u0074\u0065\u0064\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u0072u\u006e\u0065\u0020\u0073\u0068\u0065\u0078\u003d\u0025\u0023\u0076",_babe );return MissingCodeRune ;};if len (_daae )> 1{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0068\u0065\u0078\u0054\u006f\u0052\u0075\u006e\u0065\u002e\u0020\u0045\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0065\u0078\u0061\u0063\u0074\u006c\u0079\u0020\u006f\u006e\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u0073\u0068\u0065\u0078\u003d\u0025\u0023v\u0020\u002d\u003e\u0020\u0025#\u0076",_babe ,_daae );};return _daae [0];};func (cmap *CMap )CIDToCharcode (cid CharCode )(CharCode ,bool ){_cbg ,_fdb :=cmap ._bfb [cid ];return _cbg ,_fdb ;};const (_bdg ="\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f";_aeeb ="\u0062e\u0067\u0069\u006e\u0063\u006d\u0061p";_deb ="\u0065n\u0064\u0063\u006d\u0061\u0070";_daec ="\u0062\u0065\u0067\u0069nc\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0072\u0061\u006e\u0067\u0065";_ffdg ="\u0065\u006e\u0064\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065r\u0061\u006e\u0067\u0065";_aag ="b\u0065\u0067\u0069\u006e\u0062\u0066\u0063\u0068\u0061\u0072";_eeec ="\u0065n\u0064\u0062\u0066\u0063\u0068\u0061r";_eegb ="\u0062\u0065\u0067i\u006e\u0062\u0066\u0072\u0061\u006e\u0067\u0065";_eegba ="\u0065\u006e\u0064\u0062\u0066\u0072\u0061\u006e\u0067\u0065";_gebg ="\u0062\u0065\u0067\u0069\u006e\u0063\u0069\u0064\u0072\u0061\u006e\u0067\u0065";_gaf ="e\u006e\u0064\u0063\u0069\u0064\u0072\u0061\u006e\u0067\u0065";_aba ="\u0075s\u0065\u0063\u006d\u0061\u0070";_afgg ="\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065";_fad ="\u0043\u004d\u0061\u0070\u0054\u0079\u0070\u0065";_fea ="C\u004d\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e";);func (cmap *CMap )Name ()string {return cmap ._cc };func (cmap *CMap )NBits ()int {return cmap ._be };type cmapDict struct{Dict map[string ]cmapObject ;};func _gecc ()cmapDict {return cmapDict {Dict :map[string ]cmapObject {}}};type CMap struct{*cMapParser ;_cc string ;_be int ;_cd int ;_ca string ;_cg string ;_ebe CIDSystemInfo ;_ad []Codespace ;_db map[CharCode ]CharCode ;_bfb map[CharCode ]CharCode ;_fb map[CharCode ]string ;_cgg map[string ]CharCode ;_ea []byte ;_cdd *_dd .PdfObjectStream ;};func _fcc (_ecdd string )rune {_fgg :=[]rune (_ecdd );return _fgg [len (_fgg )-1]};func (_efe *cMapParser )parseDict ()(cmapDict ,error ){_aa .Log .Trace ("\u0052\u0065\u0061\u0064\u0069\u006e\u0067\u0020\u0050\u0044\u0046\u0020D\u0069\u0063\u0074\u0021");_ead :=_gecc ();_edg ,_ :=_efe ._dcc .ReadByte ();if _edg !='<'{return _ead ,ErrBadCMapDict ;};_edg ,_ =_efe ._dcc .ReadByte ();if _edg !='<'{return _ead ,ErrBadCMapDict ;};for {_efe .skipSpaces ();_dgg ,_adba :=_efe ._dcc .Peek (2);if _adba !=nil {return _ead ,_adba ;};if (_dgg [0]=='>')&&(_dgg [1]=='>'){_efe ._dcc .ReadByte ();_efe ._dcc .ReadByte ();break ;};_cccc ,_adba :=_efe .parseName ();_aa .Log .Trace ("\u004be\u0079\u003a\u0020\u0025\u0073",_cccc .Name );if _adba !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0052\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u006e\u0061\u006d\u0065\u002e\u0020\u0065\u0072r=\u0025\u0076",_adba );return _ead ,_adba ;};_efe .skipSpaces ();_feaa ,_adba :=_efe .parseObject ();if _adba !=nil {return _ead ,_adba ;};_ead .Dict [_cccc .Name ]=_feaa ;_efe .skipSpaces ();_dgg ,_adba =_efe ._dcc .Peek (3);if _adba !=nil {return _ead ,_adba ;};if string (_dgg )=="\u0064\u0065\u0066"{_efe ._dcc .Discard (3);};};return _ead ,nil ;};func (_efaf *cMapParser )parseNumber ()(cmapObject ,error ){_abb ,_ebgg :=_dd .ParseNumber (_efaf ._dcc );if _ebgg !=nil {return nil ,_ebgg ;};switch _fbbb :=_abb .(type ){case *_dd .PdfObjectFloat :return cmapFloat {float64 (*_fbbb )},nil ;case *_dd .PdfObjectInteger :return cmapInt {int64 (*_fbbb )},nil ;};return nil ,_a .Errorf ("\u0075n\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0054",_abb );};func (cmap *CMap )parseBfrange ()error {for {var _gcc CharCode ;_dgda ,_bcg :=cmap .parseObject ();if _bcg !=nil {if _bcg ==_gf .EOF {break ;};return _bcg ;};switch _daf :=_dgda .(type ){case cmapOperand :if _daf .Operand ==_eegba {return nil ;};return _ee .New ("\u0075n\u0065x\u0070\u0065\u0063\u0074\u0065d\u0020\u006fp\u0065\u0072\u0061\u006e\u0064");case cmapHexString :_gcc =_gdeg (_daf );default:return _ee .New ("\u0075n\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0074\u0079\u0070\u0065");};var _fff CharCode ;_dgda ,_bcg =cmap .parseObject ();if _bcg !=nil {if _bcg ==_gf .EOF {break ;};return _bcg ;};switch _gee :=_dgda .(type ){case cmapOperand :_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006d\u0063\u006f\u006d\u0070\u006c\u0065\u0074\u0065\u0020\u0062\u0066r\u0061\u006e\u0067\u0065\u0020\u0074\u0072i\u0070\u006c\u0065\u0074");return ErrBadCMap ;case cmapHexString :_fff =_gdeg (_gee );default:_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0055\u006e\u0065\u0078\u0070e\u0063t\u0065d\u0020\u0074\u0079\u0070\u0065\u0020\u0025T",_dgda );return ErrBadCMap ;};_dgda ,_bcg =cmap .parseObject ();if _bcg !=nil {if _bcg ==_gf .EOF {break ;};return _bcg ;};switch _baed :=_dgda .(type ){case cmapArray :if len (_baed .Array )!=int (_fff -_gcc )+1{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u006f\u0066\u0020\u0069\u0074\u0065\u006d\u0073\u0020\u0069\u006e\u0020a\u0072\u0072\u0061\u0079");return ErrBadCMap ;};for _ebcd :=_gcc ;_ebcd <=_fff ;_ebcd ++{_afdcg :=_baed .Array [_ebcd -_gcc ];_agec ,_dag :=_afdcg .(cmapHexString );if !_dag {return _ee .New ("\u006e\u006f\u006e-h\u0065\u0078\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0069\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};_bagc :=_aac (_agec );cmap ._fb [_ebcd ]=string (_bagc );};case cmapHexString :_beb :=_aac (_baed );_ege :=len (_beb );for _bdc :=_gcc ;_bdc <=_fff ;_bdc ++{cmap ._fb [_bdc ]=string (_beb );_beb [_ege -1]++;};default:_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0055\u006e\u0065\u0078\u0070e\u0063t\u0065d\u0020\u0074\u0079\u0070\u0065\u0020\u0025T",_dgda );return ErrBadCMap ;};};return nil ;};type cMapParser struct{_dcc *_d .Reader };func LoadCmapFromData (data []byte ,isSimple bool )(*CMap ,error ){_aa .Log .Trace ("\u004c\u006fa\u0064\u0043\u006d\u0061\u0070\u0046\u0072\u006f\u006d\u0044\u0061\u0074\u0061\u003a\u0020\u0069\u0073\u0053\u0069\u006d\u0070\u006ce=\u0025\u0074",isSimple );cmap :=_eed (isSimple );cmap .cMapParser =_abd (data );_adc :=cmap .parse ();if _adc !=nil {return nil ,_adc ;};if len (cmap ._ad )==0{if cmap ._cg !=""{return cmap ,nil ;};_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0073\u002e\u0020\u0063\u006d\u0061p=\u0025\u0073",cmap );return nil ,ErrBadCMap ;};cmap .computeInverseMappings ();return cmap ,nil ;};func (cmap *CMap )CharcodeBytesToUnicode (data []byte )(string ,int ){_bea ,_ffc :=cmap .BytesToCharcodes (data );if !_ffc {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0042\u0079\u0074\u0065s\u0054\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u004e\u006f\u0074\u0020\u0069n\u0020\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0073\u002e\u0020\u0064\u0061\u0074\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078]\u0020\u0063\u006d\u0061\u0070=\u0025\u0073",data ,cmap );return "",0;};_agg :=make ([]string ,len (_bea ));var _cae []CharCode ;for _gbf ,_ce :=range _bea {_gc ,_dfga :=cmap ._fb [_ce ];if !_dfga {_cae =append (_cae ,_ce );_gc =MissingCodeString ;};_agg [_gbf ]=_gc ;};_gbfb :=_f .Join (_agg ,"");if len (_cae )> 0{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020C\u0068\u0061\u0072c\u006f\u0064\u0065\u0042y\u0074\u0065\u0073\u0054\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u004e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070\u002e\u000a"+"\u0009d\u0061t\u0061\u003d\u005b\u0025\u00200\u0032\u0078]\u003d\u0025\u0023\u0071\u000a"+"\u0009\u0063h\u0061\u0072\u0063o\u0064\u0065\u0073\u003d\u0025\u0030\u0032\u0078\u000a"+"\u0009\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003d\u0025\u0064\u0020%\u0030\u0032\u0078\u000a"+"\u0009\u0075\u006e\u0069\u0063\u006f\u0064\u0065\u003d`\u0025\u0073\u0060\u000a"+"\u0009\u0063\u006d\u0061\u0070\u003d\u0025\u0073",data ,string (data ),_bea ,len (_cae ),_cae ,_gbfb ,cmap );};return _gbfb ,len (_cae );};func _fa (_bc string )string {_ecb :=[]rune (_bc );_bcf :=make ([]string ,len (_ecb ));for _ab ,_fee :=range _ecb {_bcf [_ab ]=_a .Sprintf ("\u0025\u0030\u0034\u0078",_fee );};return _a .Sprintf ("\u003c\u0025\u0073\u003e",_f .Join (_bcf ,""));};func (_fbed *cMapParser )parseObject ()(cmapObject ,error ){_fbed .skipSpaces ();for {_gde ,_ddfg :=_fbed ._dcc .Peek (2);if _ddfg !=nil {return nil ,_ddfg ;};if _gde [0]=='%'{_fbed .parseComment ();_fbed .skipSpaces ();continue ;}else if _gde [0]=='/'{_eegg ,_bee :=_fbed .parseName ();return _eegg ,_bee ;}else if _gde [0]=='('{_bebc ,_cdec :=_fbed .parseString ();return _bebc ,_cdec ;}else if _gde [0]=='['{_dgb ,_fcef :=_fbed .parseArray ();return _dgb ,_fcef ;}else if (_gde [0]=='<')&&(_gde [1]=='<'){_gfcd ,_ded :=_fbed .parseDict ();return _gfcd ,_ded ;}else if _gde [0]=='<'{_bfa ,_agcb :=_fbed .parseHexString ();return _bfa ,_agcb ;}else if _dd .IsDecimalDigit (_gde [0])||(_gde [0]=='-'&&_dd .IsDecimalDigit (_gde [1])){_ebf ,_ecg :=_fbed .parseNumber ();if _ecg !=nil {return nil ,_ecg ;};return _ebf ,nil ;}else {_egb ,_eae :=_fbed .parseOperand ();if _eae !=nil {return nil ,_eae ;};return _egb ,nil ;};};};type cmapOperand struct{Operand string ;};func LoadCmapFromDataCID (data []byte )(*CMap ,error ){return LoadCmapFromData (data ,false )};type cmapString struct{String string ;};type Codespace struct{NumBytes int ;Low CharCode ;High CharCode ;};type cmapName struct{Name string ;};func _eed (_fbc bool )*CMap {_fc :=16;if _fbc {_fc =8;};return &CMap {_be :_fc ,_db :make (map[CharCode ]CharCode ),_bfb :make (map[CharCode ]CharCode ),_fb :make (map[CharCode ]string ),_cgg :make (map[string ]CharCode )};};func (cmap *CMap )String ()string {_ac :=cmap ._ebe ;_ffe :=[]string {_a .Sprintf ("\u006e\u0062\u0069\u0074\u0073\u003a\u0025\u0064",cmap ._be ),_a .Sprintf ("\u0074y\u0070\u0065\u003a\u0025\u0064",cmap ._cd )};if cmap ._ca !=""{_ffe =append (_ffe ,_a .Sprintf ("\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0025\u0073",cmap ._ca ));};if cmap ._cg !=""{_ffe =append (_ffe ,_a .Sprintf ("u\u0073\u0065\u0063\u006d\u0061\u0070\u003a\u0025\u0023\u0071",cmap ._cg ));};_ffe =append (_ffe ,_a .Sprintf ("\u0073\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f\u003a\u0025\u0073",_ac .String ()));if len (cmap ._ad )> 0{_ffe =append (_ffe ,_a .Sprintf ("\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0073\u003a\u0025\u0064",len (cmap ._ad )));};if len (cmap ._fb )> 0{_ffe =append (_ffe ,_a .Sprintf ("\u0063\u006fd\u0065\u0054\u006fU\u006e\u0069\u0063\u006f\u0064\u0065\u003a\u0025\u0064",len (cmap ._fb )));};return _a .Sprintf ("\u0043\u004d\u0041P\u007b\u0025\u0023\u0071\u0020\u0025\u0073\u007d",cmap ._cc ,_f .Join (_ffe ,"\u0020"));};type cmapHexString struct{_geac int ;_ecge []byte ;};func (cmap *CMap )Type ()int {return cmap ._cd };func _aac (_gbg cmapHexString )[]rune {if len (_gbg ._ecge )==1{return []rune {rune (_gbg ._ecge [0])};};_acf :=_gbg ._ecge ;if len (_acf )%2!=0{_acf =append (_acf ,0);_aa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0068\u0065\u0078\u0054\u006f\u0052\u0075\u006e\u0065\u0073\u002e\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0073\u0068\u0065\u0078\u003d\u0025#\u0076\u0020\u0074\u006f\u0020\u0025\u002b\u0076",_gbg ,_acf );};_dagd :=len (_acf )>>1;_acd :=make ([]uint16 ,_dagd );for _aacf :=0;_aacf < _dagd ;_aacf ++{_acd [_aacf ]=uint16 (_acf [_aacf <<1])<<8+uint16 (_acf [_aacf <<1+1]);};_bca :=_g .Decode (_acd );return _bca ;};var (ErrBadCMap =_ee .New ("\u0062\u0061\u0064\u0020\u0063\u006d\u0061\u0070");ErrBadCMapComment =_ee .New ("c\u006f\u006d\u006d\u0065\u006e\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0073\u0074a\u0072\u0074\u0020w\u0069t\u0068\u0020\u0025");ErrBadCMapDict =_ee .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0069\u0063\u0074"););func (cmap *CMap )computeInverseMappings (){for _fd ,_fcb :=range cmap ._db {if _ecc ,_ge :=cmap ._bfb [_fcb ];!_ge ||(_ge &&_ecc > _fd ){cmap ._bfb [_fcb ]=_fd ;};};for _ffd ,_bd :=range cmap ._fb {if _edf ,_eba :=cmap ._cgg [_bd ];!_eba ||(_eba &&_edf > _ffd ){cmap ._cgg [_bd ]=_ffd ;};};_dc .Slice (cmap ._ad ,func (_cb ,_afg int )bool {return cmap ._ad [_cb ].Low < cmap ._ad [_afg ].Low });};func (_fbb *cMapParser )parseArray ()(cmapArray ,error ){_efc :=cmapArray {};_efc .Array =[]cmapObject {};_fbb ._dcc .ReadByte ();for {_fbb .skipSpaces ();_cfd ,_aca :=_fbb ._dcc .Peek (1);if _aca !=nil {return _efc ,_aca ;};if _cfd [0]==']'{_fbb ._dcc .ReadByte ();break ;};_cec ,_aca :=_fbb .parseObject ();if _aca !=nil {return _efc ,_aca ;};_efc .Array =append (_efc .Array ,_cec );};return _efc ,nil ;};func (cmap *CMap )parseCIDRange ()error {for {_fda ,_beg :=cmap .parseObject ();if _beg !=nil {if _beg ==_gf .EOF {break ;};return _beg ;};_fbf ,_agf :=_fda .(cmapHexString );if !_agf {if _cgae ,_bffc :=_fda .(cmapOperand );_bffc {if _cgae .Operand ==_gaf {return nil ;};return _ee .New ("\u0063\u0069\u0064\u0020\u0069\u006e\u0074\u0065\u0072\u0076\u0061\u006c\u0020s\u0074\u0061\u0072\u0074\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u0068\u0065\u0078\u0020\u0073t\u0072\u0069\u006e\u0067");};};_begf :=_gdeg (_fbf );_fda ,_beg =cmap .parseObject ();if _beg !=nil {if _beg ==_gf .EOF {break ;};return _beg ;};_dee ,_agf :=_fda .(cmapHexString );if !_agf {return _ee .New ("\u0063\u0069d\u0020\u0069\u006e\u0074e\u0072\u0076a\u006c\u0020\u0065\u006e\u0064\u0020\u006d\u0075s\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u0068\u0065\u0078\u0020\u0073t\u0072\u0069\u006e\u0067");};if len (_fbf ._ecge )!=len (_dee ._ecge ){return _ee .New ("\u0075\u006e\u0065\u0071\u0075\u0061\u006c\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0062\u0079\u0074\u0065\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065");};_ggc :=_gdeg (_dee );if _begf > _ggc {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0049\u0044\u0020\u0072\u0061\u006e\u0067\u0065\u002e\u0020\u0073t\u0061\u0072\u0074\u003d\u0030\u0078\u0025\u0030\u0032\u0078\u0020\u0065\u006e\u0064=\u0030x\u0025\u0030\u0032\u0078",_begf ,_ggc );return ErrBadCMap ;};_fda ,_beg =cmap .parseObject ();if _beg !=nil {if _beg ==_gf .EOF {break ;};return _beg ;};_gcff ,_agf :=_fda .(cmapInt );if !_agf {return _ee .New ("\u0063\u0069\u0064\u0020\u0073t\u0061\u0072\u0074\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0064\u0065\u0063\u0069\u006d\u0061\u006c\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _gcff ._gffd < 0{return _ee .New ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0063\u0069\u0064\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0076\u0061\u006c\u0075\u0065");};_babf :=_gcff ._gffd ;for _dddd :=_begf ;_dddd <=_ggc ;_dddd ++{cmap ._db [_dddd ]=CharCode (_babf );_babf ++;};_aa .Log .Trace ("C\u0049\u0044\u0020\u0072\u0061\u006eg\u0065\u003a\u0020\u003c\u0030\u0078\u0025\u0058\u003e \u003c\u0030\u0078%\u0058>\u0020\u0025\u0064",_begf ,_ggc ,_gcff ._gffd );};return nil ;};type cmapFloat struct{_bfc float64 };func (cmap *CMap )inCodespace (_bec CharCode ,_gfda int )bool {for _ ,_gab :=range cmap ._ad {if _gab .Low <=_bec &&_bec <=_gab .High &&_gfda ==_gab .NumBytes {return true ;};};return false ;};func (_eb *CIDSystemInfo )String ()string {return _a .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0025\u0030\u0033\u0064",_eb .Registry ,_eb .Ordering ,_eb .Supplement );};