//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_fda "errors";_fd "fmt";_eg "github.com/unidoc/freetype/raster";_e "github.com/unidoc/unipdf/v3/common";_cdg "github.com/unidoc/unipdf/v3/internal/transform";_ac "github.com/unidoc/unipdf/v3/render/internal/context";_ag "golang.org/x/image/draw";
_gcc "golang.org/x/image/font";_gc "golang.org/x/image/math/f64";_bc "golang.org/x/image/math/fixed";_a "image";_cf "image/color";_cd "image/draw";_c "math";_g "sort";_b "strings";);func (_afg *Context )StrokePattern ()_ac .Pattern {return _afg ._ccb };
func (_cbec *Context )MoveTo (x ,y float64 ){if _cbec ._gb {_cbec ._bf .Add1 (_fbc (_cbec ._fgf ));};x ,y =_cbec .Transform (x ,y );_ecd :=_cdg .NewPoint (x ,y );_gcg :=_fbc (_ecd );_cbec ._eeg .Start (_gcg );_cbec ._bf .Start (_gcg );_cbec ._fgf =_ecd ;
_cbec ._bce =_ecd ;_cbec ._gb =true ;};func _gdg (_ccf ,_ba ,_gae ,_fab ,_ab ,_aff ,_fg ,_cb ,_eb float64 )(_bb ,_cbb float64 ){_cbg :=1-_eb ;_fdd :=_cbg *_cbg *_cbg ;_adb :=3*_cbg *_cbg *_eb ;_cdf :=3*_cbg *_eb *_eb ;_fdde :=_eb *_eb *_eb ;_bb =_fdd *_ccf +_adb *_gae +_cdf *_ab +_fdde *_fg ;
_cbb =_fdd *_ba +_adb *_fab +_cdf *_aff +_fdde *_cb ;return ;};func (_fbf *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_fbf ._gb {_fbf .MoveTo (x1 ,y1 );};_bbe ,_ceb :=_fbf ._bce .X ,_fbf ._bce .Y ;x1 ,y1 =_fbf .Transform (x1 ,y1 );x2 ,y2 =_fbf .Transform (x2 ,y2 );
x3 ,y3 =_fbf .Transform (x3 ,y3 );_bdb :=_bbc (_bbe ,_ceb ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_ggd :=_fbc (_fbf ._bce );for _ ,_dbc :=range _bdb [1:]{_bcfc :=_fbc (_dbc );if _bcfc ==_ggd {continue ;};_ggd =_bcfc ;_fbf ._eeg .Add1 (_bcfc );_fbf ._bf .Add1 (_bcfc );
_fbf ._bce =_dbc ;};};func _afc (_dgda _cf .Color )_ac .Pattern {return &solidPattern {_beag :_dgda }};func _d (_cg ,_fb ,_gca ,_cc ,_gd ,_gda ,_db float64 )(_ed ,_bg float64 ){_bgd :=1-_db ;_fc :=_bgd *_bgd ;_bgde :=2*_bgd *_db ;_af :=_db *_db ;_ed =_fc *_cg +_bgde *_gca +_af *_gd ;
_bg =_fc *_fb +_bgde *_cc +_af *_gda ;return ;};type repeatOp int ;func _ecba (_dga _a .Image ,_efde repeatOp )_ac .Pattern {return &surfacePattern {_badb :_dga ,_dabd :_efde };};func (_bfd *radialGradient )AddColorStop (offset float64 ,color _cf .Color ){_bfd ._abgd =append (_bfd ._abgd ,stop {_acef :offset ,_ffdd :color });
_g .Sort (_bfd ._abgd );};func (_fcf *Context )DrawStringAnchored (s string ,face _gcc .Face ,x ,y ,ax ,ay float64 ){_bca ,_add :=_fcf .MeasureString (s ,face );_fcf .drawString (s ,face ,x -ax *_bca ,y +ay *_add );};func (_da *Context )ClearPath (){_da ._eeg .Clear ();
_da ._bf .Clear ();_da ._gb =false };type stop struct{_acef float64 ;_ffdd _cf .Color ;};func (_aee *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_aee .Translate (x ,y );_aee .Scale (sx ,sy );_aee .Translate (-x ,-y );};func (_gdd *Context )SetHexColor (x string ){_fe ,_bfee ,_cgc ,_bcf :=_gabd (x );
_gdd .SetRGBA255 (_fe ,_bfee ,_cgc ,_bcf );};func (_gdc *Context )capper ()_eg .Capper {switch _gdc ._agf {case _ac .LineCapButt :return _eg .ButtCapper ;case _ac .LineCapRound :return _eg .RoundCapper ;case _ac .LineCapSquare :return _eg .SquareCapper ;
};return nil ;};func (_bbb *Context )Matrix ()_cdg .Matrix {return _bbb ._agb };func NewLinearGradient (x0 ,y0 ,x1 ,y1 float64 )_ac .Gradient {_accg :=&linearGradient {_fea :x0 ,_adg :y0 ,_gfe :x1 ,_ddfg :y1 };return _accg ;};func _ebd (_dbg [][]_cdg .Point ,_gbee []float64 ,_baa float64 )[][]_cdg .Point {var _eegg [][]_cdg .Point ;
if len (_gbee )==0{return _dbg ;};if len (_gbee )==1{_gbee =append (_gbee ,_gbee [0]);};for _ ,_ebfc :=range _dbg {if len (_ebfc )< 2{continue ;};_ecae :=_ebfc [0];_febe :=1;_cec :=0;_egd :=0.0;if _baa !=0{var _bbbg float64 ;for _ ,_aca :=range _gbee {_bbbg +=_aca ;
};_baa =_c .Mod (_baa ,_bbbg );if _baa < 0{_baa +=_bbbg ;};for _bcfb ,_begg :=range _gbee {_baa -=_begg ;if _baa < 0{_cec =_bcfb ;_egd =_begg +_baa ;break ;};};};var _fdaef []_cdg .Point ;_fdaef =append (_fdaef ,_ecae );for _febe < len (_ebfc ){_gbg :=_gbee [_cec ];
_cfg :=_ebfc [_febe ];_aage :=_ecae .Distance (_cfg );_begb :=_gbg -_egd ;if _aage > _begb {_gebc :=_begb /_aage ;_cfaa :=_ecae .Interpolate (_cfg ,_gebc );_fdaef =append (_fdaef ,_cfaa );if _cec %2==0&&len (_fdaef )> 1{_eegg =append (_eegg ,_fdaef );};
_fdaef =nil ;_fdaef =append (_fdaef ,_cfaa );_egd =0;_ecae =_cfaa ;_cec =(_cec +1)%len (_gbee );}else {_fdaef =append (_fdaef ,_cfg );_ecae =_cfg ;_egd +=_aage ;_febe ++;};};if _cec %2==0&&len (_fdaef )> 1{_eegg =append (_eegg ,_fdaef );};};return _eegg ;
};func (_eag *Context )NewSubPath (){if _eag ._gb {_eag ._bf .Add1 (_fbc (_eag ._fgf ));};_eag ._gb =false ;};func _abc (_cde float64 ,_ccbd stops )_cf .Color {if _cde <=0.0||len (_ccbd )==1{return _ccbd [0]._ffdd ;};_cab :=_ccbd [len (_ccbd )-1];if _cde >=_cab ._acef {return _cab ._ffdd ;
};for _afgf ,_ecc :=range _ccbd [1:]{if _cde < _ecc ._acef {_cde =(_cde -_ccbd [_afgf ]._acef )/(_ecc ._acef -_ccbd [_afgf ]._acef );return _fddee (_ccbd [_afgf ]._ffdd ,_ecc ._ffdd ,_cde );};};return _cab ._ffdd ;};func (_fabf *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_aab :=_cf .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_fabf ._ccb =_afc (_aab );};func (_fafa *Context )DrawString (s string ,face _gcc .Face ,x ,y float64 ){_fafa .DrawStringAnchored (s ,face ,x ,y ,0,0);};func (_ecf *Context )Scale (x ,y float64 ){_ecf ._agb =_ecf ._agb .Scale (x ,y )};func (_ged *Context )ShearAbout (sx ,sy ,x ,y float64 ){_ged .Translate (x ,y );
_ged .Shear (sx ,sy );_ged .Translate (-x ,-y );};func (_ffg *Context )Image ()_a .Image {return _ffg ._dba };func (_dab *Context )FillPreserve (){var _eba _eg .Painter ;if _dab ._dgf ==nil {if _cfd ,_dfa :=_dab ._aag .(*solidPattern );_dfa {_cebe :=_eg .NewRGBAPainter (_dab ._dba );
_cebe .SetColor (_cfd ._beag );_eba =_cebe ;};};if _eba ==nil {_eba =_gafd (_dab ._dba ,_dab ._dgf ,_dab ._aag );};_dab .fill (_eba );};func (_ddd *Context )LineWidth ()float64 {return _ddd ._fddf };func (_agfb *Context )drawRegularPolygon (_gcge int ,_cef ,_be ,_eed ,_aagg float64 ){_cca :=2*_c .Pi /float64 (_gcge );
_aagg -=_c .Pi /2;if _gcge %2==0{_aagg +=_cca /2;};_agfb .NewSubPath ();for _ffd :=0;_ffd < _gcge ;_ffd ++{_fae :=_aagg +_cca *float64 (_ffd );_agfb .LineTo (_cef +_eed *_c .Cos (_fae ),_be +_eed *_c .Sin (_fae ));};_agfb .ClosePath ();};var (_fce =_afc (_cf .White );
_dg =_afc (_cf .Black ););func _aced (_bgg _a .Image )*_a .RGBA {_bcfg :=_bgg .Bounds ();_dgc :=_a .NewRGBA (_bcfg );_cd .Draw (_dgc ,_bcfg ,_bgg ,_bcfg .Min ,_cd .Src );return _dgc ;};func (_bbd *Context )DrawRectangle (x ,y ,w ,h float64 ){_bbd .NewSubPath ();
_bbd .MoveTo (x ,y );_bbd .LineTo (x +w ,y );_bbd .LineTo (x +w ,y +h );_bbd .LineTo (x ,y +h );_bbd .ClosePath ();};func _fbad (_fdeec _eg .Path )[][]_cdg .Point {var _gddb [][]_cdg .Point ;var _adgc []_cdg .Point ;var _egb ,_dec float64 ;for _efcc :=0;
_efcc < len (_fdeec );{switch _fdeec [_efcc ]{case 0:if len (_adgc )> 0{_gddb =append (_gddb ,_adgc );_adgc =nil ;};_fed :=_caae (_fdeec [_efcc +1]);_feec :=_caae (_fdeec [_efcc +2]);_adgc =append (_adgc ,_cdg .NewPoint (_fed ,_feec ));_egb ,_dec =_fed ,_feec ;
_efcc +=4;case 1:_dcge :=_caae (_fdeec [_efcc +1]);_badg :=_caae (_fdeec [_efcc +2]);_adgc =append (_adgc ,_cdg .NewPoint (_dcge ,_badg ));_egb ,_dec =_dcge ,_badg ;_efcc +=4;case 2:_aba :=_caae (_fdeec [_efcc +1]);_eac :=_caae (_fdeec [_efcc +2]);_fdab :=_caae (_fdeec [_efcc +3]);
_gdaga :=_caae (_fdeec [_efcc +4]);_cdef :=_ef (_egb ,_dec ,_aba ,_eac ,_fdab ,_gdaga );_adgc =append (_adgc ,_cdef ...);_egb ,_dec =_fdab ,_gdaga ;_efcc +=6;case 3:_deg :=_caae (_fdeec [_efcc +1]);_accf :=_caae (_fdeec [_efcc +2]);_fbea :=_caae (_fdeec [_efcc +3]);
_agde :=_caae (_fdeec [_efcc +4]);_efac :=_caae (_fdeec [_efcc +5]);_ddda :=_caae (_fdeec [_efcc +6]);_dcd :=_bbc (_egb ,_dec ,_deg ,_accf ,_fbea ,_agde ,_efac ,_ddda );_adgc =append (_adgc ,_dcd ...);_egb ,_dec =_efac ,_ddda ;_efcc +=8;default:_e .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_fdeec );
return _gddb ;};};if len (_adgc )> 0{_gddb =append (_gddb ,_adgc );};return _gddb ;};func _cegb (_bae ,_bbfg ,_fdb ,_gfgg ,_aefe ,_ffba float64 )float64 {return _bae *_gfgg +_bbfg *_aefe +_fdb *_ffba ;};func (_cebb *linearGradient )AddColorStop (offset float64 ,color _cf .Color ){_cebb ._bbf =append (_cebb ._bbf ,stop {_acef :offset ,_ffdd :color });
_g .Sort (_cebb ._bbf );};func (_ded *Context )Width ()int {return _ded ._affb };func (_fdae *Context )ClosePath (){if _fdae ._gb {_fgd :=_fbc (_fdae ._fgf );_fdae ._eeg .Add1 (_fgd );_fdae ._bf .Add1 (_fgd );_fdae ._bce =_fdae ._fgf ;};};func (_egf *Context )SetMask (mask *_a .Alpha )error {if mask .Bounds ().Size ()!=_egf ._dba .Bounds ().Size (){return _fda .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_egf ._dgf =mask ;return nil ;};func (_dag *Context )ClipPreserve (){_fceg :=_a .NewAlpha (_a .Rect (0,0,_dag ._affb ,_dag ._eef ));_gfdb :=_eg .NewAlphaOverPainter (_fceg );_dag .fill (_gfdb );if _dag ._dgf ==nil {_dag ._dgf =_fceg ;}else {_ae :=_a .NewAlpha (_a .Rect (0,0,_dag ._affb ,_dag ._eef ));
_ag .DrawMask (_ae ,_ae .Bounds (),_fceg ,_a .Point {},_dag ._dgf ,_a .Point {},_ag .Over );_dag ._dgf =_ae ;};};func (_efgc *Context )LineTo (x ,y float64 ){if !_efgc ._gb {_efgc .MoveTo (x ,y );}else {x ,y =_efgc .Transform (x ,y );_gaf :=_cdg .NewPoint (x ,y );
_cbfg :=_fbc (_gaf );_efgc ._eeg .Add1 (_cbfg );_efgc ._bf .Add1 (_cbfg );_efgc ._bce =_gaf ;};};func _gabd (_dbfg string )(_efge ,_dfd ,_bbag ,_edgc int ){_dbfg =_b .TrimPrefix (_dbfg ,"\u0023");_edgc =255;if len (_dbfg )==3{_gafb :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";
_fd .Sscanf (_dbfg ,_gafb ,&_efge ,&_dfd ,&_bbag );_efge |=_efge <<4;_dfd |=_dfd <<4;_bbag |=_bbag <<4;};if len (_dbfg )==6{_geae :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_fd .Sscanf (_dbfg ,_geae ,&_efge ,&_dfd ,&_bbag );
};if len (_dbfg )==8{_aade :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_fd .Sscanf (_dbfg ,_aade ,&_efge ,&_dfd ,&_bbag ,&_edgc );};return ;};func _bbc (_dc ,_ca ,_faf ,_ff ,_bgb ,_cbd ,_fcg ,_bd float64 )[]_cdg .Point {_gg :=(_c .Hypot (_faf -_dc ,_ff -_ca )+_c .Hypot (_bgb -_faf ,_cbd -_ff )+_c .Hypot (_fcg -_bgb ,_bd -_cbd ));
_ebc :=int (_gg +0.5);if _ebc < 4{_ebc =4;};_fdg :=float64 (_ebc )-1;_gab :=make ([]_cdg .Point ,_ebc );for _ace :=0;_ace < _ebc ;_ace ++{_ea :=float64 (_ace )/_fdg ;_ddg ,_bad :=_gdg (_dc ,_ca ,_faf ,_ff ,_bgb ,_cbd ,_fcg ,_bd ,_ea );_gab [_ace ]=_cdg .NewPoint (_ddg ,_bad );
};return _gab ;};func (_cdga *Context )SetLineCap (lineCap _ac .LineCap ){_cdga ._agf =lineCap };func (_cfc *Context )joiner ()_eg .Joiner {switch _cfc ._cbf {case _ac .LineJoinBevel :return _eg .BevelJoiner ;case _ac .LineJoinRound :return _eg .RoundJoiner ;
};return nil ;};func (_agfe *Context )SetMatrix (m _cdg .Matrix ){_agfe ._agb =m };type linearGradient struct{_fea ,_adg ,_gfe ,_ddfg float64 ;_bbf stops ;};func (_dfb *Context )setFillAndStrokeColor (_fafd _cf .Color ){_dfb ._ce =_fafd ;_dfb ._aag =_afc (_fafd );
_dfb ._ccb =_afc (_fafd );};func (_df *Context )SetLineJoin (lineJoin _ac .LineJoin ){_df ._cbf =lineJoin };func _dafb (_dca _eg .Path ,_dcab []float64 ,_bffa float64 )_eg .Path {return _dceb (_ebd (_fbad (_dca ),_dcab ,_bffa ));};func (_gad *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_gad .MoveTo (x1 ,y1 );
_gad .LineTo (x2 ,y2 )};func (_ge *Context )SetRGB (r ,g ,b float64 ){_ge .SetRGBA (r ,g ,b ,1)};func (_gef *Context )DrawImageAnchored (im _a .Image ,x ,y int ,ax ,ay float64 ){_fgc :=im .Bounds ().Size ();x -=int (ax *float64 (_fgc .X ));y -=int (ay *float64 (_fgc .Y ));
_bdbf :=_ag .BiLinear ;_ece :=_gef ._agb .Clone ().Translate (float64 (x ),float64 (y ));_effe :=_gc .Aff3 {_ece [0],_ece [3],_ece [6],_ece [1],_ece [4],_ece [7]};if _gef ._dgf ==nil {_bdbf .Transform (_gef ._dba ,_effe ,im ,im .Bounds (),_ag .Over ,nil );
}else {_bdbf .Transform (_gef ._dba ,_effe ,im ,im .Bounds (),_ag .Over ,&_ag .Options {DstMask :_gef ._dgf ,DstMaskP :_a .Point {}});};};func (_gfc *Context )AsMask ()*_a .Alpha {_dae :=_a .NewAlpha (_gfc ._dba .Bounds ());_ag .Draw (_dae ,_gfc ._dba .Bounds (),_gfc ._dba ,_a .Point {},_ag .Src );
return _dae ;};func (_eegf *Context )Clear (){_dgd :=_a .NewUniform (_eegf ._ce );_ag .Draw (_eegf ._dba ,_eegf ._dba .Bounds (),_dgd ,_a .Point {},_ag .Src );};func (_agg *Context )SetDash (dashes ...float64 ){_agg ._bfe =dashes };type patternPainter struct{_aedb *_a .RGBA ;
_caa *_a .Alpha ;_aae _ac .Pattern ;};type stops []stop ;func (_fabe *radialGradient )ColorAt (x ,y int )_cf .Color {if len (_fabe ._abgd )==0{return _cf .Transparent ;};_aagf ,_dgb :=float64 (x )+0.5-_fabe ._cefb ._ecfa ,float64 (y )+0.5-_fabe ._cefb ._dbfe ;
_eee :=_cegb (_aagf ,_dgb ,_fabe ._cefb ._bcca ,_fabe ._ddfd ._ecfa ,_fabe ._ddfd ._dbfe ,_fabe ._ddfd ._bcca );_feb :=_cegb (_aagf ,_dgb ,-_fabe ._cefb ._bcca ,_aagf ,_dgb ,_fabe ._cefb ._bcca );if _fabe ._bbga ==0{if _eee ==0{return _cf .Transparent ;
};_fcfa :=0.5*_feb /_eee ;if _fcfa *_fabe ._ddfd ._bcca >=_fabe ._cgca {return _abc (_fcfa ,_fabe ._abgd );};return _cf .Transparent ;};_effb :=_cegb (_eee ,_fabe ._bbga ,0,_eee ,-_feb ,0);if _effb >=0{_acb :=_c .Sqrt (_effb );_abbd :=(_eee +_acb )*_fabe ._ccd ;
_gbe :=(_eee -_acb )*_fabe ._ccd ;if _abbd *_fabe ._ddfd ._bcca >=_fabe ._cgca {return _abc (_abbd ,_fabe ._abgd );}else if _gbe *_fabe ._ddfd ._bcca >=_fabe ._cgca {return _abc (_gbe ,_fabe ._abgd );};};return _cf .Transparent ;};func (_ffcc *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _ffbd =16;
for _cege :=0;_cege < _ffbd ;_cege ++{_gga :=float64 (_cege +0)/_ffbd ;_edg :=float64 (_cege +1)/_ffbd ;_fgff :=angle1 +(angle2 -angle1 )*_gga ;_fgfb :=angle1 +(angle2 -angle1 )*_edg ;_adf :=x +rx *_c .Cos (_fgff );_adbb :=y +ry *_c .Sin (_fgff );_dad :=x +rx *_c .Cos ((_fgff +_fgfb )/2);
_dfg :=y +ry *_c .Sin ((_fgff +_fgfb )/2);_bged :=x +rx *_c .Cos (_fgfb );_fee :=y +ry *_c .Sin (_fgfb );_bcc :=2*_dad -_adf /2-_bged /2;_abg :=2*_dfg -_adbb /2-_fee /2;if _cege ==0{if _ffcc ._gb {_ffcc .LineTo (_adf ,_adbb );}else {_ffcc .MoveTo (_adf ,_adbb );
};};_ffcc .QuadraticTo (_bcc ,_abg ,_bged ,_fee );};};func (_edb *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_edb .NewSubPath ();_edb .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_c .Pi );_edb .ClosePath ();};func (_dce *linearGradient )ColorAt (x ,y int )_cf .Color {if len (_dce ._bbf )==0{return _cf .Transparent ;
};_bffb ,_aagb :=float64 (x ),float64 (y );_cdfa ,_gaee ,_bea ,_ddfgd :=_dce ._fea ,_dce ._adg ,_dce ._gfe ,_dce ._ddfg ;_fddef ,_cba :=_bea -_cdfa ,_ddfgd -_gaee ;if _cba ==0&&_fddef !=0{return _abc ((_bffb -_cdfa )/_fddef ,_dce ._bbf );};if _fddef ==0&&_cba !=0{return _abc ((_aagb -_gaee )/_cba ,_dce ._bbf );
};_gcae :=_fddef *(_bffb -_cdfa )+_cba *(_aagb -_gaee );if _gcae < 0{return _dce ._bbf [0]._ffdd ;};_ada :=_c .Hypot (_fddef ,_cba );_efc :=((_bffb -_cdfa )*-_cba +(_aagb -_gaee )*_fddef )/(_ada *_ada );_dbae ,_daa :=_cdfa +_efc *-_cba ,_gaee +_efc *_fddef ;
_gde :=_c .Hypot (_bffb -_dbae ,_aagb -_daa )/_ada ;return _abc (_gde ,_dce ._bbf );};func (_eff *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_ceee ,_cbgd ,_gcgc ,_adc :=x ,x +r ,x +w -r ,x +w ;_cbbb ,_baf ,_gafc ,_cbbd :=y ,y +r ,y +h -r ,y +h ;
_eff .NewSubPath ();_eff .MoveTo (_cbgd ,_cbbb );_eff .LineTo (_gcgc ,_cbbb );_eff .DrawArc (_gcgc ,_baf ,r ,_cega (270),_cega (360));_eff .LineTo (_adc ,_gafc );_eff .DrawArc (_gcgc ,_gafc ,r ,_cega (0),_cega (90));_eff .LineTo (_cbgd ,_cbbd );_eff .DrawArc (_cbgd ,_gafc ,r ,_cega (90),_cega (180));
_eff .LineTo (_ceee ,_baf );_eff .DrawArc (_cbgd ,_baf ,r ,_cega (180),_cega (270));_eff .ClosePath ();};func (_fgb *Context )Clip (){_fgb .ClipPreserve ();_fgb .ClearPath ()};func NewRadialGradient (x0 ,y0 ,r0 ,x1 ,y1 ,r1 float64 )_ac .Gradient {_gafg :=circle {x0 ,y0 ,r0 };
_daf :=circle {x1 ,y1 ,r1 };_gadg :=circle {x1 -x0 ,y1 -y0 ,r1 -r0 };_feeb :=_cegb (_gadg ._ecfa ,_gadg ._dbfe ,-_gadg ._bcca ,_gadg ._ecfa ,_gadg ._dbfe ,_gadg ._bcca );var _beg float64 ;if _feeb !=0{_beg =1.0/_feeb ;};_gfeg :=-_gafg ._bcca ;_ggaf :=&radialGradient {_cefb :_gafg ,_gdfa :_daf ,_ddfd :_gadg ,_bbga :_feeb ,_ccd :_beg ,_cgca :_gfeg };
return _ggaf ;};func _ef (_fa ,_aa ,_ee ,_bge ,_ga ,_afd float64 )[]_cdg .Point {_ec :=(_c .Hypot (_ee -_fa ,_bge -_aa )+_c .Hypot (_ga -_ee ,_afd -_bge ));_ad :=int (_ec +0.5);if _ad < 4{_ad =4;};_aga :=float64 (_ad )-1;_de :=make ([]_cdg .Point ,_ad );
for _fba :=0;_fba < _ad ;_fba ++{_dd :=float64 (_fba )/_aga ;_acc ,_eca :=_d (_fa ,_aa ,_ee ,_bge ,_ga ,_afd ,_dd );_de [_fba ]=_cdg .NewPoint (_acc ,_eca );};return _de ;};func (_ebb *Context )SetFillRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_dea :=_ebb ._ce .RGBA ();
if _dea > 0&&_dea !=65535&&a ==1{a =float64 (_dea )/65535;};_efa :=_cf .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_ebb ._ce =_efa ;_ebb ._aag =_afc (_efa );};func (_fga *Context )StrokePreserve (){var _afe _eg .Painter ;if _fga ._dgf ==nil {if _accc ,_cae :=_fga ._ccb .(*solidPattern );
_cae {_ffcd :=_eg .NewRGBAPainter (_fga ._dba );_ffcd .SetColor (_accc ._beag );_afe =_ffcd ;};};if _afe ==nil {_afe =_gafd (_fga ._dba ,_fga ._dgf ,_fga ._ccb );};_fga .stroke (_afe );};func _caae (_aaad _bc .Int26_6 )float64 {const _afeb ,_aecf =6,1<<6-1;
if _aaad >=0{return float64 (_aaad >>_afeb )+float64 (_aaad &_aecf )/64;};_aaad =-_aaad ;if _aaad >=0{return -(float64 (_aaad >>_afeb )+float64 (_aaad &_aecf )/64);};return 0;};func (_fddc *Context )drawString (_ecb string ,_bed _gcc .Face ,_eae ,_gag float64 ){_aef :=&_gcc .Drawer {Src :_a .NewUniform (_fddc ._ce ),Face :_bed ,Dot :_fbc (_cdg .NewPoint (_eae ,_gag ))};
_edf :=rune (-1);for _ ,_aed :=range _ecb {if _edf >=0{_aef .Dot .X +=_aef .Face .Kern (_edf ,_aed );};_ffe ,_facc ,_eda ,_agabg ,_efd :=_aef .Face .Glyph (_aef .Dot ,_aed );if !_efd {continue ;};_ebf :=_ffe .Sub (_ffe .Min );_abb :=_a .NewRGBA (_ebf );
_ag .DrawMask (_abb ,_ebf ,_aef .Src ,_a .Point {},_facc ,_eda ,_ag .Over );var _ffad *_ag .Options ;if _fddc ._dgf !=nil {_ffad =&_ag .Options {DstMask :_fddc ._dgf ,DstMaskP :_a .Point {}};};_dbb :=_fddc ._agb .Clone ().Translate (float64 (_ffe .Min .X ),float64 (_ffe .Min .Y ));
_fde :=_gc .Aff3 {_dbb [0],_dbb [3],_dbb [6],_dbb [1],_dbb [4],_dbb [7]};_ag .BiLinear .Transform (_fddc ._dba ,_fde ,_abb ,_ebf ,_ag .Over ,_ffad );_aef .Dot .X +=_agabg ;_edf =_aed ;};};func _cega (_adaf float64 )float64 {return _adaf *_c .Pi /180};func (_ddga *Context )Pop (){_cdd :=*_ddga ;
_fdee :=_ddga ._eefe ;_dcgf :=_fdee [len (_fdee )-1];*_ddga =*_dcgf ;_ddga ._eeg =_cdd ._eeg ;_ddga ._bf =_cdd ._bf ;_ddga ._fgf =_cdd ._fgf ;_ddga ._bce =_cdd ._bce ;_ddga ._gb =_cdd ._gb ;};func (_ebbe stops )Swap (i ,j int ){_ebbe [i ],_ebbe [j ]=_ebbe [j ],_ebbe [i ]};
func (_ceg *Context )SetFillStyle (pattern _ac .Pattern ){if _bfea ,_dge :=pattern .(*solidPattern );_dge {_ceg ._ce =_bfea ._beag ;};_ceg ._aag =pattern ;};func (_dcb *Context )SetRGBA255 (r ,g ,b ,a int ){_dcb ._ce =_cf .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};
_dcb .setFillAndStrokeColor (_dcb ._ce );};func (_aaa *Context )MeasureString (s string ,face _gcc .Face )(_dgg ,_caf float64 ){_bbg :=&_gcc .Drawer {Face :face };_cff :=_bbg .MeasureString (s );return float64 (_cff >>6),_aaa ._dbf .Tf .Size ;};func _fddee (_aabf ,_ceeeb _cf .Color ,_eea float64 )_cf .Color {_bbfc ,_dfed ,_bafa ,_ecbe :=_aabf .RGBA ();
_bfec ,_ebbg ,_cgea ,_fdbe :=_ceeeb .RGBA ();return _cf .RGBA {_dcc (_bbfc ,_bfec ,_eea ),_dcc (_dfed ,_ebbg ,_eea ),_dcc (_bafa ,_cgea ,_eea ),_dcc (_ecbe ,_fdbe ,_eea )};};func _dceb (_febd [][]_cdg .Point )_eg .Path {var _fgg _eg .Path ;for _ ,_cdc :=range _febd {var _ccfd _bc .Point26_6 ;
for _cdfb ,_cag :=range _cdc {_badgd :=_fbc (_cag );if _cdfb ==0{_fgg .Start (_badgd );}else {_cebd :=_badgd .X -_ccfd .X ;_deb :=_badgd .Y -_ccfd .Y ;if _cebd < 0{_cebd =-_cebd ;};if _deb < 0{_deb =-_deb ;};if _cebd +_deb > 8{_fgg .Add1 (_badgd );};};
_ccfd =_badgd ;};};return _fgg ;};func (_abgc *Context )Transform (x ,y float64 )(_ecaa ,_aeg float64 ){return _abgc ._agb .Transform (x ,y );};func (_cbc *Context )Shear (x ,y float64 ){_cbc ._agb .Shear (x ,y )};type circle struct{_ecfa ,_dbfe ,_bcca float64 };
func NewContextForImage (im _a .Image )*Context {return NewContextForRGBA (_aced (im ))};type radialGradient struct{_cefb ,_gdfa ,_ddfd circle ;_bbga ,_ccd float64 ;_cgca float64 ;_abgd stops ;};func (_fdf *Context )DrawCircle (x ,y ,r float64 ){_fdf .NewSubPath ();
_fdf .DrawEllipticalArc (x ,y ,r ,r ,0,2*_c .Pi );_fdf .ClosePath ();};func (_fcgg *Context )stroke (_dbd _eg .Painter ){_fdaee :=_fcgg ._eeg ;if len (_fcgg ._bfe )> 0{_fdaee =_dafb (_fdaee ,_fcgg ._bfe ,_fcgg ._ffb );}else {_fdaee =_dceb (_fbad (_fdaee ));
};_cee :=_fcgg ._cbe ;_cee .UseNonZeroWinding =true ;_cee .Clear ();_bag :=(_fcgg ._agb .ScalingFactorX ()+_fcgg ._agb .ScalingFactorY ())/2;_cee .AddStroke (_fdaee ,_cgb (_fcgg ._fddf *_bag ),_fcgg .capper (),_fcgg .joiner ());_cee .Rasterize (_dbd );
};func (_bdd *Context )Fill (){_bdd .FillPreserve ();_bdd .ClearPath ()};type solidPattern struct{_beag _cf .Color };func (_abe *Context )Rotate (angle float64 ){_abe ._agb =_abe ._agb .Rotate (angle )};func (_fge *Context )RotateAbout (angle ,x ,y float64 ){_fge .Translate (x ,y );
_fge .Rotate (angle );_fge .Translate (-x ,-y );};func _gafd (_acca *_a .RGBA ,_ddc *_a .Alpha ,_fedg _ac .Pattern )*patternPainter {return &patternPainter {_acca ,_ddc ,_fedg };};func (_dede *Context )Stroke (){_dede .StrokePreserve ();_dede .ClearPath ()};
const (_aec repeatOp =iota ;_dcad ;_abgg ;_dac ;);func (_efaf *Context )InvertMask (){if _efaf ._dgf ==nil {_efaf ._dgf =_a .NewAlpha (_efaf ._dba .Bounds ());}else {for _gbfb ,_bbce :=range _efaf ._dgf .Pix {_efaf ._dgf .Pix [_gbfb ]=255-_bbce ;};};};
func (_acd *Context )SetFillRule (fillRule _ac .FillRule ){_acd ._bgf =fillRule };func (_gdag *Context )SetStrokeStyle (pattern _ac .Pattern ){_gdag ._ccb =pattern };type Context struct{_affb int ;_eef int ;_cbe *_eg .Rasterizer ;_dba *_a .RGBA ;_dgf *_a .Alpha ;
_ce _cf .Color ;_aag _ac .Pattern ;_ccb _ac .Pattern ;_eeg _eg .Path ;_bf _eg .Path ;_fgf _cdg .Point ;_bce _cdg .Point ;_gb bool ;_bfe []float64 ;_ffb float64 ;_fddf float64 ;_agf _ac .LineCap ;_cbf _ac .LineJoin ;_bgf _ac .FillRule ;_agb _cdg .Matrix ;
_dbf _ac .TextState ;_eefe []*Context ;};func (_dda *Context )ResetClip (){_dda ._dgf =nil };func (_ffec *Context )Push (){_cge :=*_ffec ;_ffec ._eefe =append (_ffec ._eefe ,&_cge )};type surfacePattern struct{_badb _a .Image ;_dabd repeatOp ;};func _cgb (_aege float64 )_bc .Int26_6 {return _bc .Int26_6 (_aege *64)};
func _fbc (_bbcc _cdg .Point )_bc .Point26_6 {return _bc .Point26_6 {X :_cgb (_bbcc .X ),Y :_cgb (_bbcc .Y )}};func (_efb stops )Less (i ,j int )bool {return _efb [i ]._acef < _efb [j ]._acef };func (_ffa *Context )SetPixel (x ,y int ){_ffa ._dba .Set (x ,y ,_ffa ._ce )};
func (_dfe *Context )TextState ()*_ac .TextState {return &_dfe ._dbf };func (_dcef *solidPattern )ColorAt (x ,y int )_cf .Color {return _dcef ._beag };func (_bff *Context )FillPattern ()_ac .Pattern {return _bff ._aag };func (_eefc *Context )SetDashOffset (offset float64 ){_eefc ._ffb =offset };
func (_ebg *Context )DrawImage (im _a .Image ,x ,y int ){_ebg .DrawImageAnchored (im ,x ,y ,0,0)};func (_bba *Context )Translate (x ,y float64 ){_bba ._agb =_bba ._agb .Translate (x ,y )};func (_gfg *Context )SetRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_fbe :=_gfg ._ce .RGBA ();
if _fbe > 0&&_fbe !=65535&&a ==1{a =float64 (_fbe )/65535;};_gfg ._ce =_cf .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_gfg .setFillAndStrokeColor (_gfg ._ce );};func (_eec *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_eec ._gb {_eec .MoveTo (x1 ,y1 );
};x1 ,y1 =_eec .Transform (x1 ,y1 );x2 ,y2 =_eec .Transform (x2 ,y2 );_gfd :=_cdg .NewPoint (x1 ,y1 );_agd :=_cdg .NewPoint (x2 ,y2 );_fac :=_fbc (_gfd );_cfa :=_fbc (_agd );_eec ._eeg .Add2 (_fac ,_cfa );_eec ._bf .Add2 (_fac ,_cfa );_eec ._bce =_agd ;
};func (_bee *Context )Identity (){_bee ._agb =_cdg .IdentityMatrix ()};func (_ccff *Context )SetRGB255 (r ,g ,b int ){_ccff .SetRGBA255 (r ,g ,b ,255)};func (_edd stops )Len ()int {return len (_edd )};func (_bbcf *Context )SetColor (c _cf .Color ){_bbcf .setFillAndStrokeColor (c )};
func (_fbab *Context )fill (_dbca _eg .Painter ){_agab :=_fbab ._bf ;if _fbab ._gb {_agab =make (_eg .Path ,len (_fbab ._bf ));copy (_agab ,_fbab ._bf );_agab .Add1 (_fbc (_fbab ._fgf ));};_gff :=_fbab ._cbe ;_gff .UseNonZeroWinding =_fbab ._bgf ==_ac .FillRuleWinding ;
_gff .Clear ();_gff .AddPath (_agab );_gff .Rasterize (_dbca );};func (_dcg *Context )DrawPoint (x ,y ,r float64 ){_dcg .Push ();_ade ,_gdde :=_dcg .Transform (x ,y );_dcg .Identity ();_dcg .DrawCircle (_ade ,_gdde ,r );_dcg .Pop ();};func (_gaa *Context )Height ()int {return _gaa ._eef };
func NewContextForRGBA (im *_a .RGBA )*Context {_efg :=im .Bounds ().Size ().X ;_ffc :=im .Bounds ().Size ().Y ;return &Context {_affb :_efg ,_eef :_ffc ,_cbe :_eg .NewRasterizer (_efg ,_ffc ),_dba :im ,_ce :_cf .Transparent ,_aag :_fce ,_ccb :_dg ,_fddf :1,_bgf :_ac .FillRuleWinding ,_agb :_cdg .IdentityMatrix (),_dbf :_ac .NewTextState ()};
};func (_egff *surfacePattern )ColorAt (x ,y int )_cf .Color {_cga :=_egff ._badb .Bounds ();switch _egff ._dabd {case _dcad :if y >=_cga .Dy (){return _cf .Transparent ;};case _abgg :if x >=_cga .Dx (){return _cf .Transparent ;};case _dac :if x >=_cga .Dx ()||y >=_cga .Dy (){return _cf .Transparent ;
};};x =x %_cga .Dx ()+_cga .Min .X ;y =y %_cga .Dy ()+_cga .Min .Y ;return _egff ._badb .At (x ,y );};func _dcc (_bdbe ,_gadgd uint32 ,_geb float64 )uint8 {return uint8 (int32 (float64 (_bdbe )*(1.0-_geb )+float64 (_gadgd )*_geb )>>8);};func NewContext (width ,height int )*Context {return NewContextForRGBA (_a .NewRGBA (_a .Rect (0,0,width ,height )));
};func (_gf *Context )SetLineWidth (lineWidth float64 ){_gf ._fddf =lineWidth };func (_gdf *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_gdf .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_dgag *patternPainter )Paint (ss []_eg .Span ,done bool ){_cgf :=_dgag ._aedb .Bounds ();
for _ ,_caag :=range ss {if _caag .Y < _cgf .Min .Y {continue ;};if _caag .Y >=_cgf .Max .Y {return ;};if _caag .X0 < _cgf .Min .X {_caag .X0 =_cgf .Min .X ;};if _caag .X1 > _cgf .Max .X {_caag .X1 =_cgf .Max .X ;};if _caag .X0 >=_caag .X1 {continue ;};
const _eefg =1<<16-1;_face :=_caag .Y -_dgag ._aedb .Rect .Min .Y ;_edfe :=_caag .X0 -_dgag ._aedb .Rect .Min .X ;_egc :=(_caag .Y -_dgag ._aedb .Rect .Min .Y )*_dgag ._aedb .Stride +(_caag .X0 -_dgag ._aedb .Rect .Min .X )*4;_bcec :=_egc +(_caag .X1 -_caag .X0 )*4;
for _bgbc ,_bagc :=_egc ,_edfe ;_bgbc < _bcec ;_bgbc ,_bagc =_bgbc +4,_bagc +1{_fbfa :=_caag .Alpha ;if _dgag ._caa !=nil {_fbfa =_fbfa *uint32 (_dgag ._caa .AlphaAt (_bagc ,_face ).A )/255;if _fbfa ==0{continue ;};};_aad :=_dgag ._aae .ColorAt (_bagc ,_face );
_gea ,_dgge ,_gggd ,_bfg :=_aad .RGBA ();_beage :=uint32 (_dgag ._aedb .Pix [_bgbc +0]);_fdbf :=uint32 (_dgag ._aedb .Pix [_bgbc +1]);_def :=uint32 (_dgag ._aedb .Pix [_bgbc +2]);_deca :=uint32 (_dgag ._aedb .Pix [_bgbc +3]);_cfcd :=(_eefg -(_bfg *_fbfa /_eefg ))*0x101;
_dgag ._aedb .Pix [_bgbc +0]=uint8 ((_beage *_cfcd +_gea *_fbfa )/_eefg >>8);_dgag ._aedb .Pix [_bgbc +1]=uint8 ((_fdbf *_cfcd +_dgge *_fbfa )/_eefg >>8);_dgag ._aedb .Pix [_bgbc +2]=uint8 ((_def *_cfcd +_gggd *_fbfa )/_eefg >>8);_dgag ._aedb .Pix [_bgbc +3]=uint8 ((_deca *_cfcd +_bfg *_fbfa )/_eefg >>8);
};};};