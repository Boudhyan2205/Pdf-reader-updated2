//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_ba "errors";_b "fmt";_gg "github.com/golang/freetype/raster";_ge "github.com/unidoc/unipdf/v3/common";_gd "github.com/unidoc/unipdf/v3/internal/transform";_ff "github.com/unidoc/unipdf/v3/render/internal/context";_a "golang.org/x/image/draw";_ab "golang.org/x/image/font";_bc "golang.org/x/image/math/f64";_ffb "golang.org/x/image/math/fixed";_fd "image";_ee "image/color";_cg "image/draw";_g "math";_e "sort";_c "strings";);type circle struct{_fdg ,_caf ,_efe float64 };const (_bcfc repeatOp =iota ;_ddd ;_ffbfd ;_caeg ;);func _cegf (_fgeac float64 ,_bbdb stops )_ee .Color {if _fgeac <=0.0||len (_bbdb )==1{return _bbdb [0]._gef ;};_gbcf :=_bbdb [len (_bbdb )-1];if _fgeac >=_gbcf ._ggdc {return _gbcf ._gef ;};for _fcae ,_baba :=range _bbdb [1:]{if _fgeac < _baba ._ggdc {_fgeac =(_fgeac -_bbdb [_fcae ]._ggdc )/(_baba ._ggdc -_bbdb [_fcae ]._ggdc );return _cgfbe (_bbdb [_fcae ]._gef ,_baba ._gef ,_fgeac );};};return _gbcf ._gef ;};func (_aed *Context )SetRGB (r ,g ,b float64 ){_aed .SetRGBA (r ,g ,b ,1)};func (_fdaa *Context )Stroke (){_fdaa .StrokePreserve ();_fdaa .ClearPath ()};func (_fgc *Context )SetLineWidth (lineWidth float64 ){_fgc ._cfe =lineWidth };func _fbf (_geg ,_bgg ,_ae ,_af ,_aec ,_afb ,_gdg ,_bfb ,_dea float64 )(_eb ,_fbb float64 ){_fg :=1-_dea ;_bb :=_fg *_fg *_fg ;_ceb :=3*_fg *_fg *_dea ;_acb :=3*_fg *_dea *_dea ;_cgc :=_dea *_dea *_dea ;_eb =_bb *_geg +_ceb *_ae +_acb *_aec +_cgc *_gdg ;_fbb =_bb *_bgg +_ceb *_af +_acb *_afb +_cgc *_bfb ;return ;};func (_egg *Context )SetRGBA (r ,g ,b ,a float64 ){_egg ._ddg =_ee .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_egg .setFillAndStrokeColor (_egg ._ddg );};func (_dfb *Context )ClipPreserve (){_gecb :=_fd .NewAlpha (_fd .Rect (0,0,_dfb ._gaa ,_dfb ._ea ));_gdbg :=_gg .NewAlphaOverPainter (_gecb );_dfb .fill (_gdbg );if _dfb ._eaa ==nil {_dfb ._eaa =_gecb ;}else {_aaa :=_fd .NewAlpha (_fd .Rect (0,0,_dfb ._gaa ,_dfb ._ea ));_a .DrawMask (_aaa ,_aaa .Bounds (),_gecb ,_fd .ZP ,_dfb ._eaa ,_fd .ZP ,_a .Over );_dfb ._eaa =_aaa ;};};func (_gfg *Context )SetRGB255 (r ,g ,b int ){_gfg .SetRGBA255 (r ,g ,b ,255)};func (_dcd *Context )SetRGBA255 (r ,g ,b ,a int ){_dcd ._ddg =_ee .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_dcd .setFillAndStrokeColor (_dcd ._ddg );};func _gc (_cc ,_cce ,_ag ,_ca ,_abe ,_be ,_aa float64 )(_d ,_fc float64 ){_gb :=1-_aa ;_fff :=_gb *_gb ;_cad :=2*_gb *_aa ;_cgg :=_aa *_aa ;_d =_fff *_cc +_cad *_ag +_cgg *_abe ;_fc =_fff *_cce +_cad *_ca +_cgg *_be ;return ;};func (_aeg *Context )LineWidth ()float64 {return _aeg ._cfe };func (_cbe *Context )DrawImageAnchored (im _fd .Image ,x ,y int ,ax ,ay float64 ){_gga :=im .Bounds ().Size ();x -=int (ax *float64 (_gga .X ));y -=int (ay *float64 (_gga .Y ));_aeef :=_a .BiLinear ;_bcac :=_cbe ._bef .Clone ();_bcac .Translate (float64 (x ),float64 (y ));_cdcb :=_bc .Aff3 {_bcac [0],_bcac [3],_bcac [6],_bcac [1],_bcac [4],_bcac [7]};if _cbe ._eaa ==nil {_aeef .Transform (_cbe ._fbe ,_cdcb ,im ,im .Bounds (),_a .Over ,nil );}else {_aeef .Transform (_cbe ._fbe ,_cdcb ,im ,im .Bounds (),_a .Over ,&_a .Options {DstMask :_cbe ._eaa ,DstMaskP :_fd .ZP });};};func (_aegd *Context )FillPreserve (){var _bcgb _gg .Painter ;if _aegd ._eaa ==nil {if _fba ,_bcc :=_aegd ._bfba .(*solidPattern );_bcc {_fe :=_gg .NewRGBAPainter (_aegd ._fbe );_fe .SetColor (_fba ._cebb );_bcgb =_fe ;};};if _bcgb ==nil {_bcgb =_gbab (_aegd ._fbe ,_aegd ._eaa ,_aegd ._bfba );};_aegd .fill (_bcgb );};func (_ef *Context )Shear (x ,y float64 ){_ef ._bef .Shear (x ,y )};type surfacePattern struct{_abda _fd .Image ;_cfgg repeatOp ;};func (_bdb *solidPattern )ColorAt (x ,y int )_ee .Color {return _bdb ._cebb };func _agge (_bfbga [][]_gd .Point )_gg .Path {var _cabb _gg .Path ;for _ ,_ccea :=range _bfbga {var _bgbc _ffb .Point26_6 ;for _cfb ,_ccef :=range _ccea {_gfcd :=_feg (_ccef );if _cfb ==0{_cabb .Start (_gfcd );}else {_baee :=_gfcd .X -_bgbc .X ;_ggfa :=_gfcd .Y -_bgbc .Y ;if _baee < 0{_baee =-_baee ;};if _ggfa < 0{_ggfa =-_ggfa ;};if _baee +_ggfa > 8{_cabb .Add1 (_gfcd );};};_bgbc =_gfcd ;};};return _cabb ;};func _ecc (_dcf ,_gfee ,_edae ,_bcf float64 )_ff .Gradient {_ebe :=&linearGradient {_ege :_dcf ,_deag :_gfee ,_beb :_edae ,_eee :_bcf };return _ebe ;};func NewContextForImage (im _fd .Image )*Context {return NewContextForRGBA (_afd (im ))};func (_fgb *Context )SetDash (dashes ...float64 ){_fgb ._dcc =dashes };type radialGradient struct{_aebd ,_dad ,_fedc circle ;_bba ,_abdce float64 ;_gfge float64 ;_ebc stops ;};func (_ddc *Context )LineTo (x ,y float64 ){if !_ddc ._gdb {_ddc .MoveTo (x ,y );}else {x ,y =_ddc .Transform (x ,y );_aee :=_gd .NewPoint (x ,y );_gcf :=_feg (_aee );_ddc ._cf .Add1 (_gcf );_ddc ._gbb .Add1 (_gcf );_ddc ._bac =_aee ;};};func _eea (_agb ,_bfa ,_dc ,_dd ,_cd ,_acg ,_aca ,_ec float64 )[]_gd .Point {_ceg :=(_g .Hypot (_dc -_agb ,_dd -_bfa )+_g .Hypot (_cd -_dc ,_acg -_dd )+_g .Hypot (_aca -_cd ,_ec -_acg ));_ede :=int (_ceg +0.5);if _ede < 4{_ede =4;};_ad :=float64 (_ede )-1;_fda :=make ([]_gd .Point ,_ede );for _gea :=0;_gea < _ede ;_gea ++{_gf :=float64 (_gea )/_ad ;_bbd ,_dg :=_fbf (_agb ,_bfa ,_dc ,_dd ,_cd ,_acg ,_aca ,_ec ,_gf );_fda [_gea ]=_gd .NewPoint (_bbd ,_dg );};return _fda ;};func (_bbdd *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_bbdd ._gdb {_bbdd .MoveTo (x1 ,y1 );};x1 ,y1 =_bbdd .Transform (x1 ,y1 );x2 ,y2 =_bbdd .Transform (x2 ,y2 );_eda :=_gd .NewPoint (x1 ,y1 );_gbfd :=_gd .NewPoint (x2 ,y2 );_bdg :=_feg (_eda );_gbd :=_feg (_gbfd );_bbdd ._cf .Add2 (_bdg ,_gbd );_bbdd ._gbb .Add2 (_bdg ,_gbd );_bbdd ._bac =_gbfd ;};func (_gdbc *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_ebd ,_dcda ,_bdgb ,_eca :=x ,x +r ,x +w -r ,x +w ;_fee ,_bca ,_ccf ,_fgd :=y ,y +r ,y +h -r ,y +h ;_gdbc .NewSubPath ();_gdbc .MoveTo (_dcda ,_fee );_gdbc .LineTo (_bdgb ,_fee );_gdbc .DrawArc (_bdgb ,_bca ,r ,_cdf (270),_cdf (360));_gdbc .LineTo (_eca ,_ccf );_gdbc .DrawArc (_bdgb ,_ccf ,r ,_cdf (0),_cdf (90));_gdbc .LineTo (_dcda ,_fgd );_gdbc .DrawArc (_dcda ,_ccf ,r ,_cdf (90),_cdf (180));_gdbc .LineTo (_ebd ,_bca );_gdbc .DrawArc (_dcda ,_bca ,r ,_cdf (180),_cdf (270));_gdbc .ClosePath ();};func (_cgf *Context )DrawPoint (x ,y ,r float64 ){_cgf .Push ();_cfg ,_aeee :=_cgf .Transform (x ,y );_cgf .Identity ();_cgf .DrawCircle (_cfg ,_aeee ,r );_cgf .Pop ();};func _cdf (_ebb float64 )float64 {return _ebb *_g .Pi /180};func _gebc (_dfea [][]_gd .Point ,_eaga []float64 ,_ffce float64 )[][]_gd .Point {var _eeb [][]_gd .Point ;if len (_eaga )==0{return _dfea ;};if len (_eaga )==1{_eaga =append (_eaga ,_eaga [0]);};for _ ,_dgb :=range _dfea {if len (_dgb )< 2{continue ;};_fag :=_dgb [0];_egca :=1;_fbg :=0;_fdba :=0.0;if _ffce !=0{var _gee float64 ;for _ ,_dfg :=range _eaga {_gee +=_dfg ;};_ffce =_g .Mod (_ffce ,_gee );if _ffce < 0{_ffce +=_gee ;};for _bdda ,_efd :=range _eaga {_ffce -=_efd ;if _ffce < 0{_fbg =_bdda ;_fdba =_efd +_ffce ;break ;};};};var _cbd []_gd .Point ;_cbd =append (_cbd ,_fag );for _egca < len (_dgb ){_aef :=_eaga [_fbg ];_fef :=_dgb [_egca ];_ged :=_fag .Distance (_fef );_dfc :=_aef -_fdba ;if _ged > _dfc {_bed :=_dfc /_ged ;_gadeg :=_fag .Interpolate (_fef ,_bed );_cbd =append (_cbd ,_gadeg );if _fbg %2==0&&len (_cbd )> 1{_eeb =append (_eeb ,_cbd );};_cbd =nil ;_cbd =append (_cbd ,_gadeg );_fdba =0;_fag =_gadeg ;_fbg =(_fbg +1)%len (_eaga );}else {_cbd =append (_cbd ,_fef );_fag =_fef ;_fdba +=_ged ;_egca ++;};};if _fbg %2==0&&len (_cbd )> 1{_eeb =append (_eeb ,_cbd );};};return _eeb ;};func _dff (_cgfb ,_dae ,_ceaf ,_ddeb ,_adf ,_gdda float64 )float64 {return _cgfb *_ddeb +_dae *_adf +_ceaf *_gdda ;};func (_fbbf *Context )Pop (){_bfc :=*_fbbf ;_fdag :=_fbbf ._eg ;_efc ,_fdag :=_fdag [len (_fdag )-1],_fdag [:len (_fdag )-1];*_fbbf =*_efc ;_fbbf ._cf =_bfc ._cf ;_fbbf ._gbb =_bfc ._gbb ;_fbbf ._cab =_bfc ._cab ;_fbbf ._bac =_bfc ._bac ;_fbbf ._gdb =_bfc ._gdb ;_fbbf ._fde =_bfc ._fde ;};func (_abd *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_abd ._gdb {_abd .MoveTo (x1 ,y1 );};_abcf ,_bfbg :=_abd ._bac .X ,_abd ._bac .Y ;x1 ,y1 =_abd .Transform (x1 ,y1 );x2 ,y2 =_abd .Transform (x2 ,y2 );x3 ,y3 =_abd .Transform (x3 ,y3 );_bab :=_eea (_abcf ,_bfbg ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_bae :=_feg (_abd ._bac );for _ ,_fffe :=range _bab [1:]{_cdd :=_feg (_fffe );if _cdd ==_bae {continue ;};_bae =_cdd ;_abd ._cf .Add1 (_cdd );_abd ._gbb .Add1 (_cdd );_abd ._bac =_fffe ;};};func (_gdd *Context )ClosePath (){if _gdd ._gdb {_ece :=_feg (_gdd ._cab );_gdd ._cf .Add1 (_ece );_gdd ._gbb .Add1 (_ece );_gdd ._bac =_gdd ._cab ;};};type solidPattern struct{_cebb _ee .Color };func (_fbab *Context )drawString (_gbfa *_fd .RGBA ,_cge string ,_abef ,_bafg float64 ){_bdgbg :=&_ab .Drawer {Dst :_gbfa ,Src :_fd .NewUniform (_fbab ._ddg ),Face :_fbab ._fde .Tf .Face ,Dot :_feg (_gd .NewPoint (_abef ,_bafg ))};_bcgg :=rune (-1);for _ ,_bgga :=range _cge {if _bcgg >=0{_bdgbg .Dot .X +=_bdgbg .Face .Kern (_bcgg ,_bgga );};_cca ,_afc ,_fge ,_edec ,_dec :=_bdgbg .Face .Glyph (_bdgbg .Dot ,_bgga );if !_dec {continue ;};_egd :=_cca .Sub (_cca .Min );_gfea :=_a .BiLinear ;_gbgf :=_fbab ._bef .Clone ();_gbgf .Translate (float64 (_cca .Min .X ),float64 (_cca .Min .Y ));_gfc :=_bc .Aff3 {_gbgf [0],_gbgf [3],_gbgf [6],_gbgf [1],_gbgf [4],_gbgf [7]};_gfea .Transform (_bdgbg .Dst ,_gfc ,_bdgbg .Src ,_egd ,_a .Over ,&_a .Options {SrcMask :_afc ,SrcMaskP :_fge });_bdgbg .Dot .X +=_edec ;_bcgg =_bgga ;};};type linearGradient struct{_ege ,_deag ,_beb ,_eee float64 ;_fgcf stops ;};func (_geb *Context )NewSubPath (){if _geb ._gdb {_geb ._gbb .Add1 (_feg (_geb ._cab ));};_geb ._gdb =false ;};type repeatOp int ;func (_abde *Context )RotateAbout (angle ,x ,y float64 ){_abde .Translate (x ,y );_abde .Rotate (angle );_abde .Translate (-x ,-y );};type Context struct{_gaa int ;_ea int ;_aae *_gg .Rasterizer ;_fbe *_fd .RGBA ;_eaa *_fd .Alpha ;_ddg _ee .Color ;_bfba _ff .Pattern ;_bfd _ff .Pattern ;_cf _gg .Path ;_gbb _gg .Path ;_cab _gd .Point ;_bac _gd .Point ;_gdb bool ;_dcc []float64 ;_gdgd float64 ;_cfe float64 ;_bd _ff .LineCap ;_abc _ff .LineJoin ;_gbg _ff .FillRule ;_bef _gd .Matrix ;_fde *_ff .TextState ;_eg []*Context ;};func (_ffbf *Context )DrawString (s string ,x ,y float64 ){_ffbf .DrawStringAnchored (s ,x ,y ,0,0)};func (_cee *Context )ResetClip (){_cee ._eaa =nil };func (_cced *Context )stroke (_bacd _gg .Painter ){_fga :=_cced ._cf ;if len (_cced ._dcc )> 0{_fga =_cadg (_fga ,_cced ._dcc ,_cced ._gdgd );}else {_fga =_agge (_cbac (_fga ));};_ffa :=_cced ._aae ;_ffa .UseNonZeroWinding =true ;_ffa .Clear ();_ffa .AddStroke (_fga ,_bdgc (_cced ._cfe ),_cced .capper (),_cced .joiner ());_ffa .Rasterize (_bacd );};type stop struct{_ggdc float64 ;_gef _ee .Color ;};func (_fcd *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _cae =16;for _afe :=0;_afe < _cae ;_afe ++{_ecee :=float64 (_afe +0)/_cae ;_cdad :=float64 (_afe +1)/_cae ;_cfd :=angle1 +(angle2 -angle1 )*_ecee ;_dde :=angle1 +(angle2 -angle1 )*_cdad ;_cebg :=x +rx *_g .Cos (_cfd );_cfc :=y +ry *_g .Sin (_cfd );_agbe :=x +rx *_g .Cos ((_cfd +_dde )/2);_fgdc :=y +ry *_g .Sin ((_cfd +_dde )/2);_cec :=x +rx *_g .Cos (_dde );_gaf :=y +ry *_g .Sin (_dde );_cdc :=2*_agbe -_cebg /2-_cec /2;_fce :=2*_fgdc -_cfc /2-_gaf /2;if _afe ==0{if _fcd ._gdb {_fcd .LineTo (_cebg ,_cfc );}else {_fcd .MoveTo (_cebg ,_cfc );};};_fcd .QuadraticTo (_cdc ,_fce ,_cec ,_gaf );};};func (_aagf *linearGradient )ColorAt (x ,y int )_ee .Color {if len (_aagf ._fgcf )==0{return _ee .Transparent ;};_fed ,_bdf :=float64 (x ),float64 (y );_fgea ,_caed ,_geaf ,_edc :=_aagf ._ege ,_aagf ._deag ,_aagf ._beb ,_aagf ._eee ;_gddd ,_abdc :=_geaf -_fgea ,_edc -_caed ;if _abdc ==0&&_gddd !=0{return _cegf ((_fed -_fgea )/_gddd ,_aagf ._fgcf );};if _gddd ==0&&_abdc !=0{return _cegf ((_bdf -_caed )/_abdc ,_aagf ._fgcf );};_ecb :=_gddd *(_fed -_fgea )+_abdc *(_bdf -_caed );if _ecb < 0{return _aagf ._fgcf [0]._gef ;};_egec :=_g .Hypot (_gddd ,_abdc );_aad :=((_fed -_fgea )*-_abdc +(_bdf -_caed )*_gddd )/(_egec *_egec );_cbc ,_ecf :=_fgea +_aad *-_abdc ,_caed +_aad *_gddd ;_cac :=_g .Hypot (_fed -_cbc ,_bdf -_ecf )/_egec ;return _cegf (_cac ,_aagf ._fgcf );};func _fcaa (_ffc ,_dgaa uint32 ,_afg float64 )uint8 {return uint8 (int32 (float64 (_ffc )*(1.0-_afg )+float64 (_dgaa )*_afg )>>8);};func (_bafd *Context )Rotate (angle float64 ){_bafd ._bef .Rotate (angle )};func (_agba *Context )Push (){_gdge :=*_agba ;_agba ._eg =append (_agba ._eg ,&_gdge )};func (_dcb *Context )Translate (x ,y float64 ){_dcb ._bef .Translate (x ,y )};func (_gbbg stops )Len ()int {return len (_gbbg )};func (_egc *Context )DrawCircle (x ,y ,r float64 ){_egc .NewSubPath ();_egc .DrawEllipticalArc (x ,y ,r ,r ,0,2*_g .Pi );_egc .ClosePath ();};func _feg (_gegd _gd .Point )_ffb .Point26_6 {return _ffb .Point26_6 {X :_bdgc (_gegd .X ),Y :_bdgc (_gegd .Y )};};func NewContext (width ,height int )*Context {return NewContextForRGBA (_fd .NewRGBA (_fd .Rect (0,0,width ,height )));};func (_ccb *Context )DrawStringAnchored (s string ,x ,y ,ax ,ay float64 ){_dac ,_eege :=_ccb .MeasureString (s );x -=ax *_dac ;y +=ay *_eege ;if _ccb ._eaa ==nil {_ccb .drawString (_ccb ._fbe ,s ,x ,y );}else {_fac :=_fd .NewRGBA (_fd .Rect (0,0,_ccb ._gaa ,_ccb ._ea ));_ccb .drawString (_fac ,s ,x ,y );_a .DrawMask (_ccb ._fbe ,_ccb ._fbe .Bounds (),_fac ,_fd .ZP ,_ccb ._eaa ,_fd .ZP ,_a .Over );};};func (_fgf *Context )ClearPath (){_fgf ._cf .Clear ();_fgf ._gbb .Clear ();_fgf ._gdb =false };func (_eec *Context )Fill (){_eec .FillPreserve ();_eec .ClearPath ()};func (_gdgf *Context )SetStrokeStyle (pattern _ff .Pattern ){_gdgf ._bfd =pattern };func _fbga (_ceeg string )(_aacbd ,_bfg ,_efcf ,_ecefc int ){_ceeg =_c .TrimPrefix (_ceeg ,"\u0023");_ecefc =255;if len (_ceeg )==3{_faf :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_b .Sscanf (_ceeg ,_faf ,&_aacbd ,&_bfg ,&_efcf );_aacbd |=_aacbd <<4;_bfg |=_bfg <<4;_efcf |=_efcf <<4;};if len (_ceeg )==6{_gbe :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_b .Sscanf (_ceeg ,_gbe ,&_aacbd ,&_bfg ,&_efcf );};if len (_ceeg )==8{_bgbcg :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_b .Sscanf (_ceeg ,_bgbcg ,&_aacbd ,&_bfg ,&_efcf ,&_ecefc );};return ;};func (_baf *Context )fill (_babd _gg .Painter ){_cegb :=_baf ._gbb ;if _baf ._gdb {_cegb =make (_gg .Path ,len (_baf ._gbb ));copy (_cegb ,_baf ._gbb );_cegb .Add1 (_feg (_baf ._cab ));};_bcd :=_baf ._aae ;_bcd .UseNonZeroWinding =_baf ._gbg ==_ff .FillRuleWinding ;_bcd .Clear ();_bcd .AddPath (_cegb );_bcd .Rasterize (_babd );};func (_acf *Context )setFillAndStrokeColor (_fbfe _ee .Color ){_acf ._ddg =_fbfe ;_acf ._bfba =_cacd (_fbfe );_acf ._bfd =_cacd (_fbfe );};func (_abb *Context )SetFillRule (fillRule _ff .FillRule ){_abb ._gbg =fillRule };func (_bdgd *Context )joiner ()_gg .Joiner {switch _bdgd ._abc {case _ff .LineJoinBevel :return _gg .BevelJoiner ;case _ff .LineJoinRound :return _gg .RoundJoiner ;};return nil ;};type stops []stop ;func _cadg (_bgd _gg .Path ,_fcb []float64 ,_aba float64 )_gg .Path {return _agge (_gebc (_cbac (_bgd ),_fcb ,_aba ));};func (_dbg *Context )ShearAbout (sx ,sy ,x ,y float64 ){_dbg .Translate (x ,y );_dbg .Shear (sx ,sy );_dbg .Translate (-x ,-y );};func (_cda *Context )MoveTo (x ,y float64 ){if _cda ._gdb {_cda ._gbb .Add1 (_feg (_cda ._cab ));};x ,y =_cda .Transform (x ,y );_cbb :=_gd .NewPoint (x ,y );_ccc :=_feg (_cbb );_cda ._cf .Start (_ccc );_cda ._gbb .Start (_ccc );_cda ._cab =_cbb ;_cda ._bac =_cbb ;_cda ._gdb =true ;};func _fegc (_bbdg _ffb .Int26_6 )float64 {const _ade ,_gbcc =6,1<<6-1;if _bbdg >=0{return float64 (_bbdg >>_ade )+float64 (_bbdg &_gbcc )/64;};_bbdg =-_bbdg ;if _bbdg >=0{return -(float64 (_bbdg >>_ade )+float64 (_bbdg &_gbcc )/64);};return 0;};func (_df *Context )SetHexColor (x string ){_gbc ,_fdb ,_acac ,_agbg :=_fbga (x );_df .SetRGBA255 (_gbc ,_fdb ,_acac ,_agbg );};func (_adg *Context )Clip (){_adg .ClipPreserve ();_adg .ClearPath ()};func (_aeb *Context )Transform (x ,y float64 )(_ceac ,_daf float64 ){return _aeb ._bef .Transform (x ,y )};func (_ffae *Context )Scale (x ,y float64 ){_ffae ._bef .Scale (x ,y )};func _bgc (_gcfd _fd .Image ,_ggbf repeatOp )_ff .Pattern {return &surfacePattern {_abda :_gcfd ,_cfgg :_ggbf };};func (_fgce *radialGradient )ColorAt (x ,y int )_ee .Color {if len (_fgce ._ebc )==0{return _ee .Transparent ;};_bdc ,_ggb :=float64 (x )+0.5-_fgce ._aebd ._fdg ,float64 (y )+0.5-_fgce ._aebd ._caf ;_cef :=_dff (_bdc ,_ggb ,_fgce ._aebd ._efe ,_fgce ._fedc ._fdg ,_fgce ._fedc ._caf ,_fgce ._fedc ._efe );_adfa :=_dff (_bdc ,_ggb ,-_fgce ._aebd ._efe ,_bdc ,_ggb ,_fgce ._aebd ._efe );if _fgce ._bba ==0{if _cef ==0{return _ee .Transparent ;};_cbag :=0.5*_adfa /_cef ;if _cbag *_fgce ._fedc ._efe >=_fgce ._gfge {return _cegf (_cbag ,_fgce ._ebc );};return _ee .Transparent ;};_efb :=_dff (_cef ,_fgce ._bba ,0,_cef ,-_adfa ,0);if _efb >=0{_cafe :=_g .Sqrt (_efb );_eag :=(_cef +_cafe )*_fgce ._abdce ;_ddea :=(_cef -_cafe )*_fgce ._abdce ;if _eag *_fgce ._fedc ._efe >=_fgce ._gfge {return _cegf (_eag ,_fgce ._ebc );}else if _ddea *_fgce ._fedc ._efe >=_fgce ._gfge {return _cegf (_ddea ,_fgce ._ebc );};};return _ee .Transparent ;};func (_cbae *Context )drawRegularPolygon (_dfa int ,_ggf ,_aac ,_cece ,_adb float64 ){_fcg :=2*_g .Pi /float64 (_dfa );_adb -=_g .Pi /2;if _dfa %2==0{_adb +=_fcg /2;};_cbae .NewSubPath ();for _ddef :=0;_ddef < _dfa ;_ddef ++{_dag :=_adb +_fcg *float64 (_ddef );_cbae .LineTo (_ggf +_cece *_g .Cos (_dag ),_aac +_cece *_g .Sin (_dag ));};_cbae .ClosePath ();};func _cbac (_ccg _gg .Path )[][]_gd .Point {var _edf [][]_gd .Point ;var _bebc []_gd .Point ;var _geff ,_aeefg float64 ;for _bccb :=0;_bccb < len (_ccg );{switch _ccg [_bccb ]{case 0:if len (_bebc )> 0{_edf =append (_edf ,_bebc );_bebc =nil ;};_aede :=_fegc (_ccg [_bccb +1]);_eff :=_fegc (_ccg [_bccb +2]);_bebc =append (_bebc ,_gd .NewPoint (_aede ,_eff ));_geff ,_aeefg =_aede ,_eff ;_bccb +=4;case 1:_edg :=_fegc (_ccg [_bccb +1]);_eggf :=_fegc (_ccg [_bccb +2]);_bebc =append (_bebc ,_gd .NewPoint (_edg ,_eggf ));_geff ,_aeefg =_edg ,_eggf ;_bccb +=4;case 2:_bfff :=_fegc (_ccg [_bccb +1]);_efff :=_fegc (_ccg [_bccb +2]);_agd :=_fegc (_ccg [_bccb +3]);_daa :=_fegc (_ccg [_bccb +4]);_dffc :=_ga (_geff ,_aeefg ,_bfff ,_efff ,_agd ,_daa );_bebc =append (_bebc ,_dffc ...);_geff ,_aeefg =_agd ,_daa ;_bccb +=6;case 3:_fbfa :=_fegc (_ccg [_bccb +1]);_fcf :=_fegc (_ccg [_bccb +2]);_aebda :=_fegc (_ccg [_bccb +3]);_add :=_fegc (_ccg [_bccb +4]);_dgdb :=_fegc (_ccg [_bccb +5]);_bfdd :=_fegc (_ccg [_bccb +6]);_fea :=_eea (_geff ,_aeefg ,_fbfa ,_fcf ,_aebda ,_add ,_dgdb ,_bfdd );_bebc =append (_bebc ,_fea ...);_geff ,_aeefg =_dgdb ,_bfdd ;_bccb +=8;default:_ge .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_ccg );return _edf ;};};if len (_bebc )> 0{_edf =append (_edf ,_bebc );};return _edf ;};func _gbab (_dcaa *_fd .RGBA ,_dba *_fd .Alpha ,_eeed _ff .Pattern )*patternPainter {return &patternPainter {_dcaa ,_dba ,_eeed };};func (_dca *Context )SetMask (mask *_fd .Alpha )error {if mask .Bounds ().Size ()!=_dca ._fbe .Bounds ().Size (){return _ba .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");};_dca ._eaa =mask ;return nil ;};func _ggeg (_dgf ,_fbd ,_dgd ,_dga ,_dgac ,_ecad float64 )_ff .Gradient {_ead :=circle {_dgf ,_fbd ,_dgd };_bcff :=circle {_dga ,_dgac ,_ecad };_gdc :=circle {_dga -_dgf ,_dgac -_fbd ,_ecad -_dgd };_eccf :=_dff (_gdc ._fdg ,_gdc ._caf ,-_gdc ._efe ,_gdc ._fdg ,_gdc ._caf ,_gdc ._efe );var _ddeab float64 ;if _eccf !=0{_ddeab =1.0/_eccf ;};_eeec :=-_ead ._efe ;_gce :=&radialGradient {_aebd :_ead ,_dad :_bcff ,_fedc :_gdc ,_bba :_eccf ,_abdce :_ddeab ,_gfge :_eeec };return _gce ;};func (_eeg *Context )Width ()int {return _eeg ._gaa };func (_aacb *patternPainter )Paint (ss []_gg .Span ,done bool ){_abg :=_aacb ._fab .Bounds ();for _ ,_gdcgg :=range ss {if _gdcgg .Y < _abg .Min .Y {continue ;};if _gdcgg .Y >=_abg .Max .Y {return ;};if _gdcgg .X0 < _abg .Min .X {_gdcgg .X0 =_abg .Min .X ;};if _gdcgg .X1 > _abg .Max .X {_gdcgg .X1 =_abg .Max .X ;};if _gdcgg .X0 >=_gdcgg .X1 {continue ;};const _ebda =1<<16-1;_eggb :=_gdcgg .Y -_aacb ._fab .Rect .Min .Y ;_eebd :=_gdcgg .X0 -_aacb ._fab .Rect .Min .X ;_acba :=(_gdcgg .Y -_aacb ._fab .Rect .Min .Y )*_aacb ._fab .Stride +(_gdcgg .X0 -_aacb ._fab .Rect .Min .X )*4;_gdef :=_acba +(_gdcgg .X1 -_gdcgg .X0 )*4;for _ebgc ,_aff :=_acba ,_eebd ;_ebgc < _gdef ;_ebgc ,_aff =_ebgc +4,_aff +1{_ada :=_gdcgg .Alpha ;if _aacb ._bdgg !=nil {_ada =_ada *uint32 (_aacb ._bdgg .AlphaAt (_aff ,_eggb ).A )/255;if _ada ==0{continue ;};};_gacg :=_aacb ._fagg .ColorAt (_aff ,_eggb );_facc ,_ccd ,_adgg ,_fcab :=_gacg .RGBA ();_effc :=uint32 (_aacb ._fab .Pix [_ebgc +0]);_fcgg :=uint32 (_aacb ._fab .Pix [_ebgc +1]);_gafb :=uint32 (_aacb ._fab .Pix [_ebgc +2]);_acc :=uint32 (_aacb ._fab .Pix [_ebgc +3]);_gcg :=(_ebda -(_fcab *_ada /_ebda ))*0x101;_aacb ._fab .Pix [_ebgc +0]=uint8 ((_effc *_gcg +_facc *_ada )/_ebda >>8);_aacb ._fab .Pix [_ebgc +1]=uint8 ((_fcgg *_gcg +_ccd *_ada )/_ebda >>8);_aacb ._fab .Pix [_ebgc +2]=uint8 ((_gafb *_gcg +_adgg *_ada )/_ebda >>8);_aacb ._fab .Pix [_ebgc +3]=uint8 ((_acc *_gcg +_fcab *_ada )/_ebda >>8);};};};func (_aag *Context )DrawImage (im _fd .Image ,x ,y int ){_aag .DrawImageAnchored (im ,x ,y ,0,0)};func (_ffg *surfacePattern )ColorAt (x ,y int )_ee .Color {_ebg :=_ffg ._abda .Bounds ();switch _ffg ._cfgg {case _ddd :if y >=_ebg .Dy (){return _ee .Transparent ;};case _ffbfd :if x >=_ebg .Dx (){return _ee .Transparent ;};case _caeg :if x >=_ebg .Dx ()||y >=_ebg .Dy (){return _ee .Transparent ;};};x =x %_ebg .Dx ()+_ebg .Min .X ;y =y %_ebg .Dy ()+_ebg .Min .Y ;return _ffg ._abda .At (x ,y );};func (_da *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_gbf :=_ee .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_da ._bfd =_cacd (_gbf );};func (_fa *Context )capper ()_gg .Capper {switch _fa ._bd {case _ff .LineCapButt :return _gg .ButtCapper ;case _ff .LineCapRound :return _gg .RoundCapper ;case _ff .LineCapSquare :return _gg .SquareCapper ;};return nil ;};func (_cb *Context )SetFillStyle (pattern _ff .Pattern ){if _afbe ,_edd :=pattern .(*solidPattern );_edd {_cb ._ddg =_afbe ._cebb ;};_cb ._bfba =pattern ;};func _cacd (_agda _ee .Color )_ff .Pattern {return &solidPattern {_cebb :_agda }};func (_bbb *Context )SetDashOffset (offset float64 ){_bbb ._gdgd =offset };func (_cba *Context )SetFillRGBA (r ,g ,b ,a float64 ){_eef :=_ee .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_cba ._ddg =_eef ;_cba ._bfba =_cacd (_eef );};func _ga (_fb ,_bf ,_de ,_cga ,_baa ,_db float64 )[]_gd .Point {_bg :=(_g .Hypot (_de -_fb ,_cga -_bf )+_g .Hypot (_baa -_de ,_db -_cga ));_ac :=int (_bg +0.5);if _ac < 4{_ac =4;};_gae :=float64 (_ac )-1;_gde :=make ([]_gd .Point ,_ac );for _gec :=0;_gec < _ac ;_gec ++{_ed :=float64 (_gec )/_gae ;_abf ,_ce :=_gc (_fb ,_bf ,_de ,_cga ,_baa ,_db ,_ed );_gde [_gec ]=_gd .NewPoint (_abf ,_ce );};return _gde ;};func (_bec *Context )SetPixel (x ,y int ){_bec ._fbe .Set (x ,y ,_bec ._ddg )};type patternPainter struct{_fab *_fd .RGBA ;_bdgg *_fd .Alpha ;_fagg _ff .Pattern ;};func (_bgb *Context )DrawRectangle (x ,y ,w ,h float64 ){_bgb .NewSubPath ();_bgb .MoveTo (x ,y );_bgb .LineTo (x +w ,y );_bgb .LineTo (x +w ,y +h );_bgb .LineTo (x ,y +h );_bgb .ClosePath ();};func (_gddg *Context )Matrix ()_gd .Matrix {return _gddg ._bef };func _cgfbe (_dace ,_fbdg _ee .Color ,_bgf float64 )_ee .Color {_deb ,_eaaf ,_abbd ,_deae :=_dace .RGBA ();_gba ,_bff ,_acaba ,_gade :=_fbdg .RGBA ();return _ee .RGBA {_fcaa (_deb ,_gba ,_bgf ),_fcaa (_eaaf ,_bff ,_bgf ),_fcaa (_abbd ,_acaba ,_bgf ),_fcaa (_deae ,_gade ,_bgf )};};func (_eab *Context )MeasureString (s string )(_age ,_ggfb float64 ){_feed :=&_ab .Drawer {Face :_eab ._fde .Tf .Face };_dfe :=_feed .MeasureString (s );return float64 (_dfe >>6),_eab ._fde .Tf .Size ;};func (_gag *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_gag .Translate (x ,y );_gag .Scale (sx ,sy );_gag .Translate (-x ,-y );};func (_ggd *Context )Identity (){_ggd ._bef =_gd .IdentityMatrix ()};func (_gac *Context )Image ()_fd .Image {return _gac ._fbe };func _bdgc (_beff float64 )_ffb .Int26_6 {return _ffb .Int26_6 (_beff *64)};func (_cccc *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_cccc .NewSubPath ();_cccc .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_g .Pi );_cccc .ClosePath ();};func (_fbbc *Context )SetLineJoin (lineJoin _ff .LineJoin ){_fbbc ._abc =lineJoin };func NewContextForRGBA (im *_fd .RGBA )*Context {_acab :=im .Bounds ().Size ().X ;_bce :=im .Bounds ().Size ().Y ;return &Context {_gaa :_acab ,_ea :_bce ,_aae :_gg .NewRasterizer (_acab ,_bce ),_fbe :im ,_ddg :_ee .Transparent ,_bfba :_dgc ,_bfd :_gfe ,_cfe :1,_gbg :_ff .FillRuleWinding ,_bef :_gd .IdentityMatrix (),_fde :_ff .NewTextState ()};};func (_caa *Context )StrokePreserve (){var _bcg _gg .Painter ;if _caa ._eaa ==nil {if _cdda ,_bde :=_caa ._bfd .(*solidPattern );_bde {_edaa :=_gg .NewRGBAPainter (_caa ._fbe );_edaa .SetColor (_cdda ._cebb );_bcg =_edaa ;};};if _bcg ==nil {_bcg =_gbab (_caa ._fbe ,_caa ._eaa ,_caa ._bfd );};_caa .stroke (_bcg );};func (_egb *Context )SetMatrix (m _gd .Matrix ){_egb ._bef =m };func (_gfa *Context )Height ()int {return _gfa ._ea };func (_ecef *Context )TextState ()*_ff .TextState {return _ecef ._fde };func (_fad stops )Less (i ,j int )bool {return _fad [i ]._ggdc < _fad [j ]._ggdc };func (_gbce *radialGradient )AddColorStop (offset float64 ,color _ee .Color ){_gbce ._ebc =append (_gbce ._ebc ,stop {_ggdc :offset ,_gef :color });_e .Sort (_gbce ._ebc );};func (_fgdb *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_fgdb .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func _afd (_acae _fd .Image )*_fd .RGBA {_bgbe :=_acae .Bounds ();_afec :=_fd .NewRGBA (_bgbe );_cg .Draw (_afec ,_bgbe ,_acae ,_bgbe .Min ,_cg .Src );return _afec ;};func (_befa *Context )AsMask ()*_fd .Alpha {_cea :=_fd .NewAlpha (_befa ._fbe .Bounds ());_a .Draw (_cea ,_befa ._fbe .Bounds (),_befa ._fbe ,_fd .ZP ,_a .Src );return _cea ;};func (_bad *Context )Clear (){_abcd :=_fd .NewUniform (_bad ._ddg );_a .Draw (_bad ._fbe ,_bad ._fbe .Bounds (),_abcd ,_fd .ZP ,_a .Src );};func (_gcb *linearGradient )AddColorStop (offset float64 ,color _ee .Color ){_gcb ._fgcf =append (_gcb ._fgcf ,stop {_ggdc :offset ,_gef :color });_e .Sort (_gcb ._fgcf );};func (_acd *Context )SetLineCap (lineCap _ff .LineCap ){_acd ._bd =lineCap };func (_ebf stops )Swap (i ,j int ){_ebf [i ],_ebf [j ]=_ebf [j ],_ebf [i ]};func (_bea *Context )SetColor (c _ee .Color ){_bea .setFillAndStrokeColor (c )};var (_dgc =_cacd (_ee .White );_gfe =_cacd (_ee .Black ););func (_agg *Context )InvertMask (){if _agg ._eaa ==nil {_agg ._eaa =_fd .NewAlpha (_agg ._fbe .Bounds ());}else {for _gge ,_gfb :=range _agg ._eaa .Pix {_agg ._eaa .Pix [_gge ]=255-_gfb ;};};};func (_fca *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_fca .MoveTo (x1 ,y1 );_fca .LineTo (x2 ,y2 )};