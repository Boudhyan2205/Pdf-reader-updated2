//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_be "bytes";_e "errors";_f "github.com/unidoc/unipdf/v3/common";_a "github.com/unidoc/unipdf/v3/contentstream";_ff "github.com/unidoc/unipdf/v3/contentstream/draw";_aa "github.com/unidoc/unipdf/v3/core";_d "github.com/unidoc/unipdf/v3/internal/textencoding";
_eg "github.com/unidoc/unipdf/v3/model";_ag "image";_fb "math";_ba "strings";_bd "unicode";);

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};

// CircleAnnotationDef defines a circle annotation or ellipse at position (X, Y) and Width and Height.
// The annotation has various style parameters including Fill and Border options and Opacity.
type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_eg .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_eg .PdfColorDeviceRGB ;Opacity float64 ;};func _ggfd (_bfg *_eg .PdfAnnotationWidget ,_efb *_eg .PdfFieldText ,_acc *_eg .PdfPageResources ,_eed AppearanceStyle )(*_aa .PdfObjectDictionary ,error ){_dfd :=_eg .NewPdfPageResources ();
_abf ,_gffc :=_aa .GetArray (_bfg .Rect );if !_gffc {return nil ,_e .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_cad ,_aadb :=_eg .NewPdfRectangle (*_abf );if _aadb !=nil {return nil ,_aadb ;};_gcb ,_eab :=_cad .Width (),_cad .Height ();
_bee ,_bbe :=_gcb ,_eab ;_geag ,_fgf :=_aa .GetDict (_bfg .MK );if _fgf {_fceee ,_ :=_aa .GetDict (_bfg .BS );_ced :=_eed .applyAppearanceCharacteristics (_geag ,_fceee ,nil );if _ced !=nil {return nil ,_ced ;};};_cacf ,_fgf :=_aa .GetIntVal (_efb .MaxLen );
if !_fgf {return nil ,_e .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if _cacf <=0{return nil ,_e .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gfe :=_gcb /float64 (_cacf );
_cdce ,_aadb :=_a .NewContentStreamParser (_cedf (_efb .PdfField )).Parse ();if _aadb !=nil {return nil ,_aadb ;};_accb :=_a .NewContentCreator ();if _eed .BorderSize > 0{_gbcb (_accb ,_eed ,_gcb ,_eab );};if _eed .DrawAlignmentReticle {_cbab :=_eed ;_cbab .BorderSize =0.2;
_dgb (_accb ,_cbab ,_gcb ,_eab );};_accb .Add_BMC ("\u0054\u0078");_accb .Add_q ();_ ,_eab =_eed .applyRotation (_geag ,_gcb ,_eab ,_accb );_accb .Add_BT ();_gcc ,_acg ,_aadb :=_eed .processDA (_efb .PdfField ,_cdce ,_acc ,_dfd ,_accb );if _aadb !=nil {return nil ,_aadb ;
};_cgf :=_gcc .Font ;_eb :=_aa .MakeName (_gcc .Name );_bab :=_gcc .Size ;_acd :=_bab ==0;if _acd &&_acg {_bab =_eab *_eed .AutoFontSizeFraction ;};_bbed :=_cgf .Encoder ();if _bbed ==nil {_f .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_bbed =_d .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _gdd string ;if _cefg ,_cfb :=_aa .GetString (_efb .V );_cfb {_gdd =_cefg .Decoded ();};_accb .Add_Tf (*_eb ,_bab );var _agc float64 ;for _ ,_eedf :=range _gdd {_gdff ,_agbf :=_cgf .GetRuneMetrics (_eedf );
if !_agbf {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_eedf );
continue ;};_bbeg :=_gdff .Wy ;if int (_bbeg )<=0{_bbeg =_gdff .Wx ;};if _bbeg > _agc {_agc =_bbeg ;};};if int (_agc )==0{_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");
_agc =1000;};_ead ,_aadb :=_cgf .GetFontDescriptor ();if _aadb !=nil {_f .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};
var _fcc float64 ;if _ead !=nil {_fcc ,_aadb =_ead .GetCapHeight ();if _aadb !=nil {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_aadb );
};};if int (_fcc )<=0{_f .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_fcc =1000.0;};_bcdd :=_fcc /1000.0*_bab ;_adc :=0.0;_dfcg :=1.0*_bab *(_agc /1000.0);{_aeb :=_dfcg ;if _acd &&_adc +_aeb > _eab {_bab =0.95*(_eab -_adc );_bcdd =_fcc /1000.0*_bab ;};if _eab > _bcdd {_adc =(_eab -_bcdd )/2.0;};};_accb .Add_Td (0,_adc );
if _dbf ,_adb :=_aa .GetIntVal (_efb .Q );_adb {switch _dbf {case 2:if len (_gdd )< _cacf {_cde :=float64 (_cacf -len (_gdd ))*_gfe ;_accb .Add_Td (_cde ,0);};};};for _bfe ,_gbad :=range _gdd {_fca :=2.0;_afb :=string (_gbad );if _bbed !=nil {_ade ,_dfb :=_cgf .GetRuneMetrics (_gbad );
if !_dfb {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_gbad );
continue ;};_afb =string (_bbed .Encode (_afb ));_daf :=_bab *_ade .Wx /1000.0;_ffaa :=(_gfe -_daf )/2;_fca =_ffaa ;};_accb .Add_Td (_fca ,0);_accb .Add_Tj (*_aa .MakeString (_afb ));if _bfe !=len (_gdd )-1{_accb .Add_Td (_gfe -_fca ,0);};};_accb .Add_ET ();
_accb .Add_Q ();_accb .Add_EMC ();_cbd :=_eg .NewXObjectForm ();_cbd .Resources =_dfd ;_cbd .BBox =_aa .MakeArrayFromFloats ([]float64 {0,0,_bee ,_bbe });_cbd .SetContentStream (_accb .Bytes (),_daad ());_bgb :=_aa .MakeDict ();_bgb .Set ("\u004e",_cbd .ToPdfObject ());
return _bgb ,nil ;};func _gade (_dfe *_eg .PdfAnnotationWidget ,_eca *_eg .PdfFieldButton ,_dfdb *_eg .PdfPageResources ,_gec AppearanceStyle )(*_aa .PdfObjectDictionary ,error ){_gae ,_ffe :=_aa .GetArray (_dfe .Rect );if !_ffe {return nil ,_e .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_fbb ,_bec :=_eg .NewPdfRectangle (*_gae );if _bec !=nil {return nil ,_bec ;};_gdg ,_gbb :=_fbb .Width (),_fbb .Height ();_dab ,_egc :=_gdg ,_gbb ;_f .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_dfe .BS );
_fggc ,_bec :=_eg .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _bec !=nil {return nil ,_bec ;};_dfea ,_gbcd :=_aa .GetDict (_dfe .MK );if _gbcd {_edb ,_ :=_aa .GetDict (_dfe .BS );_cceg :=_gec .applyAppearanceCharacteristics (_dfea ,_edb ,_fggc );
if _cceg !=nil {return nil ,_cceg ;};};_fefd :=_eg .NewXObjectForm ();{_efd :=_a .NewContentCreator ();if _gec .BorderSize > 0{_gbcb (_efd ,_gec ,_gdg ,_gbb );};if _gec .DrawAlignmentReticle {_bgf :=_gec ;_bgf .BorderSize =0.2;_dgb (_efd ,_bgf ,_gdg ,_gbb );
};_gdg ,_gbb =_gec .applyRotation (_dfea ,_gdg ,_gbb ,_efd );_age :=_gec .AutoFontSizeFraction *_gbb ;_acdd ,_bfbg :=_fggc .GetRuneMetrics (_gec .CheckmarkRune );if !_bfbg {return nil ,_e .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_bcg :=_fggc .Encoder ();_cdb :=_bcg .Encode (string (_gec .CheckmarkRune ));_beb :=_acdd .Wx *_age /1000.0;_bag :=705.0;_dbfe :=_bag /1000.0*_age ;_eba :=2.0;_aged :=1.0;if _beb < _gdg {_eba =(_gdg -_beb )/2.0;};if _dbfe < _gbb {_aged =(_gbb -_dbfe )/2.0;
};_efd .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_age ).Add_Td (_eba ,_aged ).Add_Tj (*_aa .MakeStringFromBytes (_cdb )).Add_ET ().Add_Q ();_fefd .Resources =_eg .NewPdfPageResources ();_fefd .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_fggc .ToPdfObject ());
_fefd .BBox =_aa .MakeArrayFromFloats ([]float64 {0,0,_dab ,_egc });_fefd .SetContentStream (_efd .Bytes (),_daad ());};_gac :=_eg .NewXObjectForm ();{_ddd :=_a .NewContentCreator ();if _gec .BorderSize > 0{_gbcb (_ddd ,_gec ,_gdg ,_gbb );};_gac .BBox =_aa .MakeArrayFromFloats ([]float64 {0,0,_dab ,_egc });
_gac .SetContentStream (_ddd .Bytes (),_daad ());};_beda :=_aa .MakeDict ();_beda .Set ("\u004f\u0066\u0066",_gac .ToPdfObject ());_beda .Set ("\u0059\u0065\u0073",_fefd .ToPdfObject ());_gfea :=_aa .MakeDict ();_gfea .Set ("\u004e",_beda );return _gfea ,nil ;
};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_gb FieldAppearance )GenerateAppearanceDict (form *_eg .PdfAcroForm ,field *_eg .PdfField ,wa *_eg .PdfAnnotationWidget )(*_aa .PdfObjectDictionary ,error ){_f .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );
_ ,_geg :=field .GetContext ().(*_eg .PdfFieldText );_dg ,_fcf :=_aa .GetDict (wa .AP );if _fcf &&_gb .OnlyIfMissing &&(!_geg ||!_gb .RegenerateTextFields ){_f .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _dg ,nil ;};if form .DR ==nil {form .DR =_eg .NewPdfPageResources ();};switch _agbd :=field .GetContext ().(type ){case *_eg .PdfFieldText :_dd :=_agbd ;switch {case _dd .Flags ().Has (_eg .FieldFlagPassword ):return nil ,nil ;case _dd .Flags ().Has (_eg .FieldFlagFileSelect ):return nil ,nil ;
case _dd .Flags ().Has (_eg .FieldFlagComb ):if _dd .MaxLen !=nil {_deb ,_cce :=_ggfd (wa ,_dd ,form .DR ,_gb .Style ());if _cce !=nil {return nil ,_cce ;};return _deb ,nil ;};};_ef ,_cda :=_da (wa ,_dd ,form .DR ,_gb .Style ());if _cda !=nil {return nil ,_cda ;
};return _ef ,nil ;case *_eg .PdfFieldButton :_cf :=_agbd ;if _cf .IsCheckbox (){_ea ,_bb :=_gade (wa ,_cf ,form .DR ,_gb .Style ());if _bb !=nil {return nil ,_bb ;};return _ea ,nil ;};_f .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_cf .GetType ());
case *_eg .PdfFieldChoice :_gc :=_agbd ;switch {case _gc .Flags ().Has (_eg .FieldFlagCombo ):_dea ,_aac :=_fefb (form ,wa ,_gc ,_gb .Style ());if _aac !=nil {return nil ,_aac ;};return _dea ,nil ;default:_f .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_gc .Flags ().String ());
};default:_f .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_agbd );};return nil ,nil ;};const (SignatureImageLeft SignatureImagePosition =iota ;
SignatureImageRight ;SignatureImageTop ;SignatureImageBottom ;);

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_eg .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _eg .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _eg .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _eg .PdfColor ;

// WatermarkImage specifies the image used as a watermark that will be rendered
// behind the signature.
WatermarkImage _ag .Image ;

// Image represents the image used for the signature appearance.
Image _ag .Image ;

// Encoder specifies the image encoder used for image signature. Defaults to flate encoder.
Encoder _aa .StreamEncoder ;

// ImagePosition specifies the image location relative to the text signature.
ImagePosition SignatureImagePosition ;};func _dgb (_dcde *_a .ContentCreator ,_faag AppearanceStyle ,_gegf ,_gge float64 ){_dcde .Add_q ().Add_re (0,0,_gegf ,_gge ).Add_re (0,_gge /2,_gegf ,_gge /2).Add_re (0,0,_gegf ,_gge ).Add_re (_gegf /2,0,_gegf /2,_gge ).Add_w (_faag .BorderSize ).SetStrokingColor (_faag .BorderColor ).SetNonStrokingColor (_faag .FillColor ).Add_B ().Add_Q ();
};func (_fgd *AppearanceStyle )applyAppearanceCharacteristics (_afbg *_aa .PdfObjectDictionary ,_dgf *_aa .PdfObjectDictionary ,_fff *_eg .PdfFont )error {if !_fgd .AllowMK {return nil ;};if CA ,_dcc :=_aa .GetString (_afbg .Get ("\u0043\u0041"));_dcc &&_fff !=nil {_dege :=CA .Bytes ();
if len (_dege )!=0{_afbd :=[]rune (_fff .Encoder ().Decode (_dege ));if len (_afbd )==1{_fgd .CheckmarkRune =_afbd [0];};};};if BC ,_ecb :=_aa .GetArray (_afbg .Get ("\u0042\u0043"));_ecb {_bgd ,_gef :=BC .ToFloat64Array ();if _gef !=nil {return _gef ;
};switch len (_bgd ){case 1:_fgd .BorderColor =_eg .NewPdfColorDeviceGray (_bgd [0]);case 3:_fgd .BorderColor =_eg .NewPdfColorDeviceRGB (_bgd [0],_bgd [1],_bgd [2]);case 4:_fgd .BorderColor =_eg .NewPdfColorDeviceCMYK (_bgd [0],_bgd [1],_bgd [2],_bgd [3]);
default:_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_bgd ));
};if _dgf !=nil {if _ebfd ,_fegb :=_aa .GetNumberAsFloat (_dgf .Get ("\u0057"));_fegb ==nil {_fgd .BorderSize =_ebfd ;};};};if BG ,_bfa :=_aa .GetArray (_afbg .Get ("\u0042\u0047"));_bfa {_adfe ,_egf :=BG .ToFloat64Array ();if _egf !=nil {return _egf ;
};switch len (_adfe ){case 1:_fgd .FillColor =_eg .NewPdfColorDeviceGray (_adfe [0]);case 3:_fgd .FillColor =_eg .NewPdfColorDeviceRGB (_adfe [0],_adfe [1],_adfe [2]);case 4:_fgd .FillColor =_eg .NewPdfColorDeviceCMYK (_adfe [0],_adfe [1],_adfe [2],_adfe [3]);
default:_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_adfe ));
};};return nil ;};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specify a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _eg .PdfColor ;FillColor _eg .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;};func _ecbc (_fffc RectangleAnnotationDef ,_bga string )([]byte ,*_eg .PdfRectangle ,*_eg .PdfRectangle ,error ){_dagf :=_ff .Rectangle {X :0,Y :0,Width :_fffc .Width ,Height :_fffc .Height ,FillEnabled :_fffc .FillEnabled ,FillColor :_fffc .FillColor ,BorderEnabled :_fffc .BorderEnabled ,BorderWidth :2*_fffc .BorderWidth ,BorderColor :_fffc .BorderColor ,Opacity :_fffc .Opacity };
_aaef ,_abcd ,_fgdf :=_dagf .Draw (_bga );if _fgdf !=nil {return nil ,nil ,nil ,_fgdf ;};_abdg :=&_eg .PdfRectangle {};_abdg .Llx =_fffc .X +_abcd .Llx ;_abdg .Lly =_fffc .Y +_abcd .Lly ;_abdg .Urx =_fffc .X +_abcd .Urx ;_abdg .Ury =_fffc .Y +_abcd .Ury ;
return _aaef ,_abcd ,_abdg ,nil ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_de FieldAppearance )Style ()AppearanceStyle {if _de ._bcf !=nil {return *_de ._bcf ;};return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_eg .NewPdfColorDeviceGray (0),FillColor :_eg .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true };
};func _cedf (_abc *_eg .PdfField )string {if _abc ==nil {return "";};_fbf ,_gfa :=_abc .GetContext ().(*_eg .PdfFieldText );if !_gfa {return _cedf (_abc .Parent );};if _fbf .DA !=nil {return _fbf .DA .Str ();};return _cedf (_fbf .Parent );};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_eg .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_eg .NewPdfColorDeviceGray (0),BorderColor :_eg .NewPdfColorDeviceGray (0),FillColor :_eg .NewPdfColorDeviceGray (1),Encoder :_aa .NewFlateEncoder (),ImagePosition :SignatureImageLeft };
};

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_eg .PdfAnnotation ,error ){_ggge :=_eg .NewPdfAnnotationLine ();_ggge .L =_aa .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_aab :=_aa .MakeName ("\u004e\u006f\u006e\u0065");
if lineDef .LineEndingStyle1 ==_ff .LineEndingStyleArrow {_aab =_aa .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_egcc :=_aa .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_ff .LineEndingStyleArrow {_egcc =_aa .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");
};_ggge .LE =_aa .MakeArray (_aab ,_egcc );if lineDef .Opacity < 1.0{_ggge .CA =_aa .MakeFloat (lineDef .Opacity );};_adee ,_dgdd ,_cdd :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_ggge .IC =_aa .MakeArrayFromFloats ([]float64 {_adee ,_dgdd ,_cdd });
_ggge .C =_aa .MakeArrayFromFloats ([]float64 {_adee ,_dgdd ,_cdd });_ebca :=_eg .NewBorderStyle ();_ebca .SetBorderWidth (lineDef .LineWidth );_ggge .BS =_ebca .ToPdfObject ();_gdbc ,_agfg ,_bbce :=_def (lineDef );if _bbce !=nil {return nil ,_bbce ;};
_ggge .AP =_gdbc ;_ggge .Rect =_aa .MakeArrayFromFloats ([]float64 {_agfg .Llx ,_agfg .Lly ,_agfg .Urx ,_agfg .Ury });return _ggge .PdfAnnotation ,nil ;};func _daad ()_aa .StreamEncoder {return _aa .NewFlateEncoder ()};type quadding int ;

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_eg .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_eg .PdfFieldChoice ,error ){if page ==nil {return nil ,_e .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_e .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_e .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_face :=_eg .NewPdfField ();_fceb :=&_eg .PdfFieldChoice {};_face .SetContext (_fceb );_fceb .PdfField =_face ;_fceb .T =_aa .MakeString (name );_fceb .Opt =_aa .MakeArray ();for _ ,_bge :=range opt .Choices {_fceb .Opt .Append (_aa .MakeString (_bge ));
};_fceb .SetFlag (_eg .FieldFlagCombo );_cbf :=_eg .NewPdfAnnotationWidget ();_cbf .Rect =_aa .MakeArrayFromFloats (rect );_cbf .P =page .ToPdfObject ();_cbf .F =_aa .MakeInteger (4);_cbf .Parent =_fceb .ToPdfObject ();_fceb .Annotations =append (_fceb .Annotations ,_cbf );
return _fceb ,nil ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_eg .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_eg .PdfColorDeviceRGB ;Opacity float64 ;};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_eg .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_eg .PdfFieldSignature ,error ){if signature ==nil {return nil ,_e .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};_bcac ,_dcbe :=_cdad (lines ,opts );if _dcbe !=nil {return nil ,_dcbe ;};_bdcf :=_eg .NewPdfFieldSignature (signature );_bdcf .Rect =_aa .MakeArrayFromFloats (opts .Rect );_bdcf .AP =_bcac ;return _bdcf ,nil ;};func _gbcb (_bdg *_a .ContentCreator ,_egbd AppearanceStyle ,_fde ,_dffa float64 ){_bdg .Add_q ().Add_re (0,0,_fde ,_dffa ).Add_w (_egbd .BorderSize ).SetStrokingColor (_egbd .BorderColor ).SetNonStrokingColor (_egbd .FillColor ).Add_B ().Add_Q ();
};func _cc (_fad CircleAnnotationDef ,_ab string )([]byte ,*_eg .PdfRectangle ,*_eg .PdfRectangle ,error ){_fg :=_ff .Circle {X :_fad .X ,Y :_fad .Y ,Width :_fad .Width ,Height :_fad .Height ,FillEnabled :_fad .FillEnabled ,FillColor :_fad .FillColor ,BorderEnabled :_fad .BorderEnabled ,BorderWidth :_fad .BorderWidth ,BorderColor :_fad .BorderColor ,Opacity :_fad .Opacity };
_agb ,_fce ,_fcee :=_fg .Draw (_ab );if _fcee !=nil {return nil ,nil ,nil ,_fcee ;};_bdf :=&_eg .PdfRectangle {};_bdf .Llx =_fad .X +_fce .Llx ;_bdf .Lly =_fad .Y +_fce .Lly ;_bdf .Urx =_fad .X +_fce .Urx ;_bdf .Ury =_fad .Y +_fce .Ury ;return _agb ,_fce ,_bdf ,nil ;
};const (_ffd quadding =0;_agd quadding =1;_bg quadding =2;);func _cdad (_gee []*SignatureLine ,_adcc *SignatureFieldOpts )(*_aa .PdfObjectDictionary ,error ){if _adcc ==nil {_adcc =NewSignatureFieldOpts ();};var _cag error ;var _dce *_aa .PdfObjectName ;
_degef :=_adcc .Font ;if _degef !=nil {_ddc ,_ :=_degef .GetFontDescriptor ();if _ddc !=nil {if _fgb ,_dag :=_ddc .FontName .(*_aa .PdfObjectName );_dag {_dce =_fgb ;};};if _dce ==nil {_dce =_aa .MakeName ("\u0046\u006f\u006et\u0031");};}else {if _degef ,_cag =_eg .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");
_cag !=nil {return nil ,_cag ;};_dce =_aa .MakeName ("\u0048\u0065\u006c\u0076");};_aadbc :=_adcc .FontSize ;if _aadbc <=0{_aadbc =10;};if _adcc .LineHeight <=0{_adcc .LineHeight =1;};_gab :=_adcc .LineHeight *_aadbc ;_dcbb ,_dfbb :=_degef .GetRuneMetrics (' ');
if !_dfbb {return nil ,_e .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");};_cacd :=_dcbb .Wx ;var _feb float64 ;var _geec []string ;
for _ ,_aaf :=range _gee {if _aaf .Text ==""{continue ;};_fgde :=_aaf .Text ;if _aaf .Desc !=""{_fgde =_aaf .Desc +"\u003a\u0020"+_fgde ;};_geec =append (_geec ,_fgde );var _gfcb float64 ;for _ ,_gfdb :=range _fgde {_cedg ,_cdcb :=_degef .GetRuneMetrics (_gfdb );
if !_cdcb {continue ;};_gfcb +=_cedg .Wx ;};if _gfcb > _feb {_feb =_gfcb ;};};_feb =_feb *_aadbc /1000.0;_fgac :=float64 (len (_geec ))*_gab ;_badd :=_adcc .Image !=nil ;_cfag :=_adcc .Rect ;if _cfag ==nil {_cfag =[]float64 {0,0,_feb ,_fgac };if _badd {_cfag [2]=_feb *2;
_cfag [3]=_fgac *2;};_adcc .Rect =_cfag ;};_bfee :=_cfag [2]-_cfag [0];_fafb :=_cfag [3]-_cfag [1];_dgc ,_eag :=_cfag ,_cfag ;var _bcgb ,_gfb float64 ;if _badd &&len (_geec )> 0{if _adcc .ImagePosition <=SignatureImageRight {_gabf :=[]float64 {_cfag [0],_cfag [1],_cfag [0]+(_bfee /2),_cfag [3]};
_ggbb :=[]float64 {_cfag [0]+(_bfee /2),_cfag [1],_cfag [2],_cfag [3]};if _adcc .ImagePosition ==SignatureImageLeft {_dgc ,_eag =_gabf ,_ggbb ;}else {_dgc ,_eag =_ggbb ,_gabf ;};}else {_efae :=[]float64 {_cfag [0],_cfag [1],_cfag [2],_cfag [1]+(_fafb /2)};
_dfce :=[]float64 {_cfag [0],_cfag [1]+(_fafb /2),_cfag [2],_cfag [3]};if _adcc .ImagePosition ==SignatureImageTop {_dgc ,_eag =_dfce ,_efae ;}else {_dgc ,_eag =_efae ,_dfce ;};};};_bcgb =_eag [2]-_eag [0];_gfb =_eag [3]-_eag [1];var _gegg float64 ;if _adcc .AutoSize {if _feb > _bcgb ||_fgac > _gfb {_fbc :=_fb .Min (_bcgb /_feb ,_gfb /_fgac );
_aadbc *=_fbc ;};_gab =_adcc .LineHeight *_aadbc ;_gegg +=(_gfb -float64 (len (_geec ))*_gab )/2;};_aafd :=_a .NewContentCreator ();_eadg :=_eg .NewPdfPageResources ();_eadg .SetFontByName (*_dce ,_degef .ToPdfObject ());if _adcc .BorderSize <=0{_adcc .BorderSize =0;
_adcc .BorderColor =_eg .NewPdfColorDeviceGray (1);};if _adcc .BorderColor ==nil {_adcc .BorderColor =_eg .NewPdfColorDeviceGray (1);};if _adcc .FillColor ==nil {_adcc .FillColor =_eg .NewPdfColorDeviceGray (1);};_aafd .Add_q ().SetNonStrokingColor (_adcc .FillColor ).SetStrokingColor (_adcc .BorderColor ).Add_w (_adcc .BorderSize ).Add_re (_cfag [0],_cfag [1],_bfee ,_fafb ).Add_B ().Add_Q ();
if _adcc .WatermarkImage !=nil {_gcbe :=[]float64 {_cfag [0],_cfag [1],_cfag [2],_cfag [3]};_cfbg ,_gdgd ,_gdb :=_ebe (_adcc .WatermarkImage ,"\u0049\u006d\u0061\u0067\u0065\u0057\u0061\u0074\u0065r\u006d\u0061\u0072\u006b",_adcc ,_gcbe ,_aafd );if _gdb !=nil {return nil ,_gdb ;
};_eadg .SetXObjectImageByName (*_cfbg ,_gdgd );};_aafd .Add_q ();_aafd .Translate (_eag [0],_eag [3]-_gab -_gegg );_aafd .Add_BT ();_caeb :=_degef .Encoder ();for _ ,_ceg :=range _geec {var _gcbc []byte ;for _ ,_efag :=range _ceg {if _bd .IsSpace (_efag ){if len (_gcbc )> 0{_aafd .SetNonStrokingColor (_adcc .TextColor ).Add_Tf (*_dce ,_aadbc ).Add_TL (_gab ).Add_TJ ([]_aa .PdfObject {_aa .MakeStringFromBytes (_gcbc )}...);
_gcbc =nil ;};_aafd .Add_Tf (*_dce ,_aadbc ).Add_TL (_gab ).Add_TJ ([]_aa .PdfObject {_aa .MakeFloat (-_cacd )}...);}else {_gcbc =append (_gcbc ,_caeb .Encode (string (_efag ))...);};};if len (_gcbc )> 0{_aafd .SetNonStrokingColor (_adcc .TextColor ).Add_Tf (*_dce ,_aadbc ).Add_TL (_gab ).Add_TJ ([]_aa .PdfObject {_aa .MakeStringFromBytes (_gcbc )}...);
};_aafd .Add_Td (0,-_gab );};_aafd .Add_ET ();_aafd .Add_Q ();if _badd {_agbe ,_bdd ,_acddf :=_ebe (_adcc .Image ,"\u0049\u006d\u0061\u0067\u0065\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065",_adcc ,_dgc ,_aafd );if _acddf !=nil {return nil ,_acddf ;
};_eadg .SetXObjectImageByName (*_agbe ,_bdd );};_deae :=_eg .NewXObjectForm ();_deae .Resources =_eadg ;_deae .BBox =_aa .MakeArrayFromFloats (_cfag );_deae .SetContentStream (_aafd .Bytes (),_daad ());_fac :=_aa .MakeDict ();_fac .Set ("\u004e",_deae .ToPdfObject ());
return _fac ,nil ;};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_bcf *AppearanceStyle ;};

// SetStyle applies appearance `style` to `fa`.
func (_ffa *FieldAppearance )SetStyle (style AppearanceStyle ){_ffa ._bcf =&style };

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_eg .PdfAnnotation ,error ){_db :=_eg .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_df ,_baf ,_fa :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_db .C =_aa .MakeArrayFromFloats ([]float64 {_df ,_baf ,_fa });
_fd :=_eg .NewBorderStyle ();_fd .SetBorderWidth (circDef .BorderWidth );_db .BS =_fd .ToPdfObject ();};if circDef .FillEnabled {_af ,_g ,_aae :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_db .IC =_aa .MakeArrayFromFloats ([]float64 {_af ,_g ,_aae });
}else {_db .IC =_aa .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_db .CA =_aa .MakeFloat (circDef .Opacity );};_fc ,_gf ,_ga :=_ee (circDef );if _ga !=nil {return nil ,_ga ;};_db .AP =_fc ;_db .Rect =_aa .MakeArrayFromFloats ([]float64 {_gf .Llx ,_gf .Lly ,_gf .Urx ,_gf .Ury });
return _db .PdfAnnotation ,nil ;};func _da (_ed *_eg .PdfAnnotationWidget ,_agf *_eg .PdfFieldText ,_cdaf *_eg .PdfPageResources ,_bbf AppearanceStyle )(*_aa .PdfObjectDictionary ,error ){_dc :=_eg .NewPdfPageResources ();_gff ,_efa :=_aa .GetArray (_ed .Rect );
if !_efa {return nil ,_e .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_eda ,_fbe :=_eg .NewPdfRectangle (*_gff );if _fbe !=nil {return nil ,_fbe ;};_ega ,_gag :=_eda .Width (),_eda .Height ();_ca ,_aaa :=_ega ,_gag ;_ce ,_bgg :=_aa .GetDict (_ed .MK );
if _bgg {_fe ,_ :=_aa .GetDict (_ed .BS );_fgg :=_bbf .applyAppearanceCharacteristics (_ce ,_fe ,nil );if _fgg !=nil {return nil ,_fgg ;};};_fdb ,_fbe :=_a .NewContentStreamParser (_cedf (_agf .PdfField )).Parse ();if _fbe !=nil {return nil ,_fbe ;};_bf :=_a .NewContentCreator ();
if _bbf .BorderSize > 0{_gbcb (_bf ,_bbf ,_ega ,_gag );};if _bbf .DrawAlignmentReticle {_dcd :=_bbf ;_dcd .BorderSize =0.2;_dgb (_bf ,_dcd ,_ega ,_gag );};_bf .Add_BMC ("\u0054\u0078");_bf .Add_q ();_ega ,_gag =_bbf .applyRotation (_ce ,_ega ,_gag ,_bf );
_bf .Add_BT ();_efaf ,_gbc ,_fbe :=_bbf .processDA (_agf .PdfField ,_fdb ,_cdaf ,_dc ,_bf );if _fbe !=nil {return nil ,_fbe ;};_cb :=_efaf .Font ;_gba :=_efaf .Size ;_ggf :=_aa .MakeName (_efaf .Name );_dcb :=_gba ==0;if _dcb &&_gbc {_gba =_gag *_bbf .AutoFontSizeFraction ;
};_cac :=_cb .Encoder ();if _cac ==nil {_f .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_cac =_d .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_fda ,_fbe :=_cb .GetFontDescriptor ();if _fbe !=nil {_f .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
};var _ccf string ;if _gda ,_cba :=_aa .GetString (_agf .V );_cba {_ccf =_gda .Decoded ();};if len (_ccf )==0{return nil ,nil ;};_ad :=[]string {_ccf };_gea :=false ;if _agf .Flags ().Has (_eg .FieldFlagMultiline ){_gea =true ;_ccf =_ba .Replace (_ccf ,"\u000d\u000a","\u000a",-1);
_ccf =_ba .Replace (_ccf ,"\u000d","\u000a",-1);_ad =_ba .Split (_ccf ,"\u000a");};_ec :=0.0;_cef :=0;if _cac !=nil {_dac :=len (_ad );_gad :=0;for _gad < _dac {var _bcd float64 ;_ggg :=-1;_cfd :=0.0;for _dda ,_aad :=range _ad [_gad ]{if _aad ==' '{_ggg =_dda ;
_bcd =_cfd ;};_gfcc ,_bfd :=_cb .GetRuneMetrics (_aad );if !_bfd {_f .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_aad );
continue ;};_cfd +=_gfcc .Wx ;if _gea &&!_dcb &&_gba *_cfd /1000.0> _ega &&_ggg > 0{_adf :=_ad [_gad ][_ggg +1:];if _gad < len (_ad )-1{_ad =append (_ad [:_gad +1],_ad [_gad :]...);_ad [_gad +1]=_adf ;}else {_ad =append (_ad ,_adf );};_dac ++;_ad [_gad ]=_ad [_gad ][0:_ggg ];
_cfd =_bcd ;break ;};};if _cfd > _ec {_ec =_cfd ;};_ad [_gad ]=string (_cac .Encode (_ad [_gad ]));if len (_ad [_gad ])> 0{_cef ++;};_gad ++;};};_eec :=2.0;if _gba ==0||_dcb &&_ec > 0&&_eec +_ec *_gba /1000.0> _ega {_gba =0.95*1000.0*(_ega -_eec )/_ec ;
};_bafa :=_ffd ;{if _bfc ,_ffag :=_aa .GetIntVal (_agf .Q );_ffag {switch _bfc {case 0:_bafa =_ffd ;case 1:_bafa =_agd ;case 2:_bafa =_bg ;default:_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_bfc );
};};};_bfb :=_bbf .MultilineLineHeight ;_bbd :=_gba ;if _gea &&_cef > 1{_bbd =_bfb *_gba ;};var _ae float64 ;if _fda !=nil {_ae ,_fbe =_fda .GetCapHeight ();if _fbe !=nil {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_fbe );
};};if int (_ae )<=0{_f .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_ae =1000;};_bbde :=_ae /1000.0*_gba ;_dga :=0.0;{_ac :=float64 (_cef )*_bbd ;if _dcb &&_dga +_ac > _gag {_gba =0.95*(_gag -_dga )/float64 (_cef );_bbd =_gba ;if _gea &&_cef > 1{_bbd =_bfb *_gba ;};_bbde =_ae /1000.0*_gba ;_ac =float64 (_cef )*_bbd ;};
if _gag > _ac {if _gea {if _bbf .MultilineVAlignMiddle {_cae :=(_gag -_ac )/2.0;_gdf :=_cae +_ac -_bbd ;_dga =_gdf ;}else {_dga =_gag -_bbd ;_dga -=_gba *0.5;};}else {_dga =(_gag -_bbde )/2.0;};};};_bf .Add_Tf (*_ggf ,_gba );_bf .Add_Td (_eec ,_dga );_cfe :=_eec ;
_bed :=_eec ;for _cdc ,_bbg :=range _ad {_feg :=0.0;for _ ,_cefb :=range _bbg {_dgd ,_ceb :=_cb .GetRuneMetrics (_cefb );if !_ceb {continue ;};_feg +=_dgd .Wx ;};_bbc :=_feg /1000.0*_gba ;_cfdd :=_ega -_bbc ;var _fef float64 ;switch _bafa {case _ffd :_fef =_cfe ;
case _agd :_fef =_cfdd /2;case _bg :_fef =_cfdd ;};_eec =_fef -_bed ;if _eec > 0.0{_bf .Add_Td (_eec ,0);};_bed =_fef ;_bf .Add_Tj (*_aa .MakeString (_bbg ));if _cdc < len (_ad )-1{_bf .Add_Td (0,-_bbd *_bfb );};};_bf .Add_ET ();_bf .Add_Q ();_bf .Add_EMC ();
_cfa :=_eg .NewXObjectForm ();_cfa .Resources =_dc ;_cfa .BBox =_aa .MakeArrayFromFloats ([]float64 {0,0,_ca ,_aaa });_cfa .SetContentStream (_bf .Bytes (),_daad ());_egb :=_aa .MakeDict ();_egb .Set ("\u004e",_cfa .ToPdfObject ());return _egb ,nil ;};


// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_eg .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If size is 0, a default font size will be used.
// The default font size is calculated using the available annotation
// height and the AutoFontSizeFraction of the AppearanceStyle.
Size float64 ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_deeb FieldAppearance )WrapContentStream (page *_eg .PdfPage )error {_bgda ,_fbbb :=page .GetAllContentStreams ();if _fbbb !=nil {return _fbbb ;};_beeg :=_a .NewContentStreamParser (_bgda );_edbe ,_fbbb :=_beeg .Parse ();if _fbbb !=nil {return _fbbb ;
};_edbe .WrapIfNeeded ();_ded :=[]string {_edbe .String ()};return page .SetContentStreams (_ded ,_daad ());};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_eg .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_eg .PdfFieldText ,error ){if page ==nil {return nil ,_e .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_e .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
};if len (rect )!=4{return nil ,_e .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cffa :=_eg .NewPdfField ();_aagg :=&_eg .PdfFieldText {};_cffa .SetContext (_aagg );_aagg .PdfField =_cffa ;_aagg .T =_aa .MakeString (name );
if opt .MaxLen > 0{_aagg .MaxLen =_aa .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_aagg .V =_aa .MakeString (opt .Value );};_dgdf :=_eg .NewPdfAnnotationWidget ();_dgdf .Rect =_aa .MakeArrayFromFloats (rect );_dgdf .P =page .ToPdfObject ();
_dgdf .F =_aa .MakeInteger (4);_dgdf .Parent =_aagg .ToPdfObject ();_aagg .Annotations =append (_aagg .Annotations ,_dgdf );return _aagg ,nil ;};

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};

// SignatureImagePosition specifies the image signature location relative to the text signature.
// If text signature is not defined, this position will be ignored.
type SignatureImagePosition int ;func (_egba *AppearanceStyle )processDA (_ffee *_eg .PdfField ,_bba *_a .ContentStreamOperations ,_cff ,_afd *_eg .PdfPageResources ,_dccc *_a .ContentCreator )(*AppearanceFont ,bool ,error ){var _bdc *AppearanceFont ;var _dcg bool ;
if _egba .Fonts !=nil {if _egba .Fonts .Fallback !=nil {_bdc =_egba .Fonts .Fallback ;};if _cfef :=_egba .Fonts .FieldFallbacks ;_cfef !=nil {if _ffb ,_gfd :=_cfef [_ffee .PartialName ()];_gfd {_bdc =_ffb ;}else if _dee ,_ccab :=_ffee .FullName ();_ccab ==nil {if _cge ,_cbag :=_cfef [_dee ];
_cbag {_bdc =_cge ;};};};_dcg =_egba .Fonts .ForceReplace ;};var _ceeb string ;var _fcb float64 ;var _bdce bool ;if _bba !=nil {for _ ,_ege :=range *_bba {if _ege .Operand =="\u0054\u0066"&&len (_ege .Params )==2{if _ebcc ,_bad :=_aa .GetNameVal (_ege .Params [0]);
_bad {_ceeb =_ebcc ;};if _gcgb ,_fdeg :=_aa .GetNumberAsFloat (_ege .Params [1]);_fdeg ==nil {_fcb =_gcgb ;};_bdce =true ;continue ;};_dccc .AddOperand (*_ege );};};var _gdag *AppearanceFont ;var _ebaa _aa .PdfObject ;if _dcg &&_bdc !=nil {_gdag =_bdc ;
}else {if _cff !=nil &&_ceeb !=""{if _bgff ,_bfbf :=_cff .GetFontByName (*_aa .MakeName (_ceeb ));_bfbf {if _gbf ,_gbbg :=_eg .NewPdfFontFromPdfObject (_bgff );_gbbg ==nil {_ebaa =_bgff ;_gdag =&AppearanceFont {Name :_ceeb ,Font :_gbf ,Size :_fcb };}else {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_gbbg );
};};};if _gdag ==nil &&_bdc !=nil {_gdag =_bdc ;};if _gdag ==nil {_ccfee ,_cbc :=_eg .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _cbc !=nil {return nil ,false ,_cbc ;};_gdag =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_ccfee ,Size :_fcb };
};};_add :=*_aa .MakeName (_gdag .Name );if _ebaa ==nil {_ebaa =_gdag .Font .ToPdfObject ();};if _cff !=nil &&!_cff .HasFontByName (_add ){_cff .SetFontByName (_add ,_ebaa );};if _afd !=nil &&!_afd .HasFontByName (_add ){_afd .SetFontByName (_add ,_ebaa );
};return _gdag ,_bdce ,nil ;};func _def (_defg LineAnnotationDef )(*_aa .PdfObjectDictionary ,*_eg .PdfRectangle ,error ){_ccfb :=_eg .NewXObjectForm ();_ccfb .Resources =_eg .NewPdfPageResources ();_agcg :="";if _defg .Opacity < 1.0{_gbcf :=_aa .MakeDict ();
_gbcf .Set ("\u0063\u0061",_aa .MakeFloat (_defg .Opacity ));_cegf :=_ccfb .Resources .AddExtGState ("\u0067\u0073\u0031",_gbcf );if _cegf !=nil {_f .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_cegf ;};_agcg ="\u0067\u0073\u0031";};_abce ,_cea ,_efab ,_dgaa :=_dafb (_defg ,_agcg );if _dgaa !=nil {return nil ,nil ,_dgaa ;};_dgaa =_ccfb .SetContentStream (_abce ,nil );if _dgaa !=nil {return nil ,nil ,_dgaa ;};_ccfb .BBox =_cea .ToPdfObject ();
_bgcg :=_aa .MakeDict ();_bgcg .Set ("\u004e",_ccfb .ToPdfObject ());return _bgcg ,_efab ,nil ;};func _ebe (_baff _ag .Image ,_fded string ,_fbdb *SignatureFieldOpts ,_fee []float64 ,_bbb *_a .ContentCreator )(*_aa .PdfObjectName ,*_eg .XObjectImage ,error ){_ace ,_edba :=_eg .DefaultImageHandler {}.NewImageFromGoImage (_baff );
if _edba !=nil {return nil ,nil ,_edba ;};_dccca ,_edba :=_eg .NewXObjectImageFromImage (_ace ,nil ,_fbdb .Encoder );if _edba !=nil {return nil ,nil ,_edba ;};_fgca ,_fgag :=float64 (*_dccca .Width ),float64 (*_dccca .Height );_dgbb :=_fee [2]-_fee [0];
_bfea :=_fee [3]-_fee [1];if _fbdb .AutoSize {_edc :=_fb .Min (_dgbb /_fgca ,_bfea /_fgag );_fgca *=_edc ;_fgag *=_edc ;_fee [0]=_fee [0]+(_dgbb /2)-(_fgca /2);_fee [1]=_fee [1]+(_bfea /2)-(_fgag /2);};var _dabb *_aa .PdfObjectName ;if _bbaa ,_eagd :=_aa .GetName (_dccca .Name );
_eagd {_dabb =_bbaa ;}else {_dabb =_aa .MakeName (_fded );};if _bbb !=nil {_bbb .Add_q ().Translate (_fee [0],_fee [1]).Scale (_fgca ,_fgag ).Add_Do (*_dabb ).Add_Q ();}else {return nil ,nil ,_e .New ("\u0043\u006f\u006e\u0074en\u0074\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u0075l\u006c");
};return _dabb ,_dccca ,nil ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};func _abfb (_eadc RectangleAnnotationDef )(*_aa .PdfObjectDictionary ,*_eg .PdfRectangle ,error ){_bebf :=_eg .NewXObjectForm ();_bebf .Resources =_eg .NewPdfPageResources ();_badg :="";if _eadc .Opacity < 1.0{_fcec :=_aa .MakeDict ();
_fcec .Set ("\u0063\u0061",_aa .MakeFloat (_eadc .Opacity ));_fcec .Set ("\u0043\u0041",_aa .MakeFloat (_eadc .Opacity ));_eea :=_bebf .Resources .AddExtGState ("\u0067\u0073\u0031",_fcec );if _eea !=nil {_f .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_eea ;};_badg ="\u0067\u0073\u0031";};_eae ,_bae ,_dfbfc ,_dgaf :=_ecbc (_eadc ,_badg );if _dgaf !=nil {return nil ,nil ,_dgaf ;};_dgaf =_bebf .SetContentStream (_eae ,nil );if _dgaf !=nil {return nil ,nil ,_dgaf ;};_bebf .BBox =_bae .ToPdfObject ();
_aacd :=_aa .MakeDict ();_aacd .Set ("\u004e",_bebf .ToPdfObject ());return _aacd ,_dfbfc ,nil ;};func _ee (_gg CircleAnnotationDef )(*_aa .PdfObjectDictionary ,*_eg .PdfRectangle ,error ){_c :=_eg .NewXObjectForm ();_c .Resources =_eg .NewPdfPageResources ();
_bc :="";if _gg .Opacity < 1.0{_gd :=_aa .MakeDict ();_gd .Set ("\u0063\u0061",_aa .MakeFloat (_gg .Opacity ));_gd .Set ("\u0043\u0041",_aa .MakeFloat (_gg .Opacity ));_cg :=_c .Resources .AddExtGState ("\u0067\u0073\u0031",_gd );if _cg !=nil {_f .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_cg ;};_bc ="\u0067\u0073\u0031";};_dfc ,_faa ,_gfc ,_ggb :=_cc (_gg ,_bc );if _ggb !=nil {return nil ,nil ,_ggb ;};_ggb =_c .SetContentStream (_dfc ,nil );if _ggb !=nil {return nil ,nil ,_ggb ;};_c .BBox =_faa .ToPdfObject ();_ge :=_aa .MakeDict ();
_ge .Set ("\u004e",_c .ToPdfObject ());return _ge ,_gfc ,nil ;};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_eg .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _ff .LineEndingStyle ;LineEndingStyle2 _ff .LineEndingStyle ;};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_eg .PdfAnnotation ,error ){_fbdg :=_eg .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_gfedf ,_aefb ,_edbea :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();
_fbdg .C =_aa .MakeArrayFromFloats ([]float64 {_gfedf ,_aefb ,_edbea });_bcb :=_eg .NewBorderStyle ();_bcb .SetBorderWidth (rectDef .BorderWidth );_fbdg .BS =_bcb .ToPdfObject ();};if rectDef .FillEnabled {_edd ,_eef ,_dge :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();
_fbdg .IC =_aa .MakeArrayFromFloats ([]float64 {_edd ,_eef ,_dge });}else {_fbdg .IC =_aa .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_fbdg .CA =_aa .MakeFloat (rectDef .Opacity );};_bbcg ,_gged ,_fcg :=_abfb (rectDef );if _fcg !=nil {return nil ,_fcg ;
};_fbdg .AP =_bbcg ;_fbdg .Rect =_aa .MakeArrayFromFloats ([]float64 {_gged .Llx ,_gged .Lly ,_gged .Urx ,_gged .Ury });return _fbdg .PdfAnnotation ,nil ;};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};func _faf (_ebf *_eg .PdfField ,_dff ,_baga float64 ,_gfccg string ,_ecc AppearanceStyle ,_gbed *_a .ContentStreamOperations ,_cgde *_eg .PdfPageResources ,_bage *_aa .PdfObjectDictionary )(*_eg .XObjectForm ,error ){_ebfe :=_eg .NewPdfPageResources ();
_fga ,_bcfa :=_dff ,_baga ;_aag :=_a .NewContentCreator ();if _ecc .BorderSize > 0{_gbcb (_aag ,_ecc ,_dff ,_baga );};if _ecc .DrawAlignmentReticle {_gadg :=_ecc ;_gadg .BorderSize =0.2;_dgb (_aag ,_gadg ,_dff ,_baga );};_aag .Add_BMC ("\u0054\u0078");
_aag .Add_q ();_aag .Add_BT ();_dff ,_baga =_ecc .applyRotation (_bage ,_dff ,_baga ,_aag );_abd ,_ffg ,_geb :=_ecc .processDA (_ebf ,_gbed ,_cgde ,_ebfe ,_aag );if _geb !=nil {return nil ,_geb ;};_ada :=_abd .Font ;_edfb :=_abd .Size ;_adbg :=_aa .MakeName (_abd .Name );
_efdg :=_edfb ==0;if _efdg &&_ffg {_edfb =_baga *_ecc .AutoFontSizeFraction ;};_geagg :=_ada .Encoder ();if _geagg ==nil {_f .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_geagg =_d .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_gfccg )==0{return nil ,nil ;};_ffdf :=2.0;_gbd :=0.0;if _geagg !=nil {for _ ,_gagf :=range _gfccg {_beea ,_aaag :=_ada .GetRuneMetrics (_gagf );
if !_aaag {_f .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_gagf );
continue ;};_gbd +=_beea .Wx ;};_gfccg =string (_geagg .Encode (_gfccg ));};if _edfb ==0||_efdg &&_gbd > 0&&_ffdf +_gbd *_edfb /1000.0> _dff {_edfb =0.95*1000.0*(_dff -_ffdf )/_gbd ;};_eee :=1.0*_edfb ;_ebc :=2.0;{_babc :=_eee ;if _efdg &&_ebc +_babc > _baga {_edfb =0.95*(_baga -_ebc );
_eee =1.0*_edfb ;_babc =_eee ;};if _baga > _babc {_ebc =(_baga -_babc )/2.0;_ebc +=1.50;};};_aag .Add_Tf (*_adbg ,_edfb );_aag .Add_Td (_ffdf ,_ebc );_aag .Add_Tj (*_aa .MakeString (_gfccg ));_aag .Add_ET ();_aag .Add_Q ();_aag .Add_EMC ();_gaf :=_eg .NewXObjectForm ();
_gaf .Resources =_ebfe ;_gaf .BBox =_aa .MakeArrayFromFloats ([]float64 {0,0,_fga ,_bcfa });_gaf .SetContentStream (_aag .Bytes (),_daad ());return _gaf ,nil ;};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_eg .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_eg .PdfFieldButton ,error ){if page ==nil {return nil ,_e .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_e .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_e .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cbcc ,_cfbc :=_eg .NewStandard14Font (_eg .ZapfDingbatsName );if _cfbc !=nil {return nil ,_cfbc ;};_dfbf :=_eg .NewPdfField ();_bdfa :=&_eg .PdfFieldButton {};_dfbf .SetContext (_bdfa );_bdfa .PdfField =_dfbf ;_bdfa .T =_aa .MakeString (name );_bdfa .SetType (_eg .ButtonTypeCheckbox );
_ccb :="\u004f\u0066\u0066";if opt .Checked {_ccb ="\u0059\u0065\u0073";};_bdfa .V =_aa .MakeName (_ccb );_dfbbc :=_eg .NewPdfAnnotationWidget ();_dfbbc .Rect =_aa .MakeArrayFromFloats (rect );_dfbbc .P =page .ToPdfObject ();_dfbbc .F =_aa .MakeInteger (4);
_dfbbc .Parent =_bdfa .ToPdfObject ();_dcdf :=rect [2]-rect [0];_gddc :=rect [3]-rect [1];var _gadb _be .Buffer ;_gadb .WriteString ("\u0071\u000a");_gadb .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_gadb .WriteString ("\u0042\u0054\u000a");
_gadb .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");_gadb .WriteString ("\u0045\u0054\u000a");_gadb .WriteString ("\u0051\u000a");_ggfc :=_a .NewContentCreator ();_ggfc .Add_q ();_ggfc .Add_rg (0,0,1);_ggfc .Add_BT ();
_ggfc .Add_Tf (*_aa .MakeName ("\u005a\u0061\u0044\u0062"),12);_ggfc .Add_Td (0,0);_ggfc .Add_ET ();_ggfc .Add_Q ();_fea :=_eg .NewXObjectForm ();_fea .SetContentStream (_ggfc .Bytes (),_aa .NewRawEncoder ());_fea .BBox =_aa .MakeArrayFromFloats ([]float64 {0,0,_dcdf ,_gddc });
_fea .Resources =_eg .NewPdfPageResources ();_fea .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_cbcc .ToPdfObject ());_ggfc =_a .NewContentCreator ();_ggfc .Add_q ();_ggfc .Add_re (0,0,_dcdf ,_gddc );_ggfc .Add_W ().Add_n ();_ggfc .Add_rg (0,0,1);
_ggfc .Translate (0,3.0);_ggfc .Add_BT ();_ggfc .Add_Tf (*_aa .MakeName ("\u005a\u0061\u0044\u0062"),12);_ggfc .Add_Td (0,0);_ggfc .Add_Tj (*_aa .MakeString ("\u0034"));_ggfc .Add_ET ();_ggfc .Add_Q ();_dffac :=_eg .NewXObjectForm ();_dffac .SetContentStream (_ggfc .Bytes (),_aa .NewRawEncoder ());
_dffac .BBox =_aa .MakeArrayFromFloats ([]float64 {0,0,_dcdf ,_gddc });_dffac .Resources =_eg .NewPdfPageResources ();_dffac .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_cbcc .ToPdfObject ());_cdg :=_aa .MakeDict ();_cdg .Set ("\u004f\u0066\u0066",_fea .ToPdfObject ());
_cdg .Set ("\u0059\u0065\u0073",_dffac .ToPdfObject ());_gafa :=_aa .MakeDict ();_gafa .Set ("\u004e",_cdg );_dfbbc .AP =_gafa ;_dfbbc .AS =_aa .MakeName (_ccb );_bdfa .Annotations =append (_bdfa .Annotations ,_dfbbc );return _bdfa ,nil ;};func _fefb (_daa *_eg .PdfAcroForm ,_cbda *_eg .PdfAnnotationWidget ,_dba *_eg .PdfFieldChoice ,_agg AppearanceStyle )(*_aa .PdfObjectDictionary ,error ){_edf ,_bfga :=_aa .GetArray (_cbda .Rect );
if !_bfga {return nil ,_e .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_gdc ,_gbae :=_eg .NewPdfRectangle (*_edf );if _gbae !=nil {return nil ,_gbae ;};_cee ,_bbfd :=_gdc .Width (),_gdc .Height ();_f .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_cbda .BS );
_cfba ,_gbae :=_a .NewContentStreamParser (_cedf (_dba .PdfField )).Parse ();if _gbae !=nil {return nil ,_gbae ;};_agdg ,_bda :=_aa .GetDict (_cbda .MK );if _bda {_ccfe ,_ :=_aa .GetDict (_cbda .BS );_fdbb :=_agg .applyAppearanceCharacteristics (_agdg ,_ccfe ,nil );
if _fdbb !=nil {return nil ,_fdbb ;};};_bgc :=_aa .MakeDict ();for _ ,_aggd :=range _dba .Opt .Elements (){if _gfg ,_bebb :=_aa .GetArray (_aggd );_bebb &&_gfg .Len ()==2{_aggd =_gfg .Get (1);};var _caee string ;if _afg ,_gcg :=_aa .GetString (_aggd );
_gcg {_caee =_afg .Decoded ();}else if _cca ,_fbd :=_aa .GetName (_aggd );_fbd {_caee =_cca .String ();}else {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_aggd );
return nil ,_e .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_caee )> 0{_gbe ,_bfba :=_faf (_dba .PdfField ,_cee ,_bbfd ,_caee ,_agg ,_cfba ,_daa .DR ,_agdg );if _bfba !=nil {return nil ,_bfba ;
};_bgc .Set (*_aa .MakeName (_caee ),_gbe .ToPdfObject ());};};_bgcc :=_aa .MakeDict ();_bgcc .Set ("\u004e",_bgc );return _bgcc ,nil ;};func _dafb (_aec LineAnnotationDef ,_dfbbb string )([]byte ,*_eg .PdfRectangle ,*_eg .PdfRectangle ,error ){_fgdef :=_ff .Line {X1 :0,Y1 :0,X2 :_aec .X2 -_aec .X1 ,Y2 :_aec .Y2 -_aec .Y1 ,LineColor :_aec .LineColor ,Opacity :_aec .Opacity ,LineWidth :_aec .LineWidth ,LineEndingStyle1 :_aec .LineEndingStyle1 ,LineEndingStyle2 :_aec .LineEndingStyle2 };
_bca ,_dgae ,_edge :=_fgdef .Draw (_dfbbb );if _edge !=nil {return nil ,nil ,nil ,_edge ;};_aee :=&_eg .PdfRectangle {};_aee .Llx =_aec .X1 +_dgae .Llx ;_aee .Lly =_aec .Y1 +_dgae .Lly ;_aee .Urx =_aec .X1 +_dgae .Urx ;_aee .Ury =_aec .Y1 +_dgae .Ury ;
return _bca ,_dgae ,_aee ,nil ;};func (_fbfa *AppearanceStyle )applyRotation (_efe *_aa .PdfObjectDictionary ,_gfed ,_deaa float64 ,_ccae *_a .ContentCreator )(float64 ,float64 ){if !_fbfa .AllowMK {return _gfed ,_deaa ;};if _efe ==nil {return _gfed ,_deaa ;
};_dfec ,_ :=_aa .GetNumberAsFloat (_efe .Get ("\u0052"));if _dfec ==0{return _gfed ,_deaa ;};_dgbc :=-_dfec ;_dfda :=_ff .Path {Points :[]_ff .Point {_ff .NewPoint (0,0).Rotate (_dgbc ),_ff .NewPoint (_gfed ,0).Rotate (_dgbc ),_ff .NewPoint (0,_deaa ).Rotate (_dgbc ),_ff .NewPoint (_gfed ,_deaa ).Rotate (_dgbc )}}.GetBoundingBox ();
_ccae .RotateDeg (_dfec );_ccae .Translate (_dfda .X ,_dfda .Y );return _dfda .Width ,_dfda .Height ;};