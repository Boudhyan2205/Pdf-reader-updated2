//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_a "bytes";_ec "errors";_d "github.com/unidoc/unipdf/v3/common";_e "github.com/unidoc/unipdf/v3/contentstream";_ae "github.com/unidoc/unipdf/v3/contentstream/draw";_afb "github.com/unidoc/unipdf/v3/core";_db "github.com/unidoc/unipdf/v3/internal/textencoding";_b "github.com/unidoc/unipdf/v3/model";_g "math";_cg "strings";_af "unicode";);

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _b .PdfColor ;FillColor _b .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_b .PdfAnnotation ,error ){_cd :=_b .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_eg ,_bd ,_ge :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_cd .C =_afb .MakeArrayFromFloats ([]float64 {_eg ,_bd ,_ge });_ad :=_b .NewBorderStyle ();_ad .SetBorderWidth (circDef .BorderWidth );_cd .BS =_ad .ToPdfObject ();};if circDef .FillEnabled {_cf ,_ga ,_f :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_cd .IC =_afb .MakeArrayFromFloats ([]float64 {_cf ,_ga ,_f });}else {_cd .IC =_afb .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_cd .CA =_afb .MakeFloat (circDef .Opacity );};_ee ,_ag ,_be :=_gb (circDef );if _be !=nil {return nil ,_be ;};_cd .AP =_ee ;_cd .Rect =_afb .MakeArrayFromFloats ([]float64 {_ag .Llx ,_ag .Lly ,_ag .Urx ,_ag .Ury });return _cd .PdfAnnotation ,nil ;};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_b .PdfAnnotation ,error ){_cfea :=_b .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_ddb ,_abg ,_cega :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();_cfea .C =_afb .MakeArrayFromFloats ([]float64 {_ddb ,_abg ,_cega });_cbfb :=_b .NewBorderStyle ();_cbfb .SetBorderWidth (rectDef .BorderWidth );_cfea .BS =_cbfb .ToPdfObject ();};if rectDef .FillEnabled {_aadc ,_cbde ,_ddfa :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();_cfea .IC =_afb .MakeArrayFromFloats ([]float64 {_aadc ,_cbde ,_ddfa });}else {_cfea .IC =_afb .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_cfea .CA =_afb .MakeFloat (rectDef .Opacity );};_dec ,_gdd ,_dcgf :=_abd (rectDef );if _dcgf !=nil {return nil ,_dcgf ;};_cfea .AP =_dec ;_cfea .Rect =_afb .MakeArrayFromFloats ([]float64 {_gdd .Llx ,_gdd .Lly ,_gdd .Urx ,_gdd .Ury });return _cfea .PdfAnnotation ,nil ;};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_b .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_b .PdfFieldButton ,error ){if page ==nil {return nil ,_ec .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_ec .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_ec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cgeb ,_daca :=_b .NewStandard14Font (_b .ZapfDingbatsName );if _daca !=nil {return nil ,_daca ;};_cbdd :=_b .NewPdfField ();_fagd :=&_b .PdfFieldButton {};_cbdd .SetContext (_fagd );_fagd .PdfField =_cbdd ;_fagd .T =_afb .MakeString (name );_fagd .SetType (_b .ButtonTypeCheckbox );_cbc :="\u004f\u0066\u0066";if opt .Checked {_cbc ="\u0059\u0065\u0073";};_fagd .V =_afb .MakeName (_cbc );_ebc :=_b .NewPdfAnnotationWidget ();_ebc .Rect =_afb .MakeArrayFromFloats (rect );_ebc .P =page .ToPdfObject ();_ebc .F =_afb .MakeInteger (4);_ebc .Parent =_fagd .ToPdfObject ();_eede :=rect [2]-rect [0];_fdb :=rect [3]-rect [1];var _gdb _a .Buffer ;_gdb .WriteString ("\u0071\u000a");_gdb .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_gdb .WriteString ("\u0042\u0054\u000a");_gdb .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");_gdb .WriteString ("\u0045\u0054\u000a");_gdb .WriteString ("\u0051\u000a");_cfgb :=_e .NewContentCreator ();_cfgb .Add_q ();_cfgb .Add_rg (0,0,1);_cfgb .Add_BT ();_cfgb .Add_Tf (*_afb .MakeName ("\u005a\u0061\u0044\u0062"),12);_cfgb .Add_Td (0,0);_cfgb .Add_ET ();_cfgb .Add_Q ();_dbf :=_b .NewXObjectForm ();_dbf .SetContentStream (_cfgb .Bytes (),_afb .NewRawEncoder ());_dbf .BBox =_afb .MakeArrayFromFloats ([]float64 {0,0,_eede ,_fdb });_dbf .Resources =_b .NewPdfPageResources ();_dbf .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_cgeb .ToPdfObject ());_cfgb =_e .NewContentCreator ();_cfgb .Add_q ();_cfgb .Add_re (0,0,_eede ,_fdb );_cfgb .Add_W ().Add_n ();_cfgb .Add_rg (0,0,1);_cfgb .Translate (0,3.0);_cfgb .Add_BT ();_cfgb .Add_Tf (*_afb .MakeName ("\u005a\u0061\u0044\u0062"),12);_cfgb .Add_Td (0,0);_cfgb .Add_Tj (*_afb .MakeString ("\u0034"));_cfgb .Add_ET ();_cfgb .Add_Q ();_dbgbe :=_b .NewXObjectForm ();_dbgbe .SetContentStream (_cfgb .Bytes (),_afb .NewRawEncoder ());_dbgbe .BBox =_afb .MakeArrayFromFloats ([]float64 {0,0,_eede ,_fdb });_dbgbe .Resources =_b .NewPdfPageResources ();_dbgbe .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_cgeb .ToPdfObject ());_bee :=_afb .MakeDict ();_bee .Set ("\u004f\u0066\u0066",_dbf .ToPdfObject ());_bee .Set ("\u0059\u0065\u0073",_dbgbe .ToPdfObject ());_adfd :=_afb .MakeDict ();_adfd .Set ("\u004e",_bee );_ebc .AP =_adfd ;_ebc .AS =_afb .MakeName (_cbc );_fagd .Annotations =append (_fagd .Annotations ,_ebc );return _fagd ,nil ;};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_feb FieldAppearance )Style ()AppearanceStyle {if _feb ._bb !=nil {return *_feb ._bb ;};return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'âœ”',BorderSize :0.0,BorderColor :_b .NewPdfColorDeviceGray (0),FillColor :_b .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true };};func _cdg (_ada *_b .PdfAnnotationWidget ,_bba *_b .PdfFieldText ,_ea *_b .PdfPageResources ,_aed AppearanceStyle )(*_afb .PdfObjectDictionary ,error ){_fbg :=_b .NewPdfPageResources ();_ef ,_bgb :=_afb .GetArray (_ada .Rect );if !_bgb {return nil ,_ec .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_cfc ,_aga :=_b .NewPdfRectangle (*_ef );if _aga !=nil {return nil ,_aga ;};_gbg ,_eac :=_cfc .Width (),_cfc .Height ();_gge ,_bbf :=_gbg ,_eac ;_gab ,_bf :=_afb .GetDict (_ada .MK );if _bf {_gd ,_ :=_afb .GetDict (_ada .BS );_bgba :=_aed .applyAppearanceCharacteristics (_gab ,_gd ,nil );if _bgba !=nil {return nil ,_bgba ;};};_eba ,_aga :=_e .NewContentStreamParser (_ccf (_bba .PdfField )).Parse ();if _aga !=nil {return nil ,_aga ;};_eae :=_e .NewContentCreator ();if _aed .BorderSize > 0{_eedc (_eae ,_aed ,_gbg ,_eac );};if _aed .DrawAlignmentReticle {_eef :=_aed ;_eef .BorderSize =0.2;_fac (_eae ,_eef ,_gbg ,_eac );};_eae .Add_BMC ("\u0054\u0078");_eae .Add_q ();_gbg ,_eac =_aed .applyRotation (_gab ,_gbg ,_eac ,_eae );_eae .Add_BT ();_dega ,_bbb ,_aga :=_aed .processDA (_bba .PdfField ,_eba ,_ea ,_fbg ,_eae );if _aga !=nil {return nil ,_aga ;};_bde :=_dega .Font ;_cdgf :=_dega .Size ;_cad :=_afb .MakeName (_dega .Name );_ebg :=_cdgf ==0;if _ebg &&_bbb {_cdgf =_eac *_aed .AutoFontSizeFraction ;};_cac :=_bde .Encoder ();if _cac ==nil {_d .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_cac =_db .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_cb ,_aga :=_bde .GetFontDescriptor ();if _aga !=nil {_d .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _eeb string ;if _dbg ,_dea :=_afb .GetString (_bba .V );_dea {_eeb =_dbg .Decoded ();};if len (_eeb )==0{return nil ,nil ;};_fc :=[]string {_eeb };_abc :=false ;if _bba .Flags ().Has (_b .FieldFlagMultiline ){_abc =true ;_eeb =_cg .Replace (_eeb ,"\u000d\u000a","\u000a",-1);_eeb =_cg .Replace (_eeb ,"\u000d","\u000a",-1);_fc =_cg .Split (_eeb ,"\u000a");};_fbd :=0.0;_bbfa :=0;if _cac !=nil {_dd :=len (_fc );_caa :=0;for _caa < _dd {var _feg float64 ;_gba :=-1;_eebg :=0.0;for _cfb ,_eebf :=range _fc [_caa ]{if _eebf ==' '{_gba =_cfb ;_feg =_eebg ;};_cgg ,_gga :=_bde .GetRuneMetrics (_eebf );if !_gga {_d .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_eebf );continue ;};_eebg +=_cgg .Wx ;if _abc &&!_ebg &&_cdgf *_eebg /1000.0> _gbg &&_gba > 0{_agdg :=_fc [_caa ][_gba +1:];if _caa < len (_fc )-1{_fc [_caa +1]+=_agdg ;}else {_fc =append (_fc ,_agdg );_dd ++;};_fc [_caa ]=_fc [_caa ][0:_gba ];_eebg =_feg ;break ;};};if _eebg > _fbd {_fbd =_eebg ;};_fc [_caa ]=string (_cac .Encode (_fc [_caa ]));if len (_fc [_caa ])> 0{_bbfa ++;};_caa ++;};};_gbc :=2.0;if _cdgf ==0||_ebg &&_fbd > 0&&_gbc +_fbd *_cdgf /1000.0> _gbg {_cdgf =0.95*1000.0*(_gbg -_gbc )/_fbd ;};_cfa :=_gf ;{if _bfa ,_gcc :=_afb .GetIntVal (_bba .Q );_gcc {switch _bfa {case 0:_cfa =_gf ;case 1:_cfa =_bge ;case 2:_cfa =_fe ;default:_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_bfa );};};};_bfc :=_aed .MultilineLineHeight ;_gbd :=_cdgf ;if _abc &&_bbfa > 1{_gbd =_bfc *_cdgf ;};var _gbgc float64 ;if _cb !=nil {_gbgc ,_aga =_cb .GetCapHeight ();if _aga !=nil {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_aga );};};if int (_gbgc )<=0{_d .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_gbgc =1000;};_aa :=_gbgc /1000.0*_cdgf ;_df :=0.0;{_bgg :=float64 (_bbfa )*_gbd ;if _ebg &&_df +_bgg > _eac {_cdgf =0.95*(_eac -_df )/float64 (_bbfa );_gbd =_cdgf ;if _abc &&_bbfa > 1{_gbd =_bfc *_cdgf ;};_aa =_gbgc /1000.0*_cdgf ;_bgg =float64 (_bbfa )*_gbd ;};if _eac > _bgg {if _abc {if _aed .MultilineVAlignMiddle {_fff :=(_eac -_bgg )/2.0;_dee :=_fff +_bgg -_gbd ;_df =_dee ;}else {_df =_eac -_gbd ;_df -=_cdgf *0.5;};}else {_df =(_eac -_aa )/2.0;};};};_eae .Add_Tf (*_cad ,_cdgf );_eae .Add_Td (_gbc ,_df );_da :=_gbc ;_efa :=_gbc ;for _fgg ,_dab :=range _fc {_degc :=0.0;for _ ,_egdc :=range _dab {_caab ,_dfa :=_bde .GetRuneMetrics (_egdc );if !_dfa {continue ;};_degc +=_caab .Wx ;};_ce :=_degc /1000.0*_cdgf ;_cga :=_gbg -_ce ;var _aea float64 ;switch _cfa {case _gf :_aea =_da ;case _bge :_aea =_cga /2;case _fe :_aea =_cga ;};_gbc =_aea -_efa ;if _gbc > 0.0{_eae .Add_Td (_gbc ,0);};_efa =_aea ;_eae .Add_Tj (*_afb .MakeString (_dab ));if _fgg < len (_fc )-1{_eae .Add_Td (0,-_gbd *_bfc );};};_eae .Add_ET ();_eae .Add_Q ();_eae .Add_EMC ();_deaa :=_b .NewXObjectForm ();_deaa .Resources =_fbg ;_deaa .BBox =_afb .MakeArrayFromFloats ([]float64 {0,0,_gge ,_bbf });_deaa .SetContentStream (_eae .Bytes (),_eaeb ());_bdea :=_afb .MakeDict ();_bdea .Set ("\u004e",_deaa .ToPdfObject ());return _bdea ,nil ;};func _dggg (_cdda LineAnnotationDef ,_cgd string )([]byte ,*_b .PdfRectangle ,*_b .PdfRectangle ,error ){_dbd :=_ae .Line {X1 :0,Y1 :0,X2 :_cdda .X2 -_cdda .X1 ,Y2 :_cdda .Y2 -_cdda .Y1 ,LineColor :_cdda .LineColor ,Opacity :_cdda .Opacity ,LineWidth :_cdda .LineWidth ,LineEndingStyle1 :_cdda .LineEndingStyle1 ,LineEndingStyle2 :_cdda .LineEndingStyle2 };_bbc ,_dfd ,_ebee :=_dbd .Draw (_cgd );if _ebee !=nil {return nil ,nil ,nil ,_ebee ;};_cbdg :=&_b .PdfRectangle {};_cbdg .Llx =_cdda .X1 +_dfd .Llx ;_cbdg .Lly =_cdda .Y1 +_dfd .Lly ;_cbdg .Urx =_cdda .X1 +_dfd .Urx ;_cbdg .Ury =_cdda .Y1 +_dfd .Ury ;return _bbc ,_dfd ,_cbdg ,nil ;};const (_gf quadding =0;_bge quadding =1;_fe quadding =2;);

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_b .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_b .PdfFieldText ,error ){if page ==nil {return nil ,_ec .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_ec .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_ec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fgf :=_b .NewPdfField ();_babag :=&_b .PdfFieldText {};_fgf .SetContext (_babag );_babag .PdfField =_fgf ;_babag .T =_afb .MakeString (name );if opt .MaxLen > 0{_babag .MaxLen =_afb .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_babag .V =_afb .MakeString (opt .Value );};_acef :=_b .NewPdfAnnotationWidget ();_acef .Rect =_afb .MakeArrayFromFloats (rect );_acef .P =page .ToPdfObject ();_acef .F =_afb .MakeInteger (4);_acef .Parent =_babag .ToPdfObject ();_babag .Annotations =append (_babag .Annotations ,_acef );return _babag ,nil ;};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_bb *AppearanceStyle ;};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_b .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _ae .LineEndingStyle ;LineEndingStyle2 _ae .LineEndingStyle ;};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_b .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_b .PdfFieldSignature ,error ){if signature ==nil {return nil ,_ec .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_deb ,_acbe :=_feeb (lines ,opts );if _acbe !=nil {return nil ,_acbe ;};_agbf :=_b .NewPdfFieldSignature (signature );_agbf .Rect =_afb .MakeArrayFromFloats (opts .Rect );_agbf .AP =_deb ;return _agbf ,nil ;};func _feeb (_afgd []*SignatureLine ,_baba *SignatureFieldOpts )(*_afb .PdfObjectDictionary ,error ){if _baba ==nil {_baba =NewSignatureFieldOpts ();};var _efcd error ;var _ddddc *_afb .PdfObjectName ;_cbd :=_baba .Font ;if _cbd !=nil {_bfab ,_ :=_cbd .GetFontDescriptor ();if _bfab !=nil {if _fead ,_ceg :=_bfab .FontName .(*_afb .PdfObjectName );_ceg {_ddddc =_fead ;};};if _ddddc ==nil {_ddddc =_afb .MakeName ("\u0046\u006f\u006et\u0031");};}else {if _cbd ,_efcd =_b .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_efcd !=nil {return nil ,_efcd ;};_ddddc =_afb .MakeName ("\u0048\u0065\u006c\u0076");};_cfg :=_baba .FontSize ;if _cfg <=0{_cfg =10;};if _baba .LineHeight <=0{_baba .LineHeight =1;};_def :=_baba .LineHeight *_cfg ;_dgc ,_gcb :=_cbd .GetRuneMetrics (' ');if !_gcb {return nil ,_ec .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");};_ecgf :=_dgc .Wx ;var _adbf float64 ;var _adfe []string ;for _ ,_aae :=range _afgd {if _aae .Text ==""{continue ;};_cffg :=_aae .Text ;if _aae .Desc !=""{_cffg =_aae .Desc +"\u003a\u0020"+_cffg ;};_adfe =append (_adfe ,_cffg );var _acg float64 ;for _ ,_fgga :=range _cffg {_beaa ,_fgdg :=_cbd .GetRuneMetrics (_fgga );if !_fgdg {continue ;};_acg +=_beaa .Wx ;};if _acg > _adbf {_adbf =_acg ;};};_adbf =_adbf *_cfg /1000.0;_bbab :=float64 (len (_adfe ))*_def ;_gbfg :=_baba .Rect ;if _gbfg ==nil {_gbfg =[]float64 {0,0,_adbf ,_bbab };_baba .Rect =_gbfg ;};_ffgc :=_gbfg [2]-_gbfg [0];_eebgg :=_gbfg [3]-_gbfg [1];var _cef float64 ;if _baba .AutoSize {if _adbf > _ffgc ||_bbab > _eebgg {_cbb :=_g .Min (_ffgc /_adbf ,_eebgg /_bbab );_cfg *=_cbb ;};_def =_baba .LineHeight *_cfg ;_cef +=(_eebgg -float64 (len (_adfe ))*_def )/2;};_ecage :=_e .NewContentCreator ();if _baba .BorderSize <=0{_baba .BorderSize =0;_baba .BorderColor =_b .NewPdfColorDeviceGray (1);};if _baba .BorderColor ==nil {_baba .BorderColor =_b .NewPdfColorDeviceGray (1);};if _baba .FillColor ==nil {_baba .FillColor =_b .NewPdfColorDeviceGray (1);};_ecage .Add_q ().SetNonStrokingColor (_baba .FillColor ).SetStrokingColor (_baba .BorderColor ).Add_w (_baba .BorderSize ).Add_re (_gbfg [0],_gbfg [1],_ffgc ,_eebgg ).Add_B ().Add_Q ();_ecage .Add_q ();_ecage .Translate (_gbfg [0],_gbfg [3]-_def -_cef );_ecage .Add_BT ();_cdee :=_cbd .Encoder ();for _ ,_cefc :=range _adfe {var _bbge []byte ;for _ ,_eaef :=range _cefc {if _af .IsSpace (_eaef ){if len (_bbge )> 0{_ecage .SetNonStrokingColor (_baba .TextColor ).Add_Tf (*_ddddc ,_cfg ).Add_TL (_def ).Add_TJ ([]_afb .PdfObject {_afb .MakeStringFromBytes (_bbge )}...);_bbge =nil ;};_ecage .Add_Tf (*_ddddc ,_cfg ).Add_TL (_def ).Add_TJ ([]_afb .PdfObject {_afb .MakeFloat (-_ecgf )}...);}else {_bbge =append (_bbge ,_cdee .Encode (string (_eaef ))...);};};if len (_bbge )> 0{_ecage .SetNonStrokingColor (_baba .TextColor ).Add_Tf (*_ddddc ,_cfg ).Add_TL (_def ).Add_TJ ([]_afb .PdfObject {_afb .MakeStringFromBytes (_bbge )}...);};_ecage .Add_Td (0,-_def );};_ecage .Add_ET ();_ecage .Add_Q ();_fcag :=_b .NewPdfPageResources ();_fcag .SetFontByName (*_ddddc ,_cbd .ToPdfObject ());_gege :=_b .NewXObjectForm ();_gege .Resources =_fcag ;_gege .BBox =_afb .MakeArrayFromFloats (_gbfg );_gege .SetContentStream (_ecage .Bytes (),_eaeb ());_bbdg :=_afb .MakeDict ();_bbdg .Set ("\u004e",_gege .ToPdfObject ());return _bbdg ,nil ;};func _afg (_ab CircleAnnotationDef ,_eeec string )([]byte ,*_b .PdfRectangle ,*_b .PdfRectangle ,error ){_eb :=_ae .Circle {X :_ab .X ,Y :_ab .Y ,Width :_ab .Width ,Height :_ab .Height ,FillEnabled :_ab .FillEnabled ,FillColor :_ab .FillColor ,BorderEnabled :_ab .BorderEnabled ,BorderWidth :_ab .BorderWidth ,BorderColor :_ab .BorderColor ,Opacity :_ab .Opacity };_ege ,_eca ,_bg :=_eb .Draw (_eeec );if _bg !=nil {return nil ,nil ,nil ,_bg ;};_egf :=&_b .PdfRectangle {};_egf .Llx =_ab .X +_eca .Llx ;_egf .Lly =_ab .Y +_eca .Lly ;_egf .Urx =_ab .X +_eca .Urx ;_egf .Ury =_ab .Y +_eca .Ury ;return _ege ,_eca ,_egf ,nil ;};func (_ggef *AppearanceStyle )processDA (_agb *_b .PdfField ,_ddce *_e .ContentStreamOperations ,_dag ,_aeec *_b .PdfPageResources ,_gegd *_e .ContentCreator )(*AppearanceFont ,bool ,error ){var _cgab *AppearanceFont ;var _acb bool ;if _ggef .Fonts !=nil {if _ggef .Fonts .Fallback !=nil {_cgab =_ggef .Fonts .Fallback ;};if _affd :=_ggef .Fonts .FieldFallbacks ;_affd !=nil {if _ggfg ,_gedc :=_affd [_agb .PartialName ()];_gedc {_cgab =_ggfg ;}else if _fdfb ,_fegd :=_agb .FullName ();_fegd ==nil {if _faeg ,_fag :=_affd [_fdfb ];_fag {_cgab =_faeg ;};};};_acb =_ggef .Fonts .ForceReplace ;};var _gde string ;var _ggg float64 ;var _afdg bool ;if _ddce !=nil {for _ ,_ace :=range *_ddce {if _ace .Operand =="\u0054\u0066"&&len (_ace .Params )==2{if _gace ,_caabd :=_afb .GetNameVal (_ace .Params [0]);_caabd {_gde =_gace ;};if _cfaa ,_ecag :=_afb .GetNumberAsFloat (_ace .Params [1]);_ecag ==nil {_ggg =_cfaa ;};_afdg =true ;continue ;};_gegd .AddOperand (*_ace );};};var _feab *AppearanceFont ;var _abe _afb .PdfObject ;if _acb &&_cgab !=nil {_feab =_cgab ;}else {if _dag !=nil &&_gde !=""{if _gfc ,_efbf :=_dag .GetFontByName (*_afb .MakeName (_gde ));_efbf {if _fbga ,_cbaa :=_b .NewPdfFontFromPdfObject (_gfc );_cbaa ==nil {_abe =_gfc ;_feab =&AppearanceFont {Name :_gde ,Font :_fbga ,Size :_ggg };}else {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_cbaa );};};};if _feab ==nil &&_cgab !=nil {_feab =_cgab ;};if _feab ==nil {_fdfa ,_gbdd :=_b .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _gbdd !=nil {return nil ,false ,_gbdd ;};_feab =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_fdfa ,Size :_ggg };};};_dfcg :=*_afb .MakeName (_feab .Name );if _abe ==nil {_abe =_feab .Font .ToPdfObject ();};if _dag !=nil &&!_dag .HasFontByName (_dfcg ){_dag .SetFontByName (_dfcg ,_abe );};if _aeec !=nil &&!_aeec .HasFontByName (_dfcg ){_aeec .SetFontByName (_dfcg ,_abe );};return _feab ,_afdg ,nil ;};func (_fdg *AppearanceStyle )applyRotation (_baca *_afb .PdfObjectDictionary ,_dbgb ,_dffc float64 ,_ddeb *_e .ContentCreator )(float64 ,float64 ){if !_fdg .AllowMK {return _dbgb ,_dffc ;};if _baca ==nil {return _dbgb ,_dffc ;};_faf ,_ :=_afb .GetNumberAsFloat (_baca .Get ("\u0052"));if _faf ==0{return _dbgb ,_dffc ;};_abf :=-_faf ;_gedf :=_ae .Path {Points :[]_ae .Point {_ae .NewPoint (0,0).Rotate (_abf ),_ae .NewPoint (_dbgb ,0).Rotate (_abf ),_ae .NewPoint (0,_dffc ).Rotate (_abf ),_ae .NewPoint (_dbgb ,_dffc ).Rotate (_abf )}}.GetBoundingBox ();_ddeb .RotateDeg (_faf );_ddeb .Translate (_gedf .X ,_gedf .Y );return _gedf .Width ,_gedf .Height ;};type quadding int ;

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_b .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _b .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _b .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _b .PdfColor ;};func _bbg (_dgg *_b .PdfAnnotationWidget ,_ba *_b .PdfFieldText ,_egee *_b .PdfPageResources ,_dege AppearanceStyle )(*_afb .PdfObjectDictionary ,error ){_aee :=_b .NewPdfPageResources ();_bef ,_cbe :=_afb .GetArray (_dgg .Rect );if !_cbe {return nil ,_ec .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_ffg ,_bdd :=_b .NewPdfRectangle (*_bef );if _bdd !=nil {return nil ,_bdd ;};_cc ,_beb :=_ffg .Width (),_ffg .Height ();_fce ,_cdd :=_cc ,_beb ;_ac ,_ddf :=_afb .GetDict (_dgg .MK );if _ddf {_fffc ,_ :=_afb .GetDict (_dgg .BS );_cab :=_dege .applyAppearanceCharacteristics (_ac ,_fffc ,nil );if _cab !=nil {return nil ,_cab ;};};_eed ,_ddf :=_afb .GetIntVal (_ba .MaxLen );if !_ddf {return nil ,_ec .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if _eed <=0{return nil ,_ec .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bdc :=float64 (_cc )/float64 (_eed );_ed ,_bdd :=_e .NewContentStreamParser (_ccf (_ba .PdfField )).Parse ();if _bdd !=nil {return nil ,_bdd ;};_fea :=_e .NewContentCreator ();if _dege .BorderSize > 0{_eedc (_fea ,_dege ,_cc ,_beb );};if _dege .DrawAlignmentReticle {_aaa :=_dege ;_aaa .BorderSize =0.2;_fac (_fea ,_aaa ,_cc ,_beb );};_fea .Add_BMC ("\u0054\u0078");_fea .Add_q ();_cc ,_beb =_dege .applyRotation (_ac ,_cc ,_beb ,_fea );_fea .Add_BT ();_cge ,_cacb ,_bdd :=_dege .processDA (_ba .PdfField ,_ed ,_egee ,_aee ,_fea );if _bdd !=nil {return nil ,_bdd ;};_efe :=_cge .Font ;_dff :=_afb .MakeName (_cge .Name );_bae :=_cge .Size ;_edg :=_bae ==0;if _edg &&_cacb {_bae =_beb *_dege .AutoFontSizeFraction ;};_ebd :=_efe .Encoder ();if _ebd ==nil {_d .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_ebd =_db .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _aba string ;if _dfc ,_acf :=_afb .GetString (_ba .V );_acf {_aba =_dfc .Decoded ();};_fea .Add_Tf (*_dff ,_bae );var _aab float64 ;for _ ,_acfa :=range _aba {_fed ,_ecg :=_efe .GetRuneMetrics (_acfa );if !_ecg {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_acfa );continue ;};_ddc :=_fed .Wy ;if int (_ddc )<=0{_ddc =_fed .Wx ;};if _ddc > _aab {_aab =_ddc ;};};if int (_aab )==0{_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");_aab =1000;};_cgc ,_bdd :=_efe .GetFontDescriptor ();if _bdd !=nil {_d .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _gef float64 ;if _cgc !=nil {_gef ,_bdd =_cgc .GetCapHeight ();if _bdd !=nil {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_bdd );};};if int (_gef )<=0{_d .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_gef =1000.0;};_gac :=_gef /1000.0*_bae ;_dcg :=0.0;_dde :=1.0*_bae *(_aab /1000.0);{_bbd :=_dde ;if _edg &&_dcg +_bbd > _beb {_bae =0.95*(_beb -_dcg );_dde =1.0*_bae ;_bbd =_dde ;_gac =_gef /1000.0*_bae ;};if _beb > _gac {_dcg =(_beb -_gac )/2.0;};};_fea .Add_Td (0,_dcg );if _gda ,_bgc :=_afb .GetIntVal (_ba .Q );_bgc {switch _gda {case 2:if len (_aba )< _eed {_fcea :=float64 (_eed -len (_aba ))*_bdc ;_fea .Add_Td (_fcea ,0);};};};for _agg ,_aaf :=range _aba {_fa :=2.0;_bc :=string (_aaf );if _ebd !=nil {_gfg ,_eab :=_efe .GetRuneMetrics (_aaf );if !_eab {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_aaf );continue ;};_bc =string (_ebd .Encode (_bc ));_fcg :=_bae *_gfg .Wx /1000.0;_bff :=(_bdc -_fcg )/2;_fa =_bff ;};_fea .Add_Td (_fa ,0);_fea .Add_Tj (*_afb .MakeString (_bc ));if _agg !=len (_aba )-1{_fea .Add_Td (_bdc -_fa ,0);};};_fea .Add_ET ();_fea .Add_Q ();_fea .Add_EMC ();_bec :=_b .NewXObjectForm ();_bec .Resources =_aee ;_bec .BBox =_afb .MakeArrayFromFloats ([]float64 {0,0,_fce ,_cdd });_bec .SetContentStream (_fea .Bytes (),_eaeb ());_afd :=_afb .MakeDict ();_afd .Set ("\u004e",_bec .ToPdfObject ());return _afd ,nil ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};func _gb (_ff CircleAnnotationDef )(*_afb .PdfObjectDictionary ,*_b .PdfRectangle ,error ){_cfe :=_b .NewXObjectForm ();_cfe .Resources =_b .NewPdfPageResources ();_fg :="";if _ff .Opacity < 1.0{_ecd :=_afb .MakeDict ();_ecd .Set ("\u0063\u0061",_afb .MakeFloat (_ff .Opacity ));_ecd .Set ("\u0043\u0041",_afb .MakeFloat (_ff .Opacity ));_gg :=_cfe .Resources .AddExtGState ("\u0067\u0073\u0031",_ecd );if _gg !=nil {_d .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_gg ;};_fg ="\u0067\u0073\u0031";};_gea ,_ca ,_fb ,_cfd :=_afg (_ff ,_fg );if _cfd !=nil {return nil ,nil ,_cfd ;};_cfd =_cfe .SetContentStream (_gea ,nil );if _cfd !=nil {return nil ,nil ,_cfd ;};_cfe .BBox =_ca .ToPdfObject ();_eee :=_afb .MakeDict ();_eee .Set ("\u004e",_cfe .ToPdfObject ());return _eee ,_fb ,nil ;};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specify a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};func _ccf (_ecaf *_b .PdfField )string {if _ecaf ==nil {return "";};_dad ,_fcb :=_ecaf .GetContext ().(*_b .PdfFieldText );if !_fcb {return _ccf (_ecaf .Parent );};if _dad .DA !=nil {return _dad .DA .Str ();};return _ccf (_dad .Parent );};type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_b .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_b .PdfColorDeviceRGB ;Opacity float64 ;};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_b .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_b .NewPdfColorDeviceGray (0),BorderColor :_b .NewPdfColorDeviceGray (0),FillColor :_b .NewPdfColorDeviceGray (1)};};

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_b .PdfAnnotation ,error ){_dddg :=_b .NewPdfAnnotationLine ();_dddg .L =_afb .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_eaefc :=_afb .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle1 ==_ae .LineEndingStyleArrow {_eaefc =_afb .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_fbc :=_afb .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_ae .LineEndingStyleArrow {_fbc =_afb .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_dddg .LE =_afb .MakeArray (_eaefc ,_fbc );if lineDef .Opacity < 1.0{_dddg .CA =_afb .MakeFloat (lineDef .Opacity );};_bgce ,_dcegg ,_ggbf :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_dddg .IC =_afb .MakeArrayFromFloats ([]float64 {_bgce ,_dcegg ,_ggbf });_dddg .C =_afb .MakeArrayFromFloats ([]float64 {_bgce ,_dcegg ,_ggbf });_ffe :=_b .NewBorderStyle ();_ffe .SetBorderWidth (lineDef .LineWidth );_dddg .BS =_ffe .ToPdfObject ();_fcad ,_gbfb ,_ddegc :=_ebcg (lineDef );if _ddegc !=nil {return nil ,_ddegc ;};_dddg .AP =_fcad ;_dddg .Rect =_afb .MakeArrayFromFloats ([]float64 {_gbfb .Llx ,_gbfb .Lly ,_gbfb .Urx ,_gbfb .Ury });return _dddg .PdfAnnotation ,nil ;};func _gfb (_dgf *_b .PdfField ,_ddeg ,_bfb float64 ,_gbdc string ,_fccf AppearanceStyle ,_ggfe *_e .ContentStreamOperations ,_geae *_b .PdfPageResources ,_gegb *_afb .PdfObjectDictionary )(*_b .XObjectForm ,error ){_beg :=_b .NewPdfPageResources ();_agf ,_fgd :=_ddeg ,_bfb ;_geb :=_e .NewContentCreator ();if _fccf .BorderSize > 0{_eedc (_geb ,_fccf ,_ddeg ,_bfb );};if _fccf .DrawAlignmentReticle {_efb :=_fccf ;_efb .BorderSize =0.2;_fac (_geb ,_efb ,_ddeg ,_bfb );};_geb .Add_BMC ("\u0054\u0078");_geb .Add_q ();_geb .Add_BT ();_ddeg ,_bfb =_fccf .applyRotation (_gegb ,_ddeg ,_bfb ,_geb );_afab ,_fffa ,_ccg :=_fccf .processDA (_dgf ,_ggfe ,_geae ,_beg ,_geb );if _ccg !=nil {return nil ,_ccg ;};_ebe :=_afab .Font ;_fba :=_afab .Size ;_acaa :=_afb .MakeName (_afab .Name );_dac :=_fba ==0;if _dac &&_fffa {_fba =_bfb *_fccf .AutoFontSizeFraction ;};_aad :=_ebe .Encoder ();if _aad ==nil {_d .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_aad =_db .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_gbdc )==0{return nil ,nil ;};_fbdg :=2.0;_ecf :=0.0;if _aad !=nil {for _ ,_ged :=range _gbdc {_gbf ,_efc :=_ebe .GetRuneMetrics (_ged );if !_efc {_d .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_ged );continue ;};_ecf +=_gbf .Wx ;};_gbdc =string (_aad .Encode (_gbdc ));};if _fba ==0||_dac &&_ecf > 0&&_fbdg +_ecf *_fba /1000.0> _ddeg {_fba =0.95*1000.0*(_ddeg -_fbdg )/_ecf ;};_fcf :=1.0*_fba ;_fdc :=2.0;{_ecdd :=_fcf ;if _dac &&_fdc +_ecdd > _bfb {_fba =0.95*(_bfb -_fdc );_fcf =1.0*_fba ;_ecdd =_fcf ;};if _bfb > _ecdd {_fdc =(_bfb -_ecdd )/2.0;_fdc +=1.50;};};_geb .Add_Tf (*_acaa ,_fba );_geb .Add_Td (_fbdg ,_fdc );_geb .Add_Tj (*_afb .MakeString (_gbdc ));_geb .Add_ET ();_geb .Add_Q ();_geb .Add_EMC ();_ffga :=_b .NewXObjectForm ();_ffga .Resources =_beg ;_ffga .BBox =_afb .MakeArrayFromFloats ([]float64 {0,0,_agf ,_fgd });_ffga .SetContentStream (_geb .Bytes (),_eaeb ());return _ffga ,nil ;};func _abd (_gaf RectangleAnnotationDef )(*_afb .PdfObjectDictionary ,*_b .PdfRectangle ,error ){_aaed :=_b .NewXObjectForm ();_aaed .Resources =_b .NewPdfPageResources ();_ebb :="";if _gaf .Opacity < 1.0{_ebad :=_afb .MakeDict ();_ebad .Set ("\u0063\u0061",_afb .MakeFloat (_gaf .Opacity ));_ebad .Set ("\u0043\u0041",_afb .MakeFloat (_gaf .Opacity ));_gbaa :=_aaed .Resources .AddExtGState ("\u0067\u0073\u0031",_ebad );if _gbaa !=nil {_d .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_gbaa ;};_ebb ="\u0067\u0073\u0031";};_abba ,_fbdb ,_cege ,_adfa :=_fbce (_gaf ,_ebb );if _adfa !=nil {return nil ,nil ,_adfa ;};_adfa =_aaed .SetContentStream (_abba ,nil );if _adfa !=nil {return nil ,nil ,_adfa ;};_aaed .BBox =_fbdb .ToPdfObject ();_ece :=_afb .MakeDict ();_ece .Set ("\u004e",_aaed .ToPdfObject ());return _ece ,_cege ,nil ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_b .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_b .PdfColorDeviceRGB ;Opacity float64 ;};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};func _bfe (_ddd *_b .PdfAcroForm ,_geg *_b .PdfAnnotationWidget ,_cbea *_b .PdfFieldChoice ,_ggb AppearanceStyle )(*_afb .PdfObjectDictionary ,error ){_cae ,_bbdd :=_afb .GetArray (_geg .Rect );if !_bbdd {return nil ,_ec .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_gbae ,_gbcf :=_b .NewPdfRectangle (*_cae );if _gbcf !=nil {return nil ,_gbcf ;};_aaad ,_agde :=_gbae .Width (),_gbae .Height ();_d .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_geg .BS );_bab ,_gbcf :=_e .NewContentStreamParser (_ccf (_cbea .PdfField )).Parse ();if _gbcf !=nil {return nil ,_gbcf ;};_bbed ,_eaa :=_afb .GetDict (_geg .MK );if _eaa {_ggf ,_ :=_afb .GetDict (_geg .BS );_dddd :=_ggb .applyAppearanceCharacteristics (_bbed ,_ggf ,nil );if _dddd !=nil {return nil ,_dddd ;};};_ecb :=_afb .MakeDict ();for _ ,_dcgd :=range _cbea .Opt .Elements (){if _eged ,_agge :=_afb .GetArray (_dcgd );_agge &&_eged .Len ()==2{_dcgd =_eged .Get (1);};var _bcf string ;if _cdgg ,_cff :=_afb .GetString (_dcgd );_cff {_bcf =_cdgg .Decoded ();}else if _gbe ,_fee :=_afb .GetName (_dcgd );_fee {_bcf =_gbe .String ();}else {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_dcgd );return nil ,_ec .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_bcf )> 0{_edf ,_fcd :=_gfb (_cbea .PdfField ,_aaad ,_agde ,_bcf ,_ggb ,_bab ,_ddd .DR ,_bbed );if _fcd !=nil {return nil ,_fcd ;};_ecb .Set (*_afb .MakeName (_bcf ),_edf .ToPdfObject ());};};_fdf :=_afb .MakeDict ();_fdf .Set ("\u004e",_ecb );return _fdf ,nil ;};

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_b .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If size is 0, a default font size will be used.
// The default font size is calculated using the available annotation
// height and the AutoFontSizeFraction of the AppearanceStyle.
Size float64 ;};func _ebcg (_gedb LineAnnotationDef )(*_afb .PdfObjectDictionary ,*_b .PdfRectangle ,error ){_dggd :=_b .NewXObjectForm ();_dggd .Resources =_b .NewPdfPageResources ();_bcd :="";if _gedb .Opacity < 1.0{_gdf :=_afb .MakeDict ();_gdf .Set ("\u0063\u0061",_afb .MakeFloat (_gedb .Opacity ));_acbb :=_dggd .Resources .AddExtGState ("\u0067\u0073\u0031",_gdf );if _acbb !=nil {_d .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_acbb ;};_bcd ="\u0067\u0073\u0031";};_cfbg ,_gbb ,_ebfb ,_fgda :=_dggg (_gedb ,_bcd );if _fgda !=nil {return nil ,nil ,_fgda ;};_fgda =_dggd .SetContentStream (_cfbg ,nil );if _fgda !=nil {return nil ,nil ,_fgda ;};_dggd .BBox =_gbb .ToPdfObject ();_gbda :=_afb .MakeDict ();_gbda .Set ("\u004e",_dggd .ToPdfObject ());return _gbda ,_ebfb ,nil ;};func _eaeb ()_afb .StreamEncoder {return _afb .NewFlateEncoder ()};func _abcg (_ded *_b .PdfAnnotationWidget ,_eacg *_b .PdfFieldButton ,_ddff *_b .PdfPageResources ,_eff AppearanceStyle )(*_afb .PdfObjectDictionary ,error ){_gcdf ,_dcf :=_afb .GetArray (_ded .Rect );if !_dcf {return nil ,_ec .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_bcc ,_efac :=_b .NewPdfRectangle (*_gcdf );if _efac !=nil {return nil ,_efac ;};_cbf ,_ecdf :=_bcc .Width (),_bcc .Height ();_gfa ,_cfcb :=_cbf ,_ecdf ;_d .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_ded .BS );_cde ,_efac :=_b .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _efac !=nil {return nil ,_efac ;};_afc ,_fbda :=_afb .GetDict (_ded .MK );if _fbda {_cggg ,_ :=_afb .GetDict (_ded .BS );_bbe :=_eff .applyAppearanceCharacteristics (_afc ,_cggg ,_cde );if _bbe !=nil {return nil ,_bbe ;};};_gdg :=_b .NewXObjectForm ();{_bbde :=_e .NewContentCreator ();if _eff .BorderSize > 0{_eedc (_bbde ,_eff ,_cbf ,_ecdf );};if _eff .DrawAlignmentReticle {_adf :=_eff ;_adf .BorderSize =0.2;_fac (_bbde ,_adf ,_cbf ,_ecdf );};_cbf ,_ecdf =_eff .applyRotation (_afc ,_cbf ,_ecdf ,_bbde );_dce :=_eff .AutoFontSizeFraction *_ecdf ;_eeg ,_dca :=_cde .GetRuneMetrics (_eff .CheckmarkRune );if !_dca {return nil ,_ec .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_aeb :=_cde .Encoder ();_fcc :=_aeb .Encode (string (_eff .CheckmarkRune ));_deeg :=_eeg .Wx *_dce /1000.0;_aca :=705.0;_cdgd :=_aca /1000.0*_dce ;_ebf :=2.0;_fd :=1.0;if _deeg < _cbf {_ebf =(_cbf -_deeg )/2.0;};if _cdgd < _ecdf {_fd =(_ecdf -_cdgd )/2.0;};_bbde .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_dce ).Add_Td (_ebf ,_fd ).Add_Tj (*_afb .MakeStringFromBytes (_fcc )).Add_ET ().Add_Q ();_gdg .Resources =_b .NewPdfPageResources ();_gdg .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_cde .ToPdfObject ());_gdg .BBox =_afb .MakeArrayFromFloats ([]float64 {0,0,_gfa ,_cfcb });_gdg .SetContentStream (_bbde .Bytes (),_eaeb ());};_cdaa :=_b .NewXObjectForm ();{_aff :=_e .NewContentCreator ();if _eff .BorderSize > 0{_eedc (_aff ,_eff ,_cbf ,_ecdf );};_cdaa .BBox =_afb .MakeArrayFromFloats ([]float64 {0,0,_gfa ,_cfcb });_cdaa .SetContentStream (_aff .Bytes (),_eaeb ());};_dbb :=_afb .MakeDict ();_dbb .Set ("\u004f\u0066\u0066",_cdaa .ToPdfObject ());_dbb .Set ("\u0059\u0065\u0073",_gdg .ToPdfObject ());_ccc :=_afb .MakeDict ();_ccc .Set ("\u004e",_dbb );return _ccc ,nil ;};func (_edc *AppearanceStyle )applyAppearanceCharacteristics (_fae *_afb .PdfObjectDictionary ,_baa *_afb .PdfObjectDictionary ,_ddea *_b .PdfFont )error {if !_edc .AllowMK {return nil ;};if _baa !=nil {if _adb ,_cgb :=_afb .GetNumberAsFloat (_baa .Get ("\u0057"));_cgb ==nil {_edc .BorderSize =_adb ;};};if CA ,_aef :=_afb .GetString (_fae .Get ("\u0043\u0041"));_aef &&_ddea !=nil {_abb :=CA .Bytes ();if len (_abb )!=0{_befd :=[]rune (_ddea .Encoder ().Decode (_abb ));if len (_befd )==1{_edc .CheckmarkRune =_befd [0];};};};if BC ,_fgbe :=_afb .GetArray (_fae .Get ("\u0042\u0043"));_fgbe {_efcf ,_gca :=BC .ToFloat64Array ();if _gca !=nil {return _gca ;};switch len (_efcf ){case 1:_edc .BorderColor =_b .NewPdfColorDeviceGray (_efcf [0]);case 3:_edc .BorderColor =_b .NewPdfColorDeviceRGB (_efcf [0],_efcf [1],_efcf [2]);case 4:_edc .BorderColor =_b .NewPdfColorDeviceCMYK (_efcf [0],_efcf [1],_efcf [2],_efcf [3]);default:_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_efcf ));};};if BG ,_gcec :=_afb .GetArray (_fae .Get ("\u0042\u0047"));_gcec {_edfb ,_dceg :=BG .ToFloat64Array ();if _dceg !=nil {return _dceg ;};switch len (_edfb ){case 1:_edc .FillColor =_b .NewPdfColorDeviceGray (_edfb [0]);case 3:_edc .FillColor =_b .NewPdfColorDeviceRGB (_edfb [0],_edfb [1],_edfb [2]);case 4:_edc .FillColor =_b .NewPdfColorDeviceCMYK (_edfb [0],_edfb [1],_edfb [2],_edfb [3]);default:_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_edfb ));};};return nil ;};func _eedc (_feed *_e .ContentCreator ,_ffc AppearanceStyle ,_bad ,_gce float64 ){_feed .Add_q ().Add_re (0,0,_bad ,_gce ).Add_w (_ffc .BorderSize ).SetStrokingColor (_ffc .BorderColor ).SetNonStrokingColor (_ffc .FillColor ).Add_B ().Add_Q ();};func _fbce (_gdc RectangleAnnotationDef ,_abcga string )([]byte ,*_b .PdfRectangle ,*_b .PdfRectangle ,error ){_agc :=_ae .Rectangle {X :0,Y :0,Width :_gdc .Width ,Height :_gdc .Height ,FillEnabled :_gdc .FillEnabled ,FillColor :_gdc .FillColor ,BorderEnabled :_gdc .BorderEnabled ,BorderWidth :2*_gdc .BorderWidth ,BorderColor :_gdc .BorderColor ,Opacity :_gdc .Opacity };_ddfag ,_ffd ,_bdf :=_agc .Draw (_abcga );if _bdf !=nil {return nil ,nil ,nil ,_bdf ;};_agga :=&_b .PdfRectangle {};_agga .Llx =_gdc .X +_ffd .Llx ;_agga .Lly =_gdc .Y +_ffd .Lly ;_agga .Urx =_gdc .X +_ffd .Urx ;_agga .Ury =_gdc .Y +_ffd .Ury ;return _ddfag ,_ffd ,_agga ,nil ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_ebge FieldAppearance )WrapContentStream (page *_b .PdfPage )error {_daa ,_ceb :=page .GetAllContentStreams ();if _ceb !=nil {return _ceb ;};_dgdg :=_e .NewContentStreamParser (_daa );_cccb ,_ceb :=_dgdg .Parse ();if _ceb !=nil {return _ceb ;};_cccb .WrapIfNeeded ();_fdfbf :=[]string {_cccb .String ()};return page .SetContentStreams (_fdfbf ,_eaeb ());};func _fac (_fca *_e .ContentCreator ,_ffa AppearanceStyle ,_cee ,_cba float64 ){_fca .Add_q ().Add_re (0,0,_cee ,_cba ).Add_re (0,_cba /2,_cee ,_cba /2).Add_re (0,0,_cee ,_cba ).Add_re (_cee /2,0,_cee /2,_cba ).Add_w (_ffa .BorderSize ).SetStrokingColor (_ffa .BorderColor ).SetNonStrokingColor (_ffa .FillColor ).Add_B ().Add_Q ();};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_b .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_b .PdfFieldChoice ,error ){if page ==nil {return nil ,_ec .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_ec .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_ec .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_eeed :=_b .NewPdfField ();_bcg :=&_b .PdfFieldChoice {};_eeed .SetContext (_bcg );_bcg .PdfField =_eeed ;_bcg .T =_afb .MakeString (name );_bcg .Opt =_afb .MakeArray ();for _ ,_dba :=range opt .Choices {_bcg .Opt .Append (_afb .MakeString (_dba ));};_bcg .SetFlag (_b .FieldFlagCombo );_dgca :=_b .NewPdfAnnotationWidget ();_dgca .Rect =_afb .MakeArrayFromFloats (rect );_dgca .P =page .ToPdfObject ();_dgca .F =_afb .MakeInteger (4);_dgca .Parent =_bcg .ToPdfObject ();_bcg .Annotations =append (_bcg .Annotations ,_dgca );return _bcg ,nil ;};

// SetStyle applies appearance `style` to `fa`.
func (_eec *FieldAppearance )SetStyle (style AppearanceStyle ){_eec ._bb =&style };

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_afe FieldAppearance )GenerateAppearanceDict (form *_b .PdfAcroForm ,field *_b .PdfField ,wa *_b .PdfAnnotationWidget )(*_afb .PdfObjectDictionary ,error ){_d .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );_ ,_dc :=field .GetContext ().(*_b .PdfFieldText );_gc ,_agd :=_afb .GetDict (wa .AP );if _agd &&_afe .OnlyIfMissing &&(!_dc ||!_afe .RegenerateTextFields ){_d .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");return _gc ,nil ;};if form .DR ==nil {form .DR =_b .NewPdfPageResources ();};switch _de :=field .GetContext ().(type ){case *_b .PdfFieldText :_deg :=_de ;switch {case _deg .Flags ().Has (_b .FieldFlagPassword ):return nil ,nil ;case _deg .Flags ().Has (_b .FieldFlagFileSelect ):return nil ,nil ;case _deg .Flags ().Has (_b .FieldFlagComb ):if _deg .MaxLen !=nil {_fgb ,_dg :=_bbg (wa ,_deg ,form .DR ,_afe .Style ());if _dg !=nil {return nil ,_dg ;};return _fgb ,nil ;};};_gag ,_fbb :=_cdg (wa ,_deg ,form .DR ,_afe .Style ());if _fbb !=nil {return nil ,_fbb ;};return _gag ,nil ;case *_b .PdfFieldButton :_egd :=_de ;if _egd .IsCheckbox (){_dcd ,_dgd :=_abcg (wa ,_egd ,form .DR ,_afe .Style ());if _dgd !=nil {return nil ,_dgd ;};return _dcd ,nil ;};_d .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_egd .GetType ());case *_b .PdfFieldChoice :_bea :=_de ;switch {case _bea .Flags ().Has (_b .FieldFlagCombo ):_degf ,_afga :=_bfe (form ,wa ,_bea ,_afe .Style ());if _afga !=nil {return nil ,_afga ;};return _degf ,nil ;default:_d .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_bea .Flags ().String ());};default:_d .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_de );};return nil ,nil ;};