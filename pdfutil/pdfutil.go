//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package pdfutil ;import (_g "github.com/unidoc/unipdf/v3/common";_fe "github.com/unidoc/unipdf/v3/contentstream";_f "github.com/unidoc/unipdf/v3/contentstream/draw";_gb "github.com/unidoc/unipdf/v3/core";_cc "github.com/unidoc/unipdf/v3/model";);

// NormalizePage performs the following operations on the passed in page:
//   - Normalize the page rotation.
//     Rotates the contents of the page according to the Rotate entry, thus
//     flattening the rotation. The Rotate entry of the page is set to nil.
//   - Normalize the media box.
//     If the media box of the page is offsetted (Llx != 0 or Lly != 0),
//     the contents of the page are translated to (-Llx, -Lly). After
//     normalization, the media box is updated (Llx and Lly are set to 0 and
//     Urx and Ury are updated accordingly).
//   - Normalize the crop box.
//     The crop box of the page is updated based on the previous operations.
//
// After normalization, the page should look the same if openend using a
// PDF viewer.
// NOTE: This function does not normalize annotations, outlines other parts
// that are not part of the basic geometry and page content streams.
func NormalizePage (page *_cc .PdfPage )error {_a ,_cb :=page .GetMediaBox ();if _cb !=nil {return _cb ;};_gbb ,_cb :=page .GetRotate ();if _cb !=nil {_g .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_cb .Error ());
};_gd :=_gbb %360!=0&&_gbb %90==0;_a .Normalize ();_ae ,_b ,_fa ,_fc :=_a .Llx ,_a .Lly ,_a .Width (),_a .Height ();_bb :=_ae !=0||_b !=0;if !_gd &&!_bb {return nil ;};_e :=func (_ab ,_af ,_d float64 )_f .BoundingBox {return _f .Path {Points :[]_f .Point {_f .NewPoint (0,0).Rotate (_d ),_f .NewPoint (_ab ,0).Rotate (_d ),_f .NewPoint (0,_af ).Rotate (_d ),_f .NewPoint (_ab ,_af ).Rotate (_d )}}.GetBoundingBox ();
};_fcd :=_fe .NewContentCreator ();var _da float64 ;if _gd {_da =-float64 (_gbb );_db :=_e (_fa ,_fc ,_da );_fcd .Translate ((_db .Width -_fa )/2+_fa /2,(_db .Height -_fc )/2+_fc /2);_fcd .RotateDeg (_da );_fcd .Translate (-_fa /2,-_fc /2);_fa ,_fc =_db .Width ,_db .Height ;
};if _bb {_fcd .Translate (-_ae ,-_b );};_bbf :=_fcd .Operations ();_cd ,_cb :=_gb .MakeStream (_bbf .Bytes (),_gb .NewFlateEncoder ());if _cb !=nil {return _cb ;};_bg :=_gb .MakeArray (_cd );_bg .Append (page .GetContentStreamObjs ()...);*_a =_cc .PdfRectangle {Urx :_fa ,Ury :_fc };
if _bd :=page .CropBox ;_bd !=nil {_bd .Normalize ();_ccb ,_ce ,_ag ,_bf :=_bd .Llx -_ae ,_bd .Lly -_b ,_bd .Width (),_bd .Height ();if _gd {_dag :=_e (_ag ,_bf ,_da );_ag ,_bf =_dag .Width ,_dag .Height ;};*_bd =_cc .PdfRectangle {Llx :_ccb ,Lly :_ce ,Urx :_ccb +_ag ,Ury :_ce +_bf };
};_g .Log .Debug ("\u0052\u006f\u0074\u0061\u0074\u0065\u003d\u0025\u0066\u00b0\u0020\u004f\u0070\u0073\u003d%\u0071 \u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078\u003d\u0025\u002e\u0032\u0066",_da ,_bbf ,_a );page .Contents =_bg ;page .Rotate =nil ;
return nil ;};